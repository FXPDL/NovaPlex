

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Jun 20 11:03:26 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK5,global,class=CODE,delta=2
     8                           	psect	idataBANK6,global,class=CODE,delta=2
     9                           	psect	idataBANK7,global,class=CODE,delta=2
    10                           	psect	idataBANK8,global,class=CODE,delta=2
    11                           	psect	idataBANK9,global,class=CODE,delta=2
    12                           	psect	idataBIGRAM,global,class=CODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    22                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    23                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    24                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    25                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1
    26                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	inittext,global,class=CODE,delta=2
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2
    34                           	psect	text2,local,class=CODE,merge=1,delta=2
    35                           	psect	text3,local,class=CODE,merge=1,delta=2
    36                           	psect	text4,local,class=CODE,merge=1,delta=2
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2
    39                           	psect	text7,local,class=CODE,merge=1,delta=2
    40                           	psect	text8,local,class=CODE,merge=1,delta=2
    41                           	psect	text9,local,class=CODE,merge=1,delta=2
    42                           	psect	text10,local,class=CODE,merge=1,delta=2
    43                           	psect	text11,local,class=CODE,merge=1,delta=2
    44                           	psect	text12,local,class=CODE,merge=1,delta=2
    45                           	psect	text13,local,class=CODE,merge=1,delta=2
    46                           	psect	text14,local,class=CODE,merge=1,delta=2
    47                           	psect	text15,local,class=CODE,merge=1,delta=2
    48                           	psect	text16,local,class=CODE,merge=1,delta=2
    49                           	psect	text17,local,class=CODE,merge=1,delta=2
    50                           	psect	text18,local,class=CODE,merge=1,delta=2
    51                           	psect	text19,local,class=CODE,merge=1,delta=2
    52                           	psect	text20,local,class=CODE,merge=1,delta=2
    53                           	psect	text21,local,class=CODE,merge=1,delta=2
    54                           	psect	text22,local,class=CODE,merge=1,delta=2
    55                           	psect	text23,local,class=CODE,merge=1,delta=2
    56                           	psect	text24,local,class=CODE,merge=1,delta=2
    57                           	psect	text25,local,class=CODE,merge=1,delta=2
    58                           	psect	text26,local,class=CODE,merge=1,delta=2
    59                           	psect	text27,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
    62                           	dabs	1,0x920,80
    63                           	dabs	1,0x8A0,80
    64                           	dabs	1,0x820,80
    65                           	dabs	1,0x7A0,80
    66                           	dabs	1,0x720,80
    67                           	dabs	1,0x6A0,80
    68                           	dabs	1,0x652,30
    69                           	dabs	1,0x23F2,0,_delay
    70                           	dabs	1,0x7E,2
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0110                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  018F                     	;# 
   131  0190                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  020D                     	;# 
   165  020F                     	;# 
   166  0210                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  0219                     	;# 
   183  021A                     	;# 
   184  021B                     	;# 
   185  021C                     	;# 
   186  021D                     	;# 
   187  021E                     	;# 
   188  021F                     	;# 
   189  028C                     	;# 
   190  028D                     	;# 
   191  0291                     	;# 
   192  0291                     	;# 
   193  0292                     	;# 
   194  0293                     	;# 
   195  0298                     	;# 
   196  0298                     	;# 
   197  0299                     	;# 
   198  029A                     	;# 
   199  029D                     	;# 
   200  029E                     	;# 
   201  029F                     	;# 
   202  030C                     	;# 
   203  030D                     	;# 
   204  0311                     	;# 
   205  0311                     	;# 
   206  0312                     	;# 
   207  0313                     	;# 
   208  0318                     	;# 
   209  0318                     	;# 
   210  0319                     	;# 
   211  031A                     	;# 
   212  031C                     	;# 
   213  031C                     	;# 
   214  031D                     	;# 
   215  031E                     	;# 
   216  038C                     	;# 
   217  038D                     	;# 
   218  0394                     	;# 
   219  0395                     	;# 
   220  0396                     	;# 
   221  040C                     	;# 
   222  040D                     	;# 
   223  0411                     	;# 
   224  0411                     	;# 
   225  0412                     	;# 
   226  0413                     	;# 
   227  0414                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  0418                     	;# 
   232  0418                     	;# 
   233  0419                     	;# 
   234  041A                     	;# 
   235  041B                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  048D                     	;# 
   240  0491                     	;# 
   241  0491                     	;# 
   242  0492                     	;# 
   243  0492                     	;# 
   244  0493                     	;# 
   245  0493                     	;# 
   246  0493                     	;# 
   247  0494                     	;# 
   248  0494                     	;# 
   249  0495                     	;# 
   250  0495                     	;# 
   251  0496                     	;# 
   252  0496                     	;# 
   253  0497                     	;# 
   254  0497                     	;# 
   255  0595                     	;# 
   256  0596                     	;# 
   257  0597                     	;# 
   258  059C                     	;# 
   259  059D                     	;# 
   260  059E                     	;# 
   261  0611                     	;# 
   262  0611                     	;# 
   263  0612                     	;# 
   264  0613                     	;# 
   265  0614                     	;# 
   266  0614                     	;# 
   267  0615                     	;# 
   268  0616                     	;# 
   269  0617                     	;# 
   270  0617                     	;# 
   271  0618                     	;# 
   272  0619                     	;# 
   273  061A                     	;# 
   274  061A                     	;# 
   275  061B                     	;# 
   276  061C                     	;# 
   277  061D                     	;# 
   278  061D                     	;# 
   279  061E                     	;# 
   280  061F                     	;# 
   281  0FE4                     	;# 
   282  0FE5                     	;# 
   283  0FE6                     	;# 
   284  0FE7                     	;# 
   285  0FE8                     	;# 
   286  0FE9                     	;# 
   287  0FEA                     	;# 
   288  0FEB                     	;# 
   289  0FED                     	;# 
   290  0FEE                     	;# 
   291  0FEF                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  008F                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0094                     	;# 
   331  0095                     	;# 
   332  0096                     	;# 
   333  0097                     	;# 
   334  0099                     	;# 
   335  009A                     	;# 
   336  009B                     	;# 
   337  009B                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009E                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  010F                     	;# 
   345  0110                     	;# 
   346  0116                     	;# 
   347  0117                     	;# 
   348  011D                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  018F                     	;# 
   352  0190                     	;# 
   353  0191                     	;# 
   354  0191                     	;# 
   355  0192                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0194                     	;# 
   359  0195                     	;# 
   360  0196                     	;# 
   361  0197                     	;# 
   362  0199                     	;# 
   363  0199                     	;# 
   364  0199                     	;# 
   365  019A                     	;# 
   366  019A                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019C                     	;# 
   376  019D                     	;# 
   377  019D                     	;# 
   378  019D                     	;# 
   379  019E                     	;# 
   380  019E                     	;# 
   381  019E                     	;# 
   382  019F                     	;# 
   383  019F                     	;# 
   384  019F                     	;# 
   385  020D                     	;# 
   386  020F                     	;# 
   387  0210                     	;# 
   388  0211                     	;# 
   389  0211                     	;# 
   390  0212                     	;# 
   391  0212                     	;# 
   392  0213                     	;# 
   393  0213                     	;# 
   394  0214                     	;# 
   395  0214                     	;# 
   396  0215                     	;# 
   397  0215                     	;# 
   398  0215                     	;# 
   399  0216                     	;# 
   400  0216                     	;# 
   401  0217                     	;# 
   402  0217                     	;# 
   403  0219                     	;# 
   404  021A                     	;# 
   405  021B                     	;# 
   406  021C                     	;# 
   407  021D                     	;# 
   408  021E                     	;# 
   409  021F                     	;# 
   410  028C                     	;# 
   411  028D                     	;# 
   412  0291                     	;# 
   413  0291                     	;# 
   414  0292                     	;# 
   415  0293                     	;# 
   416  0298                     	;# 
   417  0298                     	;# 
   418  0299                     	;# 
   419  029A                     	;# 
   420  029D                     	;# 
   421  029E                     	;# 
   422  029F                     	;# 
   423  030C                     	;# 
   424  030D                     	;# 
   425  0311                     	;# 
   426  0311                     	;# 
   427  0312                     	;# 
   428  0313                     	;# 
   429  0318                     	;# 
   430  0318                     	;# 
   431  0319                     	;# 
   432  031A                     	;# 
   433  031C                     	;# 
   434  031C                     	;# 
   435  031D                     	;# 
   436  031E                     	;# 
   437  038C                     	;# 
   438  038D                     	;# 
   439  0394                     	;# 
   440  0395                     	;# 
   441  0396                     	;# 
   442  040C                     	;# 
   443  040D                     	;# 
   444  0411                     	;# 
   445  0411                     	;# 
   446  0412                     	;# 
   447  0413                     	;# 
   448  0414                     	;# 
   449  0415                     	;# 
   450  0416                     	;# 
   451  0417                     	;# 
   452  0418                     	;# 
   453  0418                     	;# 
   454  0419                     	;# 
   455  041A                     	;# 
   456  041B                     	;# 
   457  041C                     	;# 
   458  041D                     	;# 
   459  041E                     	;# 
   460  048D                     	;# 
   461  0491                     	;# 
   462  0491                     	;# 
   463  0492                     	;# 
   464  0492                     	;# 
   465  0493                     	;# 
   466  0493                     	;# 
   467  0493                     	;# 
   468  0494                     	;# 
   469  0494                     	;# 
   470  0495                     	;# 
   471  0495                     	;# 
   472  0496                     	;# 
   473  0496                     	;# 
   474  0497                     	;# 
   475  0497                     	;# 
   476  0595                     	;# 
   477  0596                     	;# 
   478  0597                     	;# 
   479  059C                     	;# 
   480  059D                     	;# 
   481  059E                     	;# 
   482  0611                     	;# 
   483  0611                     	;# 
   484  0612                     	;# 
   485  0613                     	;# 
   486  0614                     	;# 
   487  0614                     	;# 
   488  0615                     	;# 
   489  0616                     	;# 
   490  0617                     	;# 
   491  0617                     	;# 
   492  0618                     	;# 
   493  0619                     	;# 
   494  061A                     	;# 
   495  061A                     	;# 
   496  061B                     	;# 
   497  061C                     	;# 
   498  061D                     	;# 
   499  061D                     	;# 
   500  061E                     	;# 
   501  061F                     	;# 
   502  0FE4                     	;# 
   503  0FE5                     	;# 
   504  0FE6                     	;# 
   505  0FE7                     	;# 
   506  0FE8                     	;# 
   507  0FE9                     	;# 
   508  0FEA                     	;# 
   509  0FEB                     	;# 
   510  0FED                     	;# 
   511  0FEE                     	;# 
   512  0FEF                     	;# 
   513  0000                     	;# 
   514  0001                     	;# 
   515  0002                     	;# 
   516  0003                     	;# 
   517  0004                     	;# 
   518  0005                     	;# 
   519  0006                     	;# 
   520  0007                     	;# 
   521  0008                     	;# 
   522  0009                     	;# 
   523  000A                     	;# 
   524  000B                     	;# 
   525  000C                     	;# 
   526  000D                     	;# 
   527  000E                     	;# 
   528  000F                     	;# 
   529  0010                     	;# 
   530  0011                     	;# 
   531  0012                     	;# 
   532  0013                     	;# 
   533  0014                     	;# 
   534  0015                     	;# 
   535  0016                     	;# 
   536  0016                     	;# 
   537  0017                     	;# 
   538  0018                     	;# 
   539  0019                     	;# 
   540  001A                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  008C                     	;# 
   544  008D                     	;# 
   545  008E                     	;# 
   546  008F                     	;# 
   547  0090                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0093                     	;# 
   551  0094                     	;# 
   552  0095                     	;# 
   553  0096                     	;# 
   554  0097                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  010C                     	;# 
   563  010D                     	;# 
   564  010E                     	;# 
   565  010F                     	;# 
   566  0110                     	;# 
   567  0116                     	;# 
   568  0117                     	;# 
   569  011D                     	;# 
   570  018C                     	;# 
   571  018D                     	;# 
   572  018F                     	;# 
   573  0190                     	;# 
   574  0191                     	;# 
   575  0191                     	;# 
   576  0192                     	;# 
   577  0193                     	;# 
   578  0193                     	;# 
   579  0194                     	;# 
   580  0195                     	;# 
   581  0196                     	;# 
   582  0197                     	;# 
   583  0199                     	;# 
   584  0199                     	;# 
   585  0199                     	;# 
   586  019A                     	;# 
   587  019A                     	;# 
   588  019A                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019C                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019D                     	;# 
   598  019D                     	;# 
   599  019D                     	;# 
   600  019E                     	;# 
   601  019E                     	;# 
   602  019E                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  020D                     	;# 
   607  020F                     	;# 
   608  0210                     	;# 
   609  0211                     	;# 
   610  0211                     	;# 
   611  0212                     	;# 
   612  0212                     	;# 
   613  0213                     	;# 
   614  0213                     	;# 
   615  0214                     	;# 
   616  0214                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0216                     	;# 
   621  0216                     	;# 
   622  0217                     	;# 
   623  0217                     	;# 
   624  0219                     	;# 
   625  021A                     	;# 
   626  021B                     	;# 
   627  021C                     	;# 
   628  021D                     	;# 
   629  021E                     	;# 
   630  021F                     	;# 
   631  028C                     	;# 
   632  028D                     	;# 
   633  0291                     	;# 
   634  0291                     	;# 
   635  0292                     	;# 
   636  0293                     	;# 
   637  0298                     	;# 
   638  0298                     	;# 
   639  0299                     	;# 
   640  029A                     	;# 
   641  029D                     	;# 
   642  029E                     	;# 
   643  029F                     	;# 
   644  030C                     	;# 
   645  030D                     	;# 
   646  0311                     	;# 
   647  0311                     	;# 
   648  0312                     	;# 
   649  0313                     	;# 
   650  0318                     	;# 
   651  0318                     	;# 
   652  0319                     	;# 
   653  031A                     	;# 
   654  031C                     	;# 
   655  031C                     	;# 
   656  031D                     	;# 
   657  031E                     	;# 
   658  038C                     	;# 
   659  038D                     	;# 
   660  0394                     	;# 
   661  0395                     	;# 
   662  0396                     	;# 
   663  040C                     	;# 
   664  040D                     	;# 
   665  0411                     	;# 
   666  0411                     	;# 
   667  0412                     	;# 
   668  0413                     	;# 
   669  0414                     	;# 
   670  0415                     	;# 
   671  0416                     	;# 
   672  0417                     	;# 
   673  0418                     	;# 
   674  0418                     	;# 
   675  0419                     	;# 
   676  041A                     	;# 
   677  041B                     	;# 
   678  041C                     	;# 
   679  041D                     	;# 
   680  041E                     	;# 
   681  048D                     	;# 
   682  0491                     	;# 
   683  0491                     	;# 
   684  0492                     	;# 
   685  0492                     	;# 
   686  0493                     	;# 
   687  0493                     	;# 
   688  0493                     	;# 
   689  0494                     	;# 
   690  0494                     	;# 
   691  0495                     	;# 
   692  0495                     	;# 
   693  0496                     	;# 
   694  0496                     	;# 
   695  0497                     	;# 
   696  0497                     	;# 
   697  0595                     	;# 
   698  0596                     	;# 
   699  0597                     	;# 
   700  059C                     	;# 
   701  059D                     	;# 
   702  059E                     	;# 
   703  0611                     	;# 
   704  0611                     	;# 
   705  0612                     	;# 
   706  0613                     	;# 
   707  0614                     	;# 
   708  0614                     	;# 
   709  0615                     	;# 
   710  0616                     	;# 
   711  0617                     	;# 
   712  0617                     	;# 
   713  0618                     	;# 
   714  0619                     	;# 
   715  061A                     	;# 
   716  061A                     	;# 
   717  061B                     	;# 
   718  061C                     	;# 
   719  061D                     	;# 
   720  061D                     	;# 
   721  061E                     	;# 
   722  061F                     	;# 
   723  0FE4                     	;# 
   724  0FE5                     	;# 
   725  0FE6                     	;# 
   726  0FE7                     	;# 
   727  0FE8                     	;# 
   728  0FE9                     	;# 
   729  0FEA                     	;# 
   730  0FEB                     	;# 
   731  0FED                     	;# 
   732  0FEE                     	;# 
   733  0FEF                     	;# 
   734  0000                     	;# 
   735  0001                     	;# 
   736  0002                     	;# 
   737  0003                     	;# 
   738  0004                     	;# 
   739  0005                     	;# 
   740  0006                     	;# 
   741  0007                     	;# 
   742  0008                     	;# 
   743  0009                     	;# 
   744  000A                     	;# 
   745  000B                     	;# 
   746  000C                     	;# 
   747  000D                     	;# 
   748  000E                     	;# 
   749  000F                     	;# 
   750  0010                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0013                     	;# 
   754  0014                     	;# 
   755  0015                     	;# 
   756  0016                     	;# 
   757  0016                     	;# 
   758  0017                     	;# 
   759  0018                     	;# 
   760  0019                     	;# 
   761  001A                     	;# 
   762  001B                     	;# 
   763  001C                     	;# 
   764  008C                     	;# 
   765  008D                     	;# 
   766  008E                     	;# 
   767  008F                     	;# 
   768  0090                     	;# 
   769  0091                     	;# 
   770  0092                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0099                     	;# 
   777  009A                     	;# 
   778  009B                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  010C                     	;# 
   784  010D                     	;# 
   785  010E                     	;# 
   786  010F                     	;# 
   787  0110                     	;# 
   788  0116                     	;# 
   789  0117                     	;# 
   790  011D                     	;# 
   791  018C                     	;# 
   792  018D                     	;# 
   793  018F                     	;# 
   794  0190                     	;# 
   795  0191                     	;# 
   796  0191                     	;# 
   797  0192                     	;# 
   798  0193                     	;# 
   799  0193                     	;# 
   800  0194                     	;# 
   801  0195                     	;# 
   802  0196                     	;# 
   803  0197                     	;# 
   804  0199                     	;# 
   805  0199                     	;# 
   806  0199                     	;# 
   807  019A                     	;# 
   808  019A                     	;# 
   809  019A                     	;# 
   810  019B                     	;# 
   811  019B                     	;# 
   812  019B                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019C                     	;# 
   816  019C                     	;# 
   817  019C                     	;# 
   818  019D                     	;# 
   819  019D                     	;# 
   820  019D                     	;# 
   821  019E                     	;# 
   822  019E                     	;# 
   823  019E                     	;# 
   824  019F                     	;# 
   825  019F                     	;# 
   826  019F                     	;# 
   827  020D                     	;# 
   828  020F                     	;# 
   829  0210                     	;# 
   830  0211                     	;# 
   831  0211                     	;# 
   832  0212                     	;# 
   833  0212                     	;# 
   834  0213                     	;# 
   835  0213                     	;# 
   836  0214                     	;# 
   837  0214                     	;# 
   838  0215                     	;# 
   839  0215                     	;# 
   840  0215                     	;# 
   841  0216                     	;# 
   842  0216                     	;# 
   843  0217                     	;# 
   844  0217                     	;# 
   845  0219                     	;# 
   846  021A                     	;# 
   847  021B                     	;# 
   848  021C                     	;# 
   849  021D                     	;# 
   850  021E                     	;# 
   851  021F                     	;# 
   852  028C                     	;# 
   853  028D                     	;# 
   854  0291                     	;# 
   855  0291                     	;# 
   856  0292                     	;# 
   857  0293                     	;# 
   858  0298                     	;# 
   859  0298                     	;# 
   860  0299                     	;# 
   861  029A                     	;# 
   862  029D                     	;# 
   863  029E                     	;# 
   864  029F                     	;# 
   865  030C                     	;# 
   866  030D                     	;# 
   867  0311                     	;# 
   868  0311                     	;# 
   869  0312                     	;# 
   870  0313                     	;# 
   871  0318                     	;# 
   872  0318                     	;# 
   873  0319                     	;# 
   874  031A                     	;# 
   875  031C                     	;# 
   876  031C                     	;# 
   877  031D                     	;# 
   878  031E                     	;# 
   879  038C                     	;# 
   880  038D                     	;# 
   881  0394                     	;# 
   882  0395                     	;# 
   883  0396                     	;# 
   884  040C                     	;# 
   885  040D                     	;# 
   886  0411                     	;# 
   887  0411                     	;# 
   888  0412                     	;# 
   889  0413                     	;# 
   890  0414                     	;# 
   891  0415                     	;# 
   892  0416                     	;# 
   893  0417                     	;# 
   894  0418                     	;# 
   895  0418                     	;# 
   896  0419                     	;# 
   897  041A                     	;# 
   898  041B                     	;# 
   899  041C                     	;# 
   900  041D                     	;# 
   901  041E                     	;# 
   902  048D                     	;# 
   903  0491                     	;# 
   904  0491                     	;# 
   905  0492                     	;# 
   906  0492                     	;# 
   907  0493                     	;# 
   908  0493                     	;# 
   909  0493                     	;# 
   910  0494                     	;# 
   911  0494                     	;# 
   912  0495                     	;# 
   913  0495                     	;# 
   914  0496                     	;# 
   915  0496                     	;# 
   916  0497                     	;# 
   917  0497                     	;# 
   918  0595                     	;# 
   919  0596                     	;# 
   920  0597                     	;# 
   921  059C                     	;# 
   922  059D                     	;# 
   923  059E                     	;# 
   924  0611                     	;# 
   925  0611                     	;# 
   926  0612                     	;# 
   927  0613                     	;# 
   928  0614                     	;# 
   929  0614                     	;# 
   930  0615                     	;# 
   931  0616                     	;# 
   932  0617                     	;# 
   933  0617                     	;# 
   934  0618                     	;# 
   935  0619                     	;# 
   936  061A                     	;# 
   937  061A                     	;# 
   938  061B                     	;# 
   939  061C                     	;# 
   940  061D                     	;# 
   941  061D                     	;# 
   942  061E                     	;# 
   943  061F                     	;# 
   944  0FE4                     	;# 
   945  0FE5                     	;# 
   946  0FE6                     	;# 
   947  0FE7                     	;# 
   948  0FE8                     	;# 
   949  0FE9                     	;# 
   950  0FEA                     	;# 
   951  0FEB                     	;# 
   952  0FED                     	;# 
   953  0FEE                     	;# 
   954  0FEF                     	;# 
   955  0000                     	;# 
   956  0001                     	;# 
   957  0002                     	;# 
   958  0003                     	;# 
   959  0004                     	;# 
   960  0005                     	;# 
   961  0006                     	;# 
   962  0007                     	;# 
   963  0008                     	;# 
   964  0009                     	;# 
   965  000A                     	;# 
   966  000B                     	;# 
   967  000C                     	;# 
   968  000D                     	;# 
   969  000E                     	;# 
   970  000F                     	;# 
   971  0010                     	;# 
   972  0011                     	;# 
   973  0012                     	;# 
   974  0013                     	;# 
   975  0014                     	;# 
   976  0015                     	;# 
   977  0016                     	;# 
   978  0016                     	;# 
   979  0017                     	;# 
   980  0018                     	;# 
   981  0019                     	;# 
   982  001A                     	;# 
   983  001B                     	;# 
   984  001C                     	;# 
   985  008C                     	;# 
   986  008D                     	;# 
   987  008E                     	;# 
   988  008F                     	;# 
   989  0090                     	;# 
   990  0091                     	;# 
   991  0092                     	;# 
   992  0093                     	;# 
   993  0094                     	;# 
   994  0095                     	;# 
   995  0096                     	;# 
   996  0097                     	;# 
   997  0099                     	;# 
   998  009A                     	;# 
   999  009B                     	;# 
  1000  009B                     	;# 
  1001  009C                     	;# 
  1002  009D                     	;# 
  1003  009E                     	;# 
  1004  010C                     	;# 
  1005  010D                     	;# 
  1006  010E                     	;# 
  1007  010F                     	;# 
  1008  0110                     	;# 
  1009  0116                     	;# 
  1010  0117                     	;# 
  1011  011D                     	;# 
  1012  018C                     	;# 
  1013  018D                     	;# 
  1014  018F                     	;# 
  1015  0190                     	;# 
  1016  0191                     	;# 
  1017  0191                     	;# 
  1018  0192                     	;# 
  1019  0193                     	;# 
  1020  0193                     	;# 
  1021  0194                     	;# 
  1022  0195                     	;# 
  1023  0196                     	;# 
  1024  0197                     	;# 
  1025  0199                     	;# 
  1026  0199                     	;# 
  1027  0199                     	;# 
  1028  019A                     	;# 
  1029  019A                     	;# 
  1030  019A                     	;# 
  1031  019B                     	;# 
  1032  019B                     	;# 
  1033  019B                     	;# 
  1034  019B                     	;# 
  1035  019B                     	;# 
  1036  019C                     	;# 
  1037  019C                     	;# 
  1038  019C                     	;# 
  1039  019D                     	;# 
  1040  019D                     	;# 
  1041  019D                     	;# 
  1042  019E                     	;# 
  1043  019E                     	;# 
  1044  019E                     	;# 
  1045  019F                     	;# 
  1046  019F                     	;# 
  1047  019F                     	;# 
  1048  020D                     	;# 
  1049  020F                     	;# 
  1050  0210                     	;# 
  1051  0211                     	;# 
  1052  0211                     	;# 
  1053  0212                     	;# 
  1054  0212                     	;# 
  1055  0213                     	;# 
  1056  0213                     	;# 
  1057  0214                     	;# 
  1058  0214                     	;# 
  1059  0215                     	;# 
  1060  0215                     	;# 
  1061  0215                     	;# 
  1062  0216                     	;# 
  1063  0216                     	;# 
  1064  0217                     	;# 
  1065  0217                     	;# 
  1066  0219                     	;# 
  1067  021A                     	;# 
  1068  021B                     	;# 
  1069  021C                     	;# 
  1070  021D                     	;# 
  1071  021E                     	;# 
  1072  021F                     	;# 
  1073  028C                     	;# 
  1074  028D                     	;# 
  1075  0291                     	;# 
  1076  0291                     	;# 
  1077  0292                     	;# 
  1078  0293                     	;# 
  1079  0298                     	;# 
  1080  0298                     	;# 
  1081  0299                     	;# 
  1082  029A                     	;# 
  1083  029D                     	;# 
  1084  029E                     	;# 
  1085  029F                     	;# 
  1086  030C                     	;# 
  1087  030D                     	;# 
  1088  0311                     	;# 
  1089  0311                     	;# 
  1090  0312                     	;# 
  1091  0313                     	;# 
  1092  0318                     	;# 
  1093  0318                     	;# 
  1094  0319                     	;# 
  1095  031A                     	;# 
  1096  031C                     	;# 
  1097  031C                     	;# 
  1098  031D                     	;# 
  1099  031E                     	;# 
  1100  038C                     	;# 
  1101  038D                     	;# 
  1102  0394                     	;# 
  1103  0395                     	;# 
  1104  0396                     	;# 
  1105  040C                     	;# 
  1106  040D                     	;# 
  1107  0411                     	;# 
  1108  0411                     	;# 
  1109  0412                     	;# 
  1110  0413                     	;# 
  1111  0414                     	;# 
  1112  0415                     	;# 
  1113  0416                     	;# 
  1114  0417                     	;# 
  1115  0418                     	;# 
  1116  0418                     	;# 
  1117  0419                     	;# 
  1118  041A                     	;# 
  1119  041B                     	;# 
  1120  041C                     	;# 
  1121  041D                     	;# 
  1122  041E                     	;# 
  1123  048D                     	;# 
  1124  0491                     	;# 
  1125  0491                     	;# 
  1126  0492                     	;# 
  1127  0492                     	;# 
  1128  0493                     	;# 
  1129  0493                     	;# 
  1130  0493                     	;# 
  1131  0494                     	;# 
  1132  0494                     	;# 
  1133  0495                     	;# 
  1134  0495                     	;# 
  1135  0496                     	;# 
  1136  0496                     	;# 
  1137  0497                     	;# 
  1138  0497                     	;# 
  1139  0595                     	;# 
  1140  0596                     	;# 
  1141  0597                     	;# 
  1142  059C                     	;# 
  1143  059D                     	;# 
  1144  059E                     	;# 
  1145  0611                     	;# 
  1146  0611                     	;# 
  1147  0612                     	;# 
  1148  0613                     	;# 
  1149  0614                     	;# 
  1150  0614                     	;# 
  1151  0615                     	;# 
  1152  0616                     	;# 
  1153  0617                     	;# 
  1154  0617                     	;# 
  1155  0618                     	;# 
  1156  0619                     	;# 
  1157  061A                     	;# 
  1158  061A                     	;# 
  1159  061B                     	;# 
  1160  061C                     	;# 
  1161  061D                     	;# 
  1162  061D                     	;# 
  1163  061E                     	;# 
  1164  061F                     	;# 
  1165  0FE4                     	;# 
  1166  0FE5                     	;# 
  1167  0FE6                     	;# 
  1168  0FE7                     	;# 
  1169  0FE8                     	;# 
  1170  0FE9                     	;# 
  1171  0FEA                     	;# 
  1172  0FEB                     	;# 
  1173  0FED                     	;# 
  1174  0FEE                     	;# 
  1175  0FEF                     	;# 
  1176  0000                     	;# 
  1177  0001                     	;# 
  1178  0002                     	;# 
  1179  0003                     	;# 
  1180  0004                     	;# 
  1181  0005                     	;# 
  1182  0006                     	;# 
  1183  0007                     	;# 
  1184  0008                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  000D                     	;# 
  1190  000E                     	;# 
  1191  000F                     	;# 
  1192  0010                     	;# 
  1193  0011                     	;# 
  1194  0012                     	;# 
  1195  0013                     	;# 
  1196  0014                     	;# 
  1197  0015                     	;# 
  1198  0016                     	;# 
  1199  0016                     	;# 
  1200  0017                     	;# 
  1201  0018                     	;# 
  1202  0019                     	;# 
  1203  001A                     	;# 
  1204  001B                     	;# 
  1205  001C                     	;# 
  1206  008C                     	;# 
  1207  008D                     	;# 
  1208  008E                     	;# 
  1209  008F                     	;# 
  1210  0090                     	;# 
  1211  0091                     	;# 
  1212  0092                     	;# 
  1213  0093                     	;# 
  1214  0094                     	;# 
  1215  0095                     	;# 
  1216  0096                     	;# 
  1217  0097                     	;# 
  1218  0099                     	;# 
  1219  009A                     	;# 
  1220  009B                     	;# 
  1221  009B                     	;# 
  1222  009C                     	;# 
  1223  009D                     	;# 
  1224  009E                     	;# 
  1225  010C                     	;# 
  1226  010D                     	;# 
  1227  010E                     	;# 
  1228  010F                     	;# 
  1229  0110                     	;# 
  1230  0116                     	;# 
  1231  0117                     	;# 
  1232  011D                     	;# 
  1233  018C                     	;# 
  1234  018D                     	;# 
  1235  018F                     	;# 
  1236  0190                     	;# 
  1237  0191                     	;# 
  1238  0191                     	;# 
  1239  0192                     	;# 
  1240  0193                     	;# 
  1241  0193                     	;# 
  1242  0194                     	;# 
  1243  0195                     	;# 
  1244  0196                     	;# 
  1245  0197                     	;# 
  1246  0199                     	;# 
  1247  0199                     	;# 
  1248  0199                     	;# 
  1249  019A                     	;# 
  1250  019A                     	;# 
  1251  019A                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019C                     	;# 
  1258  019C                     	;# 
  1259  019C                     	;# 
  1260  019D                     	;# 
  1261  019D                     	;# 
  1262  019D                     	;# 
  1263  019E                     	;# 
  1264  019E                     	;# 
  1265  019E                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  020D                     	;# 
  1270  020F                     	;# 
  1271  0210                     	;# 
  1272  0211                     	;# 
  1273  0211                     	;# 
  1274  0212                     	;# 
  1275  0212                     	;# 
  1276  0213                     	;# 
  1277  0213                     	;# 
  1278  0214                     	;# 
  1279  0214                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0216                     	;# 
  1284  0216                     	;# 
  1285  0217                     	;# 
  1286  0217                     	;# 
  1287  0219                     	;# 
  1288  021A                     	;# 
  1289  021B                     	;# 
  1290  021C                     	;# 
  1291  021D                     	;# 
  1292  021E                     	;# 
  1293  021F                     	;# 
  1294  028C                     	;# 
  1295  028D                     	;# 
  1296  0291                     	;# 
  1297  0291                     	;# 
  1298  0292                     	;# 
  1299  0293                     	;# 
  1300  0298                     	;# 
  1301  0298                     	;# 
  1302  0299                     	;# 
  1303  029A                     	;# 
  1304  029D                     	;# 
  1305  029E                     	;# 
  1306  029F                     	;# 
  1307  030C                     	;# 
  1308  030D                     	;# 
  1309  0311                     	;# 
  1310  0311                     	;# 
  1311  0312                     	;# 
  1312  0313                     	;# 
  1313  0318                     	;# 
  1314  0318                     	;# 
  1315  0319                     	;# 
  1316  031A                     	;# 
  1317  031C                     	;# 
  1318  031C                     	;# 
  1319  031D                     	;# 
  1320  031E                     	;# 
  1321  038C                     	;# 
  1322  038D                     	;# 
  1323  0394                     	;# 
  1324  0395                     	;# 
  1325  0396                     	;# 
  1326  040C                     	;# 
  1327  040D                     	;# 
  1328  0411                     	;# 
  1329  0411                     	;# 
  1330  0412                     	;# 
  1331  0413                     	;# 
  1332  0414                     	;# 
  1333  0415                     	;# 
  1334  0416                     	;# 
  1335  0417                     	;# 
  1336  0418                     	;# 
  1337  0418                     	;# 
  1338  0419                     	;# 
  1339  041A                     	;# 
  1340  041B                     	;# 
  1341  041C                     	;# 
  1342  041D                     	;# 
  1343  041E                     	;# 
  1344  048D                     	;# 
  1345  0491                     	;# 
  1346  0491                     	;# 
  1347  0492                     	;# 
  1348  0492                     	;# 
  1349  0493                     	;# 
  1350  0493                     	;# 
  1351  0493                     	;# 
  1352  0494                     	;# 
  1353  0494                     	;# 
  1354  0495                     	;# 
  1355  0495                     	;# 
  1356  0496                     	;# 
  1357  0496                     	;# 
  1358  0497                     	;# 
  1359  0497                     	;# 
  1360  0595                     	;# 
  1361  0596                     	;# 
  1362  0597                     	;# 
  1363  059C                     	;# 
  1364  059D                     	;# 
  1365  059E                     	;# 
  1366  0611                     	;# 
  1367  0611                     	;# 
  1368  0612                     	;# 
  1369  0613                     	;# 
  1370  0614                     	;# 
  1371  0614                     	;# 
  1372  0615                     	;# 
  1373  0616                     	;# 
  1374  0617                     	;# 
  1375  0617                     	;# 
  1376  0618                     	;# 
  1377  0619                     	;# 
  1378  061A                     	;# 
  1379  061A                     	;# 
  1380  061B                     	;# 
  1381  061C                     	;# 
  1382  061D                     	;# 
  1383  061D                     	;# 
  1384  061E                     	;# 
  1385  061F                     	;# 
  1386  0FE4                     	;# 
  1387  0FE5                     	;# 
  1388  0FE6                     	;# 
  1389  0FE7                     	;# 
  1390  0FE8                     	;# 
  1391  0FE9                     	;# 
  1392  0FEA                     	;# 
  1393  0FEB                     	;# 
  1394  0FED                     	;# 
  1395  0FEE                     	;# 
  1396  0FEF                     	;_delay
  1397                           
  1398                           	psect	idataBANK1
  1399  130E                     __pidataBANK1:	
  1400                           
  1401                           ;initializer for _baseline_delay_time
  1402  130E  34D0               	retlw	208
  1403  130F  3407               	retlw	7
  1404                           
  1405                           ;initializer for _bottom_push_state
  1406  1310  3401               	retlw	1
  1407  1311  3400               	retlw	0
  1408                           
  1409                           ;initializer for _delay_time
  1410  1312  34D0               	retlw	208
  1411  1313  3407               	retlw	7
  1412                           
  1413                           ;initializer for _knob1_prev
  1414  1314  34D0               	retlw	208
  1415  1315  3407               	retlw	7
  1416                           
  1417                           ;initializer for _tap_iteration
  1418  1316  3401               	retlw	1
  1419  1317  3400               	retlw	0
  1420                           
  1421                           ;initializer for _top_push_state
  1422  1318  3406               	retlw	6
  1423  1319  3400               	retlw	0
  1424                           
  1425                           	psect	idataBANK2
  1426  07F5                     __pidataBANK2:	
  1427                           
  1428                           ;initializer for _knob2_prev
  1429  07F5  34D0               	retlw	208
  1430  07F6  3407               	retlw	7
  1431                           
  1432                           ;initializer for _knob3_prev
  1433  07F7  34D0               	retlw	208
  1434  07F8  3407               	retlw	7
  1435                           
  1436                           ;initializer for _knob4_prev
  1437  07F9  34D0               	retlw	208
  1438  07FA  3407               	retlw	7
  1439                           
  1440                           ;initializer for _knob5_prev
  1441  07FB  34D0               	retlw	208
  1442  07FC  3407               	retlw	7
  1443                           
  1444                           ;initializer for _mod_delay_time
  1445  07FD  34D0               	retlw	208
  1446  07FE  3407               	retlw	7
  1447                           
  1448                           	psect	idataBANK3
  1449  14D9                     __pidataBANK3:	
  1450                           
  1451                           ;initializer for _mod1
  1452  14D9  3400               	retlw	0
  1453  14DA  3400               	retlw	0
  1454  14DB  3415               	retlw	21
  1455  14DC  3400               	retlw	0
  1456  14DD  3428               	retlw	40
  1457  14DE  3400               	retlw	0
  1458  14DF  343B               	retlw	59
  1459  14E0  3400               	retlw	0
  1460  14E1  344A               	retlw	74
  1461  14E2  3400               	retlw	0
  1462  14E3  3456               	retlw	86
  1463  14E4  3400               	retlw	0
  1464  14E5  345F               	retlw	95
  1465  14E6  3400               	retlw	0
  1466  14E7  3463               	retlw	99
  1467  14E8  3400               	retlw	0
  1468  14E9  3464               	retlw	100
  1469  14EA  3400               	retlw	0
  1470  14EB  345F               	retlw	95
  1471  14EC  3400               	retlw	0
  1472  14ED  3457               	retlw	87
  1473  14EE  3400               	retlw	0
  1474  14EF  344B               	retlw	75
  1475  14F0  3400               	retlw	0
  1476  14F1  343C               	retlw	60
  1477  14F2  3400               	retlw	0
  1478  14F3  342A               	retlw	42
  1479  14F4  3400               	retlw	0
  1480  14F5  3416               	retlw	22
  1481  14F6  3400               	retlw	0
  1482  14F7  3402               	retlw	2
  1483  14F8  3400               	retlw	0
  1484  14F9  34ED               	retlw	237
  1485  14FA  34FF               	retlw	255
  1486  14FB  34D9               	retlw	217
  1487  14FC  34FF               	retlw	255
  1488  14FD  34C7               	retlw	199
  1489  14FE  34FF               	retlw	255
  1490  14FF  34B7               	retlw	183
  1491  1500  34FF               	retlw	255
  1492  1501  34AB               	retlw	171
  1493  1502  34FF               	retlw	255
  1494  1503  34A2               	retlw	162
  1495  1504  34FF               	retlw	255
  1496  1505  349D               	retlw	157
  1497  1506  34FF               	retlw	255
  1498  1507  349C               	retlw	156
  1499  1508  34FF               	retlw	255
  1500  1509  34A8               	retlw	168
  1501  150A  34FF               	retlw	255
  1502  150B  34B4               	retlw	180
  1503  150C  34FF               	retlw	255
  1504  150D  34C3               	retlw	195
  1505  150E  34FF               	retlw	255
  1506  150F  34D5               	retlw	213
  1507  1510  34FF               	retlw	255
  1508  1511  34E8               	retlw	232
  1509  1512  34FF               	retlw	255
  1510                           
  1511                           	psect	idataBANK5
  1512  149F                     __pidataBANK5:	
  1513                           
  1514                           ;initializer for _mod2
  1515  149F  3400               	retlw	0
  1516  14A0  3400               	retlw	0
  1517  14A1  340D               	retlw	13
  1518  14A2  3400               	retlw	0
  1519  14A3  341B               	retlw	27
  1520  14A4  3400               	retlw	0
  1521  14A5  3428               	retlw	40
  1522  14A6  3400               	retlw	0
  1523  14A7  3435               	retlw	53
  1524  14A8  3400               	retlw	0
  1525  14A9  3443               	retlw	67
  1526  14AA  3400               	retlw	0
  1527  14AB  3450               	retlw	80
  1528  14AC  3400               	retlw	0
  1529  14AD  345D               	retlw	93
  1530  14AE  3400               	retlw	0
  1531  14AF  345D               	retlw	93
  1532  14B0  3400               	retlw	0
  1533  14B1  3450               	retlw	80
  1534  14B2  3400               	retlw	0
  1535  14B3  3443               	retlw	67
  1536  14B4  3400               	retlw	0
  1537  14B5  3435               	retlw	53
  1538  14B6  3400               	retlw	0
  1539  14B7  3428               	retlw	40
  1540  14B8  3400               	retlw	0
  1541  14B9  341B               	retlw	27
  1542  14BA  3400               	retlw	0
  1543  14BB  340D               	retlw	13
  1544  14BC  3400               	retlw	0
  1545  14BD  3400               	retlw	0
  1546  14BE  3400               	retlw	0
  1547  14BF  34F3               	retlw	243
  1548  14C0  34FF               	retlw	255
  1549  14C1  34E5               	retlw	229
  1550  14C2  34FF               	retlw	255
  1551  14C3  34D8               	retlw	216
  1552  14C4  34FF               	retlw	255
  1553  14C5  34CB               	retlw	203
  1554  14C6  34FF               	retlw	255
  1555  14C7  34BD               	retlw	189
  1556  14C8  34FF               	retlw	255
  1557  14C9  34B0               	retlw	176
  1558  14CA  34FF               	retlw	255
  1559  14CB  34A3               	retlw	163
  1560  14CC  34FF               	retlw	255
  1561  14CD  34A3               	retlw	163
  1562  14CE  34FF               	retlw	255
  1563  14CF  34B0               	retlw	176
  1564  14D0  34FF               	retlw	255
  1565  14D1  34BD               	retlw	189
  1566  14D2  34FF               	retlw	255
  1567  14D3  34CB               	retlw	203
  1568  14D4  34FF               	retlw	255
  1569  14D5  34D8               	retlw	216
  1570  14D6  34FF               	retlw	255
  1571  14D7  34E5               	retlw	229
  1572  14D8  34FF               	retlw	255
  1573                           
  1574                           	psect	idataBANK6
  1575  1465                     __pidataBANK6:	
  1576                           
  1577                           ;initializer for _mod3
  1578  1465  3400               	retlw	0
  1579  1466  3400               	retlw	0
  1580  1467  3407               	retlw	7
  1581  1468  3400               	retlw	0
  1582  1469  340D               	retlw	13
  1583  146A  3400               	retlw	0
  1584  146B  3414               	retlw	20
  1585  146C  3400               	retlw	0
  1586  146D  341B               	retlw	27
  1587  146E  3400               	retlw	0
  1588  146F  3421               	retlw	33
  1589  1470  3400               	retlw	0
  1590  1471  3428               	retlw	40
  1591  1472  3400               	retlw	0
  1592  1473  342F               	retlw	47
  1593  1474  3400               	retlw	0
  1594  1475  3435               	retlw	53
  1595  1476  3400               	retlw	0
  1596  1477  343C               	retlw	60
  1597  1478  3400               	retlw	0
  1598  1479  3443               	retlw	67
  1599  147A  3400               	retlw	0
  1600  147B  3449               	retlw	73
  1601  147C  3400               	retlw	0
  1602  147D  3450               	retlw	80
  1603  147E  3400               	retlw	0
  1604  147F  3457               	retlw	87
  1605  1480  3400               	retlw	0
  1606  1481  345D               	retlw	93
  1607  1482  3400               	retlw	0
  1608  1483  349C               	retlw	156
  1609  1484  34FF               	retlw	255
  1610  1485  34A3               	retlw	163
  1611  1486  34FF               	retlw	255
  1612  1487  34A9               	retlw	169
  1613  1488  34FF               	retlw	255
  1614  1489  34B0               	retlw	176
  1615  148A  34FF               	retlw	255
  1616  148B  34B7               	retlw	183
  1617  148C  34FF               	retlw	255
  1618  148D  34BD               	retlw	189
  1619  148E  34FF               	retlw	255
  1620  148F  34C4               	retlw	196
  1621  1490  34FF               	retlw	255
  1622  1491  34CB               	retlw	203
  1623  1492  34FF               	retlw	255
  1624  1493  34D1               	retlw	209
  1625  1494  34FF               	retlw	255
  1626  1495  34D8               	retlw	216
  1627  1496  34FF               	retlw	255
  1628  1497  34DF               	retlw	223
  1629  1498  34FF               	retlw	255
  1630  1499  34E5               	retlw	229
  1631  149A  34FF               	retlw	255
  1632  149B  34EC               	retlw	236
  1633  149C  34FF               	retlw	255
  1634  149D  34F3               	retlw	243
  1635  149E  34FF               	retlw	255
  1636                           
  1637                           	psect	idataBANK7
  1638  142B                     __pidataBANK7:	
  1639                           
  1640                           ;initializer for _mod4
  1641  142B  3464               	retlw	100
  1642  142C  3400               	retlw	0
  1643  142D  3464               	retlw	100
  1644  142E  3400               	retlw	0
  1645  142F  3464               	retlw	100
  1646  1430  3400               	retlw	0
  1647  1431  3464               	retlw	100
  1648  1432  3400               	retlw	0
  1649  1433  3464               	retlw	100
  1650  1434  3400               	retlw	0
  1651  1435  3464               	retlw	100
  1652  1436  3400               	retlw	0
  1653  1437  3464               	retlw	100
  1654  1438  3400               	retlw	0
  1655  1439  3464               	retlw	100
  1656  143A  3400               	retlw	0
  1657  143B  3464               	retlw	100
  1658  143C  3400               	retlw	0
  1659  143D  3464               	retlw	100
  1660  143E  3400               	retlw	0
  1661  143F  3464               	retlw	100
  1662  1440  3400               	retlw	0
  1663  1441  3464               	retlw	100
  1664  1442  3400               	retlw	0
  1665  1443  3464               	retlw	100
  1666  1444  3400               	retlw	0
  1667  1445  3464               	retlw	100
  1668  1446  3400               	retlw	0
  1669  1447  3464               	retlw	100
  1670  1448  3400               	retlw	0
  1671  1449  349C               	retlw	156
  1672  144A  34FF               	retlw	255
  1673  144B  349C               	retlw	156
  1674  144C  34FF               	retlw	255
  1675  144D  349C               	retlw	156
  1676  144E  34FF               	retlw	255
  1677  144F  349C               	retlw	156
  1678  1450  34FF               	retlw	255
  1679  1451  349C               	retlw	156
  1680  1452  34FF               	retlw	255
  1681  1453  349C               	retlw	156
  1682  1454  34FF               	retlw	255
  1683  1455  349C               	retlw	156
  1684  1456  34FF               	retlw	255
  1685  1457  349C               	retlw	156
  1686  1458  34FF               	retlw	255
  1687  1459  349C               	retlw	156
  1688  145A  34FF               	retlw	255
  1689  145B  349C               	retlw	156
  1690  145C  34FF               	retlw	255
  1691  145D  349C               	retlw	156
  1692  145E  34FF               	retlw	255
  1693  145F  349C               	retlw	156
  1694  1460  34FF               	retlw	255
  1695  1461  349C               	retlw	156
  1696  1462  34FF               	retlw	255
  1697  1463  349C               	retlw	156
  1698  1464  34FF               	retlw	255
  1699                           
  1700                           	psect	idataBANK8
  1701  0800                     __pidataBANK8:	
  1702                           
  1703                           ;initializer for _B25k
  1704  0800  34FF               	retlw	255
  1705  0801  3400               	retlw	0
  1706  0802  34FF               	retlw	255
  1707  0803  3400               	retlw	0
  1708  0804  34FF               	retlw	255
  1709  0805  3400               	retlw	0
  1710  0806  34DF               	retlw	223
  1711  0807  3400               	retlw	0
  1712  0808  34AE               	retlw	174
  1713  0809  3400               	retlw	0
  1714  080A  348E               	retlw	142
  1715  080B  3400               	retlw	0
  1716  080C  3478               	retlw	120
  1717  080D  3400               	retlw	0
  1718  080E  3467               	retlw	103
  1719  080F  3400               	retlw	0
  1720  0810  345B               	retlw	91
  1721  0811  3400               	retlw	0
  1722  0812  3450               	retlw	80
  1723  0813  3400               	retlw	0
  1724  0814  3448               	retlw	72
  1725  0815  3400               	retlw	0
  1726  0816  3442               	retlw	66
  1727  0817  3400               	retlw	0
  1728  0818  343C               	retlw	60
  1729  0819  3400               	retlw	0
  1730  081A  3437               	retlw	55
  1731  081B  3400               	retlw	0
  1732  081C  3433               	retlw	51
  1733  081D  3400               	retlw	0
  1734  081E  3430               	retlw	48
  1735  081F  3400               	retlw	0
  1736  0820  342D               	retlw	45
  1737  0821  3400               	retlw	0
  1738  0822  342A               	retlw	42
  1739  0823  3400               	retlw	0
  1740  0824  3427               	retlw	39
  1741  0825  3400               	retlw	0
  1742  0826  3425               	retlw	37
  1743  0827  3400               	retlw	0
  1744  0828  3423               	retlw	35
  1745  0829  3400               	retlw	0
  1746  082A  3421               	retlw	33
  1747  082B  3400               	retlw	0
  1748  082C  3420               	retlw	32
  1749  082D  3400               	retlw	0
  1750  082E  341E               	retlw	30
  1751  082F  3400               	retlw	0
  1752  0830  341D               	retlw	29
  1753  0831  3400               	retlw	0
  1754  0832  341C               	retlw	28
  1755  0833  3400               	retlw	0
  1756  0834  341B               	retlw	27
  1757  0835  3400               	retlw	0
  1758  0836  341A               	retlw	26
  1759  0837  3400               	retlw	0
  1760  0838  3419               	retlw	25
  1761  0839  3400               	retlw	0
  1762  083A  3418               	retlw	24
  1763  083B  3400               	retlw	0
  1764  083C  3417               	retlw	23
  1765  083D  3400               	retlw	0
  1766  083E  3416               	retlw	22
  1767  083F  3400               	retlw	0
  1768  0840  3415               	retlw	21
  1769  0841  3400               	retlw	0
  1770  0842  3415               	retlw	21
  1771  0843  3400               	retlw	0
  1772  0844  3414               	retlw	20
  1773  0845  3400               	retlw	0
  1774  0846  3413               	retlw	19
  1775  0847  3400               	retlw	0
  1776  0848  340F               	retlw	15
  1777  0849  3400               	retlw	0
  1778  084A  340B               	retlw	11
  1779  084B  3400               	retlw	0
  1780  084C  3407               	retlw	7
  1781  084D  3400               	retlw	0
  1782  084E  3407               	retlw	7
  1783  084F  3400               	retlw	0
  1784                           
  1785                           	psect	idataBANK9
  1786  1661                     __pidataBANK9:	
  1787                           
  1788                           ;initializer for _iB25k
  1789  1661  3407               	retlw	7
  1790  1662  3400               	retlw	0
  1791  1663  3407               	retlw	7
  1792  1664  3400               	retlw	0
  1793  1665  340B               	retlw	11
  1794  1666  3400               	retlw	0
  1795  1667  340F               	retlw	15
  1796  1668  3400               	retlw	0
  1797  1669  3413               	retlw	19
  1798  166A  3400               	retlw	0
  1799  166B  3414               	retlw	20
  1800  166C  3400               	retlw	0
  1801  166D  3415               	retlw	21
  1802  166E  3400               	retlw	0
  1803  166F  3415               	retlw	21
  1804  1670  3400               	retlw	0
  1805  1671  3416               	retlw	22
  1806  1672  3400               	retlw	0
  1807  1673  3417               	retlw	23
  1808  1674  3400               	retlw	0
  1809  1675  3418               	retlw	24
  1810  1676  3400               	retlw	0
  1811  1677  3419               	retlw	25
  1812  1678  3400               	retlw	0
  1813  1679  341A               	retlw	26
  1814  167A  3400               	retlw	0
  1815  167B  341B               	retlw	27
  1816  167C  3400               	retlw	0
  1817  167D  341C               	retlw	28
  1818  167E  3400               	retlw	0
  1819  167F  341D               	retlw	29
  1820  1680  3400               	retlw	0
  1821  1681  341E               	retlw	30
  1822  1682  3400               	retlw	0
  1823  1683  3420               	retlw	32
  1824  1684  3400               	retlw	0
  1825  1685  3421               	retlw	33
  1826  1686  3400               	retlw	0
  1827  1687  3423               	retlw	35
  1828  1688  3400               	retlw	0
  1829  1689  3425               	retlw	37
  1830  168A  3400               	retlw	0
  1831  168B  3427               	retlw	39
  1832  168C  3400               	retlw	0
  1833  168D  342A               	retlw	42
  1834  168E  3400               	retlw	0
  1835  168F  342D               	retlw	45
  1836  1690  3400               	retlw	0
  1837  1691  3430               	retlw	48
  1838  1692  3400               	retlw	0
  1839  1693  3433               	retlw	51
  1840  1694  3400               	retlw	0
  1841  1695  3437               	retlw	55
  1842  1696  3400               	retlw	0
  1843  1697  343C               	retlw	60
  1844  1698  3400               	retlw	0
  1845  1699  3442               	retlw	66
  1846  169A  3400               	retlw	0
  1847  169B  3448               	retlw	72
  1848  169C  3400               	retlw	0
  1849  169D  3450               	retlw	80
  1850  169E  3400               	retlw	0
  1851  169F  345B               	retlw	91
  1852  16A0  3400               	retlw	0
  1853  16A1  3467               	retlw	103
  1854  16A2  3400               	retlw	0
  1855  16A3  3478               	retlw	120
  1856  16A4  3400               	retlw	0
  1857  16A5  348E               	retlw	142
  1858  16A6  3400               	retlw	0
  1859  16A7  34AE               	retlw	174
  1860  16A8  3400               	retlw	0
  1861  16A9  34DF               	retlw	223
  1862  16AA  3400               	retlw	0
  1863  16AB  34FF               	retlw	255
  1864  16AC  3400               	retlw	0
  1865  16AD  34FF               	retlw	255
  1866  16AE  3400               	retlw	0
  1867  16AF  34FF               	retlw	255
  1868  16B0  3400               	retlw	0
  1869                           
  1870                           	psect	idataBIGRAM
  1871  0B01                     __pidataBIGRAM:	
  1872                           
  1873                           ;initializer for _delay
  1874  0B01  3422               	retlw	34
  1875  0B02  3408               	retlw	8
  1876  0B03  34FC               	retlw	252
  1877  0B04  3407               	retlw	7
  1878  0B05  34D8               	retlw	216
  1879  0B06  3407               	retlw	7
  1880  0B07  34B5               	retlw	181
  1881  0B08  3407               	retlw	7
  1882  0B09  3493               	retlw	147
  1883  0B0A  3407               	retlw	7
  1884  0B0B  3472               	retlw	114
  1885  0B0C  3407               	retlw	7
  1886  0B0D  3452               	retlw	82
  1887  0B0E  3407               	retlw	7
  1888  0B0F  3434               	retlw	52
  1889  0B10  3407               	retlw	7
  1890  0B11  3416               	retlw	22
  1891  0B12  3407               	retlw	7
  1892  0B13  34F9               	retlw	249
  1893  0B14  3406               	retlw	6
  1894  0B15  34DD               	retlw	221
  1895  0B16  3406               	retlw	6
  1896  0B17  34C2               	retlw	194
  1897  0B18  3406               	retlw	6
  1898  0B19  34A8               	retlw	168
  1899  0B1A  3406               	retlw	6
  1900  0B1B  348F               	retlw	143
  1901  0B1C  3406               	retlw	6
  1902  0B1D  3476               	retlw	118
  1903  0B1E  3406               	retlw	6
  1904  0B1F  345E               	retlw	94
  1905  0B20  3406               	retlw	6
  1906  0B21  3447               	retlw	71
  1907  0B22  3406               	retlw	6
  1908  0B23  3430               	retlw	48
  1909  0B24  3406               	retlw	6
  1910  0B25  341A               	retlw	26
  1911  0B26  3406               	retlw	6
  1912  0B27  3405               	retlw	5
  1913  0B28  3406               	retlw	6
  1914  0B29  34F0               	retlw	240
  1915  0B2A  3405               	retlw	5
  1916  0B2B  34DC               	retlw	220
  1917  0B2C  3405               	retlw	5
  1918  0B2D  34C8               	retlw	200
  1919  0B2E  3405               	retlw	5
  1920  0B2F  34B5               	retlw	181
  1921  0B30  3405               	retlw	5
  1922  0B31  34A3               	retlw	163
  1923  0B32  3405               	retlw	5
  1924  0B33  3490               	retlw	144
  1925  0B34  3405               	retlw	5
  1926  0B35  347F               	retlw	127
  1927  0B36  3405               	retlw	5
  1928  0B37  346D               	retlw	109
  1929  0B38  3405               	retlw	5
  1930  0B39  345C               	retlw	92
  1931  0B3A  3405               	retlw	5
  1932  0B3B  344C               	retlw	76
  1933  0B3C  3405               	retlw	5
  1934  0B3D  343C               	retlw	60
  1935  0B3E  3405               	retlw	5
  1936  0B3F  342C               	retlw	44
  1937  0B40  3405               	retlw	5
  1938  0B41  341D               	retlw	29
  1939  0B42  3405               	retlw	5
  1940  0B43  340E               	retlw	14
  1941  0B44  3405               	retlw	5
  1942  0B45  34FF               	retlw	255
  1943  0B46  3404               	retlw	4
  1944  0B47  34F1               	retlw	241
  1945  0B48  3404               	retlw	4
  1946  0B49  34E2               	retlw	226
  1947  0B4A  3404               	retlw	4
  1948  0B4B  34D5               	retlw	213
  1949  0B4C  3404               	retlw	4
  1950  0B4D  34C7               	retlw	199
  1951  0B4E  3404               	retlw	4
  1952  0B4F  34BA               	retlw	186
  1953  0B50  3404               	retlw	4
  1954  0B51  34AD               	retlw	173
  1955  0B52  3404               	retlw	4
  1956  0B53  34A1               	retlw	161
  1957  0B54  3404               	retlw	4
  1958  0B55  3494               	retlw	148
  1959  0B56  3404               	retlw	4
  1960  0B57  3488               	retlw	136
  1961  0B58  3404               	retlw	4
  1962  0B59  347D               	retlw	125
  1963  0B5A  3404               	retlw	4
  1964  0B5B  3471               	retlw	113
  1965  0B5C  3404               	retlw	4
  1966  0B5D  3466               	retlw	102
  1967  0B5E  3404               	retlw	4
  1968  0B5F  345A               	retlw	90
  1969  0B60  3404               	retlw	4
  1970  0B61  3450               	retlw	80
  1971  0B62  3404               	retlw	4
  1972  0B63  3445               	retlw	69
  1973  0B64  3404               	retlw	4
  1974  0B65  343A               	retlw	58
  1975  0B66  3404               	retlw	4
  1976  0B67  3430               	retlw	48
  1977  0B68  3404               	retlw	4
  1978  0B69  3426               	retlw	38
  1979  0B6A  3404               	retlw	4
  1980  0B6B  341C               	retlw	28
  1981  0B6C  3404               	retlw	4
  1982  0B6D  3412               	retlw	18
  1983  0B6E  3404               	retlw	4
  1984  0B6F  3409               	retlw	9
  1985  0B70  3404               	retlw	4
  1986  0B71  34FF               	retlw	255
  1987  0B72  3403               	retlw	3
  1988  0B73  34F6               	retlw	246
  1989  0B74  3403               	retlw	3
  1990  0B75  34ED               	retlw	237
  1991  0B76  3403               	retlw	3
  1992  0B77  34E4               	retlw	228
  1993  0B78  3403               	retlw	3
  1994  0B79  34DC               	retlw	220
  1995  0B7A  3403               	retlw	3
  1996  0B7B  34D3               	retlw	211
  1997  0B7C  3403               	retlw	3
  1998  0B7D  34CB               	retlw	203
  1999  0B7E  3403               	retlw	3
  2000  0B7F  34C2               	retlw	194
  2001  0B80  3403               	retlw	3
  2002  0B81  34BA               	retlw	186
  2003  0B82  3403               	retlw	3
  2004  0B83  34B2               	retlw	178
  2005  0B84  3403               	retlw	3
  2006  0B85  34AA               	retlw	170
  2007  0B86  3403               	retlw	3
  2008  0B87  34A2               	retlw	162
  2009  0B88  3403               	retlw	3
  2010  0B89  349B               	retlw	155
  2011  0B8A  3403               	retlw	3
  2012  0B8B  3493               	retlw	147
  2013  0B8C  3403               	retlw	3
  2014  0B8D  348C               	retlw	140
  2015  0B8E  3403               	retlw	3
  2016  0B8F  3485               	retlw	133
  2017  0B90  3403               	retlw	3
  2018  0B91  347E               	retlw	126
  2019  0B92  3403               	retlw	3
  2020  0B93  3477               	retlw	119
  2021  0B94  3403               	retlw	3
  2022  0B95  3470               	retlw	112
  2023  0B96  3403               	retlw	3
  2024  0B97  3469               	retlw	105
  2025  0B98  3403               	retlw	3
  2026  0B99  3462               	retlw	98
  2027  0B9A  3403               	retlw	3
  2028  0B9B  345C               	retlw	92
  2029  0B9C  3403               	retlw	3
  2030  0B9D  3455               	retlw	85
  2031  0B9E  3403               	retlw	3
  2032  0B9F  344F               	retlw	79
  2033  0BA0  3403               	retlw	3
  2034  0BA1  3448               	retlw	72
  2035  0BA2  3403               	retlw	3
  2036  0BA3  3442               	retlw	66
  2037  0BA4  3403               	retlw	3
  2038  0BA5  343C               	retlw	60
  2039  0BA6  3403               	retlw	3
  2040  0BA7  3436               	retlw	54
  2041  0BA8  3403               	retlw	3
  2042  0BA9  3430               	retlw	48
  2043  0BAA  3403               	retlw	3
  2044  0BAB  342A               	retlw	42
  2045  0BAC  3403               	retlw	3
  2046  0BAD  3424               	retlw	36
  2047  0BAE  3403               	retlw	3
  2048  0BAF  341F               	retlw	31
  2049  0BB0  3403               	retlw	3
  2050  0BB1  3419               	retlw	25
  2051  0BB2  3403               	retlw	3
  2052  0BB3  3413               	retlw	19
  2053  0BB4  3403               	retlw	3
  2054  0BB5  340E               	retlw	14
  2055  0BB6  3403               	retlw	3
  2056  0BB7  3409               	retlw	9
  2057  0BB8  3403               	retlw	3
  2058  0BB9  3403               	retlw	3
  2059  0BBA  3403               	retlw	3
  2060  0BBB  34FE               	retlw	254
  2061  0BBC  3402               	retlw	2
  2062  0BBD  34F9               	retlw	249
  2063  0BBE  3402               	retlw	2
  2064  0BBF  34F4               	retlw	244
  2065  0BC0  3402               	retlw	2
  2066  0BC1  34EF               	retlw	239
  2067  0BC2  3402               	retlw	2
  2068  0BC3  34EA               	retlw	234
  2069  0BC4  3402               	retlw	2
  2070  0BC5  34E5               	retlw	229
  2071  0BC6  3402               	retlw	2
  2072  0BC7  34E0               	retlw	224
  2073  0BC8  3402               	retlw	2
  2074  0BC9  34DB               	retlw	219
  2075  0BCA  3402               	retlw	2
  2076  0BCB  34D7               	retlw	215
  2077  0BCC  3402               	retlw	2
  2078  0BCD  34D2               	retlw	210
  2079  0BCE  3402               	retlw	2
  2080  0BCF  34CD               	retlw	205
  2081  0BD0  3402               	retlw	2
  2082  0BD1  34C9               	retlw	201
  2083  0BD2  3402               	retlw	2
  2084  0BD3  34C4               	retlw	196
  2085  0BD4  3402               	retlw	2
  2086  0BD5  34C0               	retlw	192
  2087  0BD6  3402               	retlw	2
  2088  0BD7  34BC               	retlw	188
  2089  0BD8  3402               	retlw	2
  2090  0BD9  34B7               	retlw	183
  2091  0BDA  3402               	retlw	2
  2092  0BDB  34B3               	retlw	179
  2093  0BDC  3402               	retlw	2
  2094  0BDD  34AF               	retlw	175
  2095  0BDE  3402               	retlw	2
  2096  0BDF  34AB               	retlw	171
  2097  0BE0  3402               	retlw	2
  2098  0BE1  34A6               	retlw	166
  2099  0BE2  3402               	retlw	2
  2100  0BE3  34A2               	retlw	162
  2101  0BE4  3402               	retlw	2
  2102  0BE5  349E               	retlw	158
  2103  0BE6  3402               	retlw	2
  2104  0BE7  349A               	retlw	154
  2105  0BE8  3402               	retlw	2
  2106  0BE9  3497               	retlw	151
  2107  0BEA  3402               	retlw	2
  2108  0BEB  3493               	retlw	147
  2109  0BEC  3402               	retlw	2
  2110  0BED  348F               	retlw	143
  2111  0BEE  3402               	retlw	2
  2112  0BEF  348B               	retlw	139
  2113  0BF0  3402               	retlw	2
  2114  0BF1  3487               	retlw	135
  2115  0BF2  3402               	retlw	2
  2116  0BF3  3484               	retlw	132
  2117  0BF4  3402               	retlw	2
  2118  0BF5  3480               	retlw	128
  2119  0BF6  3402               	retlw	2
  2120  0BF7  347C               	retlw	124
  2121  0BF8  3402               	retlw	2
  2122  0BF9  3479               	retlw	121
  2123  0BFA  3402               	retlw	2
  2124  0BFB  3475               	retlw	117
  2125  0BFC  3402               	retlw	2
  2126  0BFD  3472               	retlw	114
  2127  0BFE  3402               	retlw	2
  2128  0BFF  346E               	retlw	110
  2129  0C00  3402               	retlw	2
  2130  0C01  346B               	retlw	107
  2131  0C02  3402               	retlw	2
  2132  0C03  3467               	retlw	103
  2133  0C04  3402               	retlw	2
  2134  0C05  3464               	retlw	100
  2135  0C06  3402               	retlw	2
  2136  0C07  3461               	retlw	97
  2137  0C08  3402               	retlw	2
  2138  0C09  345E               	retlw	94
  2139  0C0A  3402               	retlw	2
  2140  0C0B  345A               	retlw	90
  2141  0C0C  3402               	retlw	2
  2142  0C0D  3457               	retlw	87
  2143  0C0E  3402               	retlw	2
  2144  0C0F  3454               	retlw	84
  2145  0C10  3402               	retlw	2
  2146  0C11  3451               	retlw	81
  2147  0C12  3402               	retlw	2
  2148  0C13  344E               	retlw	78
  2149  0C14  3402               	retlw	2
  2150  0C15  344B               	retlw	75
  2151  0C16  3402               	retlw	2
  2152  0C17  3448               	retlw	72
  2153  0C18  3402               	retlw	2
  2154  0C19  3445               	retlw	69
  2155  0C1A  3402               	retlw	2
  2156  0C1B  3442               	retlw	66
  2157  0C1C  3402               	retlw	2
  2158  0C1D  343F               	retlw	63
  2159  0C1E  3402               	retlw	2
  2160  0C1F  343C               	retlw	60
  2161  0C20  3402               	retlw	2
  2162  0C21  3439               	retlw	57
  2163  0C22  3402               	retlw	2
  2164  0C23  3436               	retlw	54
  2165  0C24  3402               	retlw	2
  2166  0C25  3433               	retlw	51
  2167  0C26  3402               	retlw	2
  2168  0C27  3430               	retlw	48
  2169  0C28  3402               	retlw	2
  2170  0C29  342E               	retlw	46
  2171  0C2A  3402               	retlw	2
  2172  0C2B  342B               	retlw	43
  2173  0C2C  3402               	retlw	2
  2174  0C2D  3428               	retlw	40
  2175  0C2E  3402               	retlw	2
  2176  0C2F  3425               	retlw	37
  2177  0C30  3402               	retlw	2
  2178  0C31  3423               	retlw	35
  2179  0C32  3402               	retlw	2
  2180  0C33  3420               	retlw	32
  2181  0C34  3402               	retlw	2
  2182  0C35  341E               	retlw	30
  2183  0C36  3402               	retlw	2
  2184  0C37  341B               	retlw	27
  2185  0C38  3402               	retlw	2
  2186  0C39  3418               	retlw	24
  2187  0C3A  3402               	retlw	2
  2188  0C3B  3416               	retlw	22
  2189  0C3C  3402               	retlw	2
  2190  0C3D  3413               	retlw	19
  2191  0C3E  3402               	retlw	2
  2192  0C3F  3411               	retlw	17
  2193  0C40  3402               	retlw	2
  2194  0C41  340E               	retlw	14
  2195  0C42  3402               	retlw	2
  2196  0C43  340C               	retlw	12
  2197  0C44  3402               	retlw	2
  2198  0C45  340A               	retlw	10
  2199  0C46  3402               	retlw	2
  2200  0C47  3407               	retlw	7
  2201  0C48  3402               	retlw	2
  2202  0C49  3405               	retlw	5
  2203  0C4A  3402               	retlw	2
  2204  0C4B  3402               	retlw	2
  2205  0C4C  3402               	retlw	2
  2206  0C4D  3400               	retlw	0
  2207  0C4E  3402               	retlw	2
  2208  0C4F  34FE               	retlw	254
  2209  0C50  3401               	retlw	1
  2210  0C51  34FB               	retlw	251
  2211  0C52  3401               	retlw	1
  2212  0C53  34F9               	retlw	249
  2213  0C54  3401               	retlw	1
  2214  0C55  34F7               	retlw	247
  2215  0C56  3401               	retlw	1
  2216  0C57  34F5               	retlw	245
  2217  0C58  3401               	retlw	1
  2218  0C59  34F2               	retlw	242
  2219  0C5A  3401               	retlw	1
  2220  0C5B  34F0               	retlw	240
  2221  0C5C  3401               	retlw	1
  2222  0C5D  34EE               	retlw	238
  2223  0C5E  3401               	retlw	1
  2224  0C5F  34EC               	retlw	236
  2225  0C60  3401               	retlw	1
  2226  0C61  34EA               	retlw	234
  2227  0C62  3401               	retlw	1
  2228  0C63  34E8               	retlw	232
  2229  0C64  3401               	retlw	1
  2230  0C65  34E6               	retlw	230
  2231  0C66  3401               	retlw	1
  2232  0C67  34E3               	retlw	227
  2233  0C68  3401               	retlw	1
  2234  0C69  34E1               	retlw	225
  2235  0C6A  3401               	retlw	1
  2236  0C6B  34DF               	retlw	223
  2237  0C6C  3401               	retlw	1
  2238  0C6D  34DD               	retlw	221
  2239  0C6E  3401               	retlw	1
  2240  0C6F  34DB               	retlw	219
  2241  0C70  3401               	retlw	1
  2242  0C71  34D9               	retlw	217
  2243  0C72  3401               	retlw	1
  2244  0C73  34D7               	retlw	215
  2245  0C74  3401               	retlw	1
  2246  0C75  34D5               	retlw	213
  2247  0C76  3401               	retlw	1
  2248  0C77  34D3               	retlw	211
  2249  0C78  3401               	retlw	1
  2250  0C79  34D2               	retlw	210
  2251  0C7A  3401               	retlw	1
  2252  0C7B  34D0               	retlw	208
  2253  0C7C  3401               	retlw	1
  2254  0C7D  34CE               	retlw	206
  2255  0C7E  3401               	retlw	1
  2256  0C7F  34CC               	retlw	204
  2257  0C80  3401               	retlw	1
  2258  0C81  34CA               	retlw	202
  2259  0C82  3401               	retlw	1
  2260  0C83  34C8               	retlw	200
  2261  0C84  3401               	retlw	1
  2262  0C85  34C6               	retlw	198
  2263  0C86  3401               	retlw	1
  2264  0C87  34C4               	retlw	196
  2265  0C88  3401               	retlw	1
  2266  0C89  34C3               	retlw	195
  2267  0C8A  3401               	retlw	1
  2268  0C8B  34C1               	retlw	193
  2269  0C8C  3401               	retlw	1
  2270  0C8D  34BF               	retlw	191
  2271  0C8E  3401               	retlw	1
  2272  0C8F  34BD               	retlw	189
  2273  0C90  3401               	retlw	1
  2274  0C91  34BC               	retlw	188
  2275  0C92  3401               	retlw	1
  2276  0C93  34BA               	retlw	186
  2277  0C94  3401               	retlw	1
  2278  0C95  34B8               	retlw	184
  2279  0C96  3401               	retlw	1
  2280  0C97  34B6               	retlw	182
  2281  0C98  3401               	retlw	1
  2282  0C99  34B5               	retlw	181
  2283  0C9A  3401               	retlw	1
  2284  0C9B  34B3               	retlw	179
  2285  0C9C  3401               	retlw	1
  2286  0C9D  34B1               	retlw	177
  2287  0C9E  3401               	retlw	1
  2288  0C9F  34B0               	retlw	176
  2289  0CA0  3401               	retlw	1
  2290  0CA1  34AE               	retlw	174
  2291  0CA2  3401               	retlw	1
  2292  0CA3  34AC               	retlw	172
  2293  0CA4  3401               	retlw	1
  2294  0CA5  34AB               	retlw	171
  2295  0CA6  3401               	retlw	1
  2296  0CA7  34A9               	retlw	169
  2297  0CA8  3401               	retlw	1
  2298  0CA9  34A8               	retlw	168
  2299  0CAA  3401               	retlw	1
  2300  0CAB  34A6               	retlw	166
  2301  0CAC  3401               	retlw	1
  2302  0CAD  34A4               	retlw	164
  2303  0CAE  3401               	retlw	1
  2304  0CAF  34A3               	retlw	163
  2305  0CB0  3401               	retlw	1
  2306  0CB1  34A1               	retlw	161
  2307  0CB2  3401               	retlw	1
  2308  0CB3  34A0               	retlw	160
  2309  0CB4  3401               	retlw	1
  2310  0CB5  349E               	retlw	158
  2311  0CB6  3401               	retlw	1
  2312  0CB7  349D               	retlw	157
  2313  0CB8  3401               	retlw	1
  2314  0CB9  349B               	retlw	155
  2315  0CBA  3401               	retlw	1
  2316  0CBB  349A               	retlw	154
  2317  0CBC  3401               	retlw	1
  2318  0CBD  3498               	retlw	152
  2319  0CBE  3401               	retlw	1
  2320  0CBF  3497               	retlw	151
  2321  0CC0  3401               	retlw	1
  2322  0CC1  3495               	retlw	149
  2323  0CC2  3401               	retlw	1
  2324  0CC3  3494               	retlw	148
  2325  0CC4  3401               	retlw	1
  2326  0CC5  3492               	retlw	146
  2327  0CC6  3401               	retlw	1
  2328  0CC7  3491               	retlw	145
  2329  0CC8  3401               	retlw	1
  2330  0CC9  3490               	retlw	144
  2331  0CCA  3401               	retlw	1
  2332  0CCB  348E               	retlw	142
  2333  0CCC  3401               	retlw	1
  2334  0CCD  348D               	retlw	141
  2335  0CCE  3401               	retlw	1
  2336  0CCF  348B               	retlw	139
  2337  0CD0  3401               	retlw	1
  2338  0CD1  348A               	retlw	138
  2339  0CD2  3401               	retlw	1
  2340  0CD3  3489               	retlw	137
  2341  0CD4  3401               	retlw	1
  2342  0CD5  3487               	retlw	135
  2343  0CD6  3401               	retlw	1
  2344  0CD7  3486               	retlw	134
  2345  0CD8  3401               	retlw	1
  2346  0CD9  3485               	retlw	133
  2347  0CDA  3401               	retlw	1
  2348  0CDB  3483               	retlw	131
  2349  0CDC  3401               	retlw	1
  2350  0CDD  3482               	retlw	130
  2351  0CDE  3401               	retlw	1
  2352  0CDF  3481               	retlw	129
  2353  0CE0  3401               	retlw	1
  2354  0CE1  347F               	retlw	127
  2355  0CE2  3401               	retlw	1
  2356  0CE3  347E               	retlw	126
  2357  0CE4  3401               	retlw	1
  2358  0CE5  347D               	retlw	125
  2359  0CE6  3401               	retlw	1
  2360  0CE7  347B               	retlw	123
  2361  0CE8  3401               	retlw	1
  2362  0CE9  347A               	retlw	122
  2363  0CEA  3401               	retlw	1
  2364  0CEB  3479               	retlw	121
  2365  0CEC  3401               	retlw	1
  2366  0CED  3478               	retlw	120
  2367  0CEE  3401               	retlw	1
  2368  0CEF  3476               	retlw	118
  2369  0CF0  3401               	retlw	1
  2370  0CF1  3475               	retlw	117
  2371  0CF2  3401               	retlw	1
  2372  0CF3  3474               	retlw	116
  2373  0CF4  3401               	retlw	1
  2374  0CF5  3473               	retlw	115
  2375  0CF6  3401               	retlw	1
  2376  0CF7  3471               	retlw	113
  2377  0CF8  3401               	retlw	1
  2378  0CF9  3470               	retlw	112
  2379  0CFA  3401               	retlw	1
  2380  0CFB  346F               	retlw	111
  2381  0CFC  3401               	retlw	1
  2382  0CFD  346E               	retlw	110
  2383  0CFE  3401               	retlw	1
  2384  000B                     _INTCONbits	set	11
  2385  000D                     _PORTBbits	set	13
  2386  000F                     _PORTDbits	set	15
  2387  0010                     _PORTEbits	set	16
  2388  001B                     _PR2	set	27
  2389  001C                     _T2CONbits	set	28
  2390  009D                     _ADCON0bits	set	157
  2391  009E                     _ADCON1bits	set	158
  2392  009C                     _ADRESH	set	156
  2393  009B                     _ADRESL	set	155
  2394  0095                     _OPTION_REGbits	set	149
  2395  0099                     _OSCCONbits	set	153
  2396  008D                     _TRISBbits	set	141
  2397  008E                     _TRISCbits	set	142
  2398  008F                     _TRISDbits	set	143
  2399  0090                     _TRISEbits	set	144
  2400  011D                     _APFCONbits	set	285
  2401  010E                     _LATCbits	set	270
  2402  010F                     _LATDbits	set	271
  2403  018D                     _ANSELBbits	set	397
  2404  0190                     _ANSELEbits	set	400
  2405  0192                     _PMADRH	set	402
  2406  0191                     _PMADRL	set	401
  2407  0195                     _PMCON1bits	set	405
  2408  0196                     _PMCON2	set	406
  2409  0194                     _PMDATH	set	404
  2410  0193                     _PMDATL	set	403
  2411  0291                     _CCPR1	set	657
  2412  0298                     _CCPR2	set	664
  2413  0293                     _CCP1CONbits	set	659
  2414  029A                     _CCP2CONbits	set	666
  2415  029D                     _CCPTMRS0	set	669
  2416  029E                     _CCPTMRS1	set	670
  2417  029F                     _CCPTMRS2	set	671
  2418  0311                     _CCPR3	set	785
  2419  0318                     _CCPR4	set	792
  2420  031C                     _CCPR5	set	796
  2421  0313                     _CCP3CONbits	set	787
  2422  031A                     _CCP4CONbits	set	794
  2423  031E                     _CCP5CONbits	set	798
  2424  030C                     _TRISFbits	set	780
  2425  030D                     _TRISGbits	set	781
  2426  038C                     _LATFbits	set	908
  2427  038D                     _LATGbits	set	909
  2428  061A                     _CCPR9	set	1562
  2429  061F                     _CCP10CONbits	set	1567
  2430  0613                     _CCP6CONbits	set	1555
  2431  0616                     _CCP7CONbits	set	1558
  2432  0619                     _CCP8CONbits	set	1561
  2433  061C                     _CCP9CONbits	set	1564
  2434                           
  2435                           ; #config settings
  2436  0000                     
  2437                           	psect	cinit
  2438  0046                     start_initialization:	
  2439  0046                     __initialization:		;BIGRAM
  2440                           
  2441                           ; Clear objects allocated to COMMON
  2442  0046  01FA               	clrf	__pbssCOMMON& (0+127)
  2443  0047  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2444                           
  2445                           ; Clear objects allocated to BANK0
  2446  0048  01ED               	clrf	__pbssBANK0& (0+127)
  2447  0049  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  2448                           
  2449                           ; Clear objects allocated to BANK1
  2450  004A  30D0               	movlw	low __pbssBANK1
  2451  004B  0084               	movwf	4
  2452  004C  3000               	movlw	high __pbssBANK1
  2453  004D  0085               	movwf	5
  2454  004E  3014               	movlw	20
  2455  004F  00FE               	movwf	btemp
  2456  0050  3000               	movlw	0
  2457  0051  00FF               	movwf	btemp+1
  2458  0052  3193  2302  3180   	fcall	clear_ram0
  2459                           
  2460                           ; Clear objects allocated to BANK2
  2461  0055  3020               	movlw	low __pbssBANK2
  2462  0056  0084               	movwf	4
  2463  0057  3001               	movlw	high __pbssBANK2
  2464  0058  0085               	movwf	5
  2465  0059  3030               	movlw	48
  2466  005A  00FE               	movwf	btemp
  2467  005B  3000               	movlw	0
  2468  005C  00FF               	movwf	btemp+1
  2469  005D  3193  2302  3180   	fcall	clear_ram0
  2470                           
  2471                           ; Clear objects allocated to BANK4
  2472  0060  3020               	movlw	low __pbssBANK4
  2473  0061  0084               	movwf	4
  2474  0062  3002               	movlw	high __pbssBANK4
  2475  0063  0085               	movwf	5
  2476  0064  3040               	movlw	64
  2477  0065  00FE               	movwf	btemp
  2478  0066  3000               	movlw	0
  2479  0067  00FF               	movwf	btemp+1
  2480  0068  3193  2302  3180   	fcall	clear_ram0
  2481                           
  2482                           ; Initialize objects allocated to BIGRAM
  2483  006B  3001               	movlw	low __pidataBIGRAM
  2484  006C  0084               	movwf	4
  2485  006D  308B               	movlw	(high __pidataBIGRAM)| (0+128)
  2486  006E  0085               	movwf	5
  2487  006F  30F2               	movlw	low (0+9202)
  2488  0070  0086               	movwf	6
  2489  0071  3023               	movlw	high (0+9202)
  2490  0072  0087               	movwf	7
  2491  0073  3001               	movlw	1
  2492  0074  00FF               	movwf	btemp+1
  2493  0075  30FE               	movlw	254
  2494  0076  3192  22F6  3180   	fcall	init_ram
  2495                           
  2496                           ; Initialize objects allocated to BANK1
  2497  0079  300E               	movlw	low __pidataBANK1
  2498  007A  0084               	movwf	4
  2499  007B  3093               	movlw	(high __pidataBANK1)| (0+128)
  2500  007C  0085               	movwf	5
  2501  007D  30E4               	movlw	low __pdataBANK1
  2502  007E  0086               	movwf	6
  2503  007F  3000               	movlw	high __pdataBANK1
  2504  0080  0087               	movwf	7
  2505  0081  3000               	movlw	0
  2506  0082  00FF               	movwf	btemp+1
  2507  0083  300C               	movlw	12
  2508  0084  3192  22F6  3180   	fcall	init_ram
  2509                           
  2510                           ; Initialize objects allocated to BANK2
  2511  0087  30F5               	movlw	low __pidataBANK2
  2512  0088  0084               	movwf	4
  2513  0089  3087               	movlw	(high __pidataBANK2)| (0+128)
  2514  008A  0085               	movwf	5
  2515  008B  3050               	movlw	low __pdataBANK2
  2516  008C  0086               	movwf	6
  2517  008D  3001               	movlw	high __pdataBANK2
  2518  008E  0087               	movwf	7
  2519  008F  3000               	movlw	0
  2520  0090  00FF               	movwf	btemp+1
  2521  0091  300A               	movlw	10
  2522  0092  3192  22F6  3180   	fcall	init_ram
  2523                           
  2524                           ; Initialize objects allocated to BANK3
  2525  0095  30D9               	movlw	low __pidataBANK3
  2526  0096  0084               	movwf	4
  2527  0097  3094               	movlw	(high __pidataBANK3)| (0+128)
  2528  0098  0085               	movwf	5
  2529  0099  30A0               	movlw	low __pdataBANK3
  2530  009A  0086               	movwf	6
  2531  009B  3001               	movlw	high __pdataBANK3
  2532  009C  0087               	movwf	7
  2533  009D  3000               	movlw	0
  2534  009E  00FF               	movwf	btemp+1
  2535  009F  303A               	movlw	58
  2536  00A0  3192  22F6  3180   	fcall	init_ram
  2537                           
  2538                           ; Initialize objects allocated to BANK5
  2539  00A3  309F               	movlw	low __pidataBANK5
  2540  00A4  0084               	movwf	4
  2541  00A5  3094               	movlw	(high __pidataBANK5)| (0+128)
  2542  00A6  0085               	movwf	5
  2543  00A7  30A0               	movlw	low __pdataBANK5
  2544  00A8  0086               	movwf	6
  2545  00A9  3002               	movlw	high __pdataBANK5
  2546  00AA  0087               	movwf	7
  2547  00AB  3000               	movlw	0
  2548  00AC  00FF               	movwf	btemp+1
  2549  00AD  303A               	movlw	58
  2550  00AE  3192  22F6  3180   	fcall	init_ram
  2551                           
  2552                           ; Initialize objects allocated to BANK6
  2553  00B1  3065               	movlw	low __pidataBANK6
  2554  00B2  0084               	movwf	4
  2555  00B3  3094               	movlw	(high __pidataBANK6)| (0+128)
  2556  00B4  0085               	movwf	5
  2557  00B5  3020               	movlw	low __pdataBANK6
  2558  00B6  0086               	movwf	6
  2559  00B7  3003               	movlw	high __pdataBANK6
  2560  00B8  0087               	movwf	7
  2561  00B9  3000               	movlw	0
  2562  00BA  00FF               	movwf	btemp+1
  2563  00BB  303A               	movlw	58
  2564  00BC  3192  22F6  3180   	fcall	init_ram
  2565                           
  2566                           ; Initialize objects allocated to BANK7
  2567  00BF  302B               	movlw	low __pidataBANK7
  2568  00C0  0084               	movwf	4
  2569  00C1  3094               	movlw	(high __pidataBANK7)| (0+128)
  2570  00C2  0085               	movwf	5
  2571  00C3  30A0               	movlw	low __pdataBANK7
  2572  00C4  0086               	movwf	6
  2573  00C5  3003               	movlw	high __pdataBANK7
  2574  00C6  0087               	movwf	7
  2575  00C7  3000               	movlw	0
  2576  00C8  00FF               	movwf	btemp+1
  2577  00C9  303A               	movlw	58
  2578  00CA  3192  22F6  3180   	fcall	init_ram
  2579                           
  2580                           ; Initialize objects allocated to BANK8
  2581  00CD  3000               	movlw	low __pidataBANK8
  2582  00CE  0084               	movwf	4
  2583  00CF  3088               	movlw	(high __pidataBANK8)| (0+128)
  2584  00D0  0085               	movwf	5
  2585  00D1  3020               	movlw	low __pdataBANK8
  2586  00D2  0086               	movwf	6
  2587  00D3  3004               	movlw	high __pdataBANK8
  2588  00D4  0087               	movwf	7
  2589  00D5  3000               	movlw	0
  2590  00D6  00FF               	movwf	btemp+1
  2591  00D7  3050               	movlw	80
  2592  00D8  3192  22F6  3180   	fcall	init_ram
  2593                           
  2594                           ; Initialize objects allocated to BANK9
  2595  00DB  3061               	movlw	low __pidataBANK9
  2596  00DC  0084               	movwf	4
  2597  00DD  3096               	movlw	(high __pidataBANK9)| (0+128)
  2598  00DE  0085               	movwf	5
  2599  00DF  30A0               	movlw	low __pdataBANK9
  2600  00E0  0086               	movwf	6
  2601  00E1  3004               	movlw	high __pdataBANK9
  2602  00E2  0087               	movwf	7
  2603  00E3  3000               	movlw	0
  2604  00E4  00FF               	movwf	btemp+1
  2605  00E5  3050               	movlw	80
  2606  00E6  3192  22F6         	fcall	init_ram
  2607  00E8                     end_of_initialization:	
  2608                           ;End of C runtime variable initialization code
  2609                           
  2610  00E8                     __end_of__initialization:	
  2611  00E8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2612  00E9  0020               	movlb	0
  2613  00EA  3180  28EC         	ljmp	_main	;jump to C main() function
  2614                           
  2615                           	psect	bssCOMMON
  2616  007A                     __pbssCOMMON:	
  2617  007A                     _knob_5_pos:	
  2618  007A                     	ds	2
  2619                           
  2620                           	psect	bssBANK0
  2621  006D                     __pbssBANK0:	
  2622  006D                     _delayfound:	
  2623  006D                     	ds	2
  2624                           
  2625                           	psect	bssBANK1
  2626  00D0                     __pbssBANK1:	
  2627  00D0                     _bypass_state:	
  2628  00D0                     	ds	2
  2629  00D2                     _delay_counter:	
  2630  00D2                     	ds	2
  2631  00D4                     _knob_1_pos:	
  2632  00D4                     	ds	2
  2633  00D6                     _knob_2_pos:	
  2634  00D6                     	ds	2
  2635  00D8                     _knob_3_pos:	
  2636  00D8                     	ds	2
  2637  00DA                     _knob_4_pos:	
  2638  00DA                     	ds	2
  2639  00DC                     _mod_counter:	
  2640  00DC                     	ds	2
  2641  00DE                     _mod_timer:	
  2642  00DE                     	ds	2
  2643  00E0                     _tap_timer:	
  2644  00E0                     	ds	2
  2645  00E2                     _timer:	
  2646  00E2                     	ds	2
  2647                           
  2648                           	psect	dataBANK1
  2649  00E4                     __pdataBANK1:	
  2650  00E4                     _baseline_delay_time:	
  2651  00E4                     	ds	2
  2652  00E6                     _bottom_push_state:	
  2653  00E6                     	ds	2
  2654  00E8                     _delay_time:	
  2655  00E8                     	ds	2
  2656  00EA                     _knob1_prev:	
  2657  00EA                     	ds	2
  2658  00EC                     _tap_iteration:	
  2659  00EC                     	ds	2
  2660  00EE                     _top_push_state:	
  2661  00EE                     	ds	2
  2662                           
  2663                           	psect	bssBANK2
  2664  0120                     __pbssBANK2:	
  2665  0120                     _tap:	
  2666  0120                     	ds	40
  2667  0148                     wait_ms@timel:	
  2668  0148                     	ds	4
  2669  014C                     _SPI_Value:	
  2670  014C                     	ds	2
  2671  014E                     _mod_value:	
  2672  014E                     	ds	2
  2673                           
  2674                           	psect	dataBANK2
  2675  0150                     __pdataBANK2:	
  2676  0150                     _knob2_prev:	
  2677  0150                     	ds	2
  2678  0152                     _knob3_prev:	
  2679  0152                     	ds	2
  2680  0154                     _knob4_prev:	
  2681  0154                     	ds	2
  2682  0156                     _knob5_prev:	
  2683  0156                     	ds	2
  2684  0158                     _mod_delay_time:	
  2685  0158                     	ds	2
  2686                           
  2687                           	psect	dataBANK3
  2688  01A0                     __pdataBANK3:	
  2689  01A0                     _mod1:	
  2690  01A0                     	ds	58
  2691                           
  2692                           	psect	bssBANK4
  2693  0220                     __pbssBANK4:	
  2694  0220                     _myBuf:	
  2695  0220                     	ds	64
  2696                           
  2697                           	psect	dataBANK5
  2698  02A0                     __pdataBANK5:	
  2699  02A0                     _mod2:	
  2700  02A0                     	ds	58
  2701                           
  2702                           	psect	dataBANK6
  2703  0320                     __pdataBANK6:	
  2704  0320                     _mod3:	
  2705  0320                     	ds	58
  2706                           
  2707                           	psect	dataBANK7
  2708  03A0                     __pdataBANK7:	
  2709  03A0                     _mod4:	
  2710  03A0                     	ds	58
  2711                           
  2712                           	psect	dataBANK8
  2713  0420                     __pdataBANK8:	
  2714  0420                     _B25k:	
  2715  0420                     	ds	80
  2716                           
  2717                           	psect	dataBANK9
  2718  04A0                     __pdataBANK9:	
  2719  04A0                     _iB25k:	
  2720  04A0                     	ds	80
  2721                           
  2722                           	psect	clrtext
  2723  1302                     clear_ram0:	
  2724                           ;	Called with FSR0 containing the base address, and
  2725                           ;	btemp/btemp+1 has the size to clear
  2726                           
  2727  1302  0064               	clrwdt	;clear the watchdog before getting into this loop
  2728  1303                     clrloop0:	
  2729  1303  0180               	clrf	0	;clear RAM location pointed to by FSR
  2730  1304  3101               	addfsr 0,1
  2731  1305  3001               	movlw	1
  2732  1306  02FE               	subwf	126,f
  2733  1307  3000               	movlw	0
  2734  1308  3BFF               	subwfb	127,f
  2735  1309  087F               	movf	127,w
  2736  130A  047E               	iorwf	126,w
  2737  130B  1903               	btfsc	3,2
  2738  130C  3400               	retlw	0	;all done for this memory range, return
  2739  130D  2B03               	goto	clrloop0	;have we reached the end yet?
  2740                           
  2741                           	psect	inittext
  2742  12F6                     init_ram:	
  2743  12F6  00FE               	movwf	126
  2744  12F7                     initloop:	
  2745  12F7  0012               	moviw fsr0++
  2746  12F8  001E               	movwi fsr1++
  2747  12F9  3001               	movlw	1
  2748  12FA  02FE               	subwf	126,f
  2749  12FB  3000               	movlw	0
  2750  12FC  3BFF               	subwfb	127,f
  2751  12FD  087F               	movf	127,w
  2752  12FE  047E               	iorwf	126,w
  2753  12FF  1903               	btfsc	3,2
  2754  1300  3400               	retlw	0
  2755  1301  2AF7               	goto	initloop
  2756                           
  2757                           	psect	cstackBANK1
  2758  00A0                     __pcstackBANK1:	
  2759  00A0                     ?_set_subdivision:	
  2760  00A0                     set_subdivision@x:	
  2761                           ; 2 bytes @ 0x0
  2762                           
  2763                           
  2764                           ; 2 bytes @ 0x0
  2765  00A0                     	ds	2
  2766  00A2                     set_subdivision@y:	
  2767                           
  2768                           ; 2 bytes @ 0x2
  2769  00A2                     	ds	2
  2770  00A4                     ??_main:	
  2771                           
  2772                           ; 1 bytes @ 0x4
  2773  00A4                     	ds	36
  2774  00C8                     main@i:	
  2775                           
  2776                           ; 2 bytes @ 0x28
  2777  00C8                     	ds	2
  2778  00CA                     main@adjusted_pot_value:	
  2779                           
  2780                           ; 2 bytes @ 0x2A
  2781  00CA                     	ds	2
  2782  00CC                     main@i_337:	
  2783                           
  2784                           ; 2 bytes @ 0x2C
  2785  00CC                     	ds	2
  2786  00CE                     main@i_338:	
  2787                           
  2788                           ; 2 bytes @ 0x2E
  2789  00CE                     	ds	2
  2790                           
  2791                           	psect	cstackCOMMON
  2792  0070                     __pcstackCOMMON:	
  2793  0070                     ?_ConfigureOscillator:	
  2794  0070                     ?_InitApp:	
  2795                           ; 1 bytes @ 0x0
  2796                           
  2797  0070                     ?_init_adc:	
  2798                           ; 1 bytes @ 0x0
  2799                           
  2800  0070                     ?_init_pwm:	
  2801                           ; 1 bytes @ 0x0
  2802                           
  2803  0070                     ?_init_timer2:	
  2804                           ; 1 bytes @ 0x0
  2805                           
  2806  0070                     ?_init_timer0:	
  2807                           ; 1 bytes @ 0x0
  2808                           
  2809  0070                     ?_isr:	
  2810                           ; 1 bytes @ 0x0
  2811                           
  2812  0070                     ??_isr:	
  2813                           ; 1 bytes @ 0x0
  2814                           
  2815  0070                     ?_main:	
  2816                           ; 1 bytes @ 0x0
  2817                           
  2818                           
  2819                           ; 1 bytes @ 0x0
  2820  0070                     	ds	2
  2821  0072                     ??_ConfigureOscillator:	
  2822  0072                     ??_InitApp:	
  2823                           ; 1 bytes @ 0x2
  2824                           
  2825  0072                     ?_set_leds_top:	
  2826                           ; 1 bytes @ 0x2
  2827                           
  2828  0072                     ?_set_leds_bottom:	
  2829                           ; 1 bytes @ 0x2
  2830                           
  2831  0072                     ??_init_adc:	
  2832                           ; 1 bytes @ 0x2
  2833                           
  2834  0072                     ??_init_pwm:	
  2835                           ; 1 bytes @ 0x2
  2836                           
  2837  0072                     ??_init_timer2:	
  2838                           ; 1 bytes @ 0x2
  2839                           
  2840  0072                     ??_init_timer0:	
  2841                           ; 1 bytes @ 0x2
  2842                           
  2843  0072                     ?_FLASH_EraseBlock:	
  2844                           ; 1 bytes @ 0x2
  2845                           
  2846  0072                     ?_FLASH_ReadWord:	
  2847                           ; 1 bytes @ 0x2
  2848                           
  2849  0072                     ?_adc_convert:	
  2850                           ; 2 bytes @ 0x2
  2851                           
  2852  0072                     ?___wmul:	
  2853                           ; 2 bytes @ 0x2
  2854                           
  2855  0072                     ?___ftpack:	
  2856                           ; 2 bytes @ 0x2
  2857                           
  2858  0072                     ?___ftneg:	
  2859                           ; 3 bytes @ 0x2
  2860                           
  2861  0072                     ?___lmul:	
  2862                           ; 3 bytes @ 0x2
  2863                           
  2864  0072                     set_leds_bottom@x:	
  2865                           ; 4 bytes @ 0x2
  2866                           
  2867  0072                     set_leds_top@x:	
  2868                           ; 2 bytes @ 0x2
  2869                           
  2870  0072                     FLASH_ReadWord@flashAddr:	
  2871                           ; 2 bytes @ 0x2
  2872                           
  2873  0072                     FLASH_EraseBlock@startAddr:	
  2874                           ; 2 bytes @ 0x2
  2875                           
  2876  0072                     ___wmul@multiplier:	
  2877                           ; 2 bytes @ 0x2
  2878                           
  2879  0072                     ___ftpack@arg:	
  2880                           ; 2 bytes @ 0x2
  2881                           
  2882  0072                     ___ftneg@f1:	
  2883                           ; 3 bytes @ 0x2
  2884                           
  2885  0072                     ___lmul@multiplier:	
  2886                           ; 3 bytes @ 0x2
  2887                           
  2888                           
  2889                           ; 4 bytes @ 0x2
  2890  0072                     	ds	2
  2891  0074                     ??_FLASH_ReadWord:	
  2892  0074                     ??_set_leds_top:	
  2893                           ; 1 bytes @ 0x4
  2894                           
  2895  0074                     ??_set_leds_bottom:	
  2896                           ; 1 bytes @ 0x4
  2897                           
  2898  0074                     ??_adc_convert:	
  2899                           ; 1 bytes @ 0x4
  2900                           
  2901  0074                     ??_FLASH_EraseBlock:	
  2902                           ; 1 bytes @ 0x4
  2903                           
  2904  0074                     FLASH_ReadWord@GIEBitValue:	
  2905                           ; 1 bytes @ 0x4
  2906                           
  2907  0074                     FLASH_EraseBlock@GIEBitValue:	
  2908                           ; 1 bytes @ 0x4
  2909                           
  2910  0074                     ___wmul@multiplicand:	
  2911                           ; 1 bytes @ 0x4
  2912                           
  2913                           
  2914                           ; 2 bytes @ 0x4
  2915  0074                     	ds	1
  2916  0075                     ?_FLASH_WriteBlock:	
  2917  0075                     ??___ftneg:	
  2918                           ; 1 bytes @ 0x5
  2919                           
  2920  0075                     adc_convert@channel:	
  2921                           ; 1 bytes @ 0x5
  2922                           
  2923  0075                     ___ftpack@exp:	
  2924                           ; 1 bytes @ 0x5
  2925                           
  2926  0075                     FLASH_WriteBlock@writeAddr:	
  2927                           ; 1 bytes @ 0x5
  2928                           
  2929                           
  2930                           ; 2 bytes @ 0x5
  2931  0075                     	ds	1
  2932  0076                     ??___wmul:	
  2933  0076                     ___ftpack@sign:	
  2934                           ; 1 bytes @ 0x6
  2935                           
  2936  0076                     ___wmul@product:	
  2937                           ; 1 bytes @ 0x6
  2938                           
  2939  0076                     ___lmul@multiplicand:	
  2940                           ; 2 bytes @ 0x6
  2941                           
  2942                           
  2943                           ; 4 bytes @ 0x6
  2944  0076                     	ds	1
  2945  0077                     ??___ftpack:	
  2946  0077                     FLASH_WriteBlock@flashWordArray:	
  2947                           ; 1 bytes @ 0x7
  2948                           
  2949                           
  2950                           ; 1 bytes @ 0x7
  2951  0077                     	ds	1
  2952  0078                     ??_FLASH_WriteWord:	
  2953  0078                     ??___aldiv:	
  2954                           ; 1 bytes @ 0x8
  2955                           
  2956                           
  2957                           ; 1 bytes @ 0x8
  2958  0078                     	ds	2
  2959  007A                     ??_set_subdivision:	
  2960  007A                     ??_wait_ms:	
  2961                           ; 1 bytes @ 0xA
  2962                           
  2963  007A                     ??_map:	
  2964                           ; 1 bytes @ 0xA
  2965                           
  2966  007A                     ??___lmul:	
  2967                           ; 1 bytes @ 0xA
  2968                           
  2969                           
  2970                           	psect	cstackBANK0
  2971  0020                     __pcstackBANK0:	
  2972                           ; 1 bytes @ 0xA
  2973                           
  2974  0020                     ??_FLASH_WriteBlock:	
  2975  0020                     ?___awtoft:	
  2976                           ; 1 bytes @ 0x0
  2977                           
  2978  0020                     ?___ftadd:	
  2979                           ; 3 bytes @ 0x0
  2980                           
  2981  0020                     ?___aldiv:	
  2982                           ; 3 bytes @ 0x0
  2983                           
  2984  0020                     ___awtoft@c:	
  2985                           ; 4 bytes @ 0x0
  2986                           
  2987  0020                     ___ftadd@f1:	
  2988                           ; 2 bytes @ 0x0
  2989                           
  2990  0020                     ___lmul@product:	
  2991                           ; 3 bytes @ 0x0
  2992                           
  2993  0020                     ___aldiv@divisor:	
  2994                           ; 4 bytes @ 0x0
  2995                           
  2996                           
  2997                           ; 4 bytes @ 0x0
  2998  0020                     	ds	3
  2999  0023                     ??___awtoft:	
  3000  0023                     FLASH_WriteBlock@blockStartAddr:	
  3001                           ; 1 bytes @ 0x3
  3002                           
  3003  0023                     ___ftadd@f2:	
  3004                           ; 2 bytes @ 0x3
  3005                           
  3006                           
  3007                           ; 3 bytes @ 0x3
  3008  0023                     	ds	1
  3009  0024                     ?_wait_ms:	
  3010  0024                     wait_ms@time:	
  3011                           ; 1 bytes @ 0x4
  3012                           
  3013  0024                     ___aldiv@dividend:	
  3014                           ; 2 bytes @ 0x4
  3015                           
  3016                           
  3017                           ; 4 bytes @ 0x4
  3018  0024                     	ds	1
  3019  0025                     FLASH_WriteBlock@GIEBitValue:	
  3020  0025                     ___awtoft@sign:	
  3021                           ; 1 bytes @ 0x5
  3022                           
  3023                           
  3024                           ; 1 bytes @ 0x5
  3025  0025                     	ds	1
  3026  0026                     ??___ftadd:	
  3027  0026                     FLASH_WriteBlock@i:	
  3028                           ; 1 bytes @ 0x6
  3029                           
  3030                           
  3031                           ; 1 bytes @ 0x6
  3032  0026                     	ds	1
  3033  0027                     ?_FLASH_WriteWord:	
  3034  0027                     FLASH_WriteWord@flashAddr:	
  3035                           ; 1 bytes @ 0x7
  3036                           
  3037                           
  3038                           ; 2 bytes @ 0x7
  3039  0027                     	ds	1
  3040  0028                     ___aldiv@counter:	
  3041                           
  3042                           ; 1 bytes @ 0x8
  3043  0028                     	ds	1
  3044  0029                     FLASH_WriteWord@ramBuf:	
  3045  0029                     ___aldiv@sign:	
  3046                           ; 1 bytes @ 0x9
  3047                           
  3048                           
  3049                           ; 1 bytes @ 0x9
  3050  0029                     	ds	1
  3051  002A                     ___ftadd@sign:	
  3052  002A                     FLASH_WriteWord@word:	
  3053                           ; 1 bytes @ 0xA
  3054                           
  3055  002A                     ___aldiv@quotient:	
  3056                           ; 2 bytes @ 0xA
  3057                           
  3058                           
  3059                           ; 4 bytes @ 0xA
  3060  002A                     	ds	1
  3061  002B                     ___ftadd@exp2:	
  3062                           
  3063                           ; 1 bytes @ 0xB
  3064  002B                     	ds	1
  3065  002C                     FLASH_WriteWord@offset:	
  3066  002C                     ___ftadd@exp1:	
  3067                           ; 1 bytes @ 0xC
  3068                           
  3069                           
  3070                           ; 1 bytes @ 0xC
  3071  002C                     	ds	1
  3072  002D                     ?___ftmul:	
  3073  002D                     FLASH_WriteWord@blockStartAddr:	
  3074                           ; 3 bytes @ 0xD
  3075                           
  3076  002D                     ___ftmul@f1:	
  3077                           ; 2 bytes @ 0xD
  3078                           
  3079                           
  3080                           ; 3 bytes @ 0xD
  3081  002D                     	ds	1
  3082  002E                     ?_modulation:	
  3083  002E                     modulation@x:	
  3084                           ; 2 bytes @ 0xE
  3085                           
  3086                           
  3087                           ; 2 bytes @ 0xE
  3088  002E                     	ds	1
  3089  002F                     FLASH_WriteWord@i:	
  3090                           
  3091                           ; 1 bytes @ 0xF
  3092  002F                     	ds	1
  3093  0030                     modulation@y:	
  3094  0030                     ___ftmul@f2:	
  3095                           ; 2 bytes @ 0x10
  3096                           
  3097                           
  3098                           ; 3 bytes @ 0x10
  3099  0030                     	ds	2
  3100  0032                     ??_modulation:	
  3101                           
  3102                           ; 1 bytes @ 0x12
  3103  0032                     	ds	1
  3104  0033                     ??___ftmul:	
  3105                           
  3106                           ; 1 bytes @ 0x13
  3107  0033                     	ds	4
  3108  0037                     ___ftmul@exp:	
  3109                           
  3110                           ; 1 bytes @ 0x17
  3111  0037                     	ds	1
  3112  0038                     ___ftmul@f3_as_product:	
  3113                           
  3114                           ; 3 bytes @ 0x18
  3115  0038                     	ds	3
  3116  003B                     ___ftmul@cntr:	
  3117                           
  3118                           ; 1 bytes @ 0x1B
  3119  003B                     	ds	1
  3120  003C                     ___ftmul@sign:	
  3121                           
  3122                           ; 1 bytes @ 0x1C
  3123  003C                     	ds	1
  3124  003D                     ?___ftdiv:	
  3125  003D                     ___ftdiv@f2:	
  3126                           ; 3 bytes @ 0x1D
  3127                           
  3128                           
  3129                           ; 3 bytes @ 0x1D
  3130  003D                     	ds	3
  3131  0040                     ___ftdiv@f1:	
  3132                           
  3133                           ; 3 bytes @ 0x20
  3134  0040                     	ds	3
  3135  0043                     ??___ftdiv:	
  3136                           
  3137                           ; 1 bytes @ 0x23
  3138  0043                     	ds	4
  3139  0047                     ___ftdiv@cntr:	
  3140                           
  3141                           ; 1 bytes @ 0x27
  3142  0047                     	ds	1
  3143  0048                     ___ftdiv@f3:	
  3144                           
  3145                           ; 3 bytes @ 0x28
  3146  0048                     	ds	3
  3147  004B                     ___ftdiv@exp:	
  3148                           
  3149                           ; 1 bytes @ 0x2B
  3150  004B                     	ds	1
  3151  004C                     ___ftdiv@sign:	
  3152                           
  3153                           ; 1 bytes @ 0x2C
  3154  004C                     	ds	1
  3155  004D                     ?_map:	
  3156  004D                     map@x:	
  3157                           ; 3 bytes @ 0x2D
  3158                           
  3159                           
  3160                           ; 3 bytes @ 0x2D
  3161  004D                     	ds	3
  3162  0050                     map@in_min:	
  3163                           
  3164                           ; 3 bytes @ 0x30
  3165  0050                     	ds	3
  3166  0053                     map@in_max:	
  3167                           
  3168                           ; 3 bytes @ 0x33
  3169  0053                     	ds	3
  3170  0056                     map@out_min:	
  3171                           
  3172                           ; 3 bytes @ 0x36
  3173  0056                     	ds	3
  3174  0059                     map@out_max:	
  3175                           
  3176                           ; 3 bytes @ 0x39
  3177  0059                     	ds	3
  3178  005C                     _map$1507:	
  3179                           
  3180                           ; 3 bytes @ 0x3C
  3181  005C                     	ds	3
  3182  005F                     ?___fttol:	
  3183  005F                     ___fttol@f1:	
  3184                           ; 4 bytes @ 0x3F
  3185                           
  3186                           
  3187                           ; 3 bytes @ 0x3F
  3188  005F                     	ds	4
  3189  0063                     ??___fttol:	
  3190                           
  3191                           ; 1 bytes @ 0x43
  3192  0063                     	ds	4
  3193  0067                     ___fttol@sign1:	
  3194                           
  3195                           ; 1 bytes @ 0x47
  3196  0067                     	ds	1
  3197  0068                     ___fttol@lval:	
  3198                           
  3199                           ; 4 bytes @ 0x48
  3200  0068                     	ds	4
  3201  006C                     ___fttol@exp1:	
  3202                           
  3203                           ; 1 bytes @ 0x4C
  3204  006C                     	ds	1
  3205                           
  3206                           	psect	maintext
  3207  00EC                     __pmaintext:	
  3208 ;;
  3209 ;;Main: autosize = 0, tempsize = 36, incstack = 0, save=0
  3210 ;;
  3211 ;; *************** function _main *****************
  3212 ;; Defined at:
  3213 ;;		line 80 in file "main.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  adjusted_pot    2   42[BANK1 ] int 
  3218 ;;  i               2   46[BANK1 ] int 
  3219 ;;  i               2   44[BANK1 ] int 
  3220 ;;  i               2   40[BANK1 ] int 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : B1F/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3231 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3232 ;;      Temps:          0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3233 ;;      Totals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3234 ;;Total ram usage:       44 bytes
  3235 ;; Hardware stack levels required when called:    4
  3236 ;; This function calls:
  3237 ;;		_ConfigureOscillator
  3238 ;;		_FLASH_ReadWord
  3239 ;;		_FLASH_WriteWord
  3240 ;;		_InitApp
  3241 ;;		___aldiv
  3242 ;;		___awtoft
  3243 ;;		___ftdiv
  3244 ;;		___fttol
  3245 ;;		_adc_convert
  3246 ;;		_map
  3247 ;;		_modulation
  3248 ;;		_set_leds_bottom
  3249 ;;		_set_leds_top
  3250 ;;		_set_subdivision
  3251 ;;		_wait_ms
  3252 ;; This function is called by:
  3253 ;;		Startup code after reset
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _main
  3259  00EC                     _main:	
  3260                           
  3261                           ;main.c: 81: ConfigureOscillator();
  3262                           
  3263                           ;incstack = 0
  3264                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3265  00EC  3192  22D0  3180   	fcall	_ConfigureOscillator
  3266                           
  3267                           ;main.c: 82: InitApp();
  3268  00EF  3193  23C9  3180   	fcall	_InitApp
  3269                           
  3270                           ;main.c: 84: tap[1] = 0;
  3271  00F2  3000               	movlw	0
  3272  00F3  0022               	movlb	2	; select bank2
  3273  00F4  00A7               	movwf	((_tap+3)^(0+256)+4)
  3274  00F5  3000               	movlw	0
  3275  00F6  00A6               	movwf	((_tap+2)^(0+256)+4)
  3276  00F7  3000               	movlw	0
  3277  00F8  00A5               	movwf	((_tap+1)^(0+256)+4)
  3278  00F9  3000               	movlw	0
  3279  00FA  00A4               	movwf	(_tap^(0+256)+4)
  3280                           
  3281                           ;main.c: 85: tap[2] = 0;
  3282  00FB  3000               	movlw	0
  3283  00FC  00AB               	movwf	((_tap+3)^(0+256)+8)
  3284  00FD  3000               	movlw	0
  3285  00FE  00AA               	movwf	((_tap+2)^(0+256)+8)
  3286  00FF  3000               	movlw	0
  3287  0100  00A9               	movwf	((_tap+1)^(0+256)+8)
  3288  0101  3000               	movlw	0
  3289  0102  00A8               	movwf	(_tap^(0+256)+8)
  3290                           
  3291                           ;main.c: 86: tap[3] = 0;
  3292  0103  3000               	movlw	0
  3293  0104  00AF               	movwf	((_tap+3)^(0+256)+12)
  3294  0105  3000               	movlw	0
  3295  0106  00AE               	movwf	((_tap+2)^(0+256)+12)
  3296  0107  3000               	movlw	0
  3297  0108  00AD               	movwf	((_tap+1)^(0+256)+12)
  3298  0109  3000               	movlw	0
  3299  010A  00AC               	movwf	(_tap^(0+256)+12)
  3300                           
  3301                           ;main.c: 87: tap[4] = 0;
  3302  010B  3000               	movlw	0
  3303  010C  00B3               	movwf	((_tap+3)^(0+256)+16)
  3304  010D  3000               	movlw	0
  3305  010E  00B2               	movwf	((_tap+2)^(0+256)+16)
  3306  010F  3000               	movlw	0
  3307  0110  00B1               	movwf	((_tap+1)^(0+256)+16)
  3308  0111  3000               	movlw	0
  3309  0112  00B0               	movwf	(_tap^(0+256)+16)
  3310                           
  3311                           ;main.c: 88: tap[5] = 0;
  3312  0113  3000               	movlw	0
  3313  0114  00B7               	movwf	((_tap+3)^(0+256)+20)
  3314  0115  3000               	movlw	0
  3315  0116  00B6               	movwf	((_tap+2)^(0+256)+20)
  3316  0117  3000               	movlw	0
  3317  0118  00B5               	movwf	((_tap+1)^(0+256)+20)
  3318  0119  3000               	movlw	0
  3319  011A  00B4               	movwf	(_tap^(0+256)+20)
  3320                           
  3321                           ;main.c: 89: tap[6] = 0;
  3322  011B  3000               	movlw	0
  3323  011C  00BB               	movwf	((_tap+3)^(0+256)+24)
  3324  011D  3000               	movlw	0
  3325  011E  00BA               	movwf	((_tap+2)^(0+256)+24)
  3326  011F  3000               	movlw	0
  3327  0120  00B9               	movwf	((_tap+1)^(0+256)+24)
  3328  0121  3000               	movlw	0
  3329  0122  00B8               	movwf	(_tap^(0+256)+24)
  3330                           
  3331                           ;main.c: 90: tap[7] = 0;
  3332  0123  3000               	movlw	0
  3333  0124  00BF               	movwf	((_tap+3)^(0+256)+28)
  3334  0125  3000               	movlw	0
  3335  0126  00BE               	movwf	((_tap+2)^(0+256)+28)
  3336  0127  3000               	movlw	0
  3337  0128  00BD               	movwf	((_tap+1)^(0+256)+28)
  3338  0129  3000               	movlw	0
  3339  012A  00BC               	movwf	(_tap^(0+256)+28)
  3340                           
  3341                           ;main.c: 91: tap[8] = 0;
  3342  012B  3000               	movlw	0
  3343  012C  00C3               	movwf	((_tap+3)^(0+256)+32)
  3344  012D  3000               	movlw	0
  3345  012E  00C2               	movwf	((_tap+2)^(0+256)+32)
  3346  012F  3000               	movlw	0
  3347  0130  00C1               	movwf	((_tap+1)^(0+256)+32)
  3348  0131  3000               	movlw	0
  3349  0132  00C0               	movwf	(_tap^(0+256)+32)
  3350                           
  3351                           ;main.c: 92: tap[9] = 0;
  3352  0133  3000               	movlw	0
  3353  0134  00C7               	movwf	((_tap+3)^(0+256)+36)
  3354  0135  3000               	movlw	0
  3355  0136  00C6               	movwf	((_tap+2)^(0+256)+36)
  3356  0137  3000               	movlw	0
  3357  0138  00C5               	movwf	((_tap+1)^(0+256)+36)
  3358  0139  3000               	movlw	0
  3359  013A  00C4               	movwf	(_tap^(0+256)+36)
  3360                           
  3361                           ;main.c: 93: tap[10] = 0;
  3362  013B  3000               	movlw	0
  3363  013C  00CB               	movwf	((_tap+3)^(0+256)+40)
  3364  013D  3000               	movlw	0
  3365  013E  00CA               	movwf	((_tap+2)^(0+256)+40)
  3366  013F  3000               	movlw	0
  3367  0140  00C9               	movwf	((_tap+1)^(0+256)+40)
  3368  0141  3000               	movlw	0
  3369  0142  00C8               	movwf	(_tap^(0+256)+40)
  3370                           
  3371                           ;main.c: 96: top_push_state = FLASH_ReadWord(0x1F81);
  3372  0143  3081               	movlw	129
  3373  0144  00F2               	movwf	FLASH_ReadWord@flashAddr
  3374  0145  301F               	movlw	31
  3375  0146  00F3               	movwf	FLASH_ReadWord@flashAddr+1
  3376  0147  3193  232D  3180   	fcall	_FLASH_ReadWord
  3377  014A  0873               	movf	?_FLASH_ReadWord+1,w
  3378  014B  0021               	movlb	1	; select bank1
  3379  014C  00EF               	movwf	(_top_push_state+1)^(0+128)
  3380  014D  0872               	movf	?_FLASH_ReadWord,w
  3381  014E  00EE               	movwf	_top_push_state^(0+128)
  3382                           
  3383                           ;main.c: 97: bottom_push_state = FLASH_ReadWord(0x1F82);
  3384  014F  3082               	movlw	130
  3385  0150  00F2               	movwf	FLASH_ReadWord@flashAddr
  3386  0151  301F               	movlw	31
  3387  0152  00F3               	movwf	FLASH_ReadWord@flashAddr+1
  3388  0153  3193  232D  3180   	fcall	_FLASH_ReadWord
  3389  0156  0873               	movf	?_FLASH_ReadWord+1,w
  3390  0157  0021               	movlb	1	; select bank1
  3391  0158  00E7               	movwf	(_bottom_push_state+1)^(0+128)
  3392  0159  0872               	movf	?_FLASH_ReadWord,w
  3393  015A  00E6               	movwf	_bottom_push_state^(0+128)
  3394                           
  3395                           ;main.c: 98: baseline_delay_time = FLASH_ReadWord(0x1F80);
  3396  015B  3080               	movlw	128
  3397  015C  00F2               	movwf	FLASH_ReadWord@flashAddr
  3398  015D  301F               	movlw	31
  3399  015E  00F3               	movwf	FLASH_ReadWord@flashAddr+1
  3400  015F  3193  232D  3180   	fcall	_FLASH_ReadWord
  3401  0162  0873               	movf	?_FLASH_ReadWord+1,w
  3402  0163  0021               	movlb	1	; select bank1
  3403  0164  00E5               	movwf	(_baseline_delay_time+1)^(0+128)
  3404  0165  0872               	movf	?_FLASH_ReadWord,w
  3405  0166  00E4               	movwf	_baseline_delay_time^(0+128)
  3406                           
  3407                           ;main.c: 101: LATGbits.LATG1 = !bypass_state;
  3408  0167  0850               	movf	_bypass_state^(0+128),w
  3409  0168  0451               	iorwf	(_bypass_state+1)^(0+128),w
  3410  0169  1D03               	btfss	3,2
  3411  016A  296E               	goto	u2850
  3412  016B  0027               	movlb	7	; select bank7
  3413  016C  148D               	bsf	13,1	;volatile
  3414  016D  2970               	goto	l2757
  3415  016E                     u2850:	
  3416  016E  0027               	movlb	7	; select bank7
  3417  016F  108D               	bcf	13,1	;volatile
  3418  0170                     l2757:	
  3419                           
  3420                           ;main.c: 102: LATGbits.LATG2 = bypass_state;
  3421  0170  0021               	movlb	1	; select bank1
  3422  0171  0C50               	rrf	_bypass_state^(0+128),w
  3423  0172  0027               	movlb	7	; select bank7
  3424  0173  1C03               	skipc
  3425  0174  110D               	bcf	13,2	;volatile
  3426  0175  1803               	skipnc
  3427  0176  150D               	bsf	13,2	;volatile
  3428                           
  3429                           ;main.c: 103: LATFbits.LATF6 = bypass_state;
  3430  0177  0021               	movlb	1	; select bank1
  3431  0178  0C50               	rrf	_bypass_state^(0+128),w
  3432  0179  0027               	movlb	7	; select bank7
  3433  017A  1C03               	skipc
  3434  017B  130C               	bcf	12,6	;volatile
  3435  017C  1803               	skipnc
  3436  017D  170C               	bsf	12,6	;volatile
  3437                           
  3438                           ;main.c: 104: set_leds_top(top_push_state);
  3439  017E  0021               	movlb	1	; select bank1
  3440  017F  086F               	movf	(_top_push_state+1)^(0+128),w
  3441  0180  00F3               	movwf	set_leds_top@x+1
  3442  0181  086E               	movf	_top_push_state^(0+128),w
  3443  0182  00F2               	movwf	set_leds_top@x
  3444  0183  3196  261C  3180   	fcall	_set_leds_top
  3445                           
  3446                           ;main.c: 105: set_leds_bottom(bottom_push_state);
  3447  0186  0021               	movlb	1	; select bank1
  3448  0187  0867               	movf	(_bottom_push_state+1)^(0+128),w
  3449  0188  00F3               	movwf	set_leds_bottom@x+1
  3450  0189  0866               	movf	_bottom_push_state^(0+128),w
  3451  018A  00F2               	movwf	set_leds_bottom@x
  3452  018B  3195  25D7  3180   	fcall	_set_leds_bottom
  3453                           
  3454                           ;main.c: 106: delay_time = set_subdivision(baseline_delay_time, top_push_state);
  3455  018E  0021               	movlb	1	; select bank1
  3456  018F  0865               	movf	(_baseline_delay_time+1)^(0+128),w
  3457  0190  00A1               	movwf	(set_subdivision@x+1)^(0+128)
  3458  0191  0864               	movf	_baseline_delay_time^(0+128),w
  3459  0192  00A0               	movwf	set_subdivision@x^(0+128)
  3460  0193  086F               	movf	(_top_push_state+1)^(0+128),w
  3461  0194  00A3               	movwf	(set_subdivision@y+1)^(0+128)
  3462  0195  086E               	movf	_top_push_state^(0+128),w
  3463  0196  00A2               	movwf	set_subdivision@y^(0+128)
  3464  0197  3186  2648  3180   	fcall	_set_subdivision
  3465  019A  0021               	movlb	1	; select bank1
  3466  019B  0821               	movf	(?_set_subdivision+1)^(0+128),w
  3467  019C  00E9               	movwf	(_delay_time+1)^(0+128)	;volatile
  3468  019D  0820               	movf	?_set_subdivision^(0+128),w
  3469  019E  00E8               	movwf	_delay_time^(0+128)	;volatile
  3470  019F                     l2767:	
  3471                           ;main.c: 108: while (1) {
  3472                           
  3473                           
  3474                           ;main.c: 110: if (PORTBbits.RB0 == 1) {
  3475  019F  0020               	movlb	0	; select bank0
  3476  01A0  080D               	movf	13,w	;volatile
  3477                           
  3478                           ;main.c: 112: }
  3479                           ;main.c: 120: if (PORTDbits.RD6 == 0) {
  3480  01A1  1B0F               	btfsc	15,6	;volatile
  3481  01A2  29E2               	goto	l2781
  3482                           
  3483                           ;main.c: 121: bottom_push_state = bottom_push_state + 1;
  3484  01A3  0021               	movlb	1	; select bank1
  3485  01A4  0866               	movf	_bottom_push_state^(0+128),w
  3486  01A5  3E01               	addlw	1
  3487  01A6  00E6               	movwf	_bottom_push_state^(0+128)
  3488  01A7  3000               	movlw	0
  3489  01A8  3D67               	addwfc	(_bottom_push_state+1)^(0+128),w
  3490  01A9  00E7               	movwf	(_bottom_push_state+1)^(0+128)
  3491                           
  3492                           ;main.c: 122: if (bottom_push_state >= 7) {
  3493  01AA  0867               	movf	(_bottom_push_state+1)^(0+128),w
  3494  01AB  3A80               	xorlw	128
  3495  01AC  00A4               	movwf	??_main^(0+128)
  3496  01AD  3080               	movlw	128
  3497  01AE  0224               	subwf	??_main^(0+128),w
  3498  01AF  1D03               	skipz
  3499  01B0  29B3               	goto	u2885
  3500  01B1  3007               	movlw	7
  3501  01B2  0266               	subwf	_bottom_push_state^(0+128),w
  3502  01B3                     u2885:	
  3503  01B3  1C03               	skipc
  3504  01B4  29BA               	goto	l2775
  3505                           
  3506                           ;main.c: 123: bottom_push_state = 1;
  3507  01B5  3001               	movlw	1
  3508  01B6  0021               	movlb	1	; select bank1
  3509  01B7  00E6               	movwf	_bottom_push_state^(0+128)
  3510  01B8  3000               	movlw	0
  3511  01B9  00E7               	movwf	(_bottom_push_state^(0+128)+1)
  3512  01BA                     l2775:	
  3513                           
  3514                           ;main.c: 124: }
  3515                           ;main.c: 125: set_leds_bottom(bottom_push_state);
  3516  01BA  0021               	movlb	1	; select bank1
  3517  01BB  0867               	movf	(_bottom_push_state+1)^(0+128),w
  3518  01BC  00F3               	movwf	set_leds_bottom@x+1
  3519  01BD  0866               	movf	_bottom_push_state^(0+128),w
  3520  01BE  00F2               	movwf	set_leds_bottom@x
  3521  01BF  3195  25D7  3180   	fcall	_set_leds_bottom
  3522                           
  3523                           ;main.c: 126: FLASH_WriteWord(0x1F82, myBuf, bottom_push_state);
  3524  01C2  3082               	movlw	130
  3525  01C3  0020               	movlb	0	; select bank0
  3526  01C4  00A7               	movwf	FLASH_WriteWord@flashAddr
  3527  01C5  301F               	movlw	31
  3528  01C6  00A8               	movwf	FLASH_WriteWord@flashAddr+1
  3529  01C7  3020               	movlw	(low (_myBuf| (0+512)))& (0+255)
  3530  01C8  0021               	movlb	1	; select bank1
  3531  01C9  00A4               	movwf	??_main^(0+128)
  3532  01CA  0824               	movf	??_main^(0+128),w
  3533  01CB  0020               	movlb	0	; select bank0
  3534  01CC  00A9               	movwf	FLASH_WriteWord@ramBuf
  3535  01CD  0021               	movlb	1	; select bank1
  3536  01CE  0867               	movf	(_bottom_push_state+1)^(0+128),w
  3537  01CF  0020               	movlb	0	; select bank0
  3538  01D0  00AB               	movwf	FLASH_WriteWord@word+1
  3539  01D1  0021               	movlb	1	; select bank1
  3540  01D2  0866               	movf	_bottom_push_state^(0+128),w
  3541  01D3  0020               	movlb	0	; select bank0
  3542  01D4  00AA               	movwf	FLASH_WriteWord@word
  3543  01D5  3195  2592  3180   	fcall	_FLASH_WriteWord
  3544  01D8                     l139:	
  3545                           ;main.c: 127: while (PORTDbits.RD6 == 0) {
  3546                           
  3547  01D8  0020               	movlb	0	; select bank0
  3548  01D9  1F0F               	btfss	15,6	;volatile
  3549  01DA  29D8               	goto	l139
  3550                           
  3551                           ;main.c: 128: }
  3552                           ;main.c: 129: wait_ms(20);
  3553  01DB  3014               	movlw	20
  3554  01DC  00A4               	movwf	wait_ms@time
  3555  01DD  3000               	movlw	0
  3556  01DE  00A5               	movwf	wait_ms@time+1
  3557  01DF  3193  239F  3180   	fcall	_wait_ms
  3558  01E2                     l2781:	
  3559                           
  3560                           ;main.c: 130: }
  3561                           ;main.c: 141: if (PORTDbits.RD5 == 0) {
  3562  01E2  0020               	movlb	0	; select bank0
  3563  01E3  1A8F               	btfsc	15,5	;volatile
  3564  01E4  2AA3               	goto	l2809
  3565                           
  3566                           ;main.c: 142: top_push_state = top_push_state + 1;
  3567  01E5  0021               	movlb	1	; select bank1
  3568  01E6  086E               	movf	_top_push_state^(0+128),w
  3569  01E7  3E01               	addlw	1
  3570  01E8  00EE               	movwf	_top_push_state^(0+128)
  3571  01E9  3000               	movlw	0
  3572  01EA  3D6F               	addwfc	(_top_push_state+1)^(0+128),w
  3573  01EB  00EF               	movwf	(_top_push_state+1)^(0+128)
  3574                           
  3575                           ;main.c: 143: if (top_push_state >= 7) {
  3576  01EC  086F               	movf	(_top_push_state+1)^(0+128),w
  3577  01ED  3A80               	xorlw	128
  3578  01EE  00A4               	movwf	??_main^(0+128)
  3579  01EF  3080               	movlw	128
  3580  01F0  0224               	subwf	??_main^(0+128),w
  3581  01F1  1D03               	skipz
  3582  01F2  29F5               	goto	u2915
  3583  01F3  3007               	movlw	7
  3584  01F4  026E               	subwf	_top_push_state^(0+128),w
  3585  01F5                     u2915:	
  3586  01F5  1C03               	skipc
  3587  01F6  29FC               	goto	l2789
  3588                           
  3589                           ;main.c: 144: top_push_state = 1;
  3590  01F7  3001               	movlw	1
  3591  01F8  0021               	movlb	1	; select bank1
  3592  01F9  00EE               	movwf	_top_push_state^(0+128)
  3593  01FA  3000               	movlw	0
  3594  01FB  00EF               	movwf	(_top_push_state^(0+128)+1)
  3595  01FC                     l2789:	
  3596                           
  3597                           ;main.c: 145: }
  3598                           ;main.c: 146: set_leds_top(top_push_state);
  3599  01FC  0021               	movlb	1	; select bank1
  3600  01FD  086F               	movf	(_top_push_state+1)^(0+128),w
  3601  01FE  00F3               	movwf	set_leds_top@x+1
  3602  01FF  086E               	movf	_top_push_state^(0+128),w
  3603  0200  00F2               	movwf	set_leds_top@x
  3604  0201  3196  261C  3180   	fcall	_set_leds_top
  3605                           
  3606                           ;main.c: 147: delay_time = set_subdivision(baseline_delay_time, top_push_state);
  3607  0204  0021               	movlb	1	; select bank1
  3608  0205  0865               	movf	(_baseline_delay_time+1)^(0+128),w
  3609  0206  00A1               	movwf	(set_subdivision@x+1)^(0+128)
  3610  0207  0864               	movf	_baseline_delay_time^(0+128),w
  3611  0208  00A0               	movwf	set_subdivision@x^(0+128)
  3612  0209  086F               	movf	(_top_push_state+1)^(0+128),w
  3613  020A  00A3               	movwf	(set_subdivision@y+1)^(0+128)
  3614  020B  086E               	movf	_top_push_state^(0+128),w
  3615  020C  00A2               	movwf	set_subdivision@y^(0+128)
  3616  020D  3186  2648  3180   	fcall	_set_subdivision
  3617  0210  0021               	movlb	1	; select bank1
  3618  0211  0821               	movf	(?_set_subdivision+1)^(0+128),w
  3619  0212  00E9               	movwf	(_delay_time+1)^(0+128)	;volatile
  3620  0213  0820               	movf	?_set_subdivision^(0+128),w
  3621  0214  00E8               	movwf	_delay_time^(0+128)	;volatile
  3622                           
  3623                           ;main.c: 148: delayfound = 0;
  3624  0215  0020               	movlb	0	; select bank0
  3625  0216  01ED               	clrf	_delayfound
  3626  0217  01EE               	clrf	_delayfound+1
  3627                           
  3628                           ;main.c: 149: delay_counter = 0;
  3629  0218  0021               	movlb	1	; select bank1
  3630  0219  01D2               	clrf	_delay_counter^(0+128)
  3631  021A  01D3               	clrf	(_delay_counter+1)^(0+128)
  3632  021B                     l144:	
  3633                           ;main.c: 150: while (delayfound == 0) {
  3634                           
  3635  021B  0020               	movlb	0	; select bank0
  3636  021C  086D               	movf	_delayfound,w
  3637  021D  046E               	iorwf	_delayfound+1,w
  3638  021E  1D03               	btfss	3,2
  3639  021F  2A57               	goto	l2803
  3640                           
  3641                           ;main.c: 151: if (delay[delay_counter] <= delay_time) {
  3642  0220  0021               	movlb	1	; select bank1
  3643  0221  0853               	movf	(_delay_counter+1)^(0+128),w
  3644  0222  00A5               	movwf	(??_main^(0+128)+1)
  3645  0223  0852               	movf	_delay_counter^(0+128),w
  3646  0224  00A4               	movwf	??_main^(0+128)
  3647  0225  35A4               	lslf	??_main^(0+128),f
  3648  0226  0DA5               	rlf	(??_main^(0+128)+1),f
  3649  0227  30F2               	movlw	242
  3650  0228  00A6               	movwf	(??_main+2)^(0+128)
  3651  0229  3023               	movlw	35
  3652  022A  00A7               	movwf	((??_main+2)^(0+128)+1)
  3653  022B  0824               	movf	??_main^(0+128),w
  3654  022C  0726               	addwf	(??_main+2)^(0+128),w
  3655  022D  0086               	movwf	6
  3656  022E  0825               	movf	(??_main+1)^(0+128),w
  3657  022F  3D27               	addwfc	(??_main+3)^(0+128),w
  3658  0230  0087               	movwf	7
  3659  0231  3F40               	moviw [0]fsr1
  3660  0232  00A8               	movwf	(??_main+4)^(0+128)
  3661  0233  3F41               	moviw [1]fsr1
  3662  0234  00A9               	movwf	((??_main+4)^(0+128)+1)
  3663  0235  0869               	movf	(_delay_time+1)^(0+128),w	;volatile
  3664  0236  3A80               	xorlw	128
  3665  0237  00AA               	movwf	(??_main+6)^(0+128)
  3666  0238  0829               	movf	(??_main+5)^(0+128),w
  3667  0239  3A80               	xorlw	128
  3668  023A  022A               	subwf	(??_main+6)^(0+128),w
  3669  023B  1D03               	skipz
  3670  023C  2A3F               	goto	u2925
  3671  023D  0828               	movf	(??_main+4)^(0+128),w
  3672  023E  0268               	subwf	_delay_time^(0+128),w	;volatile
  3673  023F                     u2925:	
  3674  023F  1C03               	skipc
  3675  0240  2A4F               	goto	l2801
  3676                           
  3677                           ;main.c: 152: delayfound = 1;
  3678  0241  3001               	movlw	1
  3679  0242  0020               	movlb	0	; select bank0
  3680  0243  00ED               	movwf	_delayfound
  3681  0244  3000               	movlw	0
  3682  0245  00EE               	movwf	_delayfound+1
  3683                           
  3684                           ;main.c: 153: CCPR1 = delay_counter;
  3685  0246  0021               	movlb	1	; select bank1
  3686  0247  0853               	movf	(_delay_counter+1)^(0+128),w
  3687  0248  0025               	movlb	5	; select bank5
  3688  0249  0092               	movwf	18	;volatile
  3689  024A  0021               	movlb	1	; select bank1
  3690  024B  0852               	movf	_delay_counter^(0+128),w
  3691  024C  0025               	movlb	5	; select bank5
  3692  024D  0091               	movwf	17	;volatile
  3693                           
  3694                           ;main.c: 154: } else {
  3695  024E  2A1B               	goto	l144
  3696  024F                     l2801:	
  3697                           
  3698                           ;main.c: 155: delay_counter = delay_counter + 1;
  3699  024F  0021               	movlb	1	; select bank1
  3700  0250  0852               	movf	_delay_counter^(0+128),w
  3701  0251  3E01               	addlw	1
  3702  0252  00D2               	movwf	_delay_counter^(0+128)
  3703  0253  3000               	movlw	0
  3704  0254  3D53               	addwfc	(_delay_counter+1)^(0+128),w
  3705  0255  00D3               	movwf	(_delay_counter+1)^(0+128)
  3706  0256  2A1B               	goto	l144
  3707  0257                     l2803:	
  3708                           
  3709                           ;main.c: 156: }
  3710                           ;main.c: 157: }
  3711                           ;main.c: 158: FLASH_WriteWord(0x1F81, myBuf, top_push_state);
  3712  0257  3081               	movlw	129
  3713  0258  00A7               	movwf	FLASH_WriteWord@flashAddr
  3714  0259  301F               	movlw	31
  3715  025A  00A8               	movwf	FLASH_WriteWord@flashAddr+1
  3716  025B  3020               	movlw	(low (_myBuf| (0+512)))& (0+255)
  3717  025C  0021               	movlb	1	; select bank1
  3718  025D  00A4               	movwf	??_main^(0+128)
  3719  025E  0824               	movf	??_main^(0+128),w
  3720  025F  0020               	movlb	0	; select bank0
  3721  0260  00A9               	movwf	FLASH_WriteWord@ramBuf
  3722  0261  0021               	movlb	1	; select bank1
  3723  0262  086F               	movf	(_top_push_state+1)^(0+128),w
  3724  0263  0020               	movlb	0	; select bank0
  3725  0264  00AB               	movwf	FLASH_WriteWord@word+1
  3726  0265  0021               	movlb	1	; select bank1
  3727  0266  086E               	movf	_top_push_state^(0+128),w
  3728  0267  0020               	movlb	0	; select bank0
  3729  0268  00AA               	movwf	FLASH_WriteWord@word
  3730  0269  3195  2592  3180   	fcall	_FLASH_WriteWord
  3731                           
  3732                           ;main.c: 159: mod_delay_time = delay_time / 7.5;
  3733  026C  0021               	movlb	1	; select bank1
  3734  026D  0869               	movf	(_delay_time+1)^(0+128),w	;volatile
  3735  026E  0020               	movlb	0	; select bank0
  3736  026F  00A1               	movwf	___awtoft@c+1
  3737  0270  0021               	movlb	1	; select bank1
  3738  0271  0868               	movf	_delay_time^(0+128),w	;volatile
  3739  0272  0020               	movlb	0	; select bank0
  3740  0273  00A0               	movwf	___awtoft@c
  3741  0274  3193  237D  3180   	fcall	___awtoft
  3742  0277  0020               	movlb	0	; select bank0
  3743  0278  0820               	movf	?___awtoft,w
  3744  0279  00C0               	movwf	___ftdiv@f1
  3745  027A  0821               	movf	?___awtoft+1,w
  3746  027B  00C1               	movwf	___ftdiv@f1+1
  3747  027C  0822               	movf	?___awtoft+2,w
  3748  027D  00C2               	movwf	___ftdiv@f1+2
  3749  027E  3000               	movlw	0
  3750  027F  00BD               	movwf	___ftdiv@f2
  3751  0280  30F0               	movlw	240
  3752  0281  00BE               	movwf	___ftdiv@f2+1
  3753  0282  3040               	movlw	64
  3754  0283  00BF               	movwf	___ftdiv@f2+2
  3755  0284  3189  2162  3180   	fcall	___ftdiv
  3756  0287  0020               	movlb	0	; select bank0
  3757  0288  083D               	movf	?___ftdiv,w
  3758  0289  00DF               	movwf	___fttol@f1
  3759  028A  083E               	movf	?___ftdiv+1,w
  3760  028B  00E0               	movwf	___fttol@f1+1
  3761  028C  083F               	movf	?___ftdiv+2,w
  3762  028D  00E1               	movwf	___fttol@f1+2
  3763  028E  3188  2050  3180   	fcall	___fttol
  3764  0291  0020               	movlb	0	; select bank0
  3765  0292  0860               	movf	?___fttol+1,w
  3766  0293  0022               	movlb	2	; select bank2
  3767  0294  00D9               	movwf	(_mod_delay_time+1)^(0+256)
  3768  0295  0020               	movlb	0	; select bank0
  3769  0296  085F               	movf	?___fttol,w
  3770  0297  0022               	movlb	2	; select bank2
  3771  0298  00D8               	movwf	_mod_delay_time^(0+256)
  3772  0299                     l149:	
  3773                           ;main.c: 160: while (PORTDbits.RD5 == 0) {
  3774                           
  3775  0299  0020               	movlb	0	; select bank0
  3776  029A  1E8F               	btfss	15,5	;volatile
  3777  029B  2A99               	goto	l149
  3778                           
  3779                           ;main.c: 161: }
  3780                           ;main.c: 162: wait_ms(20);
  3781  029C  3014               	movlw	20
  3782  029D  00A4               	movwf	wait_ms@time
  3783  029E  3000               	movlw	0
  3784  029F  00A5               	movwf	wait_ms@time+1
  3785  02A0  3193  239F  3180   	fcall	_wait_ms
  3786  02A3                     l2809:	
  3787                           
  3788                           ;main.c: 163: }
  3789                           ;main.c: 173: if (PORTEbits.RE1 == 0) {
  3790  02A3  0020               	movlb	0	; select bank0
  3791  02A4  1890               	btfsc	16,1	;volatile
  3792  02A5  2AD8               	goto	l2821
  3793                           
  3794                           ;main.c: 174: bypass_state = !bypass_state;
  3795  02A6  0021               	movlb	1	; select bank1
  3796  02A7  0850               	movf	_bypass_state^(0+128),w
  3797  02A8  0451               	iorwf	(_bypass_state+1)^(0+128),w
  3798  02A9  1D03               	btfss	3,2
  3799  02AA  2AAD               	goto	u2960
  3800  02AB  3001               	movlw	1
  3801  02AC  2AAE               	goto	u2970
  3802  02AD                     u2960:	
  3803  02AD  3000               	movlw	0
  3804  02AE                     u2970:	
  3805  02AE  00A4               	movwf	??_main^(0+128)
  3806  02AF  01A5               	clrf	(??_main^(0+128)+1)
  3807  02B0  0824               	movf	??_main^(0+128),w
  3808  02B1  00D0               	movwf	_bypass_state^(0+128)
  3809  02B2  0825               	movf	(??_main+1)^(0+128),w
  3810  02B3  00D1               	movwf	(_bypass_state+1)^(0+128)
  3811                           
  3812                           ;main.c: 175: LATGbits.LATG1 = bypass_state;
  3813  02B4  0C50               	rrf	_bypass_state^(0+128),w
  3814  02B5  0027               	movlb	7	; select bank7
  3815  02B6  1C03               	skipc
  3816  02B7  108D               	bcf	13,1	;volatile
  3817  02B8  1803               	skipnc
  3818  02B9  148D               	bsf	13,1	;volatile
  3819                           
  3820                           ;main.c: 176: LATGbits.LATG2 = !bypass_state;
  3821  02BA  0021               	movlb	1	; select bank1
  3822  02BB  0850               	movf	_bypass_state^(0+128),w
  3823  02BC  0451               	iorwf	(_bypass_state+1)^(0+128),w
  3824  02BD  1D03               	btfss	3,2
  3825  02BE  2AC2               	goto	u2980
  3826  02BF  0027               	movlb	7	; select bank7
  3827  02C0  150D               	bsf	13,2	;volatile
  3828  02C1  2AC4               	goto	l2817
  3829  02C2                     u2980:	
  3830  02C2  0027               	movlb	7	; select bank7
  3831  02C3  110D               	bcf	13,2	;volatile
  3832  02C4                     l2817:	
  3833                           
  3834                           ;main.c: 177: LATFbits.LATF6 = !bypass_state;
  3835  02C4  0021               	movlb	1	; select bank1
  3836  02C5  0850               	movf	_bypass_state^(0+128),w
  3837  02C6  0451               	iorwf	(_bypass_state+1)^(0+128),w
  3838  02C7  1D03               	btfss	3,2
  3839  02C8  2ACC               	goto	u3000
  3840  02C9  0027               	movlb	7	; select bank7
  3841  02CA  170C               	bsf	12,6	;volatile
  3842  02CB  2ACE               	goto	l153
  3843  02CC                     u3000:	
  3844  02CC  0027               	movlb	7	; select bank7
  3845  02CD  130C               	bcf	12,6	;volatile
  3846  02CE                     l153:	
  3847                           ;main.c: 178: while (PORTEbits.RE1 == 0) {
  3848                           
  3849  02CE  0020               	movlb	0	; select bank0
  3850  02CF  1C90               	btfss	16,1	;volatile
  3851  02D0  2ACE               	goto	l153
  3852                           
  3853                           ;main.c: 179: }
  3854                           ;main.c: 180: wait_ms(70);
  3855  02D1  3046               	movlw	70
  3856  02D2  00A4               	movwf	wait_ms@time
  3857  02D3  3000               	movlw	0
  3858  02D4  00A5               	movwf	wait_ms@time+1
  3859  02D5  3193  239F  3180   	fcall	_wait_ms
  3860  02D8                     l2821:	
  3861                           
  3862                           ;main.c: 181: }
  3863                           ;main.c: 197: if (PORTEbits.RE0 == 0) {
  3864  02D8  0020               	movlb	0	; select bank0
  3865  02D9  1810               	btfsc	16,0	;volatile
  3866  02DA  2D10               	goto	l2885
  3867                           
  3868                           ;main.c: 198: if (tap_timer >= 1563) {
  3869  02DB  0021               	movlb	1	; select bank1
  3870  02DC  0861               	movf	(_tap_timer+1)^(0+128),w	;volatile
  3871  02DD  3A80               	xorlw	128
  3872  02DE  00A4               	movwf	??_main^(0+128)
  3873  02DF  3086               	movlw	134
  3874  02E0  0224               	subwf	??_main^(0+128),w
  3875  02E1  1D03               	skipz
  3876  02E2  2AE5               	goto	u3045
  3877  02E3  301B               	movlw	27
  3878  02E4  0260               	subwf	_tap_timer^(0+128),w	;volatile
  3879  02E5                     u3045:	
  3880  02E5  1C03               	skipc
  3881  02E6  2B44               	goto	l2851
  3882                           
  3883                           ;main.c: 199: tap_timer = 0;
  3884  02E7  0021               	movlb	1	; select bank1
  3885  02E8  01E0               	clrf	_tap_timer^(0+128)	;volatile
  3886  02E9  01E1               	clrf	(_tap_timer+1)^(0+128)	;volatile
  3887                           
  3888                           ;main.c: 200: tap_iteration = 1;
  3889  02EA  3001               	movlw	1
  3890  02EB  00EC               	movwf	_tap_iteration^(0+128)
  3891  02EC  3000               	movlw	0
  3892  02ED  00ED               	movwf	(_tap_iteration^(0+128)+1)
  3893                           
  3894                           ;main.c: 201: tap[1] = 0;
  3895  02EE  3000               	movlw	0
  3896  02EF  0022               	movlb	2	; select bank2
  3897  02F0  00A7               	movwf	((_tap+3)^(0+256)+4)
  3898  02F1  3000               	movlw	0
  3899  02F2  00A6               	movwf	((_tap+2)^(0+256)+4)
  3900  02F3  3000               	movlw	0
  3901  02F4  00A5               	movwf	((_tap+1)^(0+256)+4)
  3902  02F5  3000               	movlw	0
  3903  02F6  00A4               	movwf	(_tap^(0+256)+4)
  3904                           
  3905                           ;main.c: 202: tap[2] = 0;
  3906  02F7  3000               	movlw	0
  3907  02F8  00AB               	movwf	((_tap+3)^(0+256)+8)
  3908  02F9  3000               	movlw	0
  3909  02FA  00AA               	movwf	((_tap+2)^(0+256)+8)
  3910  02FB  3000               	movlw	0
  3911  02FC  00A9               	movwf	((_tap+1)^(0+256)+8)
  3912  02FD  3000               	movlw	0
  3913  02FE  00A8               	movwf	(_tap^(0+256)+8)
  3914                           
  3915                           ;main.c: 203: tap[3] = 0;
  3916  02FF  3000               	movlw	0
  3917  0300  00AF               	movwf	((_tap+3)^(0+256)+12)
  3918  0301  3000               	movlw	0
  3919  0302  00AE               	movwf	((_tap+2)^(0+256)+12)
  3920  0303  3000               	movlw	0
  3921  0304  00AD               	movwf	((_tap+1)^(0+256)+12)
  3922  0305  3000               	movlw	0
  3923  0306  00AC               	movwf	(_tap^(0+256)+12)
  3924                           
  3925                           ;main.c: 204: tap[4] = 0;
  3926  0307  3000               	movlw	0
  3927  0308  00B3               	movwf	((_tap+3)^(0+256)+16)
  3928  0309  3000               	movlw	0
  3929  030A  00B2               	movwf	((_tap+2)^(0+256)+16)
  3930  030B  3000               	movlw	0
  3931  030C  00B1               	movwf	((_tap+1)^(0+256)+16)
  3932  030D  3000               	movlw	0
  3933  030E  00B0               	movwf	(_tap^(0+256)+16)
  3934                           
  3935                           ;main.c: 205: tap[5] = 0;
  3936  030F  3000               	movlw	0
  3937  0310  00B7               	movwf	((_tap+3)^(0+256)+20)
  3938  0311  3000               	movlw	0
  3939  0312  00B6               	movwf	((_tap+2)^(0+256)+20)
  3940  0313  3000               	movlw	0
  3941  0314  00B5               	movwf	((_tap+1)^(0+256)+20)
  3942  0315  3000               	movlw	0
  3943  0316  00B4               	movwf	(_tap^(0+256)+20)
  3944                           
  3945                           ;main.c: 206: tap[6] = 0;
  3946  0317  3000               	movlw	0
  3947  0318  00BB               	movwf	((_tap+3)^(0+256)+24)
  3948  0319  3000               	movlw	0
  3949  031A  00BA               	movwf	((_tap+2)^(0+256)+24)
  3950  031B  3000               	movlw	0
  3951  031C  00B9               	movwf	((_tap+1)^(0+256)+24)
  3952  031D  3000               	movlw	0
  3953  031E  00B8               	movwf	(_tap^(0+256)+24)
  3954                           
  3955                           ;main.c: 207: tap[7] = 0;
  3956  031F  3000               	movlw	0
  3957  0320  00BF               	movwf	((_tap+3)^(0+256)+28)
  3958  0321  3000               	movlw	0
  3959  0322  00BE               	movwf	((_tap+2)^(0+256)+28)
  3960  0323  3000               	movlw	0
  3961  0324  00BD               	movwf	((_tap+1)^(0+256)+28)
  3962  0325  3000               	movlw	0
  3963  0326  00BC               	movwf	(_tap^(0+256)+28)
  3964                           
  3965                           ;main.c: 208: tap[8] = 0;
  3966  0327  3000               	movlw	0
  3967  0328  00C3               	movwf	((_tap+3)^(0+256)+32)
  3968  0329  3000               	movlw	0
  3969  032A  00C2               	movwf	((_tap+2)^(0+256)+32)
  3970  032B  3000               	movlw	0
  3971  032C  00C1               	movwf	((_tap+1)^(0+256)+32)
  3972  032D  3000               	movlw	0
  3973  032E  00C0               	movwf	(_tap^(0+256)+32)
  3974                           
  3975                           ;main.c: 209: tap[9] = 0;
  3976  032F  3000               	movlw	0
  3977  0330  00C7               	movwf	((_tap+3)^(0+256)+36)
  3978  0331  3000               	movlw	0
  3979  0332  00C6               	movwf	((_tap+2)^(0+256)+36)
  3980  0333  3000               	movlw	0
  3981  0334  00C5               	movwf	((_tap+1)^(0+256)+36)
  3982  0335  3000               	movlw	0
  3983  0336  00C4               	movwf	(_tap^(0+256)+36)
  3984                           
  3985                           ;main.c: 210: tap[10] = 0;
  3986  0337  3000               	movlw	0
  3987  0338  00CB               	movwf	((_tap+3)^(0+256)+40)
  3988  0339  3000               	movlw	0
  3989  033A  00CA               	movwf	((_tap+2)^(0+256)+40)
  3990  033B  3000               	movlw	0
  3991  033C  00C9               	movwf	((_tap+1)^(0+256)+40)
  3992  033D  3000               	movlw	0
  3993  033E  00C8               	movwf	(_tap^(0+256)+40)
  3994  033F                     l158:	
  3995                           ;main.c: 211: while (PORTEbits.RE0 == 0) {
  3996                           
  3997  033F  0020               	movlb	0	; select bank0
  3998  0340  1C10               	btfss	16,0	;volatile
  3999  0341  2B3F               	goto	l158
  4000                           
  4001                           ;main.c: 212: }
  4002                           ;main.c: 213: wait_ms(30);
  4003  0342  301E               	movlw	30
  4004  0343  2D0A               	goto	L1
  4005  0344                     l2851:	
  4006                           ;main.c: 214: } else {
  4007                           
  4008                           
  4009                           ;main.c: 215: if (tap_iteration <= 10) {
  4010  0344  0021               	movlb	1	; select bank1
  4011  0345  086D               	movf	(_tap_iteration+1)^(0+128),w
  4012  0346  3A80               	xorlw	128
  4013  0347  00A4               	movwf	??_main^(0+128)
  4014  0348  3080               	movlw	128
  4015  0349  0224               	subwf	??_main^(0+128),w
  4016  034A  1D03               	skipz
  4017  034B  2B4E               	goto	u3065
  4018  034C  300B               	movlw	11
  4019  034D  026C               	subwf	_tap_iteration^(0+128),w
  4020  034E                     u3065:	
  4021  034E  1803               	skipnc
  4022  034F  2D00               	goto	l169
  4023                           
  4024                           ;main.c: 216: if (tap_timer >= 1172 & tap_timer < 1563) {
  4025  0350  0021               	movlb	1	; select bank1
  4026  0351  0861               	movf	(_tap_timer+1)^(0+128),w	;volatile
  4027  0352  3A80               	xorlw	128
  4028  0353  00A4               	movwf	??_main^(0+128)
  4029  0354  3084               	movlw	132
  4030  0355  0224               	subwf	??_main^(0+128),w
  4031  0356  1D03               	skipz
  4032  0357  2B5A               	goto	u3075
  4033  0358  3094               	movlw	148
  4034  0359  0260               	subwf	_tap_timer^(0+128),w	;volatile
  4035  035A                     u3075:	
  4036  035A  1C03               	skipc
  4037  035B  2B6D               	goto	l2859
  4038  035C  0021               	movlb	1	; select bank1
  4039  035D  0861               	movf	(_tap_timer+1)^(0+128),w	;volatile
  4040  035E  3A80               	xorlw	128
  4041  035F  00A4               	movwf	??_main^(0+128)
  4042  0360  3086               	movlw	134
  4043  0361  0224               	subwf	??_main^(0+128),w
  4044  0362  1D03               	skipz
  4045  0363  2B66               	goto	u3085
  4046  0364  301B               	movlw	27
  4047  0365  0260               	subwf	_tap_timer^(0+128),w	;volatile
  4048  0366                     u3085:	
  4049  0366  1803               	skipnc
  4050  0367  2B6D               	goto	l2859
  4051                           
  4052                           ;main.c: 217: tap_timer = 1172;
  4053  0368  3094               	movlw	148
  4054  0369  0021               	movlb	1	; select bank1
  4055  036A  00E0               	movwf	_tap_timer^(0+128)	;volatile
  4056  036B  3004               	movlw	4
  4057  036C  00E1               	movwf	(_tap_timer^(0+128)+1)	;volatile
  4058  036D                     l2859:	
  4059                           
  4060                           ;main.c: 218: }
  4061                           ;main.c: 219: tap[tap_iteration] = tap_timer;
  4062  036D  0021               	movlb	1	; select bank1
  4063  036E  0860               	movf	_tap_timer^(0+128),w	;volatile
  4064  036F  00A4               	movwf	??_main^(0+128)
  4065  0370  0861               	movf	(_tap_timer+1)^(0+128),w	;volatile
  4066  0371  00A5               	movwf	(??_main^(0+128)+1)
  4067  0372  3000               	movlw	0
  4068  0373  1BA5               	btfsc	(??_main^(0+128)+1),7
  4069  0374  30FF               	movlw	255
  4070  0375  00A6               	movwf	(??_main^(0+128)+2)
  4071  0376  00A7               	movwf	(??_main^(0+128)+3)
  4072  0377  086C               	movf	_tap_iteration^(0+128),w
  4073  0378  00A8               	movwf	(??_main+4)^(0+128)
  4074  0379  3001               	movlw	1
  4075  037A                     u3095:	
  4076  037A  35A8               	lslf	(??_main+4)^(0+128),f
  4077  037B  3EFF               	addlw	-1
  4078  037C  1D03               	skipz
  4079  037D  2B7A               	goto	u3095
  4080  037E  3528               	lslf	(??_main+4)^(0+128),w
  4081  037F  3E20               	addlw	(low (_tap| (0+256)))& (0+255)
  4082  0380  0086               	movwf	6
  4083  0381  3001               	movlw	1	; select bank2/3
  4084  0382  0087               	movwf	7
  4085  0383  0824               	movf	??_main^(0+128),w
  4086  0384  3FC0               	movwi [0]fsr1
  4087  0385  0825               	movf	(??_main+1)^(0+128),w
  4088  0386  3FC1               	movwi [1]fsr1
  4089  0387  0826               	movf	(??_main+2)^(0+128),w
  4090  0388  3FC2               	movwi [2]fsr1
  4091  0389  0827               	movf	(??_main+3)^(0+128),w
  4092  038A  3FC3               	movwi [3]fsr1
  4093                           
  4094                           ;main.c: 220: tap_timer = 0;
  4095  038B  01E0               	clrf	_tap_timer^(0+128)	;volatile
  4096  038C  01E1               	clrf	(_tap_timer+1)^(0+128)	;volatile
  4097                           
  4098                           ;main.c: 221: baseline_delay_time = (tap[1] + tap[2] + tap[3] + tap[4] + tap[5] + tap[6]
      +                           + tap[7] + tap[8] + tap[9] + tap[10]) / tap_iteration;
  4099  038D  086C               	movf	_tap_iteration^(0+128),w
  4100  038E  0020               	movlb	0	; select bank0
  4101  038F  00A0               	movwf	___aldiv@divisor
  4102  0390  0021               	movlb	1	; select bank1
  4103  0391  086D               	movf	(_tap_iteration+1)^(0+128),w
  4104  0392  0020               	movlb	0	; select bank0
  4105  0393  00A1               	movwf	___aldiv@divisor+1
  4106  0394  0D89               	rlf	9,f
  4107  0395  3B89               	subwfb	9,f
  4108  0396  0989               	comf	9,f
  4109  0397  00A2               	movwf	___aldiv@divisor+2
  4110  0398  00A3               	movwf	___aldiv@divisor+3
  4111  0399  0022               	movlb	2	; select bank2
  4112  039A  0848               	movf	(_tap^(0+256)+40),w
  4113  039B  0021               	movlb	1	; select bank1
  4114  039C  00A4               	movwf	??_main^(0+128)
  4115  039D  0022               	movlb	2	; select bank2
  4116  039E  0849               	movf	((_tap+1)^(0+256)+40),w
  4117  039F  0021               	movlb	1	; select bank1
  4118  03A0  00A5               	movwf	(??_main^(0+128)+1)
  4119  03A1  0022               	movlb	2	; select bank2
  4120  03A2  084A               	movf	((_tap+2)^(0+256)+40),w
  4121  03A3  0021               	movlb	1	; select bank1
  4122  03A4  00A6               	movwf	(??_main^(0+128)+2)
  4123  03A5  0022               	movlb	2	; select bank2
  4124  03A6  084B               	movf	((_tap+3)^(0+256)+40),w
  4125  03A7  0021               	movlb	1	; select bank1
  4126  03A8  00A7               	movwf	(??_main^(0+128)+3)
  4127  03A9  0022               	movlb	2	; select bank2
  4128  03AA  0844               	movf	(_tap^(0+256)+36),w
  4129  03AB  0021               	movlb	1	; select bank1
  4130  03AC  00A8               	movwf	(??_main+4)^(0+128)
  4131  03AD  0022               	movlb	2	; select bank2
  4132  03AE  0845               	movf	((_tap+1)^(0+256)+36),w
  4133  03AF  0021               	movlb	1	; select bank1
  4134  03B0  00A9               	movwf	((??_main+4)^(0+128)+1)
  4135  03B1  0022               	movlb	2	; select bank2
  4136  03B2  0846               	movf	((_tap+2)^(0+256)+36),w
  4137  03B3  0021               	movlb	1	; select bank1
  4138  03B4  00AA               	movwf	((??_main+4)^(0+128)+2)
  4139  03B5  0022               	movlb	2	; select bank2
  4140  03B6  0847               	movf	((_tap+3)^(0+256)+36),w
  4141  03B7  0021               	movlb	1	; select bank1
  4142  03B8  00AB               	movwf	((??_main+4)^(0+128)+3)
  4143  03B9  0022               	movlb	2	; select bank2
  4144  03BA  0840               	movf	(_tap^(0+256)+32),w
  4145  03BB  0021               	movlb	1	; select bank1
  4146  03BC  00AC               	movwf	(??_main+8)^(0+128)
  4147  03BD  0022               	movlb	2	; select bank2
  4148  03BE  0841               	movf	((_tap+1)^(0+256)+32),w
  4149  03BF  0021               	movlb	1	; select bank1
  4150  03C0  00AD               	movwf	((??_main+8)^(0+128)+1)
  4151  03C1  0022               	movlb	2	; select bank2
  4152  03C2  0842               	movf	((_tap+2)^(0+256)+32),w
  4153  03C3  0021               	movlb	1	; select bank1
  4154  03C4  00AE               	movwf	((??_main+8)^(0+128)+2)
  4155  03C5  0022               	movlb	2	; select bank2
  4156  03C6  0843               	movf	((_tap+3)^(0+256)+32),w
  4157  03C7  0021               	movlb	1	; select bank1
  4158  03C8  00AF               	movwf	((??_main+8)^(0+128)+3)
  4159  03C9  0022               	movlb	2	; select bank2
  4160  03CA  083C               	movf	(_tap^(0+256)+28),w
  4161  03CB  0021               	movlb	1	; select bank1
  4162  03CC  00B0               	movwf	(??_main+12)^(0+128)
  4163  03CD  0022               	movlb	2	; select bank2
  4164  03CE  083D               	movf	((_tap+1)^(0+256)+28),w
  4165  03CF  0021               	movlb	1	; select bank1
  4166  03D0  00B1               	movwf	((??_main+12)^(0+128)+1)
  4167  03D1  0022               	movlb	2	; select bank2
  4168  03D2  083E               	movf	((_tap+2)^(0+256)+28),w
  4169  03D3  0021               	movlb	1	; select bank1
  4170  03D4  00B2               	movwf	((??_main+12)^(0+128)+2)
  4171  03D5  0022               	movlb	2	; select bank2
  4172  03D6  083F               	movf	((_tap+3)^(0+256)+28),w
  4173  03D7  0021               	movlb	1	; select bank1
  4174  03D8  00B3               	movwf	((??_main+12)^(0+128)+3)
  4175  03D9  0022               	movlb	2	; select bank2
  4176  03DA  0838               	movf	(_tap^(0+256)+24),w
  4177  03DB  0021               	movlb	1	; select bank1
  4178  03DC  00B4               	movwf	(??_main+16)^(0+128)
  4179  03DD  0022               	movlb	2	; select bank2
  4180  03DE  0839               	movf	((_tap+1)^(0+256)+24),w
  4181  03DF  0021               	movlb	1	; select bank1
  4182  03E0  00B5               	movwf	((??_main+16)^(0+128)+1)
  4183  03E1  0022               	movlb	2	; select bank2
  4184  03E2  083A               	movf	((_tap+2)^(0+256)+24),w
  4185  03E3  0021               	movlb	1	; select bank1
  4186  03E4  00B6               	movwf	((??_main+16)^(0+128)+2)
  4187  03E5  0022               	movlb	2	; select bank2
  4188  03E6  083B               	movf	((_tap+3)^(0+256)+24),w
  4189  03E7  0021               	movlb	1	; select bank1
  4190  03E8  00B7               	movwf	((??_main+16)^(0+128)+3)
  4191  03E9  0022               	movlb	2	; select bank2
  4192  03EA  0834               	movf	(_tap^(0+256)+20),w
  4193  03EB  0021               	movlb	1	; select bank1
  4194  03EC  00B8               	movwf	(??_main+20)^(0+128)
  4195  03ED  0022               	movlb	2	; select bank2
  4196  03EE  0835               	movf	((_tap+1)^(0+256)+20),w
  4197  03EF  0021               	movlb	1	; select bank1
  4198  03F0  00B9               	movwf	((??_main+20)^(0+128)+1)
  4199  03F1  0022               	movlb	2	; select bank2
  4200  03F2  0836               	movf	((_tap+2)^(0+256)+20),w
  4201  03F3  0021               	movlb	1	; select bank1
  4202  03F4  00BA               	movwf	((??_main+20)^(0+128)+2)
  4203  03F5  0022               	movlb	2	; select bank2
  4204  03F6  0837               	movf	((_tap+3)^(0+256)+20),w
  4205  03F7  0021               	movlb	1	; select bank1
  4206  03F8  00BB               	movwf	((??_main+20)^(0+128)+3)
  4207  03F9  0022               	movlb	2	; select bank2
  4208  03FA  0830               	movf	(_tap^(0+256)+16),w
  4209  03FB  0021               	movlb	1	; select bank1
  4210  03FC  00BC               	movwf	(??_main+24)^(0+128)
  4211  03FD  0022               	movlb	2	; select bank2
  4212  03FE  0831               	movf	((_tap+1)^(0+256)+16),w
  4213  03FF  0021               	movlb	1	; select bank1
  4214  0400  00BD               	movwf	((??_main+24)^(0+128)+1)
  4215  0401  0022               	movlb	2	; select bank2
  4216  0402  0832               	movf	((_tap+2)^(0+256)+16),w
  4217  0403  0021               	movlb	1	; select bank1
  4218  0404  00BE               	movwf	((??_main+24)^(0+128)+2)
  4219  0405  0022               	movlb	2	; select bank2
  4220  0406  0833               	movf	((_tap+3)^(0+256)+16),w
  4221  0407  0021               	movlb	1	; select bank1
  4222  0408  00BF               	movwf	((??_main+24)^(0+128)+3)
  4223  0409  0022               	movlb	2	; select bank2
  4224  040A  082C               	movf	(_tap^(0+256)+12),w
  4225  040B  0021               	movlb	1	; select bank1
  4226  040C  00C0               	movwf	(??_main+28)^(0+128)
  4227  040D  0022               	movlb	2	; select bank2
  4228  040E  082D               	movf	((_tap+1)^(0+256)+12),w
  4229  040F  0021               	movlb	1	; select bank1
  4230  0410  00C1               	movwf	((??_main+28)^(0+128)+1)
  4231  0411  0022               	movlb	2	; select bank2
  4232  0412  082E               	movf	((_tap+2)^(0+256)+12),w
  4233  0413  0021               	movlb	1	; select bank1
  4234  0414  00C2               	movwf	((??_main+28)^(0+128)+2)
  4235  0415  0022               	movlb	2	; select bank2
  4236  0416  082F               	movf	((_tap+3)^(0+256)+12),w
  4237  0417  0021               	movlb	1	; select bank1
  4238  0418  00C3               	movwf	((??_main+28)^(0+128)+3)
  4239  0419  0022               	movlb	2	; select bank2
  4240  041A  0824               	movf	(_tap^(0+256)+4),w
  4241  041B  0728               	addwf	(_tap^(0+256)+8),w
  4242  041C  0021               	movlb	1	; select bank1
  4243  041D  00C4               	movwf	(??_main+32)^(0+128)
  4244  041E  0022               	movlb	2	; select bank2
  4245  041F  0825               	movf	((_tap+1)^(0+256)+4),w
  4246  0420  3D29               	addwfc	((_tap+1)^(0+256)+8),w
  4247  0421  0021               	movlb	1	; select bank1
  4248  0422  00C5               	movwf	((??_main+32)^(0+128)+1)
  4249  0423  0022               	movlb	2	; select bank2
  4250  0424  0826               	movf	((_tap+2)^(0+256)+4),w
  4251  0425  3D2A               	addwfc	((_tap+2)^(0+256)+8),w
  4252  0426  0021               	movlb	1	; select bank1
  4253  0427  00C6               	movwf	((??_main+32)^(0+128)+2)
  4254  0428  0022               	movlb	2	; select bank2
  4255  0429  0827               	movf	((_tap+3)^(0+256)+4),w
  4256  042A  3D2B               	addwfc	((_tap+3)^(0+256)+8),w
  4257  042B  0021               	movlb	1	; select bank1
  4258  042C  00C7               	movwf	((??_main+32)^(0+128)+3)
  4259  042D  0844               	movf	(??_main+32)^(0+128),w
  4260  042E  07C0               	addwf	(??_main+28)^(0+128),f
  4261  042F  0845               	movf	(??_main+33)^(0+128),w
  4262  0430  3DC1               	addwfc	((??_main+28)^(0+128)+1),f
  4263  0431  0846               	movf	(??_main+34)^(0+128),w
  4264  0432  3DC2               	addwfc	((??_main+28)^(0+128)+2),f
  4265  0433  0847               	movf	(??_main+35)^(0+128),w
  4266  0434  3DC3               	addwfc	((??_main+28)^(0+128)+3),f
  4267  0435  0840               	movf	(??_main+28)^(0+128),w
  4268  0436  07BC               	addwf	(??_main+24)^(0+128),f
  4269  0437  0841               	movf	(??_main+29)^(0+128),w
  4270  0438  3DBD               	addwfc	((??_main+24)^(0+128)+1),f
  4271  0439  0842               	movf	(??_main+30)^(0+128),w
  4272  043A  3DBE               	addwfc	((??_main+24)^(0+128)+2),f
  4273  043B  0843               	movf	(??_main+31)^(0+128),w
  4274  043C  3DBF               	addwfc	((??_main+24)^(0+128)+3),f
  4275  043D  083C               	movf	(??_main+24)^(0+128),w
  4276  043E  07B8               	addwf	(??_main+20)^(0+128),f
  4277  043F  083D               	movf	(??_main+25)^(0+128),w
  4278  0440  3DB9               	addwfc	((??_main+20)^(0+128)+1),f
  4279  0441  083E               	movf	(??_main+26)^(0+128),w
  4280  0442  3DBA               	addwfc	((??_main+20)^(0+128)+2),f
  4281  0443  083F               	movf	(??_main+27)^(0+128),w
  4282  0444  3DBB               	addwfc	((??_main+20)^(0+128)+3),f
  4283  0445  0838               	movf	(??_main+20)^(0+128),w
  4284  0446  07B4               	addwf	(??_main+16)^(0+128),f
  4285  0447  0839               	movf	(??_main+21)^(0+128),w
  4286  0448  3DB5               	addwfc	((??_main+16)^(0+128)+1),f
  4287  0449  083A               	movf	(??_main+22)^(0+128),w
  4288  044A  3DB6               	addwfc	((??_main+16)^(0+128)+2),f
  4289  044B  083B               	movf	(??_main+23)^(0+128),w
  4290  044C  3DB7               	addwfc	((??_main+16)^(0+128)+3),f
  4291  044D  0834               	movf	(??_main+16)^(0+128),w
  4292  044E  07B0               	addwf	(??_main+12)^(0+128),f
  4293  044F  0835               	movf	(??_main+17)^(0+128),w
  4294  0450  3DB1               	addwfc	((??_main+12)^(0+128)+1),f
  4295  0451  0836               	movf	(??_main+18)^(0+128),w
  4296  0452  3DB2               	addwfc	((??_main+12)^(0+128)+2),f
  4297  0453  0837               	movf	(??_main+19)^(0+128),w
  4298  0454  3DB3               	addwfc	((??_main+12)^(0+128)+3),f
  4299  0455  0830               	movf	(??_main+12)^(0+128),w
  4300  0456  07AC               	addwf	(??_main+8)^(0+128),f
  4301  0457  0831               	movf	(??_main+13)^(0+128),w
  4302  0458  3DAD               	addwfc	((??_main+8)^(0+128)+1),f
  4303  0459  0832               	movf	(??_main+14)^(0+128),w
  4304  045A  3DAE               	addwfc	((??_main+8)^(0+128)+2),f
  4305  045B  0833               	movf	(??_main+15)^(0+128),w
  4306  045C  3DAF               	addwfc	((??_main+8)^(0+128)+3),f
  4307  045D  082C               	movf	(??_main+8)^(0+128),w
  4308  045E  07A8               	addwf	(??_main+4)^(0+128),f
  4309  045F  082D               	movf	(??_main+9)^(0+128),w
  4310  0460  3DA9               	addwfc	((??_main+4)^(0+128)+1),f
  4311  0461  082E               	movf	(??_main+10)^(0+128),w
  4312  0462  3DAA               	addwfc	((??_main+4)^(0+128)+2),f
  4313  0463  082F               	movf	(??_main+11)^(0+128),w
  4314  0464  3DAB               	addwfc	((??_main+4)^(0+128)+3),f
  4315  0465  0828               	movf	(??_main+4)^(0+128),w
  4316  0466  07A4               	addwf	??_main^(0+128),f
  4317  0467  0829               	movf	(??_main+5)^(0+128),w
  4318  0468  3DA5               	addwfc	(??_main^(0+128)+1),f
  4319  0469  082A               	movf	(??_main+6)^(0+128),w
  4320  046A  3DA6               	addwfc	(??_main^(0+128)+2),f
  4321  046B  082B               	movf	(??_main+7)^(0+128),w
  4322  046C  3DA7               	addwfc	(??_main^(0+128)+3),f
  4323  046D  0827               	movf	(??_main+3)^(0+128),w
  4324  046E  0020               	movlb	0	; select bank0
  4325  046F  00A7               	movwf	___aldiv@dividend+3
  4326  0470  0021               	movlb	1	; select bank1
  4327  0471  0826               	movf	(??_main+2)^(0+128),w
  4328  0472  0020               	movlb	0	; select bank0
  4329  0473  00A6               	movwf	___aldiv@dividend+2
  4330  0474  0021               	movlb	1	; select bank1
  4331  0475  0825               	movf	(??_main+1)^(0+128),w
  4332  0476  0020               	movlb	0	; select bank0
  4333  0477  00A5               	movwf	___aldiv@dividend+1
  4334  0478  0021               	movlb	1	; select bank1
  4335  0479  0824               	movf	??_main^(0+128),w
  4336  047A  0020               	movlb	0	; select bank0
  4337  047B  00A4               	movwf	___aldiv@dividend
  4338  047C  3197  277E  3180   	fcall	___aldiv
  4339  047F  0020               	movlb	0	; select bank0
  4340  0480  0821               	movf	?___aldiv+1,w
  4341  0481  0021               	movlb	1	; select bank1
  4342  0482  00E5               	movwf	(_baseline_delay_time+1)^(0+128)
  4343  0483  0020               	movlb	0	; select bank0
  4344  0484  0820               	movf	?___aldiv,w
  4345  0485  0021               	movlb	1	; select bank1
  4346  0486  00E4               	movwf	_baseline_delay_time^(0+128)
  4347                           
  4348                           ;main.c: 222: tap_iteration = tap_iteration + 1;
  4349  0487  086C               	movf	_tap_iteration^(0+128),w
  4350  0488  3E01               	addlw	1
  4351  0489  00EC               	movwf	_tap_iteration^(0+128)
  4352  048A  3000               	movlw	0
  4353  048B  3D6D               	addwfc	(_tap_iteration+1)^(0+128),w
  4354  048C  00ED               	movwf	(_tap_iteration+1)^(0+128)
  4355                           
  4356                           ;main.c: 223: delay_time = baseline_delay_time;
  4357  048D  0865               	movf	(_baseline_delay_time+1)^(0+128),w
  4358  048E  00E9               	movwf	(_delay_time+1)^(0+128)	;volatile
  4359  048F  0864               	movf	_baseline_delay_time^(0+128),w
  4360  0490  00E8               	movwf	_delay_time^(0+128)	;volatile
  4361                           
  4362                           ;main.c: 226: delayfound = 0;
  4363  0491  0020               	movlb	0	; select bank0
  4364  0492  01ED               	clrf	_delayfound
  4365  0493  01EE               	clrf	_delayfound+1
  4366                           
  4367                           ;main.c: 227: delay_counter = 0;
  4368  0494  0021               	movlb	1	; select bank1
  4369  0495  01D2               	clrf	_delay_counter^(0+128)
  4370  0496  01D3               	clrf	(_delay_counter+1)^(0+128)
  4371  0497                     l164:	
  4372                           ;main.c: 228: while (delayfound == 0) {
  4373                           
  4374  0497  0020               	movlb	0	; select bank0
  4375  0498  086D               	movf	_delayfound,w
  4376  0499  046E               	iorwf	_delayfound+1,w
  4377  049A  1D03               	btfss	3,2
  4378  049B  2CD3               	goto	l2879
  4379                           
  4380                           ;main.c: 229: if (delay[delay_counter] <= delay_time) {
  4381  049C  0021               	movlb	1	; select bank1
  4382  049D  0853               	movf	(_delay_counter+1)^(0+128),w
  4383  049E  00A5               	movwf	(??_main^(0+128)+1)
  4384  049F  0852               	movf	_delay_counter^(0+128),w
  4385  04A0  00A4               	movwf	??_main^(0+128)
  4386  04A1  35A4               	lslf	??_main^(0+128),f
  4387  04A2  0DA5               	rlf	(??_main^(0+128)+1),f
  4388  04A3  30F2               	movlw	242
  4389  04A4  00A6               	movwf	(??_main+2)^(0+128)
  4390  04A5  3023               	movlw	35
  4391  04A6  00A7               	movwf	((??_main+2)^(0+128)+1)
  4392  04A7  0824               	movf	??_main^(0+128),w
  4393  04A8  0726               	addwf	(??_main+2)^(0+128),w
  4394  04A9  0086               	movwf	6
  4395  04AA  0825               	movf	(??_main+1)^(0+128),w
  4396  04AB  3D27               	addwfc	(??_main+3)^(0+128),w
  4397  04AC  0087               	movwf	7
  4398  04AD  3F40               	moviw [0]fsr1
  4399  04AE  00A8               	movwf	(??_main+4)^(0+128)
  4400  04AF  3F41               	moviw [1]fsr1
  4401  04B0  00A9               	movwf	((??_main+4)^(0+128)+1)
  4402  04B1  0869               	movf	(_delay_time+1)^(0+128),w	;volatile
  4403  04B2  3A80               	xorlw	128
  4404  04B3  00AA               	movwf	(??_main+6)^(0+128)
  4405  04B4  0829               	movf	(??_main+5)^(0+128),w
  4406  04B5  3A80               	xorlw	128
  4407  04B6  022A               	subwf	(??_main+6)^(0+128),w
  4408  04B7  1D03               	skipz
  4409  04B8  2CBB               	goto	u3105
  4410  04B9  0828               	movf	(??_main+4)^(0+128),w
  4411  04BA  0268               	subwf	_delay_time^(0+128),w	;volatile
  4412  04BB                     u3105:	
  4413  04BB  1C03               	skipc
  4414  04BC  2CCB               	goto	l2877
  4415                           
  4416                           ;main.c: 230: delayfound = 1;
  4417  04BD  3001               	movlw	1
  4418  04BE  0020               	movlb	0	; select bank0
  4419  04BF  00ED               	movwf	_delayfound
  4420  04C0  3000               	movlw	0
  4421  04C1  00EE               	movwf	_delayfound+1
  4422                           
  4423                           ;main.c: 231: CCPR1 = delay_counter;
  4424  04C2  0021               	movlb	1	; select bank1
  4425  04C3  0853               	movf	(_delay_counter+1)^(0+128),w
  4426  04C4  0025               	movlb	5	; select bank5
  4427  04C5  0092               	movwf	18	;volatile
  4428  04C6  0021               	movlb	1	; select bank1
  4429  04C7  0852               	movf	_delay_counter^(0+128),w
  4430  04C8  0025               	movlb	5	; select bank5
  4431  04C9  0091               	movwf	17	;volatile
  4432                           
  4433                           ;main.c: 232: } else {
  4434  04CA  2C97               	goto	l164
  4435  04CB                     l2877:	
  4436                           
  4437                           ;main.c: 233: delay_counter = delay_counter + 1;
  4438  04CB  0021               	movlb	1	; select bank1
  4439  04CC  0852               	movf	_delay_counter^(0+128),w
  4440  04CD  3E01               	addlw	1
  4441  04CE  00D2               	movwf	_delay_counter^(0+128)
  4442  04CF  3000               	movlw	0
  4443  04D0  3D53               	addwfc	(_delay_counter+1)^(0+128),w
  4444  04D1  00D3               	movwf	(_delay_counter+1)^(0+128)
  4445  04D2  2C97               	goto	l164
  4446  04D3                     l2879:	
  4447                           
  4448                           ;main.c: 234: }
  4449                           ;main.c: 235: }
  4450                           ;main.c: 236: mod_delay_time = delay_time / 7.5;
  4451  04D3  0021               	movlb	1	; select bank1
  4452  04D4  0869               	movf	(_delay_time+1)^(0+128),w	;volatile
  4453  04D5  0020               	movlb	0	; select bank0
  4454  04D6  00A1               	movwf	___awtoft@c+1
  4455  04D7  0021               	movlb	1	; select bank1
  4456  04D8  0868               	movf	_delay_time^(0+128),w	;volatile
  4457  04D9  0020               	movlb	0	; select bank0
  4458  04DA  00A0               	movwf	___awtoft@c
  4459  04DB  3193  237D  3180   	fcall	___awtoft
  4460  04DE  0020               	movlb	0	; select bank0
  4461  04DF  0820               	movf	?___awtoft,w
  4462  04E0  00C0               	movwf	___ftdiv@f1
  4463  04E1  0821               	movf	?___awtoft+1,w
  4464  04E2  00C1               	movwf	___ftdiv@f1+1
  4465  04E3  0822               	movf	?___awtoft+2,w
  4466  04E4  00C2               	movwf	___ftdiv@f1+2
  4467  04E5  3000               	movlw	0
  4468  04E6  00BD               	movwf	___ftdiv@f2
  4469  04E7  30F0               	movlw	240
  4470  04E8  00BE               	movwf	___ftdiv@f2+1
  4471  04E9  3040               	movlw	64
  4472  04EA  00BF               	movwf	___ftdiv@f2+2
  4473  04EB  3189  2162  3180   	fcall	___ftdiv
  4474  04EE  0020               	movlb	0	; select bank0
  4475  04EF  083D               	movf	?___ftdiv,w
  4476  04F0  00DF               	movwf	___fttol@f1
  4477  04F1  083E               	movf	?___ftdiv+1,w
  4478  04F2  00E0               	movwf	___fttol@f1+1
  4479  04F3  083F               	movf	?___ftdiv+2,w
  4480  04F4  00E1               	movwf	___fttol@f1+2
  4481  04F5  3188  2050  3180   	fcall	___fttol
  4482  04F8  0020               	movlb	0	; select bank0
  4483  04F9  0860               	movf	?___fttol+1,w
  4484  04FA  0022               	movlb	2	; select bank2
  4485  04FB  00D9               	movwf	(_mod_delay_time+1)^(0+256)
  4486  04FC  0020               	movlb	0	; select bank0
  4487  04FD  085F               	movf	?___fttol,w
  4488  04FE  0022               	movlb	2	; select bank2
  4489  04FF  00D8               	movwf	_mod_delay_time^(0+256)
  4490  0500                     l169:	
  4491                           ;main.c: 237: }
  4492                           ;main.c: 238: while (PORTEbits.RE0 == 0) {
  4493                           
  4494  0500  0020               	movlb	0	; select bank0
  4495  0501  1C10               	btfss	16,0	;volatile
  4496  0502  2D00               	goto	l169
  4497                           
  4498                           ;main.c: 239: }
  4499                           ;main.c: 240: timer = 0;
  4500  0503  0021               	movlb	1	; select bank1
  4501  0504  01E2               	clrf	_timer^(0+128)	;volatile
  4502  0505  01E3               	clrf	(_timer+1)^(0+128)	;volatile
  4503                           
  4504                           ;main.c: 241: mod_timer = 0;
  4505  0506  01DE               	clrf	_mod_timer^(0+128)	;volatile
  4506  0507  01DF               	clrf	(_mod_timer+1)^(0+128)	;volatile
  4507                           
  4508                           ;main.c: 242: wait_ms(30);
  4509  0508  301E               	movlw	30
  4510  0509  0020               	movlb	0	; select bank0
  4511  050A                     L1:	
  4512  050A  00A4               	movwf	wait_ms@time
  4513  050B  3000               	movlw	0
  4514  050C  00A5               	movwf	wait_ms@time+1
  4515  050D  3193  239F  3180   	fcall	_wait_ms
  4516  0510                     l2885:	
  4517                           
  4518                           ;main.c: 243: }
  4519                           ;main.c: 244: }
  4520                           ;main.c: 249: knob_1_pos = adc_convert(0);
  4521  0510  3000               	movlw	0
  4522  0511  3193  231A  3180   	fcall	_adc_convert
  4523  0514  0873               	movf	?_adc_convert+1,w
  4524  0515  0021               	movlb	1	; select bank1
  4525  0516  00D5               	movwf	(_knob_1_pos+1)^(0+128)
  4526  0517  0872               	movf	?_adc_convert,w
  4527  0518  00D4               	movwf	_knob_1_pos^(0+128)
  4528                           
  4529                           ;main.c: 250: knob_2_pos = adc_convert(1);
  4530  0519  3001               	movlw	1
  4531  051A  3193  231A  3180   	fcall	_adc_convert
  4532  051D  0873               	movf	?_adc_convert+1,w
  4533  051E  0021               	movlb	1	; select bank1
  4534  051F  00D7               	movwf	(_knob_2_pos+1)^(0+128)
  4535  0520  0872               	movf	?_adc_convert,w
  4536  0521  00D6               	movwf	_knob_2_pos^(0+128)
  4537                           
  4538                           ;main.c: 251: knob_3_pos = adc_convert(2);
  4539  0522  3002               	movlw	2
  4540  0523  3193  231A  3180   	fcall	_adc_convert
  4541  0526  0873               	movf	?_adc_convert+1,w
  4542  0527  0021               	movlb	1	; select bank1
  4543  0528  00D9               	movwf	(_knob_3_pos+1)^(0+128)
  4544  0529  0872               	movf	?_adc_convert,w
  4545  052A  00D8               	movwf	_knob_3_pos^(0+128)
  4546                           
  4547                           ;main.c: 252: knob_4_pos = adc_convert(3);
  4548  052B  3003               	movlw	3
  4549  052C  3193  231A  3180   	fcall	_adc_convert
  4550  052F  0873               	movf	?_adc_convert+1,w
  4551  0530  0021               	movlb	1	; select bank1
  4552  0531  00DB               	movwf	(_knob_4_pos+1)^(0+128)
  4553  0532  0872               	movf	?_adc_convert,w
  4554  0533  00DA               	movwf	_knob_4_pos^(0+128)
  4555                           
  4556                           ;main.c: 253: knob_5_pos = adc_convert(4);
  4557  0534  3004               	movlw	4
  4558  0535  3193  231A  3180   	fcall	_adc_convert
  4559  0538  0873               	movf	?_adc_convert+1,w
  4560  0539  00FB               	movwf	_knob_5_pos+1
  4561  053A  0872               	movf	?_adc_convert,w
  4562  053B  00FA               	movwf	_knob_5_pos
  4563                           
  4564                           ;main.c: 266: if (knob_1_pos - knob1_prev >= 4 || knob_1_pos - knob1_prev <= -4) {
  4565  053C  0021               	movlb	1	; select bank1
  4566  053D  096A               	comf	_knob1_prev^(0+128),w
  4567  053E  00A4               	movwf	??_main^(0+128)
  4568  053F  096B               	comf	(_knob1_prev+1)^(0+128),w
  4569  0540  00A5               	movwf	(??_main^(0+128)+1)
  4570  0541  0AA4               	incf	??_main^(0+128),f
  4571  0542  1903               	skipnz
  4572  0543  0AA5               	incf	(??_main^(0+128)+1),f
  4573  0544  0854               	movf	_knob_1_pos^(0+128),w
  4574  0545  0724               	addwf	??_main^(0+128),w
  4575  0546  00A6               	movwf	(??_main+2)^(0+128)
  4576  0547  0855               	movf	(_knob_1_pos+1)^(0+128),w
  4577  0548  3D25               	addwfc	(??_main+1)^(0+128),w
  4578  0549  00A7               	movwf	(??_main+3)^(0+128)
  4579  054A  0827               	movf	(??_main+3)^(0+128),w
  4580  054B  3A80               	xorlw	128
  4581  054C  00A8               	movwf	(??_main+4)^(0+128)
  4582  054D  3080               	movlw	128
  4583  054E  0228               	subwf	(??_main+4)^(0+128),w
  4584  054F  1D03               	skipz
  4585  0550  2D53               	goto	u3135
  4586  0551  3004               	movlw	4
  4587  0552  0226               	subwf	(??_main+2)^(0+128),w
  4588  0553                     u3135:	
  4589  0553  1803               	skipnc
  4590  0554  2D6F               	goto	l2899
  4591  0555  0021               	movlb	1	; select bank1
  4592  0556  096A               	comf	_knob1_prev^(0+128),w
  4593  0557  00A4               	movwf	??_main^(0+128)
  4594  0558  096B               	comf	(_knob1_prev+1)^(0+128),w
  4595  0559  00A5               	movwf	(??_main^(0+128)+1)
  4596  055A  0AA4               	incf	??_main^(0+128),f
  4597  055B  1903               	skipnz
  4598  055C  0AA5               	incf	(??_main^(0+128)+1),f
  4599  055D  0854               	movf	_knob_1_pos^(0+128),w
  4600  055E  0724               	addwf	??_main^(0+128),w
  4601  055F  00A6               	movwf	(??_main+2)^(0+128)
  4602  0560  0855               	movf	(_knob_1_pos+1)^(0+128),w
  4603  0561  3D25               	addwfc	(??_main+1)^(0+128),w
  4604  0562  00A7               	movwf	(??_main+3)^(0+128)
  4605  0563  0827               	movf	(??_main+3)^(0+128),w
  4606  0564  3A80               	xorlw	128
  4607  0565  00A8               	movwf	(??_main+4)^(0+128)
  4608  0566  307F               	movlw	127
  4609  0567  0228               	subwf	(??_main+4)^(0+128),w
  4610  0568  1D03               	skipz
  4611  0569  2D6C               	goto	u3145
  4612  056A  30FD               	movlw	253
  4613  056B  0226               	subwf	(??_main+2)^(0+128),w
  4614  056C                     u3145:	
  4615  056C  318D  1803         	skipnc
  4616  056E  2D2C               	goto	l2919
  4617  056F                     l2899:	
  4618                           
  4619                           ;main.c: 267: knob1_prev = knob_1_pos;
  4620  056F  0021               	movlb	1	; select bank1
  4621  0570  0855               	movf	(_knob_1_pos+1)^(0+128),w
  4622  0571  00EB               	movwf	(_knob1_prev+1)^(0+128)
  4623  0572  0854               	movf	_knob_1_pos^(0+128),w
  4624  0573  00EA               	movwf	_knob1_prev^(0+128)
  4625                           
  4626                           ;main.c: 268: int i = map(knob1_prev, 0, 1023, 0, 255);
  4627  0574  3000               	movlw	0
  4628  0575  0020               	movlb	0	; select bank0
  4629  0576  00D9               	movwf	map@out_max
  4630  0577  307F               	movlw	127
  4631  0578  00DA               	movwf	map@out_max+1
  4632  0579  3043               	movlw	67
  4633  057A  00DB               	movwf	map@out_max+2
  4634  057B  3000               	movlw	0
  4635  057C  00D6               	movwf	map@out_min
  4636  057D  3000               	movlw	0
  4637  057E  00D7               	movwf	map@out_min+1
  4638  057F  3000               	movlw	0
  4639  0580  00D8               	movwf	map@out_min+2
  4640  0581  30C0               	movlw	192
  4641  0582  00D3               	movwf	map@in_max
  4642  0583  307F               	movlw	127
  4643  0584  00D4               	movwf	map@in_max+1
  4644  0585  3044               	movlw	68
  4645  0586  00D5               	movwf	map@in_max+2
  4646  0587  3000               	movlw	0
  4647  0588  00D0               	movwf	map@in_min
  4648  0589  3000               	movlw	0
  4649  058A  00D1               	movwf	map@in_min+1
  4650  058B  3000               	movlw	0
  4651  058C  00D2               	movwf	map@in_min+2
  4652  058D  0021               	movlb	1	; select bank1
  4653  058E  086B               	movf	(_knob1_prev+1)^(0+128),w
  4654  058F  0020               	movlb	0	; select bank0
  4655  0590  00A1               	movwf	___awtoft@c+1
  4656  0591  0021               	movlb	1	; select bank1
  4657  0592  086A               	movf	_knob1_prev^(0+128),w
  4658  0593  0020               	movlb	0	; select bank0
  4659  0594  00A0               	movwf	___awtoft@c
  4660  0595  3193  237D  3180   	fcall	___awtoft
  4661  0598  0020               	movlb	0	; select bank0
  4662  0599  0820               	movf	?___awtoft,w
  4663  059A  00CD               	movwf	map@x
  4664  059B  0821               	movf	?___awtoft+1,w
  4665  059C  00CE               	movwf	map@x+1
  4666  059D  0822               	movf	?___awtoft+2,w
  4667  059E  00CF               	movwf	map@x+2
  4668  059F  3188  20D7  3180   	fcall	_map
  4669  05A2  0020               	movlb	0	; select bank0
  4670  05A3  084D               	movf	?_map,w
  4671  05A4  00DF               	movwf	___fttol@f1
  4672  05A5  084E               	movf	?_map+1,w
  4673  05A6  00E0               	movwf	___fttol@f1+1
  4674  05A7  084F               	movf	?_map+2,w
  4675  05A8  00E1               	movwf	___fttol@f1+2
  4676  05A9  3188  2050  3180   	fcall	___fttol
  4677  05AC  0020               	movlb	0	; select bank0
  4678  05AD  0860               	movf	?___fttol+1,w
  4679  05AE  0021               	movlb	1	; select bank1
  4680  05AF  00C9               	movwf	(main@i+1)^(0+128)
  4681  05B0  0020               	movlb	0	; select bank0
  4682  05B1  085F               	movf	?___fttol,w
  4683  05B2  0021               	movlb	1	; select bank1
  4684  05B3  00C8               	movwf	main@i^(0+128)
  4685                           
  4686                           ;main.c: 269: baseline_delay_time = map(knob1_prev, 0, 1023, 2000, 200);
  4687  05B4  3000               	movlw	0
  4688  05B5  0020               	movlb	0	; select bank0
  4689  05B6  00D9               	movwf	map@out_max
  4690  05B7  3048               	movlw	72
  4691  05B8  00DA               	movwf	map@out_max+1
  4692  05B9  3043               	movlw	67
  4693  05BA  00DB               	movwf	map@out_max+2
  4694  05BB  3000               	movlw	0
  4695  05BC  00D6               	movwf	map@out_min
  4696  05BD  30FA               	movlw	250
  4697  05BE  00D7               	movwf	map@out_min+1
  4698  05BF  3044               	movlw	68
  4699  05C0  00D8               	movwf	map@out_min+2
  4700  05C1  30C0               	movlw	192
  4701  05C2  00D3               	movwf	map@in_max
  4702  05C3  307F               	movlw	127
  4703  05C4  00D4               	movwf	map@in_max+1
  4704  05C5  3044               	movlw	68
  4705  05C6  00D5               	movwf	map@in_max+2
  4706  05C7  3000               	movlw	0
  4707  05C8  00D0               	movwf	map@in_min
  4708  05C9  3000               	movlw	0
  4709  05CA  00D1               	movwf	map@in_min+1
  4710  05CB  3000               	movlw	0
  4711  05CC  00D2               	movwf	map@in_min+2
  4712  05CD  0021               	movlb	1	; select bank1
  4713  05CE  086B               	movf	(_knob1_prev+1)^(0+128),w
  4714  05CF  0020               	movlb	0	; select bank0
  4715  05D0  00A1               	movwf	___awtoft@c+1
  4716  05D1  0021               	movlb	1	; select bank1
  4717  05D2  086A               	movf	_knob1_prev^(0+128),w
  4718  05D3  0020               	movlb	0	; select bank0
  4719  05D4  00A0               	movwf	___awtoft@c
  4720  05D5  3193  237D  3180   	fcall	___awtoft
  4721  05D8  0020               	movlb	0	; select bank0
  4722  05D9  0820               	movf	?___awtoft,w
  4723  05DA  00CD               	movwf	map@x
  4724  05DB  0821               	movf	?___awtoft+1,w
  4725  05DC  00CE               	movwf	map@x+1
  4726  05DD  0822               	movf	?___awtoft+2,w
  4727  05DE  00CF               	movwf	map@x+2
  4728  05DF  3188  20D7  3180   	fcall	_map
  4729  05E2  0020               	movlb	0	; select bank0
  4730  05E3  084D               	movf	?_map,w
  4731  05E4  00DF               	movwf	___fttol@f1
  4732  05E5  084E               	movf	?_map+1,w
  4733  05E6  00E0               	movwf	___fttol@f1+1
  4734  05E7  084F               	movf	?_map+2,w
  4735  05E8  00E1               	movwf	___fttol@f1+2
  4736  05E9  3188  2050  3180   	fcall	___fttol
  4737  05EC  0020               	movlb	0	; select bank0
  4738  05ED  0860               	movf	?___fttol+1,w
  4739  05EE  0021               	movlb	1	; select bank1
  4740  05EF  00E5               	movwf	(_baseline_delay_time+1)^(0+128)
  4741  05F0  0020               	movlb	0	; select bank0
  4742  05F1  085F               	movf	?___fttol,w
  4743  05F2  0021               	movlb	1	; select bank1
  4744  05F3  00E4               	movwf	_baseline_delay_time^(0+128)
  4745                           
  4746                           ;main.c: 270: delay_time = set_subdivision(baseline_delay_time, top_push_state);
  4747  05F4  0865               	movf	(_baseline_delay_time+1)^(0+128),w
  4748  05F5  00A1               	movwf	(set_subdivision@x+1)^(0+128)
  4749  05F6  0864               	movf	_baseline_delay_time^(0+128),w
  4750  05F7  00A0               	movwf	set_subdivision@x^(0+128)
  4751  05F8  086F               	movf	(_top_push_state+1)^(0+128),w
  4752  05F9  00A3               	movwf	(set_subdivision@y+1)^(0+128)
  4753  05FA  086E               	movf	_top_push_state^(0+128),w
  4754  05FB  00A2               	movwf	set_subdivision@y^(0+128)
  4755  05FC  3186  2648  3180   	fcall	_set_subdivision
  4756  05FF  0021               	movlb	1	; select bank1
  4757  0600  0821               	movf	(?_set_subdivision+1)^(0+128),w
  4758  0601  00E9               	movwf	(_delay_time+1)^(0+128)	;volatile
  4759  0602  0820               	movf	?_set_subdivision^(0+128),w
  4760  0603  00E8               	movwf	_delay_time^(0+128)	;volatile
  4761                           
  4762                           ;main.c: 271: delayfound = 0;
  4763  0604  0020               	movlb	0	; select bank0
  4764  0605  01ED               	clrf	_delayfound
  4765  0606  01EE               	clrf	_delayfound+1
  4766                           
  4767                           ;main.c: 272: delay_counter = 0;
  4768  0607  0021               	movlb	1	; select bank1
  4769  0608  01D2               	clrf	_delay_counter^(0+128)
  4770  0609  01D3               	clrf	(_delay_counter+1)^(0+128)
  4771  060A                     l175:	
  4772                           ;main.c: 273: while (delayfound == 0) {
  4773                           
  4774  060A  0020               	movlb	0	; select bank0
  4775  060B  086D               	movf	_delayfound,w
  4776  060C  046E               	iorwf	_delayfound+1,w
  4777  060D  1D03               	btfss	3,2
  4778  060E  2E46               	goto	L6
  4779                           
  4780                           ;main.c: 274: if (delay[delay_counter] <= delay_time) {
  4781  060F  0021               	movlb	1	; select bank1
  4782  0610  0853               	movf	(_delay_counter+1)^(0+128),w
  4783  0611  00A5               	movwf	(??_main^(0+128)+1)
  4784  0612  0852               	movf	_delay_counter^(0+128),w
  4785  0613  00A4               	movwf	??_main^(0+128)
  4786  0614  35A4               	lslf	??_main^(0+128),f
  4787  0615  0DA5               	rlf	(??_main^(0+128)+1),f
  4788  0616  30F2               	movlw	242
  4789  0617  00A6               	movwf	(??_main+2)^(0+128)
  4790  0618  3023               	movlw	35
  4791  0619  00A7               	movwf	((??_main+2)^(0+128)+1)
  4792  061A  0824               	movf	??_main^(0+128),w
  4793  061B  0726               	addwf	(??_main+2)^(0+128),w
  4794  061C  0086               	movwf	6
  4795  061D  0825               	movf	(??_main+1)^(0+128),w
  4796  061E  3D27               	addwfc	(??_main+3)^(0+128),w
  4797  061F  0087               	movwf	7
  4798  0620  3F40               	moviw [0]fsr1
  4799  0621  00A8               	movwf	(??_main+4)^(0+128)
  4800  0622  3F41               	moviw [1]fsr1
  4801  0623  00A9               	movwf	((??_main+4)^(0+128)+1)
  4802  0624  0869               	movf	(_delay_time+1)^(0+128),w	;volatile
  4803  0625  3A80               	xorlw	128
  4804  0626  00AA               	movwf	(??_main+6)^(0+128)
  4805  0627  0829               	movf	(??_main+5)^(0+128),w
  4806  0628  3A80               	xorlw	128
  4807  0629  022A               	subwf	(??_main+6)^(0+128),w
  4808  062A  1D03               	skipz
  4809  062B  2E2E               	goto	u3155
  4810  062C  0828               	movf	(??_main+4)^(0+128),w
  4811  062D  0268               	subwf	_delay_time^(0+128),w	;volatile
  4812  062E                     u3155:	
  4813  062E  1C03               	skipc
  4814  062F  2E3E               	goto	l2915
  4815                           
  4816                           ;main.c: 275: delayfound = 1;
  4817  0630  3001               	movlw	1
  4818  0631  0020               	movlb	0	; select bank0
  4819  0632  00ED               	movwf	_delayfound
  4820  0633  3000               	movlw	0
  4821  0634  00EE               	movwf	_delayfound+1
  4822                           
  4823                           ;main.c: 276: CCPR1 = delay_counter;
  4824  0635  0021               	movlb	1	; select bank1
  4825  0636  0853               	movf	(_delay_counter+1)^(0+128),w
  4826  0637  0025               	movlb	5	; select bank5
  4827  0638  0092               	movwf	18	;volatile
  4828  0639  0021               	movlb	1	; select bank1
  4829  063A  0852               	movf	_delay_counter^(0+128),w
  4830  063B  0025               	movlb	5	; select bank5
  4831  063C  0091               	movwf	17	;volatile
  4832                           
  4833                           ;main.c: 277: } else {
  4834  063D  2E0A               	goto	l175
  4835  063E                     l2915:	
  4836                           
  4837                           ;main.c: 278: delay_counter = delay_counter + 1;
  4838  063E  0021               	movlb	1	; select bank1
  4839  063F  0852               	movf	_delay_counter^(0+128),w
  4840  0640  3E01               	addlw	1
  4841  0641  00D2               	movwf	_delay_counter^(0+128)
  4842  0642  3000               	movlw	0
  4843  0643  3D53               	addwfc	(_delay_counter+1)^(0+128),w
  4844  0644  00D3               	movwf	(_delay_counter+1)^(0+128)
  4845  0645  2E0A               	goto	l175
  4846  0646                     L6:	
  4847  0646                     L5:	
  4848  0646  318C  2CFF         	ljmp	l2917
  4849                           
  4850                           	psect	text1
  4851  139F                     __ptext1:	
  4852 ;; *************** function _wait_ms *****************
  4853 ;; Defined at:
  4854 ;;		line 23 in file "system.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  time            2    4[BANK0 ] unsigned int 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0, pclath, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4868 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4872 ;;Total ram usage:        2 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    2
  4875 ;; This function calls:
  4876 ;;		___lmul
  4877 ;; This function is called by:
  4878 ;;		_main
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           
  4883                           ;psect for function _wait_ms
  4884  139F                     _wait_ms:	
  4885                           
  4886                           ;system.c: 25: static long timel = 0;
  4887                           ;system.c: 26: timel = time * 1000l;
  4888                           
  4889                           ;incstack = 0
  4890                           ; Regs used in _wait_ms: [wreg+status,2+status,0+pclath+cstack]
  4891  139F  0020               	movlb	0	; select bank0
  4892  13A0  0824               	movf	wait_ms@time,w
  4893  13A1  00F2               	movwf	___lmul@multiplier
  4894  13A2  0825               	movf	wait_ms@time+1,w
  4895  13A3  00F3               	movwf	___lmul@multiplier+1
  4896  13A4  01F4               	clrf	___lmul@multiplier+2
  4897  13A5  01F5               	clrf	___lmul@multiplier+3
  4898  13A6  3000               	movlw	0
  4899  13A7  00F9               	movwf	___lmul@multiplicand+3
  4900  13A8  3000               	movlw	0
  4901  13A9  00F8               	movwf	___lmul@multiplicand+2
  4902  13AA  3003               	movlw	3
  4903  13AB  00F7               	movwf	___lmul@multiplicand+1
  4904  13AC  30E8               	movlw	232
  4905  13AD  00F6               	movwf	___lmul@multiplicand
  4906  13AE  3193  23F9  3193   	fcall	___lmul
  4907  13B1  0875               	movf	?___lmul+3,w
  4908  13B2  0022               	movlb	2	; select bank2
  4909  13B3  00CB               	movwf	(wait_ms@timel+3)^(0+256)
  4910  13B4  0874               	movf	?___lmul+2,w
  4911  13B5  00CA               	movwf	(wait_ms@timel+2)^(0+256)
  4912  13B6  0873               	movf	?___lmul+1,w
  4913  13B7  00C9               	movwf	(wait_ms@timel+1)^(0+256)
  4914  13B8  0872               	movf	?___lmul,w
  4915  13B9  00C8               	movwf	wait_ms@timel^(0+256)
  4916  13BA                     l214:	
  4917                           ;system.c: 27: for( ; timel; timel--);
  4918                           
  4919  13BA  084B               	movf	(wait_ms@timel+3)^(0+256),w
  4920  13BB  044A               	iorwf	(wait_ms@timel+2)^(0+256),w
  4921  13BC  0449               	iorwf	(wait_ms@timel+1)^(0+256),w
  4922  13BD  0448               	iorwf	wait_ms@timel^(0+256),w
  4923  13BE  1903               	btfsc	3,2
  4924  13BF  0008               	return
  4925  13C0  30FF               	movlw	255
  4926  13C1  07C8               	addwf	wait_ms@timel^(0+256),f
  4927  13C2  30FF               	movlw	255
  4928  13C3  3DC9               	addwfc	(wait_ms@timel+1)^(0+256),f
  4929  13C4  30FF               	movlw	255
  4930  13C5  3DCA               	addwfc	(wait_ms@timel+2)^(0+256),f
  4931  13C6  30FF               	movlw	255
  4932  13C7  3DCB               	addwfc	(wait_ms@timel+3)^(0+256),f
  4933  13C8  2BBA               	goto	l214
  4934  13C9                     __end_of_wait_ms:	
  4935                           
  4936                           	psect	text2
  4937  13F9                     __ptext2:	
  4938 ;; *************** function ___lmul *****************
  4939 ;; Defined at:
  4940 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  multiplier      4    2[COMMON] unsigned long 
  4943 ;;  multiplicand    4    6[COMMON] unsigned long 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  product         4    0[BANK0 ] unsigned long 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  4    2[COMMON] unsigned long 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4955 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4956 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4958 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4959 ;;Total ram usage:       12 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    1
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_wait_ms
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           
  4970                           ;psect for function ___lmul
  4971  13F9                     ___lmul:	
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4975  13F9  3000               	movlw	0
  4976  13FA  0020               	movlb	0	; select bank0
  4977  13FB  00A3               	movwf	___lmul@product+3
  4978  13FC  3000               	movlw	0
  4979  13FD  00A2               	movwf	___lmul@product+2
  4980  13FE  3000               	movlw	0
  4981  13FF  00A1               	movwf	___lmul@product+1
  4982  1400  3000               	movlw	0
  4983  1401  00A0               	movwf	___lmul@product
  4984  1402                     l1891:	
  4985  1402  1C72               	btfss	___lmul@multiplier,0
  4986  1403  2C0D               	goto	l1895
  4987  1404  0876               	movf	___lmul@multiplicand,w
  4988  1405  0020               	movlb	0	; select bank0
  4989  1406  07A0               	addwf	___lmul@product,f
  4990  1407  0877               	movf	___lmul@multiplicand+1,w
  4991  1408  3DA1               	addwfc	___lmul@product+1,f
  4992  1409  0878               	movf	___lmul@multiplicand+2,w
  4993  140A  3DA2               	addwfc	___lmul@product+2,f
  4994  140B  0879               	movf	___lmul@multiplicand+3,w
  4995  140C  3DA3               	addwfc	___lmul@product+3,f
  4996  140D                     l1895:	
  4997  140D  3001               	movlw	1
  4998  140E                     u1605:	
  4999  140E  35F6               	lslf	___lmul@multiplicand,f
  5000  140F  0DF7               	rlf	___lmul@multiplicand+1,f
  5001  1410  0DF8               	rlf	___lmul@multiplicand+2,f
  5002  1411  0DF9               	rlf	___lmul@multiplicand+3,f
  5003  1412  0B89               	decfsz	9,f
  5004  1413  2C0E               	goto	u1605
  5005  1414  3001               	movlw	1
  5006  1415                     u1615:	
  5007  1415  36F5               	lsrf	___lmul@multiplier+3,f
  5008  1416  0CF4               	rrf	___lmul@multiplier+2,f
  5009  1417  0CF3               	rrf	___lmul@multiplier+1,f
  5010  1418  0CF2               	rrf	___lmul@multiplier,f
  5011  1419  0B89               	decfsz	9,f
  5012  141A  2C15               	goto	u1615
  5013  141B  0875               	movf	___lmul@multiplier+3,w
  5014  141C  0474               	iorwf	___lmul@multiplier+2,w
  5015  141D  0473               	iorwf	___lmul@multiplier+1,w
  5016  141E  0472               	iorwf	___lmul@multiplier,w
  5017  141F  1D03               	skipz
  5018  1420  2C02               	goto	l1891
  5019  1421  0020               	movlb	0	; select bank0
  5020  1422  0823               	movf	___lmul@product+3,w
  5021  1423  00F5               	movwf	?___lmul+3
  5022  1424  0822               	movf	___lmul@product+2,w
  5023  1425  00F4               	movwf	?___lmul+2
  5024  1426  0821               	movf	___lmul@product+1,w
  5025  1427  00F3               	movwf	?___lmul+1
  5026  1428  0820               	movf	___lmul@product,w
  5027  1429  00F2               	movwf	?___lmul
  5028  142A  0008               	return
  5029  142B                     __end_of___lmul:	
  5030                           
  5031                           	psect	text3
  5032  0648                     __ptext3:	
  5033 ;; *************** function _set_subdivision *****************
  5034 ;; Defined at:
  5035 ;;		line 116 in file "user.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  x               2    0[BANK1 ] int 
  5038 ;;  y               2    2[BANK1 ] int 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  2    0[BANK1 ] int 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5050 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5053 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5054 ;;Total ram usage:        4 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    3
  5057 ;; This function calls:
  5058 ;;		___awtoft
  5059 ;;		___ftmul
  5060 ;;		___fttol
  5061 ;; This function is called by:
  5062 ;;		_main
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           
  5067                           ;psect for function _set_subdivision
  5068  0648                     _set_subdivision:	
  5069                           
  5070                           ;user.c: 119: switch (y) {
  5071                           
  5072                           ;incstack = 0
  5073                           ; Regs used in _set_subdivision: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5074  0648  2F26               	goto	l2705
  5075  0649                     l2693:	
  5076                           ;user.c: 120: case 1:
  5077                           
  5078                           
  5079                           ;user.c: 121: x = x * .75;
  5080  0649  0021               	movlb	1	; select bank1
  5081  064A  0821               	movf	(set_subdivision@x+1)^(0+128),w
  5082  064B  0020               	movlb	0	; select bank0
  5083  064C  00A1               	movwf	___awtoft@c+1
  5084  064D  0021               	movlb	1	; select bank1
  5085  064E  0820               	movf	set_subdivision@x^(0+128),w
  5086  064F  0020               	movlb	0	; select bank0
  5087  0650  00A0               	movwf	___awtoft@c
  5088  0651  3193  237D  3186   	fcall	___awtoft
  5089  0654  0020               	movlb	0	; select bank0
  5090  0655  0820               	movf	?___awtoft,w
  5091  0656  00B0               	movwf	___ftmul@f2
  5092  0657  0821               	movf	?___awtoft+1,w
  5093  0658  00B1               	movwf	___ftmul@f2+1
  5094  0659  0822               	movf	?___awtoft+2,w
  5095  065A  00B2               	movwf	___ftmul@f2+2
  5096  065B  3000               	movlw	0
  5097  065C  00AD               	movwf	___ftmul@f1
  5098  065D  3040               	movlw	64
  5099  065E  00AE               	movwf	___ftmul@f1+1
  5100  065F  303F               	movlw	63
  5101  0660  00AF               	movwf	___ftmul@f1+2
  5102  0661  3187  2741  3186   	fcall	___ftmul
  5103  0664  0020               	movlb	0	; select bank0
  5104  0665  082D               	movf	?___ftmul,w
  5105  0666  00DF               	movwf	___fttol@f1
  5106  0667  082E               	movf	?___ftmul+1,w
  5107  0668  00E0               	movwf	___fttol@f1+1
  5108  0669  082F               	movf	?___ftmul+2,w
  5109  066A  00E1               	movwf	___fttol@f1+2
  5110  066B  3188  2050         	fcall	___fttol
  5111  066D  0020               	movlb	0	; select bank0
  5112  066E  0860               	movf	?___fttol+1,w
  5113  066F  0021               	movlb	1	; select bank1
  5114  0670  00A1               	movwf	(set_subdivision@x+1)^(0+128)
  5115  0671  0020               	movlb	0	; select bank0
  5116  0672  085F               	movf	?___fttol,w
  5117  0673  0021               	movlb	1	; select bank1
  5118  0674  00A0               	movwf	set_subdivision@x^(0+128)
  5119                           
  5120                           ;user.c: 122: break;
  5121  0675  0008               	return
  5122  0676                     l2695:	
  5123                           ;user.c: 123: case 2:
  5124                           
  5125                           
  5126                           ;user.c: 124: x = x * .66666;
  5127  0676  0821               	movf	(set_subdivision@x+1)^(0+128),w
  5128  0677  0020               	movlb	0	; select bank0
  5129  0678  00A1               	movwf	___awtoft@c+1
  5130  0679  0021               	movlb	1	; select bank1
  5131  067A  0820               	movf	set_subdivision@x^(0+128),w
  5132  067B  0020               	movlb	0	; select bank0
  5133  067C  00A0               	movwf	___awtoft@c
  5134  067D  3193  237D  3186   	fcall	___awtoft
  5135  0680  0020               	movlb	0	; select bank0
  5136  0681  0820               	movf	?___awtoft,w
  5137  0682  00B0               	movwf	___ftmul@f2
  5138  0683  0821               	movf	?___awtoft+1,w
  5139  0684  00B1               	movwf	___ftmul@f2+1
  5140  0685  0822               	movf	?___awtoft+2,w
  5141  0686  00B2               	movwf	___ftmul@f2+2
  5142  0687  30AA               	movlw	170
  5143  0688  00AD               	movwf	___ftmul@f1
  5144  0689  302A               	movlw	42
  5145  068A  00AE               	movwf	___ftmul@f1+1
  5146  068B  303F               	movlw	63
  5147  068C  00AF               	movwf	___ftmul@f1+2
  5148  068D  3187  2741  3186   	fcall	___ftmul
  5149  0690  0020               	movlb	0	; select bank0
  5150  0691  082D               	movf	?___ftmul,w
  5151  0692  00DF               	movwf	___fttol@f1
  5152  0693  082E               	movf	?___ftmul+1,w
  5153  0694  00E0               	movwf	___fttol@f1+1
  5154  0695  082F               	movf	?___ftmul+2,w
  5155  0696  00E1               	movwf	___fttol@f1+2
  5156  0697  3188  2050         	fcall	___fttol
  5157  0699  0020               	movlb	0	; select bank0
  5158  069A  0860               	movf	?___fttol+1,w
  5159  069B  0021               	movlb	1	; select bank1
  5160  069C  00A1               	movwf	(set_subdivision@x+1)^(0+128)
  5161  069D  0020               	movlb	0	; select bank0
  5162  069E  085F               	movf	?___fttol,w
  5163  069F  0021               	movlb	1	; select bank1
  5164  06A0  00A0               	movwf	set_subdivision@x^(0+128)
  5165                           
  5166                           ;user.c: 125: break;
  5167  06A1  0008               	return
  5168  06A2                     l2697:	
  5169                           ;user.c: 126: case 3:
  5170                           
  5171                           
  5172                           ;user.c: 127: x = x * .5;
  5173  06A2  0821               	movf	(set_subdivision@x+1)^(0+128),w
  5174  06A3  0020               	movlb	0	; select bank0
  5175  06A4  00A1               	movwf	___awtoft@c+1
  5176  06A5  0021               	movlb	1	; select bank1
  5177  06A6  0820               	movf	set_subdivision@x^(0+128),w
  5178  06A7  0020               	movlb	0	; select bank0
  5179  06A8  00A0               	movwf	___awtoft@c
  5180  06A9  3193  237D  3186   	fcall	___awtoft
  5181  06AC  0020               	movlb	0	; select bank0
  5182  06AD  0820               	movf	?___awtoft,w
  5183  06AE  00B0               	movwf	___ftmul@f2
  5184  06AF  0821               	movf	?___awtoft+1,w
  5185  06B0  00B1               	movwf	___ftmul@f2+1
  5186  06B1  0822               	movf	?___awtoft+2,w
  5187  06B2  00B2               	movwf	___ftmul@f2+2
  5188  06B3  3000               	movlw	0
  5189  06B4  00AD               	movwf	___ftmul@f1
  5190  06B5  3000               	movlw	0
  5191  06B6  00AE               	movwf	___ftmul@f1+1
  5192  06B7  303F               	movlw	63
  5193  06B8  00AF               	movwf	___ftmul@f1+2
  5194  06B9  3187  2741  3186   	fcall	___ftmul
  5195  06BC  0020               	movlb	0	; select bank0
  5196  06BD  082D               	movf	?___ftmul,w
  5197  06BE  00DF               	movwf	___fttol@f1
  5198  06BF  082E               	movf	?___ftmul+1,w
  5199  06C0  00E0               	movwf	___fttol@f1+1
  5200  06C1  082F               	movf	?___ftmul+2,w
  5201  06C2  00E1               	movwf	___fttol@f1+2
  5202  06C3  3188  2050         	fcall	___fttol
  5203  06C5  0020               	movlb	0	; select bank0
  5204  06C6  0860               	movf	?___fttol+1,w
  5205  06C7  0021               	movlb	1	; select bank1
  5206  06C8  00A1               	movwf	(set_subdivision@x+1)^(0+128)
  5207  06C9  0020               	movlb	0	; select bank0
  5208  06CA  085F               	movf	?___fttol,w
  5209  06CB  0021               	movlb	1	; select bank1
  5210  06CC  00A0               	movwf	set_subdivision@x^(0+128)
  5211                           
  5212                           ;user.c: 128: break;
  5213  06CD  0008               	return
  5214  06CE                     l2699:	
  5215                           ;user.c: 129: case 4:
  5216                           
  5217                           
  5218                           ;user.c: 130: x = x * .3333;
  5219  06CE  0821               	movf	(set_subdivision@x+1)^(0+128),w
  5220  06CF  0020               	movlb	0	; select bank0
  5221  06D0  00A1               	movwf	___awtoft@c+1
  5222  06D1  0021               	movlb	1	; select bank1
  5223  06D2  0820               	movf	set_subdivision@x^(0+128),w
  5224  06D3  0020               	movlb	0	; select bank0
  5225  06D4  00A0               	movwf	___awtoft@c
  5226  06D5  3193  237D  3186   	fcall	___awtoft
  5227  06D8  0020               	movlb	0	; select bank0
  5228  06D9  0820               	movf	?___awtoft,w
  5229  06DA  00B0               	movwf	___ftmul@f2
  5230  06DB  0821               	movf	?___awtoft+1,w
  5231  06DC  00B1               	movwf	___ftmul@f2+1
  5232  06DD  0822               	movf	?___awtoft+2,w
  5233  06DE  00B2               	movwf	___ftmul@f2+2
  5234  06DF  30A6               	movlw	166
  5235  06E0  00AD               	movwf	___ftmul@f1
  5236  06E1  30AA               	movlw	170
  5237  06E2  00AE               	movwf	___ftmul@f1+1
  5238  06E3  303E               	movlw	62
  5239  06E4  00AF               	movwf	___ftmul@f1+2
  5240  06E5  3187  2741  3186   	fcall	___ftmul
  5241  06E8  0020               	movlb	0	; select bank0
  5242  06E9  082D               	movf	?___ftmul,w
  5243  06EA  00DF               	movwf	___fttol@f1
  5244  06EB  082E               	movf	?___ftmul+1,w
  5245  06EC  00E0               	movwf	___fttol@f1+1
  5246  06ED  082F               	movf	?___ftmul+2,w
  5247  06EE  00E1               	movwf	___fttol@f1+2
  5248  06EF  3188  2050         	fcall	___fttol
  5249  06F1  0020               	movlb	0	; select bank0
  5250  06F2  0860               	movf	?___fttol+1,w
  5251  06F3  0021               	movlb	1	; select bank1
  5252  06F4  00A1               	movwf	(set_subdivision@x+1)^(0+128)
  5253  06F5  0020               	movlb	0	; select bank0
  5254  06F6  085F               	movf	?___fttol,w
  5255  06F7  0021               	movlb	1	; select bank1
  5256  06F8  00A0               	movwf	set_subdivision@x^(0+128)
  5257                           
  5258                           ;user.c: 131: break;
  5259  06F9  0008               	return
  5260  06FA                     l2701:	
  5261                           ;user.c: 132: case 5:
  5262                           
  5263                           
  5264                           ;user.c: 133: x = x * .25;
  5265  06FA  0821               	movf	(set_subdivision@x+1)^(0+128),w
  5266  06FB  0020               	movlb	0	; select bank0
  5267  06FC  00A1               	movwf	___awtoft@c+1
  5268  06FD  0021               	movlb	1	; select bank1
  5269  06FE  0820               	movf	set_subdivision@x^(0+128),w
  5270  06FF  0020               	movlb	0	; select bank0
  5271  0700  00A0               	movwf	___awtoft@c
  5272  0701  3193  237D  3186   	fcall	___awtoft
  5273  0704  0020               	movlb	0	; select bank0
  5274  0705  0820               	movf	?___awtoft,w
  5275  0706  00B0               	movwf	___ftmul@f2
  5276  0707  0821               	movf	?___awtoft+1,w
  5277  0708  00B1               	movwf	___ftmul@f2+1
  5278  0709  0822               	movf	?___awtoft+2,w
  5279  070A  00B2               	movwf	___ftmul@f2+2
  5280  070B  3000               	movlw	0
  5281  070C  00AD               	movwf	___ftmul@f1
  5282  070D  3080               	movlw	128
  5283  070E  00AE               	movwf	___ftmul@f1+1
  5284  070F  303E               	movlw	62
  5285  0710  00AF               	movwf	___ftmul@f1+2
  5286  0711  3187  2741  3186   	fcall	___ftmul
  5287  0714  0020               	movlb	0	; select bank0
  5288  0715  082D               	movf	?___ftmul,w
  5289  0716  00DF               	movwf	___fttol@f1
  5290  0717  082E               	movf	?___ftmul+1,w
  5291  0718  00E0               	movwf	___fttol@f1+1
  5292  0719  082F               	movf	?___ftmul+2,w
  5293  071A  00E1               	movwf	___fttol@f1+2
  5294  071B  3188  2050         	fcall	___fttol
  5295  071D  0020               	movlb	0	; select bank0
  5296  071E  0860               	movf	?___fttol+1,w
  5297  071F  0021               	movlb	1	; select bank1
  5298  0720  00A1               	movwf	(set_subdivision@x+1)^(0+128)
  5299  0721  0020               	movlb	0	; select bank0
  5300  0722  085F               	movf	?___fttol,w
  5301  0723  0021               	movlb	1	; select bank1
  5302  0724  00A0               	movwf	set_subdivision@x^(0+128)
  5303                           
  5304                           ;user.c: 138: }
  5305                           
  5306                           ;user.c: 137: break;
  5307                           
  5308                           ;user.c: 135: case 6:
  5309                           
  5310                           ;user.c: 134: break;
  5311  0725  0008               	return
  5312  0726                     l2705:	
  5313                           
  5314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5315                           ; Switch size 1, requested type "space"
  5316                           ; Number of cases is 1, Range of values is 0 to 0
  5317                           ; switch strategies available:
  5318                           ; Name         Instructions Cycles
  5319                           ; simple_byte            4     3 (average)
  5320                           ; direct_byte            8     6 (fixed)
  5321                           ; jumptable            260     6 (fixed)
  5322                           ;	Chosen strategy is simple_byte
  5323  0726  0021               	movlb	1	; select bank1
  5324  0727  0823               	movf	(set_subdivision@y+1)^(0+128),w
  5325  0728  3A00               	xorlw	0	; case 0
  5326  0729  1903               	skipnz
  5327  072A  2F2C               	goto	l3089
  5328  072B  2F40               	goto	l318
  5329  072C                     l3089:	
  5330                           
  5331                           ; Switch size 1, requested type "space"
  5332                           ; Number of cases is 6, Range of values is 1 to 6
  5333                           ; switch strategies available:
  5334                           ; Name         Instructions Cycles
  5335                           ; simple_byte           19    10 (average)
  5336                           ; direct_byte           21     9 (fixed)
  5337                           ; jumptable            263     9 (fixed)
  5338                           ;	Chosen strategy is simple_byte
  5339  072C  0822               	movf	set_subdivision@y^(0+128),w
  5340  072D  3A01               	xorlw	1	; case 1
  5341  072E  1903               	skipnz
  5342  072F  2E49               	goto	l2693
  5343  0730  3A03               	xorlw	3	; case 2
  5344  0731  1903               	skipnz
  5345  0732  2E76               	goto	l2695
  5346  0733  3A01               	xorlw	1	; case 3
  5347  0734  1903               	skipnz
  5348  0735  2EA2               	goto	l2697
  5349  0736  3A07               	xorlw	7	; case 4
  5350  0737  1903               	skipnz
  5351  0738  2ECE               	goto	l2699
  5352  0739  3A01               	xorlw	1	; case 5
  5353  073A  1903               	skipnz
  5354  073B  2EFA               	goto	l2701
  5355  073C  3A03               	xorlw	3	; case 6
  5356  073D  1903               	skipnz
  5357  073E  2F40               	goto	l318
  5358  073F  2F40               	goto	l318
  5359  0740                     l318:	
  5360                           
  5361                           ;user.c: 139: return x;
  5362  0740  0008               	return
  5363  0741                     __end_of_set_subdivision:	
  5364                           
  5365                           	psect	text4
  5366  0850                     __ptext4:	
  5367 ;; *************** function ___fttol *****************
  5368 ;; Defined at:
  5369 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  f1              3   63[BANK0 ] float 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  lval            4   72[BANK0 ] unsigned long 
  5374 ;;  exp1            1   76[BANK0 ] unsigned char 
  5375 ;;  sign1           1   71[BANK0 ] unsigned char 
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  4   63[BANK0 ] long 
  5378 ;; Registers used:
  5379 ;;		wreg, status,2, status,0
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5385 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5386 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5387 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5388 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5389 ;;Total ram usage:       14 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:    1
  5392 ;; This function calls:
  5393 ;;		Nothing
  5394 ;; This function is called by:
  5395 ;;		_main
  5396 ;;		_set_subdivision
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           
  5401                           ;psect for function ___fttol
  5402  0850                     ___fttol:	
  5403                           
  5404                           ;incstack = 0
  5405                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5406  0850  0020               	movlb	0	; select bank0
  5407  0851  085F               	movf	___fttol@f1,w
  5408  0852  00E3               	movwf	??___fttol
  5409  0853  0860               	movf	___fttol@f1+1,w
  5410  0854  00E4               	movwf	??___fttol+1
  5411  0855  0861               	movf	___fttol@f1+2,w
  5412  0856  00E5               	movwf	??___fttol+2
  5413  0857  1003               	clrc
  5414  0858  0D64               	rlf	??___fttol+1,w
  5415  0859  0D65               	rlf	??___fttol+2,w
  5416  085A  00E6               	movwf	??___fttol+3
  5417  085B  0866               	movf	??___fttol+3,w
  5418  085C  00EC               	movwf	___fttol@exp1
  5419  085D  086C               	movf	___fttol@exp1,w
  5420  085E  1D03               	btfss	3,2
  5421  085F  2869               	goto	l2131
  5422  0860  3000               	movlw	0
  5423  0861  00E2               	movwf	?___fttol+3
  5424  0862  3000               	movlw	0
  5425  0863  00E1               	movwf	?___fttol+2
  5426  0864  3000               	movlw	0
  5427  0865  00E0               	movwf	?___fttol+1
  5428  0866  3000               	movlw	0
  5429  0867  00DF               	movwf	?___fttol
  5430  0868  0008               	return
  5431  0869                     l2131:	
  5432  0869  085F               	movf	___fttol@f1,w
  5433  086A  00E3               	movwf	??___fttol
  5434  086B  0860               	movf	___fttol@f1+1,w
  5435  086C  00E4               	movwf	??___fttol+1
  5436  086D  0861               	movf	___fttol@f1+2,w
  5437  086E  00E5               	movwf	??___fttol+2
  5438  086F  3017               	movlw	23
  5439  0870                     u2195:	
  5440  0870  36E5               	lsrf	??___fttol+2,f
  5441  0871  0CE4               	rrf	??___fttol+1,f
  5442  0872  0CE3               	rrf	??___fttol,f
  5443  0873  0B89               	decfsz	9,f
  5444  0874  2870               	goto	u2195
  5445  0875  0863               	movf	??___fttol,w
  5446  0876  00E6               	movwf	??___fttol+3
  5447  0877  0866               	movf	??___fttol+3,w
  5448  0878  00E7               	movwf	___fttol@sign1
  5449  0879  17E0               	bsf	___fttol@f1+1,7
  5450  087A  30FF               	movlw	255
  5451  087B  05DF               	andwf	___fttol@f1,f
  5452  087C  30FF               	movlw	255
  5453  087D  05E0               	andwf	___fttol@f1+1,f
  5454  087E  3000               	movlw	0
  5455  087F  05E1               	andwf	___fttol@f1+2,f
  5456  0880  085F               	movf	___fttol@f1,w
  5457  0881  00E8               	movwf	___fttol@lval
  5458  0882  0860               	movf	___fttol@f1+1,w
  5459  0883  00E9               	movwf	___fttol@lval+1
  5460  0884  0861               	movf	___fttol@f1+2,w
  5461  0885  00EA               	movwf	___fttol@lval+2
  5462  0886  01EB               	clrf	___fttol@lval+3
  5463  0887  308E               	movlw	142
  5464  0888  02EC               	subwf	___fttol@exp1,f
  5465  0889  1FEC               	btfss	___fttol@exp1,7
  5466  088A  28A7               	goto	l2151
  5467  088B  086C               	movf	___fttol@exp1,w
  5468  088C  3A80               	xorlw	128
  5469  088D  3E8F               	addlw	143
  5470  088E  1803               	skipnc
  5471  088F  2899               	goto	l2149
  5472  0890  3000               	movlw	0
  5473  0891  00E2               	movwf	?___fttol+3
  5474  0892  3000               	movlw	0
  5475  0893  00E1               	movwf	?___fttol+2
  5476  0894  3000               	movlw	0
  5477  0895  00E0               	movwf	?___fttol+1
  5478  0896  3000               	movlw	0
  5479  0897  00DF               	movwf	?___fttol
  5480  0898  0008               	return
  5481  0899                     l2149:	
  5482  0899  3001               	movlw	1
  5483  089A                     u2225:	
  5484  089A  36EB               	lsrf	___fttol@lval+3,f
  5485  089B  0CEA               	rrf	___fttol@lval+2,f
  5486  089C  0CE9               	rrf	___fttol@lval+1,f
  5487  089D  0CE8               	rrf	___fttol@lval,f
  5488  089E  0B89               	decfsz	9,f
  5489  089F  289A               	goto	u2225
  5490  08A0  3001               	movlw	1
  5491  08A1  00E3               	movwf	??___fttol
  5492  08A2  0863               	movf	??___fttol,w
  5493  08A3  07EC               	addwf	___fttol@exp1,f
  5494  08A4  1903               	btfsc	3,2
  5495  08A5  28C0               	goto	l2159
  5496  08A6  2899               	goto	l2149
  5497  08A7                     l2151:	
  5498  08A7  3018               	movlw	24
  5499  08A8  026C               	subwf	___fttol@exp1,w
  5500  08A9  1C03               	skipc
  5501  08AA  28BD               	goto	l653
  5502  08AB  3000               	movlw	0
  5503  08AC  00E2               	movwf	?___fttol+3
  5504  08AD  3000               	movlw	0
  5505  08AE  00E1               	movwf	?___fttol+2
  5506  08AF  3000               	movlw	0
  5507  08B0  00E0               	movwf	?___fttol+1
  5508  08B1  3000               	movlw	0
  5509  08B2  00DF               	movwf	?___fttol
  5510  08B3  0008               	return
  5511  08B4                     l2157:	
  5512  08B4  3001               	movlw	1
  5513  08B5                     u2255:	
  5514  08B5  35E8               	lslf	___fttol@lval,f
  5515  08B6  0DE9               	rlf	___fttol@lval+1,f
  5516  08B7  0DEA               	rlf	___fttol@lval+2,f
  5517  08B8  0DEB               	rlf	___fttol@lval+3,f
  5518  08B9  0B89               	decfsz	9,f
  5519  08BA  28B5               	goto	u2255
  5520  08BB  3001               	movlw	1
  5521  08BC  02EC               	subwf	___fttol@exp1,f
  5522  08BD                     l653:	
  5523  08BD  086C               	movf	___fttol@exp1,w
  5524  08BE  1D03               	btfss	3,2
  5525  08BF  28B4               	goto	l2157
  5526  08C0                     l2159:	
  5527  08C0  0867               	movf	___fttol@sign1,w
  5528  08C1  1903               	btfsc	3,2
  5529  08C2  28CE               	goto	l2163
  5530  08C3  09E8               	comf	___fttol@lval,f
  5531  08C4  09E9               	comf	___fttol@lval+1,f
  5532  08C5  09EA               	comf	___fttol@lval+2,f
  5533  08C6  09EB               	comf	___fttol@lval+3,f
  5534  08C7  0AE8               	incf	___fttol@lval,f
  5535  08C8  1903               	skipnz
  5536  08C9  0AE9               	incf	___fttol@lval+1,f
  5537  08CA  1903               	skipnz
  5538  08CB  0AEA               	incf	___fttol@lval+2,f
  5539  08CC  1903               	skipnz
  5540  08CD  0AEB               	incf	___fttol@lval+3,f
  5541  08CE                     l2163:	
  5542  08CE  086B               	movf	___fttol@lval+3,w
  5543  08CF  00E2               	movwf	?___fttol+3
  5544  08D0  086A               	movf	___fttol@lval+2,w
  5545  08D1  00E1               	movwf	?___fttol+2
  5546  08D2  0869               	movf	___fttol@lval+1,w
  5547  08D3  00E0               	movwf	?___fttol+1
  5548  08D4  0868               	movf	___fttol@lval,w
  5549  08D5  00DF               	movwf	?___fttol
  5550  08D6  0008               	return
  5551  08D7                     __end_of___fttol:	
  5552                           
  5553                           	psect	text5
  5554  137D                     __ptext5:	
  5555 ;; *************** function ___awtoft *****************
  5556 ;; Defined at:
  5557 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  c               2    0[BANK0 ] int 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  sign            1    5[BANK0 ] unsigned char 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  3    0[BANK0 ] float 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0, pclath, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5571 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5573 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5574 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5575 ;;Total ram usage:        6 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    2
  5578 ;; This function calls:
  5579 ;;		___ftpack
  5580 ;; This function is called by:
  5581 ;;		_main
  5582 ;;		_set_subdivision
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function ___awtoft
  5588  137D                     ___awtoft:	
  5589                           
  5590                           ;incstack = 0
  5591                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5592  137D  0020               	movlb	0	; select bank0
  5593  137E  01A5               	clrf	___awtoft@sign
  5594  137F  1FA1               	btfss	___awtoft@c+1,7
  5595  1380  2B88               	goto	l2687
  5596  1381  09A0               	comf	___awtoft@c,f
  5597  1382  09A1               	comf	___awtoft@c+1,f
  5598  1383  0AA0               	incf	___awtoft@c,f
  5599  1384  1903               	skipnz
  5600  1385  0AA1               	incf	___awtoft@c+1,f
  5601  1386  01A5               	clrf	___awtoft@sign
  5602  1387  0AA5               	incf	___awtoft@sign,f
  5603  1388                     l2687:	
  5604  1388  0820               	movf	___awtoft@c,w
  5605  1389  00F2               	movwf	___ftpack@arg
  5606  138A  0821               	movf	___awtoft@c+1,w
  5607  138B  00F3               	movwf	___ftpack@arg+1
  5608  138C  01F4               	clrf	___ftpack@arg+2
  5609  138D  308E               	movlw	142
  5610  138E  00A3               	movwf	??___awtoft
  5611  138F  0823               	movf	??___awtoft,w
  5612  1390  00F5               	movwf	___ftpack@exp
  5613  1391  0825               	movf	___awtoft@sign,w
  5614  1392  00A4               	movwf	??___awtoft+1
  5615  1393  0824               	movf	??___awtoft+1,w
  5616  1394  00F6               	movwf	___ftpack@sign
  5617  1395  3196  26B1         	fcall	___ftpack
  5618  1397  0872               	movf	?___ftpack,w
  5619  1398  0020               	movlb	0	; select bank0
  5620  1399  00A0               	movwf	?___awtoft
  5621  139A  0873               	movf	?___ftpack+1,w
  5622  139B  00A1               	movwf	?___awtoft+1
  5623  139C  0874               	movf	?___ftpack+2,w
  5624  139D  00A2               	movwf	?___awtoft+2
  5625  139E  0008               	return
  5626  139F                     __end_of___awtoft:	
  5627                           
  5628                           	psect	text6
  5629  161C                     __ptext6:	
  5630 ;; *************** function _set_leds_top *****************
  5631 ;; Defined at:
  5632 ;;		line 142 in file "user.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  x               2    2[COMMON] int 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5650 ;;Total ram usage:        2 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_main
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           
  5661                           ;psect for function _set_leds_top
  5662  161C                     _set_leds_top:	
  5663                           
  5664                           ;user.c: 143: switch (x) {
  5665                           
  5666                           ;incstack = 0
  5667                           ; Regs used in _set_leds_top: [wreg-fsr0h+status,2+status,0]
  5668  161C  2E47               	goto	l2183
  5669  161D                     l328:	
  5670                           ;user.c: 144: case 1:
  5671                           
  5672                           
  5673                           ;user.c: 145: LATFbits.LATF0 = 1;
  5674  161D  0027               	movlb	7	; select bank7
  5675  161E  140C               	bsf	12,0	;volatile
  5676                           
  5677                           ;user.c: 146: LATFbits.LATF1 = 0;
  5678  161F  108C               	bcf	12,1	;volatile
  5679                           
  5680                           ;user.c: 147: LATFbits.LATF2 = 0;
  5681  1620  110C               	bcf	12,2	;volatile
  5682                           
  5683                           ;user.c: 148: LATFbits.LATF3 = 0;
  5684  1621  118C               	bcf	12,3	;volatile
  5685                           
  5686                           ;user.c: 149: LATFbits.LATF4 = 0;
  5687  1622  120C               	bcf	12,4	;volatile
  5688                           
  5689                           ;user.c: 150: break;
  5690  1623  0008               	return
  5691  1624                     l330:	
  5692                           ;user.c: 151: case 2:
  5693                           
  5694                           
  5695                           ;user.c: 152: LATFbits.LATF0 = 0;
  5696  1624  0027               	movlb	7	; select bank7
  5697  1625  100C               	bcf	12,0	;volatile
  5698                           
  5699                           ;user.c: 153: LATFbits.LATF1 = 1;
  5700  1626  148C               	bsf	12,1	;volatile
  5701                           
  5702                           ;user.c: 154: LATFbits.LATF2 = 0;
  5703  1627  110C               	bcf	12,2	;volatile
  5704                           
  5705                           ;user.c: 155: LATFbits.LATF3 = 0;
  5706  1628  118C               	bcf	12,3	;volatile
  5707                           
  5708                           ;user.c: 156: LATFbits.LATF4 = 0;
  5709  1629  120C               	bcf	12,4	;volatile
  5710                           
  5711                           ;user.c: 157: break;
  5712  162A  0008               	return
  5713  162B                     l331:	
  5714                           ;user.c: 158: case 3:
  5715                           
  5716                           
  5717                           ;user.c: 159: LATFbits.LATF0 = 0;
  5718  162B  0027               	movlb	7	; select bank7
  5719  162C  100C               	bcf	12,0	;volatile
  5720                           
  5721                           ;user.c: 160: LATFbits.LATF1 = 0;
  5722  162D  108C               	bcf	12,1	;volatile
  5723                           
  5724                           ;user.c: 161: LATFbits.LATF2 = 1;
  5725  162E  150C               	bsf	12,2	;volatile
  5726                           
  5727                           ;user.c: 162: LATFbits.LATF3 = 0;
  5728  162F  118C               	bcf	12,3	;volatile
  5729                           
  5730                           ;user.c: 163: LATFbits.LATF4 = 0;
  5731  1630  120C               	bcf	12,4	;volatile
  5732                           
  5733                           ;user.c: 164: break;
  5734  1631  0008               	return
  5735  1632                     l332:	
  5736                           ;user.c: 165: case 4:
  5737                           
  5738                           
  5739                           ;user.c: 166: LATFbits.LATF0 = 0;
  5740  1632  0027               	movlb	7	; select bank7
  5741  1633  100C               	bcf	12,0	;volatile
  5742                           
  5743                           ;user.c: 167: LATFbits.LATF1 = 0;
  5744  1634  108C               	bcf	12,1	;volatile
  5745                           
  5746                           ;user.c: 168: LATFbits.LATF2 = 0;
  5747  1635  110C               	bcf	12,2	;volatile
  5748                           
  5749                           ;user.c: 169: LATFbits.LATF3 = 1;
  5750  1636  158C               	bsf	12,3	;volatile
  5751                           
  5752                           ;user.c: 170: LATFbits.LATF4 = 0;
  5753  1637  120C               	bcf	12,4	;volatile
  5754                           
  5755                           ;user.c: 171: break;
  5756  1638  0008               	return
  5757  1639                     l333:	
  5758                           ;user.c: 172: case 5:
  5759                           
  5760                           
  5761                           ;user.c: 173: LATFbits.LATF0 = 0;
  5762  1639  0027               	movlb	7	; select bank7
  5763  163A  100C               	bcf	12,0	;volatile
  5764                           
  5765                           ;user.c: 174: LATFbits.LATF1 = 0;
  5766  163B  108C               	bcf	12,1	;volatile
  5767                           
  5768                           ;user.c: 175: LATFbits.LATF2 = 0;
  5769  163C  110C               	bcf	12,2	;volatile
  5770                           
  5771                           ;user.c: 176: LATFbits.LATF3 = 0;
  5772  163D  118C               	bcf	12,3	;volatile
  5773                           
  5774                           ;user.c: 177: LATFbits.LATF4 = 1;
  5775  163E  160C               	bsf	12,4	;volatile
  5776                           
  5777                           ;user.c: 178: break;
  5778  163F  0008               	return
  5779  1640                     l334:	
  5780                           ;user.c: 179: case 6:
  5781                           
  5782                           
  5783                           ;user.c: 180: LATFbits.LATF0 = 0;
  5784  1640  0027               	movlb	7	; select bank7
  5785  1641  100C               	bcf	12,0	;volatile
  5786                           
  5787                           ;user.c: 181: LATFbits.LATF1 = 0;
  5788  1642  108C               	bcf	12,1	;volatile
  5789                           
  5790                           ;user.c: 182: LATFbits.LATF2 = 0;
  5791  1643  110C               	bcf	12,2	;volatile
  5792                           
  5793                           ;user.c: 183: LATFbits.LATF3 = 0;
  5794  1644  118C               	bcf	12,3	;volatile
  5795                           
  5796                           ;user.c: 184: LATFbits.LATF4 = 0;
  5797  1645  120C               	bcf	12,4	;volatile
  5798                           
  5799                           ;user.c: 186: }
  5800                           
  5801                           ;user.c: 185: break;
  5802  1646  0008               	return
  5803  1647                     l2183:	
  5804                           
  5805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5806                           ; Switch size 1, requested type "space"
  5807                           ; Number of cases is 1, Range of values is 0 to 0
  5808                           ; switch strategies available:
  5809                           ; Name         Instructions Cycles
  5810                           ; simple_byte            4     3 (average)
  5811                           ; direct_byte            8     6 (fixed)
  5812                           ; jumptable            260     6 (fixed)
  5813                           ;	Chosen strategy is simple_byte
  5814  1647  0873               	movf	set_leds_top@x+1,w
  5815  1648  3A00               	xorlw	0	; case 0
  5816  1649  1903               	skipnz
  5817  164A  2E4C               	goto	l3091
  5818  164B  2E60               	goto	l335
  5819  164C                     l3091:	
  5820                           
  5821                           ; Switch size 1, requested type "space"
  5822                           ; Number of cases is 6, Range of values is 1 to 6
  5823                           ; switch strategies available:
  5824                           ; Name         Instructions Cycles
  5825                           ; simple_byte           19    10 (average)
  5826                           ; direct_byte           21     9 (fixed)
  5827                           ; jumptable            263     9 (fixed)
  5828                           ;	Chosen strategy is simple_byte
  5829  164C  0872               	movf	set_leds_top@x,w
  5830  164D  3A01               	xorlw	1	; case 1
  5831  164E  1903               	skipnz
  5832  164F  2E1D               	goto	l328
  5833  1650  3A03               	xorlw	3	; case 2
  5834  1651  1903               	skipnz
  5835  1652  2E24               	goto	l330
  5836  1653  3A01               	xorlw	1	; case 3
  5837  1654  1903               	skipnz
  5838  1655  2E2B               	goto	l331
  5839  1656  3A07               	xorlw	7	; case 4
  5840  1657  1903               	skipnz
  5841  1658  2E32               	goto	l332
  5842  1659  3A01               	xorlw	1	; case 5
  5843  165A  1903               	skipnz
  5844  165B  2E39               	goto	l333
  5845  165C  3A03               	xorlw	3	; case 6
  5846  165D  1903               	skipnz
  5847  165E  2E40               	goto	l334
  5848  165F  2E60               	goto	l335
  5849  1660                     l335:	
  5850  1660  0008               	return
  5851  1661                     __end_of_set_leds_top:	
  5852                           
  5853                           	psect	text7
  5854  15D7                     __ptext7:	
  5855 ;; *************** function _set_leds_bottom *****************
  5856 ;; Defined at:
  5857 ;;		line 69 in file "user.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  x               2    2[COMMON] int 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;		None
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  1    wreg      void 
  5864 ;; Registers used:
  5865 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5875 ;;Total ram usage:        2 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    1
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_main
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           
  5886                           ;psect for function _set_leds_bottom
  5887  15D7                     _set_leds_bottom:	
  5888                           
  5889                           ;user.c: 70: switch (x) {
  5890                           
  5891                           ;incstack = 0
  5892                           ; Regs used in _set_leds_bottom: [wreg-fsr0h+status,2+status,0]
  5893  15D7  2E02               	goto	l2193
  5894  15D8                     l306:	
  5895                           ;user.c: 71: case 1:
  5896                           
  5897                           
  5898                           ;user.c: 72: LATDbits.LATD0 = 1;
  5899  15D8  0022               	movlb	2	; select bank2
  5900  15D9  140F               	bsf	15,0	;volatile
  5901                           
  5902                           ;user.c: 73: LATDbits.LATD1 = 0;
  5903  15DA  108F               	bcf	15,1	;volatile
  5904                           
  5905                           ;user.c: 74: LATDbits.LATD2 = 0;
  5906  15DB  110F               	bcf	15,2	;volatile
  5907                           
  5908                           ;user.c: 75: LATDbits.LATD3 = 0;
  5909  15DC  118F               	bcf	15,3	;volatile
  5910                           
  5911                           ;user.c: 76: LATDbits.LATD4 = 0;
  5912  15DD  120F               	bcf	15,4	;volatile
  5913                           
  5914                           ;user.c: 77: break;
  5915  15DE  0008               	return
  5916  15DF                     l308:	
  5917                           ;user.c: 78: case 2:
  5918                           
  5919                           
  5920                           ;user.c: 79: LATDbits.LATD0 = 0;
  5921  15DF  0022               	movlb	2	; select bank2
  5922  15E0  100F               	bcf	15,0	;volatile
  5923                           
  5924                           ;user.c: 80: LATDbits.LATD1 = 1;
  5925  15E1  148F               	bsf	15,1	;volatile
  5926                           
  5927                           ;user.c: 81: LATDbits.LATD2 = 0;
  5928  15E2  110F               	bcf	15,2	;volatile
  5929                           
  5930                           ;user.c: 82: LATDbits.LATD3 = 0;
  5931  15E3  118F               	bcf	15,3	;volatile
  5932                           
  5933                           ;user.c: 83: LATDbits.LATD4 = 0;
  5934  15E4  120F               	bcf	15,4	;volatile
  5935                           
  5936                           ;user.c: 84: break;
  5937  15E5  0008               	return
  5938  15E6                     l309:	
  5939                           ;user.c: 85: case 3:
  5940                           
  5941                           
  5942                           ;user.c: 86: LATDbits.LATD0 = 0;
  5943  15E6  0022               	movlb	2	; select bank2
  5944  15E7  100F               	bcf	15,0	;volatile
  5945                           
  5946                           ;user.c: 87: LATDbits.LATD1 = 0;
  5947  15E8  108F               	bcf	15,1	;volatile
  5948                           
  5949                           ;user.c: 88: LATDbits.LATD2 = 1;
  5950  15E9  150F               	bsf	15,2	;volatile
  5951                           
  5952                           ;user.c: 89: LATDbits.LATD3 = 0;
  5953  15EA  118F               	bcf	15,3	;volatile
  5954                           
  5955                           ;user.c: 90: LATDbits.LATD4 = 0;
  5956  15EB  120F               	bcf	15,4	;volatile
  5957                           
  5958                           ;user.c: 91: break;
  5959  15EC  0008               	return
  5960  15ED                     l310:	
  5961                           ;user.c: 92: case 4:
  5962                           
  5963                           
  5964                           ;user.c: 93: LATDbits.LATD0 = 0;
  5965  15ED  0022               	movlb	2	; select bank2
  5966  15EE  100F               	bcf	15,0	;volatile
  5967                           
  5968                           ;user.c: 94: LATDbits.LATD1 = 0;
  5969  15EF  108F               	bcf	15,1	;volatile
  5970                           
  5971                           ;user.c: 95: LATDbits.LATD2 = 0;
  5972  15F0  110F               	bcf	15,2	;volatile
  5973                           
  5974                           ;user.c: 96: LATDbits.LATD3 = 1;
  5975  15F1  158F               	bsf	15,3	;volatile
  5976                           
  5977                           ;user.c: 97: LATDbits.LATD4 = 0;
  5978  15F2  120F               	bcf	15,4	;volatile
  5979                           
  5980                           ;user.c: 98: break;
  5981  15F3  0008               	return
  5982  15F4                     l311:	
  5983                           ;user.c: 99: case 5:
  5984                           
  5985                           
  5986                           ;user.c: 100: LATDbits.LATD0 = 0;
  5987  15F4  0022               	movlb	2	; select bank2
  5988  15F5  100F               	bcf	15,0	;volatile
  5989                           
  5990                           ;user.c: 101: LATDbits.LATD1 = 0;
  5991  15F6  108F               	bcf	15,1	;volatile
  5992                           
  5993                           ;user.c: 102: LATDbits.LATD2 = 0;
  5994  15F7  110F               	bcf	15,2	;volatile
  5995                           
  5996                           ;user.c: 103: LATDbits.LATD3 = 0;
  5997  15F8  118F               	bcf	15,3	;volatile
  5998                           
  5999                           ;user.c: 104: LATDbits.LATD4 = 1;
  6000  15F9  160F               	bsf	15,4	;volatile
  6001                           
  6002                           ;user.c: 105: break;
  6003  15FA  0008               	return
  6004  15FB                     l312:	
  6005                           ;user.c: 106: case 6:
  6006                           
  6007                           
  6008                           ;user.c: 107: LATDbits.LATD0 = 0;
  6009  15FB  0022               	movlb	2	; select bank2
  6010  15FC  100F               	bcf	15,0	;volatile
  6011                           
  6012                           ;user.c: 108: LATDbits.LATD1 = 0;
  6013  15FD  108F               	bcf	15,1	;volatile
  6014                           
  6015                           ;user.c: 109: LATDbits.LATD2 = 0;
  6016  15FE  110F               	bcf	15,2	;volatile
  6017                           
  6018                           ;user.c: 110: LATDbits.LATD3 = 0;
  6019  15FF  118F               	bcf	15,3	;volatile
  6020                           
  6021                           ;user.c: 111: LATDbits.LATD4 = 0;
  6022  1600  120F               	bcf	15,4	;volatile
  6023                           
  6024                           ;user.c: 113: }
  6025                           
  6026                           ;user.c: 112: break;
  6027  1601  0008               	return
  6028  1602                     l2193:	
  6029                           
  6030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6031                           ; Switch size 1, requested type "space"
  6032                           ; Number of cases is 1, Range of values is 0 to 0
  6033                           ; switch strategies available:
  6034                           ; Name         Instructions Cycles
  6035                           ; simple_byte            4     3 (average)
  6036                           ; direct_byte            8     6 (fixed)
  6037                           ; jumptable            260     6 (fixed)
  6038                           ;	Chosen strategy is simple_byte
  6039  1602  0873               	movf	set_leds_bottom@x+1,w
  6040  1603  3A00               	xorlw	0	; case 0
  6041  1604  1903               	skipnz
  6042  1605  2E07               	goto	l3093
  6043  1606  2E1B               	goto	l313
  6044  1607                     l3093:	
  6045                           
  6046                           ; Switch size 1, requested type "space"
  6047                           ; Number of cases is 6, Range of values is 1 to 6
  6048                           ; switch strategies available:
  6049                           ; Name         Instructions Cycles
  6050                           ; simple_byte           19    10 (average)
  6051                           ; direct_byte           21     9 (fixed)
  6052                           ; jumptable            263     9 (fixed)
  6053                           ;	Chosen strategy is simple_byte
  6054  1607  0872               	movf	set_leds_bottom@x,w
  6055  1608  3A01               	xorlw	1	; case 1
  6056  1609  1903               	skipnz
  6057  160A  2DD8               	goto	l306
  6058  160B  3A03               	xorlw	3	; case 2
  6059  160C  1903               	skipnz
  6060  160D  2DDF               	goto	l308
  6061  160E  3A01               	xorlw	1	; case 3
  6062  160F  1903               	skipnz
  6063  1610  2DE6               	goto	l309
  6064  1611  3A07               	xorlw	7	; case 4
  6065  1612  1903               	skipnz
  6066  1613  2DED               	goto	l310
  6067  1614  3A01               	xorlw	1	; case 5
  6068  1615  1903               	skipnz
  6069  1616  2DF4               	goto	l311
  6070  1617  3A03               	xorlw	3	; case 6
  6071  1618  1903               	skipnz
  6072  1619  2DFB               	goto	l312
  6073  161A  2E1B               	goto	l313
  6074  161B                     l313:	
  6075  161B  0008               	return
  6076  161C                     __end_of_set_leds_bottom:	
  6077                           
  6078                           	psect	text8
  6079  1513                     __ptext8:	
  6080 ;; *************** function _modulation *****************
  6081 ;; Defined at:
  6082 ;;		line 255 in file "user.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  x               2   14[BANK0 ] int 
  6085 ;;  y               2   16[BANK0 ] int 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  2   14[BANK0 ] int 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0, pclath, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6097 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6099 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6100 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6101 ;;Total ram usage:       12 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    2
  6104 ;; This function calls:
  6105 ;;		___aldiv
  6106 ;;		___wmul
  6107 ;; This function is called by:
  6108 ;;		_main
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           
  6113                           ;psect for function _modulation
  6114  1513                     _modulation:	
  6115                           
  6116                           ;user.c: 257: x = (127500 + (y * x)) / 1000;
  6117                           
  6118                           ;incstack = 0
  6119                           ; Regs used in _modulation: [wreg+status,2+status,0+pclath+cstack]
  6120  1513  3000               	movlw	0
  6121  1514  0020               	movlb	0	; select bank0
  6122  1515  00A3               	movwf	___aldiv@divisor+3
  6123  1516  3000               	movlw	0
  6124  1517  00A2               	movwf	___aldiv@divisor+2
  6125  1518  3003               	movlw	3
  6126  1519  00A1               	movwf	___aldiv@divisor+1
  6127  151A  30E8               	movlw	232
  6128  151B  00A0               	movwf	___aldiv@divisor
  6129  151C  300C               	movlw	12
  6130  151D  00B2               	movwf	??_modulation
  6131  151E  30F2               	movlw	242
  6132  151F  00B3               	movwf	??_modulation+1
  6133  1520  3001               	movlw	1
  6134  1521  00B4               	movwf	??_modulation+2
  6135  1522  3000               	movlw	0
  6136  1523  00B5               	movwf	??_modulation+3
  6137  1524  0831               	movf	modulation@y+1,w
  6138  1525  00F3               	movwf	___wmul@multiplier+1
  6139  1526  0830               	movf	modulation@y,w
  6140  1527  00F2               	movwf	___wmul@multiplier
  6141  1528  082F               	movf	modulation@x+1,w
  6142  1529  00F5               	movwf	___wmul@multiplicand+1
  6143  152A  082E               	movf	modulation@x,w
  6144  152B  00F4               	movwf	___wmul@multiplicand
  6145  152C  3193  2346  3195   	fcall	___wmul
  6146  152F  0872               	movf	?___wmul,w
  6147  1530  0020               	movlb	0	; select bank0
  6148  1531  00B6               	movwf	??_modulation+4
  6149  1532  0873               	movf	?___wmul+1,w
  6150  1533  00B7               	movwf	??_modulation+5
  6151  1534  3000               	movlw	0
  6152  1535  1BB7               	btfsc	??_modulation+5,7
  6153  1536  30FF               	movlw	255
  6154  1537  00B8               	movwf	??_modulation+6
  6155  1538  00B9               	movwf	??_modulation+7
  6156  1539  0836               	movf	??_modulation+4,w
  6157  153A  07B2               	addwf	??_modulation,f
  6158  153B  0837               	movf	??_modulation+5,w
  6159  153C  3DB3               	addwfc	??_modulation+1,f
  6160  153D  0838               	movf	??_modulation+6,w
  6161  153E  3DB4               	addwfc	??_modulation+2,f
  6162  153F  0839               	movf	??_modulation+7,w
  6163  1540  3DB5               	addwfc	??_modulation+3,f
  6164  1541  0835               	movf	??_modulation+3,w
  6165  1542  00A7               	movwf	___aldiv@dividend+3
  6166  1543  0834               	movf	??_modulation+2,w
  6167  1544  00A6               	movwf	___aldiv@dividend+2
  6168  1545  0833               	movf	??_modulation+1,w
  6169  1546  00A5               	movwf	___aldiv@dividend+1
  6170  1547  0832               	movf	??_modulation,w
  6171  1548  00A4               	movwf	___aldiv@dividend
  6172  1549  3197  277E         	fcall	___aldiv
  6173  154B  0020               	movlb	0	; select bank0
  6174  154C  0821               	movf	?___aldiv+1,w
  6175  154D  00AF               	movwf	modulation@x+1
  6176  154E  0820               	movf	?___aldiv,w
  6177  154F  00AE               	movwf	modulation@x
  6178                           
  6179                           ;user.c: 258: return x;
  6180  1550  0008               	return
  6181  1551                     __end_of_modulation:	
  6182                           
  6183                           	psect	text9
  6184  1346                     __ptext9:	
  6185 ;; *************** function ___wmul *****************
  6186 ;; Defined at:
  6187 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  multiplier      2    2[COMMON] unsigned int 
  6190 ;;  multiplicand    2    4[COMMON] unsigned int 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  product         2    6[COMMON] unsigned int 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  2    2[COMMON] unsigned int 
  6195 ;; Registers used:
  6196 ;;		wreg, status,2, status,0
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6202 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6205 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6206 ;;Total ram usage:        6 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    1
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_modulation
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           
  6217                           ;psect for function ___wmul
  6218  1346                     ___wmul:	
  6219                           
  6220                           ;incstack = 0
  6221                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6222  1346  01F6               	clrf	___wmul@product
  6223  1347  01F7               	clrf	___wmul@product+1
  6224  1348                     l1877:	
  6225  1348  1C72               	btfss	___wmul@multiplier,0
  6226  1349  2B4E               	goto	l401
  6227  134A  0874               	movf	___wmul@multiplicand,w
  6228  134B  07F6               	addwf	___wmul@product,f
  6229  134C  0875               	movf	___wmul@multiplicand+1,w
  6230  134D  3DF7               	addwfc	___wmul@product+1,f
  6231  134E                     l401:	
  6232  134E  3001               	movlw	1
  6233  134F                     u1565:	
  6234  134F  35F4               	lslf	___wmul@multiplicand,f
  6235  1350  0DF5               	rlf	___wmul@multiplicand+1,f
  6236  1351  0B89               	decfsz	9,f
  6237  1352  2B4F               	goto	u1565
  6238  1353  3001               	movlw	1
  6239  1354                     u1575:	
  6240  1354  36F3               	lsrf	___wmul@multiplier+1,f
  6241  1355  0CF2               	rrf	___wmul@multiplier,f
  6242  1356  0B89               	decfsz	9,f
  6243  1357  2B54               	goto	u1575
  6244  1358  0872               	movf	___wmul@multiplier,w
  6245  1359  0473               	iorwf	___wmul@multiplier+1,w
  6246  135A  1D03               	btfss	3,2
  6247  135B  2B48               	goto	l1877
  6248  135C  0877               	movf	___wmul@product+1,w
  6249  135D  00F3               	movwf	?___wmul+1
  6250  135E  0876               	movf	___wmul@product,w
  6251  135F  00F2               	movwf	?___wmul
  6252  1360  0008               	return
  6253  1361                     __end_of___wmul:	
  6254                           
  6255                           	psect	text10
  6256  177E                     __ptext10:	
  6257 ;; *************** function ___aldiv *****************
  6258 ;; Defined at:
  6259 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  divisor         4    0[BANK0 ] long 
  6262 ;;  dividend        4    4[BANK0 ] long 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;  quotient        4   10[BANK0 ] long 
  6265 ;;  sign            1    9[BANK0 ] unsigned char 
  6266 ;;  counter         1    8[BANK0 ] unsigned char 
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  4    0[BANK0 ] long 
  6269 ;; Registers used:
  6270 ;;		wreg, status,2, status,0
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6276 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6277 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6279 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6280 ;;Total ram usage:       15 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; Hardware stack levels required when called:    1
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_main
  6287 ;;		_modulation
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           
  6292                           ;psect for function ___aldiv
  6293  177E                     ___aldiv:	
  6294                           
  6295                           ;incstack = 0
  6296                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6297  177E  0020               	movlb	0	; select bank0
  6298  177F  01A9               	clrf	___aldiv@sign
  6299  1780  1FA3               	btfss	___aldiv@divisor+3,7
  6300  1781  2F8F               	goto	l456
  6301  1782  09A0               	comf	___aldiv@divisor,f
  6302  1783  09A1               	comf	___aldiv@divisor+1,f
  6303  1784  09A2               	comf	___aldiv@divisor+2,f
  6304  1785  09A3               	comf	___aldiv@divisor+3,f
  6305  1786  0AA0               	incf	___aldiv@divisor,f
  6306  1787  1903               	skipnz
  6307  1788  0AA1               	incf	___aldiv@divisor+1,f
  6308  1789  1903               	skipnz
  6309  178A  0AA2               	incf	___aldiv@divisor+2,f
  6310  178B  1903               	skipnz
  6311  178C  0AA3               	incf	___aldiv@divisor+3,f
  6312  178D  01A9               	clrf	___aldiv@sign
  6313  178E  0AA9               	incf	___aldiv@sign,f
  6314  178F                     l456:	
  6315  178F  1FA7               	btfss	___aldiv@dividend+3,7
  6316  1790  2FA0               	goto	l1913
  6317  1791  09A4               	comf	___aldiv@dividend,f
  6318  1792  09A5               	comf	___aldiv@dividend+1,f
  6319  1793  09A6               	comf	___aldiv@dividend+2,f
  6320  1794  09A7               	comf	___aldiv@dividend+3,f
  6321  1795  0AA4               	incf	___aldiv@dividend,f
  6322  1796  1903               	skipnz
  6323  1797  0AA5               	incf	___aldiv@dividend+1,f
  6324  1798  1903               	skipnz
  6325  1799  0AA6               	incf	___aldiv@dividend+2,f
  6326  179A  1903               	skipnz
  6327  179B  0AA7               	incf	___aldiv@dividend+3,f
  6328  179C  3001               	movlw	1
  6329  179D  00F8               	movwf	??___aldiv
  6330  179E  0878               	movf	??___aldiv,w
  6331  179F  06A9               	xorwf	___aldiv@sign,f
  6332  17A0                     l1913:	
  6333  17A0  3000               	movlw	0
  6334  17A1  00AD               	movwf	___aldiv@quotient+3
  6335  17A2  3000               	movlw	0
  6336  17A3  00AC               	movwf	___aldiv@quotient+2
  6337  17A4  3000               	movlw	0
  6338  17A5  00AB               	movwf	___aldiv@quotient+1
  6339  17A6  3000               	movlw	0
  6340  17A7  00AA               	movwf	___aldiv@quotient
  6341  17A8  0823               	movf	___aldiv@divisor+3,w
  6342  17A9  0422               	iorwf	___aldiv@divisor+2,w
  6343  17AA  0421               	iorwf	___aldiv@divisor+1,w
  6344  17AB  0420               	iorwf	___aldiv@divisor,w
  6345  17AC  1903               	skipnz
  6346  17AD  2FE9               	goto	l1935
  6347  17AE  01A8               	clrf	___aldiv@counter
  6348  17AF  0AA8               	incf	___aldiv@counter,f
  6349  17B0                     l1921:	
  6350  17B0  1BA3               	btfsc	___aldiv@divisor+3,7
  6351  17B1  2FBE               	goto	l1923
  6352  17B2  3001               	movlw	1
  6353  17B3                     u1665:	
  6354  17B3  35A0               	lslf	___aldiv@divisor,f
  6355  17B4  0DA1               	rlf	___aldiv@divisor+1,f
  6356  17B5  0DA2               	rlf	___aldiv@divisor+2,f
  6357  17B6  0DA3               	rlf	___aldiv@divisor+3,f
  6358  17B7  0B89               	decfsz	9,f
  6359  17B8  2FB3               	goto	u1665
  6360  17B9  3001               	movlw	1
  6361  17BA  00F8               	movwf	??___aldiv
  6362  17BB  0878               	movf	??___aldiv,w
  6363  17BC  07A8               	addwf	___aldiv@counter,f
  6364  17BD  2FB0               	goto	l1921
  6365  17BE                     l1923:	
  6366  17BE  3001               	movlw	1
  6367  17BF                     u1685:	
  6368  17BF  35AA               	lslf	___aldiv@quotient,f
  6369  17C0  0DAB               	rlf	___aldiv@quotient+1,f
  6370  17C1  0DAC               	rlf	___aldiv@quotient+2,f
  6371  17C2  0DAD               	rlf	___aldiv@quotient+3,f
  6372  17C3  0B89               	decfsz	9,f
  6373  17C4  2FBF               	goto	u1685
  6374  17C5  0823               	movf	___aldiv@divisor+3,w
  6375  17C6  0227               	subwf	___aldiv@dividend+3,w
  6376  17C7  1D03               	skipz
  6377  17C8  2FD3               	goto	u1695
  6378  17C9  0822               	movf	___aldiv@divisor+2,w
  6379  17CA  0226               	subwf	___aldiv@dividend+2,w
  6380  17CB  1D03               	skipz
  6381  17CC  2FD3               	goto	u1695
  6382  17CD  0821               	movf	___aldiv@divisor+1,w
  6383  17CE  0225               	subwf	___aldiv@dividend+1,w
  6384  17CF  1D03               	skipz
  6385  17D0  2FD3               	goto	u1695
  6386  17D1  0820               	movf	___aldiv@divisor,w
  6387  17D2  0224               	subwf	___aldiv@dividend,w
  6388  17D3                     u1695:	
  6389  17D3  1C03               	skipc
  6390  17D4  2FDE               	goto	l1931
  6391  17D5  0820               	movf	___aldiv@divisor,w
  6392  17D6  02A4               	subwf	___aldiv@dividend,f
  6393  17D7  0821               	movf	___aldiv@divisor+1,w
  6394  17D8  3BA5               	subwfb	___aldiv@dividend+1,f
  6395  17D9  0822               	movf	___aldiv@divisor+2,w
  6396  17DA  3BA6               	subwfb	___aldiv@dividend+2,f
  6397  17DB  0823               	movf	___aldiv@divisor+3,w
  6398  17DC  3BA7               	subwfb	___aldiv@dividend+3,f
  6399  17DD  142A               	bsf	___aldiv@quotient,0
  6400  17DE                     l1931:	
  6401  17DE  3001               	movlw	1
  6402  17DF                     u1705:	
  6403  17DF  36A3               	lsrf	___aldiv@divisor+3,f
  6404  17E0  0CA2               	rrf	___aldiv@divisor+2,f
  6405  17E1  0CA1               	rrf	___aldiv@divisor+1,f
  6406  17E2  0CA0               	rrf	___aldiv@divisor,f
  6407  17E3  0B89               	decfsz	9,f
  6408  17E4  2FDF               	goto	u1705
  6409  17E5  3001               	movlw	1
  6410  17E6  02A8               	subwf	___aldiv@counter,f
  6411  17E7  1D03               	btfss	3,2
  6412  17E8  2FBE               	goto	l1923
  6413  17E9                     l1935:	
  6414  17E9  0829               	movf	___aldiv@sign,w
  6415  17EA  1903               	btfsc	3,2
  6416  17EB  2FF7               	goto	l1939
  6417  17EC  09AA               	comf	___aldiv@quotient,f
  6418  17ED  09AB               	comf	___aldiv@quotient+1,f
  6419  17EE  09AC               	comf	___aldiv@quotient+2,f
  6420  17EF  09AD               	comf	___aldiv@quotient+3,f
  6421  17F0  0AAA               	incf	___aldiv@quotient,f
  6422  17F1  1903               	skipnz
  6423  17F2  0AAB               	incf	___aldiv@quotient+1,f
  6424  17F3  1903               	skipnz
  6425  17F4  0AAC               	incf	___aldiv@quotient+2,f
  6426  17F5  1903               	skipnz
  6427  17F6  0AAD               	incf	___aldiv@quotient+3,f
  6428  17F7                     l1939:	
  6429  17F7  082D               	movf	___aldiv@quotient+3,w
  6430  17F8  00A3               	movwf	?___aldiv+3
  6431  17F9  082C               	movf	___aldiv@quotient+2,w
  6432  17FA  00A2               	movwf	?___aldiv+2
  6433  17FB  082B               	movf	___aldiv@quotient+1,w
  6434  17FC  00A1               	movwf	?___aldiv+1
  6435  17FD  082A               	movf	___aldiv@quotient,w
  6436  17FE  00A0               	movwf	?___aldiv
  6437  17FF  0008               	return
  6438  1800                     __end_of___aldiv:	
  6439                           
  6440                           	psect	text11
  6441  08D7                     __ptext11:	
  6442 ;; *************** function _map *****************
  6443 ;; Defined at:
  6444 ;;		line 251 in file "user.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  x               3   45[BANK0 ] float 
  6447 ;;  in_min          3   48[BANK0 ] float 
  6448 ;;  in_max          3   51[BANK0 ] float 
  6449 ;;  out_min         3   54[BANK0 ] float 
  6450 ;;  out_max         3   57[BANK0 ] float 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  3   45[BANK0 ] float 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0, pclath, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6462 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6463 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6465 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6466 ;;Total ram usage:       18 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    3
  6469 ;; This function calls:
  6470 ;;		___ftadd
  6471 ;;		___ftdiv
  6472 ;;		___ftmul
  6473 ;;		___ftneg
  6474 ;; This function is called by:
  6475 ;;		_main
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           
  6480                           ;psect for function _map
  6481  08D7                     _map:	
  6482                           
  6483                           ;user.c: 252: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  6484                           
  6485                           ;incstack = 0
  6486                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  6487  08D7  0020               	movlb	0	; select bank0
  6488  08D8  0853               	movf	map@in_max,w
  6489  08D9  00A0               	movwf	___ftadd@f1
  6490  08DA  0854               	movf	map@in_max+1,w
  6491  08DB  00A1               	movwf	___ftadd@f1+1
  6492  08DC  0855               	movf	map@in_max+2,w
  6493  08DD  00A2               	movwf	___ftadd@f1+2
  6494  08DE  0850               	movf	map@in_min,w
  6495  08DF  00F2               	movwf	___ftneg@f1
  6496  08E0  0851               	movf	map@in_min+1,w
  6497  08E1  00F3               	movwf	___ftneg@f1+1
  6498  08E2  0852               	movf	map@in_min+2,w
  6499  08E3  00F4               	movwf	___ftneg@f1+2
  6500  08E4  3192  22DB  3188   	fcall	___ftneg
  6501  08E7  0872               	movf	?___ftneg,w
  6502  08E8  0020               	movlb	0	; select bank0
  6503  08E9  00A3               	movwf	___ftadd@f2
  6504  08EA  0873               	movf	?___ftneg+1,w
  6505  08EB  00A4               	movwf	___ftadd@f2+1
  6506  08EC  0874               	movf	?___ftneg+2,w
  6507  08ED  00A5               	movwf	___ftadd@f2+2
  6508  08EE  318A  220B  3188   	fcall	___ftadd
  6509  08F1  0020               	movlb	0	; select bank0
  6510  08F2  0820               	movf	?___ftadd,w
  6511  08F3  00BD               	movwf	___ftdiv@f2
  6512  08F4  0821               	movf	?___ftadd+1,w
  6513  08F5  00BE               	movwf	___ftdiv@f2+1
  6514  08F6  0822               	movf	?___ftadd+2,w
  6515  08F7  00BF               	movwf	___ftdiv@f2+2
  6516  08F8  0859               	movf	map@out_max,w
  6517  08F9  00A0               	movwf	___ftadd@f1
  6518  08FA  085A               	movf	map@out_max+1,w
  6519  08FB  00A1               	movwf	___ftadd@f1+1
  6520  08FC  085B               	movf	map@out_max+2,w
  6521  08FD  00A2               	movwf	___ftadd@f1+2
  6522  08FE  0856               	movf	map@out_min,w
  6523  08FF  00F2               	movwf	___ftneg@f1
  6524  0900  0857               	movf	map@out_min+1,w
  6525  0901  00F3               	movwf	___ftneg@f1+1
  6526  0902  0858               	movf	map@out_min+2,w
  6527  0903  00F4               	movwf	___ftneg@f1+2
  6528  0904  3192  22DB  3188   	fcall	___ftneg
  6529  0907  0872               	movf	?___ftneg,w
  6530  0908  0020               	movlb	0	; select bank0
  6531  0909  00A3               	movwf	___ftadd@f2
  6532  090A  0873               	movf	?___ftneg+1,w
  6533  090B  00A4               	movwf	___ftadd@f2+1
  6534  090C  0874               	movf	?___ftneg+2,w
  6535  090D  00A5               	movwf	___ftadd@f2+2
  6536  090E  318A  220B  3188   	fcall	___ftadd
  6537  0911  0020               	movlb	0	; select bank0
  6538  0912  0820               	movf	?___ftadd,w
  6539  0913  00AD               	movwf	___ftmul@f1
  6540  0914  0821               	movf	?___ftadd+1,w
  6541  0915  00AE               	movwf	___ftmul@f1+1
  6542  0916  0822               	movf	?___ftadd+2,w
  6543  0917  00AF               	movwf	___ftmul@f1+2
  6544  0918  084D               	movf	map@x,w
  6545  0919  00A0               	movwf	___ftadd@f1
  6546  091A  084E               	movf	map@x+1,w
  6547  091B  00A1               	movwf	___ftadd@f1+1
  6548  091C  084F               	movf	map@x+2,w
  6549  091D  00A2               	movwf	___ftadd@f1+2
  6550  091E  0850               	movf	map@in_min,w
  6551  091F  00F2               	movwf	___ftneg@f1
  6552  0920  0851               	movf	map@in_min+1,w
  6553  0921  00F3               	movwf	___ftneg@f1+1
  6554  0922  0852               	movf	map@in_min+2,w
  6555  0923  00F4               	movwf	___ftneg@f1+2
  6556  0924  3192  22DB  3188   	fcall	___ftneg
  6557  0927  0872               	movf	?___ftneg,w
  6558  0928  0020               	movlb	0	; select bank0
  6559  0929  00A3               	movwf	___ftadd@f2
  6560  092A  0873               	movf	?___ftneg+1,w
  6561  092B  00A4               	movwf	___ftadd@f2+1
  6562  092C  0874               	movf	?___ftneg+2,w
  6563  092D  00A5               	movwf	___ftadd@f2+2
  6564  092E  318A  220B  3188   	fcall	___ftadd
  6565  0931  0020               	movlb	0	; select bank0
  6566  0932  0820               	movf	?___ftadd,w
  6567  0933  00B0               	movwf	___ftmul@f2
  6568  0934  0821               	movf	?___ftadd+1,w
  6569  0935  00B1               	movwf	___ftmul@f2+1
  6570  0936  0822               	movf	?___ftadd+2,w
  6571  0937  00B2               	movwf	___ftmul@f2+2
  6572  0938  3187  2741  3188   	fcall	___ftmul
  6573  093B  0020               	movlb	0	; select bank0
  6574  093C  082D               	movf	?___ftmul,w
  6575  093D  00C0               	movwf	___ftdiv@f1
  6576  093E  082E               	movf	?___ftmul+1,w
  6577  093F  00C1               	movwf	___ftdiv@f1+1
  6578  0940  082F               	movf	?___ftmul+2,w
  6579  0941  00C2               	movwf	___ftdiv@f1+2
  6580  0942  3189  2162  3188   	fcall	___ftdiv
  6581  0945  0020               	movlb	0	; select bank0
  6582  0946  083D               	movf	?___ftdiv,w
  6583  0947  00DC               	movwf	_map$1507
  6584  0948  083E               	movf	?___ftdiv+1,w
  6585  0949  00DD               	movwf	_map$1507+1
  6586  094A  083F               	movf	?___ftdiv+2,w
  6587  094B  00DE               	movwf	_map$1507+2
  6588                           
  6589                           ;user.c: 252: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  6590  094C  0856               	movf	map@out_min,w
  6591  094D  00A0               	movwf	___ftadd@f1
  6592  094E  0857               	movf	map@out_min+1,w
  6593  094F  00A1               	movwf	___ftadd@f1+1
  6594  0950  0858               	movf	map@out_min+2,w
  6595  0951  00A2               	movwf	___ftadd@f1+2
  6596  0952  085C               	movf	_map$1507,w
  6597  0953  00A3               	movwf	___ftadd@f2
  6598  0954  085D               	movf	_map$1507+1,w
  6599  0955  00A4               	movwf	___ftadd@f2+1
  6600  0956  085E               	movf	_map$1507+2,w
  6601  0957  00A5               	movwf	___ftadd@f2+2
  6602  0958  318A  220B         	fcall	___ftadd
  6603  095A  0020               	movlb	0	; select bank0
  6604  095B  0820               	movf	?___ftadd,w
  6605  095C  00CD               	movwf	?_map
  6606  095D  0821               	movf	?___ftadd+1,w
  6607  095E  00CE               	movwf	?_map+1
  6608  095F  0822               	movf	?___ftadd+2,w
  6609  0960  00CF               	movwf	?_map+2
  6610  0961  0008               	return
  6611  0962                     __end_of_map:	
  6612                           
  6613                           	psect	text12
  6614  12DB                     __ptext12:	
  6615 ;; *************** function ___ftneg *****************
  6616 ;; Defined at:
  6617 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  f1              3    2[COMMON] float 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  3    2[COMMON] float 
  6624 ;; Registers used:
  6625 ;;		wreg
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6631 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6634 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6635 ;;Total ram usage:        3 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:    1
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_map
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           
  6646                           ;psect for function ___ftneg
  6647  12DB                     ___ftneg:	
  6648                           
  6649                           ;incstack = 0
  6650                           ; Regs used in ___ftneg: [wreg]
  6651  12DB  0874               	movf	___ftneg@f1+2,w
  6652  12DC  0473               	iorwf	___ftneg@f1+1,w
  6653  12DD  0472               	iorwf	___ftneg@f1,w
  6654  12DE  1903               	skipnz
  6655  12DF  0008               	return
  6656  12E0  3080               	movlw	128
  6657  12E1  06F4               	xorwf	___ftneg@f1+2,f
  6658  12E2  0008               	return
  6659  12E3                     __end_of___ftneg:	
  6660                           
  6661                           	psect	text13
  6662  0741                     __ptext13:	
  6663 ;; *************** function ___ftmul *****************
  6664 ;; Defined at:
  6665 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  f1              3   13[BANK0 ] float 
  6668 ;;  f2              3   16[BANK0 ] float 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  f3_as_produc    3   24[BANK0 ] unsigned um
  6671 ;;  sign            1   28[BANK0 ] unsigned char 
  6672 ;;  cntr            1   27[BANK0 ] unsigned char 
  6673 ;;  exp             1   23[BANK0 ] unsigned char 
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  3   13[BANK0 ] float 
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0, pclath, cstack
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6683 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6684 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6685 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6686 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6687 ;;Total ram usage:       16 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    2
  6690 ;; This function calls:
  6691 ;;		___ftpack
  6692 ;; This function is called by:
  6693 ;;		_set_subdivision
  6694 ;;		_map
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function ___ftmul
  6700  0741                     ___ftmul:	
  6701                           
  6702                           ;incstack = 0
  6703                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6704  0741  0020               	movlb	0	; select bank0
  6705  0742  082D               	movf	___ftmul@f1,w
  6706  0743  00B3               	movwf	??___ftmul
  6707  0744  082E               	movf	___ftmul@f1+1,w
  6708  0745  00B4               	movwf	??___ftmul+1
  6709  0746  082F               	movf	___ftmul@f1+2,w
  6710  0747  00B5               	movwf	??___ftmul+2
  6711  0748  1003               	clrc
  6712  0749  0D34               	rlf	??___ftmul+1,w
  6713  074A  0D35               	rlf	??___ftmul+2,w
  6714  074B  00B6               	movwf	??___ftmul+3
  6715  074C  0836               	movf	??___ftmul+3,w
  6716  074D  00B7               	movwf	___ftmul@exp
  6717  074E  0837               	movf	___ftmul@exp,w
  6718  074F  1D03               	btfss	3,2
  6719  0750  2F58               	goto	l2073
  6720  0751  3000               	movlw	0
  6721  0752  00AD               	movwf	?___ftmul
  6722  0753  3000               	movlw	0
  6723  0754  00AE               	movwf	?___ftmul+1
  6724  0755  3000               	movlw	0
  6725  0756  00AF               	movwf	?___ftmul+2
  6726  0757  0008               	return
  6727  0758                     l2073:	
  6728  0758  0830               	movf	___ftmul@f2,w
  6729  0759  00B3               	movwf	??___ftmul
  6730  075A  0831               	movf	___ftmul@f2+1,w
  6731  075B  00B4               	movwf	??___ftmul+1
  6732  075C  0832               	movf	___ftmul@f2+2,w
  6733  075D  00B5               	movwf	??___ftmul+2
  6734  075E  1003               	clrc
  6735  075F  0D34               	rlf	??___ftmul+1,w
  6736  0760  0D35               	rlf	??___ftmul+2,w
  6737  0761  00B6               	movwf	??___ftmul+3
  6738  0762  0836               	movf	??___ftmul+3,w
  6739  0763  00BC               	movwf	___ftmul@sign
  6740  0764  083C               	movf	___ftmul@sign,w
  6741  0765  1D03               	btfss	3,2
  6742  0766  2F6E               	goto	l2079
  6743  0767  3000               	movlw	0
  6744  0768  00AD               	movwf	?___ftmul
  6745  0769  3000               	movlw	0
  6746  076A  00AE               	movwf	?___ftmul+1
  6747  076B  3000               	movlw	0
  6748  076C  00AF               	movwf	?___ftmul+2
  6749  076D  0008               	return
  6750  076E                     l2079:	
  6751  076E  083C               	movf	___ftmul@sign,w
  6752  076F  3E7B               	addlw	123
  6753  0770  00B3               	movwf	??___ftmul
  6754  0771  0833               	movf	??___ftmul,w
  6755  0772  07B7               	addwf	___ftmul@exp,f
  6756  0773  082D               	movf	___ftmul@f1,w
  6757  0774  00B3               	movwf	??___ftmul
  6758  0775  082E               	movf	___ftmul@f1+1,w
  6759  0776  00B4               	movwf	??___ftmul+1
  6760  0777  082F               	movf	___ftmul@f1+2,w
  6761  0778  00B5               	movwf	??___ftmul+2
  6762  0779  3010               	movlw	16
  6763  077A                     u2075:	
  6764  077A  36B5               	lsrf	??___ftmul+2,f
  6765  077B  0CB4               	rrf	??___ftmul+1,f
  6766  077C  0CB3               	rrf	??___ftmul,f
  6767  077D  0B89               	decfsz	9,f
  6768  077E  2F7A               	goto	u2075
  6769  077F  0833               	movf	??___ftmul,w
  6770  0780  00B6               	movwf	??___ftmul+3
  6771  0781  0836               	movf	??___ftmul+3,w
  6772  0782  00BC               	movwf	___ftmul@sign
  6773  0783  0830               	movf	___ftmul@f2,w
  6774  0784  00B3               	movwf	??___ftmul
  6775  0785  0831               	movf	___ftmul@f2+1,w
  6776  0786  00B4               	movwf	??___ftmul+1
  6777  0787  0832               	movf	___ftmul@f2+2,w
  6778  0788  00B5               	movwf	??___ftmul+2
  6779  0789  3010               	movlw	16
  6780  078A                     u2085:	
  6781  078A  36B5               	lsrf	??___ftmul+2,f
  6782  078B  0CB4               	rrf	??___ftmul+1,f
  6783  078C  0CB3               	rrf	??___ftmul,f
  6784  078D  0B89               	decfsz	9,f
  6785  078E  2F8A               	goto	u2085
  6786  078F  0833               	movf	??___ftmul,w
  6787  0790  00B6               	movwf	??___ftmul+3
  6788  0791  0836               	movf	??___ftmul+3,w
  6789  0792  06BC               	xorwf	___ftmul@sign,f
  6790  0793  3080               	movlw	128
  6791  0794  00B3               	movwf	??___ftmul
  6792  0795  0833               	movf	??___ftmul,w
  6793  0796  05BC               	andwf	___ftmul@sign,f
  6794  0797  17AE               	bsf	___ftmul@f1+1,7
  6795  0798  17B1               	bsf	___ftmul@f2+1,7
  6796  0799  30FF               	movlw	255
  6797  079A  05B0               	andwf	___ftmul@f2,f
  6798  079B  30FF               	movlw	255
  6799  079C  05B1               	andwf	___ftmul@f2+1,f
  6800  079D  3000               	movlw	0
  6801  079E  05B2               	andwf	___ftmul@f2+2,f
  6802  079F  3000               	movlw	0
  6803  07A0  00B8               	movwf	___ftmul@f3_as_product
  6804  07A1  3000               	movlw	0
  6805  07A2  00B9               	movwf	___ftmul@f3_as_product+1
  6806  07A3  3000               	movlw	0
  6807  07A4  00BA               	movwf	___ftmul@f3_as_product+2
  6808  07A5  3007               	movlw	7
  6809  07A6  00B3               	movwf	??___ftmul
  6810  07A7  0833               	movf	??___ftmul,w
  6811  07A8  00BB               	movwf	___ftmul@cntr
  6812  07A9                     l2091:	
  6813  07A9  1C2D               	btfss	___ftmul@f1,0
  6814  07AA  2FB1               	goto	l2095
  6815  07AB  0830               	movf	___ftmul@f2,w
  6816  07AC  07B8               	addwf	___ftmul@f3_as_product,f
  6817  07AD  0831               	movf	___ftmul@f2+1,w
  6818  07AE  3DB9               	addwfc	___ftmul@f3_as_product+1,f
  6819  07AF  0832               	movf	___ftmul@f2+2,w
  6820  07B0  3DBA               	addwfc	___ftmul@f3_as_product+2,f
  6821  07B1                     l2095:	
  6822  07B1  3001               	movlw	1
  6823  07B2                     u2105:	
  6824  07B2  36AF               	lsrf	___ftmul@f1+2,f
  6825  07B3  0CAE               	rrf	___ftmul@f1+1,f
  6826  07B4  0CAD               	rrf	___ftmul@f1,f
  6827  07B5  0B89               	decfsz	9,f
  6828  07B6  2FB2               	goto	u2105
  6829  07B7  3001               	movlw	1
  6830  07B8                     u2115:	
  6831  07B8  35B0               	lslf	___ftmul@f2,f
  6832  07B9  0DB1               	rlf	___ftmul@f2+1,f
  6833  07BA  0DB2               	rlf	___ftmul@f2+2,f
  6834  07BB  0B89               	decfsz	9,f
  6835  07BC  2FB8               	goto	u2115
  6836  07BD  3001               	movlw	1
  6837  07BE  02BB               	subwf	___ftmul@cntr,f
  6838  07BF  1D03               	btfss	3,2
  6839  07C0  2FA9               	goto	l2091
  6840  07C1  3009               	movlw	9
  6841  07C2  00B3               	movwf	??___ftmul
  6842  07C3  0833               	movf	??___ftmul,w
  6843  07C4  00BB               	movwf	___ftmul@cntr
  6844  07C5                     l2103:	
  6845  07C5  1C2D               	btfss	___ftmul@f1,0
  6846  07C6  2FCD               	goto	l2107
  6847  07C7  0830               	movf	___ftmul@f2,w
  6848  07C8  07B8               	addwf	___ftmul@f3_as_product,f
  6849  07C9  0831               	movf	___ftmul@f2+1,w
  6850  07CA  3DB9               	addwfc	___ftmul@f3_as_product+1,f
  6851  07CB  0832               	movf	___ftmul@f2+2,w
  6852  07CC  3DBA               	addwfc	___ftmul@f3_as_product+2,f
  6853  07CD                     l2107:	
  6854  07CD  3001               	movlw	1
  6855  07CE                     u2145:	
  6856  07CE  36AF               	lsrf	___ftmul@f1+2,f
  6857  07CF  0CAE               	rrf	___ftmul@f1+1,f
  6858  07D0  0CAD               	rrf	___ftmul@f1,f
  6859  07D1  0B89               	decfsz	9,f
  6860  07D2  2FCE               	goto	u2145
  6861  07D3  3001               	movlw	1
  6862  07D4                     u2155:	
  6863  07D4  36BA               	lsrf	___ftmul@f3_as_product+2,f
  6864  07D5  0CB9               	rrf	___ftmul@f3_as_product+1,f
  6865  07D6  0CB8               	rrf	___ftmul@f3_as_product,f
  6866  07D7  0B89               	decfsz	9,f
  6867  07D8  2FD4               	goto	u2155
  6868  07D9  3001               	movlw	1
  6869  07DA  02BB               	subwf	___ftmul@cntr,f
  6870  07DB  1D03               	btfss	3,2
  6871  07DC  2FC5               	goto	l2103
  6872  07DD  0838               	movf	___ftmul@f3_as_product,w
  6873  07DE  00F2               	movwf	___ftpack@arg
  6874  07DF  0839               	movf	___ftmul@f3_as_product+1,w
  6875  07E0  00F3               	movwf	___ftpack@arg+1
  6876  07E1  083A               	movf	___ftmul@f3_as_product+2,w
  6877  07E2  00F4               	movwf	___ftpack@arg+2
  6878  07E3  0837               	movf	___ftmul@exp,w
  6879  07E4  00B3               	movwf	??___ftmul
  6880  07E5  0833               	movf	??___ftmul,w
  6881  07E6  00F5               	movwf	___ftpack@exp
  6882  07E7  083C               	movf	___ftmul@sign,w
  6883  07E8  00B4               	movwf	??___ftmul+1
  6884  07E9  0834               	movf	??___ftmul+1,w
  6885  07EA  00F6               	movwf	___ftpack@sign
  6886  07EB  3196  26B1         	fcall	___ftpack
  6887  07ED  0872               	movf	?___ftpack,w
  6888  07EE  0020               	movlb	0	; select bank0
  6889  07EF  00AD               	movwf	?___ftmul
  6890  07F0  0873               	movf	?___ftpack+1,w
  6891  07F1  00AE               	movwf	?___ftmul+1
  6892  07F2  0874               	movf	?___ftpack+2,w
  6893  07F3  00AF               	movwf	?___ftmul+2
  6894  07F4  0008               	return
  6895  07F5                     __end_of___ftmul:	
  6896                           
  6897                           	psect	text14
  6898  0962                     __ptext14:	
  6899 ;; *************** function ___ftdiv *****************
  6900 ;; Defined at:
  6901 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  f2              3   29[BANK0 ] float 
  6904 ;;  f1              3   32[BANK0 ] float 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  f3              3   40[BANK0 ] float 
  6907 ;;  sign            1   44[BANK0 ] unsigned char 
  6908 ;;  exp             1   43[BANK0 ] unsigned char 
  6909 ;;  cntr            1   39[BANK0 ] unsigned char 
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  3   29[BANK0 ] float 
  6912 ;; Registers used:
  6913 ;;		wreg, status,2, status,0, pclath, cstack
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6919 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6920 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6921 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6922 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6923 ;;Total ram usage:       16 bytes
  6924 ;; Hardware stack levels used:    1
  6925 ;; Hardware stack levels required when called:    2
  6926 ;; This function calls:
  6927 ;;		___ftpack
  6928 ;; This function is called by:
  6929 ;;		_main
  6930 ;;		_map
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           
  6935                           ;psect for function ___ftdiv
  6936  0962                     ___ftdiv:	
  6937                           
  6938                           ;incstack = 0
  6939                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6940  0962  0020               	movlb	0	; select bank0
  6941  0963  0840               	movf	___ftdiv@f1,w
  6942  0964  00C3               	movwf	??___ftdiv
  6943  0965  0841               	movf	___ftdiv@f1+1,w
  6944  0966  00C4               	movwf	??___ftdiv+1
  6945  0967  0842               	movf	___ftdiv@f1+2,w
  6946  0968  00C5               	movwf	??___ftdiv+2
  6947  0969  1003               	clrc
  6948  096A  0D44               	rlf	??___ftdiv+1,w
  6949  096B  0D45               	rlf	??___ftdiv+2,w
  6950  096C  00C6               	movwf	??___ftdiv+3
  6951  096D  0846               	movf	??___ftdiv+3,w
  6952  096E  00CB               	movwf	___ftdiv@exp
  6953  096F  084B               	movf	___ftdiv@exp,w
  6954  0970  1D03               	btfss	3,2
  6955  0971  2979               	goto	l2031
  6956  0972  3000               	movlw	0
  6957  0973  00BD               	movwf	?___ftdiv
  6958  0974  3000               	movlw	0
  6959  0975  00BE               	movwf	?___ftdiv+1
  6960  0976  3000               	movlw	0
  6961  0977  00BF               	movwf	?___ftdiv+2
  6962  0978  0008               	return
  6963  0979                     l2031:	
  6964  0979  083D               	movf	___ftdiv@f2,w
  6965  097A  00C3               	movwf	??___ftdiv
  6966  097B  083E               	movf	___ftdiv@f2+1,w
  6967  097C  00C4               	movwf	??___ftdiv+1
  6968  097D  083F               	movf	___ftdiv@f2+2,w
  6969  097E  00C5               	movwf	??___ftdiv+2
  6970  097F  1003               	clrc
  6971  0980  0D44               	rlf	??___ftdiv+1,w
  6972  0981  0D45               	rlf	??___ftdiv+2,w
  6973  0982  00C6               	movwf	??___ftdiv+3
  6974  0983  0846               	movf	??___ftdiv+3,w
  6975  0984  00CC               	movwf	___ftdiv@sign
  6976  0985  084C               	movf	___ftdiv@sign,w
  6977  0986  1D03               	btfss	3,2
  6978  0987  298F               	goto	l2037
  6979  0988  3000               	movlw	0
  6980  0989  00BD               	movwf	?___ftdiv
  6981  098A  3000               	movlw	0
  6982  098B  00BE               	movwf	?___ftdiv+1
  6983  098C  3000               	movlw	0
  6984  098D  00BF               	movwf	?___ftdiv+2
  6985  098E  0008               	return
  6986  098F                     l2037:	
  6987  098F  3000               	movlw	0
  6988  0990  00C8               	movwf	___ftdiv@f3
  6989  0991  3000               	movlw	0
  6990  0992  00C9               	movwf	___ftdiv@f3+1
  6991  0993  3000               	movlw	0
  6992  0994  00CA               	movwf	___ftdiv@f3+2
  6993  0995  3089               	movlw	137
  6994  0996  074C               	addwf	___ftdiv@sign,w
  6995  0997  00C3               	movwf	??___ftdiv
  6996  0998  0843               	movf	??___ftdiv,w
  6997  0999  02CB               	subwf	___ftdiv@exp,f
  6998  099A  0840               	movf	___ftdiv@f1,w
  6999  099B  00C3               	movwf	??___ftdiv
  7000  099C  0841               	movf	___ftdiv@f1+1,w
  7001  099D  00C4               	movwf	??___ftdiv+1
  7002  099E  0842               	movf	___ftdiv@f1+2,w
  7003  099F  00C5               	movwf	??___ftdiv+2
  7004  09A0  3010               	movlw	16
  7005  09A1                     u1995:	
  7006  09A1  36C5               	lsrf	??___ftdiv+2,f
  7007  09A2  0CC4               	rrf	??___ftdiv+1,f
  7008  09A3  0CC3               	rrf	??___ftdiv,f
  7009  09A4  0B89               	decfsz	9,f
  7010  09A5  29A1               	goto	u1995
  7011  09A6  0843               	movf	??___ftdiv,w
  7012  09A7  00C6               	movwf	??___ftdiv+3
  7013  09A8  0846               	movf	??___ftdiv+3,w
  7014  09A9  00CC               	movwf	___ftdiv@sign
  7015  09AA  083D               	movf	___ftdiv@f2,w
  7016  09AB  00C3               	movwf	??___ftdiv
  7017  09AC  083E               	movf	___ftdiv@f2+1,w
  7018  09AD  00C4               	movwf	??___ftdiv+1
  7019  09AE  083F               	movf	___ftdiv@f2+2,w
  7020  09AF  00C5               	movwf	??___ftdiv+2
  7021  09B0  3010               	movlw	16
  7022  09B1                     u2005:	
  7023  09B1  36C5               	lsrf	??___ftdiv+2,f
  7024  09B2  0CC4               	rrf	??___ftdiv+1,f
  7025  09B3  0CC3               	rrf	??___ftdiv,f
  7026  09B4  0B89               	decfsz	9,f
  7027  09B5  29B1               	goto	u2005
  7028  09B6  0843               	movf	??___ftdiv,w
  7029  09B7  00C6               	movwf	??___ftdiv+3
  7030  09B8  0846               	movf	??___ftdiv+3,w
  7031  09B9  06CC               	xorwf	___ftdiv@sign,f
  7032  09BA  3080               	movlw	128
  7033  09BB  00C3               	movwf	??___ftdiv
  7034  09BC  0843               	movf	??___ftdiv,w
  7035  09BD  05CC               	andwf	___ftdiv@sign,f
  7036  09BE  17C1               	bsf	___ftdiv@f1+1,7
  7037  09BF  30FF               	movlw	255
  7038  09C0  05C0               	andwf	___ftdiv@f1,f
  7039  09C1  30FF               	movlw	255
  7040  09C2  05C1               	andwf	___ftdiv@f1+1,f
  7041  09C3  3000               	movlw	0
  7042  09C4  05C2               	andwf	___ftdiv@f1+2,f
  7043  09C5  17BE               	bsf	___ftdiv@f2+1,7
  7044  09C6  30FF               	movlw	255
  7045  09C7  05BD               	andwf	___ftdiv@f2,f
  7046  09C8  30FF               	movlw	255
  7047  09C9  05BE               	andwf	___ftdiv@f2+1,f
  7048  09CA  3000               	movlw	0
  7049  09CB  05BF               	andwf	___ftdiv@f2+2,f
  7050  09CC  3018               	movlw	24
  7051  09CD  00C3               	movwf	??___ftdiv
  7052  09CE  0843               	movf	??___ftdiv,w
  7053  09CF  00C7               	movwf	___ftdiv@cntr
  7054  09D0                     l2051:	
  7055  09D0  3001               	movlw	1
  7056  09D1                     u2015:	
  7057  09D1  35C8               	lslf	___ftdiv@f3,f
  7058  09D2  0DC9               	rlf	___ftdiv@f3+1,f
  7059  09D3  0DCA               	rlf	___ftdiv@f3+2,f
  7060  09D4  0B89               	decfsz	9,f
  7061  09D5  29D1               	goto	u2015
  7062  09D6  083F               	movf	___ftdiv@f2+2,w
  7063  09D7  0242               	subwf	___ftdiv@f1+2,w
  7064  09D8  1D03               	skipz
  7065  09D9  29E0               	goto	u2025
  7066  09DA  083E               	movf	___ftdiv@f2+1,w
  7067  09DB  0241               	subwf	___ftdiv@f1+1,w
  7068  09DC  1D03               	skipz
  7069  09DD  29E0               	goto	u2025
  7070  09DE  083D               	movf	___ftdiv@f2,w
  7071  09DF  0240               	subwf	___ftdiv@f1,w
  7072  09E0                     u2025:	
  7073  09E0  1C03               	skipc
  7074  09E1  29E9               	goto	l2059
  7075  09E2  083D               	movf	___ftdiv@f2,w
  7076  09E3  02C0               	subwf	___ftdiv@f1,f
  7077  09E4  083E               	movf	___ftdiv@f2+1,w
  7078  09E5  3BC1               	subwfb	___ftdiv@f1+1,f
  7079  09E6  083F               	movf	___ftdiv@f2+2,w
  7080  09E7  3BC2               	subwfb	___ftdiv@f1+2,f
  7081  09E8  1448               	bsf	___ftdiv@f3,0
  7082  09E9                     l2059:	
  7083  09E9  3001               	movlw	1
  7084  09EA                     u2035:	
  7085  09EA  35C0               	lslf	___ftdiv@f1,f
  7086  09EB  0DC1               	rlf	___ftdiv@f1+1,f
  7087  09EC  0DC2               	rlf	___ftdiv@f1+2,f
  7088  09ED  0B89               	decfsz	9,f
  7089  09EE  29EA               	goto	u2035
  7090  09EF  3001               	movlw	1
  7091  09F0  02C7               	subwf	___ftdiv@cntr,f
  7092  09F1  1D03               	btfss	3,2
  7093  09F2  29D0               	goto	l2051
  7094  09F3  0848               	movf	___ftdiv@f3,w
  7095  09F4  00F2               	movwf	___ftpack@arg
  7096  09F5  0849               	movf	___ftdiv@f3+1,w
  7097  09F6  00F3               	movwf	___ftpack@arg+1
  7098  09F7  084A               	movf	___ftdiv@f3+2,w
  7099  09F8  00F4               	movwf	___ftpack@arg+2
  7100  09F9  084B               	movf	___ftdiv@exp,w
  7101  09FA  00C3               	movwf	??___ftdiv
  7102  09FB  0843               	movf	??___ftdiv,w
  7103  09FC  00F5               	movwf	___ftpack@exp
  7104  09FD  084C               	movf	___ftdiv@sign,w
  7105  09FE  00C4               	movwf	??___ftdiv+1
  7106  09FF  0844               	movf	??___ftdiv+1,w
  7107  0A00  00F6               	movwf	___ftpack@sign
  7108  0A01  3196  26B1         	fcall	___ftpack
  7109  0A03  0872               	movf	?___ftpack,w
  7110  0A04  0020               	movlb	0	; select bank0
  7111  0A05  00BD               	movwf	?___ftdiv
  7112  0A06  0873               	movf	?___ftpack+1,w
  7113  0A07  00BE               	movwf	?___ftdiv+1
  7114  0A08  0874               	movf	?___ftpack+2,w
  7115  0A09  00BF               	movwf	?___ftdiv+2
  7116  0A0A  0008               	return
  7117  0A0B                     __end_of___ftdiv:	
  7118                           
  7119                           	psect	text15
  7120  0A0B                     __ptext15:	
  7121 ;; *************** function ___ftadd *****************
  7122 ;; Defined at:
  7123 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  f1              3    0[BANK0 ] float 
  7126 ;;  f2              3    3[BANK0 ] float 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  exp1            1   12[BANK0 ] unsigned char 
  7129 ;;  exp2            1   11[BANK0 ] unsigned char 
  7130 ;;  sign            1   10[BANK0 ] unsigned char 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  3    0[BANK0 ] float 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0, pclath, cstack
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7140 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7141 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7142 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7143 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7144 ;;Total ram usage:       13 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    2
  7147 ;; This function calls:
  7148 ;;		___ftpack
  7149 ;; This function is called by:
  7150 ;;		_map
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           
  7155                           ;psect for function ___ftadd
  7156  0A0B                     ___ftadd:	
  7157                           
  7158                           ;incstack = 0
  7159                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7160  0A0B  0020               	movlb	0	; select bank0
  7161  0A0C  0820               	movf	___ftadd@f1,w
  7162  0A0D  00A6               	movwf	??___ftadd
  7163  0A0E  0821               	movf	___ftadd@f1+1,w
  7164  0A0F  00A7               	movwf	??___ftadd+1
  7165  0A10  0822               	movf	___ftadd@f1+2,w
  7166  0A11  00A8               	movwf	??___ftadd+2
  7167  0A12  1003               	clrc
  7168  0A13  0D27               	rlf	??___ftadd+1,w
  7169  0A14  0D28               	rlf	??___ftadd+2,w
  7170  0A15  00A9               	movwf	??___ftadd+3
  7171  0A16  0829               	movf	??___ftadd+3,w
  7172  0A17  00AC               	movwf	___ftadd@exp1
  7173  0A18  0823               	movf	___ftadd@f2,w
  7174  0A19  00A6               	movwf	??___ftadd
  7175  0A1A  0824               	movf	___ftadd@f2+1,w
  7176  0A1B  00A7               	movwf	??___ftadd+1
  7177  0A1C  0825               	movf	___ftadd@f2+2,w
  7178  0A1D  00A8               	movwf	??___ftadd+2
  7179  0A1E  1003               	clrc
  7180  0A1F  0D27               	rlf	??___ftadd+1,w
  7181  0A20  0D28               	rlf	??___ftadd+2,w
  7182  0A21  00A9               	movwf	??___ftadd+3
  7183  0A22  0829               	movf	??___ftadd+3,w
  7184  0A23  00AB               	movwf	___ftadd@exp2
  7185  0A24  082C               	movf	___ftadd@exp1,w
  7186  0A25  1903               	btfsc	3,2
  7187  0A26  2A33               	goto	l1961
  7188  0A27  082B               	movf	___ftadd@exp2,w
  7189  0A28  022C               	subwf	___ftadd@exp1,w
  7190  0A29  1803               	skipnc
  7191  0A2A  2A3A               	goto	l1965
  7192  0A2B  032C               	decf	___ftadd@exp1,w
  7193  0A2C  3AFF               	xorlw	255
  7194  0A2D  072B               	addwf	___ftadd@exp2,w
  7195  0A2E  00A6               	movwf	??___ftadd
  7196  0A2F  3019               	movlw	25
  7197  0A30  0226               	subwf	??___ftadd,w
  7198  0A31  1C03               	skipc
  7199  0A32  2A3A               	goto	l1965
  7200  0A33                     l1961:	
  7201  0A33  0823               	movf	___ftadd@f2,w
  7202  0A34  00A0               	movwf	?___ftadd
  7203  0A35  0824               	movf	___ftadd@f2+1,w
  7204  0A36  00A1               	movwf	?___ftadd+1
  7205  0A37  0825               	movf	___ftadd@f2+2,w
  7206  0A38  00A2               	movwf	?___ftadd+2
  7207  0A39  0008               	return
  7208  0A3A                     l1965:	
  7209  0A3A  082B               	movf	___ftadd@exp2,w
  7210  0A3B  1903               	btfsc	3,2
  7211  0A3C  0008               	return
  7212  0A3D  082C               	movf	___ftadd@exp1,w
  7213  0A3E  022B               	subwf	___ftadd@exp2,w
  7214  0A3F  1803               	skipnc
  7215  0A40  2A49               	goto	l1971
  7216  0A41  032B               	decf	___ftadd@exp2,w
  7217  0A42  3AFF               	xorlw	255
  7218  0A43  072C               	addwf	___ftadd@exp1,w
  7219  0A44  00A6               	movwf	??___ftadd
  7220  0A45  3019               	movlw	25
  7221  0A46  0226               	subwf	??___ftadd,w
  7222  0A47  1803               	btfsc	3,0
  7223  0A48  0008               	return
  7224  0A49                     l1971:	
  7225  0A49  3006               	movlw	6
  7226  0A4A  00A6               	movwf	??___ftadd
  7227  0A4B  0826               	movf	??___ftadd,w
  7228  0A4C  00AA               	movwf	___ftadd@sign
  7229  0A4D  1BA2               	btfsc	___ftadd@f1+2,7
  7230  0A4E  17AA               	bsf	___ftadd@sign,7
  7231  0A4F  1BA5               	btfsc	___ftadd@f2+2,7
  7232  0A50  172A               	bsf	___ftadd@sign,6
  7233  0A51  17A1               	bsf	___ftadd@f1+1,7
  7234  0A52  30FF               	movlw	255
  7235  0A53  05A0               	andwf	___ftadd@f1,f
  7236  0A54  30FF               	movlw	255
  7237  0A55  05A1               	andwf	___ftadd@f1+1,f
  7238  0A56  3000               	movlw	0
  7239  0A57  05A2               	andwf	___ftadd@f1+2,f
  7240  0A58  17A4               	bsf	___ftadd@f2+1,7
  7241  0A59  30FF               	movlw	255
  7242  0A5A  05A3               	andwf	___ftadd@f2,f
  7243  0A5B  30FF               	movlw	255
  7244  0A5C  05A4               	andwf	___ftadd@f2+1,f
  7245  0A5D  3000               	movlw	0
  7246  0A5E  05A5               	andwf	___ftadd@f2+2,f
  7247  0A5F  082B               	movf	___ftadd@exp2,w
  7248  0A60  022C               	subwf	___ftadd@exp1,w
  7249  0A61  1803               	skipnc
  7250  0A62  2A85               	goto	l1993
  7251  0A63                     l1983:	
  7252  0A63  3001               	movlw	1
  7253  0A64                     u1835:	
  7254  0A64  35A3               	lslf	___ftadd@f2,f
  7255  0A65  0DA4               	rlf	___ftadd@f2+1,f
  7256  0A66  0DA5               	rlf	___ftadd@f2+2,f
  7257  0A67  0B89               	decfsz	9,f
  7258  0A68  2A64               	goto	u1835
  7259  0A69  3001               	movlw	1
  7260  0A6A  02AB               	subwf	___ftadd@exp2,f
  7261  0A6B  082B               	movf	___ftadd@exp2,w
  7262  0A6C  062C               	xorwf	___ftadd@exp1,w
  7263  0A6D  1903               	skipnz
  7264  0A6E  2A80               	goto	l1991
  7265  0A6F  3001               	movlw	1
  7266  0A70  02AA               	subwf	___ftadd@sign,f
  7267  0A71  082A               	movf	___ftadd@sign,w
  7268  0A72  3907               	andlw	7
  7269  0A73  1903               	btfsc	3,2
  7270  0A74  2A80               	goto	l1991
  7271  0A75  2A63               	goto	l1983
  7272  0A76                     l1989:	
  7273  0A76  3001               	movlw	1
  7274  0A77                     u1865:	
  7275  0A77  36A2               	lsrf	___ftadd@f1+2,f
  7276  0A78  0CA1               	rrf	___ftadd@f1+1,f
  7277  0A79  0CA0               	rrf	___ftadd@f1,f
  7278  0A7A  0B89               	decfsz	9,f
  7279  0A7B  2A77               	goto	u1865
  7280  0A7C  3001               	movlw	1
  7281  0A7D  00A6               	movwf	??___ftadd
  7282  0A7E  0826               	movf	??___ftadd,w
  7283  0A7F  07AC               	addwf	___ftadd@exp1,f
  7284  0A80                     l1991:	
  7285  0A80  082C               	movf	___ftadd@exp1,w
  7286  0A81  062B               	xorwf	___ftadd@exp2,w
  7287  0A82  1903               	btfsc	3,2
  7288  0A83  2AAA               	goto	l593
  7289  0A84  2A76               	goto	l1989
  7290  0A85                     l1993:	
  7291  0A85  082C               	movf	___ftadd@exp1,w
  7292  0A86  022B               	subwf	___ftadd@exp2,w
  7293  0A87  1803               	skipnc
  7294  0A88  2AAA               	goto	l593
  7295  0A89                     l1995:	
  7296  0A89  3001               	movlw	1
  7297  0A8A                     u1895:	
  7298  0A8A  35A0               	lslf	___ftadd@f1,f
  7299  0A8B  0DA1               	rlf	___ftadd@f1+1,f
  7300  0A8C  0DA2               	rlf	___ftadd@f1+2,f
  7301  0A8D  0B89               	decfsz	9,f
  7302  0A8E  2A8A               	goto	u1895
  7303  0A8F  3001               	movlw	1
  7304  0A90  02AC               	subwf	___ftadd@exp1,f
  7305  0A91  082B               	movf	___ftadd@exp2,w
  7306  0A92  062C               	xorwf	___ftadd@exp1,w
  7307  0A93  1903               	skipnz
  7308  0A94  2AA6               	goto	l2003
  7309  0A95  3001               	movlw	1
  7310  0A96  02AA               	subwf	___ftadd@sign,f
  7311  0A97  082A               	movf	___ftadd@sign,w
  7312  0A98  3907               	andlw	7
  7313  0A99  1903               	btfsc	3,2
  7314  0A9A  2AA6               	goto	l2003
  7315  0A9B  2A89               	goto	l1995
  7316  0A9C                     l2001:	
  7317  0A9C  3001               	movlw	1
  7318  0A9D                     u1925:	
  7319  0A9D  36A5               	lsrf	___ftadd@f2+2,f
  7320  0A9E  0CA4               	rrf	___ftadd@f2+1,f
  7321  0A9F  0CA3               	rrf	___ftadd@f2,f
  7322  0AA0  0B89               	decfsz	9,f
  7323  0AA1  2A9D               	goto	u1925
  7324  0AA2  3001               	movlw	1
  7325  0AA3  00A6               	movwf	??___ftadd
  7326  0AA4  0826               	movf	??___ftadd,w
  7327  0AA5  07AB               	addwf	___ftadd@exp2,f
  7328  0AA6                     l2003:	
  7329  0AA6  082C               	movf	___ftadd@exp1,w
  7330  0AA7  062B               	xorwf	___ftadd@exp2,w
  7331  0AA8  1D03               	skipz
  7332  0AA9  2A9C               	goto	l2001
  7333  0AAA                     l593:	
  7334  0AAA  1FAA               	btfss	___ftadd@sign,7
  7335  0AAB  2ABC               	goto	l2007
  7336  0AAC  30FF               	movlw	255
  7337  0AAD  06A0               	xorwf	___ftadd@f1,f
  7338  0AAE  30FF               	movlw	255
  7339  0AAF  06A1               	xorwf	___ftadd@f1+1,f
  7340  0AB0  30FF               	movlw	255
  7341  0AB1  06A2               	xorwf	___ftadd@f1+2,f
  7342  0AB2  3001               	movlw	1
  7343  0AB3  07A0               	addwf	___ftadd@f1,f
  7344  0AB4  3000               	movlw	0
  7345  0AB5  1803               	skipnc
  7346  0AB6  3001               	movlw	1
  7347  0AB7  07A1               	addwf	___ftadd@f1+1,f
  7348  0AB8  3000               	movlw	0
  7349  0AB9  1803               	skipnc
  7350  0ABA  3001               	movlw	1
  7351  0ABB  07A2               	addwf	___ftadd@f1+2,f
  7352  0ABC                     l2007:	
  7353  0ABC  1F2A               	btfss	___ftadd@sign,6
  7354  0ABD  2ACE               	goto	l2011
  7355  0ABE  30FF               	movlw	255
  7356  0ABF  06A3               	xorwf	___ftadd@f2,f
  7357  0AC0  30FF               	movlw	255
  7358  0AC1  06A4               	xorwf	___ftadd@f2+1,f
  7359  0AC2  30FF               	movlw	255
  7360  0AC3  06A5               	xorwf	___ftadd@f2+2,f
  7361  0AC4  3001               	movlw	1
  7362  0AC5  07A3               	addwf	___ftadd@f2,f
  7363  0AC6  3000               	movlw	0
  7364  0AC7  1803               	skipnc
  7365  0AC8  3001               	movlw	1
  7366  0AC9  07A4               	addwf	___ftadd@f2+1,f
  7367  0ACA  3000               	movlw	0
  7368  0ACB  1803               	skipnc
  7369  0ACC  3001               	movlw	1
  7370  0ACD  07A5               	addwf	___ftadd@f2+2,f
  7371  0ACE                     l2011:	
  7372  0ACE  01AA               	clrf	___ftadd@sign
  7373  0ACF  0820               	movf	___ftadd@f1,w
  7374  0AD0  07A3               	addwf	___ftadd@f2,f
  7375  0AD1  0821               	movf	___ftadd@f1+1,w
  7376  0AD2  3DA4               	addwfc	___ftadd@f2+1,f
  7377  0AD3  0822               	movf	___ftadd@f1+2,w
  7378  0AD4  3DA5               	addwfc	___ftadd@f2+2,f
  7379  0AD5  1FA5               	btfss	___ftadd@f2+2,7
  7380  0AD6  2AE9               	goto	l2021
  7381  0AD7  30FF               	movlw	255
  7382  0AD8  06A3               	xorwf	___ftadd@f2,f
  7383  0AD9  30FF               	movlw	255
  7384  0ADA  06A4               	xorwf	___ftadd@f2+1,f
  7385  0ADB  30FF               	movlw	255
  7386  0ADC  06A5               	xorwf	___ftadd@f2+2,f
  7387  0ADD  3001               	movlw	1
  7388  0ADE  07A3               	addwf	___ftadd@f2,f
  7389  0ADF  3000               	movlw	0
  7390  0AE0  1803               	skipnc
  7391  0AE1  3001               	movlw	1
  7392  0AE2  07A4               	addwf	___ftadd@f2+1,f
  7393  0AE3  3000               	movlw	0
  7394  0AE4  1803               	skipnc
  7395  0AE5  3001               	movlw	1
  7396  0AE6  07A5               	addwf	___ftadd@f2+2,f
  7397  0AE7  01AA               	clrf	___ftadd@sign
  7398  0AE8  0AAA               	incf	___ftadd@sign,f
  7399  0AE9                     l2021:	
  7400  0AE9  0823               	movf	___ftadd@f2,w
  7401  0AEA  00F2               	movwf	___ftpack@arg
  7402  0AEB  0824               	movf	___ftadd@f2+1,w
  7403  0AEC  00F3               	movwf	___ftpack@arg+1
  7404  0AED  0825               	movf	___ftadd@f2+2,w
  7405  0AEE  00F4               	movwf	___ftpack@arg+2
  7406  0AEF  082C               	movf	___ftadd@exp1,w
  7407  0AF0  00A6               	movwf	??___ftadd
  7408  0AF1  0826               	movf	??___ftadd,w
  7409  0AF2  00F5               	movwf	___ftpack@exp
  7410  0AF3  082A               	movf	___ftadd@sign,w
  7411  0AF4  00A7               	movwf	??___ftadd+1
  7412  0AF5  0827               	movf	??___ftadd+1,w
  7413  0AF6  00F6               	movwf	___ftpack@sign
  7414  0AF7  3196  26B1         	fcall	___ftpack
  7415  0AF9  0872               	movf	?___ftpack,w
  7416  0AFA  0020               	movlb	0	; select bank0
  7417  0AFB  00A0               	movwf	?___ftadd
  7418  0AFC  0873               	movf	?___ftpack+1,w
  7419  0AFD  00A1               	movwf	?___ftadd+1
  7420  0AFE  0874               	movf	?___ftpack+2,w
  7421  0AFF  00A2               	movwf	?___ftadd+2
  7422  0B00  0008               	return
  7423  0B01                     __end_of___ftadd:	
  7424                           
  7425                           	psect	text16
  7426  16B1                     __ptext16:	
  7427 ;; *************** function ___ftpack *****************
  7428 ;; Defined at:
  7429 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  arg             3    2[COMMON] unsigned um
  7432 ;;  exp             1    5[COMMON] unsigned char 
  7433 ;;  sign            1    6[COMMON] unsigned char 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  3    2[COMMON] float 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7445 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7447 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7448 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7449 ;;Total ram usage:        8 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    1
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		___awtoft
  7456 ;;		___ftadd
  7457 ;;		___ftdiv
  7458 ;;		___ftmul
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           
  7463                           ;psect for function ___ftpack
  7464  16B1                     ___ftpack:	
  7465                           
  7466                           ;incstack = 0
  7467                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7468  16B1  0875               	movf	___ftpack@exp,w
  7469  16B2  1903               	btfsc	3,2
  7470  16B3  2EB9               	goto	l1747
  7471  16B4  0874               	movf	___ftpack@arg+2,w
  7472  16B5  0473               	iorwf	___ftpack@arg+1,w
  7473  16B6  0472               	iorwf	___ftpack@arg,w
  7474  16B7  1D03               	skipz
  7475  16B8  2ECA               	goto	l1753
  7476  16B9                     l1747:	
  7477  16B9  3000               	movlw	0
  7478  16BA  00F2               	movwf	?___ftpack
  7479  16BB  3000               	movlw	0
  7480  16BC  00F3               	movwf	?___ftpack+1
  7481  16BD  3000               	movlw	0
  7482  16BE  00F4               	movwf	?___ftpack+2
  7483  16BF  0008               	return
  7484  16C0                     l1751:	
  7485  16C0  3001               	movlw	1
  7486  16C1  00F7               	movwf	??___ftpack
  7487  16C2  0877               	movf	??___ftpack,w
  7488  16C3  07F5               	addwf	___ftpack@exp,f
  7489  16C4  3001               	movlw	1
  7490  16C5                     u1415:	
  7491  16C5  36F4               	lsrf	___ftpack@arg+2,f
  7492  16C6  0CF3               	rrf	___ftpack@arg+1,f
  7493  16C7  0CF2               	rrf	___ftpack@arg,f
  7494  16C8  0B89               	decfsz	9,f
  7495  16C9  2EC5               	goto	u1415
  7496  16CA                     l1753:	
  7497  16CA  30FE               	movlw	254
  7498  16CB  0574               	andwf	___ftpack@arg+2,w
  7499  16CC  1903               	btfsc	3,2
  7500  16CD  2EE3               	goto	l562
  7501  16CE  2EC0               	goto	l1751
  7502  16CF                     l1755:	
  7503  16CF  3001               	movlw	1
  7504  16D0  00F7               	movwf	??___ftpack
  7505  16D1  0877               	movf	??___ftpack,w
  7506  16D2  07F5               	addwf	___ftpack@exp,f
  7507  16D3  3001               	movlw	1
  7508  16D4  07F2               	addwf	___ftpack@arg,f
  7509  16D5  3000               	movlw	0
  7510  16D6  1803               	skipnc
  7511  16D7  3001               	movlw	1
  7512  16D8  07F3               	addwf	___ftpack@arg+1,f
  7513  16D9  3000               	movlw	0
  7514  16DA  1803               	skipnc
  7515  16DB  3001               	movlw	1
  7516  16DC  07F4               	addwf	___ftpack@arg+2,f
  7517  16DD  3001               	movlw	1
  7518  16DE                     u1435:	
  7519  16DE  36F4               	lsrf	___ftpack@arg+2,f
  7520  16DF  0CF3               	rrf	___ftpack@arg+1,f
  7521  16E0  0CF2               	rrf	___ftpack@arg,f
  7522  16E1  0B89               	decfsz	9,f
  7523  16E2  2EDE               	goto	u1435
  7524  16E3                     l562:	
  7525  16E3  30FF               	movlw	255
  7526  16E4  0574               	andwf	___ftpack@arg+2,w
  7527  16E5  1903               	btfsc	3,2
  7528  16E6  2EF0               	goto	l1763
  7529  16E7  2ECF               	goto	l1755
  7530  16E8                     l1761:	
  7531  16E8  3001               	movlw	1
  7532  16E9  02F5               	subwf	___ftpack@exp,f
  7533  16EA  3001               	movlw	1
  7534  16EB                     u1455:	
  7535  16EB  35F2               	lslf	___ftpack@arg,f
  7536  16EC  0DF3               	rlf	___ftpack@arg+1,f
  7537  16ED  0DF4               	rlf	___ftpack@arg+2,f
  7538  16EE  0B89               	decfsz	9,f
  7539  16EF  2EEB               	goto	u1455
  7540  16F0                     l1763:	
  7541  16F0  1BF3               	btfsc	___ftpack@arg+1,7
  7542  16F1  2EF6               	goto	l569
  7543  16F2  3002               	movlw	2
  7544  16F3  0275               	subwf	___ftpack@exp,w
  7545  16F4  1803               	skipnc
  7546  16F5  2EE8               	goto	l1761
  7547  16F6                     l569:	
  7548  16F6  1875               	btfsc	___ftpack@exp,0
  7549  16F7  2EFE               	goto	l570
  7550  16F8  30FF               	movlw	255
  7551  16F9  05F2               	andwf	___ftpack@arg,f
  7552  16FA  307F               	movlw	127
  7553  16FB  05F3               	andwf	___ftpack@arg+1,f
  7554  16FC  30FF               	movlw	255
  7555  16FD  05F4               	andwf	___ftpack@arg+2,f
  7556  16FE                     l570:	
  7557  16FE  1003               	clrc
  7558  16FF  0CF5               	rrf	___ftpack@exp,f
  7559  1700  0875               	movf	___ftpack@exp,w
  7560  1701  00F7               	movwf	??___ftpack
  7561  1702  01F8               	clrf	??___ftpack+1
  7562  1703  01F9               	clrf	??___ftpack+2
  7563  1704  3010               	movlw	16
  7564  1705                     u1495:	
  7565  1705  35F7               	lslf	??___ftpack,f
  7566  1706  0DF8               	rlf	??___ftpack+1,f
  7567  1707  0DF9               	rlf	??___ftpack+2,f
  7568  1708  0B89               	decfsz	9,f
  7569  1709  2F05               	goto	u1495
  7570  170A  0877               	movf	??___ftpack,w
  7571  170B  04F2               	iorwf	___ftpack@arg,f
  7572  170C  0878               	movf	??___ftpack+1,w
  7573  170D  04F3               	iorwf	___ftpack@arg+1,f
  7574  170E  0879               	movf	??___ftpack+2,w
  7575  170F  04F4               	iorwf	___ftpack@arg+2,f
  7576  1710  0876               	movf	___ftpack@sign,w
  7577  1711  1903               	btfsc	3,2
  7578  1712  0008               	return
  7579  1713  17F4               	bsf	___ftpack@arg+2,7
  7580  1714  0008               	return
  7581  1715                     __end_of___ftpack:	
  7582                           
  7583                           	psect	text17
  7584  131A                     __ptext17:	
  7585 ;; *************** function _adc_convert *****************
  7586 ;; Defined at:
  7587 ;;		line 196 in file "user.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  channel         1    wreg     unsigned char 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  channel         1    5[COMMON] unsigned char 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  2    2[COMMON] unsigned int 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7605 ;;Total ram usage:        4 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:    1
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_main
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function _adc_convert
  7617  131A                     _adc_convert:	
  7618                           
  7619                           ;incstack = 0
  7620                           ; Regs used in _adc_convert: [wreg+status,2+status,0]
  7621                           ;adc_convert@channel stored from wreg
  7622  131A  00F5               	movwf	adc_convert@channel
  7623                           
  7624                           ;user.c: 197: ADCON0bits.CHS = channel;
  7625  131B  0875               	movf	adc_convert@channel,w
  7626  131C  00F4               	movwf	??_adc_convert
  7627  131D  0DF4               	rlf	??_adc_convert,f
  7628  131E  0DF4               	rlf	??_adc_convert,f
  7629  131F  0021               	movlb	1	; select bank1
  7630  1320  081D               	movf	29,w	;volatile
  7631  1321  0674               	xorwf	??_adc_convert,w
  7632  1322  3983               	andlw	-125
  7633  1323  0674               	xorwf	??_adc_convert,w
  7634  1324  009D               	movwf	29	;volatile
  7635                           
  7636                           ;user.c: 198: ADCON0bits.GO = 0b1;
  7637  1325  149D               	bsf	29,1	;volatile
  7638  1326                     l341:	
  7639                           ;user.c: 199: while (ADCON0bits.GO_nDONE);
  7640                           
  7641  1326  189D               	btfsc	29,1	;volatile
  7642  1327  2B26               	goto	l341
  7643                           
  7644                           ;user.c: 200: return (ADRESH << 8) | ADRESL;
  7645  1328  081C               	movf	28,w	;volatile
  7646  1329  00F3               	movwf	?_adc_convert+1
  7647  132A  081B               	movf	27,w	;volatile
  7648  132B  00F2               	movwf	?_adc_convert
  7649  132C  0008               	return
  7650  132D                     __end_of_adc_convert:	
  7651                           
  7652                           	psect	text18
  7653  13C9                     __ptext18:	
  7654 ;; *************** function _InitApp *****************
  7655 ;; Defined at:
  7656 ;;		line 21 in file "user.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;		None
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;		None
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  1    wreg      void 
  7663 ;; Registers used:
  7664 ;;		wreg, status,2, status,0, pclath, cstack
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7674 ;;Total ram usage:        0 bytes
  7675 ;; Hardware stack levels used:    1
  7676 ;; Hardware stack levels required when called:    3
  7677 ;; This function calls:
  7678 ;;		_init_adc
  7679 ;;		_init_pwm
  7680 ;; This function is called by:
  7681 ;;		_main
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           
  7686                           ;psect for function _InitApp
  7687  13C9                     _InitApp:	
  7688                           
  7689                           ;user.c: 22: TRISBbits.TRISB0 = 1;
  7690                           
  7691                           ;incstack = 0
  7692                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  7693  13C9  0021               	movlb	1	; select bank1
  7694  13CA  140D               	bsf	13,0	;volatile
  7695                           
  7696                           ;user.c: 23: TRISBbits.TRISB1 = 0;
  7697  13CB  108D               	bcf	13,1	;volatile
  7698                           
  7699                           ;user.c: 24: TRISBbits.TRISB2 = 1;
  7700  13CC  150D               	bsf	13,2	;volatile
  7701                           
  7702                           ;user.c: 25: TRISBbits.TRISB3 = 1;
  7703  13CD  158D               	bsf	13,3	;volatile
  7704                           
  7705                           ;user.c: 26: TRISBbits.TRISB4 = 0;
  7706  13CE  120D               	bcf	13,4	;volatile
  7707                           
  7708                           ;user.c: 27: TRISBbits.TRISB5 = 0;
  7709  13CF  128D               	bcf	13,5	;volatile
  7710                           
  7711                           ;user.c: 28: ANSELBbits.ANSB0 = 1;
  7712  13D0  0023               	movlb	3	; select bank3
  7713  13D1  140D               	bsf	13,0	;volatile
  7714                           
  7715                           ;user.c: 29: ANSELBbits.ANSB2 = 1;
  7716  13D2  150D               	bsf	13,2	;volatile
  7717                           
  7718                           ;user.c: 30: ANSELBbits.ANSB3 = 1;
  7719  13D3  158D               	bsf	13,3	;volatile
  7720                           
  7721                           ;user.c: 32: TRISCbits.TRISC6 = 0;
  7722  13D4  0021               	movlb	1	; select bank1
  7723  13D5  130E               	bcf	14,6	;volatile
  7724                           
  7725                           ;user.c: 33: TRISCbits.TRISC7 = 0;
  7726  13D6  138E               	bcf	14,7	;volatile
  7727                           
  7728                           ;user.c: 35: TRISDbits.TRISD0 = 0;
  7729  13D7  100F               	bcf	15,0	;volatile
  7730                           
  7731                           ;user.c: 36: TRISDbits.TRISD1 = 0;
  7732  13D8  108F               	bcf	15,1	;volatile
  7733                           
  7734                           ;user.c: 37: TRISDbits.TRISD2 = 0;
  7735  13D9  110F               	bcf	15,2	;volatile
  7736                           
  7737                           ;user.c: 38: TRISDbits.TRISD3 = 0;
  7738  13DA  118F               	bcf	15,3	;volatile
  7739                           
  7740                           ;user.c: 39: TRISDbits.TRISD4 = 0;
  7741  13DB  120F               	bcf	15,4	;volatile
  7742                           
  7743                           ;user.c: 40: TRISDbits.TRISD5 = 1;
  7744  13DC  168F               	bsf	15,5	;volatile
  7745                           
  7746                           ;user.c: 41: TRISDbits.TRISD5 = 1;
  7747  13DD  168F               	bsf	15,5	;volatile
  7748                           
  7749                           ;user.c: 43: TRISEbits.TRISE0 = 1;
  7750  13DE  1410               	bsf	16,0	;volatile
  7751                           
  7752                           ;user.c: 44: TRISEbits.TRISE1 = 1;
  7753  13DF  1490               	bsf	16,1	;volatile
  7754                           
  7755                           ;user.c: 45: ANSELEbits.ANSE0 = 0;
  7756  13E0  0023               	movlb	3	; select bank3
  7757  13E1  1010               	bcf	16,0	;volatile
  7758                           
  7759                           ;user.c: 46: ANSELEbits.ANSE1 = 0;
  7760  13E2  1090               	bcf	16,1	;volatile
  7761                           
  7762                           ;user.c: 47: PORTEbits.RE0 = 0;
  7763  13E3  0020               	movlb	0	; select bank0
  7764  13E4  1010               	bcf	16,0	;volatile
  7765                           
  7766                           ;user.c: 48: PORTEbits.RE1 = 0;
  7767  13E5  1090               	bcf	16,1	;volatile
  7768                           
  7769                           ;user.c: 50: TRISFbits.TRISF0 = 0;
  7770  13E6  0026               	movlb	6	; select bank6
  7771  13E7  100C               	bcf	12,0	;volatile
  7772                           
  7773                           ;user.c: 51: TRISFbits.TRISF1 = 0;
  7774  13E8  108C               	bcf	12,1	;volatile
  7775                           
  7776                           ;user.c: 52: TRISFbits.TRISF2 = 0;
  7777  13E9  110C               	bcf	12,2	;volatile
  7778                           
  7779                           ;user.c: 53: TRISFbits.TRISF3 = 0;
  7780  13EA  118C               	bcf	12,3	;volatile
  7781                           
  7782                           ;user.c: 54: TRISFbits.TRISF4 = 0;
  7783  13EB  120C               	bcf	12,4	;volatile
  7784                           
  7785                           ;user.c: 55: TRISFbits.TRISF5 = 0;
  7786  13EC  128C               	bcf	12,5	;volatile
  7787                           
  7788                           ;user.c: 56: TRISFbits.TRISF6 = 0;
  7789  13ED  130C               	bcf	12,6	;volatile
  7790                           
  7791                           ;user.c: 58: TRISGbits.TRISG1 = 0;
  7792  13EE  108D               	bcf	13,1	;volatile
  7793                           
  7794                           ;user.c: 59: TRISGbits.TRISG2 = 0;
  7795  13EF  110D               	bcf	13,2	;volatile
  7796                           
  7797                           ;user.c: 61: init_adc();
  7798  13F0  3192  22EC  3193   	fcall	_init_adc
  7799                           
  7800                           ;user.c: 62: init_pwm();
  7801  13F3  3195  2551         	fcall	_init_pwm
  7802                           
  7803                           ;user.c: 64: INTCONbits.GIE = 0b1;
  7804  13F5  178B               	bsf	11,7	;volatile
  7805                           
  7806                           ;user.c: 65: INTCONbits.TMR0IE = 0b1;
  7807  13F6  168B               	bsf	11,5	;volatile
  7808                           
  7809                           ;user.c: 66: INTCONbits.TMR0IF = 0b0;
  7810  13F7  110B               	bcf	11,2	;volatile
  7811  13F8  0008               	return
  7812  13F9                     __end_of_InitApp:	
  7813                           
  7814                           	psect	text19
  7815  1551                     __ptext19:	
  7816 ;; *************** function _init_pwm *****************
  7817 ;; Defined at:
  7818 ;;		line 203 in file "user.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;		None
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;		None
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  1    wreg      void 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0, pclath, cstack
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7836 ;;Total ram usage:        0 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; Hardware stack levels required when called:    2
  7839 ;; This function calls:
  7840 ;;		_init_timer0
  7841 ;;		_init_timer2
  7842 ;; This function is called by:
  7843 ;;		_InitApp
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           
  7848                           ;psect for function _init_pwm
  7849  1551                     _init_pwm:	
  7850                           
  7851                           ;user.c: 204: APFCONbits.CCP2SEL = 0;
  7852                           
  7853                           ;incstack = 0
  7854                           ; Regs used in _init_pwm: [wreg+status,2+status,0+pclath+cstack]
  7855  1551  0022               	movlb	2	; select bank2
  7856  1552  101D               	bcf	29,0	;volatile
  7857                           
  7858                           ;user.c: 205: TRISCbits.TRISC2 = 0;
  7859  1553  0021               	movlb	1	; select bank1
  7860  1554  110E               	bcf	14,2	;volatile
  7861                           
  7862                           ;user.c: 206: TRISCbits.TRISC1 = 0;
  7863  1555  108E               	bcf	14,1	;volatile
  7864                           
  7865                           ;user.c: 207: TRISGbits.TRISG0 = 0;
  7866  1556  0026               	movlb	6	; select bank6
  7867  1557  100D               	bcf	13,0	;volatile
  7868                           
  7869                           ;user.c: 208: TRISGbits.TRISG3 = 0;
  7870  1558  118D               	bcf	13,3	;volatile
  7871                           
  7872                           ;user.c: 209: TRISGbits.TRISG4 = 0;
  7873  1559  120D               	bcf	13,4	;volatile
  7874                           
  7875                           ;user.c: 210: TRISEbits.TRISE6 = 0;
  7876  155A  0021               	movlb	1	; select bank1
  7877  155B  1310               	bcf	16,6	;volatile
  7878                           
  7879                           ;user.c: 211: TRISEbits.TRISE5 = 0;
  7880  155C  1290               	bcf	16,5	;volatile
  7881                           
  7882                           ;user.c: 212: TRISEbits.TRISE4 = 0;
  7883  155D  1210               	bcf	16,4	;volatile
  7884                           
  7885                           ;user.c: 213: TRISEbits.TRISE3 = 0;
  7886  155E  1190               	bcf	16,3	;volatile
  7887                           
  7888                           ;user.c: 214: TRISEbits.TRISE2 = 0;
  7889  155F  1110               	bcf	16,2	;volatile
  7890                           
  7891                           ;user.c: 215: CCP1CONbits.CCP1M = 0b1111;
  7892  1560  300F               	movlw	15
  7893  1561  0025               	movlb	5	; select bank5
  7894  1562  0493               	iorwf	19,f	;volatile
  7895                           
  7896                           ;user.c: 216: CCP2CONbits.CCP2M = 0b1111;
  7897  1563  300F               	movlw	15
  7898  1564  049A               	iorwf	26,f	;volatile
  7899                           
  7900                           ;user.c: 217: CCP3CONbits.CCP3M = 0b1111;
  7901  1565  300F               	movlw	15
  7902  1566  0026               	movlb	6	; select bank6
  7903  1567  0493               	iorwf	19,f	;volatile
  7904                           
  7905                           ;user.c: 218: CCP4CONbits.CCP4M = 0b1111;
  7906  1568  300F               	movlw	15
  7907  1569  049A               	iorwf	26,f	;volatile
  7908                           
  7909                           ;user.c: 219: CCP5CONbits.CCP5M = 0b1111;
  7910  156A  300F               	movlw	15
  7911  156B  049E               	iorwf	30,f	;volatile
  7912                           
  7913                           ;user.c: 220: CCP6CONbits.CCP6M = 0b1111;
  7914  156C  300F               	movlw	15
  7915  156D  002C               	movlb	12	; select bank12
  7916  156E  0493               	iorwf	19,f	;volatile
  7917                           
  7918                           ;user.c: 221: CCP7CONbits.CCP7M = 0b1111;
  7919  156F  300F               	movlw	15
  7920  1570  0496               	iorwf	22,f	;volatile
  7921                           
  7922                           ;user.c: 222: CCP8CONbits.CCP8M = 0b1111;
  7923  1571  300F               	movlw	15
  7924  1572  0499               	iorwf	25,f	;volatile
  7925                           
  7926                           ;user.c: 223: CCP9CONbits.CCP9M = 0b1111;
  7927  1573  300F               	movlw	15
  7928  1574  049C               	iorwf	28,f	;volatile
  7929                           
  7930                           ;user.c: 224: CCP10CONbits.CCP10M = 0b1111;
  7931  1575  300F               	movlw	15
  7932  1576  049F               	iorwf	31,f	;volatile
  7933                           
  7934                           ;user.c: 225: CCPTMRS0 = 0b00000000;
  7935  1577  0025               	movlb	5	; select bank5
  7936  1578  019D               	clrf	29	;volatile
  7937                           
  7938                           ;user.c: 226: CCPTMRS1 = 0b00000000;
  7939  1579  019E               	clrf	30	;volatile
  7940                           
  7941                           ;user.c: 227: CCPTMRS2 = 0b00000000;
  7942  157A  019F               	clrf	31	;volatile
  7943                           
  7944                           ;user.c: 228: CCPR1 = 50;
  7945  157B  3000               	movlw	0
  7946  157C  0092               	movwf	18	;volatile
  7947  157D  3032               	movlw	50
  7948  157E  0091               	movwf	17	;volatile
  7949                           
  7950                           ;user.c: 229: CCPR2 = 100;
  7951  157F  3000               	movlw	0
  7952  1580  0099               	movwf	25	;volatile
  7953  1581  3064               	movlw	100
  7954  1582  0098               	movwf	24	;volatile
  7955                           
  7956                           ;user.c: 230: CCPR3 = 150;
  7957  1583  3000               	movlw	0
  7958  1584  0026               	movlb	6	; select bank6
  7959  1585  0092               	movwf	18	;volatile
  7960  1586  3096               	movlw	150
  7961  1587  0091               	movwf	17	;volatile
  7962                           
  7963                           ;user.c: 231: CCPR4 = 200;
  7964  1588  3000               	movlw	0
  7965  1589  0099               	movwf	25	;volatile
  7966  158A  30C8               	movlw	200
  7967  158B  0098               	movwf	24	;volatile
  7968                           
  7969                           ;user.c: 232: init_timer2();
  7970  158C  3192  22E3  3195   	fcall	_init_timer2
  7971                           
  7972                           ;user.c: 233: init_timer0();
  7973  158F  3192  22D4         	fcall	_init_timer0
  7974  1591  0008               	return
  7975  1592                     __end_of_init_pwm:	
  7976                           
  7977                           	psect	text20
  7978  12E3                     __ptext20:	
  7979 ;; *************** function _init_timer2 *****************
  7980 ;; Defined at:
  7981 ;;		line 236 in file "user.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7999 ;;Total ram usage:        0 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    1
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_init_pwm
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           
  8010                           ;psect for function _init_timer2
  8011  12E3                     _init_timer2:	
  8012                           
  8013                           ;user.c: 237: T2CONbits.T2OUTPS = 0b0000;
  8014                           
  8015                           ;incstack = 0
  8016                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  8017  12E3  3087               	movlw	-121
  8018  12E4  0020               	movlb	0	; select bank0
  8019  12E5  059C               	andwf	28,f	;volatile
  8020                           
  8021                           ;user.c: 238: T2CONbits.T2CKPS = 0b00;
  8022  12E6  30FC               	movlw	-4
  8023  12E7  059C               	andwf	28,f	;volatile
  8024                           
  8025                           ;user.c: 239: PR2 = 0xFF;
  8026  12E8  30FF               	movlw	255
  8027  12E9  009B               	movwf	27	;volatile
  8028                           
  8029                           ;user.c: 240: T2CONbits.TMR2ON = 1;
  8030  12EA  151C               	bsf	28,2	;volatile
  8031  12EB  0008               	return
  8032  12EC                     __end_of_init_timer2:	
  8033                           
  8034                           	psect	text21
  8035  12D4                     __ptext21:	
  8036 ;; *************** function _init_timer0 *****************
  8037 ;; Defined at:
  8038 ;;		line 243 in file "user.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;		None
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		None
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8056 ;;Total ram usage:        0 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    1
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_init_pwm
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           
  8067                           ;psect for function _init_timer0
  8068  12D4                     _init_timer0:	
  8069                           
  8070                           ;user.c: 244: OPTION_REGbits.TMR0CS = 0b0;
  8071                           
  8072                           ;incstack = 0
  8073                           ; Regs used in _init_timer0: []
  8074  12D4  0021               	movlb	1	; select bank1
  8075  12D5  1295               	bcf	21,5	;volatile
  8076                           
  8077                           ;user.c: 245: OPTION_REGbits.PSA = 0b0;
  8078  12D6  1195               	bcf	21,3	;volatile
  8079                           
  8080                           ;user.c: 246: OPTION_REGbits.PS0 = 0b0;
  8081  12D7  1015               	bcf	21,0	;volatile
  8082                           
  8083                           ;user.c: 247: OPTION_REGbits.PS1 = 0b1;
  8084  12D8  1495               	bsf	21,1	;volatile
  8085                           
  8086                           ;user.c: 248: OPTION_REGbits.PS2 = 0b0;
  8087  12D9  1115               	bcf	21,2	;volatile
  8088  12DA  0008               	return
  8089  12DB                     __end_of_init_timer0:	
  8090                           
  8091                           	psect	text22
  8092  12EC                     __ptext22:	
  8093 ;; *************** function _init_adc *****************
  8094 ;; Defined at:
  8095 ;;		line 189 in file "user.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;		None
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  1    wreg      void 
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, status,0
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8113 ;;Total ram usage:        0 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:    1
  8116 ;; This function calls:
  8117 ;;		Nothing
  8118 ;; This function is called by:
  8119 ;;		_InitApp
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           
  8124                           ;psect for function _init_adc
  8125  12EC                     _init_adc:	
  8126                           
  8127                           ;user.c: 190: ADCON1bits.ADFM = 0b1;
  8128                           
  8129                           ;incstack = 0
  8130                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  8131  12EC  0021               	movlb	1	; select bank1
  8132  12ED  179E               	bsf	30,7	;volatile
  8133                           
  8134                           ;user.c: 191: ADCON1bits.ADCS = 0b110;
  8135  12EE  081E               	movf	30,w	;volatile
  8136  12EF  398F               	andlw	-113
  8137  12F0  3860               	iorlw	96
  8138  12F1  009E               	movwf	30	;volatile
  8139                           
  8140                           ;user.c: 192: ADCON1bits.ADPREF = 0b00;
  8141  12F2  30FC               	movlw	-4
  8142  12F3  059E               	andwf	30,f	;volatile
  8143                           
  8144                           ;user.c: 193: ADCON0bits.ADON = 0b1;
  8145  12F4  141D               	bsf	29,0	;volatile
  8146  12F5  0008               	return
  8147  12F6                     __end_of_init_adc:	
  8148                           
  8149                           	psect	text23
  8150  1592                     __ptext23:	
  8151 ;; *************** function _FLASH_WriteWord *****************
  8152 ;; Defined at:
  8153 ;;		line 74 in file "memory.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  flashAddr       2    7[BANK0 ] unsigned int 
  8156 ;;  ramBuf          1    9[BANK0 ] PTR unsigned int 
  8157 ;;		 -> myBuf(64), 
  8158 ;;  word            2   10[BANK0 ] unsigned int 
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;  blockStartAd    2   13[BANK0 ] unsigned int 
  8161 ;;  i               1   15[BANK0 ] unsigned char 
  8162 ;;  offset          1   12[BANK0 ] unsigned char 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8172 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8173 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8175 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8176 ;;Total ram usage:       10 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    3
  8179 ;; This function calls:
  8180 ;;		_FLASH_ReadWord
  8181 ;;		_FLASH_WriteBlock
  8182 ;; This function is called by:
  8183 ;;		_main
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           
  8188                           ;psect for function _FLASH_WriteWord
  8189  1592                     _FLASH_WriteWord:	
  8190                           
  8191                           ;memory.c: 75: uint16_t blockStartAddr = (uint16_t) (flashAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  8192                           
  8193                           ;incstack = 0
  8194                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8195  1592  30E0               	movlw	224
  8196  1593  0020               	movlb	0	; select bank0
  8197  1594  0527               	andwf	FLASH_WriteWord@flashAddr,w
  8198  1595  00AD               	movwf	FLASH_WriteWord@blockStartAddr
  8199  1596  303F               	movlw	63
  8200  1597  0528               	andwf	FLASH_WriteWord@flashAddr+1,w
  8201  1598  00AE               	movwf	FLASH_WriteWord@blockStartAddr+1
  8202                           
  8203                           ;memory.c: 76: uint8_t offset = (uint8_t) (flashAddr & (32 - 1));
  8204  1599  0827               	movf	FLASH_WriteWord@flashAddr,w
  8205  159A  391F               	andlw	31
  8206  159B  00F8               	movwf	??_FLASH_WriteWord
  8207  159C  0878               	movf	??_FLASH_WriteWord,w
  8208  159D  00AC               	movwf	FLASH_WriteWord@offset
  8209                           
  8210                           ;memory.c: 77: uint8_t i;
  8211                           ;memory.c: 80: for (i = 0; i < 32; i++) {
  8212  159E  01AF               	clrf	FLASH_WriteWord@i
  8213  159F  3020               	movlw	32
  8214  15A0  022F               	subwf	FLASH_WriteWord@i,w
  8215  15A1  1803               	btfsc	3,0
  8216  15A2  2DC1               	goto	l2725
  8217  15A3                     l2719:	
  8218                           
  8219                           ;memory.c: 81: ramBuf[i] = FLASH_ReadWord((blockStartAddr + i));
  8220  15A3  082F               	movf	FLASH_WriteWord@i,w
  8221  15A4  072D               	addwf	FLASH_WriteWord@blockStartAddr,w
  8222  15A5  00F2               	movwf	FLASH_ReadWord@flashAddr
  8223  15A6  082E               	movf	FLASH_WriteWord@blockStartAddr+1,w
  8224  15A7  1803               	skipnc
  8225  15A8  0A2E               	incf	FLASH_WriteWord@blockStartAddr+1,w
  8226  15A9  00F3               	movwf	FLASH_ReadWord@flashAddr+1
  8227  15AA  3193  232D  3195   	fcall	_FLASH_ReadWord
  8228  15AD  0020               	movlb	0	; select bank0
  8229  15AE  352F               	lslf	FLASH_WriteWord@i,w
  8230  15AF  0729               	addwf	FLASH_WriteWord@ramBuf,w
  8231  15B0  00F8               	movwf	??_FLASH_WriteWord
  8232  15B1  0878               	movf	??_FLASH_WriteWord,w
  8233  15B2  0086               	movwf	6
  8234  15B3  3002               	movlw	2	; select bank4/5
  8235  15B4  0087               	movwf	7
  8236  15B5  0872               	movf	?_FLASH_ReadWord,w
  8237  15B6  3FC0               	movwi [0]fsr1
  8238  15B7  0873               	movf	?_FLASH_ReadWord+1,w
  8239  15B8  3FC1               	movwi [1]fsr1
  8240  15B9  3001               	movlw	1
  8241  15BA  00F8               	movwf	??_FLASH_WriteWord
  8242  15BB  0878               	movf	??_FLASH_WriteWord,w
  8243  15BC  07AF               	addwf	FLASH_WriteWord@i,f
  8244  15BD  3020               	movlw	32
  8245  15BE  022F               	subwf	FLASH_WriteWord@i,w
  8246  15BF  1C03               	skipc
  8247  15C0  2DA3               	goto	l2719
  8248  15C1                     l2725:	
  8249                           
  8250                           ;memory.c: 82: }
  8251                           ;memory.c: 85: ramBuf[offset] = word;
  8252  15C1  352C               	lslf	FLASH_WriteWord@offset,w
  8253  15C2  0729               	addwf	FLASH_WriteWord@ramBuf,w
  8254  15C3  00F8               	movwf	??_FLASH_WriteWord
  8255  15C4  0878               	movf	??_FLASH_WriteWord,w
  8256  15C5  0086               	movwf	6
  8257  15C6  3002               	movlw	2	; select bank4/5
  8258  15C7  0087               	movwf	7
  8259  15C8  082A               	movf	FLASH_WriteWord@word,w
  8260  15C9  3FC0               	movwi [0]fsr1
  8261  15CA  082B               	movf	FLASH_WriteWord@word+1,w
  8262  15CB  3FC1               	movwi [1]fsr1
  8263                           
  8264                           ;memory.c: 88: FLASH_WriteBlock(blockStartAddr, ramBuf);
  8265  15CC  082E               	movf	FLASH_WriteWord@blockStartAddr+1,w
  8266  15CD  00F6               	movwf	FLASH_WriteBlock@writeAddr+1
  8267  15CE  082D               	movf	FLASH_WriteWord@blockStartAddr,w
  8268  15CF  00F5               	movwf	FLASH_WriteBlock@writeAddr
  8269  15D0  0829               	movf	FLASH_WriteWord@ramBuf,w
  8270  15D1  00F8               	movwf	??_FLASH_WriteWord
  8271  15D2  0878               	movf	??_FLASH_WriteWord,w
  8272  15D3  00F7               	movwf	FLASH_WriteBlock@flashWordArray
  8273  15D4  3197  2715         	fcall	_FLASH_WriteBlock
  8274  15D6  0008               	return
  8275  15D7                     __end_of_FLASH_WriteWord:	
  8276                           
  8277                           	psect	text24
  8278  1715                     __ptext24:	
  8279 ;; *************** function _FLASH_WriteBlock *****************
  8280 ;; Defined at:
  8281 ;;		line 91 in file "memory.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  writeAddr       2    5[COMMON] unsigned int 
  8284 ;;  flashWordArr    1    7[COMMON] PTR unsigned int 
  8285 ;;		 -> myBuf(64), 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  blockStartAd    2    3[BANK0 ] unsigned int 
  8288 ;;  i               1    6[BANK0 ] unsigned char 
  8289 ;;  GIEBitValue     1    5[BANK0 ] unsigned char 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      char 
  8292 ;; Registers used:
  8293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8299 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8300 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8301 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8302 ;;      Totals:         3       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8303 ;;Total ram usage:       10 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    2
  8306 ;; This function calls:
  8307 ;;		_FLASH_EraseBlock
  8308 ;; This function is called by:
  8309 ;;		_FLASH_WriteWord
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           
  8314                           ;psect for function _FLASH_WriteBlock
  8315  1715                     _FLASH_WriteBlock:	
  8316                           
  8317                           ;memory.c: 92: uint16_t blockStartAddr = (uint16_t) (writeAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  8318                           
  8319                           ;incstack = 0
  8320                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8321  1715  30E0               	movlw	224
  8322  1716  0575               	andwf	FLASH_WriteBlock@writeAddr,w
  8323  1717  0020               	movlb	0	; select bank0
  8324  1718  00A3               	movwf	FLASH_WriteBlock@blockStartAddr
  8325  1719  303F               	movlw	63
  8326  171A  0576               	andwf	FLASH_WriteBlock@writeAddr+1,w
  8327  171B  00A4               	movwf	FLASH_WriteBlock@blockStartAddr+1
  8328                           
  8329                           ;memory.c: 93: uint8_t GIEBitValue = INTCONbits.GIE;
  8330  171C  3000               	movlw	0
  8331  171D  1B8B               	btfsc	11,7	;volatile
  8332  171E  3001               	movlw	1
  8333  171F  00A5               	movwf	FLASH_WriteBlock@GIEBitValue
  8334                           
  8335                           ;memory.c: 94: uint8_t i;
  8336                           ;memory.c: 97: if (writeAddr != blockStartAddr) {
  8337  1720  0824               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  8338  1721  0676               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  8339  1722  1D03               	skipz
  8340  1723  2F26               	goto	u2775
  8341  1724  0823               	movf	FLASH_WriteBlock@blockStartAddr,w
  8342  1725  0675               	xorwf	FLASH_WriteBlock@writeAddr,w
  8343  1726                     u2775:	
  8344  1726  1D03               	btfss	3,2
  8345  1727  0008               	return
  8346                           
  8347                           ;memory.c: 99: }
  8348                           ;memory.c: 101: INTCONbits.GIE = 0;
  8349                           
  8350                           ;memory.c: 98: return -1;
  8351                           ;	Return value of _FLASH_WriteBlock is never used
  8352  1728  138B               	bcf	11,7	;volatile
  8353                           
  8354                           ;memory.c: 104: FLASH_EraseBlock(writeAddr);
  8355  1729  0876               	movf	FLASH_WriteBlock@writeAddr+1,w
  8356  172A  00F3               	movwf	FLASH_EraseBlock@startAddr+1
  8357  172B  0875               	movf	FLASH_WriteBlock@writeAddr,w
  8358  172C  00F2               	movwf	FLASH_EraseBlock@startAddr
  8359  172D  3193  2361  3197   	fcall	_FLASH_EraseBlock
  8360                           
  8361                           ;memory.c: 107: PMCON1bits.CFGS = 0;
  8362  1730  0023               	movlb	3	; select bank3
  8363  1731  1315               	bcf	21,6	;volatile
  8364                           
  8365                           ;memory.c: 108: PMCON1bits.WREN = 1;
  8366  1732  1515               	bsf	21,2	;volatile
  8367                           
  8368                           ;memory.c: 109: PMCON1bits.LWLO = 1;
  8369  1733  1695               	bsf	21,5	;volatile
  8370                           
  8371                           ;memory.c: 111: for (i = 0; i < 32; i++) {
  8372  1734  0020               	movlb	0	; select bank0
  8373  1735  01A6               	clrf	FLASH_WriteBlock@i
  8374  1736  3020               	movlw	32
  8375  1737  0226               	subwf	FLASH_WriteBlock@i,w
  8376  1738  1803               	btfsc	3,0
  8377  1739  2F75               	goto	l393
  8378  173A                     l2651:	
  8379                           
  8380                           ;memory.c: 113: PMADRL = (writeAddr & 0xFF);
  8381  173A  0875               	movf	FLASH_WriteBlock@writeAddr,w
  8382  173B  0023               	movlb	3	; select bank3
  8383  173C  0091               	movwf	17	;volatile
  8384                           
  8385                           ;memory.c: 115: PMADRH = ((writeAddr & 0xFF00) >> 8);
  8386  173D  0876               	movf	FLASH_WriteBlock@writeAddr+1,w
  8387  173E  0092               	movwf	18	;volatile
  8388                           
  8389                           ;memory.c: 118: PMDATL = flashWordArray[i];
  8390  173F  0020               	movlb	0	; select bank0
  8391  1740  3526               	lslf	FLASH_WriteBlock@i,w
  8392  1741  0777               	addwf	FLASH_WriteBlock@flashWordArray,w
  8393  1742  00A0               	movwf	??_FLASH_WriteBlock
  8394  1743  0820               	movf	??_FLASH_WriteBlock,w
  8395  1744  0086               	movwf	6
  8396  1745  3002               	movlw	2	; select bank4/5
  8397  1746  0087               	movwf	7
  8398  1747  0801               	movf	1,w
  8399  1748  0023               	movlb	3	; select bank3
  8400  1749  0093               	movwf	19	;volatile
  8401                           
  8402                           ;memory.c: 119: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  8403  174A  0020               	movlb	0	; select bank0
  8404  174B  3526               	lslf	FLASH_WriteBlock@i,w
  8405  174C  0777               	addwf	FLASH_WriteBlock@flashWordArray,w
  8406  174D  00A0               	movwf	??_FLASH_WriteBlock
  8407  174E  0820               	movf	??_FLASH_WriteBlock,w
  8408  174F  0086               	movwf	6
  8409  1750  3002               	movlw	2	; select bank4/5
  8410  1751  0087               	movwf	7
  8411  1752  3F40               	moviw [0]fsr1
  8412  1753  00A1               	movwf	??_FLASH_WriteBlock+1
  8413  1754  3F41               	moviw [1]fsr1
  8414  1755  00A2               	movwf	??_FLASH_WriteBlock+2
  8415  1756  0822               	movf	??_FLASH_WriteBlock+2,w
  8416  1757  0023               	movlb	3	; select bank3
  8417  1758  0094               	movwf	20	;volatile
  8418                           
  8419                           ;memory.c: 121: if (i == (32 - 1)) {
  8420  1759  301F               	movlw	31
  8421  175A  0020               	movlb	0	; select bank0
  8422  175B  0626               	xorwf	FLASH_WriteBlock@i,w
  8423  175C  1D03               	btfss	3,2
  8424  175D  2F60               	goto	l2663
  8425                           
  8426                           ;memory.c: 123: PMCON1bits.LWLO = 0;
  8427  175E  0023               	movlb	3	; select bank3
  8428  175F  1295               	bcf	21,5	;volatile
  8429  1760                     l2663:	
  8430                           
  8431                           ;memory.c: 124: }
  8432                           ;memory.c: 126: PMCON2 = 0x55;
  8433  1760  3055               	movlw	85
  8434  1761  0023               	movlb	3	; select bank3
  8435  1762  0096               	movwf	22	;volsfr
  8436                           
  8437                           ;memory.c: 127: PMCON2 = 0xAA;
  8438  1763  30AA               	movlw	170
  8439  1764  0096               	movwf	22	;volsfr
  8440                           
  8441                           ;memory.c: 128: PMCON1bits.WR = 1;
  8442  1765  1495               	bsf	21,1	;volatile
  8443                           
  8444                           ;memory.c: 129: __nop();
  8445  1766  0000               	nop
  8446                           
  8447                           ;memory.c: 130: __nop();
  8448  1767  0000               	nop
  8449                           
  8450                           ;memory.c: 132: writeAddr++;
  8451  1768  3001               	movlw	1
  8452  1769  07F5               	addwf	FLASH_WriteBlock@writeAddr,f
  8453  176A  3000               	movlw	0
  8454  176B  3DF6               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  8455  176C  3001               	movlw	1
  8456  176D  0020               	movlb	0	; select bank0
  8457  176E  00A0               	movwf	??_FLASH_WriteBlock
  8458  176F  0820               	movf	??_FLASH_WriteBlock,w
  8459  1770  07A6               	addwf	FLASH_WriteBlock@i,f
  8460  1771  3020               	movlw	32
  8461  1772  0226               	subwf	FLASH_WriteBlock@i,w
  8462  1773  1C03               	skipc
  8463  1774  2F3A               	goto	l2651
  8464  1775                     l393:	
  8465                           
  8466                           ;memory.c: 133: }
  8467                           ;memory.c: 135: PMCON1bits.WREN = 0;
  8468  1775  0023               	movlb	3	; select bank3
  8469  1776  1115               	bcf	21,2	;volatile
  8470                           
  8471                           ;memory.c: 136: INTCONbits.GIE = GIEBitValue;
  8472  1777  0020               	movlb	0	; select bank0
  8473  1778  0C25               	rrf	FLASH_WriteBlock@GIEBitValue,w
  8474  1779  1C03               	skipc
  8475  177A  138B               	bcf	11,7	;volatile
  8476  177B  1803               	skipnc
  8477  177C  178B               	bsf	11,7	;volatile
  8478  177D  0008               	return
  8479  177E                     __end_of_FLASH_WriteBlock:	
  8480                           ;memory.c: 138: return 0;
  8481                           ;	Return value of _FLASH_WriteBlock is never used
  8482                           
  8483                           
  8484                           	psect	text25
  8485  1361                     __ptext25:	
  8486 ;; *************** function _FLASH_EraseBlock *****************
  8487 ;; Defined at:
  8488 ;;		line 141 in file "memory.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;  startAddr       2    2[COMMON] unsigned int 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  GIEBitValue     1    4[COMMON] unsigned char 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  1    wreg      void 
  8495 ;; Registers used:
  8496 ;;		wreg, status,2, status,0
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8506 ;;Total ram usage:        3 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    1
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_FLASH_WriteBlock
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           
  8517                           ;psect for function _FLASH_EraseBlock
  8518  1361                     _FLASH_EraseBlock:	
  8519                           
  8520                           ;memory.c: 142: uint8_t GIEBitValue = INTCONbits.GIE;
  8521                           
  8522                           ;incstack = 0
  8523                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  8524  1361  3000               	movlw	0
  8525  1362  1B8B               	btfsc	11,7	;volatile
  8526  1363  3001               	movlw	1
  8527  1364  00F4               	movwf	FLASH_EraseBlock@GIEBitValue
  8528                           
  8529                           ;memory.c: 145: INTCONbits.GIE = 0;
  8530  1365  138B               	bcf	11,7	;volatile
  8531                           
  8532                           ;memory.c: 147: PMADRL = (startAddr & 0xFF);
  8533  1366  0872               	movf	FLASH_EraseBlock@startAddr,w
  8534  1367  0023               	movlb	3	; select bank3
  8535  1368  0091               	movwf	17	;volatile
  8536                           
  8537                           ;memory.c: 149: PMADRH = ((startAddr & 0xFF00) >> 8);
  8538  1369  0873               	movf	FLASH_EraseBlock@startAddr+1,w
  8539  136A  0092               	movwf	18	;volatile
  8540                           
  8541                           ;memory.c: 152: PMCON1bits.CFGS = 0;
  8542  136B  1315               	bcf	21,6	;volatile
  8543                           
  8544                           ;memory.c: 153: PMCON1bits.FREE = 1;
  8545  136C  1615               	bsf	21,4	;volatile
  8546                           
  8547                           ;memory.c: 154: PMCON1bits.WREN = 1;
  8548  136D  1515               	bsf	21,2	;volatile
  8549                           
  8550                           ;memory.c: 157: PMCON2 = 0x55;
  8551  136E  3055               	movlw	85
  8552  136F  0096               	movwf	22	;volsfr
  8553                           
  8554                           ;memory.c: 158: PMCON2 = 0xAA;
  8555  1370  30AA               	movlw	170
  8556  1371  0096               	movwf	22	;volsfr
  8557                           
  8558                           ;memory.c: 159: PMCON1bits.WR = 1;
  8559  1372  1495               	bsf	21,1	;volatile
  8560                           
  8561                           ;memory.c: 160: __nop();
  8562  1373  0000               	nop
  8563                           
  8564                           ;memory.c: 161: __nop();
  8565  1374  0000               	nop
  8566                           
  8567                           ;memory.c: 163: PMCON1bits.WREN = 0;
  8568  1375  0023               	movlb	3	; select bank3
  8569  1376  1115               	bcf	21,2	;volatile
  8570                           
  8571                           ;memory.c: 164: INTCONbits.GIE = GIEBitValue;
  8572  1377  0C74               	rrf	FLASH_EraseBlock@GIEBitValue,w
  8573  1378  1C03               	skipc
  8574  1379  138B               	bcf	11,7	;volatile
  8575  137A  1803               	skipnc
  8576  137B  178B               	bsf	11,7	;volatile
  8577  137C  0008               	return
  8578  137D                     __end_of_FLASH_EraseBlock:	
  8579                           
  8580                           	psect	text26
  8581  132D                     __ptext26:	
  8582 ;; *************** function _FLASH_ReadWord *****************
  8583 ;; Defined at:
  8584 ;;		line 58 in file "memory.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  flashAddr       2    2[COMMON] unsigned int 
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;  GIEBitValue     1    4[COMMON] unsigned char 
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  2    2[COMMON] unsigned int 
  8591 ;; Registers used:
  8592 ;;		wreg, status,2, status,0
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8601 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8602 ;;Total ram usage:        3 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; Hardware stack levels required when called:    1
  8605 ;; This function calls:
  8606 ;;		Nothing
  8607 ;; This function is called by:
  8608 ;;		_main
  8609 ;;		_FLASH_WriteWord
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           
  8614                           ;psect for function _FLASH_ReadWord
  8615  132D                     _FLASH_ReadWord:	
  8616                           
  8617                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
  8618                           
  8619                           ;incstack = 0
  8620                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  8621  132D  3000               	movlw	0
  8622  132E  1B8B               	btfsc	11,7	;volatile
  8623  132F  3001               	movlw	1
  8624  1330  00F4               	movwf	FLASH_ReadWord@GIEBitValue
  8625                           
  8626                           ;memory.c: 61: INTCONbits.GIE = 0;
  8627  1331  138B               	bcf	11,7	;volatile
  8628                           
  8629                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
  8630  1332  0872               	movf	FLASH_ReadWord@flashAddr,w
  8631  1333  0023               	movlb	3	; select bank3
  8632  1334  0091               	movwf	17	;volatile
  8633                           
  8634                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
  8635  1335  0873               	movf	FLASH_ReadWord@flashAddr+1,w
  8636  1336  0092               	movwf	18	;volatile
  8637                           
  8638                           ;memory.c: 65: PMCON1bits.CFGS = 0;
  8639  1337  1315               	bcf	21,6	;volatile
  8640                           
  8641                           ;memory.c: 66: PMCON1bits.RD = 1;
  8642  1338  1415               	bsf	21,0	;volatile
  8643                           
  8644                           ;memory.c: 67: __nop();
  8645  1339  0000               	nop
  8646                           
  8647                           ;memory.c: 68: __nop();
  8648  133A  0000               	nop
  8649                           
  8650                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
  8651  133B  0C74               	rrf	FLASH_ReadWord@GIEBitValue,w
  8652  133C  1C03               	skipc
  8653  133D  138B               	bcf	11,7	;volatile
  8654  133E  1803               	skipnc
  8655  133F  178B               	bsf	11,7	;volatile
  8656                           
  8657                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
  8658  1340  0023               	movlb	3	; select bank3
  8659  1341  0814               	movf	20,w	;volatile
  8660  1342  00F3               	movwf	?_FLASH_ReadWord+1
  8661  1343  0813               	movf	19,w	;volatile
  8662  1344  00F2               	movwf	?_FLASH_ReadWord
  8663  1345  0008               	return
  8664  1346                     __end_of_FLASH_ReadWord:	
  8665                           
  8666                           	psect	text27
  8667  12D0                     __ptext27:	
  8668 ;; *************** function _ConfigureOscillator *****************
  8669 ;; Defined at:
  8670 ;;		line 18 in file "system.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;		None
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;		None
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1    wreg      void 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8688 ;;Total ram usage:        0 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:    1
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_main
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           
  8699                           ;psect for function _ConfigureOscillator
  8700  12D0                     _ConfigureOscillator:	
  8701                           
  8702                           ;system.c: 20: OSCCONbits.SCS = 0b00;
  8703                           
  8704                           ;incstack = 0
  8705                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  8706  12D0  30FC               	movlw	-4
  8707  12D1  0021               	movlb	1	; select bank1
  8708  12D2  0599               	andwf	25,f	;volatile
  8709  12D3  0008               	return
  8710  12D4                     __end_of_ConfigureOscillator:	
  8711                           
  8712                           	psect	intentry
  8713  0004                     __pintentry:	
  8714 ;; *************** function _isr *****************
  8715 ;; Defined at:
  8716 ;;		line 19 in file "interrupts.c"
  8717 ;; Parameters:    Size  Location     Type
  8718 ;;		None
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;		None
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      void 
  8723 ;; Registers used:
  8724 ;;		wreg, status,2, status,0
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8734 ;;Total ram usage:        2 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		Interrupt level 1
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743  0004                     _isr:	
  8744                           
  8745                           ;incstack = 0
  8746                           ; Regs used in _isr: [wreg+status,2+status,0]
  8747  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8748  0005  3180               	pagesel	$
  8749  0006  0020               	movlb	0	; select bank0
  8750  0007  087F               	movf	127,w
  8751  0008  00F1               	movwf	??_isr+1
  8752                           
  8753                           ;interrupts.c: 20: extern volatile int timer;
  8754                           ;interrupts.c: 21: extern volatile int tap_timer;
  8755                           ;interrupts.c: 22: extern volatile int mod_timer;
  8756                           ;interrupts.c: 23: extern volatile int delay_time;
  8757                           ;interrupts.c: 25: if (INTCONbits.TMR0IF == 1) {
  8758  0009  1D0B               	btfss	11,2	;volatile
  8759  000A  281F               	goto	i1l2265
  8760                           
  8761                           ;interrupts.c: 26: timer = timer + 1;
  8762  000B  0021               	movlb	1	; select bank1
  8763  000C  0862               	movf	_timer^(0+128),w	;volatile
  8764  000D  3E01               	addlw	1
  8765  000E  00E2               	movwf	_timer^(0+128)	;volatile
  8766  000F  3000               	movlw	0
  8767  0010  3D63               	addwfc	(_timer+1)^(0+128),w	;volatile
  8768  0011  00E3               	movwf	(_timer+1)^(0+128)	;volatile
  8769                           
  8770                           ;interrupts.c: 27: tap_timer = tap_timer + 1;
  8771  0012  0860               	movf	_tap_timer^(0+128),w	;volatile
  8772  0013  3E01               	addlw	1
  8773  0014  00E0               	movwf	_tap_timer^(0+128)	;volatile
  8774  0015  3000               	movlw	0
  8775  0016  3D61               	addwfc	(_tap_timer+1)^(0+128),w	;volatile
  8776  0017  00E1               	movwf	(_tap_timer+1)^(0+128)	;volatile
  8777                           
  8778                           ;interrupts.c: 28: mod_timer = mod_timer + 1;
  8779  0018  085E               	movf	_mod_timer^(0+128),w	;volatile
  8780  0019  3E01               	addlw	1
  8781  001A  00DE               	movwf	_mod_timer^(0+128)	;volatile
  8782  001B  3000               	movlw	0
  8783  001C  3D5F               	addwfc	(_mod_timer+1)^(0+128),w	;volatile
  8784  001D  00DF               	movwf	(_mod_timer+1)^(0+128)	;volatile
  8785                           
  8786                           ;interrupts.c: 29: INTCONbits.TMR0IF = 0;
  8787  001E  110B               	bcf	11,2	;volatile
  8788  001F                     i1l2265:	
  8789                           
  8790                           ;interrupts.c: 30: }
  8791                           ;interrupts.c: 32: if (timer >= delay_time) {
  8792  001F  0021               	movlb	1	; select bank1
  8793  0020  0863               	movf	(_timer+1)^(0+128),w	;volatile
  8794  0021  3A80               	xorlw	128
  8795  0022  00F0               	movwf	??_isr
  8796  0023  0869               	movf	(_delay_time+1)^(0+128),w	;volatile
  8797  0024  3A80               	xorlw	128
  8798  0025  0270               	subwf	??_isr,w
  8799  0026  1D03               	skipz
  8800  0027  282A               	goto	u233_25
  8801  0028  0868               	movf	_delay_time^(0+128),w	;volatile
  8802  0029  0262               	subwf	_timer^(0+128),w	;volatile
  8803  002A                     u233_25:	
  8804  002A  1C03               	skipc
  8805  002B  2831               	goto	i1l2271
  8806                           
  8807                           ;interrupts.c: 33: LATFbits.LATF5 = 1;
  8808  002C  0027               	movlb	7	; select bank7
  8809  002D  168C               	bsf	12,5	;volatile
  8810                           
  8811                           ;interrupts.c: 34: timer = 0;
  8812  002E  0021               	movlb	1	; select bank1
  8813  002F  01E2               	clrf	_timer^(0+128)	;volatile
  8814  0030  01E3               	clrf	(_timer+1)^(0+128)	;volatile
  8815  0031                     i1l2271:	
  8816                           
  8817                           ;interrupts.c: 35: }
  8818                           ;interrupts.c: 37: if (timer >= 30) {
  8819  0031  0021               	movlb	1	; select bank1
  8820  0032  0863               	movf	(_timer+1)^(0+128),w	;volatile
  8821  0033  3A80               	xorlw	128
  8822  0034  00F0               	movwf	??_isr
  8823  0035  3080               	movlw	128
  8824  0036  0270               	subwf	??_isr,w
  8825  0037  1D03               	skipz
  8826  0038  283B               	goto	u234_25
  8827  0039  301E               	movlw	30
  8828  003A  0262               	subwf	_timer^(0+128),w	;volatile
  8829  003B                     u234_25:	
  8830  003B  1C03               	skipc
  8831  003C  283F               	goto	i1l18
  8832                           
  8833                           ;interrupts.c: 38: LATFbits.LATF5 = 0;
  8834  003D  0027               	movlb	7	; select bank7
  8835  003E  128C               	bcf	12,5	;volatile
  8836  003F                     i1l18:	
  8837  003F  0871               	movf	??_isr+1,w
  8838  0040  0020               	movlb	0	; select bank0
  8839  0041  00FF               	movwf	127
  8840  0042  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8841  0043  0009               	retfie
  8842  0044                     __end_of_isr:	
  8843  007E                     btemp	set	126	;btemp
  8844  007E                     int$flags	set	126
  8845  007E                     wtemp	set	126
  8846  007E                     wtemp0	set	126
  8847  0080                     wtemp1	set	128
  8848  0082                     wtemp2	set	130
  8849  0084                     wtemp3	set	132
  8850  0086                     wtemp4	set	134
  8851  0088                     wtemp5	set	136
  8852  007F                     wtemp6	set	127
  8853  007E                     ttemp	set	126
  8854  007E                     ttemp0	set	126
  8855  0081                     ttemp1	set	129
  8856  0084                     ttemp2	set	132
  8857  0087                     ttemp3	set	135
  8858  007F                     ttemp4	set	127
  8859  007E                     ltemp	set	126
  8860  007E                     ltemp0	set	126
  8861  0082                     ltemp1	set	130
  8862  0086                     ltemp2	set	134
  8863  0080                     ltemp3	set	128
  8864  23F2                     
  8865                           	psect	maintext_split_1
  8866  0CFF                     l2917:	
  8867                           
  8868                           ;main.c: 279: }
  8869                           ;main.c: 280: }
  8870                           ;main.c: 281: mod_delay_time = delay_time / 7.5;
  8871  0CFF  0021               	movlb	1	; select bank1
  8872  0D00  0869               	movf	(_delay_time+1)^(0+128),w	;volatile
  8873  0D01  0020               	movlb	0	; select bank0
  8874  0D02  00A1               	movwf	___awtoft@c+1
  8875  0D03  0021               	movlb	1	; select bank1
  8876  0D04  0868               	movf	_delay_time^(0+128),w	;volatile
  8877  0D05  0020               	movlb	0	; select bank0
  8878  0D06  00A0               	movwf	___awtoft@c
  8879  0D07  3193  237D  318C   	fcall	___awtoft
  8880  0D0A  0020               	movlb	0	; select bank0
  8881  0D0B  0820               	movf	?___awtoft,w
  8882  0D0C  00C0               	movwf	___ftdiv@f1
  8883  0D0D  0821               	movf	?___awtoft+1,w
  8884  0D0E  00C1               	movwf	___ftdiv@f1+1
  8885  0D0F  0822               	movf	?___awtoft+2,w
  8886  0D10  00C2               	movwf	___ftdiv@f1+2
  8887  0D11  3000               	movlw	0
  8888  0D12  00BD               	movwf	___ftdiv@f2
  8889  0D13  30F0               	movlw	240
  8890  0D14  00BE               	movwf	___ftdiv@f2+1
  8891  0D15  3040               	movlw	64
  8892  0D16  00BF               	movwf	___ftdiv@f2+2
  8893  0D17  3189  2162  318C   	fcall	___ftdiv
  8894  0D1A  0020               	movlb	0	; select bank0
  8895  0D1B  083D               	movf	?___ftdiv,w
  8896  0D1C  00DF               	movwf	___fttol@f1
  8897  0D1D  083E               	movf	?___ftdiv+1,w
  8898  0D1E  00E0               	movwf	___fttol@f1+1
  8899  0D1F  083F               	movf	?___ftdiv+2,w
  8900  0D20  00E1               	movwf	___fttol@f1+2
  8901  0D21  3188  2050  318C   	fcall	___fttol
  8902  0D24  0020               	movlb	0	; select bank0
  8903  0D25  0860               	movf	?___fttol+1,w
  8904  0D26  0022               	movlb	2	; select bank2
  8905  0D27  00D9               	movwf	(_mod_delay_time+1)^(0+256)
  8906  0D28  0020               	movlb	0	; select bank0
  8907  0D29  085F               	movf	?___fttol,w
  8908  0D2A  0022               	movlb	2	; select bank2
  8909  0D2B  00D8               	movwf	_mod_delay_time^(0+256)
  8910  0D2C                     l2919:	
  8911                           
  8912                           ;main.c: 282: }
  8913                           ;main.c: 291: if (knob_2_pos - knob2_prev >= 4 || knob_2_pos - knob2_prev <= -4) {
  8914  0D2C  0022               	movlb	2	; select bank2
  8915  0D2D  0950               	comf	_knob2_prev^(0+256),w
  8916  0D2E  0021               	movlb	1	; select bank1
  8917  0D2F  00A4               	movwf	??_main^(0+128)
  8918  0D30  0022               	movlb	2	; select bank2
  8919  0D31  0951               	comf	(_knob2_prev+1)^(0+256),w
  8920  0D32  0021               	movlb	1	; select bank1
  8921  0D33  00A5               	movwf	(??_main^(0+128)+1)
  8922  0D34  0AA4               	incf	??_main^(0+128),f
  8923  0D35  1903               	skipnz
  8924  0D36  0AA5               	incf	(??_main^(0+128)+1),f
  8925  0D37  0856               	movf	_knob_2_pos^(0+128),w
  8926  0D38  0724               	addwf	??_main^(0+128),w
  8927  0D39  00A6               	movwf	(??_main+2)^(0+128)
  8928  0D3A  0857               	movf	(_knob_2_pos+1)^(0+128),w
  8929  0D3B  3D25               	addwfc	(??_main+1)^(0+128),w
  8930  0D3C  00A7               	movwf	(??_main+3)^(0+128)
  8931  0D3D  0827               	movf	(??_main+3)^(0+128),w
  8932  0D3E  3A80               	xorlw	128
  8933  0D3F  00A8               	movwf	(??_main+4)^(0+128)
  8934  0D40  3080               	movlw	128
  8935  0D41  0228               	subwf	(??_main+4)^(0+128),w
  8936  0D42  1D03               	skipz
  8937  0D43  2D46               	goto	u3175
  8938  0D44  3004               	movlw	4
  8939  0D45  0226               	subwf	(??_main+2)^(0+128),w
  8940  0D46                     u3175:	
  8941  0D46  1803               	skipnc
  8942  0D47  2D64               	goto	l2923
  8943  0D48  0022               	movlb	2	; select bank2
  8944  0D49  0950               	comf	_knob2_prev^(0+256),w
  8945  0D4A  0021               	movlb	1	; select bank1
  8946  0D4B  00A4               	movwf	??_main^(0+128)
  8947  0D4C  0022               	movlb	2	; select bank2
  8948  0D4D  0951               	comf	(_knob2_prev+1)^(0+256),w
  8949  0D4E  0021               	movlb	1	; select bank1
  8950  0D4F  00A5               	movwf	(??_main^(0+128)+1)
  8951  0D50  0AA4               	incf	??_main^(0+128),f
  8952  0D51  1903               	skipnz
  8953  0D52  0AA5               	incf	(??_main^(0+128)+1),f
  8954  0D53  0856               	movf	_knob_2_pos^(0+128),w
  8955  0D54  0724               	addwf	??_main^(0+128),w
  8956  0D55  00A6               	movwf	(??_main+2)^(0+128)
  8957  0D56  0857               	movf	(_knob_2_pos+1)^(0+128),w
  8958  0D57  3D25               	addwfc	(??_main+1)^(0+128),w
  8959  0D58  00A7               	movwf	(??_main+3)^(0+128)
  8960  0D59  0827               	movf	(??_main+3)^(0+128),w
  8961  0D5A  3A80               	xorlw	128
  8962  0D5B  00A8               	movwf	(??_main+4)^(0+128)
  8963  0D5C  307F               	movlw	127
  8964  0D5D  0228               	subwf	(??_main+4)^(0+128),w
  8965  0D5E  1D03               	skipz
  8966  0D5F  2D62               	goto	u3185
  8967  0D60  30FD               	movlw	253
  8968  0D61  0226               	subwf	(??_main+2)^(0+128),w
  8969  0D62                     u3185:	
  8970  0D62  1803               	skipnc
  8971  0D63  2DC1               	goto	l2931
  8972  0D64                     l2923:	
  8973                           
  8974                           ;main.c: 292: knob2_prev = knob_2_pos;
  8975  0D64  0021               	movlb	1	; select bank1
  8976  0D65  0857               	movf	(_knob_2_pos+1)^(0+128),w
  8977  0D66  0022               	movlb	2	; select bank2
  8978  0D67  00D1               	movwf	(_knob2_prev+1)^(0+256)
  8979  0D68  0021               	movlb	1	; select bank1
  8980  0D69  0856               	movf	_knob_2_pos^(0+128),w
  8981  0D6A  0022               	movlb	2	; select bank2
  8982  0D6B  00D0               	movwf	_knob2_prev^(0+256)
  8983                           
  8984                           ;main.c: 293: int i = map(knob2_prev, 0, 1023, 0, 39);
  8985  0D6C  3000               	movlw	0
  8986  0D6D  0020               	movlb	0	; select bank0
  8987  0D6E  00D9               	movwf	map@out_max
  8988  0D6F  301C               	movlw	28
  8989  0D70  00DA               	movwf	map@out_max+1
  8990  0D71  3042               	movlw	66
  8991  0D72  00DB               	movwf	map@out_max+2
  8992  0D73  3000               	movlw	0
  8993  0D74  00D6               	movwf	map@out_min
  8994  0D75  3000               	movlw	0
  8995  0D76  00D7               	movwf	map@out_min+1
  8996  0D77  3000               	movlw	0
  8997  0D78  00D8               	movwf	map@out_min+2
  8998  0D79  30C0               	movlw	192
  8999  0D7A  00D3               	movwf	map@in_max
  9000  0D7B  307F               	movlw	127
  9001  0D7C  00D4               	movwf	map@in_max+1
  9002  0D7D  3044               	movlw	68
  9003  0D7E  00D5               	movwf	map@in_max+2
  9004  0D7F  3000               	movlw	0
  9005  0D80  00D0               	movwf	map@in_min
  9006  0D81  3000               	movlw	0
  9007  0D82  00D1               	movwf	map@in_min+1
  9008  0D83  3000               	movlw	0
  9009  0D84  00D2               	movwf	map@in_min+2
  9010  0D85  0022               	movlb	2	; select bank2
  9011  0D86  0851               	movf	(_knob2_prev+1)^(0+256),w
  9012  0D87  0020               	movlb	0	; select bank0
  9013  0D88  00A1               	movwf	___awtoft@c+1
  9014  0D89  0022               	movlb	2	; select bank2
  9015  0D8A  0850               	movf	_knob2_prev^(0+256),w
  9016  0D8B  0020               	movlb	0	; select bank0
  9017  0D8C  00A0               	movwf	___awtoft@c
  9018  0D8D  3193  237D  318C   	fcall	___awtoft
  9019  0D90  0020               	movlb	0	; select bank0
  9020  0D91  0820               	movf	?___awtoft,w
  9021  0D92  00CD               	movwf	map@x
  9022  0D93  0821               	movf	?___awtoft+1,w
  9023  0D94  00CE               	movwf	map@x+1
  9024  0D95  0822               	movf	?___awtoft+2,w
  9025  0D96  00CF               	movwf	map@x+2
  9026  0D97  3188  20D7  318C   	fcall	_map
  9027  0D9A  0020               	movlb	0	; select bank0
  9028  0D9B  084D               	movf	?_map,w
  9029  0D9C  00DF               	movwf	___fttol@f1
  9030  0D9D  084E               	movf	?_map+1,w
  9031  0D9E  00E0               	movwf	___fttol@f1+1
  9032  0D9F  084F               	movf	?_map+2,w
  9033  0DA0  00E1               	movwf	___fttol@f1+2
  9034  0DA1  3188  2050  318C   	fcall	___fttol
  9035  0DA4  0020               	movlb	0	; select bank0
  9036  0DA5  0860               	movf	?___fttol+1,w
  9037  0DA6  0021               	movlb	1	; select bank1
  9038  0DA7  00CD               	movwf	(main@i_337+1)^(0+128)
  9039  0DA8  0020               	movlb	0	; select bank0
  9040  0DA9  085F               	movf	?___fttol,w
  9041  0DAA  0021               	movlb	1	; select bank1
  9042  0DAB  00CC               	movwf	main@i_337^(0+128)
  9043                           
  9044                           ;main.c: 294: CCPR2 = iB25k[i];
  9045  0DAC  354C               	lslf	main@i_337^(0+128),w
  9046  0DAD  3EA0               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  9047  0DAE  0086               	movwf	6
  9048  0DAF  3004               	movlw	4	; select bank9/10
  9049  0DB0  0087               	movwf	7
  9050  0DB1  3F40               	moviw [0]fsr1
  9051  0DB2  0025               	movlb	5	; select bank5
  9052  0DB3  0098               	movwf	24	;volatile
  9053  0DB4  3F41               	moviw [1]fsr1
  9054  0DB5  0099               	movwf	25	;volatile
  9055                           
  9056                           ;main.c: 295: CCPR3 = B25k[i];
  9057  0DB6  0021               	movlb	1	; select bank1
  9058  0DB7  354C               	lslf	main@i_337^(0+128),w
  9059  0DB8  3E20               	addlw	(low (_B25k| (0+1024)))& (0+255)
  9060  0DB9  0086               	movwf	6
  9061  0DBA  3004               	movlw	4	; select bank8/9
  9062  0DBB  0087               	movwf	7
  9063  0DBC  3F40               	moviw [0]fsr1
  9064  0DBD  0026               	movlb	6	; select bank6
  9065  0DBE  0091               	movwf	17	;volatile
  9066  0DBF  3F41               	moviw [1]fsr1
  9067  0DC0  0092               	movwf	18	;volatile
  9068  0DC1                     l2931:	
  9069                           
  9070                           ;main.c: 296: }
  9071                           ;main.c: 306: if (knob_3_pos - knob3_prev >= 4 || knob_3_pos - knob3_prev <= -4) {
  9072  0DC1  0022               	movlb	2	; select bank2
  9073  0DC2  0952               	comf	_knob3_prev^(0+256),w
  9074  0DC3  0021               	movlb	1	; select bank1
  9075  0DC4  00A4               	movwf	??_main^(0+128)
  9076  0DC5  0022               	movlb	2	; select bank2
  9077  0DC6  0953               	comf	(_knob3_prev+1)^(0+256),w
  9078  0DC7  0021               	movlb	1	; select bank1
  9079  0DC8  00A5               	movwf	(??_main^(0+128)+1)
  9080  0DC9  0AA4               	incf	??_main^(0+128),f
  9081  0DCA  1903               	skipnz
  9082  0DCB  0AA5               	incf	(??_main^(0+128)+1),f
  9083  0DCC  0858               	movf	_knob_3_pos^(0+128),w
  9084  0DCD  0724               	addwf	??_main^(0+128),w
  9085  0DCE  00A6               	movwf	(??_main+2)^(0+128)
  9086  0DCF  0859               	movf	(_knob_3_pos+1)^(0+128),w
  9087  0DD0  3D25               	addwfc	(??_main+1)^(0+128),w
  9088  0DD1  00A7               	movwf	(??_main+3)^(0+128)
  9089  0DD2  0827               	movf	(??_main+3)^(0+128),w
  9090  0DD3  3A80               	xorlw	128
  9091  0DD4  00A8               	movwf	(??_main+4)^(0+128)
  9092  0DD5  3080               	movlw	128
  9093  0DD6  0228               	subwf	(??_main+4)^(0+128),w
  9094  0DD7  1D03               	skipz
  9095  0DD8  2DDB               	goto	u3195
  9096  0DD9  3004               	movlw	4
  9097  0DDA  0226               	subwf	(??_main+2)^(0+128),w
  9098  0DDB                     u3195:	
  9099  0DDB  1803               	skipnc
  9100  0DDC  2DF9               	goto	l2935
  9101  0DDD  0022               	movlb	2	; select bank2
  9102  0DDE  0952               	comf	_knob3_prev^(0+256),w
  9103  0DDF  0021               	movlb	1	; select bank1
  9104  0DE0  00A4               	movwf	??_main^(0+128)
  9105  0DE1  0022               	movlb	2	; select bank2
  9106  0DE2  0953               	comf	(_knob3_prev+1)^(0+256),w
  9107  0DE3  0021               	movlb	1	; select bank1
  9108  0DE4  00A5               	movwf	(??_main^(0+128)+1)
  9109  0DE5  0AA4               	incf	??_main^(0+128),f
  9110  0DE6  1903               	skipnz
  9111  0DE7  0AA5               	incf	(??_main^(0+128)+1),f
  9112  0DE8  0858               	movf	_knob_3_pos^(0+128),w
  9113  0DE9  0724               	addwf	??_main^(0+128),w
  9114  0DEA  00A6               	movwf	(??_main+2)^(0+128)
  9115  0DEB  0859               	movf	(_knob_3_pos+1)^(0+128),w
  9116  0DEC  3D25               	addwfc	(??_main+1)^(0+128),w
  9117  0DED  00A7               	movwf	(??_main+3)^(0+128)
  9118  0DEE  0827               	movf	(??_main+3)^(0+128),w
  9119  0DEF  3A80               	xorlw	128
  9120  0DF0  00A8               	movwf	(??_main+4)^(0+128)
  9121  0DF1  307F               	movlw	127
  9122  0DF2  0228               	subwf	(??_main+4)^(0+128),w
  9123  0DF3  1D03               	skipz
  9124  0DF4  2DF7               	goto	u3205
  9125  0DF5  30FD               	movlw	253
  9126  0DF6  0226               	subwf	(??_main+2)^(0+128),w
  9127  0DF7                     u3205:	
  9128  0DF7  1803               	skipnc
  9129  0DF8  2E56               	goto	l2943
  9130  0DF9                     l2935:	
  9131                           
  9132                           ;main.c: 307: knob3_prev = knob_3_pos;
  9133  0DF9  0021               	movlb	1	; select bank1
  9134  0DFA  0859               	movf	(_knob_3_pos+1)^(0+128),w
  9135  0DFB  0022               	movlb	2	; select bank2
  9136  0DFC  00D3               	movwf	(_knob3_prev+1)^(0+256)
  9137  0DFD  0021               	movlb	1	; select bank1
  9138  0DFE  0858               	movf	_knob_3_pos^(0+128),w
  9139  0DFF  0022               	movlb	2	; select bank2
  9140  0E00  00D2               	movwf	_knob3_prev^(0+256)
  9141                           
  9142                           ;main.c: 308: int i = map(knob3_prev, 0, 1023, 16, 0);
  9143  0E01  3000               	movlw	0
  9144  0E02  0020               	movlb	0	; select bank0
  9145  0E03  00D9               	movwf	map@out_max
  9146  0E04  3000               	movlw	0
  9147  0E05  00DA               	movwf	map@out_max+1
  9148  0E06  3000               	movlw	0
  9149  0E07  00DB               	movwf	map@out_max+2
  9150  0E08  3000               	movlw	0
  9151  0E09  00D6               	movwf	map@out_min
  9152  0E0A  3080               	movlw	128
  9153  0E0B  00D7               	movwf	map@out_min+1
  9154  0E0C  3041               	movlw	65
  9155  0E0D  00D8               	movwf	map@out_min+2
  9156  0E0E  30C0               	movlw	192
  9157  0E0F  00D3               	movwf	map@in_max
  9158  0E10  307F               	movlw	127
  9159  0E11  00D4               	movwf	map@in_max+1
  9160  0E12  3044               	movlw	68
  9161  0E13  00D5               	movwf	map@in_max+2
  9162  0E14  3000               	movlw	0
  9163  0E15  00D0               	movwf	map@in_min
  9164  0E16  3000               	movlw	0
  9165  0E17  00D1               	movwf	map@in_min+1
  9166  0E18  3000               	movlw	0
  9167  0E19  00D2               	movwf	map@in_min+2
  9168  0E1A  0022               	movlb	2	; select bank2
  9169  0E1B  0853               	movf	(_knob3_prev+1)^(0+256),w
  9170  0E1C  0020               	movlb	0	; select bank0
  9171  0E1D  00A1               	movwf	___awtoft@c+1
  9172  0E1E  0022               	movlb	2	; select bank2
  9173  0E1F  0852               	movf	_knob3_prev^(0+256),w
  9174  0E20  0020               	movlb	0	; select bank0
  9175  0E21  00A0               	movwf	___awtoft@c
  9176  0E22  3193  237D  318C   	fcall	___awtoft
  9177  0E25  0020               	movlb	0	; select bank0
  9178  0E26  0820               	movf	?___awtoft,w
  9179  0E27  00CD               	movwf	map@x
  9180  0E28  0821               	movf	?___awtoft+1,w
  9181  0E29  00CE               	movwf	map@x+1
  9182  0E2A  0822               	movf	?___awtoft+2,w
  9183  0E2B  00CF               	movwf	map@x+2
  9184  0E2C  3188  20D7  318C   	fcall	_map
  9185  0E2F  0020               	movlb	0	; select bank0
  9186  0E30  084D               	movf	?_map,w
  9187  0E31  00DF               	movwf	___fttol@f1
  9188  0E32  084E               	movf	?_map+1,w
  9189  0E33  00E0               	movwf	___fttol@f1+1
  9190  0E34  084F               	movf	?_map+2,w
  9191  0E35  00E1               	movwf	___fttol@f1+2
  9192  0E36  3188  2050  318C   	fcall	___fttol
  9193  0E39  0020               	movlb	0	; select bank0
  9194  0E3A  0860               	movf	?___fttol+1,w
  9195  0E3B  0021               	movlb	1	; select bank1
  9196  0E3C  00CF               	movwf	(main@i_338+1)^(0+128)
  9197  0E3D  0020               	movlb	0	; select bank0
  9198  0E3E  085F               	movf	?___fttol,w
  9199  0E3F  0021               	movlb	1	; select bank1
  9200  0E40  00CE               	movwf	main@i_338^(0+128)
  9201                           
  9202                           ;main.c: 309: CCPR4 = iB25k[i];
  9203  0E41  354E               	lslf	main@i_338^(0+128),w
  9204  0E42  3EA0               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  9205  0E43  0086               	movwf	6
  9206  0E44  3004               	movlw	4	; select bank9/10
  9207  0E45  0087               	movwf	7
  9208  0E46  3F40               	moviw [0]fsr1
  9209  0E47  0026               	movlb	6	; select bank6
  9210  0E48  0098               	movwf	24	;volatile
  9211  0E49  3F41               	moviw [1]fsr1
  9212  0E4A  0099               	movwf	25	;volatile
  9213                           
  9214                           ;main.c: 310: CCPR5 = B25k[i];
  9215  0E4B  0021               	movlb	1	; select bank1
  9216  0E4C  354E               	lslf	main@i_338^(0+128),w
  9217  0E4D  3E20               	addlw	(low (_B25k| (0+1024)))& (0+255)
  9218  0E4E  0086               	movwf	6
  9219  0E4F  3004               	movlw	4	; select bank8/9
  9220  0E50  0087               	movwf	7
  9221  0E51  3F40               	moviw [0]fsr1
  9222  0E52  0026               	movlb	6	; select bank6
  9223  0E53  009C               	movwf	28	;volatile
  9224  0E54  3F41               	moviw [1]fsr1
  9225  0E55  009D               	movwf	29	;volatile
  9226  0E56                     l2943:	
  9227                           
  9228                           ;main.c: 311: }
  9229                           ;main.c: 321: if (knob_4_pos - knob4_prev >= 4 || knob_4_pos - knob4_prev <= -4) {
  9230  0E56  0022               	movlb	2	; select bank2
  9231  0E57  0954               	comf	_knob4_prev^(0+256),w
  9232  0E58  0021               	movlb	1	; select bank1
  9233  0E59  00A4               	movwf	??_main^(0+128)
  9234  0E5A  0022               	movlb	2	; select bank2
  9235  0E5B  0955               	comf	(_knob4_prev+1)^(0+256),w
  9236  0E5C  0021               	movlb	1	; select bank1
  9237  0E5D  00A5               	movwf	(??_main^(0+128)+1)
  9238  0E5E  0AA4               	incf	??_main^(0+128),f
  9239  0E5F  1903               	skipnz
  9240  0E60  0AA5               	incf	(??_main^(0+128)+1),f
  9241  0E61  085A               	movf	_knob_4_pos^(0+128),w
  9242  0E62  0724               	addwf	??_main^(0+128),w
  9243  0E63  00A6               	movwf	(??_main+2)^(0+128)
  9244  0E64  085B               	movf	(_knob_4_pos+1)^(0+128),w
  9245  0E65  3D25               	addwfc	(??_main+1)^(0+128),w
  9246  0E66  00A7               	movwf	(??_main+3)^(0+128)
  9247  0E67  0827               	movf	(??_main+3)^(0+128),w
  9248  0E68  3A80               	xorlw	128
  9249  0E69  00A8               	movwf	(??_main+4)^(0+128)
  9250  0E6A  3080               	movlw	128
  9251  0E6B  0228               	subwf	(??_main+4)^(0+128),w
  9252  0E6C  1D03               	skipz
  9253  0E6D  2E70               	goto	u3215
  9254  0E6E  3004               	movlw	4
  9255  0E6F  0226               	subwf	(??_main+2)^(0+128),w
  9256  0E70                     u3215:	
  9257  0E70  1803               	skipnc
  9258  0E71  2E8E               	goto	l2947
  9259  0E72  0022               	movlb	2	; select bank2
  9260  0E73  0954               	comf	_knob4_prev^(0+256),w
  9261  0E74  0021               	movlb	1	; select bank1
  9262  0E75  00A4               	movwf	??_main^(0+128)
  9263  0E76  0022               	movlb	2	; select bank2
  9264  0E77  0955               	comf	(_knob4_prev+1)^(0+256),w
  9265  0E78  0021               	movlb	1	; select bank1
  9266  0E79  00A5               	movwf	(??_main^(0+128)+1)
  9267  0E7A  0AA4               	incf	??_main^(0+128),f
  9268  0E7B  1903               	skipnz
  9269  0E7C  0AA5               	incf	(??_main^(0+128)+1),f
  9270  0E7D  085A               	movf	_knob_4_pos^(0+128),w
  9271  0E7E  0724               	addwf	??_main^(0+128),w
  9272  0E7F  00A6               	movwf	(??_main+2)^(0+128)
  9273  0E80  085B               	movf	(_knob_4_pos+1)^(0+128),w
  9274  0E81  3D25               	addwfc	(??_main+1)^(0+128),w
  9275  0E82  00A7               	movwf	(??_main+3)^(0+128)
  9276  0E83  0827               	movf	(??_main+3)^(0+128),w
  9277  0E84  3A80               	xorlw	128
  9278  0E85  00A8               	movwf	(??_main+4)^(0+128)
  9279  0E86  307F               	movlw	127
  9280  0E87  0228               	subwf	(??_main+4)^(0+128),w
  9281  0E88  1D03               	skipz
  9282  0E89  2E8C               	goto	u3225
  9283  0E8A  30FD               	movlw	253
  9284  0E8B  0226               	subwf	(??_main+2)^(0+128),w
  9285  0E8C                     u3225:	
  9286  0E8C  1803               	skipnc
  9287  0E8D  2ED6               	goto	l2951
  9288  0E8E                     l2947:	
  9289                           
  9290                           ;main.c: 322: knob4_prev = knob_4_pos;
  9291  0E8E  0021               	movlb	1	; select bank1
  9292  0E8F  085B               	movf	(_knob_4_pos+1)^(0+128),w
  9293  0E90  0022               	movlb	2	; select bank2
  9294  0E91  00D5               	movwf	(_knob4_prev+1)^(0+256)
  9295  0E92  0021               	movlb	1	; select bank1
  9296  0E93  085A               	movf	_knob_4_pos^(0+128),w
  9297  0E94  0022               	movlb	2	; select bank2
  9298  0E95  00D4               	movwf	_knob4_prev^(0+256)
  9299                           
  9300                           ;main.c: 323: mod_delay_time = map(knob4_prev, 0, 1023, 60, 1000);
  9301  0E96  3000               	movlw	0
  9302  0E97  0020               	movlb	0	; select bank0
  9303  0E98  00D9               	movwf	map@out_max
  9304  0E99  307A               	movlw	122
  9305  0E9A  00DA               	movwf	map@out_max+1
  9306  0E9B  3044               	movlw	68
  9307  0E9C  00DB               	movwf	map@out_max+2
  9308  0E9D  3000               	movlw	0
  9309  0E9E  00D6               	movwf	map@out_min
  9310  0E9F  3070               	movlw	112
  9311  0EA0  00D7               	movwf	map@out_min+1
  9312  0EA1  3042               	movlw	66
  9313  0EA2  00D8               	movwf	map@out_min+2
  9314  0EA3  30C0               	movlw	192
  9315  0EA4  00D3               	movwf	map@in_max
  9316  0EA5  307F               	movlw	127
  9317  0EA6  00D4               	movwf	map@in_max+1
  9318  0EA7  3044               	movlw	68
  9319  0EA8  00D5               	movwf	map@in_max+2
  9320  0EA9  3000               	movlw	0
  9321  0EAA  00D0               	movwf	map@in_min
  9322  0EAB  3000               	movlw	0
  9323  0EAC  00D1               	movwf	map@in_min+1
  9324  0EAD  3000               	movlw	0
  9325  0EAE  00D2               	movwf	map@in_min+2
  9326  0EAF  0022               	movlb	2	; select bank2
  9327  0EB0  0855               	movf	(_knob4_prev+1)^(0+256),w
  9328  0EB1  0020               	movlb	0	; select bank0
  9329  0EB2  00A1               	movwf	___awtoft@c+1
  9330  0EB3  0022               	movlb	2	; select bank2
  9331  0EB4  0854               	movf	_knob4_prev^(0+256),w
  9332  0EB5  0020               	movlb	0	; select bank0
  9333  0EB6  00A0               	movwf	___awtoft@c
  9334  0EB7  3193  237D  318C   	fcall	___awtoft
  9335  0EBA  0020               	movlb	0	; select bank0
  9336  0EBB  0820               	movf	?___awtoft,w
  9337  0EBC  00CD               	movwf	map@x
  9338  0EBD  0821               	movf	?___awtoft+1,w
  9339  0EBE  00CE               	movwf	map@x+1
  9340  0EBF  0822               	movf	?___awtoft+2,w
  9341  0EC0  00CF               	movwf	map@x+2
  9342  0EC1  3188  20D7  318C   	fcall	_map
  9343  0EC4  0020               	movlb	0	; select bank0
  9344  0EC5  084D               	movf	?_map,w
  9345  0EC6  00DF               	movwf	___fttol@f1
  9346  0EC7  084E               	movf	?_map+1,w
  9347  0EC8  00E0               	movwf	___fttol@f1+1
  9348  0EC9  084F               	movf	?_map+2,w
  9349  0ECA  00E1               	movwf	___fttol@f1+2
  9350  0ECB  3188  2050  318C   	fcall	___fttol
  9351  0ECE  0020               	movlb	0	; select bank0
  9352  0ECF  0860               	movf	?___fttol+1,w
  9353  0ED0  0022               	movlb	2	; select bank2
  9354  0ED1  00D9               	movwf	(_mod_delay_time+1)^(0+256)
  9355  0ED2  0020               	movlb	0	; select bank0
  9356  0ED3  085F               	movf	?___fttol,w
  9357  0ED4  0022               	movlb	2	; select bank2
  9358  0ED5  00D8               	movwf	_mod_delay_time^(0+256)
  9359  0ED6                     l2951:	
  9360                           
  9361                           ;main.c: 324: }
  9362                           ;main.c: 332: if (knob_5_pos - knob5_prev >= 4 || knob_5_pos - knob5_prev <= -4) {
  9363  0ED6  0022               	movlb	2	; select bank2
  9364  0ED7  0956               	comf	_knob5_prev^(0+256),w
  9365  0ED8  0021               	movlb	1	; select bank1
  9366  0ED9  00A4               	movwf	??_main^(0+128)
  9367  0EDA  0022               	movlb	2	; select bank2
  9368  0EDB  0957               	comf	(_knob5_prev+1)^(0+256),w
  9369  0EDC  0021               	movlb	1	; select bank1
  9370  0EDD  00A5               	movwf	(??_main^(0+128)+1)
  9371  0EDE  0AA4               	incf	??_main^(0+128),f
  9372  0EDF  1903               	skipnz
  9373  0EE0  0AA5               	incf	(??_main^(0+128)+1),f
  9374  0EE1  087A               	movf	_knob_5_pos,w
  9375  0EE2  0724               	addwf	??_main^(0+128),w
  9376  0EE3  00A6               	movwf	(??_main+2)^(0+128)
  9377  0EE4  087B               	movf	_knob_5_pos+1,w
  9378  0EE5  3D25               	addwfc	(??_main+1)^(0+128),w
  9379  0EE6  00A7               	movwf	(??_main+3)^(0+128)
  9380  0EE7  0827               	movf	(??_main+3)^(0+128),w
  9381  0EE8  3A80               	xorlw	128
  9382  0EE9  00A8               	movwf	(??_main+4)^(0+128)
  9383  0EEA  3080               	movlw	128
  9384  0EEB  0228               	subwf	(??_main+4)^(0+128),w
  9385  0EEC  1D03               	skipz
  9386  0EED  2EF0               	goto	u3235
  9387  0EEE  3004               	movlw	4
  9388  0EEF  0226               	subwf	(??_main+2)^(0+128),w
  9389  0EF0                     u3235:	
  9390  0EF0  1803               	skipnc
  9391  0EF1  2F0E               	goto	l2955
  9392  0EF2  0022               	movlb	2	; select bank2
  9393  0EF3  0956               	comf	_knob5_prev^(0+256),w
  9394  0EF4  0021               	movlb	1	; select bank1
  9395  0EF5  00A4               	movwf	??_main^(0+128)
  9396  0EF6  0022               	movlb	2	; select bank2
  9397  0EF7  0957               	comf	(_knob5_prev+1)^(0+256),w
  9398  0EF8  0021               	movlb	1	; select bank1
  9399  0EF9  00A5               	movwf	(??_main^(0+128)+1)
  9400  0EFA  0AA4               	incf	??_main^(0+128),f
  9401  0EFB  1903               	skipnz
  9402  0EFC  0AA5               	incf	(??_main^(0+128)+1),f
  9403  0EFD  087A               	movf	_knob_5_pos,w
  9404  0EFE  0724               	addwf	??_main^(0+128),w
  9405  0EFF  00A6               	movwf	(??_main+2)^(0+128)
  9406  0F00  087B               	movf	_knob_5_pos+1,w
  9407  0F01  3D25               	addwfc	(??_main+1)^(0+128),w
  9408  0F02  00A7               	movwf	(??_main+3)^(0+128)
  9409  0F03  0827               	movf	(??_main+3)^(0+128),w
  9410  0F04  3A80               	xorlw	128
  9411  0F05  00A8               	movwf	(??_main+4)^(0+128)
  9412  0F06  307F               	movlw	127
  9413  0F07  0228               	subwf	(??_main+4)^(0+128),w
  9414  0F08  1D03               	skipz
  9415  0F09  2F0C               	goto	u3245
  9416  0F0A  30FD               	movlw	253
  9417  0F0B  0226               	subwf	(??_main+2)^(0+128),w
  9418  0F0C                     u3245:	
  9419  0F0C  1803               	skipnc
  9420  0F0D  2F13               	goto	l189
  9421  0F0E                     l2955:	
  9422                           
  9423                           ;main.c: 333: knob5_prev = knob_5_pos;
  9424  0F0E  087B               	movf	_knob_5_pos+1,w
  9425  0F0F  0022               	movlb	2	; select bank2
  9426  0F10  00D7               	movwf	(_knob5_prev+1)^(0+256)
  9427  0F11  087A               	movf	_knob_5_pos,w
  9428  0F12  00D6               	movwf	_knob5_prev^(0+256)
  9429  0F13                     l189:	
  9430                           
  9431                           ;main.c: 334: }
  9432                           ;main.c: 347: if (mod_timer >= mod_delay_time) {
  9433  0F13  0021               	movlb	1	; select bank1
  9434  0F14  085F               	movf	(_mod_timer+1)^(0+128),w	;volatile
  9435  0F15  3A80               	xorlw	128
  9436  0F16  00A4               	movwf	??_main^(0+128)
  9437  0F17  0022               	movlb	2	; select bank2
  9438  0F18  0859               	movf	(_mod_delay_time+1)^(0+256),w
  9439  0F19  3A80               	xorlw	128
  9440  0F1A  0021               	movlb	1	; select bank1
  9441  0F1B  0224               	subwf	??_main^(0+128),w
  9442  0F1C  1D03               	skipz
  9443  0F1D  2F22               	goto	u3255
  9444  0F1E  0022               	movlb	2	; select bank2
  9445  0F1F  0858               	movf	_mod_delay_time^(0+256),w
  9446  0F20  0021               	movlb	1	; select bank1
  9447  0F21  025E               	subwf	_mod_timer^(0+128),w	;volatile
  9448  0F22                     u3255:	
  9449  0F22  1C03               	skipc
  9450  0F23  2FFE               	goto	L7
  9451                           
  9452                           ;main.c: 349: mod_counter = mod_counter + 1;
  9453  0F24  0021               	movlb	1	; select bank1
  9454  0F25  085C               	movf	_mod_counter^(0+128),w
  9455  0F26  3E01               	addlw	1
  9456  0F27  00DC               	movwf	_mod_counter^(0+128)
  9457  0F28  3000               	movlw	0
  9458  0F29  3D5D               	addwfc	(_mod_counter+1)^(0+128),w
  9459  0F2A  00DD               	movwf	(_mod_counter+1)^(0+128)
  9460                           
  9461                           ;main.c: 350: mod_timer = 0;
  9462  0F2B  01DE               	clrf	_mod_timer^(0+128)	;volatile
  9463  0F2C  01DF               	clrf	(_mod_timer+1)^(0+128)	;volatile
  9464                           
  9465                           ;main.c: 351: if (mod_counter >= 31) {
  9466  0F2D  085D               	movf	(_mod_counter+1)^(0+128),w
  9467  0F2E  3A80               	xorlw	128
  9468  0F2F  00A4               	movwf	??_main^(0+128)
  9469  0F30  3080               	movlw	128
  9470  0F31  0224               	subwf	??_main^(0+128),w
  9471  0F32  1D03               	skipz
  9472  0F33  2F36               	goto	u3265
  9473  0F34  301F               	movlw	31
  9474  0F35  025C               	subwf	_mod_counter^(0+128),w
  9475  0F36                     u3265:	
  9476  0F36  1C03               	skipc
  9477  0F37  2F3B               	goto	l2965
  9478                           
  9479                           ;main.c: 352: mod_counter = 0;
  9480  0F38  0021               	movlb	1	; select bank1
  9481  0F39  01DC               	clrf	_mod_counter^(0+128)
  9482  0F3A  01DD               	clrf	(_mod_counter+1)^(0+128)
  9483  0F3B                     l2965:	
  9484                           
  9485                           ;main.c: 353: }
  9486                           ;main.c: 354: signed int adjusted_pot_value = map(knob5_prev, 0, 1023, 1275, 0);
  9487  0F3B  3000               	movlw	0
  9488  0F3C  0020               	movlb	0	; select bank0
  9489  0F3D  00D9               	movwf	map@out_max
  9490  0F3E  3000               	movlw	0
  9491  0F3F  00DA               	movwf	map@out_max+1
  9492  0F40  3000               	movlw	0
  9493  0F41  00DB               	movwf	map@out_max+2
  9494  0F42  3060               	movlw	96
  9495  0F43  00D6               	movwf	map@out_min
  9496  0F44  309F               	movlw	159
  9497  0F45  00D7               	movwf	map@out_min+1
  9498  0F46  3044               	movlw	68
  9499  0F47  00D8               	movwf	map@out_min+2
  9500  0F48  30C0               	movlw	192
  9501  0F49  00D3               	movwf	map@in_max
  9502  0F4A  307F               	movlw	127
  9503  0F4B  00D4               	movwf	map@in_max+1
  9504  0F4C  3044               	movlw	68
  9505  0F4D  00D5               	movwf	map@in_max+2
  9506  0F4E  3000               	movlw	0
  9507  0F4F  00D0               	movwf	map@in_min
  9508  0F50  3000               	movlw	0
  9509  0F51  00D1               	movwf	map@in_min+1
  9510  0F52  3000               	movlw	0
  9511  0F53  00D2               	movwf	map@in_min+2
  9512  0F54  0022               	movlb	2	; select bank2
  9513  0F55  0857               	movf	(_knob5_prev+1)^(0+256),w
  9514  0F56  0020               	movlb	0	; select bank0
  9515  0F57  00A1               	movwf	___awtoft@c+1
  9516  0F58  0022               	movlb	2	; select bank2
  9517  0F59  0856               	movf	_knob5_prev^(0+256),w
  9518  0F5A  0020               	movlb	0	; select bank0
  9519  0F5B  00A0               	movwf	___awtoft@c
  9520  0F5C  3193  237D  318C   	fcall	___awtoft
  9521  0F5F  0020               	movlb	0	; select bank0
  9522  0F60  0820               	movf	?___awtoft,w
  9523  0F61  00CD               	movwf	map@x
  9524  0F62  0821               	movf	?___awtoft+1,w
  9525  0F63  00CE               	movwf	map@x+1
  9526  0F64  0822               	movf	?___awtoft+2,w
  9527  0F65  00CF               	movwf	map@x+2
  9528  0F66  3188  20D7  318C   	fcall	_map
  9529  0F69  0020               	movlb	0	; select bank0
  9530  0F6A  084D               	movf	?_map,w
  9531  0F6B  00DF               	movwf	___fttol@f1
  9532  0F6C  084E               	movf	?_map+1,w
  9533  0F6D  00E0               	movwf	___fttol@f1+1
  9534  0F6E  084F               	movf	?_map+2,w
  9535  0F6F  00E1               	movwf	___fttol@f1+2
  9536  0F70  3188  2050  318C   	fcall	___fttol
  9537  0F73  0020               	movlb	0	; select bank0
  9538  0F74  0860               	movf	?___fttol+1,w
  9539  0F75  0021               	movlb	1	; select bank1
  9540  0F76  00CB               	movwf	(main@adjusted_pot_value+1)^(0+128)
  9541  0F77  0020               	movlb	0	; select bank0
  9542  0F78  085F               	movf	?___fttol,w
  9543  0F79  0021               	movlb	1	; select bank1
  9544  0F7A  00CA               	movwf	main@adjusted_pot_value^(0+128)
  9545                           
  9546                           ;main.c: 355: switch (bottom_push_state) {
  9547  0F7B  2FC0               	goto	l2995
  9548  0F7C                     l2967:	
  9549                           ;main.c: 356: case 1:
  9550                           
  9551                           
  9552                           ;main.c: 357: mod_value = mod1[mod_counter];
  9553  0F7C  355C               	lslf	_mod_counter^(0+128),w
  9554  0F7D  3EA0               	addlw	(low (_mod1| (0+256)))& (0+255)
  9555  0F7E  0086               	movwf	6
  9556  0F7F  3001               	movlw	1	; select bank3/4
  9557  0F80  0087               	movwf	7
  9558  0F81  3F40               	moviw [0]fsr1
  9559  0F82  0022               	movlb	2	; select bank2
  9560  0F83  00CE               	movwf	_mod_value^(0+256)
  9561  0F84  3F41               	moviw [1]fsr1
  9562  0F85  2FA6               	goto	L4
  9563  0F86                     l2971:	
  9564                           ;main.c: 360: case 2:
  9565                           
  9566                           ;main.c: 359: break;
  9567                           
  9568                           ;main.c: 358: LATCbits.LATC6 = 0;
  9569                           
  9570                           
  9571                           ;main.c: 361: mod_value = mod2[mod_counter];
  9572  0F86  0021               	movlb	1	; select bank1
  9573  0F87  355C               	lslf	_mod_counter^(0+128),w
  9574  0F88  3EA0               	addlw	(low (_mod2| (0+512)))& (0+255)
  9575  0F89  0086               	movwf	6
  9576  0F8A  3002               	movlw	2	; select bank5/6
  9577  0F8B  0087               	movwf	7
  9578  0F8C  3F40               	moviw [0]fsr1
  9579  0F8D  0022               	movlb	2	; select bank2
  9580  0F8E  00CE               	movwf	_mod_value^(0+256)
  9581  0F8F  3F41               	moviw [1]fsr1
  9582  0F90  2FA6               	goto	L4
  9583  0F91                     l2975:	
  9584                           ;main.c: 364: case 3:
  9585                           
  9586                           ;main.c: 363: break;
  9587                           
  9588                           ;main.c: 362: LATCbits.LATC6 = 0;
  9589                           
  9590                           
  9591                           ;main.c: 365: mod_value = mod3[mod_counter];
  9592  0F91  0021               	movlb	1	; select bank1
  9593  0F92  355C               	lslf	_mod_counter^(0+128),w
  9594  0F93  3E20               	addlw	(low (_mod3| (0+768)))& (0+255)
  9595  0F94  0086               	movwf	6
  9596  0F95  3003               	movlw	3	; select bank6/7
  9597  0F96  0087               	movwf	7
  9598  0F97  3F40               	moviw [0]fsr1
  9599  0F98  0022               	movlb	2	; select bank2
  9600  0F99  00CE               	movwf	_mod_value^(0+256)
  9601  0F9A  3F41               	moviw [1]fsr1
  9602  0F9B  2FA6               	goto	L4
  9603  0F9C                     l2979:	
  9604                           ;main.c: 368: case 4:
  9605                           
  9606                           ;main.c: 367: break;
  9607                           
  9608                           ;main.c: 366: LATCbits.LATC6 = 0;
  9609                           
  9610                           
  9611                           ;main.c: 369: mod_value = mod4[mod_counter];
  9612  0F9C  0021               	movlb	1	; select bank1
  9613  0F9D  355C               	lslf	_mod_counter^(0+128),w
  9614  0F9E  3EA0               	addlw	(low (_mod4| (0+768)))& (0+255)
  9615  0F9F  0086               	movwf	6
  9616  0FA0  3003               	movlw	3	; select bank7/8
  9617  0FA1  0087               	movwf	7
  9618  0FA2  3F40               	moviw [0]fsr1
  9619  0FA3  0022               	movlb	2	; select bank2
  9620  0FA4  00CE               	movwf	_mod_value^(0+256)
  9621  0FA5  3F41               	moviw [1]fsr1
  9622  0FA6                     L4:	
  9623  0FA6  00CF               	movwf	(_mod_value+1)^(0+256)
  9624  0FA7  2FBE               	goto	l2991
  9625  0FA8                     l2983:	
  9626                           ;main.c: 372: case 5:
  9627                           
  9628                           ;main.c: 371: break;
  9629                           
  9630                           ;main.c: 370: LATCbits.LATC6 = 0;
  9631                           
  9632                           
  9633                           ;main.c: 373: mod_value = mod1[mod_counter];
  9634  0FA8  0021               	movlb	1	; select bank1
  9635  0FA9  355C               	lslf	_mod_counter^(0+128),w
  9636  0FAA  3EA0               	addlw	(low (_mod1| (0+256)))& (0+255)
  9637  0FAB  0086               	movwf	6
  9638  0FAC  3001               	movlw	1	; select bank3/4
  9639  0FAD  0087               	movwf	7
  9640  0FAE  3F40               	moviw [0]fsr1
  9641  0FAF  0022               	movlb	2	; select bank2
  9642  0FB0  00CE               	movwf	_mod_value^(0+256)
  9643  0FB1  3F41               	moviw [1]fsr1
  9644  0FB2  00CF               	movwf	(_mod_value+1)^(0+256)
  9645                           
  9646                           ;main.c: 374: adjusted_pot_value = 1275;
  9647  0FB3  30FB               	movlw	251
  9648  0FB4  0021               	movlb	1	; select bank1
  9649  0FB5  00CA               	movwf	main@adjusted_pot_value^(0+128)
  9650  0FB6  3004               	movlw	4
  9651  0FB7  00CB               	movwf	(main@adjusted_pot_value^(0+128)+1)
  9652                           
  9653                           ;main.c: 375: LATCbits.LATC6 = 1;
  9654  0FB8  0022               	movlb	2	; select bank2
  9655  0FB9  170E               	bsf	14,6	;volatile
  9656                           
  9657                           ;main.c: 376: break;
  9658  0FBA  2FDA               	goto	l2997
  9659  0FBB                     l2989:	
  9660                           ;main.c: 377: case 6:
  9661                           
  9662                           
  9663                           ;main.c: 378: mod_value = 0;
  9664  0FBB  0022               	movlb	2	; select bank2
  9665  0FBC  01CE               	clrf	_mod_value^(0+256)
  9666  0FBD  01CF               	clrf	(_mod_value+1)^(0+256)
  9667  0FBE                     l2991:	
  9668                           
  9669                           ;main.c: 379: LATCbits.LATC6 = 0;
  9670  0FBE  130E               	bcf	14,6	;volatile
  9671                           
  9672                           ;main.c: 381: }
  9673                           
  9674                           ;main.c: 380: break;
  9675  0FBF  2FDA               	goto	l2997
  9676  0FC0                     l2995:	
  9677                           
  9678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9679                           ; Switch size 1, requested type "space"
  9680                           ; Number of cases is 1, Range of values is 0 to 0
  9681                           ; switch strategies available:
  9682                           ; Name         Instructions Cycles
  9683                           ; simple_byte            4     3 (average)
  9684                           ; direct_byte            8     6 (fixed)
  9685                           ; jumptable            260     6 (fixed)
  9686                           ;	Chosen strategy is simple_byte
  9687  0FC0  0021               	movlb	1	; select bank1
  9688  0FC1  0867               	movf	(_bottom_push_state+1)^(0+128),w
  9689  0FC2  3A00               	xorlw	0	; case 0
  9690  0FC3  1903               	skipnz
  9691  0FC4  2FC6               	goto	l3087
  9692  0FC5  2FDA               	goto	l2997
  9693  0FC6                     l3087:	
  9694                           
  9695                           ; Switch size 1, requested type "space"
  9696                           ; Number of cases is 6, Range of values is 1 to 6
  9697                           ; switch strategies available:
  9698                           ; Name         Instructions Cycles
  9699                           ; simple_byte           19    10 (average)
  9700                           ; direct_byte           21     9 (fixed)
  9701                           ; jumptable            263     9 (fixed)
  9702                           ;	Chosen strategy is simple_byte
  9703  0FC6  0866               	movf	_bottom_push_state^(0+128),w
  9704  0FC7  3A01               	xorlw	1	; case 1
  9705  0FC8  1903               	skipnz
  9706  0FC9  2F7C               	goto	l2967
  9707  0FCA  3A03               	xorlw	3	; case 2
  9708  0FCB  1903               	skipnz
  9709  0FCC  2F86               	goto	l2971
  9710  0FCD  3A01               	xorlw	1	; case 3
  9711  0FCE  1903               	skipnz
  9712  0FCF  2F91               	goto	l2975
  9713  0FD0  3A07               	xorlw	7	; case 4
  9714  0FD1  1903               	skipnz
  9715  0FD2  2F9C               	goto	l2979
  9716  0FD3  3A01               	xorlw	1	; case 5
  9717  0FD4  1903               	skipnz
  9718  0FD5  2FA8               	goto	l2983
  9719  0FD6  3A03               	xorlw	3	; case 6
  9720  0FD7  1903               	skipnz
  9721  0FD8  2FBB               	goto	l2989
  9722  0FD9  2FDA               	goto	l2997
  9723  0FDA                     l2997:	
  9724                           
  9725                           ;main.c: 382: mod_value = modulation(mod_value, adjusted_pot_value);
  9726  0FDA  0022               	movlb	2	; select bank2
  9727  0FDB  084F               	movf	(_mod_value+1)^(0+256),w
  9728  0FDC  0020               	movlb	0	; select bank0
  9729  0FDD  00AF               	movwf	modulation@x+1
  9730  0FDE  0022               	movlb	2	; select bank2
  9731  0FDF  084E               	movf	_mod_value^(0+256),w
  9732  0FE0  0020               	movlb	0	; select bank0
  9733  0FE1  00AE               	movwf	modulation@x
  9734  0FE2  0021               	movlb	1	; select bank1
  9735  0FE3  084B               	movf	(main@adjusted_pot_value+1)^(0+128),w
  9736  0FE4  0020               	movlb	0	; select bank0
  9737  0FE5  00B1               	movwf	modulation@y+1
  9738  0FE6  0021               	movlb	1	; select bank1
  9739  0FE7  084A               	movf	main@adjusted_pot_value^(0+128),w
  9740  0FE8  0020               	movlb	0	; select bank0
  9741  0FE9  00B0               	movwf	modulation@y
  9742  0FEA  3195  2513         	fcall	_modulation
  9743  0FEC  0020               	movlb	0	; select bank0
  9744  0FED  082F               	movf	?_modulation+1,w
  9745  0FEE  0022               	movlb	2	; select bank2
  9746  0FEF  00CF               	movwf	(_mod_value+1)^(0+256)
  9747  0FF0  0020               	movlb	0	; select bank0
  9748  0FF1  082E               	movf	?_modulation,w
  9749  0FF2  0022               	movlb	2	; select bank2
  9750  0FF3  00CE               	movwf	_mod_value^(0+256)
  9751                           
  9752                           ;main.c: 383: CCPR9 = mod_value;
  9753  0FF4  084F               	movf	(_mod_value+1)^(0+256),w
  9754  0FF5  002C               	movlb	12	; select bank12
  9755  0FF6  009B               	movwf	27	;volatile
  9756  0FF7  0022               	movlb	2	; select bank2
  9757  0FF8  084E               	movf	_mod_value^(0+256),w
  9758  0FF9  002C               	movlb	12	; select bank12
  9759  0FFA  009A               	movwf	26	;volatile
  9760                           
  9761                           ;main.c: 384: mod_timer = 0;
  9762  0FFB  0021               	movlb	1	; select bank1
  9763  0FFC  01DE               	clrf	_mod_timer^(0+128)	;volatile
  9764  0FFD  01DF               	clrf	(_mod_timer+1)^(0+128)	;volatile
  9765  0FFE                     L7:	
  9766  0FFE  3181  299F         	goto	l2767
  9767  1000                     __end_of_main:	


Data Sizes:
    Strings     0
    Constant    0
    Data        924
    BSS         136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     77      79
    BANK1            80     48      80
    BANK2            80      0      58
    BANK3            80      0      58
    BANK4            80      0      64
    BANK5            80      0      58
    BANK6            80      0      58
    BANK7            80      0      58
    BANK8            80      0      80
    BANK9            80      0      80
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           50      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> myBuf(BANK4[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> myBuf(BANK4[64]), 


Critical Paths under _main in COMMON

    _wait_ms->___lmul
    ___awtoft->___ftpack
    _modulation->___aldiv
    ___aldiv->___wmul
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    _FLASH_WriteWord->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fttol
    _wait_ms->___lmul
    _set_subdivision->___fttol
    ___fttol->_map
    _modulation->___aldiv
    _map->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    _FLASH_WriteWord->_FLASH_WriteBlock

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_set_subdivision

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                44    44      0   32374
                                              4 BANK1     44    44      0
                _ConfigureOscillator
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                            _InitApp
                            ___aldiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                        _adc_convert
                                _map
                         _modulation
                    _set_leds_bottom
                       _set_leds_top
                    _set_subdivision
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _wait_ms                                              2     0      2     636
                                              4 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     220
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _set_subdivision                                      4     0      4    8287
                                              0 BANK1      4     0      4
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4    1148
                                             63 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    3281
                                              0 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _set_leds_top                                         2     0      2     150
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _set_leds_bottom                                      2     0      2     150
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _modulation                                          12     8      4     971
                                             14 BANK0     12     8      4
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     556
                                              8 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _map                                                 18     3     15   11884
                                             45 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     237
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3164
                                             13 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2862
                                             29 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3524
                                              0 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2070
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _adc_convert                                          4     2      2      22
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
                           _init_pwm
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
                        _init_timer0
                        _init_timer2
 ---------------------------------------------------------------------------------
 (3) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_WriteWord                                     10     5      5    1934
                                              8 COMMON     1     1      0
                                              7 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    10     7      3     734
                                              5 COMMON     3     0      3
                                              0 BANK0      7     7      0
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     3     1      2     131
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     323
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _FLASH_ReadWord
   _FLASH_WriteWord
     _FLASH_ReadWord
     _FLASH_WriteBlock
       _FLASH_EraseBlock
   _InitApp
     _init_adc
     _init_pwm
       _init_timer0
       _init_timer2
   ___aldiv
     ___wmul (ARG)
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     _map (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _adc_convert
   _map
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   _modulation
     ___aldiv
       ___wmul (ARG)
     ___wmul
   _set_leds_bottom
   _set_leds_top
   _set_subdivision
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       _map (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
   _wait_ms
     ___lmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     30      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3A       9       72.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3A      11       72.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3A      15       72.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0     2AD      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      3A      18       72.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      3A      20       72.5%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      50      24      100.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     2AD      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              32      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Jun 20 11:03:26 2016

                   __CFG_CP$OFF 0000             ___wmul@multiplicand 0074                    ___ftadd@exp1 002C  
                  ___ftadd@exp2 002B                    ___ftadd@sign 002A                             l310 15ED  
                           l214 13BA                             l311 15F4                             l312 15FB  
                           l144 021B                             l401 134E                             l313 161B  
                           l153 02CE                             l306 15D8                             l330 1624  
                           l331 162B                             l139 01D8                             l308 15DF  
                           l332 1632                             l164 0497                             l341 1326  
                           l309 15E6                             l333 1639                             l149 0299  
                           l334 1640                             l318 0740                             l158 033F  
                           l335 1660                             l175 060A                             l328 161D  
                           l169 0500                             l189 0F13                             l456 178F  
                           l393 1775                             l570 16FE                             l562 16E3  
          __size_of_adc_convert 0013                             l653 08BD                             l569 16F6  
                           l593 0AAA                             _PR2 001B                             _map 08D7  
                           _isr 0004                             _tap 0120                    __CFG_BORV$LO 0000  
                           wreg 0009                    __CFG_IESO$ON 0000                ?_FLASH_WriteWord 0027  
                  __CFG_FOSC$HS 0000         __end_of_set_leds_bottom 161C  FLASH_WriteBlock@flashWordArray 0077  
                  __CFG_LVP$OFF 0000                    ___ftdiv@cntr 0047                    ___ftdiv@sign 004C  
                          _B25k 0420                            l2001 0A9C                            l2011 0ACE  
                          l2003 0AA6                            l2021 0AE9                            l2007 0ABC  
                          l2031 0979                            l2103 07C5                            l2051 09D0  
                          l2107 07CD                            l2131 0869                            l2037 098F  
                          l2151 08A7                            l2073 0758                            l2059 09E9  
                          l2091 07A9                            l2163 08CE                            l2157 08B4  
                          l2149 0899                            l2095 07B1                            l2079 076E  
                          l2183 1647                            l2159 08C0                            l2193 1602  
                          l3091 164C                            l3093 1607                            l2701 06FA  
                          l1751 16C0                            l3087 0FC6                            l1761 16E8  
                          l1753 16CA                            l1921 17B0                            l1913 17A0  
                          l3089 072C                            l2705 0726                            l2801 024F  
                          l2651 173A                            l1763 16F0                            l1755 16CF  
                          l1747 16B9                            l1931 17DE                            l1923 17BE  
                          l2803 0257                            l2725 15C1                            l2821 02D8  
                          l2663 1760                            l2719 15A3                            l1935 17E9  
                          l1961 0A33                            l2817 02C4                            l2809 02A3  
                          l1971 0A49                            l1939 17F7                            l1891 1402  
                          l2931 0DC1                            l2923 0D64                            l2915 063E  
                          l2851 0344                            l1965 0A3A                            l1877 1348  
                          l2693 0649                            l2917 0CFF                            l2781 01E2  
                          l2757 0170                            ?_map 004D                            l1991 0A80  
                          l1983 0A63                            l2687 1388                            l2695 0676  
                          l1895 140D                            l2951 0ED6                            l2943 0E56  
                          l2935 0DF9                            l2919 0D2C                            l2775 01BA  
                          l2767 019F                            l1993 0A85                            l2697 06A2  
                          l1995 0A89                            l2699 06CE                            l2971 0F86  
                          l2955 0F0E                            l2947 0E8E                            l2859 036D  
                          l1989 0A76                            l2965 0F3B                            l2877 04CB  
                          l2885 0510                            l2789 01FC                            l2991 0FBE  
                          l2983 0FA8                            l2975 0F91                            l2967 0F7C  
                          l2879 04D3                            l2979 0F9C                            l2995 0FC0  
                          l2899 056F                            l2989 0FBB                            l2997 0FDA  
                          ?_isr 0070                            u2005 09B1                            u2015 09D1  
                          u3000 02CC                            u2025 09E0                            u2105 07B2  
                          u2035 09EA                            u2115 07B8                            u1415 16C5  
                          u2145 07CE                            u2225 089A                            u3105 04BB  
                          u1435 16DE                            u2155 07D4                            u2075 077A  
                          u2085 078A                            u1605 140E                            u3205 0DF7  
                          u3045 02E5                            u1455 16EB                            u2255 08B5  
                          u1615 1415                            u3215 0E70                            u3135 0553  
                          u1705 17DF                            u3225 0E8C                            u3145 056C  
                          u3065 034E                            u2195 0870                            u3235 0EF0  
                          u3155 062E                            u3075 035A                            u1565 134F  
                          u3245 0F0C                            u3085 0366                            u1495 1705  
                          u1575 1354                            u3255 0F22                            u3175 0D46  
                          u3095 037A                            u1665 17B3                            u3265 0F36  
                          u3185 0D62                            u1835 0A64                            u3195 0DDB  
                          u1925 0A9D                            u1685 17BF                            u1695 17D3  
                          u1865 0A77                            u2850 016E                            u2915 01F5  
                          u2925 023F                            u2775 1726                            u1895 0A8A  
                          u2960 02AD                            i1l18 003F                            u2970 02AE  
                          u1995 09A1                            u2980 02C2                            u2885 01B3  
                  __CFG_WRT$OFF 0000                   __CFG_FCMEN$ON 0000                            _mod1 01A0  
                          _mod2 02A0                            _mod3 0320                            _mod4 03A0  
                          _main 00EC                    ___ftpack@arg 0072                    ___ftpack@exp 0075  
                          fsr0h 0005                            fsr1h 0007                            fsr0l 0004  
                          indf0 0000                            indf1 0001                            fsr1l 0006  
                          map@x 004D                            btemp 007E               ?_FLASH_WriteBlock 0075  
                 __CFG_BOREN$ON 0000                            ltemp 007E                            start 0044  
                          ttemp 007E                            wtemp 007E              ??_FLASH_WriteBlock 0020  
                 __CFG_MCLRE$ON 0000                    ___ftmul@cntr 003B                    ___ftmul@sign 003C  
               __end_of_InitApp 13F9                    ___fttol@exp1 006C                           ??_map 007A  
                  ___fttol@lval 0068                           ??_isr 0070                 __end_of___aldiv 1800  
                         ?_main 0070                 __end_of___ftadd 0B01                           _CCPR1 0291  
                         _CCPR2 0298                           _CCPR3 0311                           _CCPR4 0318  
                         _CCPR5 031C                           _CCPR9 061A                   __CFG_WDTE$OFF 0000  
               __end_of___ftdiv 0A0B                 __end_of___ftneg 12E3                 __end_of___ftmul 07F5  
               __end_of___fttol 08D7                           _iB25k 04A0             _ConfigureOscillator 12D0  
                  ?_init_timer0 0070                    ?_init_timer2 0070             ___lmul@multiplicand 0076  
                 ___awtoft@sign 0025                           _delay 23F2                           _myBuf 0220  
                 ___ftpack@sign 0076                           _timer 00E2                           main@i 00C8  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                 __end_of_wait_ms 13C9                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
          ?_ConfigureOscillator 0070                 __initialization 0046                    __end_of_main 1000  
                __CFG_LPBOR$OFF 0000                 _set_subdivision 0648                          ??_main 00A4  
                 ___fttol@sign1 0067         __size_of_FLASH_ReadWord 0019                ?_set_leds_bottom 0072  
     FLASH_WriteBlock@writeAddr 0075                          _ADRESH 009C                          _ADRESL 009B  
           _baseline_delay_time 00E4                __end_of___awtoft 139F                __end_of___ftpack 1715  
                        i1l2271 0031                          i1l2265 001F                          u233_25 002A  
                        u234_25 003B                          _PMADRH 0192                          _PMADRL 0191  
                        _PMDATH 0194                          _PMDATL 0193                          _PMCON2 0196  
     __size_of_FLASH_EraseBlock 001C                       ??_InitApp 0072           ??_ConfigureOscillator 0072  
                __CFG_PWRTE$OFF 0000                          ___lmul 13F9                       ??___aldiv 0078  
                        ___wmul 1346   FLASH_WriteWord@blockStartAddr 002D                       ??___ftadd 0026  
                __CFG_STVREN$ON 0000                       ??___ftdiv 0043                       ??___ftneg 0075  
                     ??___ftmul 0033                       ??___fttol 0063             FLASH_WriteWord@word 002A  
              __end_of_init_adc 12F6                __end_of_init_pwm 1592           ___ftmul@f3_as_product 0038  
                  __pdataBIGRAM 23F2         FLASH_ReadWord@flashAddr 0072                       ??_wait_ms 007A  
       __end_of__initialization 00E8                      ___ftadd@f1 0020                      ___ftadd@f2 0023  
                    ___ftdiv@f1 0040                      ___ftdiv@f2 003D                      ___ftdiv@f3 0048  
                _top_push_state 00EE                      ___ftneg@f1 0072                      ___awtoft@c 0020  
       __end_of_set_subdivision 0741                      ___ftmul@f1 002D                      ___ftmul@f2 0030  
                    ___fttol@f1 005F                  __pcstackCOMMON 0070                    __pidataBANK1 130E  
                  __pidataBANK2 07F5                    __pidataBANK3 14D9                    __pidataBANK5 149F  
                  __pidataBANK6 1465                    __pidataBANK7 142B                    __pidataBANK8 0800  
                  __pidataBANK9 1661                FLASH_WriteWord@i 002F                  _OPTION_REGbits 0095  
   FLASH_WriteBlock@GIEBitValue 0025            __size_of_init_timer0 0007            __size_of_init_timer2 0009  
                    __pbssBANK0 006D                      __pbssBANK1 00D0                      __pbssBANK2 0120  
                    __pbssBANK4 0220                 __CFG_VCAPEN$OFF 0000                      _delay_time 00E8  
                    _delayfound 006D                      __pmaintext 00EC                         ?___lmul 0072  
                       ?___wmul 0072                      __pintentry 0004                   ??_adc_convert 0074  
                ___lmul@product 0020                       ?___awtoft 0020                       ?___ftpack 0072  
     __size_of_FLASH_WriteBlock 0069                  _FLASH_ReadWord 132D                     modulation@x 002E  
                   modulation@y 0030                _FLASH_EraseBlock 1361        __size_of_FLASH_WriteWord 0045  
                     ?_init_adc 0070                       ?_init_pwm 0070                         _InitApp 13C9  
                 ?_set_leds_top 0072                      _knob1_prev 00EA                      _knob2_prev 0150  
                    _knob3_prev 0152                      _knob4_prev 0154                      _knob5_prev 0156  
              ?_set_subdivision 00A0                         ___aldiv 177E                 __size_of___lmul 0032  
                       ___ftadd 0A0B                         ___ftdiv 0962                         ___ftneg 12DB  
                    _knob_1_pos 00D4                      _knob_2_pos 00D6                 __size_of___wmul 001B  
                       ___ftmul 0741                      _knob_3_pos 00D8                         ___fttol 0850  
                    _knob_4_pos 00DA                      _knob_5_pos 007A          __end_of_FLASH_ReadWord 1346  
                    ??___awtoft 0023                      ??___ftpack 0077                         __ptext1 139F  
                       __ptext2 13F9                         __ptext3 0648                         __ptext4 0850  
                       __ptext5 137D                         __ptext6 161C                         __ptext7 15D7  
                       __ptext8 1513                         __ptext9 1346                       _T2CONbits 001C  
                  __size_of_map 008B                    __size_of_isr 0040             __end_of_adc_convert 132D  
              ___aldiv@dividend 0024                         _wait_ms 139F                         clrloop0 1303  
          end_of_initialization 00E8                      _modulation 1513                         init_ram 12F6  
                    ??_init_adc 0072                         initloop 12F7                      ??_init_pwm 0072  
                ??_set_leds_top 0074                ___aldiv@quotient 002A                         psplit$0 1E003B  
                   wait_ms@time 0024       FLASH_ReadWord@GIEBitValue 0074                 ?_FLASH_ReadWord 0072  
                     _PORTBbits 000D                       _PORTDbits 000F                       _PORTEbits 0010  
                     _TRISBbits 008D                       _TRISCbits 008E                       _TRISDbits 008F  
                     _TRISEbits 0090                       _TRISFbits 030C                       _TRISGbits 030D  
                     _SPI_Value 014C            pnum$maintext_split_1 003B     __end_of_ConfigureOscillator 12D4  
                    map@out_max 0059                      map@out_min 0056                     _CCP1CONbits 0293  
                   ___ftdiv@exp 004B        __size_of_set_leds_bottom 0045                     _CCP2CONbits 029A  
                   _CCP3CONbits 0313                     _CCP4CONbits 031A                     _CCP5CONbits 031E  
             FLASH_WriteBlock@i 0026                     _CCP6CONbits 0613                     _CCP7CONbits 0616  
                   ___ftmul@exp 0037              adc_convert@channel 0075                     _CCP8CONbits 0619  
             ??_FLASH_WriteWord 0078                     _CCP9CONbits 061C                  __end_of___lmul 142B  
                 __pidataBIGRAM 0B01                  __end_of___wmul 1361                     _adc_convert 131A  
              _FLASH_WriteBlock 1715             start_initialization 0046                     __end_of_map 0962  
                   __end_of_isr 0044                     ?_modulation 002E                        ??___lmul 007A  
                      ??___wmul 0076                     __pdataBANK1 00E4                     __pdataBANK2 0150  
                   __pdataBANK3 01A0                     __pdataBANK5 02A0                     __pdataBANK6 0320  
                   __pdataBANK7 03A0                     __pdataBANK8 0420                     __pdataBANK9 04A0  
   FLASH_EraseBlock@GIEBitValue 0074                   _tap_iteration 00EC        __end_of_FLASH_EraseBlock 137D  
             __size_of___awtoft 0022               __size_of___ftpack 0064                   ??_init_timer0 0072  
                 ??_init_timer2 0072                     __pbssCOMMON 007A            __end_of_set_leds_top 1661  
                     ___latbits 0003                    _bypass_state 00D0                   __pcstackBANK0 0020  
                 __pcstackBANK1 00A0                   _delay_counter 00D2                        ?_InitApp 0070  
             __size_of_init_adc 000A               __size_of_init_pwm 0041                        ?___aldiv 0020  
             ??_set_leds_bottom 0074                        ?___ftadd 0020                        ?___ftdiv 003D  
                      ?___ftneg 0072                        ?___ftmul 002D                        ?___fttol 005F  
           __size_of_modulation 003E                        _CCPTMRS0 029D                        _CCPTMRS1 029E  
                      _CCPTMRS2 029F                        ?_wait_ms 0024        FLASH_WriteWord@flashAddr 0027  
FLASH_WriteBlock@blockStartAddr 0023             __end_of_init_timer0 12DB             __end_of_init_timer2 12EC  
                     _mod_value 014E                       _mod_timer 00DE                 ___aldiv@divisor 0020  
               ___aldiv@counter 0028                  ___wmul@product 0076                        _LATCbits 010E  
                      _LATDbits 010F                        _LATFbits 038C                        _LATGbits 038D  
                _mod_delay_time 0158                       clear_ram0 1302                       _tap_timer 00E0  
                 set_leds_top@x 0072       FLASH_EraseBlock@startAddr 0072                ??_FLASH_ReadWord 0074  
                     map@in_max 0053                       map@in_min 0050                      _ADCON0bits 009D  
                    _ADCON1bits 009E                       main@i_337 00CC                       main@i_338 00CE  
      __size_of_set_subdivision 00F9               ___wmul@multiplier 0072                set_subdivision@x 00A0  
              set_subdivision@y 00A2               ___lmul@multiplier 0072                 _FLASH_WriteWord 1592  
      __end_of_FLASH_WriteBlock 177E                __size_of_InitApp 0030                      _APFCONbits 011D  
              __size_of___aldiv 0082                    pnum$maintext 001E                __size_of___ftadd 00F6  
              __size_of___ftdiv 00A9                    ?_adc_convert 0072                __size_of___ftneg 0008  
              __size_of___ftmul 00B4                __size_of___fttol 0087                        ___awtoft 137D  
         __size_of_set_leds_top 0045                        ___ftpack 16B1                        _map$1507 005C  
                    _ANSELBbits 018D                      _ANSELEbits 0190                set_leds_bottom@x 0072  
                   _init_timer0 12D4                     _init_timer2 12E3                        __ptext10 177E  
                      __ptext11 08D7                        __ptext20 12E3                        __ptext12 12DB  
                      __ptext21 12D4                        __ptext13 0741                        __ptext22 12EC  
                      __ptext14 0962                        __ptext23 1592                        __ptext15 0A0B  
                      __ptext24 1715                        __ptext16 16B1                        __ptext25 1361  
                      __ptext17 131A                        __ptext26 132D                        __ptext18 13C9  
                      __ptext27 12D0                        __ptext19 1551                __size_of_wait_ms 002A  
         FLASH_WriteWord@ramBuf 0029           FLASH_WriteWord@offset 002C                    ??_modulation 0032  
                   _mod_counter 00DC                        _init_adc 12EC                   __size_of_main 0F14  
                      _init_pwm 1551    __size_of_ConfigureOscillator 0004                    _set_leds_top 161C  
                      int$flags 007E               ?_FLASH_EraseBlock 0072              __end_of_modulation 1551  
            ??_FLASH_EraseBlock 0074                      _INTCONbits 000B         __end_of_FLASH_WriteWord 15D7  
             ??_set_subdivision 007A                        intlevel1 0000                 _set_leds_bottom 15D7  
                    _PMCON1bits 0195               __CFG_CLKOUTEN$OFF 0000                      _OSCCONbits 0099  
                  wait_ms@timel 0148                    ___aldiv@sign 0029          main@adjusted_pot_value 00CA  
                  _CCP10CONbits 061F               _bottom_push_state 00E6  
