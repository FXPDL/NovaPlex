

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Dec 26 22:47:51 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	idataBANK2,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	idataBANK5,global,class=CODE,delta=2
    10                           	psect	idataBANK6,global,class=CODE,delta=2
    11                           	psect	idataBANK7,global,class=CODE,delta=2
    12                           	psect	idataBANK8,global,class=CODE,delta=2
    13                           	psect	idataBANK10,global,class=CODE,delta=2
    14                           	psect	idataBIGRAM,global,class=CODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	dataBIGRAM,global,delta=1
    17                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    25                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    27                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    28                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    29                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1
    30                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1
    31                           	psect	dataBANK10,global,class=BANK10,space=1,delta=1
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	inittext,global,class=CODE,delta=2
    34                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    35                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    36                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    37                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    38                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    39                           	psect	text1,local,class=CODE,merge=1,delta=2
    40                           	psect	text2,local,class=CODE,merge=1,delta=2
    41                           	psect	text3,local,class=CODE,merge=1,delta=2
    42                           	psect	text4,local,class=CODE,merge=1,delta=2
    43                           	psect	text5,local,class=CODE,merge=1,delta=2
    44                           	psect	text6,local,class=CODE,merge=1,delta=2
    45                           	psect	text7,local,class=CODE,merge=1,delta=2
    46                           	psect	text8,local,class=CODE,merge=1,delta=2
    47                           	psect	text9,local,class=CODE,merge=1,delta=2
    48                           	psect	text10,local,class=CODE,merge=1,delta=2
    49                           	psect	text11,local,class=CODE,merge=1,delta=2
    50                           	psect	text12,local,class=CODE,merge=1,delta=2
    51                           	psect	text13,local,class=CODE,merge=1,delta=2
    52                           	psect	text14,local,class=CODE,merge=1,delta=2
    53                           	psect	text15,local,class=CODE,merge=1,delta=2
    54                           	psect	text16,local,class=CODE,merge=1,delta=2
    55                           	psect	text17,local,class=CODE,merge=1,delta=2
    56                           	psect	text18,local,class=CODE,merge=1,delta=2
    57                           	psect	text19,local,class=CODE,merge=1,delta=2
    58                           	psect	text20,local,class=CODE,merge=1,delta=2
    59                           	psect	text21,local,class=CODE,merge=1,delta=2
    60                           	psect	text22,local,class=CODE,merge=1,delta=2
    61                           	psect	text23,local,class=CODE,merge=1,delta=2
    62                           	psect	text24,local,class=CODE,merge=1,delta=2
    63                           	psect	text25,local,class=CODE,merge=1,delta=2
    64                           	psect	text26,local,class=CODE,merge=1,delta=2
    65                           	psect	text27,local,class=CODE,merge=1,delta=2
    66                           	psect	text28,local,class=CODE,merge=1,delta=2
    67                           	psect	text29,local,class=CODE,merge=1,delta=2
    68                           	psect	text30,local,class=CODE,merge=1,delta=2
    69                           	psect	text31,local,class=CODE,merge=1,delta=2
    70                           	psect	text32,local,class=CODE,merge=1,delta=2
    71                           	psect	text33,local,class=CODE,merge=1,delta=2
    72                           	psect	text34,local,class=CODE,merge=1,delta=2
    73                           	psect	text35,local,class=CODE,merge=1,delta=2
    74                           	psect	text36,local,class=CODE,merge=1,delta=2
    75                           	psect	text37,local,class=CODE,merge=1,delta=2
    76                           	psect	text38,local,class=CODE,merge=1,delta=2
    77                           	psect	text39,local,class=CODE,merge=1,delta=2
    78                           	psect	text40,local,class=CODE,merge=1,delta=2
    79                           	psect	text41,local,class=CODE,merge=1,delta=2
    80                           	psect	text42,local,class=CODE,merge=1,delta=2
    81                           	psect	text43,local,class=CODE,merge=1,delta=2
    82                           	psect	text44,local,class=CODE,merge=1,delta=2
    83                           	psect	text45,local,class=CODE,merge=1,delta=2
    84                           	psect	intentry,global,class=CODE,delta=2
    85                           	psect	text47,local,class=CODE,merge=1,delta=2
    86                           	dabs	1,0x920,80
    87                           	dabs	1,0x8A0,80
    88                           	dabs	1,0x820,80
    89                           	dabs	1,0x7A0,80
    90                           	dabs	1,0x720,80
    91                           	dabs	1,0x6A0,80
    92                           	dabs	1,0x652,30
    93                           	dabs	1,0x620,50
    94                           	dabs	1,0x5A8,72
    95                           	dabs	1,0x23F2,0,_delay
    96                           	dabs	1,0x2378,0,_mod5
    97                           	dabs	1,0x7E,2
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001C                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0110                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  011D                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  018F                     	;# 
   158  0190                     	;# 
   159  0191                     	;# 
   160  0191                     	;# 
   161  0192                     	;# 
   162  0193                     	;# 
   163  0193                     	;# 
   164  0194                     	;# 
   165  0195                     	;# 
   166  0196                     	;# 
   167  0197                     	;# 
   168  0199                     	;# 
   169  0199                     	;# 
   170  0199                     	;# 
   171  019A                     	;# 
   172  019A                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019C                     	;# 
   180  019C                     	;# 
   181  019C                     	;# 
   182  019D                     	;# 
   183  019D                     	;# 
   184  019D                     	;# 
   185  019E                     	;# 
   186  019E                     	;# 
   187  019E                     	;# 
   188  019F                     	;# 
   189  019F                     	;# 
   190  019F                     	;# 
   191  020D                     	;# 
   192  020F                     	;# 
   193  0210                     	;# 
   194  0211                     	;# 
   195  0211                     	;# 
   196  0212                     	;# 
   197  0212                     	;# 
   198  0213                     	;# 
   199  0213                     	;# 
   200  0214                     	;# 
   201  0214                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0216                     	;# 
   206  0216                     	;# 
   207  0217                     	;# 
   208  0217                     	;# 
   209  0219                     	;# 
   210  021A                     	;# 
   211  021B                     	;# 
   212  021C                     	;# 
   213  021D                     	;# 
   214  021E                     	;# 
   215  021F                     	;# 
   216  028C                     	;# 
   217  028D                     	;# 
   218  0291                     	;# 
   219  0291                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0298                     	;# 
   223  0298                     	;# 
   224  0299                     	;# 
   225  029A                     	;# 
   226  029D                     	;# 
   227  029E                     	;# 
   228  029F                     	;# 
   229  030C                     	;# 
   230  030D                     	;# 
   231  0311                     	;# 
   232  0311                     	;# 
   233  0312                     	;# 
   234  0313                     	;# 
   235  0318                     	;# 
   236  0318                     	;# 
   237  0319                     	;# 
   238  031A                     	;# 
   239  031C                     	;# 
   240  031C                     	;# 
   241  031D                     	;# 
   242  031E                     	;# 
   243  038C                     	;# 
   244  038D                     	;# 
   245  0394                     	;# 
   246  0395                     	;# 
   247  0396                     	;# 
   248  040C                     	;# 
   249  040D                     	;# 
   250  0411                     	;# 
   251  0411                     	;# 
   252  0412                     	;# 
   253  0413                     	;# 
   254  0414                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  0418                     	;# 
   259  0418                     	;# 
   260  0419                     	;# 
   261  041A                     	;# 
   262  041B                     	;# 
   263  041C                     	;# 
   264  041D                     	;# 
   265  041E                     	;# 
   266  048D                     	;# 
   267  0491                     	;# 
   268  0491                     	;# 
   269  0492                     	;# 
   270  0492                     	;# 
   271  0493                     	;# 
   272  0493                     	;# 
   273  0493                     	;# 
   274  0494                     	;# 
   275  0494                     	;# 
   276  0495                     	;# 
   277  0495                     	;# 
   278  0496                     	;# 
   279  0496                     	;# 
   280  0497                     	;# 
   281  0497                     	;# 
   282  0595                     	;# 
   283  0596                     	;# 
   284  0597                     	;# 
   285  059C                     	;# 
   286  059D                     	;# 
   287  059E                     	;# 
   288  0611                     	;# 
   289  0611                     	;# 
   290  0612                     	;# 
   291  0613                     	;# 
   292  0614                     	;# 
   293  0614                     	;# 
   294  0615                     	;# 
   295  0616                     	;# 
   296  0617                     	;# 
   297  0617                     	;# 
   298  0618                     	;# 
   299  0619                     	;# 
   300  061A                     	;# 
   301  061A                     	;# 
   302  061B                     	;# 
   303  061C                     	;# 
   304  061D                     	;# 
   305  061D                     	;# 
   306  061E                     	;# 
   307  061F                     	;# 
   308  0FE4                     	;# 
   309  0FE5                     	;# 
   310  0FE6                     	;# 
   311  0FE7                     	;# 
   312  0FE8                     	;# 
   313  0FE9                     	;# 
   314  0FEA                     	;# 
   315  0FEB                     	;# 
   316  0FED                     	;# 
   317  0FEE                     	;# 
   318  0FEF                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000F                     	;# 
   335  0010                     	;# 
   336  0011                     	;# 
   337  0012                     	;# 
   338  0013                     	;# 
   339  0014                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0016                     	;# 
   343  0017                     	;# 
   344  0018                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0110                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  011D                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  018F                     	;# 
   379  0190                     	;# 
   380  0191                     	;# 
   381  0191                     	;# 
   382  0192                     	;# 
   383  0193                     	;# 
   384  0193                     	;# 
   385  0194                     	;# 
   386  0195                     	;# 
   387  0196                     	;# 
   388  0197                     	;# 
   389  0199                     	;# 
   390  0199                     	;# 
   391  0199                     	;# 
   392  019A                     	;# 
   393  019A                     	;# 
   394  019A                     	;# 
   395  019B                     	;# 
   396  019B                     	;# 
   397  019B                     	;# 
   398  019B                     	;# 
   399  019B                     	;# 
   400  019C                     	;# 
   401  019C                     	;# 
   402  019C                     	;# 
   403  019D                     	;# 
   404  019D                     	;# 
   405  019D                     	;# 
   406  019E                     	;# 
   407  019E                     	;# 
   408  019E                     	;# 
   409  019F                     	;# 
   410  019F                     	;# 
   411  019F                     	;# 
   412  020D                     	;# 
   413  020F                     	;# 
   414  0210                     	;# 
   415  0211                     	;# 
   416  0211                     	;# 
   417  0212                     	;# 
   418  0212                     	;# 
   419  0213                     	;# 
   420  0213                     	;# 
   421  0214                     	;# 
   422  0214                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0215                     	;# 
   426  0216                     	;# 
   427  0216                     	;# 
   428  0217                     	;# 
   429  0217                     	;# 
   430  0219                     	;# 
   431  021A                     	;# 
   432  021B                     	;# 
   433  021C                     	;# 
   434  021D                     	;# 
   435  021E                     	;# 
   436  021F                     	;# 
   437  028C                     	;# 
   438  028D                     	;# 
   439  0291                     	;# 
   440  0291                     	;# 
   441  0292                     	;# 
   442  0293                     	;# 
   443  0298                     	;# 
   444  0298                     	;# 
   445  0299                     	;# 
   446  029A                     	;# 
   447  029D                     	;# 
   448  029E                     	;# 
   449  029F                     	;# 
   450  030C                     	;# 
   451  030D                     	;# 
   452  0311                     	;# 
   453  0311                     	;# 
   454  0312                     	;# 
   455  0313                     	;# 
   456  0318                     	;# 
   457  0318                     	;# 
   458  0319                     	;# 
   459  031A                     	;# 
   460  031C                     	;# 
   461  031C                     	;# 
   462  031D                     	;# 
   463  031E                     	;# 
   464  038C                     	;# 
   465  038D                     	;# 
   466  0394                     	;# 
   467  0395                     	;# 
   468  0396                     	;# 
   469  040C                     	;# 
   470  040D                     	;# 
   471  0411                     	;# 
   472  0411                     	;# 
   473  0412                     	;# 
   474  0413                     	;# 
   475  0414                     	;# 
   476  0415                     	;# 
   477  0416                     	;# 
   478  0417                     	;# 
   479  0418                     	;# 
   480  0418                     	;# 
   481  0419                     	;# 
   482  041A                     	;# 
   483  041B                     	;# 
   484  041C                     	;# 
   485  041D                     	;# 
   486  041E                     	;# 
   487  048D                     	;# 
   488  0491                     	;# 
   489  0491                     	;# 
   490  0492                     	;# 
   491  0492                     	;# 
   492  0493                     	;# 
   493  0493                     	;# 
   494  0493                     	;# 
   495  0494                     	;# 
   496  0494                     	;# 
   497  0495                     	;# 
   498  0495                     	;# 
   499  0496                     	;# 
   500  0496                     	;# 
   501  0497                     	;# 
   502  0497                     	;# 
   503  0595                     	;# 
   504  0596                     	;# 
   505  0597                     	;# 
   506  059C                     	;# 
   507  059D                     	;# 
   508  059E                     	;# 
   509  0611                     	;# 
   510  0611                     	;# 
   511  0612                     	;# 
   512  0613                     	;# 
   513  0614                     	;# 
   514  0614                     	;# 
   515  0615                     	;# 
   516  0616                     	;# 
   517  0617                     	;# 
   518  0617                     	;# 
   519  0618                     	;# 
   520  0619                     	;# 
   521  061A                     	;# 
   522  061A                     	;# 
   523  061B                     	;# 
   524  061C                     	;# 
   525  061D                     	;# 
   526  061D                     	;# 
   527  061E                     	;# 
   528  061F                     	;# 
   529  0FE4                     	;# 
   530  0FE5                     	;# 
   531  0FE6                     	;# 
   532  0FE7                     	;# 
   533  0FE8                     	;# 
   534  0FE9                     	;# 
   535  0FEA                     	;# 
   536  0FEB                     	;# 
   537  0FED                     	;# 
   538  0FEE                     	;# 
   539  0FEF                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  000E                     	;# 
   555  000F                     	;# 
   556  0010                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001C                     	;# 
   570  008C                     	;# 
   571  008D                     	;# 
   572  008E                     	;# 
   573  008F                     	;# 
   574  0090                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0099                     	;# 
   583  009A                     	;# 
   584  009B                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  010C                     	;# 
   590  010D                     	;# 
   591  010E                     	;# 
   592  010F                     	;# 
   593  0110                     	;# 
   594  0116                     	;# 
   595  0117                     	;# 
   596  011D                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599  018F                     	;# 
   600  0190                     	;# 
   601  0191                     	;# 
   602  0191                     	;# 
   603  0192                     	;# 
   604  0193                     	;# 
   605  0193                     	;# 
   606  0194                     	;# 
   607  0195                     	;# 
   608  0196                     	;# 
   609  0197                     	;# 
   610  0199                     	;# 
   611  0199                     	;# 
   612  0199                     	;# 
   613  019A                     	;# 
   614  019A                     	;# 
   615  019A                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019C                     	;# 
   622  019C                     	;# 
   623  019C                     	;# 
   624  019D                     	;# 
   625  019D                     	;# 
   626  019D                     	;# 
   627  019E                     	;# 
   628  019E                     	;# 
   629  019E                     	;# 
   630  019F                     	;# 
   631  019F                     	;# 
   632  019F                     	;# 
   633  020D                     	;# 
   634  020F                     	;# 
   635  0210                     	;# 
   636  0211                     	;# 
   637  0211                     	;# 
   638  0212                     	;# 
   639  0212                     	;# 
   640  0213                     	;# 
   641  0213                     	;# 
   642  0214                     	;# 
   643  0214                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0216                     	;# 
   648  0216                     	;# 
   649  0217                     	;# 
   650  0217                     	;# 
   651  0219                     	;# 
   652  021A                     	;# 
   653  021B                     	;# 
   654  021C                     	;# 
   655  021D                     	;# 
   656  021E                     	;# 
   657  021F                     	;# 
   658  028C                     	;# 
   659  028D                     	;# 
   660  0291                     	;# 
   661  0291                     	;# 
   662  0292                     	;# 
   663  0293                     	;# 
   664  0298                     	;# 
   665  0298                     	;# 
   666  0299                     	;# 
   667  029A                     	;# 
   668  029D                     	;# 
   669  029E                     	;# 
   670  029F                     	;# 
   671  030C                     	;# 
   672  030D                     	;# 
   673  0311                     	;# 
   674  0311                     	;# 
   675  0312                     	;# 
   676  0313                     	;# 
   677  0318                     	;# 
   678  0318                     	;# 
   679  0319                     	;# 
   680  031A                     	;# 
   681  031C                     	;# 
   682  031C                     	;# 
   683  031D                     	;# 
   684  031E                     	;# 
   685  038C                     	;# 
   686  038D                     	;# 
   687  0394                     	;# 
   688  0395                     	;# 
   689  0396                     	;# 
   690  040C                     	;# 
   691  040D                     	;# 
   692  0411                     	;# 
   693  0411                     	;# 
   694  0412                     	;# 
   695  0413                     	;# 
   696  0414                     	;# 
   697  0415                     	;# 
   698  0416                     	;# 
   699  0417                     	;# 
   700  0418                     	;# 
   701  0418                     	;# 
   702  0419                     	;# 
   703  041A                     	;# 
   704  041B                     	;# 
   705  041C                     	;# 
   706  041D                     	;# 
   707  041E                     	;# 
   708  048D                     	;# 
   709  0491                     	;# 
   710  0491                     	;# 
   711  0492                     	;# 
   712  0492                     	;# 
   713  0493                     	;# 
   714  0493                     	;# 
   715  0493                     	;# 
   716  0494                     	;# 
   717  0494                     	;# 
   718  0495                     	;# 
   719  0495                     	;# 
   720  0496                     	;# 
   721  0496                     	;# 
   722  0497                     	;# 
   723  0497                     	;# 
   724  0595                     	;# 
   725  0596                     	;# 
   726  0597                     	;# 
   727  059C                     	;# 
   728  059D                     	;# 
   729  059E                     	;# 
   730  0611                     	;# 
   731  0611                     	;# 
   732  0612                     	;# 
   733  0613                     	;# 
   734  0614                     	;# 
   735  0614                     	;# 
   736  0615                     	;# 
   737  0616                     	;# 
   738  0617                     	;# 
   739  0617                     	;# 
   740  0618                     	;# 
   741  0619                     	;# 
   742  061A                     	;# 
   743  061A                     	;# 
   744  061B                     	;# 
   745  061C                     	;# 
   746  061D                     	;# 
   747  061D                     	;# 
   748  061E                     	;# 
   749  061F                     	;# 
   750  0FE4                     	;# 
   751  0FE5                     	;# 
   752  0FE6                     	;# 
   753  0FE7                     	;# 
   754  0FE8                     	;# 
   755  0FE9                     	;# 
   756  0FEA                     	;# 
   757  0FEB                     	;# 
   758  0FED                     	;# 
   759  0FEE                     	;# 
   760  0FEF                     	;# 
   761  0000                     	;# 
   762  0001                     	;# 
   763  0002                     	;# 
   764  0003                     	;# 
   765  0004                     	;# 
   766  0005                     	;# 
   767  0006                     	;# 
   768  0007                     	;# 
   769  0008                     	;# 
   770  0009                     	;# 
   771  000A                     	;# 
   772  000B                     	;# 
   773  000C                     	;# 
   774  000D                     	;# 
   775  000E                     	;# 
   776  000F                     	;# 
   777  0010                     	;# 
   778  0011                     	;# 
   779  0012                     	;# 
   780  0013                     	;# 
   781  0014                     	;# 
   782  0015                     	;# 
   783  0016                     	;# 
   784  0016                     	;# 
   785  0017                     	;# 
   786  0018                     	;# 
   787  0019                     	;# 
   788  001A                     	;# 
   789  001B                     	;# 
   790  001C                     	;# 
   791  008C                     	;# 
   792  008D                     	;# 
   793  008E                     	;# 
   794  008F                     	;# 
   795  0090                     	;# 
   796  0091                     	;# 
   797  0092                     	;# 
   798  0093                     	;# 
   799  0094                     	;# 
   800  0095                     	;# 
   801  0096                     	;# 
   802  0097                     	;# 
   803  0099                     	;# 
   804  009A                     	;# 
   805  009B                     	;# 
   806  009B                     	;# 
   807  009C                     	;# 
   808  009D                     	;# 
   809  009E                     	;# 
   810  010C                     	;# 
   811  010D                     	;# 
   812  010E                     	;# 
   813  010F                     	;# 
   814  0110                     	;# 
   815  0116                     	;# 
   816  0117                     	;# 
   817  011D                     	;# 
   818  018C                     	;# 
   819  018D                     	;# 
   820  018F                     	;# 
   821  0190                     	;# 
   822  0191                     	;# 
   823  0191                     	;# 
   824  0192                     	;# 
   825  0193                     	;# 
   826  0193                     	;# 
   827  0194                     	;# 
   828  0195                     	;# 
   829  0196                     	;# 
   830  0197                     	;# 
   831  0199                     	;# 
   832  0199                     	;# 
   833  0199                     	;# 
   834  019A                     	;# 
   835  019A                     	;# 
   836  019A                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019B                     	;# 
   841  019B                     	;# 
   842  019C                     	;# 
   843  019C                     	;# 
   844  019C                     	;# 
   845  019D                     	;# 
   846  019D                     	;# 
   847  019D                     	;# 
   848  019E                     	;# 
   849  019E                     	;# 
   850  019E                     	;# 
   851  019F                     	;# 
   852  019F                     	;# 
   853  019F                     	;# 
   854  020D                     	;# 
   855  020F                     	;# 
   856  0210                     	;# 
   857  0211                     	;# 
   858  0211                     	;# 
   859  0212                     	;# 
   860  0212                     	;# 
   861  0213                     	;# 
   862  0213                     	;# 
   863  0214                     	;# 
   864  0214                     	;# 
   865  0215                     	;# 
   866  0215                     	;# 
   867  0215                     	;# 
   868  0216                     	;# 
   869  0216                     	;# 
   870  0217                     	;# 
   871  0217                     	;# 
   872  0219                     	;# 
   873  021A                     	;# 
   874  021B                     	;# 
   875  021C                     	;# 
   876  021D                     	;# 
   877  021E                     	;# 
   878  021F                     	;# 
   879  028C                     	;# 
   880  028D                     	;# 
   881  0291                     	;# 
   882  0291                     	;# 
   883  0292                     	;# 
   884  0293                     	;# 
   885  0298                     	;# 
   886  0298                     	;# 
   887  0299                     	;# 
   888  029A                     	;# 
   889  029D                     	;# 
   890  029E                     	;# 
   891  029F                     	;# 
   892  030C                     	;# 
   893  030D                     	;# 
   894  0311                     	;# 
   895  0311                     	;# 
   896  0312                     	;# 
   897  0313                     	;# 
   898  0318                     	;# 
   899  0318                     	;# 
   900  0319                     	;# 
   901  031A                     	;# 
   902  031C                     	;# 
   903  031C                     	;# 
   904  031D                     	;# 
   905  031E                     	;# 
   906  038C                     	;# 
   907  038D                     	;# 
   908  0394                     	;# 
   909  0395                     	;# 
   910  0396                     	;# 
   911  040C                     	;# 
   912  040D                     	;# 
   913  0411                     	;# 
   914  0411                     	;# 
   915  0412                     	;# 
   916  0413                     	;# 
   917  0414                     	;# 
   918  0415                     	;# 
   919  0416                     	;# 
   920  0417                     	;# 
   921  0418                     	;# 
   922  0418                     	;# 
   923  0419                     	;# 
   924  041A                     	;# 
   925  041B                     	;# 
   926  041C                     	;# 
   927  041D                     	;# 
   928  041E                     	;# 
   929  048D                     	;# 
   930  0491                     	;# 
   931  0491                     	;# 
   932  0492                     	;# 
   933  0492                     	;# 
   934  0493                     	;# 
   935  0493                     	;# 
   936  0493                     	;# 
   937  0494                     	;# 
   938  0494                     	;# 
   939  0495                     	;# 
   940  0495                     	;# 
   941  0496                     	;# 
   942  0496                     	;# 
   943  0497                     	;# 
   944  0497                     	;# 
   945  0595                     	;# 
   946  0596                     	;# 
   947  0597                     	;# 
   948  059C                     	;# 
   949  059D                     	;# 
   950  059E                     	;# 
   951  0611                     	;# 
   952  0611                     	;# 
   953  0612                     	;# 
   954  0613                     	;# 
   955  0614                     	;# 
   956  0614                     	;# 
   957  0615                     	;# 
   958  0616                     	;# 
   959  0617                     	;# 
   960  0617                     	;# 
   961  0618                     	;# 
   962  0619                     	;# 
   963  061A                     	;# 
   964  061A                     	;# 
   965  061B                     	;# 
   966  061C                     	;# 
   967  061D                     	;# 
   968  061D                     	;# 
   969  061E                     	;# 
   970  061F                     	;# 
   971  0FE4                     	;# 
   972  0FE5                     	;# 
   973  0FE6                     	;# 
   974  0FE7                     	;# 
   975  0FE8                     	;# 
   976  0FE9                     	;# 
   977  0FEA                     	;# 
   978  0FEB                     	;# 
   979  0FED                     	;# 
   980  0FEE                     	;# 
   981  0FEF                     	;# 
   982  0000                     	;# 
   983  0001                     	;# 
   984  0002                     	;# 
   985  0003                     	;# 
   986  0004                     	;# 
   987  0005                     	;# 
   988  0006                     	;# 
   989  0007                     	;# 
   990  0008                     	;# 
   991  0009                     	;# 
   992  000A                     	;# 
   993  000B                     	;# 
   994  000C                     	;# 
   995  000D                     	;# 
   996  000E                     	;# 
   997  000F                     	;# 
   998  0010                     	;# 
   999  0011                     	;# 
  1000  0012                     	;# 
  1001  0013                     	;# 
  1002  0014                     	;# 
  1003  0015                     	;# 
  1004  0016                     	;# 
  1005  0016                     	;# 
  1006  0017                     	;# 
  1007  0018                     	;# 
  1008  0019                     	;# 
  1009  001A                     	;# 
  1010  001B                     	;# 
  1011  001C                     	;# 
  1012  008C                     	;# 
  1013  008D                     	;# 
  1014  008E                     	;# 
  1015  008F                     	;# 
  1016  0090                     	;# 
  1017  0091                     	;# 
  1018  0092                     	;# 
  1019  0093                     	;# 
  1020  0094                     	;# 
  1021  0095                     	;# 
  1022  0096                     	;# 
  1023  0097                     	;# 
  1024  0099                     	;# 
  1025  009A                     	;# 
  1026  009B                     	;# 
  1027  009B                     	;# 
  1028  009C                     	;# 
  1029  009D                     	;# 
  1030  009E                     	;# 
  1031  010C                     	;# 
  1032  010D                     	;# 
  1033  010E                     	;# 
  1034  010F                     	;# 
  1035  0110                     	;# 
  1036  0116                     	;# 
  1037  0117                     	;# 
  1038  011D                     	;# 
  1039  018C                     	;# 
  1040  018D                     	;# 
  1041  018F                     	;# 
  1042  0190                     	;# 
  1043  0191                     	;# 
  1044  0191                     	;# 
  1045  0192                     	;# 
  1046  0193                     	;# 
  1047  0193                     	;# 
  1048  0194                     	;# 
  1049  0195                     	;# 
  1050  0196                     	;# 
  1051  0197                     	;# 
  1052  0199                     	;# 
  1053  0199                     	;# 
  1054  0199                     	;# 
  1055  019A                     	;# 
  1056  019A                     	;# 
  1057  019A                     	;# 
  1058  019B                     	;# 
  1059  019B                     	;# 
  1060  019B                     	;# 
  1061  019B                     	;# 
  1062  019B                     	;# 
  1063  019C                     	;# 
  1064  019C                     	;# 
  1065  019C                     	;# 
  1066  019D                     	;# 
  1067  019D                     	;# 
  1068  019D                     	;# 
  1069  019E                     	;# 
  1070  019E                     	;# 
  1071  019E                     	;# 
  1072  019F                     	;# 
  1073  019F                     	;# 
  1074  019F                     	;# 
  1075  020D                     	;# 
  1076  020F                     	;# 
  1077  0210                     	;# 
  1078  0211                     	;# 
  1079  0211                     	;# 
  1080  0212                     	;# 
  1081  0212                     	;# 
  1082  0213                     	;# 
  1083  0213                     	;# 
  1084  0214                     	;# 
  1085  0214                     	;# 
  1086  0215                     	;# 
  1087  0215                     	;# 
  1088  0215                     	;# 
  1089  0216                     	;# 
  1090  0216                     	;# 
  1091  0217                     	;# 
  1092  0217                     	;# 
  1093  0219                     	;# 
  1094  021A                     	;# 
  1095  021B                     	;# 
  1096  021C                     	;# 
  1097  021D                     	;# 
  1098  021E                     	;# 
  1099  021F                     	;# 
  1100  028C                     	;# 
  1101  028D                     	;# 
  1102  0291                     	;# 
  1103  0291                     	;# 
  1104  0292                     	;# 
  1105  0293                     	;# 
  1106  0298                     	;# 
  1107  0298                     	;# 
  1108  0299                     	;# 
  1109  029A                     	;# 
  1110  029D                     	;# 
  1111  029E                     	;# 
  1112  029F                     	;# 
  1113  030C                     	;# 
  1114  030D                     	;# 
  1115  0311                     	;# 
  1116  0311                     	;# 
  1117  0312                     	;# 
  1118  0313                     	;# 
  1119  0318                     	;# 
  1120  0318                     	;# 
  1121  0319                     	;# 
  1122  031A                     	;# 
  1123  031C                     	;# 
  1124  031C                     	;# 
  1125  031D                     	;# 
  1126  031E                     	;# 
  1127  038C                     	;# 
  1128  038D                     	;# 
  1129  0394                     	;# 
  1130  0395                     	;# 
  1131  0396                     	;# 
  1132  040C                     	;# 
  1133  040D                     	;# 
  1134  0411                     	;# 
  1135  0411                     	;# 
  1136  0412                     	;# 
  1137  0413                     	;# 
  1138  0414                     	;# 
  1139  0415                     	;# 
  1140  0416                     	;# 
  1141  0417                     	;# 
  1142  0418                     	;# 
  1143  0418                     	;# 
  1144  0419                     	;# 
  1145  041A                     	;# 
  1146  041B                     	;# 
  1147  041C                     	;# 
  1148  041D                     	;# 
  1149  041E                     	;# 
  1150  048D                     	;# 
  1151  0491                     	;# 
  1152  0491                     	;# 
  1153  0492                     	;# 
  1154  0492                     	;# 
  1155  0493                     	;# 
  1156  0493                     	;# 
  1157  0493                     	;# 
  1158  0494                     	;# 
  1159  0494                     	;# 
  1160  0495                     	;# 
  1161  0495                     	;# 
  1162  0496                     	;# 
  1163  0496                     	;# 
  1164  0497                     	;# 
  1165  0497                     	;# 
  1166  0595                     	;# 
  1167  0596                     	;# 
  1168  0597                     	;# 
  1169  059C                     	;# 
  1170  059D                     	;# 
  1171  059E                     	;# 
  1172  0611                     	;# 
  1173  0611                     	;# 
  1174  0612                     	;# 
  1175  0613                     	;# 
  1176  0614                     	;# 
  1177  0614                     	;# 
  1178  0615                     	;# 
  1179  0616                     	;# 
  1180  0617                     	;# 
  1181  0617                     	;# 
  1182  0618                     	;# 
  1183  0619                     	;# 
  1184  061A                     	;# 
  1185  061A                     	;# 
  1186  061B                     	;# 
  1187  061C                     	;# 
  1188  061D                     	;# 
  1189  061D                     	;# 
  1190  061E                     	;# 
  1191  061F                     	;# 
  1192  0FE4                     	;# 
  1193  0FE5                     	;# 
  1194  0FE6                     	;# 
  1195  0FE7                     	;# 
  1196  0FE8                     	;# 
  1197  0FE9                     	;# 
  1198  0FEA                     	;# 
  1199  0FEB                     	;# 
  1200  0FED                     	;# 
  1201  0FEE                     	;# 
  1202  0FEF                     	;# 
  1203  0000                     	;# 
  1204  0001                     	;# 
  1205  0002                     	;# 
  1206  0003                     	;# 
  1207  0004                     	;# 
  1208  0005                     	;# 
  1209  0006                     	;# 
  1210  0007                     	;# 
  1211  0008                     	;# 
  1212  0009                     	;# 
  1213  000A                     	;# 
  1214  000B                     	;# 
  1215  000C                     	;# 
  1216  000D                     	;# 
  1217  000E                     	;# 
  1218  000F                     	;# 
  1219  0010                     	;# 
  1220  0011                     	;# 
  1221  0012                     	;# 
  1222  0013                     	;# 
  1223  0014                     	;# 
  1224  0015                     	;# 
  1225  0016                     	;# 
  1226  0016                     	;# 
  1227  0017                     	;# 
  1228  0018                     	;# 
  1229  0019                     	;# 
  1230  001A                     	;# 
  1231  001B                     	;# 
  1232  001C                     	;# 
  1233  008C                     	;# 
  1234  008D                     	;# 
  1235  008E                     	;# 
  1236  008F                     	;# 
  1237  0090                     	;# 
  1238  0091                     	;# 
  1239  0092                     	;# 
  1240  0093                     	;# 
  1241  0094                     	;# 
  1242  0095                     	;# 
  1243  0096                     	;# 
  1244  0097                     	;# 
  1245  0099                     	;# 
  1246  009A                     	;# 
  1247  009B                     	;# 
  1248  009B                     	;# 
  1249  009C                     	;# 
  1250  009D                     	;# 
  1251  009E                     	;# 
  1252  010C                     	;# 
  1253  010D                     	;# 
  1254  010E                     	;# 
  1255  010F                     	;# 
  1256  0110                     	;# 
  1257  0116                     	;# 
  1258  0117                     	;# 
  1259  011D                     	;# 
  1260  018C                     	;# 
  1261  018D                     	;# 
  1262  018F                     	;# 
  1263  0190                     	;# 
  1264  0191                     	;# 
  1265  0191                     	;# 
  1266  0192                     	;# 
  1267  0193                     	;# 
  1268  0193                     	;# 
  1269  0194                     	;# 
  1270  0195                     	;# 
  1271  0196                     	;# 
  1272  0197                     	;# 
  1273  0199                     	;# 
  1274  0199                     	;# 
  1275  0199                     	;# 
  1276  019A                     	;# 
  1277  019A                     	;# 
  1278  019A                     	;# 
  1279  019B                     	;# 
  1280  019B                     	;# 
  1281  019B                     	;# 
  1282  019B                     	;# 
  1283  019B                     	;# 
  1284  019C                     	;# 
  1285  019C                     	;# 
  1286  019C                     	;# 
  1287  019D                     	;# 
  1288  019D                     	;# 
  1289  019D                     	;# 
  1290  019E                     	;# 
  1291  019E                     	;# 
  1292  019E                     	;# 
  1293  019F                     	;# 
  1294  019F                     	;# 
  1295  019F                     	;# 
  1296  020D                     	;# 
  1297  020F                     	;# 
  1298  0210                     	;# 
  1299  0211                     	;# 
  1300  0211                     	;# 
  1301  0212                     	;# 
  1302  0212                     	;# 
  1303  0213                     	;# 
  1304  0213                     	;# 
  1305  0214                     	;# 
  1306  0214                     	;# 
  1307  0215                     	;# 
  1308  0215                     	;# 
  1309  0215                     	;# 
  1310  0216                     	;# 
  1311  0216                     	;# 
  1312  0217                     	;# 
  1313  0217                     	;# 
  1314  0219                     	;# 
  1315  021A                     	;# 
  1316  021B                     	;# 
  1317  021C                     	;# 
  1318  021D                     	;# 
  1319  021E                     	;# 
  1320  021F                     	;# 
  1321  028C                     	;# 
  1322  028D                     	;# 
  1323  0291                     	;# 
  1324  0291                     	;# 
  1325  0292                     	;# 
  1326  0293                     	;# 
  1327  0298                     	;# 
  1328  0298                     	;# 
  1329  0299                     	;# 
  1330  029A                     	;# 
  1331  029D                     	;# 
  1332  029E                     	;# 
  1333  029F                     	;# 
  1334  030C                     	;# 
  1335  030D                     	;# 
  1336  0311                     	;# 
  1337  0311                     	;# 
  1338  0312                     	;# 
  1339  0313                     	;# 
  1340  0318                     	;# 
  1341  0318                     	;# 
  1342  0319                     	;# 
  1343  031A                     	;# 
  1344  031C                     	;# 
  1345  031C                     	;# 
  1346  031D                     	;# 
  1347  031E                     	;# 
  1348  038C                     	;# 
  1349  038D                     	;# 
  1350  0394                     	;# 
  1351  0395                     	;# 
  1352  0396                     	;# 
  1353  040C                     	;# 
  1354  040D                     	;# 
  1355  0411                     	;# 
  1356  0411                     	;# 
  1357  0412                     	;# 
  1358  0413                     	;# 
  1359  0414                     	;# 
  1360  0415                     	;# 
  1361  0416                     	;# 
  1362  0417                     	;# 
  1363  0418                     	;# 
  1364  0418                     	;# 
  1365  0419                     	;# 
  1366  041A                     	;# 
  1367  041B                     	;# 
  1368  041C                     	;# 
  1369  041D                     	;# 
  1370  041E                     	;# 
  1371  048D                     	;# 
  1372  0491                     	;# 
  1373  0491                     	;# 
  1374  0492                     	;# 
  1375  0492                     	;# 
  1376  0493                     	;# 
  1377  0493                     	;# 
  1378  0493                     	;# 
  1379  0494                     	;# 
  1380  0494                     	;# 
  1381  0495                     	;# 
  1382  0495                     	;# 
  1383  0496                     	;# 
  1384  0496                     	;# 
  1385  0497                     	;# 
  1386  0497                     	;# 
  1387  0595                     	;# 
  1388  0596                     	;# 
  1389  0597                     	;# 
  1390  059C                     	;# 
  1391  059D                     	;# 
  1392  059E                     	;# 
  1393  0611                     	;# 
  1394  0611                     	;# 
  1395  0612                     	;# 
  1396  0613                     	;# 
  1397  0614                     	;# 
  1398  0614                     	;# 
  1399  0615                     	;# 
  1400  0616                     	;# 
  1401  0617                     	;# 
  1402  0617                     	;# 
  1403  0618                     	;# 
  1404  0619                     	;# 
  1405  061A                     	;# 
  1406  061A                     	;# 
  1407  061B                     	;# 
  1408  061C                     	;# 
  1409  061D                     	;# 
  1410  061D                     	;# 
  1411  061E                     	;# 
  1412  061F                     	;# 
  1413  0FE4                     	;# 
  1414  0FE5                     	;# 
  1415  0FE6                     	;# 
  1416  0FE7                     	;# 
  1417  0FE8                     	;# 
  1418  0FE9                     	;# 
  1419  0FEA                     	;# 
  1420  0FEB                     	;# 
  1421  0FED                     	;# 
  1422  0FEE                     	;# 
  1423  0FEF                     	;# 
  1424  0000                     	;# 
  1425  0001                     	;# 
  1426  0002                     	;# 
  1427  0003                     	;# 
  1428  0004                     	;# 
  1429  0005                     	;# 
  1430  0006                     	;# 
  1431  0007                     	;# 
  1432  0008                     	;# 
  1433  0009                     	;# 
  1434  000A                     	;# 
  1435  000B                     	;# 
  1436  000C                     	;# 
  1437  000D                     	;# 
  1438  000E                     	;# 
  1439  000F                     	;# 
  1440  0010                     	;# 
  1441  0011                     	;# 
  1442  0012                     	;# 
  1443  0013                     	;# 
  1444  0014                     	;# 
  1445  0015                     	;# 
  1446  0016                     	;# 
  1447  0016                     	;# 
  1448  0017                     	;# 
  1449  0018                     	;# 
  1450  0019                     	;# 
  1451  001A                     	;# 
  1452  001B                     	;# 
  1453  001C                     	;# 
  1454  008C                     	;# 
  1455  008D                     	;# 
  1456  008E                     	;# 
  1457  008F                     	;# 
  1458  0090                     	;# 
  1459  0091                     	;# 
  1460  0092                     	;# 
  1461  0093                     	;# 
  1462  0094                     	;# 
  1463  0095                     	;# 
  1464  0096                     	;# 
  1465  0097                     	;# 
  1466  0099                     	;# 
  1467  009A                     	;# 
  1468  009B                     	;# 
  1469  009B                     	;# 
  1470  009C                     	;# 
  1471  009D                     	;# 
  1472  009E                     	;# 
  1473  010C                     	;# 
  1474  010D                     	;# 
  1475  010E                     	;# 
  1476  010F                     	;# 
  1477  0110                     	;# 
  1478  0116                     	;# 
  1479  0117                     	;# 
  1480  011D                     	;# 
  1481  018C                     	;# 
  1482  018D                     	;# 
  1483  018F                     	;# 
  1484  0190                     	;# 
  1485  0191                     	;# 
  1486  0191                     	;# 
  1487  0192                     	;# 
  1488  0193                     	;# 
  1489  0193                     	;# 
  1490  0194                     	;# 
  1491  0195                     	;# 
  1492  0196                     	;# 
  1493  0197                     	;# 
  1494  0199                     	;# 
  1495  0199                     	;# 
  1496  0199                     	;# 
  1497  019A                     	;# 
  1498  019A                     	;# 
  1499  019A                     	;# 
  1500  019B                     	;# 
  1501  019B                     	;# 
  1502  019B                     	;# 
  1503  019B                     	;# 
  1504  019B                     	;# 
  1505  019C                     	;# 
  1506  019C                     	;# 
  1507  019C                     	;# 
  1508  019D                     	;# 
  1509  019D                     	;# 
  1510  019D                     	;# 
  1511  019E                     	;# 
  1512  019E                     	;# 
  1513  019E                     	;# 
  1514  019F                     	;# 
  1515  019F                     	;# 
  1516  019F                     	;# 
  1517  020D                     	;# 
  1518  020F                     	;# 
  1519  0210                     	;# 
  1520  0211                     	;# 
  1521  0211                     	;# 
  1522  0212                     	;# 
  1523  0212                     	;# 
  1524  0213                     	;# 
  1525  0213                     	;# 
  1526  0214                     	;# 
  1527  0214                     	;# 
  1528  0215                     	;# 
  1529  0215                     	;# 
  1530  0215                     	;# 
  1531  0216                     	;# 
  1532  0216                     	;# 
  1533  0217                     	;# 
  1534  0217                     	;# 
  1535  0219                     	;# 
  1536  021A                     	;# 
  1537  021B                     	;# 
  1538  021C                     	;# 
  1539  021D                     	;# 
  1540  021E                     	;# 
  1541  021F                     	;# 
  1542  028C                     	;# 
  1543  028D                     	;# 
  1544  0291                     	;# 
  1545  0291                     	;# 
  1546  0292                     	;# 
  1547  0293                     	;# 
  1548  0298                     	;# 
  1549  0298                     	;# 
  1550  0299                     	;# 
  1551  029A                     	;# 
  1552  029D                     	;# 
  1553  029E                     	;# 
  1554  029F                     	;# 
  1555  030C                     	;# 
  1556  030D                     	;# 
  1557  0311                     	;# 
  1558  0311                     	;# 
  1559  0312                     	;# 
  1560  0313                     	;# 
  1561  0318                     	;# 
  1562  0318                     	;# 
  1563  0319                     	;# 
  1564  031A                     	;# 
  1565  031C                     	;# 
  1566  031C                     	;# 
  1567  031D                     	;# 
  1568  031E                     	;# 
  1569  038C                     	;# 
  1570  038D                     	;# 
  1571  0394                     	;# 
  1572  0395                     	;# 
  1573  0396                     	;# 
  1574  040C                     	;# 
  1575  040D                     	;# 
  1576  0411                     	;# 
  1577  0411                     	;# 
  1578  0412                     	;# 
  1579  0413                     	;# 
  1580  0414                     	;# 
  1581  0415                     	;# 
  1582  0416                     	;# 
  1583  0417                     	;# 
  1584  0418                     	;# 
  1585  0418                     	;# 
  1586  0419                     	;# 
  1587  041A                     	;# 
  1588  041B                     	;# 
  1589  041C                     	;# 
  1590  041D                     	;# 
  1591  041E                     	;# 
  1592  048D                     	;# 
  1593  0491                     	;# 
  1594  0491                     	;# 
  1595  0492                     	;# 
  1596  0492                     	;# 
  1597  0493                     	;# 
  1598  0493                     	;# 
  1599  0493                     	;# 
  1600  0494                     	;# 
  1601  0494                     	;# 
  1602  0495                     	;# 
  1603  0495                     	;# 
  1604  0496                     	;# 
  1605  0496                     	;# 
  1606  0497                     	;# 
  1607  0497                     	;# 
  1608  0595                     	;# 
  1609  0596                     	;# 
  1610  0597                     	;# 
  1611  059C                     	;# 
  1612  059D                     	;# 
  1613  059E                     	;# 
  1614  0611                     	;# 
  1615  0611                     	;# 
  1616  0612                     	;# 
  1617  0613                     	;# 
  1618  0614                     	;# 
  1619  0614                     	;# 
  1620  0615                     	;# 
  1621  0616                     	;# 
  1622  0617                     	;# 
  1623  0617                     	;# 
  1624  0618                     	;# 
  1625  0619                     	;# 
  1626  061A                     	;# 
  1627  061A                     	;# 
  1628  061B                     	;# 
  1629  061C                     	;# 
  1630  061D                     	;# 
  1631  061D                     	;# 
  1632  061E                     	;# 
  1633  061F                     	;# 
  1634  0FE4                     	;# 
  1635  0FE5                     	;# 
  1636  0FE6                     	;# 
  1637  0FE7                     	;# 
  1638  0FE8                     	;# 
  1639  0FE9                     	;# 
  1640  0FEA                     	;# 
  1641  0FEB                     	;# 
  1642  0FED                     	;# 
  1643  0FEE                     	;# 
  1644  0FEF                     	;# 
  1645  0000                     	;# 
  1646  0001                     	;# 
  1647  0002                     	;# 
  1648  0003                     	;# 
  1649  0004                     	;# 
  1650  0005                     	;# 
  1651  0006                     	;# 
  1652  0007                     	;# 
  1653  0008                     	;# 
  1654  0009                     	;# 
  1655  000A                     	;# 
  1656  000B                     	;# 
  1657  000C                     	;# 
  1658  000D                     	;# 
  1659  000E                     	;# 
  1660  000F                     	;# 
  1661  0010                     	;# 
  1662  0011                     	;# 
  1663  0012                     	;# 
  1664  0013                     	;# 
  1665  0014                     	;# 
  1666  0015                     	;# 
  1667  0016                     	;# 
  1668  0016                     	;# 
  1669  0017                     	;# 
  1670  0018                     	;# 
  1671  0019                     	;# 
  1672  001A                     	;# 
  1673  001B                     	;# 
  1674  001C                     	;# 
  1675  008C                     	;# 
  1676  008D                     	;# 
  1677  008E                     	;# 
  1678  008F                     	;# 
  1679  0090                     	;# 
  1680  0091                     	;# 
  1681  0092                     	;# 
  1682  0093                     	;# 
  1683  0094                     	;# 
  1684  0095                     	;# 
  1685  0096                     	;# 
  1686  0097                     	;# 
  1687  0099                     	;# 
  1688  009A                     	;# 
  1689  009B                     	;# 
  1690  009B                     	;# 
  1691  009C                     	;# 
  1692  009D                     	;# 
  1693  009E                     	;# 
  1694  010C                     	;# 
  1695  010D                     	;# 
  1696  010E                     	;# 
  1697  010F                     	;# 
  1698  0110                     	;# 
  1699  0116                     	;# 
  1700  0117                     	;# 
  1701  011D                     	;# 
  1702  018C                     	;# 
  1703  018D                     	;# 
  1704  018F                     	;# 
  1705  0190                     	;# 
  1706  0191                     	;# 
  1707  0191                     	;# 
  1708  0192                     	;# 
  1709  0193                     	;# 
  1710  0193                     	;# 
  1711  0194                     	;# 
  1712  0195                     	;# 
  1713  0196                     	;# 
  1714  0197                     	;# 
  1715  0199                     	;# 
  1716  0199                     	;# 
  1717  0199                     	;# 
  1718  019A                     	;# 
  1719  019A                     	;# 
  1720  019A                     	;# 
  1721  019B                     	;# 
  1722  019B                     	;# 
  1723  019B                     	;# 
  1724  019B                     	;# 
  1725  019B                     	;# 
  1726  019C                     	;# 
  1727  019C                     	;# 
  1728  019C                     	;# 
  1729  019D                     	;# 
  1730  019D                     	;# 
  1731  019D                     	;# 
  1732  019E                     	;# 
  1733  019E                     	;# 
  1734  019E                     	;# 
  1735  019F                     	;# 
  1736  019F                     	;# 
  1737  019F                     	;# 
  1738  020D                     	;# 
  1739  020F                     	;# 
  1740  0210                     	;# 
  1741  0211                     	;# 
  1742  0211                     	;# 
  1743  0212                     	;# 
  1744  0212                     	;# 
  1745  0213                     	;# 
  1746  0213                     	;# 
  1747  0214                     	;# 
  1748  0214                     	;# 
  1749  0215                     	;# 
  1750  0215                     	;# 
  1751  0215                     	;# 
  1752  0216                     	;# 
  1753  0216                     	;# 
  1754  0217                     	;# 
  1755  0217                     	;# 
  1756  0219                     	;# 
  1757  021A                     	;# 
  1758  021B                     	;# 
  1759  021C                     	;# 
  1760  021D                     	;# 
  1761  021E                     	;# 
  1762  021F                     	;# 
  1763  028C                     	;# 
  1764  028D                     	;# 
  1765  0291                     	;# 
  1766  0291                     	;# 
  1767  0292                     	;# 
  1768  0293                     	;# 
  1769  0298                     	;# 
  1770  0298                     	;# 
  1771  0299                     	;# 
  1772  029A                     	;# 
  1773  029D                     	;# 
  1774  029E                     	;# 
  1775  029F                     	;# 
  1776  030C                     	;# 
  1777  030D                     	;# 
  1778  0311                     	;# 
  1779  0311                     	;# 
  1780  0312                     	;# 
  1781  0313                     	;# 
  1782  0318                     	;# 
  1783  0318                     	;# 
  1784  0319                     	;# 
  1785  031A                     	;# 
  1786  031C                     	;# 
  1787  031C                     	;# 
  1788  031D                     	;# 
  1789  031E                     	;# 
  1790  038C                     	;# 
  1791  038D                     	;# 
  1792  0394                     	;# 
  1793  0395                     	;# 
  1794  0396                     	;# 
  1795  040C                     	;# 
  1796  040D                     	;# 
  1797  0411                     	;# 
  1798  0411                     	;# 
  1799  0412                     	;# 
  1800  0413                     	;# 
  1801  0414                     	;# 
  1802  0415                     	;# 
  1803  0416                     	;# 
  1804  0417                     	;# 
  1805  0418                     	;# 
  1806  0418                     	;# 
  1807  0419                     	;# 
  1808  041A                     	;# 
  1809  041B                     	;# 
  1810  041C                     	;# 
  1811  041D                     	;# 
  1812  041E                     	;# 
  1813  048D                     	;# 
  1814  0491                     	;# 
  1815  0491                     	;# 
  1816  0492                     	;# 
  1817  0492                     	;# 
  1818  0493                     	;# 
  1819  0493                     	;# 
  1820  0493                     	;# 
  1821  0494                     	;# 
  1822  0494                     	;# 
  1823  0495                     	;# 
  1824  0495                     	;# 
  1825  0496                     	;# 
  1826  0496                     	;# 
  1827  0497                     	;# 
  1828  0497                     	;# 
  1829  0595                     	;# 
  1830  0596                     	;# 
  1831  0597                     	;# 
  1832  059C                     	;# 
  1833  059D                     	;# 
  1834  059E                     	;# 
  1835  0611                     	;# 
  1836  0611                     	;# 
  1837  0612                     	;# 
  1838  0613                     	;# 
  1839  0614                     	;# 
  1840  0614                     	;# 
  1841  0615                     	;# 
  1842  0616                     	;# 
  1843  0617                     	;# 
  1844  0617                     	;# 
  1845  0618                     	;# 
  1846  0619                     	;# 
  1847  061A                     	;# 
  1848  061A                     	;# 
  1849  061B                     	;# 
  1850  061C                     	;# 
  1851  061D                     	;# 
  1852  061D                     	;# 
  1853  061E                     	;# 
  1854  061F                     	;# 
  1855  0FE4                     	;# 
  1856  0FE5                     	;# 
  1857  0FE6                     	;# 
  1858  0FE7                     	;# 
  1859  0FE8                     	;# 
  1860  0FE9                     	;# 
  1861  0FEA                     	;# 
  1862  0FEB                     	;# 
  1863  0FED                     	;# 
  1864  0FEE                     	;# 
  1865  0FEF                     	;# 
  1866  0000                     	;# 
  1867  0001                     	;# 
  1868  0002                     	;# 
  1869  0003                     	;# 
  1870  0004                     	;# 
  1871  0005                     	;# 
  1872  0006                     	;# 
  1873  0007                     	;# 
  1874  0008                     	;# 
  1875  0009                     	;# 
  1876  000A                     	;# 
  1877  000B                     	;# 
  1878  000C                     	;# 
  1879  000D                     	;# 
  1880  000E                     	;# 
  1881  000F                     	;# 
  1882  0010                     	;# 
  1883  0011                     	;# 
  1884  0012                     	;# 
  1885  0013                     	;# 
  1886  0014                     	;# 
  1887  0015                     	;# 
  1888  0016                     	;# 
  1889  0016                     	;# 
  1890  0017                     	;# 
  1891  0018                     	;# 
  1892  0019                     	;# 
  1893  001A                     	;# 
  1894  001B                     	;# 
  1895  001C                     	;# 
  1896  008C                     	;# 
  1897  008D                     	;# 
  1898  008E                     	;# 
  1899  008F                     	;# 
  1900  0090                     	;# 
  1901  0091                     	;# 
  1902  0092                     	;# 
  1903  0093                     	;# 
  1904  0094                     	;# 
  1905  0095                     	;# 
  1906  0096                     	;# 
  1907  0097                     	;# 
  1908  0099                     	;# 
  1909  009A                     	;# 
  1910  009B                     	;# 
  1911  009B                     	;# 
  1912  009C                     	;# 
  1913  009D                     	;# 
  1914  009E                     	;# 
  1915  010C                     	;# 
  1916  010D                     	;# 
  1917  010E                     	;# 
  1918  010F                     	;# 
  1919  0110                     	;# 
  1920  0116                     	;# 
  1921  0117                     	;# 
  1922  011D                     	;# 
  1923  018C                     	;# 
  1924  018D                     	;# 
  1925  018F                     	;# 
  1926  0190                     	;# 
  1927  0191                     	;# 
  1928  0191                     	;# 
  1929  0192                     	;# 
  1930  0193                     	;# 
  1931  0193                     	;# 
  1932  0194                     	;# 
  1933  0195                     	;# 
  1934  0196                     	;# 
  1935  0197                     	;# 
  1936  0199                     	;# 
  1937  0199                     	;# 
  1938  0199                     	;# 
  1939  019A                     	;# 
  1940  019A                     	;# 
  1941  019A                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019B                     	;# 
  1945  019B                     	;# 
  1946  019B                     	;# 
  1947  019C                     	;# 
  1948  019C                     	;# 
  1949  019C                     	;# 
  1950  019D                     	;# 
  1951  019D                     	;# 
  1952  019D                     	;# 
  1953  019E                     	;# 
  1954  019E                     	;# 
  1955  019E                     	;# 
  1956  019F                     	;# 
  1957  019F                     	;# 
  1958  019F                     	;# 
  1959  020D                     	;# 
  1960  020F                     	;# 
  1961  0210                     	;# 
  1962  0211                     	;# 
  1963  0211                     	;# 
  1964  0212                     	;# 
  1965  0212                     	;# 
  1966  0213                     	;# 
  1967  0213                     	;# 
  1968  0214                     	;# 
  1969  0214                     	;# 
  1970  0215                     	;# 
  1971  0215                     	;# 
  1972  0215                     	;# 
  1973  0216                     	;# 
  1974  0216                     	;# 
  1975  0217                     	;# 
  1976  0217                     	;# 
  1977  0219                     	;# 
  1978  021A                     	;# 
  1979  021B                     	;# 
  1980  021C                     	;# 
  1981  021D                     	;# 
  1982  021E                     	;# 
  1983  021F                     	;# 
  1984  028C                     	;# 
  1985  028D                     	;# 
  1986  0291                     	;# 
  1987  0291                     	;# 
  1988  0292                     	;# 
  1989  0293                     	;# 
  1990  0298                     	;# 
  1991  0298                     	;# 
  1992  0299                     	;# 
  1993  029A                     	;# 
  1994  029D                     	;# 
  1995  029E                     	;# 
  1996  029F                     	;# 
  1997  030C                     	;# 
  1998  030D                     	;# 
  1999  0311                     	;# 
  2000  0311                     	;# 
  2001  0312                     	;# 
  2002  0313                     	;# 
  2003  0318                     	;# 
  2004  0318                     	;# 
  2005  0319                     	;# 
  2006  031A                     	;# 
  2007  031C                     	;# 
  2008  031C                     	;# 
  2009  031D                     	;# 
  2010  031E                     	;# 
  2011  038C                     	;# 
  2012  038D                     	;# 
  2013  0394                     	;# 
  2014  0395                     	;# 
  2015  0396                     	;# 
  2016  040C                     	;# 
  2017  040D                     	;# 
  2018  0411                     	;# 
  2019  0411                     	;# 
  2020  0412                     	;# 
  2021  0413                     	;# 
  2022  0414                     	;# 
  2023  0415                     	;# 
  2024  0416                     	;# 
  2025  0417                     	;# 
  2026  0418                     	;# 
  2027  0418                     	;# 
  2028  0419                     	;# 
  2029  041A                     	;# 
  2030  041B                     	;# 
  2031  041C                     	;# 
  2032  041D                     	;# 
  2033  041E                     	;# 
  2034  048D                     	;# 
  2035  0491                     	;# 
  2036  0491                     	;# 
  2037  0492                     	;# 
  2038  0492                     	;# 
  2039  0493                     	;# 
  2040  0493                     	;# 
  2041  0493                     	;# 
  2042  0494                     	;# 
  2043  0494                     	;# 
  2044  0495                     	;# 
  2045  0495                     	;# 
  2046  0496                     	;# 
  2047  0496                     	;# 
  2048  0497                     	;# 
  2049  0497                     	;# 
  2050  0595                     	;# 
  2051  0596                     	;# 
  2052  0597                     	;# 
  2053  059C                     	;# 
  2054  059D                     	;# 
  2055  059E                     	;# 
  2056  0611                     	;# 
  2057  0611                     	;# 
  2058  0612                     	;# 
  2059  0613                     	;# 
  2060  0614                     	;# 
  2061  0614                     	;# 
  2062  0615                     	;# 
  2063  0616                     	;# 
  2064  0617                     	;# 
  2065  0617                     	;# 
  2066  0618                     	;# 
  2067  0619                     	;# 
  2068  061A                     	;# 
  2069  061A                     	;# 
  2070  061B                     	;# 
  2071  061C                     	;# 
  2072  061D                     	;# 
  2073  061D                     	;# 
  2074  061E                     	;# 
  2075  061F                     	;# 
  2076  0FE4                     	;# 
  2077  0FE5                     	;# 
  2078  0FE6                     	;# 
  2079  0FE7                     	;# 
  2080  0FE8                     	;# 
  2081  0FE9                     	;# 
  2082  0FEA                     	;# 
  2083  0FEB                     	;# 
  2084  0FED                     	;# 
  2085  0FEE                     	;# 
  2086  0FEF                     	;# 
  2087  0000                     	;# 
  2088  0001                     	;# 
  2089  0002                     	;# 
  2090  0003                     	;# 
  2091  0004                     	;# 
  2092  0005                     	;# 
  2093  0006                     	;# 
  2094  0007                     	;# 
  2095  0008                     	;# 
  2096  0009                     	;# 
  2097  000A                     	;# 
  2098  000B                     	;# 
  2099  000C                     	;# 
  2100  000D                     	;# 
  2101  000E                     	;# 
  2102  000F                     	;# 
  2103  0010                     	;# 
  2104  0011                     	;# 
  2105  0012                     	;# 
  2106  0013                     	;# 
  2107  0014                     	;# 
  2108  0015                     	;# 
  2109  0016                     	;# 
  2110  0016                     	;# 
  2111  0017                     	;# 
  2112  0018                     	;# 
  2113  0019                     	;# 
  2114  001A                     	;# 
  2115  001B                     	;# 
  2116  001C                     	;# 
  2117  008C                     	;# 
  2118  008D                     	;# 
  2119  008E                     	;# 
  2120  008F                     	;# 
  2121  0090                     	;# 
  2122  0091                     	;# 
  2123  0092                     	;# 
  2124  0093                     	;# 
  2125  0094                     	;# 
  2126  0095                     	;# 
  2127  0096                     	;# 
  2128  0097                     	;# 
  2129  0099                     	;# 
  2130  009A                     	;# 
  2131  009B                     	;# 
  2132  009B                     	;# 
  2133  009C                     	;# 
  2134  009D                     	;# 
  2135  009E                     	;# 
  2136  010C                     	;# 
  2137  010D                     	;# 
  2138  010E                     	;# 
  2139  010F                     	;# 
  2140  0110                     	;# 
  2141  0116                     	;# 
  2142  0117                     	;# 
  2143  011D                     	;# 
  2144  018C                     	;# 
  2145  018D                     	;# 
  2146  018F                     	;# 
  2147  0190                     	;# 
  2148  0191                     	;# 
  2149  0191                     	;# 
  2150  0192                     	;# 
  2151  0193                     	;# 
  2152  0193                     	;# 
  2153  0194                     	;# 
  2154  0195                     	;# 
  2155  0196                     	;# 
  2156  0197                     	;# 
  2157  0199                     	;# 
  2158  0199                     	;# 
  2159  0199                     	;# 
  2160  019A                     	;# 
  2161  019A                     	;# 
  2162  019A                     	;# 
  2163  019B                     	;# 
  2164  019B                     	;# 
  2165  019B                     	;# 
  2166  019B                     	;# 
  2167  019B                     	;# 
  2168  019C                     	;# 
  2169  019C                     	;# 
  2170  019C                     	;# 
  2171  019D                     	;# 
  2172  019D                     	;# 
  2173  019D                     	;# 
  2174  019E                     	;# 
  2175  019E                     	;# 
  2176  019E                     	;# 
  2177  019F                     	;# 
  2178  019F                     	;# 
  2179  019F                     	;# 
  2180  020D                     	;# 
  2181  020F                     	;# 
  2182  0210                     	;# 
  2183  0211                     	;# 
  2184  0211                     	;# 
  2185  0212                     	;# 
  2186  0212                     	;# 
  2187  0213                     	;# 
  2188  0213                     	;# 
  2189  0214                     	;# 
  2190  0214                     	;# 
  2191  0215                     	;# 
  2192  0215                     	;# 
  2193  0215                     	;# 
  2194  0216                     	;# 
  2195  0216                     	;# 
  2196  0217                     	;# 
  2197  0217                     	;# 
  2198  0219                     	;# 
  2199  021A                     	;# 
  2200  021B                     	;# 
  2201  021C                     	;# 
  2202  021D                     	;# 
  2203  021E                     	;# 
  2204  021F                     	;# 
  2205  028C                     	;# 
  2206  028D                     	;# 
  2207  0291                     	;# 
  2208  0291                     	;# 
  2209  0292                     	;# 
  2210  0293                     	;# 
  2211  0298                     	;# 
  2212  0298                     	;# 
  2213  0299                     	;# 
  2214  029A                     	;# 
  2215  029D                     	;# 
  2216  029E                     	;# 
  2217  029F                     	;# 
  2218  030C                     	;# 
  2219  030D                     	;# 
  2220  0311                     	;# 
  2221  0311                     	;# 
  2222  0312                     	;# 
  2223  0313                     	;# 
  2224  0318                     	;# 
  2225  0318                     	;# 
  2226  0319                     	;# 
  2227  031A                     	;# 
  2228  031C                     	;# 
  2229  031C                     	;# 
  2230  031D                     	;# 
  2231  031E                     	;# 
  2232  038C                     	;# 
  2233  038D                     	;# 
  2234  0394                     	;# 
  2235  0395                     	;# 
  2236  0396                     	;# 
  2237  040C                     	;# 
  2238  040D                     	;# 
  2239  0411                     	;# 
  2240  0411                     	;# 
  2241  0412                     	;# 
  2242  0413                     	;# 
  2243  0414                     	;# 
  2244  0415                     	;# 
  2245  0416                     	;# 
  2246  0417                     	;# 
  2247  0418                     	;# 
  2248  0418                     	;# 
  2249  0419                     	;# 
  2250  041A                     	;# 
  2251  041B                     	;# 
  2252  041C                     	;# 
  2253  041D                     	;# 
  2254  041E                     	;# 
  2255  048D                     	;# 
  2256  0491                     	;# 
  2257  0491                     	;# 
  2258  0492                     	;# 
  2259  0492                     	;# 
  2260  0493                     	;# 
  2261  0493                     	;# 
  2262  0493                     	;# 
  2263  0494                     	;# 
  2264  0494                     	;# 
  2265  0495                     	;# 
  2266  0495                     	;# 
  2267  0496                     	;# 
  2268  0496                     	;# 
  2269  0497                     	;# 
  2270  0497                     	;# 
  2271  0595                     	;# 
  2272  0596                     	;# 
  2273  0597                     	;# 
  2274  059C                     	;# 
  2275  059D                     	;# 
  2276  059E                     	;# 
  2277  0611                     	;# 
  2278  0611                     	;# 
  2279  0612                     	;# 
  2280  0613                     	;# 
  2281  0614                     	;# 
  2282  0614                     	;# 
  2283  0615                     	;# 
  2284  0616                     	;# 
  2285  0617                     	;# 
  2286  0617                     	;# 
  2287  0618                     	;# 
  2288  0619                     	;# 
  2289  061A                     	;# 
  2290  061A                     	;# 
  2291  061B                     	;# 
  2292  061C                     	;# 
  2293  061D                     	;# 
  2294  061D                     	;# 
  2295  061E                     	;# 
  2296  061F                     	;# 
  2297  0FE4                     	;# 
  2298  0FE5                     	;# 
  2299  0FE6                     	;# 
  2300  0FE7                     	;# 
  2301  0FE8                     	;# 
  2302  0FE9                     	;# 
  2303  0FEA                     	;# 
  2304  0FEB                     	;# 
  2305  0FED                     	;# 
  2306  0FEE                     	;# 
  2307  0FEF                     	;# 
  2308  0000                     	;# 
  2309  0001                     	;# 
  2310  0002                     	;# 
  2311  0003                     	;# 
  2312  0004                     	;# 
  2313  0005                     	;# 
  2314  0006                     	;# 
  2315  0007                     	;# 
  2316  0008                     	;# 
  2317  0009                     	;# 
  2318  000A                     	;# 
  2319  000B                     	;# 
  2320  000C                     	;# 
  2321  000D                     	;# 
  2322  000E                     	;# 
  2323  000F                     	;# 
  2324  0010                     	;# 
  2325  0011                     	;# 
  2326  0012                     	;# 
  2327  0013                     	;# 
  2328  0014                     	;# 
  2329  0015                     	;# 
  2330  0016                     	;# 
  2331  0016                     	;# 
  2332  0017                     	;# 
  2333  0018                     	;# 
  2334  0019                     	;# 
  2335  001A                     	;# 
  2336  001B                     	;# 
  2337  001C                     	;# 
  2338  008C                     	;# 
  2339  008D                     	;# 
  2340  008E                     	;# 
  2341  008F                     	;# 
  2342  0090                     	;# 
  2343  0091                     	;# 
  2344  0092                     	;# 
  2345  0093                     	;# 
  2346  0094                     	;# 
  2347  0095                     	;# 
  2348  0096                     	;# 
  2349  0097                     	;# 
  2350  0099                     	;# 
  2351  009A                     	;# 
  2352  009B                     	;# 
  2353  009B                     	;# 
  2354  009C                     	;# 
  2355  009D                     	;# 
  2356  009E                     	;# 
  2357  010C                     	;# 
  2358  010D                     	;# 
  2359  010E                     	;# 
  2360  010F                     	;# 
  2361  0110                     	;# 
  2362  0116                     	;# 
  2363  0117                     	;# 
  2364  011D                     	;# 
  2365  018C                     	;# 
  2366  018D                     	;# 
  2367  018F                     	;# 
  2368  0190                     	;# 
  2369  0191                     	;# 
  2370  0191                     	;# 
  2371  0192                     	;# 
  2372  0193                     	;# 
  2373  0193                     	;# 
  2374  0194                     	;# 
  2375  0195                     	;# 
  2376  0196                     	;# 
  2377  0197                     	;# 
  2378  0199                     	;# 
  2379  0199                     	;# 
  2380  0199                     	;# 
  2381  019A                     	;# 
  2382  019A                     	;# 
  2383  019A                     	;# 
  2384  019B                     	;# 
  2385  019B                     	;# 
  2386  019B                     	;# 
  2387  019B                     	;# 
  2388  019B                     	;# 
  2389  019C                     	;# 
  2390  019C                     	;# 
  2391  019C                     	;# 
  2392  019D                     	;# 
  2393  019D                     	;# 
  2394  019D                     	;# 
  2395  019E                     	;# 
  2396  019E                     	;# 
  2397  019E                     	;# 
  2398  019F                     	;# 
  2399  019F                     	;# 
  2400  019F                     	;# 
  2401  020D                     	;# 
  2402  020F                     	;# 
  2403  0210                     	;# 
  2404  0211                     	;# 
  2405  0211                     	;# 
  2406  0212                     	;# 
  2407  0212                     	;# 
  2408  0213                     	;# 
  2409  0213                     	;# 
  2410  0214                     	;# 
  2411  0214                     	;# 
  2412  0215                     	;# 
  2413  0215                     	;# 
  2414  0215                     	;# 
  2415  0216                     	;# 
  2416  0216                     	;# 
  2417  0217                     	;# 
  2418  0217                     	;# 
  2419  0219                     	;# 
  2420  021A                     	;# 
  2421  021B                     	;# 
  2422  021C                     	;# 
  2423  021D                     	;# 
  2424  021E                     	;# 
  2425  021F                     	;# 
  2426  028C                     	;# 
  2427  028D                     	;# 
  2428  0291                     	;# 
  2429  0291                     	;# 
  2430  0292                     	;# 
  2431  0293                     	;# 
  2432  0298                     	;# 
  2433  0298                     	;# 
  2434  0299                     	;# 
  2435  029A                     	;# 
  2436  029D                     	;# 
  2437  029E                     	;# 
  2438  029F                     	;# 
  2439  030C                     	;# 
  2440  030D                     	;# 
  2441  0311                     	;# 
  2442  0311                     	;# 
  2443  0312                     	;# 
  2444  0313                     	;# 
  2445  0318                     	;# 
  2446  0318                     	;# 
  2447  0319                     	;# 
  2448  031A                     	;# 
  2449  031C                     	;# 
  2450  031C                     	;# 
  2451  031D                     	;# 
  2452  031E                     	;# 
  2453  038C                     	;# 
  2454  038D                     	;# 
  2455  0394                     	;# 
  2456  0395                     	;# 
  2457  0396                     	;# 
  2458  040C                     	;# 
  2459  040D                     	;# 
  2460  0411                     	;# 
  2461  0411                     	;# 
  2462  0412                     	;# 
  2463  0413                     	;# 
  2464  0414                     	;# 
  2465  0415                     	;# 
  2466  0416                     	;# 
  2467  0417                     	;# 
  2468  0418                     	;# 
  2469  0418                     	;# 
  2470  0419                     	;# 
  2471  041A                     	;# 
  2472  041B                     	;# 
  2473  041C                     	;# 
  2474  041D                     	;# 
  2475  041E                     	;# 
  2476  048D                     	;# 
  2477  0491                     	;# 
  2478  0491                     	;# 
  2479  0492                     	;# 
  2480  0492                     	;# 
  2481  0493                     	;# 
  2482  0493                     	;# 
  2483  0493                     	;# 
  2484  0494                     	;# 
  2485  0494                     	;# 
  2486  0495                     	;# 
  2487  0495                     	;# 
  2488  0496                     	;# 
  2489  0496                     	;# 
  2490  0497                     	;# 
  2491  0497                     	;# 
  2492  0595                     	;# 
  2493  0596                     	;# 
  2494  0597                     	;# 
  2495  059C                     	;# 
  2496  059D                     	;# 
  2497  059E                     	;# 
  2498  0611                     	;# 
  2499  0611                     	;# 
  2500  0612                     	;# 
  2501  0613                     	;# 
  2502  0614                     	;# 
  2503  0614                     	;# 
  2504  0615                     	;# 
  2505  0616                     	;# 
  2506  0617                     	;# 
  2507  0617                     	;# 
  2508  0618                     	;# 
  2509  0619                     	;# 
  2510  061A                     	;# 
  2511  061A                     	;# 
  2512  061B                     	;# 
  2513  061C                     	;# 
  2514  061D                     	;# 
  2515  061D                     	;# 
  2516  061E                     	;# 
  2517  061F                     	;# 
  2518  0FE4                     	;# 
  2519  0FE5                     	;# 
  2520  0FE6                     	;# 
  2521  0FE7                     	;# 
  2522  0FE8                     	;# 
  2523  0FE9                     	;# 
  2524  0FEA                     	;# 
  2525  0FEB                     	;# 
  2526  0FED                     	;# 
  2527  0FEE                     	;# 
  2528  0FEF                     	;# 
  2529  0000                     	;# 
  2530  0001                     	;# 
  2531  0002                     	;# 
  2532  0003                     	;# 
  2533  0004                     	;# 
  2534  0005                     	;# 
  2535  0006                     	;# 
  2536  0007                     	;# 
  2537  0008                     	;# 
  2538  0009                     	;# 
  2539  000A                     	;# 
  2540  000B                     	;# 
  2541  000C                     	;# 
  2542  000D                     	;# 
  2543  000E                     	;# 
  2544  000F                     	;# 
  2545  0010                     	;# 
  2546  0011                     	;# 
  2547  0012                     	;# 
  2548  0013                     	;# 
  2549  0014                     	;# 
  2550  0015                     	;# 
  2551  0016                     	;# 
  2552  0016                     	;# 
  2553  0017                     	;# 
  2554  0018                     	;# 
  2555  0019                     	;# 
  2556  001A                     	;# 
  2557  001B                     	;# 
  2558  001C                     	;# 
  2559  008C                     	;# 
  2560  008D                     	;# 
  2561  008E                     	;# 
  2562  008F                     	;# 
  2563  0090                     	;# 
  2564  0091                     	;# 
  2565  0092                     	;# 
  2566  0093                     	;# 
  2567  0094                     	;# 
  2568  0095                     	;# 
  2569  0096                     	;# 
  2570  0097                     	;# 
  2571  0099                     	;# 
  2572  009A                     	;# 
  2573  009B                     	;# 
  2574  009B                     	;# 
  2575  009C                     	;# 
  2576  009D                     	;# 
  2577  009E                     	;# 
  2578  010C                     	;# 
  2579  010D                     	;# 
  2580  010E                     	;# 
  2581  010F                     	;# 
  2582  0110                     	;# 
  2583  0116                     	;# 
  2584  0117                     	;# 
  2585  011D                     	;# 
  2586  018C                     	;# 
  2587  018D                     	;# 
  2588  018F                     	;# 
  2589  0190                     	;# 
  2590  0191                     	;# 
  2591  0191                     	;# 
  2592  0192                     	;# 
  2593  0193                     	;# 
  2594  0193                     	;# 
  2595  0194                     	;# 
  2596  0195                     	;# 
  2597  0196                     	;# 
  2598  0197                     	;# 
  2599  0199                     	;# 
  2600  0199                     	;# 
  2601  0199                     	;# 
  2602  019A                     	;# 
  2603  019A                     	;# 
  2604  019A                     	;# 
  2605  019B                     	;# 
  2606  019B                     	;# 
  2607  019B                     	;# 
  2608  019B                     	;# 
  2609  019B                     	;# 
  2610  019C                     	;# 
  2611  019C                     	;# 
  2612  019C                     	;# 
  2613  019D                     	;# 
  2614  019D                     	;# 
  2615  019D                     	;# 
  2616  019E                     	;# 
  2617  019E                     	;# 
  2618  019E                     	;# 
  2619  019F                     	;# 
  2620  019F                     	;# 
  2621  019F                     	;# 
  2622  020D                     	;# 
  2623  020F                     	;# 
  2624  0210                     	;# 
  2625  0211                     	;# 
  2626  0211                     	;# 
  2627  0212                     	;# 
  2628  0212                     	;# 
  2629  0213                     	;# 
  2630  0213                     	;# 
  2631  0214                     	;# 
  2632  0214                     	;# 
  2633  0215                     	;# 
  2634  0215                     	;# 
  2635  0215                     	;# 
  2636  0216                     	;# 
  2637  0216                     	;# 
  2638  0217                     	;# 
  2639  0217                     	;# 
  2640  0219                     	;# 
  2641  021A                     	;# 
  2642  021B                     	;# 
  2643  021C                     	;# 
  2644  021D                     	;# 
  2645  021E                     	;# 
  2646  021F                     	;# 
  2647  028C                     	;# 
  2648  028D                     	;# 
  2649  0291                     	;# 
  2650  0291                     	;# 
  2651  0292                     	;# 
  2652  0293                     	;# 
  2653  0298                     	;# 
  2654  0298                     	;# 
  2655  0299                     	;# 
  2656  029A                     	;# 
  2657  029D                     	;# 
  2658  029E                     	;# 
  2659  029F                     	;# 
  2660  030C                     	;# 
  2661  030D                     	;# 
  2662  0311                     	;# 
  2663  0311                     	;# 
  2664  0312                     	;# 
  2665  0313                     	;# 
  2666  0318                     	;# 
  2667  0318                     	;# 
  2668  0319                     	;# 
  2669  031A                     	;# 
  2670  031C                     	;# 
  2671  031C                     	;# 
  2672  031D                     	;# 
  2673  031E                     	;# 
  2674  038C                     	;# 
  2675  038D                     	;# 
  2676  0394                     	;# 
  2677  0395                     	;# 
  2678  0396                     	;# 
  2679  040C                     	;# 
  2680  040D                     	;# 
  2681  0411                     	;# 
  2682  0411                     	;# 
  2683  0412                     	;# 
  2684  0413                     	;# 
  2685  0414                     	;# 
  2686  0415                     	;# 
  2687  0416                     	;# 
  2688  0417                     	;# 
  2689  0418                     	;# 
  2690  0418                     	;# 
  2691  0419                     	;# 
  2692  041A                     	;# 
  2693  041B                     	;# 
  2694  041C                     	;# 
  2695  041D                     	;# 
  2696  041E                     	;# 
  2697  048D                     	;# 
  2698  0491                     	;# 
  2699  0491                     	;# 
  2700  0492                     	;# 
  2701  0492                     	;# 
  2702  0493                     	;# 
  2703  0493                     	;# 
  2704  0493                     	;# 
  2705  0494                     	;# 
  2706  0494                     	;# 
  2707  0495                     	;# 
  2708  0495                     	;# 
  2709  0496                     	;# 
  2710  0496                     	;# 
  2711  0497                     	;# 
  2712  0497                     	;# 
  2713  0595                     	;# 
  2714  0596                     	;# 
  2715  0597                     	;# 
  2716  059C                     	;# 
  2717  059D                     	;# 
  2718  059E                     	;# 
  2719  0611                     	;# 
  2720  0611                     	;# 
  2721  0612                     	;# 
  2722  0613                     	;# 
  2723  0614                     	;# 
  2724  0614                     	;# 
  2725  0615                     	;# 
  2726  0616                     	;# 
  2727  0617                     	;# 
  2728  0617                     	;# 
  2729  0618                     	;# 
  2730  0619                     	;# 
  2731  061A                     	;# 
  2732  061A                     	;# 
  2733  061B                     	;# 
  2734  061C                     	;# 
  2735  061D                     	;# 
  2736  061D                     	;# 
  2737  061E                     	;# 
  2738  061F                     	;# 
  2739  0FE4                     	;# 
  2740  0FE5                     	;# 
  2741  0FE6                     	;# 
  2742  0FE7                     	;# 
  2743  0FE8                     	;# 
  2744  0FE9                     	;# 
  2745  0FEA                     	;# 
  2746  0FEB                     	;# 
  2747  0FED                     	;# 
  2748  0FEE                     	;# 
  2749  0FEF                     	;# 
  2750  0000                     	;# 
  2751  0001                     	;# 
  2752  0002                     	;# 
  2753  0003                     	;# 
  2754  0004                     	;# 
  2755  0005                     	;# 
  2756  0006                     	;# 
  2757  0007                     	;# 
  2758  0008                     	;# 
  2759  0009                     	;# 
  2760  000A                     	;# 
  2761  000B                     	;# 
  2762  000C                     	;# 
  2763  000D                     	;# 
  2764  000E                     	;# 
  2765  000F                     	;# 
  2766  0010                     	;# 
  2767  0011                     	;# 
  2768  0012                     	;# 
  2769  0013                     	;# 
  2770  0014                     	;# 
  2771  0015                     	;# 
  2772  0016                     	;# 
  2773  0016                     	;# 
  2774  0017                     	;# 
  2775  0018                     	;# 
  2776  0019                     	;# 
  2777  001A                     	;# 
  2778  001B                     	;# 
  2779  001C                     	;# 
  2780  008C                     	;# 
  2781  008D                     	;# 
  2782  008E                     	;# 
  2783  008F                     	;# 
  2784  0090                     	;# 
  2785  0091                     	;# 
  2786  0092                     	;# 
  2787  0093                     	;# 
  2788  0094                     	;# 
  2789  0095                     	;# 
  2790  0096                     	;# 
  2791  0097                     	;# 
  2792  0099                     	;# 
  2793  009A                     	;# 
  2794  009B                     	;# 
  2795  009B                     	;# 
  2796  009C                     	;# 
  2797  009D                     	;# 
  2798  009E                     	;# 
  2799  010C                     	;# 
  2800  010D                     	;# 
  2801  010E                     	;# 
  2802  010F                     	;# 
  2803  0110                     	;# 
  2804  0116                     	;# 
  2805  0117                     	;# 
  2806  011D                     	;# 
  2807  018C                     	;# 
  2808  018D                     	;# 
  2809  018F                     	;# 
  2810  0190                     	;# 
  2811  0191                     	;# 
  2812  0191                     	;# 
  2813  0192                     	;# 
  2814  0193                     	;# 
  2815  0193                     	;# 
  2816  0194                     	;# 
  2817  0195                     	;# 
  2818  0196                     	;# 
  2819  0197                     	;# 
  2820  0199                     	;# 
  2821  0199                     	;# 
  2822  0199                     	;# 
  2823  019A                     	;# 
  2824  019A                     	;# 
  2825  019A                     	;# 
  2826  019B                     	;# 
  2827  019B                     	;# 
  2828  019B                     	;# 
  2829  019B                     	;# 
  2830  019B                     	;# 
  2831  019C                     	;# 
  2832  019C                     	;# 
  2833  019C                     	;# 
  2834  019D                     	;# 
  2835  019D                     	;# 
  2836  019D                     	;# 
  2837  019E                     	;# 
  2838  019E                     	;# 
  2839  019E                     	;# 
  2840  019F                     	;# 
  2841  019F                     	;# 
  2842  019F                     	;# 
  2843  020D                     	;# 
  2844  020F                     	;# 
  2845  0210                     	;# 
  2846  0211                     	;# 
  2847  0211                     	;# 
  2848  0212                     	;# 
  2849  0212                     	;# 
  2850  0213                     	;# 
  2851  0213                     	;# 
  2852  0214                     	;# 
  2853  0214                     	;# 
  2854  0215                     	;# 
  2855  0215                     	;# 
  2856  0215                     	;# 
  2857  0216                     	;# 
  2858  0216                     	;# 
  2859  0217                     	;# 
  2860  0217                     	;# 
  2861  0219                     	;# 
  2862  021A                     	;# 
  2863  021B                     	;# 
  2864  021C                     	;# 
  2865  021D                     	;# 
  2866  021E                     	;# 
  2867  021F                     	;# 
  2868  028C                     	;# 
  2869  028D                     	;# 
  2870  0291                     	;# 
  2871  0291                     	;# 
  2872  0292                     	;# 
  2873  0293                     	;# 
  2874  0298                     	;# 
  2875  0298                     	;# 
  2876  0299                     	;# 
  2877  029A                     	;# 
  2878  029D                     	;# 
  2879  029E                     	;# 
  2880  029F                     	;# 
  2881  030C                     	;# 
  2882  030D                     	;# 
  2883  0311                     	;# 
  2884  0311                     	;# 
  2885  0312                     	;# 
  2886  0313                     	;# 
  2887  0318                     	;# 
  2888  0318                     	;# 
  2889  0319                     	;# 
  2890  031A                     	;# 
  2891  031C                     	;# 
  2892  031C                     	;# 
  2893  031D                     	;# 
  2894  031E                     	;# 
  2895  038C                     	;# 
  2896  038D                     	;# 
  2897  0394                     	;# 
  2898  0395                     	;# 
  2899  0396                     	;# 
  2900  040C                     	;# 
  2901  040D                     	;# 
  2902  0411                     	;# 
  2903  0411                     	;# 
  2904  0412                     	;# 
  2905  0413                     	;# 
  2906  0414                     	;# 
  2907  0415                     	;# 
  2908  0416                     	;# 
  2909  0417                     	;# 
  2910  0418                     	;# 
  2911  0418                     	;# 
  2912  0419                     	;# 
  2913  041A                     	;# 
  2914  041B                     	;# 
  2915  041C                     	;# 
  2916  041D                     	;# 
  2917  041E                     	;# 
  2918  048D                     	;# 
  2919  0491                     	;# 
  2920  0491                     	;# 
  2921  0492                     	;# 
  2922  0492                     	;# 
  2923  0493                     	;# 
  2924  0493                     	;# 
  2925  0493                     	;# 
  2926  0494                     	;# 
  2927  0494                     	;# 
  2928  0495                     	;# 
  2929  0495                     	;# 
  2930  0496                     	;# 
  2931  0496                     	;# 
  2932  0497                     	;# 
  2933  0497                     	;# 
  2934  0595                     	;# 
  2935  0596                     	;# 
  2936  0597                     	;# 
  2937  059C                     	;# 
  2938  059D                     	;# 
  2939  059E                     	;# 
  2940  0611                     	;# 
  2941  0611                     	;# 
  2942  0612                     	;# 
  2943  0613                     	;# 
  2944  0614                     	;# 
  2945  0614                     	;# 
  2946  0615                     	;# 
  2947  0616                     	;# 
  2948  0617                     	;# 
  2949  0617                     	;# 
  2950  0618                     	;# 
  2951  0619                     	;# 
  2952  061A                     	;# 
  2953  061A                     	;# 
  2954  061B                     	;# 
  2955  061C                     	;# 
  2956  061D                     	;# 
  2957  061D                     	;# 
  2958  061E                     	;# 
  2959  061F                     	;# 
  2960  0FE4                     	;# 
  2961  0FE5                     	;# 
  2962  0FE6                     	;# 
  2963  0FE7                     	;# 
  2964  0FE8                     	;# 
  2965  0FE9                     	;# 
  2966  0FEA                     	;# 
  2967  0FEB                     	;# 
  2968  0FED                     	;# 
  2969  0FEE                     	;# 
  2970  0FEF                     	;_mod5
  2971                           
  2972                           	psect	idataCOMMON
  2973  1DCF                     __pidataCOMMON:	
  2974                           
  2975                           ;initializer for _num_taps
  2976  1DCF  3404               	retlw	4
  2977                           
  2978                           	psect	idataBANK0
  2979  0002                     __pidataBANK0:	
  2980                           
  2981                           ;initializer for _feedback_state
  2982  0002  34FF               	retlw	255
  2983                           
  2984                           ;initializer for _longTap_state
  2985  0003  34FF               	retlw	255
  2986                           
  2987                           	psect	idataBANK1
  2988  1E24                     __pidataBANK1:	
  2989                           
  2990                           ;initializer for _baseline_delay_time
  2991  1E24  34D0               	retlw	208
  2992  1E25  3407               	retlw	7
  2993  1E26  3400               	retlw	0
  2994  1E27  3400               	retlw	0
  2995                           
  2996                           ;initializer for _delay_time
  2997  1E28  34D0               	retlw	208
  2998  1E29  3407               	retlw	7
  2999  1E2A  3400               	retlw	0
  3000  1E2B  3400               	retlw	0
  3001                           
  3002                           ;initializer for _bottom_push_state
  3003  1E2C  3406               	retlw	6
  3004  1E2D  3400               	retlw	0
  3005                           
  3006                           ;initializer for _knob1_prev
  3007  1E2E  34D0               	retlw	208
  3008  1E2F  3407               	retlw	7
  3009                           
  3010                           ;initializer for _long_press_limit
  3011  1E30  34E8               	retlw	232
  3012  1E31  3403               	retlw	3
  3013                           
  3014                           ;initializer for _top_push_state
  3015  1E32  3406               	retlw	6
  3016  1E33  3400               	retlw	0
  3017                           
  3018                           ;initializer for _blink_rate
  3019  1E34  3414               	retlw	20
  3020                           
  3021                           ;initializer for _switchBypass_state
  3022  1E35  34FF               	retlw	255
  3023                           
  3024                           ;initializer for _switchTap_state
  3025  1E36  34FF               	retlw	255
  3026                           
  3027                           	psect	idataBANK2
  3028  1E37                     __pidataBANK2:	
  3029                           
  3030                           ;initializer for _blink_delay
  3031  1E37  3464               	retlw	100
  3032  1E38  3400               	retlw	0
  3033                           
  3034                           ;initializer for _delay_time_changed
  3035  1E39  3401               	retlw	1
  3036  1E3A  3400               	retlw	0
  3037                           
  3038                           ;initializer for _knob2_prev
  3039  1E3B  34D0               	retlw	208
  3040  1E3C  3407               	retlw	7
  3041                           
  3042                           ;initializer for _knob3_prev
  3043  1E3D  34D0               	retlw	208
  3044  1E3E  3407               	retlw	7
  3045                           
  3046                           ;initializer for _knob4_prev
  3047  1E3F  34D0               	retlw	208
  3048  1E40  3407               	retlw	7
  3049                           
  3050                           ;initializer for _knob5_prev
  3051  1E41  34D0               	retlw	208
  3052  1E42  3407               	retlw	7
  3053                           
  3054                           ;initializer for _mod_delay_time
  3055  1E43  34D0               	retlw	208
  3056  1E44  3407               	retlw	7
  3057                           
  3058                           ;initializer for _switchBypass_up
  3059  1E45  3401               	retlw	1
  3060  1E46  3400               	retlw	0
  3061                           
  3062                           ;initializer for _tap_iteration
  3063  1E47  3401               	retlw	1
  3064  1E48  3400               	retlw	0
  3065                           
  3066                           ;initializer for _blink_state
  3067  1E49  3401               	retlw	1
  3068                           
  3069                           ;initializer for _currentBypassState
  3070  1E4A  34FF               	retlw	255
  3071                           
  3072                           	psect	idataBANK4
  3073  1186                     __pidataBANK4:	
  3074                           
  3075                           ;initializer for _mod2
  3076  1186  3400               	retlw	0
  3077  1187  3400               	retlw	0
  3078  1188  340D               	retlw	13
  3079  1189  3400               	retlw	0
  3080  118A  341B               	retlw	27
  3081  118B  3400               	retlw	0
  3082  118C  3428               	retlw	40
  3083  118D  3400               	retlw	0
  3084  118E  3435               	retlw	53
  3085  118F  3400               	retlw	0
  3086  1190  3443               	retlw	67
  3087  1191  3400               	retlw	0
  3088  1192  3450               	retlw	80
  3089  1193  3400               	retlw	0
  3090  1194  345D               	retlw	93
  3091  1195  3400               	retlw	0
  3092  1196  345D               	retlw	93
  3093  1197  3400               	retlw	0
  3094  1198  3450               	retlw	80
  3095  1199  3400               	retlw	0
  3096  119A  3443               	retlw	67
  3097  119B  3400               	retlw	0
  3098  119C  3435               	retlw	53
  3099  119D  3400               	retlw	0
  3100  119E  3428               	retlw	40
  3101  119F  3400               	retlw	0
  3102  11A0  341B               	retlw	27
  3103  11A1  3400               	retlw	0
  3104  11A2  340D               	retlw	13
  3105  11A3  3400               	retlw	0
  3106  11A4  3400               	retlw	0
  3107  11A5  3400               	retlw	0
  3108  11A6  34F3               	retlw	243
  3109  11A7  34FF               	retlw	255
  3110  11A8  34E5               	retlw	229
  3111  11A9  34FF               	retlw	255
  3112  11AA  34D8               	retlw	216
  3113  11AB  34FF               	retlw	255
  3114  11AC  34CB               	retlw	203
  3115  11AD  34FF               	retlw	255
  3116  11AE  34BD               	retlw	189
  3117  11AF  34FF               	retlw	255
  3118  11B0  34B0               	retlw	176
  3119  11B1  34FF               	retlw	255
  3120  11B2  34A3               	retlw	163
  3121  11B3  34FF               	retlw	255
  3122  11B4  34A3               	retlw	163
  3123  11B5  34FF               	retlw	255
  3124  11B6  34B0               	retlw	176
  3125  11B7  34FF               	retlw	255
  3126  11B8  34BD               	retlw	189
  3127  11B9  34FF               	retlw	255
  3128  11BA  34CB               	retlw	203
  3129  11BB  34FF               	retlw	255
  3130  11BC  34D8               	retlw	216
  3131  11BD  34FF               	retlw	255
  3132  11BE  34E5               	retlw	229
  3133  11BF  34FF               	retlw	255
  3134  11C0  34F3               	retlw	243
  3135  11C1  34FF               	retlw	255
  3136  11C2  3400               	retlw	0
  3137  11C3  3400               	retlw	0
  3138                           
  3139                           	psect	idataBANK5
  3140  1148                     __pidataBANK5:	
  3141                           
  3142                           ;initializer for _mod3
  3143  1148  3400               	retlw	0
  3144  1149  3400               	retlw	0
  3145  114A  3407               	retlw	7
  3146  114B  3400               	retlw	0
  3147  114C  340D               	retlw	13
  3148  114D  3400               	retlw	0
  3149  114E  3414               	retlw	20
  3150  114F  3400               	retlw	0
  3151  1150  341B               	retlw	27
  3152  1151  3400               	retlw	0
  3153  1152  3421               	retlw	33
  3154  1153  3400               	retlw	0
  3155  1154  3428               	retlw	40
  3156  1155  3400               	retlw	0
  3157  1156  342F               	retlw	47
  3158  1157  3400               	retlw	0
  3159  1158  3435               	retlw	53
  3160  1159  3400               	retlw	0
  3161  115A  343C               	retlw	60
  3162  115B  3400               	retlw	0
  3163  115C  3443               	retlw	67
  3164  115D  3400               	retlw	0
  3165  115E  3449               	retlw	73
  3166  115F  3400               	retlw	0
  3167  1160  3450               	retlw	80
  3168  1161  3400               	retlw	0
  3169  1162  3457               	retlw	87
  3170  1163  3400               	retlw	0
  3171  1164  345D               	retlw	93
  3172  1165  3400               	retlw	0
  3173  1166  349C               	retlw	156
  3174  1167  34FF               	retlw	255
  3175  1168  34A3               	retlw	163
  3176  1169  34FF               	retlw	255
  3177  116A  34A9               	retlw	169
  3178  116B  34FF               	retlw	255
  3179  116C  34B0               	retlw	176
  3180  116D  34FF               	retlw	255
  3181  116E  34B7               	retlw	183
  3182  116F  34FF               	retlw	255
  3183  1170  34BD               	retlw	189
  3184  1171  34FF               	retlw	255
  3185  1172  34C4               	retlw	196
  3186  1173  34FF               	retlw	255
  3187  1174  34CB               	retlw	203
  3188  1175  34FF               	retlw	255
  3189  1176  34D1               	retlw	209
  3190  1177  34FF               	retlw	255
  3191  1178  34D8               	retlw	216
  3192  1179  34FF               	retlw	255
  3193  117A  34DF               	retlw	223
  3194  117B  34FF               	retlw	255
  3195  117C  34E5               	retlw	229
  3196  117D  34FF               	retlw	255
  3197  117E  34EC               	retlw	236
  3198  117F  34FF               	retlw	255
  3199  1180  34F3               	retlw	243
  3200  1181  34FF               	retlw	255
  3201  1182  34F9               	retlw	249
  3202  1183  34FF               	retlw	255
  3203  1184  3400               	retlw	0
  3204  1185  3400               	retlw	0
  3205                           
  3206                           	psect	idataBANK6
  3207  110A                     __pidataBANK6:	
  3208                           
  3209                           ;initializer for _mod4
  3210  110A  3464               	retlw	100
  3211  110B  3400               	retlw	0
  3212  110C  3464               	retlw	100
  3213  110D  3400               	retlw	0
  3214  110E  3464               	retlw	100
  3215  110F  3400               	retlw	0
  3216  1110  3464               	retlw	100
  3217  1111  3400               	retlw	0
  3218  1112  3464               	retlw	100
  3219  1113  3400               	retlw	0
  3220  1114  3464               	retlw	100
  3221  1115  3400               	retlw	0
  3222  1116  3464               	retlw	100
  3223  1117  3400               	retlw	0
  3224  1118  3464               	retlw	100
  3225  1119  3400               	retlw	0
  3226  111A  3464               	retlw	100
  3227  111B  3400               	retlw	0
  3228  111C  3464               	retlw	100
  3229  111D  3400               	retlw	0
  3230  111E  3464               	retlw	100
  3231  111F  3400               	retlw	0
  3232  1120  3464               	retlw	100
  3233  1121  3400               	retlw	0
  3234  1122  3464               	retlw	100
  3235  1123  3400               	retlw	0
  3236  1124  3464               	retlw	100
  3237  1125  3400               	retlw	0
  3238  1126  3464               	retlw	100
  3239  1127  3400               	retlw	0
  3240  1128  349C               	retlw	156
  3241  1129  34FF               	retlw	255
  3242  112A  349C               	retlw	156
  3243  112B  34FF               	retlw	255
  3244  112C  349C               	retlw	156
  3245  112D  34FF               	retlw	255
  3246  112E  349C               	retlw	156
  3247  112F  34FF               	retlw	255
  3248  1130  349C               	retlw	156
  3249  1131  34FF               	retlw	255
  3250  1132  349C               	retlw	156
  3251  1133  34FF               	retlw	255
  3252  1134  349C               	retlw	156
  3253  1135  34FF               	retlw	255
  3254  1136  349C               	retlw	156
  3255  1137  34FF               	retlw	255
  3256  1138  349C               	retlw	156
  3257  1139  34FF               	retlw	255
  3258  113A  349C               	retlw	156
  3259  113B  34FF               	retlw	255
  3260  113C  349C               	retlw	156
  3261  113D  34FF               	retlw	255
  3262  113E  349C               	retlw	156
  3263  113F  34FF               	retlw	255
  3264  1140  349C               	retlw	156
  3265  1141  34FF               	retlw	255
  3266  1142  349C               	retlw	156
  3267  1143  34FF               	retlw	255
  3268  1144  349C               	retlw	156
  3269  1145  34FF               	retlw	255
  3270  1146  3464               	retlw	100
  3271  1147  3400               	retlw	0
  3272                           
  3273                           	psect	idataBANK7
  3274  144D                     __pidataBANK7:	
  3275                           
  3276                           ;initializer for _B25k
  3277  144D  34FF               	retlw	255
  3278  144E  3400               	retlw	0
  3279  144F  34FF               	retlw	255
  3280  1450  3400               	retlw	0
  3281  1451  34FF               	retlw	255
  3282  1452  3400               	retlw	0
  3283  1453  34DF               	retlw	223
  3284  1454  3400               	retlw	0
  3285  1455  34AE               	retlw	174
  3286  1456  3400               	retlw	0
  3287  1457  348E               	retlw	142
  3288  1458  3400               	retlw	0
  3289  1459  3478               	retlw	120
  3290  145A  3400               	retlw	0
  3291  145B  3467               	retlw	103
  3292  145C  3400               	retlw	0
  3293  145D  345B               	retlw	91
  3294  145E  3400               	retlw	0
  3295  145F  3450               	retlw	80
  3296  1460  3400               	retlw	0
  3297  1461  3448               	retlw	72
  3298  1462  3400               	retlw	0
  3299  1463  3442               	retlw	66
  3300  1464  3400               	retlw	0
  3301  1465  343C               	retlw	60
  3302  1466  3400               	retlw	0
  3303  1467  3437               	retlw	55
  3304  1468  3400               	retlw	0
  3305  1469  3433               	retlw	51
  3306  146A  3400               	retlw	0
  3307  146B  3430               	retlw	48
  3308  146C  3400               	retlw	0
  3309  146D  342D               	retlw	45
  3310  146E  3400               	retlw	0
  3311  146F  342A               	retlw	42
  3312  1470  3400               	retlw	0
  3313  1471  3427               	retlw	39
  3314  1472  3400               	retlw	0
  3315  1473  3425               	retlw	37
  3316  1474  3400               	retlw	0
  3317  1475  3423               	retlw	35
  3318  1476  3400               	retlw	0
  3319  1477  3421               	retlw	33
  3320  1478  3400               	retlw	0
  3321  1479  3420               	retlw	32
  3322  147A  3400               	retlw	0
  3323  147B  341E               	retlw	30
  3324  147C  3400               	retlw	0
  3325  147D  341D               	retlw	29
  3326  147E  3400               	retlw	0
  3327  147F  341C               	retlw	28
  3328  1480  3400               	retlw	0
  3329  1481  341B               	retlw	27
  3330  1482  3400               	retlw	0
  3331  1483  341A               	retlw	26
  3332  1484  3400               	retlw	0
  3333  1485  3419               	retlw	25
  3334  1486  3400               	retlw	0
  3335  1487  3418               	retlw	24
  3336  1488  3400               	retlw	0
  3337  1489  3417               	retlw	23
  3338  148A  3400               	retlw	0
  3339  148B  3416               	retlw	22
  3340  148C  3400               	retlw	0
  3341  148D  3415               	retlw	21
  3342  148E  3400               	retlw	0
  3343  148F  3415               	retlw	21
  3344  1490  3400               	retlw	0
  3345  1491  3414               	retlw	20
  3346  1492  3400               	retlw	0
  3347  1493  3413               	retlw	19
  3348  1494  3400               	retlw	0
  3349  1495  340F               	retlw	15
  3350  1496  3400               	retlw	0
  3351  1497  340B               	retlw	11
  3352  1498  3400               	retlw	0
  3353  1499  3407               	retlw	7
  3354  149A  3400               	retlw	0
  3355  149B  3407               	retlw	7
  3356  149C  3400               	retlw	0
  3357                           
  3358                           	psect	idataBANK8
  3359  13FD                     __pidataBANK8:	
  3360                           
  3361                           ;initializer for _iB25k
  3362  13FD  3407               	retlw	7
  3363  13FE  3400               	retlw	0
  3364  13FF  3407               	retlw	7
  3365  1400  3400               	retlw	0
  3366  1401  340B               	retlw	11
  3367  1402  3400               	retlw	0
  3368  1403  340F               	retlw	15
  3369  1404  3400               	retlw	0
  3370  1405  3413               	retlw	19
  3371  1406  3400               	retlw	0
  3372  1407  3414               	retlw	20
  3373  1408  3400               	retlw	0
  3374  1409  3415               	retlw	21
  3375  140A  3400               	retlw	0
  3376  140B  3415               	retlw	21
  3377  140C  3400               	retlw	0
  3378  140D  3416               	retlw	22
  3379  140E  3400               	retlw	0
  3380  140F  3417               	retlw	23
  3381  1410  3400               	retlw	0
  3382  1411  3418               	retlw	24
  3383  1412  3400               	retlw	0
  3384  1413  3419               	retlw	25
  3385  1414  3400               	retlw	0
  3386  1415  341A               	retlw	26
  3387  1416  3400               	retlw	0
  3388  1417  341B               	retlw	27
  3389  1418  3400               	retlw	0
  3390  1419  341C               	retlw	28
  3391  141A  3400               	retlw	0
  3392  141B  341D               	retlw	29
  3393  141C  3400               	retlw	0
  3394  141D  341E               	retlw	30
  3395  141E  3400               	retlw	0
  3396  141F  3420               	retlw	32
  3397  1420  3400               	retlw	0
  3398  1421  3421               	retlw	33
  3399  1422  3400               	retlw	0
  3400  1423  3423               	retlw	35
  3401  1424  3400               	retlw	0
  3402  1425  3425               	retlw	37
  3403  1426  3400               	retlw	0
  3404  1427  3427               	retlw	39
  3405  1428  3400               	retlw	0
  3406  1429  342A               	retlw	42
  3407  142A  3400               	retlw	0
  3408  142B  342D               	retlw	45
  3409  142C  3400               	retlw	0
  3410  142D  3430               	retlw	48
  3411  142E  3400               	retlw	0
  3412  142F  3433               	retlw	51
  3413  1430  3400               	retlw	0
  3414  1431  3437               	retlw	55
  3415  1432  3400               	retlw	0
  3416  1433  343C               	retlw	60
  3417  1434  3400               	retlw	0
  3418  1435  3442               	retlw	66
  3419  1436  3400               	retlw	0
  3420  1437  3448               	retlw	72
  3421  1438  3400               	retlw	0
  3422  1439  3450               	retlw	80
  3423  143A  3400               	retlw	0
  3424  143B  345B               	retlw	91
  3425  143C  3400               	retlw	0
  3426  143D  3467               	retlw	103
  3427  143E  3400               	retlw	0
  3428  143F  3478               	retlw	120
  3429  1440  3400               	retlw	0
  3430  1441  348E               	retlw	142
  3431  1442  3400               	retlw	0
  3432  1443  34AE               	retlw	174
  3433  1444  3400               	retlw	0
  3434  1445  34DF               	retlw	223
  3435  1446  3400               	retlw	0
  3436  1447  34FF               	retlw	255
  3437  1448  3400               	retlw	0
  3438  1449  34FF               	retlw	255
  3439  144A  3400               	retlw	0
  3440  144B  34FF               	retlw	255
  3441  144C  3400               	retlw	0
  3442                           
  3443                           	psect	idataBANK10
  3444  10CC                     __pidataBANK10:	
  3445                           
  3446                           ;initializer for _mod1
  3447  10CC  3400               	retlw	0
  3448  10CD  3400               	retlw	0
  3449  10CE  3415               	retlw	21
  3450  10CF  3400               	retlw	0
  3451  10D0  3429               	retlw	41
  3452  10D1  3400               	retlw	0
  3453  10D2  343B               	retlw	59
  3454  10D3  3400               	retlw	0
  3455  10D4  344A               	retlw	74
  3456  10D5  3400               	retlw	0
  3457  10D6  3457               	retlw	87
  3458  10D7  3400               	retlw	0
  3459  10D8  345F               	retlw	95
  3460  10D9  3400               	retlw	0
  3461  10DA  3463               	retlw	99
  3462  10DB  3400               	retlw	0
  3463  10DC  3463               	retlw	99
  3464  10DD  3400               	retlw	0
  3465  10DE  345F               	retlw	95
  3466  10DF  3400               	retlw	0
  3467  10E0  3457               	retlw	87
  3468  10E1  3400               	retlw	0
  3469  10E2  344A               	retlw	74
  3470  10E3  3400               	retlw	0
  3471  10E4  343B               	retlw	59
  3472  10E5  3400               	retlw	0
  3473  10E6  3429               	retlw	41
  3474  10E7  3400               	retlw	0
  3475  10E8  3415               	retlw	21
  3476  10E9  3400               	retlw	0
  3477  10EA  3400               	retlw	0
  3478  10EB  3400               	retlw	0
  3479  10EC  34EB               	retlw	235
  3480  10ED  34FF               	retlw	255
  3481  10EE  34D7               	retlw	215
  3482  10EF  34FF               	retlw	255
  3483  10F0  34C5               	retlw	197
  3484  10F1  34FF               	retlw	255
  3485  10F2  34B6               	retlw	182
  3486  10F3  34FF               	retlw	255
  3487  10F4  34A9               	retlw	169
  3488  10F5  34FF               	retlw	255
  3489  10F6  34A1               	retlw	161
  3490  10F7  34FF               	retlw	255
  3491  10F8  349D               	retlw	157
  3492  10F9  34FF               	retlw	255
  3493  10FA  349D               	retlw	157
  3494  10FB  34FF               	retlw	255
  3495  10FC  34A1               	retlw	161
  3496  10FD  34FF               	retlw	255
  3497  10FE  34A9               	retlw	169
  3498  10FF  34FF               	retlw	255
  3499  1100  34B6               	retlw	182
  3500  1101  34FF               	retlw	255
  3501  1102  34C5               	retlw	197
  3502  1103  34FF               	retlw	255
  3503  1104  34D7               	retlw	215
  3504  1105  34FF               	retlw	255
  3505  1106  34EB               	retlw	235
  3506  1107  34FF               	retlw	255
  3507  1108  3400               	retlw	0
  3508  1109  3400               	retlw	0
  3509                           
  3510                           	psect	idataBIGRAM
  3511  0D88                     __pidataBIGRAM:	
  3512                           
  3513                           ;initializer for _delay
  3514  0D88  3422               	retlw	34
  3515  0D89  3408               	retlw	8
  3516  0D8A  34FC               	retlw	252
  3517  0D8B  3407               	retlw	7
  3518  0D8C  34D8               	retlw	216
  3519  0D8D  3407               	retlw	7
  3520  0D8E  34B5               	retlw	181
  3521  0D8F  3407               	retlw	7
  3522  0D90  3493               	retlw	147
  3523  0D91  3407               	retlw	7
  3524  0D92  3472               	retlw	114
  3525  0D93  3407               	retlw	7
  3526  0D94  3452               	retlw	82
  3527  0D95  3407               	retlw	7
  3528  0D96  3434               	retlw	52
  3529  0D97  3407               	retlw	7
  3530  0D98  3416               	retlw	22
  3531  0D99  3407               	retlw	7
  3532  0D9A  34F9               	retlw	249
  3533  0D9B  3406               	retlw	6
  3534  0D9C  34DD               	retlw	221
  3535  0D9D  3406               	retlw	6
  3536  0D9E  34C2               	retlw	194
  3537  0D9F  3406               	retlw	6
  3538  0DA0  34A8               	retlw	168
  3539  0DA1  3406               	retlw	6
  3540  0DA2  348F               	retlw	143
  3541  0DA3  3406               	retlw	6
  3542  0DA4  3476               	retlw	118
  3543  0DA5  3406               	retlw	6
  3544  0DA6  345E               	retlw	94
  3545  0DA7  3406               	retlw	6
  3546  0DA8  3447               	retlw	71
  3547  0DA9  3406               	retlw	6
  3548  0DAA  3430               	retlw	48
  3549  0DAB  3406               	retlw	6
  3550  0DAC  341A               	retlw	26
  3551  0DAD  3406               	retlw	6
  3552  0DAE  3405               	retlw	5
  3553  0DAF  3406               	retlw	6
  3554  0DB0  34F0               	retlw	240
  3555  0DB1  3405               	retlw	5
  3556  0DB2  34DC               	retlw	220
  3557  0DB3  3405               	retlw	5
  3558  0DB4  34C8               	retlw	200
  3559  0DB5  3405               	retlw	5
  3560  0DB6  34B5               	retlw	181
  3561  0DB7  3405               	retlw	5
  3562  0DB8  34A3               	retlw	163
  3563  0DB9  3405               	retlw	5
  3564  0DBA  3490               	retlw	144
  3565  0DBB  3405               	retlw	5
  3566  0DBC  347F               	retlw	127
  3567  0DBD  3405               	retlw	5
  3568  0DBE  346D               	retlw	109
  3569  0DBF  3405               	retlw	5
  3570  0DC0  345C               	retlw	92
  3571  0DC1  3405               	retlw	5
  3572  0DC2  344C               	retlw	76
  3573  0DC3  3405               	retlw	5
  3574  0DC4  343C               	retlw	60
  3575  0DC5  3405               	retlw	5
  3576  0DC6  342C               	retlw	44
  3577  0DC7  3405               	retlw	5
  3578  0DC8  341D               	retlw	29
  3579  0DC9  3405               	retlw	5
  3580  0DCA  340E               	retlw	14
  3581  0DCB  3405               	retlw	5
  3582  0DCC  34FF               	retlw	255
  3583  0DCD  3404               	retlw	4
  3584  0DCE  34F1               	retlw	241
  3585  0DCF  3404               	retlw	4
  3586  0DD0  34E2               	retlw	226
  3587  0DD1  3404               	retlw	4
  3588  0DD2  34D5               	retlw	213
  3589  0DD3  3404               	retlw	4
  3590  0DD4  34C7               	retlw	199
  3591  0DD5  3404               	retlw	4
  3592  0DD6  34BA               	retlw	186
  3593  0DD7  3404               	retlw	4
  3594  0DD8  34AD               	retlw	173
  3595  0DD9  3404               	retlw	4
  3596  0DDA  34A1               	retlw	161
  3597  0DDB  3404               	retlw	4
  3598  0DDC  3494               	retlw	148
  3599  0DDD  3404               	retlw	4
  3600  0DDE  3488               	retlw	136
  3601  0DDF  3404               	retlw	4
  3602  0DE0  347D               	retlw	125
  3603  0DE1  3404               	retlw	4
  3604  0DE2  3471               	retlw	113
  3605  0DE3  3404               	retlw	4
  3606  0DE4  3466               	retlw	102
  3607  0DE5  3404               	retlw	4
  3608  0DE6  345A               	retlw	90
  3609  0DE7  3404               	retlw	4
  3610  0DE8  3450               	retlw	80
  3611  0DE9  3404               	retlw	4
  3612  0DEA  3445               	retlw	69
  3613  0DEB  3404               	retlw	4
  3614  0DEC  343A               	retlw	58
  3615  0DED  3404               	retlw	4
  3616  0DEE  3430               	retlw	48
  3617  0DEF  3404               	retlw	4
  3618  0DF0  3426               	retlw	38
  3619  0DF1  3404               	retlw	4
  3620  0DF2  341C               	retlw	28
  3621  0DF3  3404               	retlw	4
  3622  0DF4  3412               	retlw	18
  3623  0DF5  3404               	retlw	4
  3624  0DF6  3409               	retlw	9
  3625  0DF7  3404               	retlw	4
  3626  0DF8  34FF               	retlw	255
  3627  0DF9  3403               	retlw	3
  3628  0DFA  34F6               	retlw	246
  3629  0DFB  3403               	retlw	3
  3630  0DFC  34ED               	retlw	237
  3631  0DFD  3403               	retlw	3
  3632  0DFE  34E4               	retlw	228
  3633  0DFF  3403               	retlw	3
  3634  0E00  34DC               	retlw	220
  3635  0E01  3403               	retlw	3
  3636  0E02  34D3               	retlw	211
  3637  0E03  3403               	retlw	3
  3638  0E04  34CB               	retlw	203
  3639  0E05  3403               	retlw	3
  3640  0E06  34C2               	retlw	194
  3641  0E07  3403               	retlw	3
  3642  0E08  34BA               	retlw	186
  3643  0E09  3403               	retlw	3
  3644  0E0A  34B2               	retlw	178
  3645  0E0B  3403               	retlw	3
  3646  0E0C  34AA               	retlw	170
  3647  0E0D  3403               	retlw	3
  3648  0E0E  34A2               	retlw	162
  3649  0E0F  3403               	retlw	3
  3650  0E10  349B               	retlw	155
  3651  0E11  3403               	retlw	3
  3652  0E12  3493               	retlw	147
  3653  0E13  3403               	retlw	3
  3654  0E14  348C               	retlw	140
  3655  0E15  3403               	retlw	3
  3656  0E16  3485               	retlw	133
  3657  0E17  3403               	retlw	3
  3658  0E18  347E               	retlw	126
  3659  0E19  3403               	retlw	3
  3660  0E1A  3477               	retlw	119
  3661  0E1B  3403               	retlw	3
  3662  0E1C  3470               	retlw	112
  3663  0E1D  3403               	retlw	3
  3664  0E1E  3469               	retlw	105
  3665  0E1F  3403               	retlw	3
  3666  0E20  3462               	retlw	98
  3667  0E21  3403               	retlw	3
  3668  0E22  345C               	retlw	92
  3669  0E23  3403               	retlw	3
  3670  0E24  3455               	retlw	85
  3671  0E25  3403               	retlw	3
  3672  0E26  344F               	retlw	79
  3673  0E27  3403               	retlw	3
  3674  0E28  3448               	retlw	72
  3675  0E29  3403               	retlw	3
  3676  0E2A  3442               	retlw	66
  3677  0E2B  3403               	retlw	3
  3678  0E2C  343C               	retlw	60
  3679  0E2D  3403               	retlw	3
  3680  0E2E  3436               	retlw	54
  3681  0E2F  3403               	retlw	3
  3682  0E30  3430               	retlw	48
  3683  0E31  3403               	retlw	3
  3684  0E32  342A               	retlw	42
  3685  0E33  3403               	retlw	3
  3686  0E34  3424               	retlw	36
  3687  0E35  3403               	retlw	3
  3688  0E36  341F               	retlw	31
  3689  0E37  3403               	retlw	3
  3690  0E38  3419               	retlw	25
  3691  0E39  3403               	retlw	3
  3692  0E3A  3413               	retlw	19
  3693  0E3B  3403               	retlw	3
  3694  0E3C  340E               	retlw	14
  3695  0E3D  3403               	retlw	3
  3696  0E3E  3409               	retlw	9
  3697  0E3F  3403               	retlw	3
  3698  0E40  3403               	retlw	3
  3699  0E41  3403               	retlw	3
  3700  0E42  34FE               	retlw	254
  3701  0E43  3402               	retlw	2
  3702  0E44  34F9               	retlw	249
  3703  0E45  3402               	retlw	2
  3704  0E46  34F4               	retlw	244
  3705  0E47  3402               	retlw	2
  3706  0E48  34EF               	retlw	239
  3707  0E49  3402               	retlw	2
  3708  0E4A  34EA               	retlw	234
  3709  0E4B  3402               	retlw	2
  3710  0E4C  34E5               	retlw	229
  3711  0E4D  3402               	retlw	2
  3712  0E4E  34E0               	retlw	224
  3713  0E4F  3402               	retlw	2
  3714  0E50  34DB               	retlw	219
  3715  0E51  3402               	retlw	2
  3716  0E52  34D7               	retlw	215
  3717  0E53  3402               	retlw	2
  3718  0E54  34D2               	retlw	210
  3719  0E55  3402               	retlw	2
  3720  0E56  34CD               	retlw	205
  3721  0E57  3402               	retlw	2
  3722  0E58  34C9               	retlw	201
  3723  0E59  3402               	retlw	2
  3724  0E5A  34C4               	retlw	196
  3725  0E5B  3402               	retlw	2
  3726  0E5C  34C0               	retlw	192
  3727  0E5D  3402               	retlw	2
  3728  0E5E  34BC               	retlw	188
  3729  0E5F  3402               	retlw	2
  3730  0E60  34B7               	retlw	183
  3731  0E61  3402               	retlw	2
  3732  0E62  34B3               	retlw	179
  3733  0E63  3402               	retlw	2
  3734  0E64  34AF               	retlw	175
  3735  0E65  3402               	retlw	2
  3736  0E66  34AB               	retlw	171
  3737  0E67  3402               	retlw	2
  3738  0E68  34A6               	retlw	166
  3739  0E69  3402               	retlw	2
  3740  0E6A  34A2               	retlw	162
  3741  0E6B  3402               	retlw	2
  3742  0E6C  349E               	retlw	158
  3743  0E6D  3402               	retlw	2
  3744  0E6E  349A               	retlw	154
  3745  0E6F  3402               	retlw	2
  3746  0E70  3497               	retlw	151
  3747  0E71  3402               	retlw	2
  3748  0E72  3493               	retlw	147
  3749  0E73  3402               	retlw	2
  3750  0E74  348F               	retlw	143
  3751  0E75  3402               	retlw	2
  3752  0E76  348B               	retlw	139
  3753  0E77  3402               	retlw	2
  3754  0E78  3487               	retlw	135
  3755  0E79  3402               	retlw	2
  3756  0E7A  3484               	retlw	132
  3757  0E7B  3402               	retlw	2
  3758  0E7C  3480               	retlw	128
  3759  0E7D  3402               	retlw	2
  3760  0E7E  347C               	retlw	124
  3761  0E7F  3402               	retlw	2
  3762  0E80  3479               	retlw	121
  3763  0E81  3402               	retlw	2
  3764  0E82  3475               	retlw	117
  3765  0E83  3402               	retlw	2
  3766  0E84  3472               	retlw	114
  3767  0E85  3402               	retlw	2
  3768  0E86  346E               	retlw	110
  3769  0E87  3402               	retlw	2
  3770  0E88  346B               	retlw	107
  3771  0E89  3402               	retlw	2
  3772  0E8A  3467               	retlw	103
  3773  0E8B  3402               	retlw	2
  3774  0E8C  3464               	retlw	100
  3775  0E8D  3402               	retlw	2
  3776  0E8E  3461               	retlw	97
  3777  0E8F  3402               	retlw	2
  3778  0E90  345E               	retlw	94
  3779  0E91  3402               	retlw	2
  3780  0E92  345A               	retlw	90
  3781  0E93  3402               	retlw	2
  3782  0E94  3457               	retlw	87
  3783  0E95  3402               	retlw	2
  3784  0E96  3454               	retlw	84
  3785  0E97  3402               	retlw	2
  3786  0E98  3451               	retlw	81
  3787  0E99  3402               	retlw	2
  3788  0E9A  344E               	retlw	78
  3789  0E9B  3402               	retlw	2
  3790  0E9C  344B               	retlw	75
  3791  0E9D  3402               	retlw	2
  3792  0E9E  3448               	retlw	72
  3793  0E9F  3402               	retlw	2
  3794  0EA0  3445               	retlw	69
  3795  0EA1  3402               	retlw	2
  3796  0EA2  3442               	retlw	66
  3797  0EA3  3402               	retlw	2
  3798  0EA4  343F               	retlw	63
  3799  0EA5  3402               	retlw	2
  3800  0EA6  343C               	retlw	60
  3801  0EA7  3402               	retlw	2
  3802  0EA8  3439               	retlw	57
  3803  0EA9  3402               	retlw	2
  3804  0EAA  3436               	retlw	54
  3805  0EAB  3402               	retlw	2
  3806  0EAC  3433               	retlw	51
  3807  0EAD  3402               	retlw	2
  3808  0EAE  3430               	retlw	48
  3809  0EAF  3402               	retlw	2
  3810  0EB0  342E               	retlw	46
  3811  0EB1  3402               	retlw	2
  3812  0EB2  342B               	retlw	43
  3813  0EB3  3402               	retlw	2
  3814  0EB4  3428               	retlw	40
  3815  0EB5  3402               	retlw	2
  3816  0EB6  3425               	retlw	37
  3817  0EB7  3402               	retlw	2
  3818  0EB8  3423               	retlw	35
  3819  0EB9  3402               	retlw	2
  3820  0EBA  3420               	retlw	32
  3821  0EBB  3402               	retlw	2
  3822  0EBC  341E               	retlw	30
  3823  0EBD  3402               	retlw	2
  3824  0EBE  341B               	retlw	27
  3825  0EBF  3402               	retlw	2
  3826  0EC0  3418               	retlw	24
  3827  0EC1  3402               	retlw	2
  3828  0EC2  3416               	retlw	22
  3829  0EC3  3402               	retlw	2
  3830  0EC4  3413               	retlw	19
  3831  0EC5  3402               	retlw	2
  3832  0EC6  3411               	retlw	17
  3833  0EC7  3402               	retlw	2
  3834  0EC8  340E               	retlw	14
  3835  0EC9  3402               	retlw	2
  3836  0ECA  340C               	retlw	12
  3837  0ECB  3402               	retlw	2
  3838  0ECC  340A               	retlw	10
  3839  0ECD  3402               	retlw	2
  3840  0ECE  3407               	retlw	7
  3841  0ECF  3402               	retlw	2
  3842  0ED0  3405               	retlw	5
  3843  0ED1  3402               	retlw	2
  3844  0ED2  3402               	retlw	2
  3845  0ED3  3402               	retlw	2
  3846  0ED4  3400               	retlw	0
  3847  0ED5  3402               	retlw	2
  3848  0ED6  34FE               	retlw	254
  3849  0ED7  3401               	retlw	1
  3850  0ED8  34FB               	retlw	251
  3851  0ED9  3401               	retlw	1
  3852  0EDA  34F9               	retlw	249
  3853  0EDB  3401               	retlw	1
  3854  0EDC  34F7               	retlw	247
  3855  0EDD  3401               	retlw	1
  3856  0EDE  34F5               	retlw	245
  3857  0EDF  3401               	retlw	1
  3858  0EE0  34F2               	retlw	242
  3859  0EE1  3401               	retlw	1
  3860  0EE2  34F0               	retlw	240
  3861  0EE3  3401               	retlw	1
  3862  0EE4  34EE               	retlw	238
  3863  0EE5  3401               	retlw	1
  3864  0EE6  34EC               	retlw	236
  3865  0EE7  3401               	retlw	1
  3866  0EE8  34EA               	retlw	234
  3867  0EE9  3401               	retlw	1
  3868  0EEA  34E8               	retlw	232
  3869  0EEB  3401               	retlw	1
  3870  0EEC  34E6               	retlw	230
  3871  0EED  3401               	retlw	1
  3872  0EEE  34E3               	retlw	227
  3873  0EEF  3401               	retlw	1
  3874  0EF0  34E1               	retlw	225
  3875  0EF1  3401               	retlw	1
  3876  0EF2  34DF               	retlw	223
  3877  0EF3  3401               	retlw	1
  3878  0EF4  34DD               	retlw	221
  3879  0EF5  3401               	retlw	1
  3880  0EF6  34DB               	retlw	219
  3881  0EF7  3401               	retlw	1
  3882  0EF8  34D9               	retlw	217
  3883  0EF9  3401               	retlw	1
  3884  0EFA  34D7               	retlw	215
  3885  0EFB  3401               	retlw	1
  3886  0EFC  34D5               	retlw	213
  3887  0EFD  3401               	retlw	1
  3888  0EFE  34D3               	retlw	211
  3889  0EFF  3401               	retlw	1
  3890  0F00  34D2               	retlw	210
  3891  0F01  3401               	retlw	1
  3892  0F02  34D0               	retlw	208
  3893  0F03  3401               	retlw	1
  3894  0F04  34CE               	retlw	206
  3895  0F05  3401               	retlw	1
  3896  0F06  34CC               	retlw	204
  3897  0F07  3401               	retlw	1
  3898  0F08  34CA               	retlw	202
  3899  0F09  3401               	retlw	1
  3900  0F0A  34C8               	retlw	200
  3901  0F0B  3401               	retlw	1
  3902  0F0C  34C6               	retlw	198
  3903  0F0D  3401               	retlw	1
  3904  0F0E  34C4               	retlw	196
  3905  0F0F  3401               	retlw	1
  3906  0F10  34C3               	retlw	195
  3907  0F11  3401               	retlw	1
  3908  0F12  34C1               	retlw	193
  3909  0F13  3401               	retlw	1
  3910  0F14  34BF               	retlw	191
  3911  0F15  3401               	retlw	1
  3912  0F16  34BD               	retlw	189
  3913  0F17  3401               	retlw	1
  3914  0F18  34BC               	retlw	188
  3915  0F19  3401               	retlw	1
  3916  0F1A  34BA               	retlw	186
  3917  0F1B  3401               	retlw	1
  3918  0F1C  34B8               	retlw	184
  3919  0F1D  3401               	retlw	1
  3920  0F1E  34B6               	retlw	182
  3921  0F1F  3401               	retlw	1
  3922  0F20  34B5               	retlw	181
  3923  0F21  3401               	retlw	1
  3924  0F22  34B3               	retlw	179
  3925  0F23  3401               	retlw	1
  3926  0F24  34B1               	retlw	177
  3927  0F25  3401               	retlw	1
  3928  0F26  34B0               	retlw	176
  3929  0F27  3401               	retlw	1
  3930  0F28  34AE               	retlw	174
  3931  0F29  3401               	retlw	1
  3932  0F2A  34AC               	retlw	172
  3933  0F2B  3401               	retlw	1
  3934  0F2C  34AB               	retlw	171
  3935  0F2D  3401               	retlw	1
  3936  0F2E  34A9               	retlw	169
  3937  0F2F  3401               	retlw	1
  3938  0F30  34A8               	retlw	168
  3939  0F31  3401               	retlw	1
  3940  0F32  34A6               	retlw	166
  3941  0F33  3401               	retlw	1
  3942  0F34  34A4               	retlw	164
  3943  0F35  3401               	retlw	1
  3944  0F36  34A3               	retlw	163
  3945  0F37  3401               	retlw	1
  3946  0F38  34A1               	retlw	161
  3947  0F39  3401               	retlw	1
  3948  0F3A  34A0               	retlw	160
  3949  0F3B  3401               	retlw	1
  3950  0F3C  349E               	retlw	158
  3951  0F3D  3401               	retlw	1
  3952  0F3E  349D               	retlw	157
  3953  0F3F  3401               	retlw	1
  3954  0F40  349B               	retlw	155
  3955  0F41  3401               	retlw	1
  3956  0F42  349A               	retlw	154
  3957  0F43  3401               	retlw	1
  3958  0F44  3498               	retlw	152
  3959  0F45  3401               	retlw	1
  3960  0F46  3497               	retlw	151
  3961  0F47  3401               	retlw	1
  3962  0F48  3495               	retlw	149
  3963  0F49  3401               	retlw	1
  3964  0F4A  3494               	retlw	148
  3965  0F4B  3401               	retlw	1
  3966  0F4C  3492               	retlw	146
  3967  0F4D  3401               	retlw	1
  3968  0F4E  3491               	retlw	145
  3969  0F4F  3401               	retlw	1
  3970  0F50  3490               	retlw	144
  3971  0F51  3401               	retlw	1
  3972  0F52  348E               	retlw	142
  3973  0F53  3401               	retlw	1
  3974  0F54  348D               	retlw	141
  3975  0F55  3401               	retlw	1
  3976  0F56  348B               	retlw	139
  3977  0F57  3401               	retlw	1
  3978  0F58  348A               	retlw	138
  3979  0F59  3401               	retlw	1
  3980  0F5A  3489               	retlw	137
  3981  0F5B  3401               	retlw	1
  3982  0F5C  3487               	retlw	135
  3983  0F5D  3401               	retlw	1
  3984  0F5E  3486               	retlw	134
  3985  0F5F  3401               	retlw	1
  3986  0F60  3485               	retlw	133
  3987  0F61  3401               	retlw	1
  3988  0F62  3483               	retlw	131
  3989  0F63  3401               	retlw	1
  3990  0F64  3482               	retlw	130
  3991  0F65  3401               	retlw	1
  3992  0F66  3481               	retlw	129
  3993  0F67  3401               	retlw	1
  3994  0F68  347F               	retlw	127
  3995  0F69  3401               	retlw	1
  3996  0F6A  347E               	retlw	126
  3997  0F6B  3401               	retlw	1
  3998  0F6C  347D               	retlw	125
  3999  0F6D  3401               	retlw	1
  4000  0F6E  347B               	retlw	123
  4001  0F6F  3401               	retlw	1
  4002  0F70  347A               	retlw	122
  4003  0F71  3401               	retlw	1
  4004  0F72  3479               	retlw	121
  4005  0F73  3401               	retlw	1
  4006  0F74  3478               	retlw	120
  4007  0F75  3401               	retlw	1
  4008  0F76  3476               	retlw	118
  4009  0F77  3401               	retlw	1
  4010  0F78  3475               	retlw	117
  4011  0F79  3401               	retlw	1
  4012  0F7A  3474               	retlw	116
  4013  0F7B  3401               	retlw	1
  4014  0F7C  3473               	retlw	115
  4015  0F7D  3401               	retlw	1
  4016  0F7E  3471               	retlw	113
  4017  0F7F  3401               	retlw	1
  4018  0F80  3470               	retlw	112
  4019  0F81  3401               	retlw	1
  4020  0F82  346F               	retlw	111
  4021  0F83  3401               	retlw	1
  4022  0F84  346E               	retlw	110
  4023  0F85  3401               	retlw	1
  4024                           
  4025                           ;initializer for _mod5
  4026  0F86  3400               	retlw	0
  4027  0F87  3400               	retlw	0
  4028  0F88  340A               	retlw	10
  4029  0F89  3400               	retlw	0
  4030  0F8A  3414               	retlw	20
  4031  0F8B  3400               	retlw	0
  4032  0F8C  341E               	retlw	30
  4033  0F8D  3400               	retlw	0
  4034  0F8E  3428               	retlw	40
  4035  0F8F  3400               	retlw	0
  4036  0F90  3432               	retlw	50
  4037  0F91  3400               	retlw	0
  4038  0F92  343A               	retlw	58
  4039  0F93  3400               	retlw	0
  4040  0F94  3442               	retlw	66
  4041  0F95  3400               	retlw	0
  4042  0F96  344A               	retlw	74
  4043  0F97  3400               	retlw	0
  4044  0F98  3450               	retlw	80
  4045  0F99  3400               	retlw	0
  4046  0F9A  3456               	retlw	86
  4047  0F9B  3400               	retlw	0
  4048  0F9C  345B               	retlw	91
  4049  0F9D  3400               	retlw	0
  4050  0F9E  345F               	retlw	95
  4051  0F9F  3400               	retlw	0
  4052  0FA0  3461               	retlw	97
  4053  0FA1  3400               	retlw	0
  4054  0FA2  3463               	retlw	99
  4055  0FA3  3400               	retlw	0
  4056  0FA4  3464               	retlw	100
  4057  0FA5  3400               	retlw	0
  4058  0FA6  3463               	retlw	99
  4059  0FA7  3400               	retlw	0
  4060  0FA8  3461               	retlw	97
  4061  0FA9  3400               	retlw	0
  4062  0FAA  345F               	retlw	95
  4063  0FAB  3400               	retlw	0
  4064  0FAC  345B               	retlw	91
  4065  0FAD  3400               	retlw	0
  4066  0FAE  3456               	retlw	86
  4067  0FAF  3400               	retlw	0
  4068  0FB0  3450               	retlw	80
  4069  0FB1  3400               	retlw	0
  4070  0FB2  344A               	retlw	74
  4071  0FB3  3400               	retlw	0
  4072  0FB4  3442               	retlw	66
  4073  0FB5  3400               	retlw	0
  4074  0FB6  343A               	retlw	58
  4075  0FB7  3400               	retlw	0
  4076  0FB8  3432               	retlw	50
  4077  0FB9  3400               	retlw	0
  4078  0FBA  3428               	retlw	40
  4079  0FBB  3400               	retlw	0
  4080  0FBC  341E               	retlw	30
  4081  0FBD  3400               	retlw	0
  4082  0FBE  3414               	retlw	20
  4083  0FBF  3400               	retlw	0
  4084  0FC0  340A               	retlw	10
  4085  0FC1  3400               	retlw	0
  4086  0FC2  3400               	retlw	0
  4087  0FC3  3400               	retlw	0
  4088  0FC4  34F6               	retlw	246
  4089  0FC5  34FF               	retlw	255
  4090  0FC6  34EC               	retlw	236
  4091  0FC7  34FF               	retlw	255
  4092  0FC8  34E2               	retlw	226
  4093  0FC9  34FF               	retlw	255
  4094  0FCA  34D8               	retlw	216
  4095  0FCB  34FF               	retlw	255
  4096  0FCC  34CE               	retlw	206
  4097  0FCD  34FF               	retlw	255
  4098  0FCE  34C6               	retlw	198
  4099  0FCF  34FF               	retlw	255
  4100  0FD0  34BE               	retlw	190
  4101  0FD1  34FF               	retlw	255
  4102  0FD2  34B6               	retlw	182
  4103  0FD3  34FF               	retlw	255
  4104  0FD4  34B0               	retlw	176
  4105  0FD5  34FF               	retlw	255
  4106  0FD6  34AA               	retlw	170
  4107  0FD7  34FF               	retlw	255
  4108  0FD8  34A5               	retlw	165
  4109  0FD9  34FF               	retlw	255
  4110  0FDA  34A1               	retlw	161
  4111  0FDB  34FF               	retlw	255
  4112  0FDC  349F               	retlw	159
  4113  0FDD  34FF               	retlw	255
  4114  0FDE  349D               	retlw	157
  4115  0FDF  34FF               	retlw	255
  4116  0FE0  349C               	retlw	156
  4117  0FE1  34FF               	retlw	255
  4118  0FE2  349D               	retlw	157
  4119  0FE3  34FF               	retlw	255
  4120  0FE4  349F               	retlw	159
  4121  0FE5  34FF               	retlw	255
  4122  0FE6  34A1               	retlw	161
  4123  0FE7  34FF               	retlw	255
  4124  0FE8  34A5               	retlw	165
  4125  0FE9  34FF               	retlw	255
  4126  0FEA  34AA               	retlw	170
  4127  0FEB  34FF               	retlw	255
  4128  0FEC  34B0               	retlw	176
  4129  0FED  34FF               	retlw	255
  4130  0FEE  34B6               	retlw	182
  4131  0FEF  34FF               	retlw	255
  4132  0FF0  34BE               	retlw	190
  4133  0FF1  34FF               	retlw	255
  4134  0FF2  34C6               	retlw	198
  4135  0FF3  34FF               	retlw	255
  4136  0FF4  34CE               	retlw	206
  4137  0FF5  34FF               	retlw	255
  4138  0FF6  34D8               	retlw	216
  4139  0FF7  34FF               	retlw	255
  4140  0FF8  34E2               	retlw	226
  4141  0FF9  34FF               	retlw	255
  4142  0FFA  34EC               	retlw	236
  4143  0FFB  34FF               	retlw	255
  4144  0FFC  34F6               	retlw	246
  4145  0FFD  34FF               	retlw	255
  4146  0FFE  3400               	retlw	0
  4147  0FFF  3400               	retlw	0
  4148  000B                     _INTCONbits	set	11
  4149  000E                     _PORTCbits	set	14
  4150  000F                     _PORTDbits	set	15
  4151  0010                     _PORTEbits	set	16
  4152  001B                     _PR2	set	27
  4153  001C                     _T2CONbits	set	28
  4154  009D                     _ADCON0bits	set	157
  4155  009E                     _ADCON1bits	set	158
  4156  009C                     _ADRESH	set	156
  4157  009B                     _ADRESL	set	155
  4158  0095                     _OPTION_REGbits	set	149
  4159  0099                     _OSCCONbits	set	153
  4160  008D                     _TRISBbits	set	141
  4161  008E                     _TRISCbits	set	142
  4162  008F                     _TRISDbits	set	143
  4163  0090                     _TRISEbits	set	144
  4164  011D                     _APFCONbits	set	285
  4165  010D                     _LATBbits	set	269
  4166  010F                     _LATDbits	set	271
  4167  0190                     _ANSELEbits	set	400
  4168  0192                     _PMADRH	set	402
  4169  0191                     _PMADRL	set	401
  4170  0195                     _PMCON1bits	set	405
  4171  0196                     _PMCON2	set	406
  4172  0194                     _PMDATH	set	404
  4173  0193                     _PMDATL	set	403
  4174  0291                     _CCPR1	set	657
  4175  0298                     _CCPR2	set	664
  4176  0293                     _CCP1CONbits	set	659
  4177  029A                     _CCP2CONbits	set	666
  4178  029D                     _CCPTMRS0	set	669
  4179  029E                     _CCPTMRS1	set	670
  4180  029F                     _CCPTMRS2	set	671
  4181  0311                     _CCPR3	set	785
  4182  0318                     _CCPR4	set	792
  4183  031C                     _CCPR5	set	796
  4184  0313                     _CCP3CONbits	set	787
  4185  031A                     _CCP4CONbits	set	794
  4186  031E                     _CCP5CONbits	set	798
  4187  030C                     _TRISFbits	set	780
  4188  030D                     _TRISGbits	set	781
  4189  038C                     _LATFbits	set	908
  4190  038D                     _LATGbits	set	909
  4191  040C                     _ANSELFbits	set	1036
  4192  061A                     _CCPR9	set	1562
  4193  061F                     _CCP10CONbits	set	1567
  4194  0613                     _CCP6CONbits	set	1555
  4195  0616                     _CCP7CONbits	set	1558
  4196  0619                     _CCP8CONbits	set	1561
  4197  061C                     _CCP9CONbits	set	1564
  4198                           
  4199                           ; #config settings
  4200  0000                     
  4201                           	psect	cinit
  4202  01EA                     start_initialization:	
  4203  01EA                     __initialization:		;BIGRAM
  4204                           
  4205                           ; Clear objects allocated to BANK0
  4206  01EA  01EB               	clrf	__pbssBANK0& (0+127)
  4207                           
  4208                           ; Clear objects allocated to BANK1
  4209  01EB  30DC               	movlw	low __pbssBANK1
  4210  01EC  0084               	movwf	4
  4211  01ED  3000               	movlw	high __pbssBANK1
  4212  01EE  0085               	movwf	5
  4213  01EF  3012               	movlw	18
  4214  01F0  00FE               	movwf	btemp
  4215  01F1  3000               	movlw	0
  4216  01F2  00FF               	movwf	btemp+1
  4217  01F3  319D  25F7  3181   	fcall	clear_ram0
  4218                           
  4219                           ; Clear objects allocated to BANK2
  4220  01F6  3020               	movlw	low __pbssBANK2
  4221  01F7  0084               	movwf	4
  4222  01F8  3001               	movlw	high __pbssBANK2
  4223  01F9  0085               	movwf	5
  4224  01FA  303B               	movlw	59
  4225  01FB  00FE               	movwf	btemp
  4226  01FC  3000               	movlw	0
  4227  01FD  00FF               	movwf	btemp+1
  4228  01FE  319D  25F7  3181   	fcall	clear_ram0
  4229                           
  4230                           ; Clear objects allocated to BANK3
  4231  0201  30A0               	movlw	low __pbssBANK3
  4232  0202  0084               	movwf	4
  4233  0203  3001               	movlw	high __pbssBANK3
  4234  0204  0085               	movwf	5
  4235  0205  3046               	movlw	70
  4236  0206  00FE               	movwf	btemp
  4237  0207  3000               	movlw	0
  4238  0208  00FF               	movwf	btemp+1
  4239  0209  319D  25F7  3181   	fcall	clear_ram0
  4240                           
  4241                           ; Clear objects allocated to BANK9
  4242  020C  30A0               	movlw	low __pbssBANK9
  4243  020D  0084               	movwf	4
  4244  020E  3004               	movlw	high __pbssBANK9
  4245  020F  0085               	movwf	5
  4246  0210  3040               	movlw	64
  4247  0211  00FE               	movwf	btemp
  4248  0212  3000               	movlw	0
  4249  0213  00FF               	movwf	btemp+1
  4250  0214  319D  25F7  3181   	fcall	clear_ram0
  4251                           
  4252                           ; Initialize objects allocated to BIGRAM
  4253  0217  3088               	movlw	low __pidataBIGRAM
  4254  0218  0084               	movwf	4
  4255  0219  308D               	movlw	(high __pidataBIGRAM)| (0+128)
  4256  021A  0085               	movwf	5
  4257  021B  3078               	movlw	low (0+9080)
  4258  021C  0086               	movwf	6
  4259  021D  3023               	movlw	high (0+9080)
  4260  021E  0087               	movwf	7
  4261  021F  3002               	movlw	2
  4262  0220  00FF               	movwf	btemp+1
  4263  0221  3078               	movlw	120
  4264  0222  319D  25EB  3181   	fcall	init_ram
  4265                           
  4266                           ; Initialize objects allocated to COMMON
  4267  0225  319D  25CF  3181   	fcall	__pidataCOMMON	;fetch initializer
  4268  0228  00FD               	movwf	__pdataCOMMON& (0+127)
  4269                           
  4270                           ; Initialize objects allocated to BANK0
  4271  0229  3180  2002  3181   	fcall	__pidataBANK0	;fetch initializer
  4272  022C  00E9               	movwf	__pdataBANK0& (0+127)
  4273  022D  3180  2003  3181   	fcall	__pidataBANK0+1	;fetch initializer
  4274  0230  00EA               	movwf	(__pdataBANK0+1)& (0+127)
  4275                           
  4276                           ; Initialize objects allocated to BANK1
  4277  0231  3024               	movlw	low __pidataBANK1
  4278  0232  0084               	movwf	4
  4279  0233  309E               	movlw	(high __pidataBANK1)| (0+128)
  4280  0234  0085               	movwf	5
  4281  0235  30C9               	movlw	low __pdataBANK1
  4282  0236  0086               	movwf	6
  4283  0237  3000               	movlw	high __pdataBANK1
  4284  0238  0087               	movwf	7
  4285  0239  3000               	movlw	0
  4286  023A  00FF               	movwf	btemp+1
  4287  023B  3013               	movlw	19
  4288  023C  319D  25EB  3181   	fcall	init_ram
  4289                           
  4290                           ; Initialize objects allocated to BANK2
  4291  023F  3037               	movlw	low __pidataBANK2
  4292  0240  0084               	movwf	4
  4293  0241  309E               	movlw	(high __pidataBANK2)| (0+128)
  4294  0242  0085               	movwf	5
  4295  0243  305B               	movlw	low __pdataBANK2
  4296  0244  0086               	movwf	6
  4297  0245  3001               	movlw	high __pdataBANK2
  4298  0246  0087               	movwf	7
  4299  0247  3000               	movlw	0
  4300  0248  00FF               	movwf	btemp+1
  4301  0249  3014               	movlw	20
  4302  024A  319D  25EB  3181   	fcall	init_ram
  4303                           
  4304                           ; Initialize objects allocated to BANK4
  4305  024D  3086               	movlw	low __pidataBANK4
  4306  024E  0084               	movwf	4
  4307  024F  3091               	movlw	(high __pidataBANK4)| (0+128)
  4308  0250  0085               	movwf	5
  4309  0251  3020               	movlw	low __pdataBANK4
  4310  0252  0086               	movwf	6
  4311  0253  3002               	movlw	high __pdataBANK4
  4312  0254  0087               	movwf	7
  4313  0255  3000               	movlw	0
  4314  0256  00FF               	movwf	btemp+1
  4315  0257  303E               	movlw	62
  4316  0258  319D  25EB  3181   	fcall	init_ram
  4317                           
  4318                           ; Initialize objects allocated to BANK5
  4319  025B  3048               	movlw	low __pidataBANK5
  4320  025C  0084               	movwf	4
  4321  025D  3091               	movlw	(high __pidataBANK5)| (0+128)
  4322  025E  0085               	movwf	5
  4323  025F  30A0               	movlw	low __pdataBANK5
  4324  0260  0086               	movwf	6
  4325  0261  3002               	movlw	high __pdataBANK5
  4326  0262  0087               	movwf	7
  4327  0263  3000               	movlw	0
  4328  0264  00FF               	movwf	btemp+1
  4329  0265  303E               	movlw	62
  4330  0266  319D  25EB  3181   	fcall	init_ram
  4331                           
  4332                           ; Initialize objects allocated to BANK6
  4333  0269  300A               	movlw	low __pidataBANK6
  4334  026A  0084               	movwf	4
  4335  026B  3091               	movlw	(high __pidataBANK6)| (0+128)
  4336  026C  0085               	movwf	5
  4337  026D  3020               	movlw	low __pdataBANK6
  4338  026E  0086               	movwf	6
  4339  026F  3003               	movlw	high __pdataBANK6
  4340  0270  0087               	movwf	7
  4341  0271  3000               	movlw	0
  4342  0272  00FF               	movwf	btemp+1
  4343  0273  303E               	movlw	62
  4344  0274  319D  25EB  3181   	fcall	init_ram
  4345                           
  4346                           ; Initialize objects allocated to BANK7
  4347  0277  304D               	movlw	low __pidataBANK7
  4348  0278  0084               	movwf	4
  4349  0279  3094               	movlw	(high __pidataBANK7)| (0+128)
  4350  027A  0085               	movwf	5
  4351  027B  30A0               	movlw	low __pdataBANK7
  4352  027C  0086               	movwf	6
  4353  027D  3003               	movlw	high __pdataBANK7
  4354  027E  0087               	movwf	7
  4355  027F  3000               	movlw	0
  4356  0280  00FF               	movwf	btemp+1
  4357  0281  3050               	movlw	80
  4358  0282  319D  25EB  3181   	fcall	init_ram
  4359                           
  4360                           ; Initialize objects allocated to BANK8
  4361  0285  30FD               	movlw	low __pidataBANK8
  4362  0286  0084               	movwf	4
  4363  0287  3093               	movlw	(high __pidataBANK8)| (0+128)
  4364  0288  0085               	movwf	5
  4365  0289  3020               	movlw	low __pdataBANK8
  4366  028A  0086               	movwf	6
  4367  028B  3004               	movlw	high __pdataBANK8
  4368  028C  0087               	movwf	7
  4369  028D  3000               	movlw	0
  4370  028E  00FF               	movwf	btemp+1
  4371  028F  3050               	movlw	80
  4372  0290  319D  25EB  3181   	fcall	init_ram
  4373                           
  4374                           ; Initialize objects allocated to BANK10
  4375  0293  30CC               	movlw	low __pidataBANK10
  4376  0294  0084               	movwf	4
  4377  0295  3090               	movlw	(high __pidataBANK10)| (0+128)
  4378  0296  0085               	movwf	5
  4379  0297  3020               	movlw	low __pdataBANK10
  4380  0298  0086               	movwf	6
  4381  0299  3005               	movlw	high __pdataBANK10
  4382  029A  0087               	movwf	7
  4383  029B  3000               	movlw	0
  4384  029C  00FF               	movwf	btemp+1
  4385  029D  303E               	movlw	62
  4386  029E  319D  25EB         	fcall	init_ram
  4387  02A0                     end_of_initialization:	
  4388                           ;End of C runtime variable initialization code
  4389                           
  4390  02A0                     __end_of__initialization:	
  4391  02A0  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4392  02A1  0020               	movlb	0
  4393  02A2  3182  2AA4         	ljmp	_main	;jump to C main() function
  4394                           
  4395                           	psect	dataCOMMON
  4396  007D                     __pdataCOMMON:	
  4397  007D                     _num_taps:	
  4398  007D                     	ds	1
  4399                           
  4400                           	psect	bssBANK0
  4401  006B                     __pbssBANK0:	
  4402  006B                     _doubleTap_state:	
  4403  006B                     	ds	1
  4404                           
  4405                           	psect	dataBANK0
  4406  0069                     __pdataBANK0:	
  4407  0069                     _feedback_state:	
  4408  0069                     	ds	1
  4409  006A                     _longTap_state:	
  4410  006A                     	ds	1
  4411                           
  4412                           	psect	bssBANK1
  4413  00DC                     __pbssBANK1:	
  4414  00DC                     _sub_timer:	
  4415  00DC                     	ds	4
  4416  00E0                     _tap_timer:	
  4417  00E0                     	ds	4
  4418  00E4                     _timer:	
  4419  00E4                     	ds	4
  4420  00E8                     _mod_counter:	
  4421  00E8                     	ds	2
  4422  00EA                     _feedback_start:	
  4423  00EA                     	ds	1
  4424  00EB                     _suspend_blink:	
  4425  00EB                     	ds	1
  4426  00EC                     _switchTap_down:	
  4427  00EC                     	ds	1
  4428  00ED                     _switchTap_pressed:	
  4429  00ED                     	ds	1
  4430                           
  4431                           	psect	dataBANK1
  4432  00C9                     __pdataBANK1:	
  4433  00C9                     _baseline_delay_time:	
  4434  00C9                     	ds	4
  4435  00CD                     _delay_time:	
  4436  00CD                     	ds	4
  4437  00D1                     _bottom_push_state:	
  4438  00D1                     	ds	2
  4439  00D3                     _knob1_prev:	
  4440  00D3                     	ds	2
  4441  00D5                     _long_press_limit:	
  4442  00D5                     	ds	2
  4443  00D7                     _top_push_state:	
  4444  00D7                     	ds	2
  4445  00D9                     _blink_rate:	
  4446  00D9                     	ds	1
  4447  00DA                     _switchBypass_state:	
  4448  00DA                     	ds	1
  4449  00DB                     _switchTap_state:	
  4450  00DB                     	ds	1
  4451                           
  4452                           	psect	bssBANK2
  4453  0120                     __pbssBANK2:	
  4454  0120                     _ledState:	
  4455  0120                     	ds	4
  4456  0124                     _mod_timer:	
  4457  0124                     	ds	4
  4458  0128                     _tap_total:	
  4459  0128                     	ds	4
  4460  012C                     _adjust_sub_delay:	
  4461  012C                     	ds	2
  4462  012E                     _debounce_bypass:	
  4463  012E                     	ds	2
  4464  0130                     _debounce_count:	
  4465  0130                     	ds	2
  4466  0132                     _debounce_mode1:	
  4467  0132                     	ds	2
  4468  0134                     _debounce_mode2:	
  4469  0134                     	ds	2
  4470  0136                     _delay_counter:	
  4471  0136                     	ds	2
  4472  0138                     _delayfound:	
  4473  0138                     	ds	2
  4474  013A                     _feedback_timer:	
  4475  013A                     	ds	2
  4476  013C                     _knob_1_pos:	
  4477  013C                     	ds	2
  4478  013E                     _knob_2_pos:	
  4479  013E                     	ds	2
  4480  0140                     _knob_3_pos:	
  4481  0140                     	ds	2
  4482  0142                     _knob_4_pos:	
  4483  0142                     	ds	2
  4484  0144                     _knob_5_pos:	
  4485  0144                     	ds	2
  4486  0146                     _longTap_timer:	
  4487  0146                     	ds	2
  4488  0148                     _mod_delay_time_bak:	
  4489  0148                     	ds	2
  4490  014A                     _mod_value:	
  4491  014A                     	ds	2
  4492  014C                     _reset_sub_delay:	
  4493  014C                     	ds	2
  4494  014E                     _switchBypass_pressed:	
  4495  014E                     	ds	2
  4496  0150                     _switchBypass_toggle:	
  4497  0150                     	ds	2
  4498  0152                     _bottomTactile_pressed:	
  4499  0152                     	ds	1
  4500  0153                     _bypass_turning_on:	
  4501  0153                     	ds	1
  4502  0154                     _iCnt:	
  4503  0154                     	ds	1
  4504  0155                     _longTap_start:	
  4505  0155                     	ds	1
  4506  0156                     _mode1_state:	
  4507  0156                     	ds	1
  4508  0157                     _mode2_state:	
  4509  0157                     	ds	1
  4510  0158                     _preset_blink:	
  4511  0158                     	ds	1
  4512  0159                     _preset_programmning_on:	
  4513  0159                     	ds	1
  4514  015A                     _topTactile_pressed:	
  4515  015A                     	ds	1
  4516                           
  4517                           	psect	dataBANK2
  4518  015B                     __pdataBANK2:	
  4519  015B                     _blink_delay:	
  4520  015B                     	ds	2
  4521  015D                     _delay_time_changed:	
  4522  015D                     	ds	2
  4523  015F                     _knob2_prev:	
  4524  015F                     	ds	2
  4525  0161                     _knob3_prev:	
  4526  0161                     	ds	2
  4527  0163                     _knob4_prev:	
  4528  0163                     	ds	2
  4529  0165                     _knob5_prev:	
  4530  0165                     	ds	2
  4531  0167                     _mod_delay_time:	
  4532  0167                     	ds	2
  4533  0169                     _switchBypass_up:	
  4534  0169                     	ds	2
  4535  016B                     _tap_iteration:	
  4536  016B                     	ds	2
  4537  016D                     _blink_state:	
  4538  016D                     	ds	1
  4539  016E                     _currentBypassState:	
  4540  016E                     	ds	1
  4541                           
  4542                           	psect	bssBANK3
  4543  01A0                     __pbssBANK3:	
  4544  01A0                     _tap:	
  4545  01A0                     	ds	44
  4546  01CC                     _tap_history:	
  4547  01CC                     	ds	20
  4548  01E0                     _test_timer:	
  4549  01E0                     	ds	4
  4550  01E4                     _SPI_Value:	
  4551  01E4                     	ds	2
  4552                           
  4553                           	psect	dataBANK4
  4554  0220                     __pdataBANK4:	
  4555  0220                     _mod2:	
  4556  0220                     	ds	62
  4557                           
  4558                           	psect	dataBANK5
  4559  02A0                     __pdataBANK5:	
  4560  02A0                     _mod3:	
  4561  02A0                     	ds	62
  4562                           
  4563                           	psect	dataBANK6
  4564  0320                     __pdataBANK6:	
  4565  0320                     _mod4:	
  4566  0320                     	ds	62
  4567                           
  4568                           	psect	dataBANK7
  4569  03A0                     __pdataBANK7:	
  4570  03A0                     _B25k:	
  4571  03A0                     	ds	80
  4572                           
  4573                           	psect	dataBANK8
  4574  0420                     __pdataBANK8:	
  4575  0420                     _iB25k:	
  4576  0420                     	ds	80
  4577                           
  4578                           	psect	bssBANK9
  4579  04A0                     __pbssBANK9:	
  4580  04A0                     _myBuf:	
  4581  04A0                     	ds	64
  4582                           
  4583                           	psect	dataBANK10
  4584  0520                     __pdataBANK10:	
  4585  0520                     _mod1:	
  4586  0520                     	ds	62
  4587                           
  4588                           	psect	clrtext
  4589  1DF7                     clear_ram0:	
  4590                           ;	Called with FSR0 containing the base address, and
  4591                           ;	btemp/btemp+1 has the size to clear
  4592                           
  4593  1DF7  0064               	clrwdt	;clear the watchdog before getting into this loop
  4594  1DF8                     clrloop0:	
  4595  1DF8  0180               	clrf	0	;clear RAM location pointed to by FSR
  4596  1DF9  3101               	addfsr 0,1
  4597  1DFA  3001               	movlw	1
  4598  1DFB  02FE               	subwf	126,f
  4599  1DFC  3000               	movlw	0
  4600  1DFD  3BFF               	subwfb	127,f
  4601  1DFE  087F               	movf	127,w
  4602  1DFF  047E               	iorwf	126,w
  4603  1E00  1903               	btfsc	3,2
  4604  1E01  3400               	retlw	0	;all done for this memory range, return
  4605  1E02  2DF8               	goto	clrloop0	;have we reached the end yet?
  4606                           
  4607                           	psect	inittext
  4608  1DEB                     init_ram:	
  4609  1DEB  00FE               	movwf	126
  4610  1DEC                     initloop:	
  4611  1DEC  0012               	moviw fsr0++
  4612  1DED  001E               	movwi fsr1++
  4613  1DEE  3001               	movlw	1
  4614  1DEF  02FE               	subwf	126,f
  4615  1DF0  3000               	movlw	0
  4616  1DF1  3BFF               	subwfb	127,f
  4617  1DF2  087F               	movf	127,w
  4618  1DF3  047E               	iorwf	126,w
  4619  1DF4  1903               	btfsc	3,2
  4620  1DF5  3400               	retlw	0
  4621  1DF6  2DEC               	goto	initloop
  4622                           
  4623                           	psect	cstackBANK3
  4624  01E6                     __pcstackBANK3:	
  4625  01E6                     main@adjusted_pot_value:	
  4626                           
  4627                           ; 2 bytes @ 0x0
  4628  01E6                     	ds	2
  4629  01E8                     main@i:	
  4630                           
  4631                           ; 2 bytes @ 0x2
  4632  01E8                     	ds	2
  4633  01EA                     main@i_376:	
  4634                           
  4635                           ; 2 bytes @ 0x4
  4636  01EA                     	ds	2
  4637                           
  4638                           	psect	cstackBANK1
  4639  00A0                     __pcstackBANK1:	
  4640  00A0                     ?___fttol:	
  4641  00A0                     ___fttol@f1:	
  4642                           ; 4 bytes @ 0x0
  4643                           
  4644                           
  4645                           ; 3 bytes @ 0x0
  4646  00A0                     	ds	4
  4647  00A4                     ??___fttol:	
  4648                           
  4649                           ; 1 bytes @ 0x4
  4650  00A4                     	ds	4
  4651  00A8                     ___fttol@sign1:	
  4652                           
  4653                           ; 1 bytes @ 0x8
  4654  00A8                     	ds	1
  4655  00A9                     ___fttol@lval:	
  4656                           
  4657                           ; 4 bytes @ 0x9
  4658  00A9                     	ds	4
  4659  00AD                     ___fttol@exp1:	
  4660                           
  4661                           ; 1 bytes @ 0xD
  4662  00AD                     	ds	1
  4663  00AE                     ?_set_subdivision:	
  4664  00AE                     set_subdivision@x:	
  4665                           ; 2 bytes @ 0xE
  4666                           
  4667                           
  4668                           ; 2 bytes @ 0xE
  4669  00AE                     	ds	2
  4670  00B0                     set_subdivision@y:	
  4671                           
  4672                           ; 2 bytes @ 0x10
  4673  00B0                     	ds	2
  4674  00B2                     ??_set_subdivision:	
  4675                           
  4676                           ; 1 bytes @ 0x12
  4677  00B2                     	ds	3
  4678  00B5                     set_subdivision@tmpX:	
  4679                           
  4680                           ; 2 bytes @ 0x15
  4681  00B5                     	ds	2
  4682  00B7                     set_subdivision@scalar:	
  4683                           
  4684                           ; 3 bytes @ 0x17
  4685  00B7                     	ds	3
  4686  00BA                     ??_main:	
  4687                           
  4688                           ; 1 bytes @ 0x1A
  4689  00BA                     	ds	15
  4690                           
  4691                           	psect	cstackCOMMON
  4692  0070                     __pcstackCOMMON:	
  4693  0070                     ?_ConfigureOscillator:	
  4694  0070                     ?_InitApp:	
  4695                           ; 1 bytes @ 0x0
  4696                           
  4697  0070                     ?_InitializeTaps:	
  4698                           ; 1 bytes @ 0x0
  4699                           
  4700  0070                     ?_initSwitchBypass:	
  4701                           ; 1 bytes @ 0x0
  4702                           
  4703  0070                     ?_ReadSavedSettings:	
  4704                           ; 1 bytes @ 0x0
  4705                           
  4706  0070                     ?_read_bottom_tactile:	
  4707                           ; 1 bytes @ 0x0
  4708                           
  4709  0070                     ?_read_top_tactile:	
  4710                           ; 1 bytes @ 0x0
  4711                           
  4712  0070                     ?_update_mode:	
  4713                           ; 1 bytes @ 0x0
  4714                           
  4715  0070                     ?_showBootSequence:	
  4716                           ; 1 bytes @ 0x0
  4717                           
  4718  0070                     ?_updateSwitchBypass:	
  4719                           ; 1 bytes @ 0x0
  4720                           
  4721  0070                     ?_updateSwitchTap:	
  4722                           ; 1 bytes @ 0x0
  4723                           
  4724  0070                     ?_init_adc:	
  4725                           ; 1 bytes @ 0x0
  4726                           
  4727  0070                     ?_init_pwm:	
  4728                           ; 1 bytes @ 0x0
  4729                           
  4730  0070                     ?_init_timer2:	
  4731                           ; 1 bytes @ 0x0
  4732                           
  4733  0070                     ?_init_timer0:	
  4734                           ; 1 bytes @ 0x0
  4735                           
  4736  0070                     ?_getCurrentLEDState:	
  4737                           ; 1 bytes @ 0x0
  4738                           
  4739  0070                     ?_star_tactiles:	
  4740                           ; 1 bytes @ 0x0
  4741                           
  4742  0070                     ?_solidring_tactiles:	
  4743                           ; 1 bytes @ 0x0
  4744                           
  4745  0070                     ?_restoreLEDState:	
  4746                           ; 1 bytes @ 0x0
  4747                           
  4748  0070                     ?_isr:	
  4749                           ; 1 bytes @ 0x0
  4750                           
  4751  0070                     ?_main:	
  4752                           ; 1 bytes @ 0x0
  4753                           
  4754  0070                     ?i1_set_leds_top:	
  4755                           ; 1 bytes @ 0x0
  4756                           
  4757  0070                     i1set_leds_top@x:	
  4758                           ; 1 bytes @ 0x0
  4759                           
  4760                           
  4761                           ; 2 bytes @ 0x0
  4762  0070                     	ds	2
  4763  0072                     i1set_leds_top@ledState:	
  4764                           
  4765                           ; 2 bytes @ 0x2
  4766  0072                     	ds	2
  4767  0074                     ??_isr:	
  4768  0074                     ??i1_set_leds_top:	
  4769                           ; 1 bytes @ 0x4
  4770                           
  4771                           
  4772                           ; 1 bytes @ 0x4
  4773  0074                     	ds	9
  4774                           
  4775                           	psect	cstackBANK0
  4776  0020                     __pcstackBANK0:	
  4777  0020                     isr@tmpSubDelay:	
  4778                           
  4779                           ; 2 bytes @ 0x0
  4780  0020                     	ds	2
  4781  0022                     ?_set_leds_top:	
  4782  0022                     ??_ConfigureOscillator:	
  4783                           ; 1 bytes @ 0x2
  4784                           
  4785  0022                     ??_InitApp:	
  4786                           ; 1 bytes @ 0x2
  4787                           
  4788  0022                     ??_InitializeTaps:	
  4789                           ; 1 bytes @ 0x2
  4790                           
  4791  0022                     ??_update_mode:	
  4792                           ; 1 bytes @ 0x2
  4793                           
  4794  0022                     ??_init_adc:	
  4795                           ; 1 bytes @ 0x2
  4796                           
  4797  0022                     ??_init_pwm:	
  4798                           ; 1 bytes @ 0x2
  4799                           
  4800  0022                     ??_init_timer2:	
  4801                           ; 1 bytes @ 0x2
  4802                           
  4803  0022                     ??_init_timer0:	
  4804                           ; 1 bytes @ 0x2
  4805                           
  4806  0022                     ?_set_leds_bottom:	
  4807                           ; 1 bytes @ 0x2
  4808                           
  4809  0022                     ??_getCurrentLEDState:	
  4810                           ; 1 bytes @ 0x2
  4811                           
  4812  0022                     ??_restoreLEDState:	
  4813                           ; 1 bytes @ 0x2
  4814                           
  4815  0022                     ?_setFeedbackState:	
  4816                           ; 1 bytes @ 0x2
  4817                           
  4818  0022                     ?_setLongTapState:	
  4819                           ; 1 bytes @ 0x2
  4820                           
  4821  0022                     ?_updateSwitchBypassState:	
  4822                           ; 1 bytes @ 0x2
  4823                           
  4824  0022                     ?_adc_convert:	
  4825                           ; 1 bytes @ 0x2
  4826                           
  4827  0022                     ?_FLASH_ReadWord:	
  4828                           ; 2 bytes @ 0x2
  4829                           
  4830  0022                     ?_getSwitchBypassState:	
  4831                           ; 2 bytes @ 0x2
  4832                           
  4833  0022                     ?___wmul:	
  4834                           ; 2 bytes @ 0x2
  4835                           
  4836  0022                     ?___awdiv:	
  4837                           ; 2 bytes @ 0x2
  4838                           
  4839  0022                     ?___ftpack:	
  4840                           ; 2 bytes @ 0x2
  4841                           
  4842  0022                     ?___ftneg:	
  4843                           ; 3 bytes @ 0x2
  4844                           
  4845  0022                     ?___lmul:	
  4846                           ; 3 bytes @ 0x2
  4847                           
  4848  0022                     FLASH_ReadWord@flashAddr:	
  4849                           ; 4 bytes @ 0x2
  4850                           
  4851  0022                     set_leds_top@x:	
  4852                           ; 2 bytes @ 0x2
  4853                           
  4854  0022                     set_leds_bottom@x:	
  4855                           ; 2 bytes @ 0x2
  4856                           
  4857  0022                     updateSwitchBypassState@state:	
  4858                           ; 2 bytes @ 0x2
  4859                           
  4860  0022                     setFeedbackState@f_state:	
  4861                           ; 2 bytes @ 0x2
  4862                           
  4863  0022                     setLongTapState@f_state:	
  4864                           ; 2 bytes @ 0x2
  4865                           
  4866  0022                     ___wmul@multiplier:	
  4867                           ; 2 bytes @ 0x2
  4868                           
  4869  0022                     ___awdiv@divisor:	
  4870                           ; 2 bytes @ 0x2
  4871                           
  4872  0022                     ___ftpack@arg:	
  4873                           ; 2 bytes @ 0x2
  4874                           
  4875  0022                     ___ftneg@f1:	
  4876                           ; 3 bytes @ 0x2
  4877                           
  4878  0022                     ___lmul@multiplier:	
  4879                           ; 3 bytes @ 0x2
  4880                           
  4881                           
  4882                           ; 4 bytes @ 0x2
  4883  0022                     	ds	1
  4884  0023                     InitializeTaps@itap:	
  4885                           
  4886                           ; 2 bytes @ 0x3
  4887  0023                     	ds	1
  4888  0024                     ??_adc_convert:	
  4889  0024                     ??_FLASH_ReadWord:	
  4890                           ; 1 bytes @ 0x4
  4891                           
  4892  0024                     ??_set_leds_bottom:	
  4893                           ; 1 bytes @ 0x4
  4894                           
  4895  0024                     ??_setFeedbackState:	
  4896                           ; 1 bytes @ 0x4
  4897                           
  4898  0024                     ??_setLongTapState:	
  4899                           ; 1 bytes @ 0x4
  4900                           
  4901  0024                     ??_updateSwitchBypassState:	
  4902                           ; 1 bytes @ 0x4
  4903                           
  4904  0024                     ??_getSwitchBypassState:	
  4905                           ; 1 bytes @ 0x4
  4906                           
  4907  0024                     FLASH_ReadWord@GIEBitValue:	
  4908                           ; 1 bytes @ 0x4
  4909                           
  4910  0024                     set_leds_top@ledState:	
  4911                           ; 1 bytes @ 0x4
  4912                           
  4913  0024                     ___wmul@multiplicand:	
  4914                           ; 2 bytes @ 0x4
  4915                           
  4916  0024                     ___awdiv@dividend:	
  4917                           ; 2 bytes @ 0x4
  4918                           
  4919                           
  4920                           ; 2 bytes @ 0x4
  4921  0024                     	ds	1
  4922  0025                     ??___ftneg:	
  4923  0025                     adc_convert@channel:	
  4924                           ; 1 bytes @ 0x5
  4925                           
  4926  0025                     ___ftpack@exp:	
  4927                           ; 1 bytes @ 0x5
  4928                           
  4929                           
  4930                           ; 1 bytes @ 0x5
  4931  0025                     	ds	1
  4932  0026                     ??_set_leds_top:	
  4933  0026                     ??_ReadSavedSettings:	
  4934                           ; 1 bytes @ 0x6
  4935                           
  4936  0026                     ??___wmul:	
  4937                           ; 1 bytes @ 0x6
  4938                           
  4939  0026                     ??___awdiv:	
  4940                           ; 1 bytes @ 0x6
  4941                           
  4942  0026                     ___ftpack@sign:	
  4943                           ; 1 bytes @ 0x6
  4944                           
  4945  0026                     ___wmul@product:	
  4946                           ; 1 bytes @ 0x6
  4947                           
  4948  0026                     ___lmul@multiplicand:	
  4949                           ; 2 bytes @ 0x6
  4950                           
  4951                           
  4952                           ; 4 bytes @ 0x6
  4953  0026                     	ds	1
  4954  0027                     ??___ftpack:	
  4955  0027                     ___awdiv@counter:	
  4956                           ; 1 bytes @ 0x7
  4957                           
  4958                           
  4959                           ; 1 bytes @ 0x7
  4960  0027                     	ds	1
  4961  0028                     ?___aldiv:	
  4962  0028                     ___awdiv@sign:	
  4963                           ; 4 bytes @ 0x8
  4964                           
  4965  0028                     ___aldiv@divisor:	
  4966                           ; 1 bytes @ 0x8
  4967                           
  4968                           
  4969                           ; 4 bytes @ 0x8
  4970  0028                     	ds	1
  4971  0029                     ___awdiv@quotient:	
  4972                           
  4973                           ; 2 bytes @ 0x9
  4974  0029                     	ds	1
  4975  002A                     ??___lmul:	
  4976  002A                     ?___altoft:	
  4977                           ; 1 bytes @ 0xA
  4978                           
  4979  002A                     ?___awtoft:	
  4980                           ; 3 bytes @ 0xA
  4981                           
  4982  002A                     ?___ftadd:	
  4983                           ; 3 bytes @ 0xA
  4984                           
  4985  002A                     ___awtoft@c:	
  4986                           ; 3 bytes @ 0xA
  4987                           
  4988  002A                     ___ftadd@f1:	
  4989                           ; 2 bytes @ 0xA
  4990                           
  4991  002A                     ___lmul@product:	
  4992                           ; 3 bytes @ 0xA
  4993                           
  4994  002A                     ___altoft@c:	
  4995                           ; 4 bytes @ 0xA
  4996                           
  4997                           
  4998                           ; 4 bytes @ 0xA
  4999  002A                     	ds	2
  5000  002C                     ___aldiv@dividend:	
  5001                           
  5002                           ; 4 bytes @ 0xC
  5003  002C                     	ds	1
  5004  002D                     ??___awtoft:	
  5005  002D                     ___ftadd@f2:	
  5006                           ; 1 bytes @ 0xD
  5007                           
  5008                           
  5009                           ; 3 bytes @ 0xD
  5010  002D                     	ds	1
  5011  002E                     ?_wait_ms:	
  5012  002E                     ??___altoft:	
  5013                           ; 1 bytes @ 0xE
  5014                           
  5015  002E                     wait_ms@timeSec:	
  5016                           ; 1 bytes @ 0xE
  5017                           
  5018                           
  5019                           ; 2 bytes @ 0xE
  5020  002E                     	ds	1
  5021  002F                     ___awtoft@sign:	
  5022                           
  5023                           ; 1 bytes @ 0xF
  5024  002F                     	ds	1
  5025  0030                     ??_wait_ms:	
  5026  0030                     ??___aldiv:	
  5027                           ; 1 bytes @ 0x10
  5028                           
  5029  0030                     ??___ftadd:	
  5030                           ; 1 bytes @ 0x10
  5031                           
  5032  0030                     ___altoft@exp:	
  5033                           ; 1 bytes @ 0x10
  5034                           
  5035  0030                     wait_ms@timemsl:	
  5036                           ; 1 bytes @ 0x10
  5037                           
  5038                           
  5039                           ; 4 bytes @ 0x10
  5040  0030                     	ds	1
  5041  0031                     ___aldiv@counter:	
  5042  0031                     ___altoft@sign:	
  5043                           ; 1 bytes @ 0x11
  5044                           
  5045                           
  5046                           ; 1 bytes @ 0x11
  5047  0031                     	ds	1
  5048  0032                     ___aldiv@sign:	
  5049                           
  5050                           ; 1 bytes @ 0x12
  5051  0032                     	ds	1
  5052  0033                     ___aldiv@quotient:	
  5053                           
  5054                           ; 4 bytes @ 0x13
  5055  0033                     	ds	1
  5056  0034                     ??_read_bottom_tactile:	
  5057  0034                     ??_read_top_tactile:	
  5058                           ; 1 bytes @ 0x14
  5059                           
  5060  0034                     ??_star_tactiles:	
  5061                           ; 1 bytes @ 0x14
  5062                           
  5063  0034                     ??_solidring_tactiles:	
  5064                           ; 1 bytes @ 0x14
  5065                           
  5066  0034                     ?_setSwitchBypassState:	
  5067                           ; 1 bytes @ 0x14
  5068                           
  5069  0034                     ?_setDoublePressState:	
  5070                           ; 1 bytes @ 0x14
  5071                           
  5072  0034                     ___ftadd@sign:	
  5073                           ; 1 bytes @ 0x14
  5074                           
  5075  0034                     setSwitchBypassState@f_state:	
  5076                           ; 1 bytes @ 0x14
  5077                           
  5078  0034                     setDoublePressState@f_state:	
  5079                           ; 2 bytes @ 0x14
  5080                           
  5081                           
  5082                           ; 2 bytes @ 0x14
  5083  0034                     	ds	1
  5084  0035                     ___ftadd@exp2:	
  5085                           
  5086                           ; 1 bytes @ 0x15
  5087  0035                     	ds	1
  5088  0036                     ??_setSwitchBypassState:	
  5089  0036                     ??_setDoublePressState:	
  5090                           ; 1 bytes @ 0x16
  5091                           
  5092  0036                     star_tactiles@reverse:	
  5093                           ; 1 bytes @ 0x16
  5094                           
  5095  0036                     solidring_tactiles@ring_delay:	
  5096                           ; 1 bytes @ 0x16
  5097                           
  5098  0036                     ___ftadd@exp1:	
  5099                           ; 1 bytes @ 0x16
  5100                           
  5101                           
  5102                           ; 1 bytes @ 0x16
  5103  0036                     	ds	1
  5104  0037                     ?_modulation:	
  5105  0037                     ?___ftmul:	
  5106                           ; 2 bytes @ 0x17
  5107                           
  5108  0037                     modulation@x:	
  5109                           ; 3 bytes @ 0x17
  5110                           
  5111  0037                     star_tactiles@iLed:	
  5112                           ; 2 bytes @ 0x17
  5113                           
  5114  0037                     ___ftmul@f1:	
  5115                           ; 2 bytes @ 0x17
  5116                           
  5117                           
  5118                           ; 3 bytes @ 0x17
  5119  0037                     	ds	1
  5120  0038                     ??_initSwitchBypass:	
  5121  0038                     ??_updateSwitchBypass:	
  5122                           ; 1 bytes @ 0x18
  5123                           
  5124  0038                     ??_updateSwitchTap:	
  5125                           ; 1 bytes @ 0x18
  5126                           
  5127  0038                     initSwitchBypass@initState:	
  5128                           ; 1 bytes @ 0x18
  5129                           
  5130                           
  5131                           ; 2 bytes @ 0x18
  5132  0038                     	ds	1
  5133  0039                     modulation@y:	
  5134  0039                     star_tactiles@iLed_1435:	
  5135                           ; 2 bytes @ 0x19
  5136                           
  5137                           
  5138                           ; 2 bytes @ 0x19
  5139  0039                     	ds	1
  5140  003A                     ___ftmul@f2:	
  5141                           
  5142                           ; 3 bytes @ 0x1A
  5143  003A                     	ds	1
  5144  003B                     ??_showBootSequence:	
  5145  003B                     ??_modulation:	
  5146                           ; 1 bytes @ 0x1B
  5147                           
  5148                           
  5149                           ; 1 bytes @ 0x1B
  5150  003B                     	ds	2
  5151  003D                     ??___ftmul:	
  5152                           
  5153                           ; 1 bytes @ 0x1D
  5154  003D                     	ds	1
  5155  003E                     updateSwitchTap@tapCntDivisor:	
  5156                           
  5157                           ; 2 bytes @ 0x1E
  5158  003E                     	ds	2
  5159  0040                     updateSwitchTap@iCnt:	
  5160                           
  5161                           ; 1 bytes @ 0x20
  5162  0040                     	ds	1
  5163  0041                     ___ftmul@exp:	
  5164                           
  5165                           ; 1 bytes @ 0x21
  5166  0041                     	ds	1
  5167  0042                     ___ftmul@f3_as_product:	
  5168                           
  5169                           ; 3 bytes @ 0x22
  5170  0042                     	ds	3
  5171  0045                     ___ftmul@cntr:	
  5172                           
  5173                           ; 1 bytes @ 0x25
  5174  0045                     	ds	1
  5175  0046                     ___ftmul@sign:	
  5176                           
  5177                           ; 1 bytes @ 0x26
  5178  0046                     	ds	1
  5179  0047                     ?___ftdiv:	
  5180  0047                     ___ftdiv@f2:	
  5181                           ; 3 bytes @ 0x27
  5182                           
  5183                           
  5184                           ; 3 bytes @ 0x27
  5185  0047                     	ds	3
  5186  004A                     ___ftdiv@f1:	
  5187                           
  5188                           ; 3 bytes @ 0x2A
  5189  004A                     	ds	3
  5190  004D                     ??___ftdiv:	
  5191                           
  5192                           ; 1 bytes @ 0x2D
  5193  004D                     	ds	4
  5194  0051                     ___ftdiv@cntr:	
  5195                           
  5196                           ; 1 bytes @ 0x31
  5197  0051                     	ds	1
  5198  0052                     ___ftdiv@f3:	
  5199                           
  5200                           ; 3 bytes @ 0x32
  5201  0052                     	ds	3
  5202  0055                     ___ftdiv@exp:	
  5203                           
  5204                           ; 1 bytes @ 0x35
  5205  0055                     	ds	1
  5206  0056                     ___ftdiv@sign:	
  5207                           
  5208                           ; 1 bytes @ 0x36
  5209  0056                     	ds	1
  5210  0057                     ?_map:	
  5211  0057                     map@x:	
  5212                           ; 3 bytes @ 0x37
  5213                           
  5214                           
  5215                           ; 3 bytes @ 0x37
  5216  0057                     	ds	3
  5217  005A                     map@in_min:	
  5218                           
  5219                           ; 3 bytes @ 0x3A
  5220  005A                     	ds	3
  5221  005D                     map@in_max:	
  5222                           
  5223                           ; 3 bytes @ 0x3D
  5224  005D                     	ds	3
  5225  0060                     map@out_min:	
  5226                           
  5227                           ; 3 bytes @ 0x40
  5228  0060                     	ds	3
  5229  0063                     map@out_max:	
  5230                           
  5231                           ; 3 bytes @ 0x43
  5232  0063                     	ds	3
  5233  0066                     ??_map:	
  5234  0066                     _map$2230:	
  5235                           ; 1 bytes @ 0x46
  5236                           
  5237                           
  5238                           ; 3 bytes @ 0x46
  5239  0066                     	ds	3
  5240                           
  5241                           	psect	maintext
  5242  02A4                     __pmaintext:	
  5243 ;;
  5244 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
  5245 ;;
  5246 ;; *************** function _main *****************
  5247 ;; Defined at:
  5248 ;;		line 84 in file "main.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;		None
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  adjusted_pot    2    0[BANK3 ] int 
  5253 ;;  i               2    4[BANK3 ] int 
  5254 ;;  i               2    2[BANK3 ] int 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : B1F/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5265 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5266 ;;      Temps:          0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5267 ;;      Totals:         0       0      15       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5268 ;;Total ram usage:       21 bytes
  5269 ;; Hardware stack levels required when called:    6
  5270 ;; This function calls:
  5271 ;;		_ConfigureOscillator
  5272 ;;		_InitApp
  5273 ;;		_InitializeTaps
  5274 ;;		_ReadSavedSettings
  5275 ;;		___altoft
  5276 ;;		___awdiv
  5277 ;;		___awtoft
  5278 ;;		___ftdiv
  5279 ;;		___fttol
  5280 ;;		_adc_convert
  5281 ;;		_initSwitchBypass
  5282 ;;		_map
  5283 ;;		_modulation
  5284 ;;		_read_bottom_tactile
  5285 ;;		_read_top_tactile
  5286 ;;		_set_subdivision
  5287 ;;		_showBootSequence
  5288 ;;		_updateSwitchBypass
  5289 ;;		_updateSwitchTap
  5290 ;;		_update_mode
  5291 ;; This function is called by:
  5292 ;;		Startup code after reset
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _main
  5298  02A4                     _main:	
  5299                           
  5300                           ;main.c: 85: ConfigureOscillator();
  5301                           
  5302                           ;incstack = 0
  5303                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5304  02A4  319D  25D0  3182   	fcall	_ConfigureOscillator
  5305                           
  5306                           ;main.c: 86: InitApp();
  5307  02A7  319F  276E  3182   	fcall	_InitApp
  5308                           
  5309                           ;main.c: 88: PORTEbits.RE0 = 1;
  5310  02AA  0020               	movlb	0	; select bank0
  5311  02AB  1410               	bsf	16,0	;volatile
  5312                           
  5313                           ;main.c: 89: PORTEbits.RE1 = 1;
  5314  02AC  1490               	bsf	16,1	;volatile
  5315                           
  5316                           ;main.c: 90: PORTDbits.RD6 = 1;
  5317  02AD  170F               	bsf	15,6	;volatile
  5318                           
  5319                           ;main.c: 91: PORTDbits.RD5 = 1;
  5320  02AE  168F               	bsf	15,5	;volatile
  5321                           
  5322                           ;main.c: 92: PORTCbits.RC0 = 1;
  5323  02AF  140E               	bsf	14,0	;volatile
  5324                           
  5325                           ;main.c: 93: PORTDbits.RD7 = 1;
  5326  02B0  178F               	bsf	15,7	;volatile
  5327                           
  5328                           ;main.c: 95: InitializeTaps();
  5329  02B1  319E  26F0  3182   	fcall	_InitializeTaps
  5330                           
  5331                           ;main.c: 96: initSwitchBypass();
  5332  02B4  319E  2603  3182   	fcall	_initSwitchBypass
  5333                           
  5334                           ;main.c: 99: ReadSavedSettings();
  5335  02B7  3193  23AD  3182   	fcall	_ReadSavedSettings
  5336  02BA                     l6076:	
  5337                           ;main.c: 101: while (1) {
  5338                           
  5339                           
  5340                           ;main.c: 104: read_bottom_tactile();
  5341  02BA  3192  2286  3182   	fcall	_read_bottom_tactile
  5342                           
  5343                           ;main.c: 105: read_top_tactile();
  5344  02BD  3193  235E  3182   	fcall	_read_top_tactile
  5345                           
  5346                           ;main.c: 108: update_mode();
  5347  02C0  3192  2245  3182   	fcall	_update_mode
  5348                           
  5349                           ;main.c: 110: if (PORTDbits.RD7 == 0) {
  5350  02C3  0020               	movlb	0	; select bank0
  5351  02C4  1B8F               	btfsc	15,7	;volatile
  5352  02C5  2AE4               	goto	l6090
  5353                           
  5354                           ;main.c: 111: debounce_mode1++;
  5355  02C6  3001               	movlw	1
  5356  02C7  0022               	movlb	2	; select bank2
  5357  02C8  07B2               	addwf	_debounce_mode1^(0+256),f
  5358  02C9  3000               	movlw	0
  5359  02CA  3DB3               	addwfc	(_debounce_mode1+1)^(0+256),f
  5360                           
  5361                           ;main.c: 112: if (debounce_mode1 > 25) {
  5362  02CB  0833               	movf	(_debounce_mode1+1)^(0+256),w
  5363  02CC  3A80               	xorlw	128
  5364  02CD  0021               	movlb	1	; select bank1
  5365  02CE  00BA               	movwf	??_main^(0+128)
  5366  02CF  3080               	movlw	128
  5367  02D0  023A               	subwf	??_main^(0+128),w
  5368  02D1  1D03               	skipz
  5369  02D2  2AD6               	goto	u7035
  5370  02D3  301A               	movlw	26
  5371  02D4  0022               	movlb	2	; select bank2
  5372  02D5  0232               	subwf	_debounce_mode1^(0+256),w
  5373  02D6                     u7035:	
  5374  02D6  1C03               	skipc
  5375  02D7  2AE7               	goto	l6092
  5376                           
  5377                           ;main.c: 113: debounce_mode1 = 25;
  5378  02D8  3019               	movlw	25
  5379  02D9  0022               	movlb	2	; select bank2
  5380  02DA  00B2               	movwf	_debounce_mode1^(0+256)
  5381  02DB  3000               	movlw	0
  5382  02DC  00B3               	movwf	(_debounce_mode1^(0+256)+1)
  5383                           
  5384                           ;main.c: 117: showBootSequence();
  5385  02DD  319F  2716  3182   	fcall	_showBootSequence
  5386  02E0                     l290:	
  5387                           ;main.c: 120: while (PORTDbits.RD7 == 0) {
  5388                           
  5389  02E0  0020               	movlb	0	; select bank0
  5390  02E1  1B8F               	btfsc	15,7	;volatile
  5391  02E2  2AE7               	goto	l6092
  5392  02E3  2AE0               	goto	l290
  5393  02E4                     l6090:	
  5394                           ;main.c: 121: }
  5395                           ;main.c: 122: }
  5396                           ;main.c: 123: } else {
  5397                           
  5398                           
  5399                           ;main.c: 124: debounce_mode1 = 0;
  5400  02E4  0022               	movlb	2	; select bank2
  5401  02E5  01B2               	clrf	_debounce_mode1^(0+256)
  5402  02E6  01B3               	clrf	(_debounce_mode1+1)^(0+256)
  5403  02E7                     l6092:	
  5404                           
  5405                           ;main.c: 125: }
  5406                           ;main.c: 127: updateSwitchBypass();
  5407  02E7  3189  21D4  3182   	fcall	_updateSwitchBypass
  5408                           
  5409                           ;main.c: 128: updateSwitchTap();
  5410  02EA  318B  23AE  3182   	fcall	_updateSwitchTap
  5411                           
  5412                           ;main.c: 222: knob_1_pos = adc_convert(0);
  5413  02ED  3000               	movlw	0
  5414  02EE  319E  2679  3182   	fcall	_adc_convert
  5415  02F1  0020               	movlb	0	; select bank0
  5416  02F2  0823               	movf	?_adc_convert+1,w
  5417  02F3  0022               	movlb	2	; select bank2
  5418  02F4  00BD               	movwf	(_knob_1_pos+1)^(0+256)
  5419  02F5  0020               	movlb	0	; select bank0
  5420  02F6  0822               	movf	?_adc_convert,w
  5421  02F7  0022               	movlb	2	; select bank2
  5422  02F8  00BC               	movwf	_knob_1_pos^(0+256)
  5423                           
  5424                           ;main.c: 223: knob_2_pos = adc_convert(1);
  5425  02F9  3001               	movlw	1
  5426  02FA  319E  2679  3182   	fcall	_adc_convert
  5427  02FD  0020               	movlb	0	; select bank0
  5428  02FE  0823               	movf	?_adc_convert+1,w
  5429  02FF  0022               	movlb	2	; select bank2
  5430  0300  00BF               	movwf	(_knob_2_pos+1)^(0+256)
  5431  0301  0020               	movlb	0	; select bank0
  5432  0302  0822               	movf	?_adc_convert,w
  5433  0303  0022               	movlb	2	; select bank2
  5434  0304  00BE               	movwf	_knob_2_pos^(0+256)
  5435                           
  5436                           ;main.c: 224: knob_3_pos = adc_convert(2);
  5437  0305  3002               	movlw	2
  5438  0306  319E  2679  3182   	fcall	_adc_convert
  5439  0309  0020               	movlb	0	; select bank0
  5440  030A  0823               	movf	?_adc_convert+1,w
  5441  030B  0022               	movlb	2	; select bank2
  5442  030C  00C1               	movwf	(_knob_3_pos+1)^(0+256)
  5443  030D  0020               	movlb	0	; select bank0
  5444  030E  0822               	movf	?_adc_convert,w
  5445  030F  0022               	movlb	2	; select bank2
  5446  0310  00C0               	movwf	_knob_3_pos^(0+256)
  5447                           
  5448                           ;main.c: 225: knob_4_pos = adc_convert(3);
  5449  0311  3003               	movlw	3
  5450  0312  319E  2679  3182   	fcall	_adc_convert
  5451  0315  0020               	movlb	0	; select bank0
  5452  0316  0823               	movf	?_adc_convert+1,w
  5453  0317  0022               	movlb	2	; select bank2
  5454  0318  00C3               	movwf	(_knob_4_pos+1)^(0+256)
  5455  0319  0020               	movlb	0	; select bank0
  5456  031A  0822               	movf	?_adc_convert,w
  5457  031B  0022               	movlb	2	; select bank2
  5458  031C  00C2               	movwf	_knob_4_pos^(0+256)
  5459                           
  5460                           ;main.c: 226: knob_5_pos = adc_convert(4);
  5461  031D  3004               	movlw	4
  5462  031E  319E  2679  3182   	fcall	_adc_convert
  5463  0321  0020               	movlb	0	; select bank0
  5464  0322  0823               	movf	?_adc_convert+1,w
  5465  0323  0022               	movlb	2	; select bank2
  5466  0324  00C5               	movwf	(_knob_5_pos+1)^(0+256)
  5467  0325  0020               	movlb	0	; select bank0
  5468  0326  0822               	movf	?_adc_convert,w
  5469  0327  0022               	movlb	2	; select bank2
  5470  0328  00C4               	movwf	_knob_5_pos^(0+256)
  5471                           
  5472                           ;main.c: 253: LATBbits.LATB1 = 0;
  5473  0329  108D               	bcf	13,1	;volatile
  5474                           
  5475                           ;main.c: 254: if ((knob_1_pos - knob1_prev) >= 4 || (knob_1_pos - knob1_prev) <= -4) {
  5476  032A  0021               	movlb	1	; select bank1
  5477  032B  0953               	comf	_knob1_prev^(0+128),w	;volatile
  5478  032C  00BA               	movwf	??_main^(0+128)
  5479  032D  0954               	comf	(_knob1_prev+1)^(0+128),w	;volatile
  5480  032E  00BB               	movwf	(??_main^(0+128)+1)
  5481  032F  0ABA               	incf	??_main^(0+128),f
  5482  0330  1903               	skipnz
  5483  0331  0ABB               	incf	(??_main^(0+128)+1),f
  5484  0332  0022               	movlb	2	; select bank2
  5485  0333  083C               	movf	_knob_1_pos^(0+256),w
  5486  0334  0021               	movlb	1	; select bank1
  5487  0335  073A               	addwf	??_main^(0+128),w
  5488  0336  00BC               	movwf	(??_main+2)^(0+128)
  5489  0337  0022               	movlb	2	; select bank2
  5490  0338  083D               	movf	(_knob_1_pos+1)^(0+256),w
  5491  0339  0021               	movlb	1	; select bank1
  5492  033A  3D3B               	addwfc	(??_main+1)^(0+128),w
  5493  033B  00BD               	movwf	(??_main+3)^(0+128)
  5494  033C  083D               	movf	(??_main+3)^(0+128),w
  5495  033D  3A80               	xorlw	128
  5496  033E  00BE               	movwf	(??_main+4)^(0+128)
  5497  033F  3080               	movlw	128
  5498  0340  023E               	subwf	(??_main+4)^(0+128),w
  5499  0341  1D03               	skipz
  5500  0342  2B45               	goto	u7055
  5501  0343  3004               	movlw	4
  5502  0344  023C               	subwf	(??_main+2)^(0+128),w
  5503  0345                     u7055:	
  5504  0345  1803               	skipnc
  5505  0346  2B64               	goto	l6112
  5506  0347  0021               	movlb	1	; select bank1
  5507  0348  0953               	comf	_knob1_prev^(0+128),w	;volatile
  5508  0349  00BA               	movwf	??_main^(0+128)
  5509  034A  0954               	comf	(_knob1_prev+1)^(0+128),w	;volatile
  5510  034B  00BB               	movwf	(??_main^(0+128)+1)
  5511  034C  0ABA               	incf	??_main^(0+128),f
  5512  034D  1903               	skipnz
  5513  034E  0ABB               	incf	(??_main^(0+128)+1),f
  5514  034F  0022               	movlb	2	; select bank2
  5515  0350  083C               	movf	_knob_1_pos^(0+256),w
  5516  0351  0021               	movlb	1	; select bank1
  5517  0352  073A               	addwf	??_main^(0+128),w
  5518  0353  00BC               	movwf	(??_main+2)^(0+128)
  5519  0354  0022               	movlb	2	; select bank2
  5520  0355  083D               	movf	(_knob_1_pos+1)^(0+256),w
  5521  0356  0021               	movlb	1	; select bank1
  5522  0357  3D3B               	addwfc	(??_main+1)^(0+128),w
  5523  0358  00BD               	movwf	(??_main+3)^(0+128)
  5524  0359  083D               	movf	(??_main+3)^(0+128),w
  5525  035A  3A80               	xorlw	128
  5526  035B  00BE               	movwf	(??_main+4)^(0+128)
  5527  035C  307F               	movlw	127
  5528  035D  023E               	subwf	(??_main+4)^(0+128),w
  5529  035E  1D03               	skipz
  5530  035F  2B62               	goto	u7065
  5531  0360  30FD               	movlw	253
  5532  0361  023C               	subwf	(??_main+2)^(0+128),w
  5533  0362                     u7065:	
  5534  0362  1803               	skipnc
  5535  0363  2BB8               	goto	l6120
  5536  0364                     l6112:	
  5537                           
  5538                           ;main.c: 255: knob1_prev = knob_1_pos;
  5539  0364  0022               	movlb	2	; select bank2
  5540  0365  083D               	movf	(_knob_1_pos+1)^(0+256),w
  5541  0366  0021               	movlb	1	; select bank1
  5542  0367  00D4               	movwf	(_knob1_prev+1)^(0+128)	;volatile
  5543  0368  0022               	movlb	2	; select bank2
  5544  0369  083C               	movf	_knob_1_pos^(0+256),w
  5545  036A  0021               	movlb	1	; select bank1
  5546  036B  00D3               	movwf	_knob1_prev^(0+128)	;volatile
  5547                           
  5548                           ;main.c: 256: baseline_delay_time = map(knob1_prev, 0, 1023, 1172, 200);
  5549  036C  3000               	movlw	0
  5550  036D  0020               	movlb	0	; select bank0
  5551  036E  00E3               	movwf	map@out_max
  5552  036F  3048               	movlw	72
  5553  0370  00E4               	movwf	map@out_max+1
  5554  0371  3043               	movlw	67
  5555  0372  00E5               	movwf	map@out_max+2
  5556  0373  3080               	movlw	128
  5557  0374  00E0               	movwf	map@out_min
  5558  0375  3092               	movlw	146
  5559  0376  00E1               	movwf	map@out_min+1
  5560  0377  3044               	movlw	68
  5561  0378  00E2               	movwf	map@out_min+2
  5562  0379  30C0               	movlw	192
  5563  037A  00DD               	movwf	map@in_max
  5564  037B  307F               	movlw	127
  5565  037C  00DE               	movwf	map@in_max+1
  5566  037D  3044               	movlw	68
  5567  037E  00DF               	movwf	map@in_max+2
  5568  037F  3000               	movlw	0
  5569  0380  00DA               	movwf	map@in_min
  5570  0381  3000               	movlw	0
  5571  0382  00DB               	movwf	map@in_min+1
  5572  0383  3000               	movlw	0
  5573  0384  00DC               	movwf	map@in_min+2
  5574  0385  0021               	movlb	1	; select bank1
  5575  0386  0854               	movf	(_knob1_prev+1)^(0+128),w	;volatile
  5576  0387  0020               	movlb	0	; select bank0
  5577  0388  00AB               	movwf	___awtoft@c+1
  5578  0389  0021               	movlb	1	; select bank1
  5579  038A  0853               	movf	_knob1_prev^(0+128),w	;volatile
  5580  038B  0020               	movlb	0	; select bank0
  5581  038C  00AA               	movwf	___awtoft@c
  5582  038D  319E  26CE  3182   	fcall	___awtoft
  5583  0390  0020               	movlb	0	; select bank0
  5584  0391  082A               	movf	?___awtoft,w
  5585  0392  00D7               	movwf	map@x
  5586  0393  082B               	movf	?___awtoft+1,w
  5587  0394  00D8               	movwf	map@x+1
  5588  0395  082C               	movf	?___awtoft+2,w
  5589  0396  00D9               	movwf	map@x+2
  5590  0397  3196  26CC  3182   	fcall	_map
  5591  039A  0020               	movlb	0	; select bank0
  5592  039B  0857               	movf	?_map,w
  5593  039C  0021               	movlb	1	; select bank1
  5594  039D  00A0               	movwf	___fttol@f1^(0+128)
  5595  039E  0020               	movlb	0	; select bank0
  5596  039F  0858               	movf	?_map+1,w
  5597  03A0  0021               	movlb	1	; select bank1
  5598  03A1  00A1               	movwf	(___fttol@f1+1)^(0+128)
  5599  03A2  0020               	movlb	0	; select bank0
  5600  03A3  0859               	movf	?_map+2,w
  5601  03A4  0021               	movlb	1	; select bank1
  5602  03A5  00A2               	movwf	(___fttol@f1+2)^(0+128)
  5603  03A6  3196  2645  3182   	fcall	___fttol
  5604  03A9  0021               	movlb	1	; select bank1
  5605  03AA  0823               	movf	(?___fttol+3)^(0+128),w
  5606  03AB  00CC               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  5607  03AC  0822               	movf	(?___fttol+2)^(0+128),w
  5608  03AD  00CB               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  5609  03AE  0821               	movf	(?___fttol+1)^(0+128),w
  5610  03AF  00CA               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  5611  03B0  0820               	movf	?___fttol^(0+128),w
  5612  03B1  00C9               	movwf	_baseline_delay_time^(0+128)	;volatile
  5613                           
  5614                           ;main.c: 257: delay_time_changed = 1;
  5615  03B2  3001               	movlw	1
  5616  03B3  0022               	movlb	2	; select bank2
  5617  03B4  00DD               	movwf	_delay_time_changed^(0+256)
  5618  03B5  3000               	movlw	0
  5619  03B6  00DE               	movwf	(_delay_time_changed^(0+256)+1)
  5620                           
  5621                           ;main.c: 258: LATBbits.LATB1 = 1;
  5622  03B7  148D               	bsf	13,1	;volatile
  5623  03B8                     l6120:	
  5624                           
  5625                           ;main.c: 259: }
  5626                           ;main.c: 269: if (knob_2_pos - knob2_prev >= 4 || knob_2_pos - knob2_prev <= -4) {
  5627  03B8  0022               	movlb	2	; select bank2
  5628  03B9  095F               	comf	_knob2_prev^(0+256),w	;volatile
  5629  03BA  0021               	movlb	1	; select bank1
  5630  03BB  00BA               	movwf	??_main^(0+128)
  5631  03BC  0022               	movlb	2	; select bank2
  5632  03BD  0960               	comf	(_knob2_prev+1)^(0+256),w	;volatile
  5633  03BE  0021               	movlb	1	; select bank1
  5634  03BF  00BB               	movwf	(??_main^(0+128)+1)
  5635  03C0  0ABA               	incf	??_main^(0+128),f
  5636  03C1  1903               	skipnz
  5637  03C2  0ABB               	incf	(??_main^(0+128)+1),f
  5638  03C3  0022               	movlb	2	; select bank2
  5639  03C4  083E               	movf	_knob_2_pos^(0+256),w
  5640  03C5  0021               	movlb	1	; select bank1
  5641  03C6  073A               	addwf	??_main^(0+128),w
  5642  03C7  00BC               	movwf	(??_main+2)^(0+128)
  5643  03C8  0022               	movlb	2	; select bank2
  5644  03C9  083F               	movf	(_knob_2_pos+1)^(0+256),w
  5645  03CA  0021               	movlb	1	; select bank1
  5646  03CB  3D3B               	addwfc	(??_main+1)^(0+128),w
  5647  03CC  00BD               	movwf	(??_main+3)^(0+128)
  5648  03CD  083D               	movf	(??_main+3)^(0+128),w
  5649  03CE  3A80               	xorlw	128
  5650  03CF  00BE               	movwf	(??_main+4)^(0+128)
  5651  03D0  3080               	movlw	128
  5652  03D1  023E               	subwf	(??_main+4)^(0+128),w
  5653  03D2  1D03               	skipz
  5654  03D3  2BD6               	goto	u7075
  5655  03D4  3004               	movlw	4
  5656  03D5  023C               	subwf	(??_main+2)^(0+128),w
  5657  03D6                     u7075:	
  5658  03D6  1803               	skipnc
  5659  03D7  2BF8               	goto	l6124
  5660  03D8  0022               	movlb	2	; select bank2
  5661  03D9  095F               	comf	_knob2_prev^(0+256),w	;volatile
  5662  03DA  0021               	movlb	1	; select bank1
  5663  03DB  00BA               	movwf	??_main^(0+128)
  5664  03DC  0022               	movlb	2	; select bank2
  5665  03DD  0960               	comf	(_knob2_prev+1)^(0+256),w	;volatile
  5666  03DE  0021               	movlb	1	; select bank1
  5667  03DF  00BB               	movwf	(??_main^(0+128)+1)
  5668  03E0  0ABA               	incf	??_main^(0+128),f
  5669  03E1  1903               	skipnz
  5670  03E2  0ABB               	incf	(??_main^(0+128)+1),f
  5671  03E3  0022               	movlb	2	; select bank2
  5672  03E4  083E               	movf	_knob_2_pos^(0+256),w
  5673  03E5  0021               	movlb	1	; select bank1
  5674  03E6  073A               	addwf	??_main^(0+128),w
  5675  03E7  00BC               	movwf	(??_main+2)^(0+128)
  5676  03E8  0022               	movlb	2	; select bank2
  5677  03E9  083F               	movf	(_knob_2_pos+1)^(0+256),w
  5678  03EA  0021               	movlb	1	; select bank1
  5679  03EB  3D3B               	addwfc	(??_main+1)^(0+128),w
  5680  03EC  00BD               	movwf	(??_main+3)^(0+128)
  5681  03ED  083D               	movf	(??_main+3)^(0+128),w
  5682  03EE  3A80               	xorlw	128
  5683  03EF  00BE               	movwf	(??_main+4)^(0+128)
  5684  03F0  307F               	movlw	127
  5685  03F1  023E               	subwf	(??_main+4)^(0+128),w
  5686  03F2  1D03               	skipz
  5687  03F3  2BF6               	goto	u7085
  5688  03F4  30FD               	movlw	253
  5689  03F5  023C               	subwf	(??_main+2)^(0+128),w
  5690  03F6                     u7085:	
  5691  03F6  1803               	skipnc
  5692  03F7  2C57               	goto	l6132
  5693  03F8                     l6124:	
  5694                           
  5695                           ;main.c: 270: knob2_prev = knob_2_pos;
  5696  03F8  0022               	movlb	2	; select bank2
  5697  03F9  083F               	movf	(_knob_2_pos+1)^(0+256),w
  5698  03FA  00E0               	movwf	(_knob2_prev+1)^(0+256)	;volatile
  5699  03FB  083E               	movf	_knob_2_pos^(0+256),w
  5700  03FC  00DF               	movwf	_knob2_prev^(0+256)	;volatile
  5701                           
  5702                           ;main.c: 271: int i = map(knob2_prev, 0, 1023, 0, 39);
  5703  03FD  3000               	movlw	0
  5704  03FE  0020               	movlb	0	; select bank0
  5705  03FF  00E3               	movwf	map@out_max
  5706  0400  301C               	movlw	28
  5707  0401  00E4               	movwf	map@out_max+1
  5708  0402  3042               	movlw	66
  5709  0403  00E5               	movwf	map@out_max+2
  5710  0404  3000               	movlw	0
  5711  0405  00E0               	movwf	map@out_min
  5712  0406  3000               	movlw	0
  5713  0407  00E1               	movwf	map@out_min+1
  5714  0408  3000               	movlw	0
  5715  0409  00E2               	movwf	map@out_min+2
  5716  040A  30C0               	movlw	192
  5717  040B  00DD               	movwf	map@in_max
  5718  040C  307F               	movlw	127
  5719  040D  00DE               	movwf	map@in_max+1
  5720  040E  3044               	movlw	68
  5721  040F  00DF               	movwf	map@in_max+2
  5722  0410  3000               	movlw	0
  5723  0411  00DA               	movwf	map@in_min
  5724  0412  3000               	movlw	0
  5725  0413  00DB               	movwf	map@in_min+1
  5726  0414  3000               	movlw	0
  5727  0415  00DC               	movwf	map@in_min+2
  5728  0416  0022               	movlb	2	; select bank2
  5729  0417  0860               	movf	(_knob2_prev+1)^(0+256),w	;volatile
  5730  0418  0020               	movlb	0	; select bank0
  5731  0419  00AB               	movwf	___awtoft@c+1
  5732  041A  0022               	movlb	2	; select bank2
  5733  041B  085F               	movf	_knob2_prev^(0+256),w	;volatile
  5734  041C  0020               	movlb	0	; select bank0
  5735  041D  00AA               	movwf	___awtoft@c
  5736  041E  319E  26CE  3182   	fcall	___awtoft
  5737  0421  0020               	movlb	0	; select bank0
  5738  0422  082A               	movf	?___awtoft,w
  5739  0423  00D7               	movwf	map@x
  5740  0424  082B               	movf	?___awtoft+1,w
  5741  0425  00D8               	movwf	map@x+1
  5742  0426  082C               	movf	?___awtoft+2,w
  5743  0427  00D9               	movwf	map@x+2
  5744  0428  3196  26CC  3182   	fcall	_map
  5745  042B  0020               	movlb	0	; select bank0
  5746  042C  0857               	movf	?_map,w
  5747  042D  0021               	movlb	1	; select bank1
  5748  042E  00A0               	movwf	___fttol@f1^(0+128)
  5749  042F  0020               	movlb	0	; select bank0
  5750  0430  0858               	movf	?_map+1,w
  5751  0431  0021               	movlb	1	; select bank1
  5752  0432  00A1               	movwf	(___fttol@f1+1)^(0+128)
  5753  0433  0020               	movlb	0	; select bank0
  5754  0434  0859               	movf	?_map+2,w
  5755  0435  0021               	movlb	1	; select bank1
  5756  0436  00A2               	movwf	(___fttol@f1+2)^(0+128)
  5757  0437  3196  2645  3182   	fcall	___fttol
  5758  043A  0021               	movlb	1	; select bank1
  5759  043B  0821               	movf	(?___fttol^(0+128)+1),w
  5760  043C  0023               	movlb	3	; select bank3
  5761  043D  00E9               	movwf	(main@i+1)^(0+384)
  5762  043E  0021               	movlb	1	; select bank1
  5763  043F  0820               	movf	?___fttol^(0+128),w
  5764  0440  0023               	movlb	3	; select bank3
  5765  0441  00E8               	movwf	main@i^(0+384)
  5766                           
  5767                           ;main.c: 272: CCPR2 = iB25k[i];
  5768  0442  3568               	lslf	main@i^(0+384),w
  5769  0443  3E20               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5770  0444  0086               	movwf	6
  5771  0445  3004               	movlw	4	; select bank8/9
  5772  0446  0087               	movwf	7
  5773  0447  3F40               	moviw [0]fsr1
  5774  0448  0025               	movlb	5	; select bank5
  5775  0449  0098               	movwf	24	;volatile
  5776  044A  3F41               	moviw [1]fsr1
  5777  044B  0099               	movwf	25	;volatile
  5778                           
  5779                           ;main.c: 273: CCPR3 = B25k[i];
  5780  044C  0023               	movlb	3	; select bank3
  5781  044D  3568               	lslf	main@i^(0+384),w
  5782  044E  3EA0               	addlw	(low (_B25k| (0+768)))& (0+255)
  5783  044F  0086               	movwf	6
  5784  0450  3003               	movlw	3	; select bank7/8
  5785  0451  0087               	movwf	7
  5786  0452  3F40               	moviw [0]fsr1
  5787  0453  0026               	movlb	6	; select bank6
  5788  0454  0091               	movwf	17	;volatile
  5789  0455  3F41               	moviw [1]fsr1
  5790  0456  0092               	movwf	18	;volatile
  5791  0457                     l6132:	
  5792                           
  5793                           ;main.c: 274: }
  5794                           ;main.c: 284: if (knob_3_pos - knob3_prev >= 4 || knob_3_pos - knob3_prev <= -4) {
  5795  0457  0022               	movlb	2	; select bank2
  5796  0458  0961               	comf	_knob3_prev^(0+256),w	;volatile
  5797  0459  0021               	movlb	1	; select bank1
  5798  045A  00BA               	movwf	??_main^(0+128)
  5799  045B  0022               	movlb	2	; select bank2
  5800  045C  0962               	comf	(_knob3_prev+1)^(0+256),w	;volatile
  5801  045D  0021               	movlb	1	; select bank1
  5802  045E  00BB               	movwf	(??_main^(0+128)+1)
  5803  045F  0ABA               	incf	??_main^(0+128),f
  5804  0460  1903               	skipnz
  5805  0461  0ABB               	incf	(??_main^(0+128)+1),f
  5806  0462  0022               	movlb	2	; select bank2
  5807  0463  0840               	movf	_knob_3_pos^(0+256),w
  5808  0464  0021               	movlb	1	; select bank1
  5809  0465  073A               	addwf	??_main^(0+128),w
  5810  0466  00BC               	movwf	(??_main+2)^(0+128)
  5811  0467  0022               	movlb	2	; select bank2
  5812  0468  0841               	movf	(_knob_3_pos+1)^(0+256),w
  5813  0469  0021               	movlb	1	; select bank1
  5814  046A  3D3B               	addwfc	(??_main+1)^(0+128),w
  5815  046B  00BD               	movwf	(??_main+3)^(0+128)
  5816  046C  083D               	movf	(??_main+3)^(0+128),w
  5817  046D  3A80               	xorlw	128
  5818  046E  00BE               	movwf	(??_main+4)^(0+128)
  5819  046F  3080               	movlw	128
  5820  0470  023E               	subwf	(??_main+4)^(0+128),w
  5821  0471  1D03               	skipz
  5822  0472  2C75               	goto	u7095
  5823  0473  3004               	movlw	4
  5824  0474  023C               	subwf	(??_main+2)^(0+128),w
  5825  0475                     u7095:	
  5826  0475  1803               	skipnc
  5827  0476  2C97               	goto	l6136
  5828  0477  0022               	movlb	2	; select bank2
  5829  0478  0961               	comf	_knob3_prev^(0+256),w	;volatile
  5830  0479  0021               	movlb	1	; select bank1
  5831  047A  00BA               	movwf	??_main^(0+128)
  5832  047B  0022               	movlb	2	; select bank2
  5833  047C  0962               	comf	(_knob3_prev+1)^(0+256),w	;volatile
  5834  047D  0021               	movlb	1	; select bank1
  5835  047E  00BB               	movwf	(??_main^(0+128)+1)
  5836  047F  0ABA               	incf	??_main^(0+128),f
  5837  0480  1903               	skipnz
  5838  0481  0ABB               	incf	(??_main^(0+128)+1),f
  5839  0482  0022               	movlb	2	; select bank2
  5840  0483  0840               	movf	_knob_3_pos^(0+256),w
  5841  0484  0021               	movlb	1	; select bank1
  5842  0485  073A               	addwf	??_main^(0+128),w
  5843  0486  00BC               	movwf	(??_main+2)^(0+128)
  5844  0487  0022               	movlb	2	; select bank2
  5845  0488  0841               	movf	(_knob_3_pos+1)^(0+256),w
  5846  0489  0021               	movlb	1	; select bank1
  5847  048A  3D3B               	addwfc	(??_main+1)^(0+128),w
  5848  048B  00BD               	movwf	(??_main+3)^(0+128)
  5849  048C  083D               	movf	(??_main+3)^(0+128),w
  5850  048D  3A80               	xorlw	128
  5851  048E  00BE               	movwf	(??_main+4)^(0+128)
  5852  048F  307F               	movlw	127
  5853  0490  023E               	subwf	(??_main+4)^(0+128),w
  5854  0491  1D03               	skipz
  5855  0492  2C95               	goto	u7105
  5856  0493  30FD               	movlw	253
  5857  0494  023C               	subwf	(??_main+2)^(0+128),w
  5858  0495                     u7105:	
  5859  0495  1803               	skipnc
  5860  0496  2CF6               	goto	l6144
  5861  0497                     l6136:	
  5862                           
  5863                           ;main.c: 285: knob3_prev = knob_3_pos;
  5864  0497  0022               	movlb	2	; select bank2
  5865  0498  0841               	movf	(_knob_3_pos+1)^(0+256),w
  5866  0499  00E2               	movwf	(_knob3_prev+1)^(0+256)	;volatile
  5867  049A  0840               	movf	_knob_3_pos^(0+256),w
  5868  049B  00E1               	movwf	_knob3_prev^(0+256)	;volatile
  5869                           
  5870                           ;main.c: 286: int i = map(knob3_prev, 0, 1023, 16, 0);
  5871  049C  3000               	movlw	0
  5872  049D  0020               	movlb	0	; select bank0
  5873  049E  00E3               	movwf	map@out_max
  5874  049F  3000               	movlw	0
  5875  04A0  00E4               	movwf	map@out_max+1
  5876  04A1  3000               	movlw	0
  5877  04A2  00E5               	movwf	map@out_max+2
  5878  04A3  3000               	movlw	0
  5879  04A4  00E0               	movwf	map@out_min
  5880  04A5  3080               	movlw	128
  5881  04A6  00E1               	movwf	map@out_min+1
  5882  04A7  3041               	movlw	65
  5883  04A8  00E2               	movwf	map@out_min+2
  5884  04A9  30C0               	movlw	192
  5885  04AA  00DD               	movwf	map@in_max
  5886  04AB  307F               	movlw	127
  5887  04AC  00DE               	movwf	map@in_max+1
  5888  04AD  3044               	movlw	68
  5889  04AE  00DF               	movwf	map@in_max+2
  5890  04AF  3000               	movlw	0
  5891  04B0  00DA               	movwf	map@in_min
  5892  04B1  3000               	movlw	0
  5893  04B2  00DB               	movwf	map@in_min+1
  5894  04B3  3000               	movlw	0
  5895  04B4  00DC               	movwf	map@in_min+2
  5896  04B5  0022               	movlb	2	; select bank2
  5897  04B6  0862               	movf	(_knob3_prev+1)^(0+256),w	;volatile
  5898  04B7  0020               	movlb	0	; select bank0
  5899  04B8  00AB               	movwf	___awtoft@c+1
  5900  04B9  0022               	movlb	2	; select bank2
  5901  04BA  0861               	movf	_knob3_prev^(0+256),w	;volatile
  5902  04BB  0020               	movlb	0	; select bank0
  5903  04BC  00AA               	movwf	___awtoft@c
  5904  04BD  319E  26CE  3182   	fcall	___awtoft
  5905  04C0  0020               	movlb	0	; select bank0
  5906  04C1  082A               	movf	?___awtoft,w
  5907  04C2  00D7               	movwf	map@x
  5908  04C3  082B               	movf	?___awtoft+1,w
  5909  04C4  00D8               	movwf	map@x+1
  5910  04C5  082C               	movf	?___awtoft+2,w
  5911  04C6  00D9               	movwf	map@x+2
  5912  04C7  3196  26CC  3182   	fcall	_map
  5913  04CA  0020               	movlb	0	; select bank0
  5914  04CB  0857               	movf	?_map,w
  5915  04CC  0021               	movlb	1	; select bank1
  5916  04CD  00A0               	movwf	___fttol@f1^(0+128)
  5917  04CE  0020               	movlb	0	; select bank0
  5918  04CF  0858               	movf	?_map+1,w
  5919  04D0  0021               	movlb	1	; select bank1
  5920  04D1  00A1               	movwf	(___fttol@f1+1)^(0+128)
  5921  04D2  0020               	movlb	0	; select bank0
  5922  04D3  0859               	movf	?_map+2,w
  5923  04D4  0021               	movlb	1	; select bank1
  5924  04D5  00A2               	movwf	(___fttol@f1+2)^(0+128)
  5925  04D6  3196  2645  3182   	fcall	___fttol
  5926  04D9  0021               	movlb	1	; select bank1
  5927  04DA  0821               	movf	(?___fttol^(0+128)+1),w
  5928  04DB  0023               	movlb	3	; select bank3
  5929  04DC  00EB               	movwf	(main@i_376+1)^(0+384)
  5930  04DD  0021               	movlb	1	; select bank1
  5931  04DE  0820               	movf	?___fttol^(0+128),w
  5932  04DF  0023               	movlb	3	; select bank3
  5933  04E0  00EA               	movwf	main@i_376^(0+384)
  5934                           
  5935                           ;main.c: 287: CCPR4 = iB25k[i];
  5936  04E1  356A               	lslf	main@i_376^(0+384),w
  5937  04E2  3E20               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5938  04E3  0086               	movwf	6
  5939  04E4  3004               	movlw	4	; select bank8/9
  5940  04E5  0087               	movwf	7
  5941  04E6  3F40               	moviw [0]fsr1
  5942  04E7  0026               	movlb	6	; select bank6
  5943  04E8  0098               	movwf	24	;volatile
  5944  04E9  3F41               	moviw [1]fsr1
  5945  04EA  0099               	movwf	25	;volatile
  5946                           
  5947                           ;main.c: 288: CCPR5 = B25k[i];
  5948  04EB  0023               	movlb	3	; select bank3
  5949  04EC  356A               	lslf	main@i_376^(0+384),w
  5950  04ED  3EA0               	addlw	(low (_B25k| (0+768)))& (0+255)
  5951  04EE  0086               	movwf	6
  5952  04EF  3003               	movlw	3	; select bank7/8
  5953  04F0  0087               	movwf	7
  5954  04F1  3F40               	moviw [0]fsr1
  5955  04F2  0026               	movlb	6	; select bank6
  5956  04F3  009C               	movwf	28	;volatile
  5957  04F4  3F41               	moviw [1]fsr1
  5958  04F5  009D               	movwf	29	;volatile
  5959  04F6                     l6144:	
  5960                           
  5961                           ;main.c: 289: }
  5962                           ;main.c: 299: if (knob_4_pos - knob4_prev >= 4 || knob_4_pos - knob4_prev <= -4) {
  5963  04F6  0022               	movlb	2	; select bank2
  5964  04F7  0963               	comf	_knob4_prev^(0+256),w	;volatile
  5965  04F8  0021               	movlb	1	; select bank1
  5966  04F9  00BA               	movwf	??_main^(0+128)
  5967  04FA  0022               	movlb	2	; select bank2
  5968  04FB  0964               	comf	(_knob4_prev+1)^(0+256),w	;volatile
  5969  04FC  0021               	movlb	1	; select bank1
  5970  04FD  00BB               	movwf	(??_main^(0+128)+1)
  5971  04FE  0ABA               	incf	??_main^(0+128),f
  5972  04FF  1903               	skipnz
  5973  0500  0ABB               	incf	(??_main^(0+128)+1),f
  5974  0501  0022               	movlb	2	; select bank2
  5975  0502  0842               	movf	_knob_4_pos^(0+256),w
  5976  0503  0021               	movlb	1	; select bank1
  5977  0504  073A               	addwf	??_main^(0+128),w
  5978  0505  00BC               	movwf	(??_main+2)^(0+128)
  5979  0506  0022               	movlb	2	; select bank2
  5980  0507  0843               	movf	(_knob_4_pos+1)^(0+256),w
  5981  0508  0021               	movlb	1	; select bank1
  5982  0509  3D3B               	addwfc	(??_main+1)^(0+128),w
  5983  050A  00BD               	movwf	(??_main+3)^(0+128)
  5984  050B  083D               	movf	(??_main+3)^(0+128),w
  5985  050C  3A80               	xorlw	128
  5986  050D  00BE               	movwf	(??_main+4)^(0+128)
  5987  050E  3080               	movlw	128
  5988  050F  023E               	subwf	(??_main+4)^(0+128),w
  5989  0510  1D03               	skipz
  5990  0511  2D14               	goto	u7115
  5991  0512  3004               	movlw	4
  5992  0513  023C               	subwf	(??_main+2)^(0+128),w
  5993  0514                     u7115:	
  5994  0514  1803               	skipnc
  5995  0515  2D36               	goto	l6148
  5996  0516  0022               	movlb	2	; select bank2
  5997  0517  0963               	comf	_knob4_prev^(0+256),w	;volatile
  5998  0518  0021               	movlb	1	; select bank1
  5999  0519  00BA               	movwf	??_main^(0+128)
  6000  051A  0022               	movlb	2	; select bank2
  6001  051B  0964               	comf	(_knob4_prev+1)^(0+256),w	;volatile
  6002  051C  0021               	movlb	1	; select bank1
  6003  051D  00BB               	movwf	(??_main^(0+128)+1)
  6004  051E  0ABA               	incf	??_main^(0+128),f
  6005  051F  1903               	skipnz
  6006  0520  0ABB               	incf	(??_main^(0+128)+1),f
  6007  0521  0022               	movlb	2	; select bank2
  6008  0522  0842               	movf	_knob_4_pos^(0+256),w
  6009  0523  0021               	movlb	1	; select bank1
  6010  0524  073A               	addwf	??_main^(0+128),w
  6011  0525  00BC               	movwf	(??_main+2)^(0+128)
  6012  0526  0022               	movlb	2	; select bank2
  6013  0527  0843               	movf	(_knob_4_pos+1)^(0+256),w
  6014  0528  0021               	movlb	1	; select bank1
  6015  0529  3D3B               	addwfc	(??_main+1)^(0+128),w
  6016  052A  00BD               	movwf	(??_main+3)^(0+128)
  6017  052B  083D               	movf	(??_main+3)^(0+128),w
  6018  052C  3A80               	xorlw	128
  6019  052D  00BE               	movwf	(??_main+4)^(0+128)
  6020  052E  307F               	movlw	127
  6021  052F  023E               	subwf	(??_main+4)^(0+128),w
  6022  0530  1D03               	skipz
  6023  0531  2D34               	goto	u7125
  6024  0532  30FD               	movlw	253
  6025  0533  023C               	subwf	(??_main+2)^(0+128),w
  6026  0534                     u7125:	
  6027  0534  1803               	skipnc
  6028  0535  2D80               	goto	l6152
  6029  0536                     l6148:	
  6030                           
  6031                           ;main.c: 300: knob4_prev = knob_4_pos;
  6032  0536  0022               	movlb	2	; select bank2
  6033  0537  0843               	movf	(_knob_4_pos+1)^(0+256),w
  6034  0538  00E4               	movwf	(_knob4_prev+1)^(0+256)	;volatile
  6035  0539  0842               	movf	_knob_4_pos^(0+256),w
  6036  053A  00E3               	movwf	_knob4_prev^(0+256)	;volatile
  6037                           
  6038                           ;main.c: 301: mod_delay_time = map(knob4_prev, 0, 1023, 60, 1000);
  6039  053B  3000               	movlw	0
  6040  053C  0020               	movlb	0	; select bank0
  6041  053D  00E3               	movwf	map@out_max
  6042  053E  307A               	movlw	122
  6043  053F  00E4               	movwf	map@out_max+1
  6044  0540  3044               	movlw	68
  6045  0541  00E5               	movwf	map@out_max+2
  6046  0542  3000               	movlw	0
  6047  0543  00E0               	movwf	map@out_min
  6048  0544  3070               	movlw	112
  6049  0545  00E1               	movwf	map@out_min+1
  6050  0546  3042               	movlw	66
  6051  0547  00E2               	movwf	map@out_min+2
  6052  0548  30C0               	movlw	192
  6053  0549  00DD               	movwf	map@in_max
  6054  054A  307F               	movlw	127
  6055  054B  00DE               	movwf	map@in_max+1
  6056  054C  3044               	movlw	68
  6057  054D  00DF               	movwf	map@in_max+2
  6058  054E  3000               	movlw	0
  6059  054F  00DA               	movwf	map@in_min
  6060  0550  3000               	movlw	0
  6061  0551  00DB               	movwf	map@in_min+1
  6062  0552  3000               	movlw	0
  6063  0553  00DC               	movwf	map@in_min+2
  6064  0554  0022               	movlb	2	; select bank2
  6065  0555  0864               	movf	(_knob4_prev+1)^(0+256),w	;volatile
  6066  0556  0020               	movlb	0	; select bank0
  6067  0557  00AB               	movwf	___awtoft@c+1
  6068  0558  0022               	movlb	2	; select bank2
  6069  0559  0863               	movf	_knob4_prev^(0+256),w	;volatile
  6070  055A  0020               	movlb	0	; select bank0
  6071  055B  00AA               	movwf	___awtoft@c
  6072  055C  319E  26CE  3182   	fcall	___awtoft
  6073  055F  0020               	movlb	0	; select bank0
  6074  0560  082A               	movf	?___awtoft,w
  6075  0561  00D7               	movwf	map@x
  6076  0562  082B               	movf	?___awtoft+1,w
  6077  0563  00D8               	movwf	map@x+1
  6078  0564  082C               	movf	?___awtoft+2,w
  6079  0565  00D9               	movwf	map@x+2
  6080  0566  3196  26CC  3182   	fcall	_map
  6081  0569  0020               	movlb	0	; select bank0
  6082  056A  0857               	movf	?_map,w
  6083  056B  0021               	movlb	1	; select bank1
  6084  056C  00A0               	movwf	___fttol@f1^(0+128)
  6085  056D  0020               	movlb	0	; select bank0
  6086  056E  0858               	movf	?_map+1,w
  6087  056F  0021               	movlb	1	; select bank1
  6088  0570  00A1               	movwf	(___fttol@f1+1)^(0+128)
  6089  0571  0020               	movlb	0	; select bank0
  6090  0572  0859               	movf	?_map+2,w
  6091  0573  0021               	movlb	1	; select bank1
  6092  0574  00A2               	movwf	(___fttol@f1+2)^(0+128)
  6093  0575  3196  2645  3182   	fcall	___fttol
  6094  0578  0021               	movlb	1	; select bank1
  6095  0579  0821               	movf	(?___fttol^(0+128)+1),w
  6096  057A  0022               	movlb	2	; select bank2
  6097  057B  00E8               	movwf	(_mod_delay_time+1)^(0+256)
  6098  057C  0021               	movlb	1	; select bank1
  6099  057D  0820               	movf	?___fttol^(0+128),w
  6100  057E  0022               	movlb	2	; select bank2
  6101  057F  00E7               	movwf	_mod_delay_time^(0+256)
  6102  0580                     l6152:	
  6103                           
  6104                           ;main.c: 302: }
  6105                           ;main.c: 310: if (knob_5_pos - knob5_prev >= 4 || knob_5_pos - knob5_prev <= -4) {
  6106  0580  0022               	movlb	2	; select bank2
  6107  0581  0965               	comf	_knob5_prev^(0+256),w	;volatile
  6108  0582  0021               	movlb	1	; select bank1
  6109  0583  00BA               	movwf	??_main^(0+128)
  6110  0584  0022               	movlb	2	; select bank2
  6111  0585  0966               	comf	(_knob5_prev+1)^(0+256),w	;volatile
  6112  0586  0021               	movlb	1	; select bank1
  6113  0587  00BB               	movwf	(??_main^(0+128)+1)
  6114  0588  0ABA               	incf	??_main^(0+128),f
  6115  0589  1903               	skipnz
  6116  058A  0ABB               	incf	(??_main^(0+128)+1),f
  6117  058B  0022               	movlb	2	; select bank2
  6118  058C  0844               	movf	_knob_5_pos^(0+256),w
  6119  058D  0021               	movlb	1	; select bank1
  6120  058E  073A               	addwf	??_main^(0+128),w
  6121  058F  00BC               	movwf	(??_main+2)^(0+128)
  6122  0590  0022               	movlb	2	; select bank2
  6123  0591  0845               	movf	(_knob_5_pos+1)^(0+256),w
  6124  0592  0021               	movlb	1	; select bank1
  6125  0593  3D3B               	addwfc	(??_main+1)^(0+128),w
  6126  0594  00BD               	movwf	(??_main+3)^(0+128)
  6127  0595  083D               	movf	(??_main+3)^(0+128),w
  6128  0596  3A80               	xorlw	128
  6129  0597  00BE               	movwf	(??_main+4)^(0+128)
  6130  0598  3080               	movlw	128
  6131  0599  023E               	subwf	(??_main+4)^(0+128),w
  6132  059A  1D03               	skipz
  6133  059B  2D9E               	goto	u7135
  6134  059C  3004               	movlw	4
  6135  059D  023C               	subwf	(??_main+2)^(0+128),w
  6136  059E                     u7135:	
  6137  059E  1803               	skipnc
  6138  059F  2DC0               	goto	l6156
  6139  05A0  0022               	movlb	2	; select bank2
  6140  05A1  0965               	comf	_knob5_prev^(0+256),w	;volatile
  6141  05A2  0021               	movlb	1	; select bank1
  6142  05A3  00BA               	movwf	??_main^(0+128)
  6143  05A4  0022               	movlb	2	; select bank2
  6144  05A5  0966               	comf	(_knob5_prev+1)^(0+256),w	;volatile
  6145  05A6  0021               	movlb	1	; select bank1
  6146  05A7  00BB               	movwf	(??_main^(0+128)+1)
  6147  05A8  0ABA               	incf	??_main^(0+128),f
  6148  05A9  1903               	skipnz
  6149  05AA  0ABB               	incf	(??_main^(0+128)+1),f
  6150  05AB  0022               	movlb	2	; select bank2
  6151  05AC  0844               	movf	_knob_5_pos^(0+256),w
  6152  05AD  0021               	movlb	1	; select bank1
  6153  05AE  073A               	addwf	??_main^(0+128),w
  6154  05AF  00BC               	movwf	(??_main+2)^(0+128)
  6155  05B0  0022               	movlb	2	; select bank2
  6156  05B1  0845               	movf	(_knob_5_pos+1)^(0+256),w
  6157  05B2  0021               	movlb	1	; select bank1
  6158  05B3  3D3B               	addwfc	(??_main+1)^(0+128),w
  6159  05B4  00BD               	movwf	(??_main+3)^(0+128)
  6160  05B5  083D               	movf	(??_main+3)^(0+128),w
  6161  05B6  3A80               	xorlw	128
  6162  05B7  00BE               	movwf	(??_main+4)^(0+128)
  6163  05B8  307F               	movlw	127
  6164  05B9  023E               	subwf	(??_main+4)^(0+128),w
  6165  05BA  1D03               	skipz
  6166  05BB  2DBE               	goto	u7145
  6167  05BC  30FD               	movlw	253
  6168  05BD  023C               	subwf	(??_main+2)^(0+128),w
  6169  05BE                     u7145:	
  6170  05BE  1803               	skipnc
  6171  05BF  2DC5               	goto	l306
  6172  05C0                     l6156:	
  6173                           
  6174                           ;main.c: 311: knob5_prev = knob_5_pos;
  6175  05C0  0022               	movlb	2	; select bank2
  6176  05C1  0845               	movf	(_knob_5_pos+1)^(0+256),w
  6177  05C2  00E6               	movwf	(_knob5_prev+1)^(0+256)	;volatile
  6178  05C3  0844               	movf	_knob_5_pos^(0+256),w
  6179  05C4  00E5               	movwf	_knob5_prev^(0+256)	;volatile
  6180  05C5                     l306:	
  6181                           
  6182                           ;main.c: 312: }
  6183                           ;main.c: 314: if (mod_delay_time < 100) {
  6184  05C5  0022               	movlb	2	; select bank2
  6185  05C6  0868               	movf	(_mod_delay_time+1)^(0+256),w
  6186  05C7  3A80               	xorlw	128
  6187  05C8  0021               	movlb	1	; select bank1
  6188  05C9  00BA               	movwf	??_main^(0+128)
  6189  05CA  3080               	movlw	128
  6190  05CB  023A               	subwf	??_main^(0+128),w
  6191  05CC  1D03               	skipz
  6192  05CD  2DD1               	goto	u7155
  6193  05CE  3064               	movlw	100
  6194  05CF  0022               	movlb	2	; select bank2
  6195  05D0  0267               	subwf	_mod_delay_time^(0+256),w
  6196  05D1                     u7155:	
  6197  05D1  1803               	skipnc
  6198  05D2  2DD6               	goto	l309
  6199                           
  6200                           ;main.c: 315: LATBbits.LATB0 = 1;
  6201  05D3  0022               	movlb	2	; select bank2
  6202  05D4  140D               	bsf	13,0	;volatile
  6203                           
  6204                           ;main.c: 316: } else {
  6205  05D5  2DD8               	goto	l6160
  6206  05D6                     l309:	
  6207                           
  6208                           ;main.c: 317: LATBbits.LATB0 = 0;
  6209  05D6  0022               	movlb	2	; select bank2
  6210  05D7  100D               	bcf	13,0	;volatile
  6211  05D8                     l6160:	
  6212                           
  6213                           ;main.c: 318: }
  6214                           ;main.c: 332: if (mod_timer >= mod_delay_time) {
  6215  05D8  0867               	movf	_mod_delay_time^(0+256),w
  6216  05D9  0021               	movlb	1	; select bank1
  6217  05DA  00BA               	movwf	??_main^(0+128)
  6218  05DB  0022               	movlb	2	; select bank2
  6219  05DC  0868               	movf	(_mod_delay_time+1)^(0+256),w
  6220  05DD  0021               	movlb	1	; select bank1
  6221  05DE  00BB               	movwf	(??_main^(0+128)+1)
  6222  05DF  3000               	movlw	0
  6223  05E0  1BBB               	btfsc	(??_main^(0+128)+1),7
  6224  05E1  30FF               	movlw	255
  6225  05E2  00BC               	movwf	(??_main^(0+128)+2)
  6226  05E3  00BD               	movwf	(??_main^(0+128)+3)
  6227  05E4  0022               	movlb	2	; select bank2
  6228  05E5  0827               	movf	(_mod_timer+3)^(0+256),w	;volatile
  6229  05E6  3A80               	xorlw	128
  6230  05E7  0021               	movlb	1	; select bank1
  6231  05E8  00BE               	movwf	(??_main+4)^(0+128)
  6232  05E9  083D               	movf	(??_main+3)^(0+128),w
  6233  05EA  3A80               	xorlw	128
  6234  05EB  023E               	subwf	(??_main+4)^(0+128),w
  6235  05EC  0022               	movlb	2	; select bank2
  6236  05ED  1D03               	skipz
  6237  05EE  2DFF               	goto	u7163
  6238  05EF  0021               	movlb	1	; select bank1
  6239  05F0  083C               	movf	(??_main+2)^(0+128),w
  6240  05F1  0022               	movlb	2	; select bank2
  6241  05F2  0226               	subwf	(_mod_timer+2)^(0+256),w	;volatile
  6242  05F3  1D03               	skipz
  6243  05F4  2DFF               	goto	u7163
  6244  05F5  0021               	movlb	1	; select bank1
  6245  05F6  083B               	movf	(??_main+1)^(0+128),w
  6246  05F7  0022               	movlb	2	; select bank2
  6247  05F8  0225               	subwf	(_mod_timer+1)^(0+256),w	;volatile
  6248  05F9  1D03               	skipz
  6249  05FA  2DFF               	goto	u7163
  6250  05FB  0021               	movlb	1	; select bank1
  6251  05FC  083A               	movf	??_main^(0+128),w
  6252  05FD  0022               	movlb	2	; select bank2
  6253  05FE  0224               	subwf	_mod_timer^(0+256),w	;volatile
  6254  05FF                     u7163:	
  6255  05FF  1C03               	skipc
  6256  0600  2F36               	goto	l6216
  6257                           
  6258                           ;main.c: 334: if (mod_delay_time_bak != mod_delay_time) {
  6259  0601  0868               	movf	(_mod_delay_time+1)^(0+256),w
  6260  0602  0649               	xorwf	(_mod_delay_time_bak+1)^(0+256),w
  6261  0603  1D03               	skipz
  6262  0604  2E07               	goto	u7175
  6263  0605  0867               	movf	_mod_delay_time^(0+256),w
  6264  0606  0648               	xorwf	_mod_delay_time_bak^(0+256),w
  6265  0607                     u7175:	
  6266  0607  1903               	skipnz
  6267  0608  2E0D               	goto	l6166
  6268                           
  6269                           ;main.c: 335: mod_delay_time_bak = mod_delay_time;
  6270  0609  0868               	movf	(_mod_delay_time+1)^(0+256),w
  6271  060A  00C9               	movwf	(_mod_delay_time_bak+1)^(0+256)
  6272  060B  0867               	movf	_mod_delay_time^(0+256),w
  6273  060C  00C8               	movwf	_mod_delay_time_bak^(0+256)
  6274  060D                     l6166:	
  6275                           
  6276                           ;main.c: 337: }
  6277                           ;main.c: 339: mod_counter = mod_counter + 1;
  6278  060D  0021               	movlb	1	; select bank1
  6279  060E  0868               	movf	_mod_counter^(0+128),w
  6280  060F  3E01               	addlw	1
  6281  0610  00E8               	movwf	_mod_counter^(0+128)
  6282  0611  3000               	movlw	0
  6283  0612  3D69               	addwfc	(_mod_counter+1)^(0+128),w
  6284  0613  00E9               	movwf	(_mod_counter+1)^(0+128)
  6285                           
  6286                           ;main.c: 340: mod_timer = 0;
  6287  0614  3000               	movlw	0
  6288  0615  0022               	movlb	2	; select bank2
  6289  0616  00A7               	movwf	(_mod_timer+3)^(0+256)	;volatile
  6290  0617  3000               	movlw	0
  6291  0618  00A6               	movwf	(_mod_timer+2)^(0+256)	;volatile
  6292  0619  3000               	movlw	0
  6293  061A  00A5               	movwf	(_mod_timer+1)^(0+256)	;volatile
  6294  061B  3000               	movlw	0
  6295  061C  00A4               	movwf	_mod_timer^(0+256)	;volatile
  6296                           
  6297                           ;main.c: 342: if (bottom_push_state == 1 || bottom_push_state == 5) {
  6298  061D  0021               	movlb	1	; select bank1
  6299  061E  0351               	decf	_bottom_push_state^(0+128),w
  6300  061F  0452               	iorwf	(_bottom_push_state+1)^(0+128),w
  6301  0620  1903               	btfsc	3,2
  6302  0621  2E27               	goto	l6172
  6303  0622  3005               	movlw	5
  6304  0623  0651               	xorwf	_bottom_push_state^(0+128),w
  6305  0624  0452               	iorwf	(_bottom_push_state+1)^(0+128),w
  6306  0625  1D03               	btfss	3,2
  6307  0626  2E30               	goto	l6176
  6308  0627                     l6172:	
  6309                           
  6310                           ;main.c: 343: if (mod_counter >= 61) {
  6311  0627  0869               	movf	(_mod_counter+1)^(0+128),w
  6312  0628  3A80               	xorlw	128
  6313  0629  00BA               	movwf	??_main^(0+128)
  6314  062A  3080               	movlw	128
  6315  062B  023A               	subwf	??_main^(0+128),w
  6316  062C  1D03               	skipz
  6317  062D  2E39               	goto	u7215
  6318  062E  303D               	movlw	61
  6319  062F  2E38               	goto	L1
  6320  0630                     l6176:	
  6321                           ;main.c: 345: }
  6322                           ;main.c: 346: } else {
  6323                           
  6324                           ;main.c: 344: mod_counter = 0;
  6325                           
  6326                           
  6327                           ;main.c: 347: if (mod_counter > 31) {
  6328  0630  0869               	movf	(_mod_counter+1)^(0+128),w
  6329  0631  3A80               	xorlw	128
  6330  0632  00BA               	movwf	??_main^(0+128)
  6331  0633  3080               	movlw	128
  6332  0634  023A               	subwf	??_main^(0+128),w
  6333  0635  1D03               	skipz
  6334  0636  2E39               	goto	u7215
  6335  0637  3020               	movlw	32
  6336  0638                     L1:	
  6337  0638  0268               	subwf	_mod_counter^(0+128),w
  6338  0639                     u7215:	
  6339  0639  1C03               	skipc
  6340  063A  2E3E               	goto	l6180
  6341                           
  6342                           ;main.c: 348: mod_counter = 0;
  6343  063B  0021               	movlb	1	; select bank1
  6344  063C  01E8               	clrf	_mod_counter^(0+128)
  6345  063D  01E9               	clrf	(_mod_counter+1)^(0+128)
  6346  063E                     l6180:	
  6347                           
  6348                           ;main.c: 349: }
  6349                           ;main.c: 350: }
  6350                           ;main.c: 353: signed int adjusted_pot_value = map(knob5_prev, 0, 1023, 1275, 0);
  6351  063E  3000               	movlw	0
  6352  063F  0020               	movlb	0	; select bank0
  6353  0640  00E3               	movwf	map@out_max
  6354  0641  3000               	movlw	0
  6355  0642  00E4               	movwf	map@out_max+1
  6356  0643  3000               	movlw	0
  6357  0644  00E5               	movwf	map@out_max+2
  6358  0645  3060               	movlw	96
  6359  0646  00E0               	movwf	map@out_min
  6360  0647  309F               	movlw	159
  6361  0648  00E1               	movwf	map@out_min+1
  6362  0649  3044               	movlw	68
  6363  064A  00E2               	movwf	map@out_min+2
  6364  064B  30C0               	movlw	192
  6365  064C  00DD               	movwf	map@in_max
  6366  064D  307F               	movlw	127
  6367  064E  00DE               	movwf	map@in_max+1
  6368  064F  3044               	movlw	68
  6369  0650  00DF               	movwf	map@in_max+2
  6370  0651  3000               	movlw	0
  6371  0652  00DA               	movwf	map@in_min
  6372  0653  3000               	movlw	0
  6373  0654  00DB               	movwf	map@in_min+1
  6374  0655  3000               	movlw	0
  6375  0656  00DC               	movwf	map@in_min+2
  6376  0657  0022               	movlb	2	; select bank2
  6377  0658  0866               	movf	(_knob5_prev+1)^(0+256),w	;volatile
  6378  0659  0020               	movlb	0	; select bank0
  6379  065A  00AB               	movwf	___awtoft@c+1
  6380  065B  0022               	movlb	2	; select bank2
  6381  065C  0865               	movf	_knob5_prev^(0+256),w	;volatile
  6382  065D  0020               	movlb	0	; select bank0
  6383  065E  00AA               	movwf	___awtoft@c
  6384  065F  319E  26CE  3182   	fcall	___awtoft
  6385  0662  0020               	movlb	0	; select bank0
  6386  0663  082A               	movf	?___awtoft,w
  6387  0664  00D7               	movwf	map@x
  6388  0665  082B               	movf	?___awtoft+1,w
  6389  0666  00D8               	movwf	map@x+1
  6390  0667  082C               	movf	?___awtoft+2,w
  6391  0668  00D9               	movwf	map@x+2
  6392  0669  3196  26CC  3182   	fcall	_map
  6393  066C  0020               	movlb	0	; select bank0
  6394  066D  0857               	movf	?_map,w
  6395  066E  0021               	movlb	1	; select bank1
  6396  066F  00A0               	movwf	___fttol@f1^(0+128)
  6397  0670  0020               	movlb	0	; select bank0
  6398  0671  0858               	movf	?_map+1,w
  6399  0672  0021               	movlb	1	; select bank1
  6400  0673  00A1               	movwf	(___fttol@f1+1)^(0+128)
  6401  0674  0020               	movlb	0	; select bank0
  6402  0675  0859               	movf	?_map+2,w
  6403  0676  0021               	movlb	1	; select bank1
  6404  0677  00A2               	movwf	(___fttol@f1+2)^(0+128)
  6405  0678  3196  2645  3182   	fcall	___fttol
  6406  067B  0021               	movlb	1	; select bank1
  6407  067C  0821               	movf	(?___fttol^(0+128)+1),w
  6408  067D  0023               	movlb	3	; select bank3
  6409  067E  00E7               	movwf	(main@adjusted_pot_value+1)^(0+384)
  6410  067F  0021               	movlb	1	; select bank1
  6411  0680  0820               	movf	?___fttol^(0+128),w
  6412  0681  0023               	movlb	3	; select bank3
  6413  0682  00E6               	movwf	main@adjusted_pot_value^(0+384)
  6414                           
  6415                           ;main.c: 354: switch (bottom_push_state) {
  6416  0683  2EE0               	goto	l6210
  6417  0684                     l6182:	
  6418                           ;main.c: 355: case 1:
  6419                           
  6420                           
  6421                           ;main.c: 356: mod_value = mod5[mod_counter];
  6422  0684  0021               	movlb	1	; select bank1
  6423  0685  0869               	movf	(_mod_counter+1)^(0+128),w
  6424  0686  00BB               	movwf	(??_main^(0+128)+1)
  6425  0687  0868               	movf	_mod_counter^(0+128),w
  6426  0688  00BA               	movwf	??_main^(0+128)
  6427  0689  35BA               	lslf	??_main^(0+128),f
  6428  068A  0DBB               	rlf	(??_main^(0+128)+1),f
  6429  068B  3078               	movlw	120
  6430  068C  00BC               	movwf	(??_main+2)^(0+128)
  6431  068D  3023               	movlw	35
  6432  068E  00BD               	movwf	((??_main+2)^(0+128)+1)
  6433  068F  083A               	movf	??_main^(0+128),w
  6434  0690  073C               	addwf	(??_main+2)^(0+128),w
  6435  0691  0086               	movwf	6
  6436  0692  083B               	movf	(??_main+1)^(0+128),w
  6437  0693  3D3D               	addwfc	(??_main+3)^(0+128),w
  6438  0694  0087               	movwf	7
  6439  0695  3F40               	moviw [0]fsr1
  6440  0696  0022               	movlb	2	; select bank2
  6441  0697  00CA               	movwf	_mod_value^(0+256)
  6442  0698  3F41               	moviw [1]fsr1
  6443  0699  2EBA               	goto	L4
  6444  069A                     l6186:	
  6445                           ;main.c: 359: case 2:
  6446                           
  6447                           ;main.c: 358: break;
  6448                           
  6449                           ;main.c: 357: PORTCbits.RC4 = 0;
  6450                           
  6451                           
  6452                           ;main.c: 360: mod_value = mod2[mod_counter];
  6453  069A  0021               	movlb	1	; select bank1
  6454  069B  3568               	lslf	_mod_counter^(0+128),w
  6455  069C  3E20               	addlw	(low (_mod2| (0+512)))& (0+255)
  6456  069D  0086               	movwf	6
  6457  069E  3002               	movlw	2	; select bank4/5
  6458  069F  0087               	movwf	7
  6459  06A0  3F40               	moviw [0]fsr1
  6460  06A1  0022               	movlb	2	; select bank2
  6461  06A2  00CA               	movwf	_mod_value^(0+256)
  6462  06A3  3F41               	moviw [1]fsr1
  6463  06A4  2EBA               	goto	L4
  6464  06A5                     l6190:	
  6465                           ;main.c: 363: case 3:
  6466                           
  6467                           ;main.c: 362: break;
  6468                           
  6469                           ;main.c: 361: PORTCbits.RC4 = 0;
  6470                           
  6471                           
  6472                           ;main.c: 364: mod_value = mod3[mod_counter];
  6473  06A5  0021               	movlb	1	; select bank1
  6474  06A6  3568               	lslf	_mod_counter^(0+128),w
  6475  06A7  3EA0               	addlw	(low (_mod3| (0+512)))& (0+255)
  6476  06A8  0086               	movwf	6
  6477  06A9  3002               	movlw	2	; select bank5/6
  6478  06AA  0087               	movwf	7
  6479  06AB  3F40               	moviw [0]fsr1
  6480  06AC  0022               	movlb	2	; select bank2
  6481  06AD  00CA               	movwf	_mod_value^(0+256)
  6482  06AE  3F41               	moviw [1]fsr1
  6483  06AF  2EBA               	goto	L4
  6484  06B0                     l6194:	
  6485                           ;main.c: 367: case 4:
  6486                           
  6487                           ;main.c: 366: break;
  6488                           
  6489                           ;main.c: 365: PORTCbits.RC4 = 0;
  6490                           
  6491                           
  6492                           ;main.c: 368: mod_value = mod4[mod_counter];
  6493  06B0  0021               	movlb	1	; select bank1
  6494  06B1  3568               	lslf	_mod_counter^(0+128),w
  6495  06B2  3E20               	addlw	(low (_mod4| (0+768)))& (0+255)
  6496  06B3  0086               	movwf	6
  6497  06B4  3003               	movlw	3	; select bank6/7
  6498  06B5  0087               	movwf	7
  6499  06B6  3F40               	moviw [0]fsr1
  6500  06B7  0022               	movlb	2	; select bank2
  6501  06B8  00CA               	movwf	_mod_value^(0+256)
  6502  06B9  3F41               	moviw [1]fsr1
  6503  06BA                     L4:	
  6504  06BA  00CB               	movwf	(_mod_value+1)^(0+256)
  6505  06BB  2EDD               	goto	l6206
  6506  06BC                     l6198:	
  6507                           ;main.c: 371: case 5:
  6508                           
  6509                           ;main.c: 370: break;
  6510                           
  6511                           ;main.c: 369: PORTCbits.RC4 = 0;
  6512                           
  6513                           
  6514                           ;main.c: 372: mod_value = mod5[mod_counter];
  6515  06BC  0021               	movlb	1	; select bank1
  6516  06BD  0869               	movf	(_mod_counter+1)^(0+128),w
  6517  06BE  00BB               	movwf	(??_main^(0+128)+1)
  6518  06BF  0868               	movf	_mod_counter^(0+128),w
  6519  06C0  00BA               	movwf	??_main^(0+128)
  6520  06C1  35BA               	lslf	??_main^(0+128),f
  6521  06C2  0DBB               	rlf	(??_main^(0+128)+1),f
  6522  06C3  3078               	movlw	120
  6523  06C4  00BC               	movwf	(??_main+2)^(0+128)
  6524  06C5  3023               	movlw	35
  6525  06C6  00BD               	movwf	((??_main+2)^(0+128)+1)
  6526  06C7  083A               	movf	??_main^(0+128),w
  6527  06C8  073C               	addwf	(??_main+2)^(0+128),w
  6528  06C9  0086               	movwf	6
  6529  06CA  083B               	movf	(??_main+1)^(0+128),w
  6530  06CB  3D3D               	addwfc	(??_main+3)^(0+128),w
  6531  06CC  0087               	movwf	7
  6532  06CD  3F40               	moviw [0]fsr1
  6533  06CE  0022               	movlb	2	; select bank2
  6534  06CF  00CA               	movwf	_mod_value^(0+256)
  6535  06D0  3F41               	moviw [1]fsr1
  6536  06D1  00CB               	movwf	(_mod_value+1)^(0+256)
  6537                           
  6538                           ;main.c: 373: adjusted_pot_value = 1275;
  6539  06D2  30FB               	movlw	251
  6540  06D3  0023               	movlb	3	; select bank3
  6541  06D4  00E6               	movwf	main@adjusted_pot_value^(0+384)
  6542  06D5  3004               	movlw	4
  6543  06D6  00E7               	movwf	(main@adjusted_pot_value^(0+384)+1)
  6544                           
  6545                           ;main.c: 374: PORTCbits.RC4 = 1;
  6546  06D7  0020               	movlb	0	; select bank0
  6547  06D8  160E               	bsf	14,4	;volatile
  6548                           
  6549                           ;main.c: 375: break;
  6550  06D9  2EFA               	goto	l6212
  6551  06DA                     l6204:	
  6552                           ;main.c: 376: case 6:
  6553                           
  6554                           
  6555                           ;main.c: 377: mod_value = 0;
  6556  06DA  0022               	movlb	2	; select bank2
  6557  06DB  01CA               	clrf	_mod_value^(0+256)
  6558  06DC  01CB               	clrf	(_mod_value+1)^(0+256)
  6559  06DD                     l6206:	
  6560                           
  6561                           ;main.c: 378: PORTCbits.RC4 = 0;
  6562  06DD  0020               	movlb	0	; select bank0
  6563  06DE  120E               	bcf	14,4	;volatile
  6564                           
  6565                           ;main.c: 380: }
  6566                           
  6567                           ;main.c: 379: break;
  6568  06DF  2EFA               	goto	l6212
  6569  06E0                     l6210:	
  6570                           
  6571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6572                           ; Switch size 1, requested type "space"
  6573                           ; Number of cases is 1, Range of values is 0 to 0
  6574                           ; switch strategies available:
  6575                           ; Name         Instructions Cycles
  6576                           ; simple_byte            4     3 (average)
  6577                           ; direct_byte            8     6 (fixed)
  6578                           ; jumptable            260     6 (fixed)
  6579                           ;	Chosen strategy is simple_byte
  6580  06E0  0021               	movlb	1	; select bank1
  6581  06E1  0852               	movf	(_bottom_push_state+1)^(0+128),w
  6582  06E2  3A00               	xorlw	0	; case 0
  6583  06E3  1903               	skipnz
  6584  06E4  2EE6               	goto	l6576
  6585  06E5  2EFA               	goto	l6212
  6586  06E6                     l6576:	
  6587                           
  6588                           ; Switch size 1, requested type "space"
  6589                           ; Number of cases is 6, Range of values is 1 to 6
  6590                           ; switch strategies available:
  6591                           ; Name         Instructions Cycles
  6592                           ; simple_byte           19    10 (average)
  6593                           ; direct_byte           21     9 (fixed)
  6594                           ; jumptable            263     9 (fixed)
  6595                           ;	Chosen strategy is simple_byte
  6596  06E6  0851               	movf	_bottom_push_state^(0+128),w
  6597  06E7  3A01               	xorlw	1	; case 1
  6598  06E8  1903               	skipnz
  6599  06E9  2E84               	goto	l6182
  6600  06EA  3A03               	xorlw	3	; case 2
  6601  06EB  1903               	skipnz
  6602  06EC  2E9A               	goto	l6186
  6603  06ED  3A01               	xorlw	1	; case 3
  6604  06EE  1903               	skipnz
  6605  06EF  2EA5               	goto	l6190
  6606  06F0  3A07               	xorlw	7	; case 4
  6607  06F1  1903               	skipnz
  6608  06F2  2EB0               	goto	l6194
  6609  06F3  3A01               	xorlw	1	; case 5
  6610  06F4  1903               	skipnz
  6611  06F5  2EBC               	goto	l6198
  6612  06F6  3A03               	xorlw	3	; case 6
  6613  06F7  1903               	skipnz
  6614  06F8  2EDA               	goto	l6204
  6615  06F9  2EFA               	goto	l6212
  6616  06FA                     l6212:	
  6617                           
  6618                           ;main.c: 381: mod_value = modulation(mod_value, adjusted_pot_value);
  6619  06FA  0022               	movlb	2	; select bank2
  6620  06FB  084B               	movf	(_mod_value+1)^(0+256),w
  6621  06FC  0020               	movlb	0	; select bank0
  6622  06FD  00B8               	movwf	modulation@x+1
  6623  06FE  0022               	movlb	2	; select bank2
  6624  06FF  084A               	movf	_mod_value^(0+256),w
  6625  0700  0020               	movlb	0	; select bank0
  6626  0701  00B7               	movwf	modulation@x
  6627  0702  0023               	movlb	3	; select bank3
  6628  0703  0867               	movf	(main@adjusted_pot_value+1)^(0+384),w
  6629  0704  0020               	movlb	0	; select bank0
  6630  0705  00BA               	movwf	modulation@y+1
  6631  0706  0023               	movlb	3	; select bank3
  6632  0707  0866               	movf	main@adjusted_pot_value^(0+384),w
  6633  0708  0020               	movlb	0	; select bank0
  6634  0709  00B9               	movwf	modulation@y
  6635  070A  3190  208E  3182   	fcall	_modulation
  6636  070D  0020               	movlb	0	; select bank0
  6637  070E  0838               	movf	?_modulation+1,w
  6638  070F  0022               	movlb	2	; select bank2
  6639  0710  00CB               	movwf	(_mod_value+1)^(0+256)
  6640  0711  0020               	movlb	0	; select bank0
  6641  0712  0837               	movf	?_modulation,w
  6642  0713  0022               	movlb	2	; select bank2
  6643  0714  00CA               	movwf	_mod_value^(0+256)
  6644                           
  6645                           ;main.c: 382: CCPR9 = mod_value / 2;
  6646  0715  3002               	movlw	2
  6647  0716  0020               	movlb	0	; select bank0
  6648  0717  00A2               	movwf	___awdiv@divisor
  6649  0718  3000               	movlw	0
  6650  0719  00A3               	movwf	___awdiv@divisor+1
  6651  071A  0022               	movlb	2	; select bank2
  6652  071B  084B               	movf	(_mod_value+1)^(0+256),w
  6653  071C  0020               	movlb	0	; select bank0
  6654  071D  00A5               	movwf	___awdiv@dividend+1
  6655  071E  0022               	movlb	2	; select bank2
  6656  071F  084A               	movf	_mod_value^(0+256),w
  6657  0720  0020               	movlb	0	; select bank0
  6658  0721  00A4               	movwf	___awdiv@dividend
  6659  0722  3194  249D  3182   	fcall	___awdiv
  6660  0725  0020               	movlb	0	; select bank0
  6661  0726  0823               	movf	?___awdiv+1,w
  6662  0727  002C               	movlb	12	; select bank12
  6663  0728  009B               	movwf	27	;volatile
  6664  0729  0020               	movlb	0	; select bank0
  6665  072A  0822               	movf	?___awdiv,w
  6666  072B  002C               	movlb	12	; select bank12
  6667  072C  009A               	movwf	26	;volatile
  6668                           
  6669                           ;main.c: 383: mod_timer = 0;
  6670  072D  3000               	movlw	0
  6671  072E  0022               	movlb	2	; select bank2
  6672  072F  00A7               	movwf	(_mod_timer+3)^(0+256)	;volatile
  6673  0730  3000               	movlw	0
  6674  0731  00A6               	movwf	(_mod_timer+2)^(0+256)	;volatile
  6675  0732  3000               	movlw	0
  6676  0733  00A5               	movwf	(_mod_timer+1)^(0+256)	;volatile
  6677  0734  3000               	movlw	0
  6678  0735  00A4               	movwf	_mod_timer^(0+256)	;volatile
  6679  0736                     l6216:	
  6680                           
  6681                           ;main.c: 384: }
  6682                           ;main.c: 389: if (delay_time_changed == 1) {
  6683  0736  035D               	decf	_delay_time_changed^(0+256),w
  6684  0737  045E               	iorwf	(_delay_time_changed+1)^(0+256),w
  6685  0738  1D03               	btfss	3,2
  6686  0739  2ABA               	goto	l6076
  6687                           
  6688                           ;main.c: 390: delay_time = baseline_delay_time;
  6689  073A  0021               	movlb	1	; select bank1
  6690  073B  084C               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
  6691  073C  00D0               	movwf	(_delay_time+3)^(0+128)	;volatile
  6692  073D  084B               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
  6693  073E  00CF               	movwf	(_delay_time+2)^(0+128)	;volatile
  6694  073F  084A               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6695  0740  00CE               	movwf	(_delay_time+1)^(0+128)	;volatile
  6696  0741  0849               	movf	_baseline_delay_time^(0+128),w	;volatile
  6697  0742  00CD               	movwf	_delay_time^(0+128)	;volatile
  6698                           
  6699                           ;main.c: 391: delay_time = set_subdivision(baseline_delay_time, top_push_state);
  6700  0743  084A               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6701  0744  00AF               	movwf	(set_subdivision@x+1)^(0+128)
  6702  0745  0849               	movf	_baseline_delay_time^(0+128),w	;volatile
  6703  0746  00AE               	movwf	set_subdivision@x^(0+128)
  6704  0747  0858               	movf	(_top_push_state+1)^(0+128),w
  6705  0748  00B1               	movwf	(set_subdivision@y+1)^(0+128)
  6706  0749  0857               	movf	_top_push_state^(0+128),w
  6707  074A  00B0               	movwf	set_subdivision@y^(0+128)
  6708  074B  3189  2111  3182   	fcall	_set_subdivision
  6709  074E  0021               	movlb	1	; select bank1
  6710  074F  082E               	movf	?_set_subdivision^(0+128),w
  6711  0750  00CD               	movwf	_delay_time^(0+128)	;volatile
  6712  0751  082F               	movf	(?_set_subdivision+1)^(0+128),w
  6713  0752  00CE               	movwf	(_delay_time+1)^(0+128)	;volatile
  6714  0753  0D89               	rlf	9,f
  6715  0754  3B89               	subwfb	9,f
  6716  0755  0989               	comf	9,f
  6717  0756  00CF               	movwf	(_delay_time+2)^(0+128)	;volatile
  6718  0757  00D0               	movwf	(_delay_time+3)^(0+128)	;volatile
  6719                           
  6720                           ;main.c: 392: reset_sub_delay = 1;
  6721  0758  3001               	movlw	1
  6722  0759  0022               	movlb	2	; select bank2
  6723  075A  00CC               	movwf	_reset_sub_delay^(0+256)
  6724  075B  3000               	movlw	0
  6725  075C  00CD               	movwf	(_reset_sub_delay^(0+256)+1)
  6726                           
  6727                           ;main.c: 393: delayfound = 0;
  6728  075D  01B8               	clrf	_delayfound^(0+256)
  6729  075E  01B9               	clrf	(_delayfound+1)^(0+256)
  6730                           
  6731                           ;main.c: 394: delay_counter = 0;
  6732  075F  01B6               	clrf	_delay_counter^(0+256)
  6733  0760  01B7               	clrf	(_delay_counter+1)^(0+256)
  6734  0761                     l6234:	
  6735                           ;main.c: 395: while (delayfound == 0) {
  6736                           
  6737  0761  0022               	movlb	2	; select bank2
  6738  0762  0838               	movf	_delayfound^(0+256),w
  6739  0763  0439               	iorwf	(_delayfound+1)^(0+256),w
  6740  0764  1D03               	btfss	3,2
  6741  0765  2FBC               	goto	l6236
  6742                           
  6743                           ;main.c: 396: if (delay[delay_counter] <= delay_time * 2) {
  6744  0766  0837               	movf	(_delay_counter+1)^(0+256),w
  6745  0767  0021               	movlb	1	; select bank1
  6746  0768  00BB               	movwf	(??_main^(0+128)+1)
  6747  0769  0022               	movlb	2	; select bank2
  6748  076A  0836               	movf	_delay_counter^(0+256),w
  6749  076B  0021               	movlb	1	; select bank1
  6750  076C  00BA               	movwf	??_main^(0+128)
  6751  076D  35BA               	lslf	??_main^(0+128),f
  6752  076E  0DBB               	rlf	(??_main^(0+128)+1),f
  6753  076F  30F2               	movlw	242
  6754  0770  00BC               	movwf	(??_main+2)^(0+128)
  6755  0771  3023               	movlw	35
  6756  0772  00BD               	movwf	((??_main+2)^(0+128)+1)
  6757  0773  083A               	movf	??_main^(0+128),w
  6758  0774  073C               	addwf	(??_main+2)^(0+128),w
  6759  0775  0086               	movwf	6
  6760  0776  083B               	movf	(??_main+1)^(0+128),w
  6761  0777  3D3D               	addwfc	(??_main+3)^(0+128),w
  6762  0778  0087               	movwf	7
  6763  0779  3F40               	moviw [0]fsr1
  6764  077A  00BE               	movwf	(??_main+4)^(0+128)
  6765  077B  3F41               	moviw [1]fsr1
  6766  077C  00BF               	movwf	((??_main+4)^(0+128)+1)
  6767  077D  083E               	movf	(??_main+4)^(0+128),w
  6768  077E  00C0               	movwf	(??_main+6)^(0+128)
  6769  077F  083F               	movf	(??_main+5)^(0+128),w
  6770  0780  00C1               	movwf	((??_main+6)^(0+128)+1)
  6771  0781  3000               	movlw	0
  6772  0782  1BC1               	btfsc	((??_main+6)^(0+128)+1),7
  6773  0783  30FF               	movlw	255
  6774  0784  00C2               	movwf	((??_main+6)^(0+128)+2)
  6775  0785  00C3               	movwf	((??_main+6)^(0+128)+3)
  6776  0786  084D               	movf	_delay_time^(0+128),w	;volatile
  6777  0787  00C4               	movwf	(??_main+10)^(0+128)
  6778  0788  084E               	movf	(_delay_time+1)^(0+128),w	;volatile
  6779  0789  00C5               	movwf	((??_main+10)^(0+128)+1)
  6780  078A  084F               	movf	(_delay_time+2)^(0+128),w	;volatile
  6781  078B  00C6               	movwf	((??_main+10)^(0+128)+2)
  6782  078C  0850               	movf	(_delay_time+3)^(0+128),w	;volatile
  6783  078D  00C7               	movwf	((??_main+10)^(0+128)+3)
  6784  078E  3001               	movlw	1
  6785  078F                     u7235:	
  6786  078F  35C4               	lslf	(??_main+10)^(0+128),f
  6787  0790  0DC5               	rlf	((??_main+10)^(0+128)+1),f
  6788  0791  0DC6               	rlf	((??_main+10)^(0+128)+2),f
  6789  0792  0DC7               	rlf	((??_main+10)^(0+128)+3),f
  6790  0793  0B89               	decfsz	9,f
  6791  0794  2F8F               	goto	u7235
  6792  0795  0847               	movf	(??_main+13)^(0+128),w
  6793  0796  3A80               	xorlw	128
  6794  0797  00C8               	movwf	(??_main+14)^(0+128)
  6795  0798  0843               	movf	(??_main+9)^(0+128),w
  6796  0799  3A80               	xorlw	128
  6797  079A  0248               	subwf	(??_main+14)^(0+128),w
  6798  079B  1D03               	skipz
  6799  079C  2FA7               	goto	u7243
  6800  079D  0842               	movf	(??_main+8)^(0+128),w
  6801  079E  0246               	subwf	(??_main+12)^(0+128),w
  6802  079F  1D03               	skipz
  6803  07A0  2FA7               	goto	u7243
  6804  07A1  0841               	movf	(??_main+7)^(0+128),w
  6805  07A2  0245               	subwf	(??_main+11)^(0+128),w
  6806  07A3  1D03               	skipz
  6807  07A4  2FA7               	goto	u7243
  6808  07A5  0840               	movf	(??_main+6)^(0+128),w
  6809  07A6  0244               	subwf	(??_main+10)^(0+128),w
  6810  07A7                     u7243:	
  6811  07A7  1C03               	skipc
  6812  07A8  2FB6               	goto	l6232
  6813                           
  6814                           ;main.c: 397: delayfound = 1;
  6815  07A9  3001               	movlw	1
  6816  07AA  0022               	movlb	2	; select bank2
  6817  07AB  00B8               	movwf	_delayfound^(0+256)
  6818  07AC  3000               	movlw	0
  6819  07AD  00B9               	movwf	(_delayfound^(0+256)+1)
  6820                           
  6821                           ;main.c: 398: CCPR1 = delay_counter;
  6822  07AE  0837               	movf	(_delay_counter+1)^(0+256),w
  6823  07AF  0025               	movlb	5	; select bank5
  6824  07B0  0092               	movwf	18	;volatile
  6825  07B1  0022               	movlb	2	; select bank2
  6826  07B2  0836               	movf	_delay_counter^(0+256),w
  6827  07B3  0025               	movlb	5	; select bank5
  6828  07B4  0091               	movwf	17	;volatile
  6829                           
  6830                           ;main.c: 399: } else {
  6831  07B5  2F61               	goto	l6234
  6832  07B6                     l6232:	
  6833                           
  6834                           ;main.c: 400: delay_counter++;
  6835  07B6  3001               	movlw	1
  6836  07B7  0022               	movlb	2	; select bank2
  6837  07B8  07B6               	addwf	_delay_counter^(0+256),f
  6838  07B9  3000               	movlw	0
  6839  07BA  3DB7               	addwfc	(_delay_counter+1)^(0+256),f
  6840  07BB  2F61               	goto	l6234
  6841  07BC                     l6236:	
  6842                           
  6843                           ;main.c: 401: }
  6844                           ;main.c: 402: }
  6845                           ;main.c: 405: mod_delay_time = delay_time / 7.5;
  6846  07BC  0021               	movlb	1	; select bank1
  6847  07BD  0850               	movf	(_delay_time+3)^(0+128),w	;volatile
  6848  07BE  0020               	movlb	0	; select bank0
  6849  07BF  00AD               	movwf	___altoft@c+3
  6850  07C0  0021               	movlb	1	; select bank1
  6851  07C1  084F               	movf	(_delay_time+2)^(0+128),w	;volatile
  6852  07C2  0020               	movlb	0	; select bank0
  6853  07C3  00AC               	movwf	___altoft@c+2
  6854  07C4  0021               	movlb	1	; select bank1
  6855  07C5  084E               	movf	(_delay_time+1)^(0+128),w	;volatile
  6856  07C6  0020               	movlb	0	; select bank0
  6857  07C7  00AB               	movwf	___altoft@c+1
  6858  07C8  0021               	movlb	1	; select bank1
  6859  07C9  084D               	movf	_delay_time^(0+128),w	;volatile
  6860  07CA  0020               	movlb	0	; select bank0
  6861  07CB  00AA               	movwf	___altoft@c
  6862  07CC  3190  2051  3182   	fcall	___altoft
  6863  07CF  0020               	movlb	0	; select bank0
  6864  07D0  082A               	movf	?___altoft,w
  6865  07D1  00CA               	movwf	___ftdiv@f1
  6866  07D2  082B               	movf	?___altoft+1,w
  6867  07D3  00CB               	movwf	___ftdiv@f1+1
  6868  07D4  082C               	movf	?___altoft+2,w
  6869  07D5  00CC               	movwf	___ftdiv@f1+2
  6870  07D6  3000               	movlw	0
  6871  07D7  00C7               	movwf	___ftdiv@f2
  6872  07D8  30F0               	movlw	240
  6873  07D9  00C8               	movwf	___ftdiv@f2+1
  6874  07DA  3040               	movlw	64
  6875  07DB  00C9               	movwf	___ftdiv@f2+2
  6876  07DC  3197  2757  3182   	fcall	___ftdiv
  6877  07DF  0020               	movlb	0	; select bank0
  6878  07E0  0847               	movf	?___ftdiv,w
  6879  07E1  0021               	movlb	1	; select bank1
  6880  07E2  00A0               	movwf	___fttol@f1^(0+128)
  6881  07E3  0020               	movlb	0	; select bank0
  6882  07E4  0848               	movf	?___ftdiv+1,w
  6883  07E5  0021               	movlb	1	; select bank1
  6884  07E6  00A1               	movwf	(___fttol@f1+1)^(0+128)
  6885  07E7  0020               	movlb	0	; select bank0
  6886  07E8  0849               	movf	?___ftdiv+2,w
  6887  07E9  0021               	movlb	1	; select bank1
  6888  07EA  00A2               	movwf	(___fttol@f1+2)^(0+128)
  6889  07EB  3196  2645  3182   	fcall	___fttol
  6890  07EE  0021               	movlb	1	; select bank1
  6891  07EF  0821               	movf	(?___fttol^(0+128)+1),w
  6892  07F0  0022               	movlb	2	; select bank2
  6893  07F1  00E8               	movwf	(_mod_delay_time+1)^(0+256)
  6894  07F2  0021               	movlb	1	; select bank1
  6895  07F3  0820               	movf	?___fttol^(0+128),w
  6896  07F4  0022               	movlb	2	; select bank2
  6897  07F5  00E7               	movwf	_mod_delay_time^(0+256)
  6898                           
  6899                           ;main.c: 407: delay_time_changed = 0;
  6900  07F6  01DD               	clrf	_delay_time_changed^(0+256)
  6901  07F7  01DE               	clrf	(_delay_time_changed+1)^(0+256)
  6902  07F8  2ABA               	goto	l6076
  6903  07F9                     __end_of_main:	
  6904                           
  6905                           	psect	text1
  6906  1245                     __ptext1:	
  6907 ;; *************** function _update_mode *****************
  6908 ;; Defined at:
  6909 ;;		line 82 in file "tactiles.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1    wreg      void 
  6916 ;; Registers used:
  6917 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6925 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6926 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6927 ;;Total ram usage:        1 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    2
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_main
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           
  6938                           ;psect for function _update_mode
  6939  1245                     _update_mode:	
  6940                           
  6941                           ;tactiles.c: 87: if (PORTCbits.RC0 == 0) {
  6942                           
  6943                           ;incstack = 0
  6944                           ; Regs used in _update_mode: [wreg-fsr0h+status,2+status,0]
  6945  1245  0020               	movlb	0	; select bank0
  6946  1246  180E               	btfsc	14,0	;volatile
  6947  1247  2A82               	goto	l5722
  6948                           
  6949                           ;tactiles.c: 88: debounce_mode2++;
  6950  1248  3001               	movlw	1
  6951  1249  0022               	movlb	2	; select bank2
  6952  124A  07B4               	addwf	_debounce_mode2^(0+256),f
  6953  124B  3000               	movlw	0
  6954  124C  3DB5               	addwfc	(_debounce_mode2+1)^(0+256),f
  6955                           
  6956                           ;tactiles.c: 89: if (debounce_mode2 > 25) {
  6957  124D  0835               	movf	(_debounce_mode2+1)^(0+256),w
  6958  124E  3A80               	xorlw	128
  6959  124F  0020               	movlb	0	; select bank0
  6960  1250  00A2               	movwf	??_update_mode
  6961  1251  3080               	movlw	128
  6962  1252  0222               	subwf	??_update_mode,w
  6963  1253  1D03               	skipz
  6964  1254  2A58               	goto	u6395
  6965  1255  301A               	movlw	26
  6966  1256  0022               	movlb	2	; select bank2
  6967  1257  0234               	subwf	_debounce_mode2^(0+256),w
  6968  1258                     u6395:	
  6969  1258  1C03               	skipc
  6970  1259  0008               	return
  6971                           
  6972                           ;tactiles.c: 90: debounce_mode2 = 25;
  6973  125A  3019               	movlw	25
  6974  125B  0022               	movlb	2	; select bank2
  6975  125C  00B4               	movwf	_debounce_mode2^(0+256)
  6976  125D  3000               	movlw	0
  6977  125E  00B5               	movwf	(_debounce_mode2^(0+256)+1)
  6978                           
  6979                           ;tactiles.c: 91: mode2_state++;
  6980  125F  3001               	movlw	1
  6981  1260  0020               	movlb	0	; select bank0
  6982  1261  00A2               	movwf	??_update_mode
  6983  1262  0822               	movf	??_update_mode,w
  6984  1263  0022               	movlb	2	; select bank2
  6985  1264  07D7               	addwf	_mode2_state^(0+256),f
  6986                           
  6987                           ;tactiles.c: 92: if (mode2_state > 2) {
  6988  1265  3003               	movlw	3
  6989  1266  0257               	subwf	_mode2_state^(0+256),w
  6990  1267  1C03               	skipc
  6991  1268  2A73               	goto	l5720
  6992                           
  6993                           ;tactiles.c: 93: mode2_state = 0;
  6994  1269  01D7               	clrf	_mode2_state^(0+256)
  6995                           
  6996                           ;tactiles.c: 94: }
  6997                           ;tactiles.c: 95: switch(mode2_state) {
  6998  126A  2A73               	goto	l5720
  6999  126B                     l851:	
  7000                           ;tactiles.c: 96: case 0:
  7001                           
  7002                           
  7003                           ;tactiles.c: 97: LATBbits.LATB1 = 0;
  7004  126B  108D               	bcf	13,1	;volatile
  7005  126C  2A71               	goto	L5
  7006  126D                     l853:	
  7007                           ;tactiles.c: 100: case 1:
  7008                           
  7009                           ;tactiles.c: 99: break;
  7010                           
  7011                           ;tactiles.c: 98: LATBbits.LATB0 = 0;
  7012                           
  7013                           
  7014                           ;tactiles.c: 101: LATBbits.LATB1 = 0;
  7015  126D  108D               	bcf	13,1	;volatile
  7016                           
  7017                           ;tactiles.c: 102: LATBbits.LATB0 = 1;
  7018  126E  140D               	bsf	13,0	;volatile
  7019                           
  7020                           ;tactiles.c: 103: break;
  7021  126F  2A7E               	goto	l855
  7022  1270                     l854:	
  7023                           ;tactiles.c: 104: case 2:
  7024                           
  7025                           
  7026                           ;tactiles.c: 105: LATBbits.LATB1 = 1;
  7027  1270  148D               	bsf	13,1	;volatile
  7028  1271                     L5:	
  7029                           
  7030                           ;tactiles.c: 106: LATBbits.LATB0 = 0;
  7031  1271  100D               	bcf	13,0	;volatile
  7032                           
  7033                           ;tactiles.c: 108: }
  7034                           
  7035                           ;tactiles.c: 107: break;
  7036  1272  2A7E               	goto	l855
  7037  1273                     l5720:	
  7038  1273  0857               	movf	_mode2_state^(0+256),w
  7039                           
  7040                           ; Switch size 1, requested type "space"
  7041                           ; Number of cases is 3, Range of values is 0 to 2
  7042                           ; switch strategies available:
  7043                           ; Name         Instructions Cycles
  7044                           ; simple_byte           10     6 (average)
  7045                           ; direct_byte           12     6 (fixed)
  7046                           ; jumptable            260     6 (fixed)
  7047                           ;	Chosen strategy is simple_byte
  7048  1274  3A00               	xorlw	0	; case 0
  7049  1275  1903               	skipnz
  7050  1276  2A6B               	goto	l851
  7051  1277  3A01               	xorlw	1	; case 1
  7052  1278  1903               	skipnz
  7053  1279  2A6D               	goto	l853
  7054  127A  3A03               	xorlw	3	; case 2
  7055  127B  1903               	skipnz
  7056  127C  2A70               	goto	l854
  7057  127D  2A7E               	goto	l855
  7058  127E                     l855:	
  7059                           ;tactiles.c: 109: while (PORTCbits.RC0 == 0) {
  7060                           
  7061  127E  0020               	movlb	0	; select bank0
  7062  127F  180E               	btfsc	14,0	;volatile
  7063  1280  0008               	return
  7064  1281  2A7E               	goto	l855
  7065  1282                     l5722:	
  7066                           ;tactiles.c: 110: }
  7067                           ;tactiles.c: 111: }
  7068                           ;tactiles.c: 112: } else {
  7069                           
  7070                           
  7071                           ;tactiles.c: 113: debounce_mode2 = 0;
  7072  1282  0022               	movlb	2	; select bank2
  7073  1283  01B4               	clrf	_debounce_mode2^(0+256)
  7074  1284  01B5               	clrf	(_debounce_mode2+1)^(0+256)
  7075  1285  0008               	return
  7076  1286                     __end_of_update_mode:	
  7077                           
  7078                           	psect	text2
  7079  0BAE                     __ptext2:	
  7080 ;; *************** function _updateSwitchTap *****************
  7081 ;; Defined at:
  7082 ;;		line 48 in file "SwitchTap.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;		None
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  tapCntDiviso    2   30[BANK0 ] int 
  7087 ;;  iCnt            1   32[BANK0 ] unsigned char 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      void 
  7090 ;; Registers used:
  7091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7098 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7099 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7100 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7101 ;;Total ram usage:        9 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    5
  7104 ;; This function calls:
  7105 ;;		___aldiv
  7106 ;;		_setDoublePressState
  7107 ;;		_setLongTapState
  7108 ;; This function is called by:
  7109 ;;		_main
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           
  7114                           ;psect for function _updateSwitchTap
  7115  0BAE                     _updateSwitchTap:	
  7116                           
  7117                           ;SwitchTap.c: 49: uint8_t iCnt = 0;
  7118                           
  7119                           ;incstack = 0
  7120                           ; Regs used in _updateSwitchTap: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7121  0BAE  0020               	movlb	0	; select bank0
  7122  0BAF  01C0               	clrf	updateSwitchTap@iCnt
  7123                           
  7124                           ;SwitchTap.c: 57: if (PORTEbits.RE0 == 0) {
  7125  0BB0  1810               	btfsc	16,0	;volatile
  7126  0BB1  2BB9               	goto	l5850
  7127                           
  7128                           ;SwitchTap.c: 58: if (switchTap_pressed > 0) {
  7129  0BB2  0021               	movlb	1	; select bank1
  7130  0BB3  086D               	movf	_switchTap_pressed^(0+128),w
  7131  0BB4  1903               	btfsc	3,2
  7132  0BB5  2BC4               	goto	l1178
  7133                           
  7134                           ;SwitchTap.c: 59: switchTap_pressed--;
  7135  0BB6  3001               	movlw	1
  7136  0BB7  02ED               	subwf	_switchTap_pressed^(0+128),f
  7137                           
  7138                           ;SwitchTap.c: 60: }
  7139                           ;SwitchTap.c: 61: } else if (switchTap_pressed < 25) {
  7140  0BB8  2BC4               	goto	l1178
  7141  0BB9                     l5850:	
  7142  0BB9  3019               	movlw	25
  7143  0BBA  0021               	movlb	1	; select bank1
  7144  0BBB  026D               	subwf	_switchTap_pressed^(0+128),w
  7145  0BBC  1803               	skipnc
  7146  0BBD  2BC4               	goto	l1178
  7147                           
  7148                           ;SwitchTap.c: 62: switchTap_pressed++;
  7149  0BBE  3001               	movlw	1
  7150  0BBF  0020               	movlb	0	; select bank0
  7151  0BC0  00B8               	movwf	??_updateSwitchTap
  7152  0BC1  0838               	movf	??_updateSwitchTap,w
  7153  0BC2  0021               	movlb	1	; select bank1
  7154  0BC3  07ED               	addwf	_switchTap_pressed^(0+128),f
  7155  0BC4                     l1178:	
  7156                           
  7157                           ;SwitchTap.c: 63: }
  7158                           ;SwitchTap.c: 69: if (switchTap_pressed == 0) {
  7159  0BC4  086D               	movf	_switchTap_pressed^(0+128),w
  7160  0BC5  1D03               	btfss	3,2
  7161  0BC6  2D70               	goto	l5934
  7162                           
  7163                           ;SwitchTap.c: 73: if (tap_timer >= 1563) {
  7164  0BC7  1BE3               	btfsc	(_tap_timer+3)^(0+128),7	;volatile
  7165  0BC8  2C48               	goto	l5894
  7166  0BC9  0863               	movf	(_tap_timer+3)^(0+128),w	;volatile
  7167  0BCA  1D03               	btfss	3,2
  7168  0BCB  2BD5               	goto	l5856
  7169  0BCC  0862               	movf	(_tap_timer+2)^(0+128),w	;volatile
  7170  0BCD  1D03               	btfss	3,2
  7171  0BCE  2BD5               	goto	l5856
  7172  0BCF  301B               	movlw	27
  7173  0BD0  0260               	subwf	_tap_timer^(0+128),w	;volatile
  7174  0BD1  3006               	movlw	6
  7175  0BD2  3B61               	subwfb	(_tap_timer+1)^(0+128),w	;volatile
  7176  0BD3  1C03               	btfss	3,0
  7177  0BD4  2C48               	goto	l5894
  7178  0BD5                     l5856:	
  7179                           
  7180                           ;SwitchTap.c: 76: if (switchTap_down != 1) {
  7181  0BD5  036C               	decf	_switchTap_down^(0+128),w
  7182  0BD6  1903               	btfsc	3,2
  7183  0BD7  2C10               	goto	l5874
  7184                           
  7185                           ;SwitchTap.c: 78: switchTap_down = 1;
  7186  0BD8  01EC               	clrf	_switchTap_down^(0+128)
  7187  0BD9  0AEC               	incf	_switchTap_down^(0+128),f
  7188                           
  7189                           ;SwitchTap.c: 79: tap_timer = 0;
  7190  0BDA  3000               	movlw	0
  7191  0BDB  00E3               	movwf	(_tap_timer+3)^(0+128)	;volatile
  7192  0BDC  3000               	movlw	0
  7193  0BDD  00E2               	movwf	(_tap_timer+2)^(0+128)	;volatile
  7194  0BDE  3000               	movlw	0
  7195  0BDF  00E1               	movwf	(_tap_timer+1)^(0+128)	;volatile
  7196  0BE0  3000               	movlw	0
  7197  0BE1  00E0               	movwf	_tap_timer^(0+128)	;volatile
  7198                           
  7199                           ;SwitchTap.c: 80: tap_iteration = 1;
  7200  0BE2  3001               	movlw	1
  7201  0BE3  0022               	movlb	2	; select bank2
  7202  0BE4  00EB               	movwf	_tap_iteration^(0+256)
  7203  0BE5  3000               	movlw	0
  7204  0BE6  00EC               	movwf	(_tap_iteration^(0+256)+1)
  7205                           
  7206                           ;SwitchTap.c: 81: tap_total = 0;
  7207  0BE7  3000               	movlw	0
  7208  0BE8  00AB               	movwf	(_tap_total+3)^(0+256)
  7209  0BE9  3000               	movlw	0
  7210  0BEA  00AA               	movwf	(_tap_total+2)^(0+256)
  7211  0BEB  3000               	movlw	0
  7212  0BEC  00A9               	movwf	(_tap_total+1)^(0+256)
  7213  0BED  3000               	movlw	0
  7214  0BEE  00A8               	movwf	_tap_total^(0+256)
  7215                           
  7216                           ;SwitchTap.c: 82: delay_time_changed = 0;
  7217  0BEF  01DD               	clrf	_delay_time_changed^(0+256)
  7218  0BF0  01DE               	clrf	(_delay_time_changed+1)^(0+256)
  7219                           
  7220                           ;SwitchTap.c: 83: LATDbits.LATD0 = 0;
  7221  0BF1  100F               	bcf	15,0	;volatile
  7222                           
  7223                           ;SwitchTap.c: 85: for (iCnt = 1; iCnt <= num_taps; iCnt++) {
  7224  0BF2  0020               	movlb	0	; select bank0
  7225  0BF3  01C0               	clrf	updateSwitchTap@iCnt
  7226  0BF4  0AC0               	incf	updateSwitchTap@iCnt,f
  7227  0BF5                     l5872:	
  7228  0BF5  0840               	movf	updateSwitchTap@iCnt,w
  7229  0BF6  027D               	subwf	_num_taps,w
  7230  0BF7  1C03               	btfss	3,0
  7231  0BF8  2C10               	goto	l5874
  7232                           
  7233                           ;SwitchTap.c: 86: tap_history[iCnt] = 0;
  7234  0BF9  0840               	movf	updateSwitchTap@iCnt,w
  7235  0BFA  00B8               	movwf	??_updateSwitchTap
  7236  0BFB  3001               	movlw	1
  7237  0BFC                     u6695:	
  7238  0BFC  35B8               	lslf	??_updateSwitchTap,f
  7239  0BFD  3EFF               	addlw	-1
  7240  0BFE  1D03               	skipz
  7241  0BFF  2BFC               	goto	u6695
  7242  0C00  3538               	lslf	??_updateSwitchTap,w
  7243  0C01  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7244  0C02  0086               	movwf	6
  7245  0C03  3001               	movlw	1	; select bank3/4
  7246  0C04  0087               	movwf	7
  7247  0C05  3000               	movlw	0
  7248  0C06  3FC0               	movwi [0]fsr1
  7249  0C07  3000               	movlw	0
  7250  0C08  3FC1               	movwi [1]fsr1
  7251  0C09  3FC2               	movwi [2]fsr1
  7252  0C0A  3FC3               	movwi [3]fsr1
  7253  0C0B  3001               	movlw	1
  7254  0C0C  00B8               	movwf	??_updateSwitchTap
  7255  0C0D  0838               	movf	??_updateSwitchTap,w
  7256  0C0E  07C0               	addwf	updateSwitchTap@iCnt,f
  7257  0C0F  2BF5               	goto	l5872
  7258  0C10                     l5874:	
  7259                           
  7260                           ;SwitchTap.c: 87: }
  7261                           ;SwitchTap.c: 88: }
  7262                           ;SwitchTap.c: 91: if (longTap_start == 0) {
  7263  0C10  0022               	movlb	2	; select bank2
  7264  0C11  0855               	movf	_longTap_start^(0+256),w
  7265  0C12  1D03               	btfss	3,2
  7266  0C13  2C1B               	goto	l5880
  7267                           
  7268                           ;SwitchTap.c: 92: longTap_start = 1;
  7269  0C14  01D5               	clrf	_longTap_start^(0+256)
  7270  0C15  0AD5               	incf	_longTap_start^(0+256),f
  7271                           
  7272                           ;SwitchTap.c: 93: longTap_state = 0;
  7273  0C16  0020               	movlb	0	; select bank0
  7274  0C17  01EA               	clrf	_longTap_state	;volatile
  7275                           
  7276                           ;SwitchTap.c: 94: longTap_timer = 0;
  7277  0C18  0022               	movlb	2	; select bank2
  7278  0C19  01C6               	clrf	_longTap_timer^(0+256)	;volatile
  7279  0C1A  01C7               	clrf	(_longTap_timer+1)^(0+256)	;volatile
  7280  0C1B                     l5880:	
  7281                           
  7282                           ;SwitchTap.c: 95: }
  7283                           ;SwitchTap.c: 99: if (longTap_timer >= long_press_limit && longTap_state == 0) {
  7284  0C1B  0021               	movlb	1	; select bank1
  7285  0C1C  0856               	movf	(_long_press_limit+1)^(0+128),w
  7286  0C1D  0022               	movlb	2	; select bank2
  7287  0C1E  0247               	subwf	(_longTap_timer+1)^(0+256),w	;volatile
  7288  0C1F  1D03               	skipz
  7289  0C20  2C25               	goto	u6725
  7290  0C21  0021               	movlb	1	; select bank1
  7291  0C22  0855               	movf	_long_press_limit^(0+128),w
  7292  0C23  0022               	movlb	2	; select bank2
  7293  0C24  0246               	subwf	_longTap_timer^(0+256),w	;volatile
  7294  0C25                     u6725:	
  7295  0C25  1C03               	skipc
  7296  0C26  0008               	return
  7297  0C27  0020               	movlb	0	; select bank0
  7298  0C28  086A               	movf	_longTap_state,w	;volatile
  7299  0C29  1D03               	btfss	3,2
  7300  0C2A  0008               	return
  7301                           
  7302                           ;SwitchTap.c: 101: longTap_timer = long_press_limit;
  7303  0C2B  0021               	movlb	1	; select bank1
  7304  0C2C  0856               	movf	(_long_press_limit+1)^(0+128),w
  7305  0C2D  0022               	movlb	2	; select bank2
  7306  0C2E  00C7               	movwf	(_longTap_timer+1)^(0+256)	;volatile
  7307  0C2F  0021               	movlb	1	; select bank1
  7308  0C30  0855               	movf	_long_press_limit^(0+128),w
  7309  0C31  0022               	movlb	2	; select bank2
  7310  0C32  00C6               	movwf	_longTap_timer^(0+256)	;volatile
  7311                           
  7312                           ;SwitchTap.c: 102: LATBbits.LATB4 = 0;
  7313  0C33  120D               	bcf	13,4	;volatile
  7314                           
  7315                           ;SwitchTap.c: 104: if (feedback_start != 1) {
  7316  0C34  0021               	movlb	1	; select bank1
  7317  0C35  036A               	decf	_feedback_start^(0+128),w
  7318  0C36  1903               	btfsc	3,2
  7319  0C37  2C40               	goto	l5892
  7320                           
  7321                           ;SwitchTap.c: 105: setLongTapState(1);
  7322  0C38  3001               	movlw	1
  7323  0C39  0020               	movlb	0	; select bank0
  7324  0C3A  00A2               	movwf	setLongTapState@f_state
  7325  0C3B  3000               	movlw	0
  7326  0C3C  00A3               	movwf	setLongTapState@f_state+1
  7327  0C3D  319E  2662         	fcall	_setLongTapState
  7328                           
  7329                           ;SwitchTap.c: 106: } else {
  7330  0C3F  0008               	return
  7331  0C40                     l5892:	
  7332                           
  7333                           ;SwitchTap.c: 107: setDoublePressState(1);
  7334  0C40  3001               	movlw	1
  7335  0C41  0020               	movlb	0	; select bank0
  7336  0C42  00B4               	movwf	setDoublePressState@f_state
  7337  0C43  3000               	movlw	0
  7338  0C44  00B5               	movwf	setDoublePressState@f_state+1
  7339  0C45  319F  2741         	fcall	_setDoublePressState
  7340                           
  7341                           ;SwitchTap.c: 108: }
  7342                           ;SwitchTap.c: 109: }
  7343                           ;SwitchTap.c: 111: } else if (tap_timer < 1563 && longTap_state == 0 && switchTap_down !
      +                          = 1) {
  7344  0C47  0008               	return
  7345  0C48                     l5894:	
  7346  0C48  0021               	movlb	1	; select bank1
  7347  0C49  1BE3               	btfsc	(_tap_timer+3)^(0+128),7	;volatile
  7348  0C4A  2C57               	goto	l5896
  7349  0C4B  0863               	movf	(_tap_timer+3)^(0+128),w	;volatile
  7350  0C4C  1D03               	btfss	3,2
  7351  0C4D  0008               	return
  7352  0C4E  0862               	movf	(_tap_timer+2)^(0+128),w	;volatile
  7353  0C4F  1D03               	btfss	3,2
  7354  0C50  0008               	return
  7355  0C51  301B               	movlw	27
  7356  0C52  0260               	subwf	_tap_timer^(0+128),w	;volatile
  7357  0C53  3006               	movlw	6
  7358  0C54  3B61               	subwfb	(_tap_timer+1)^(0+128),w	;volatile
  7359  0C55  1803               	btfsc	3,0
  7360  0C56  0008               	return
  7361  0C57                     l5896:	
  7362  0C57  0020               	movlb	0	; select bank0
  7363  0C58  086A               	movf	_longTap_state,w	;volatile
  7364  0C59  1D03               	btfss	3,2
  7365  0C5A  0008               	return
  7366  0C5B  0021               	movlb	1	; select bank1
  7367  0C5C  036C               	decf	_switchTap_down^(0+128),w
  7368  0C5D  1903               	btfsc	3,2
  7369  0C5E  0008               	return
  7370                           
  7371                           ;SwitchTap.c: 113: switchTap_down = 1;
  7372  0C5F  01EC               	clrf	_switchTap_down^(0+128)
  7373  0C60  0AEC               	incf	_switchTap_down^(0+128),f
  7374                           
  7375                           ;SwitchTap.c: 114: if (tap_timer >= 1172) {
  7376  0C61  1BE3               	btfsc	(_tap_timer+3)^(0+128),7	;volatile
  7377  0C62  2C77               	goto	l1192
  7378  0C63  0863               	movf	(_tap_timer+3)^(0+128),w	;volatile
  7379  0C64  1D03               	btfss	3,2
  7380  0C65  2C6F               	goto	l5904
  7381  0C66  0862               	movf	(_tap_timer+2)^(0+128),w	;volatile
  7382  0C67  1D03               	btfss	3,2
  7383  0C68  2C6F               	goto	l5904
  7384  0C69  3094               	movlw	148
  7385  0C6A  0260               	subwf	_tap_timer^(0+128),w	;volatile
  7386  0C6B  3004               	movlw	4
  7387  0C6C  3B61               	subwfb	(_tap_timer+1)^(0+128),w	;volatile
  7388  0C6D  1C03               	btfss	3,0
  7389  0C6E  2C77               	goto	l1192
  7390  0C6F                     l5904:	
  7391                           
  7392                           ;SwitchTap.c: 115: tap_timer = 1172;
  7393  0C6F  3000               	movlw	0
  7394  0C70  00E3               	movwf	(_tap_timer+3)^(0+128)	;volatile
  7395  0C71  3000               	movlw	0
  7396  0C72  00E2               	movwf	(_tap_timer+2)^(0+128)	;volatile
  7397  0C73  3004               	movlw	4
  7398  0C74  00E1               	movwf	(_tap_timer+1)^(0+128)	;volatile
  7399  0C75  3094               	movlw	148
  7400  0C76  00E0               	movwf	_tap_timer^(0+128)	;volatile
  7401  0C77                     l1192:	
  7402                           
  7403                           ;SwitchTap.c: 116: }
  7404                           ;SwitchTap.c: 118: int tapCntDivisor = num_taps;
  7405  0C77  087D               	movf	_num_taps,w
  7406  0C78  0020               	movlb	0	; select bank0
  7407  0C79  00B8               	movwf	??_updateSwitchTap
  7408  0C7A  01B9               	clrf	??_updateSwitchTap+1
  7409  0C7B  0838               	movf	??_updateSwitchTap,w
  7410  0C7C  00BE               	movwf	updateSwitchTap@tapCntDivisor
  7411  0C7D  0839               	movf	??_updateSwitchTap+1,w
  7412  0C7E  00BF               	movwf	updateSwitchTap@tapCntDivisor+1
  7413                           
  7414                           ;SwitchTap.c: 119: if (tap_iteration <= num_taps) {
  7415  0C7F  0022               	movlb	2	; select bank2
  7416  0C80  086C               	movf	(_tap_iteration+1)^(0+256),w
  7417  0C81  3A80               	xorlw	128
  7418  0C82  3C80               	sublw	128
  7419  0C83  1D03               	skipz
  7420  0C84  2C87               	goto	u6795
  7421  0C85  086B               	movf	_tap_iteration^(0+256),w
  7422  0C86  027D               	subwf	_num_taps,w
  7423  0C87                     u6795:	
  7424  0C87  1C03               	skipc
  7425  0C88  2CB8               	goto	l5912
  7426                           
  7427                           ;SwitchTap.c: 120: tap_total += tap_timer;
  7428  0C89  0021               	movlb	1	; select bank1
  7429  0C8A  0860               	movf	_tap_timer^(0+128),w	;volatile
  7430  0C8B  0022               	movlb	2	; select bank2
  7431  0C8C  07A8               	addwf	_tap_total^(0+256),f
  7432  0C8D  0021               	movlb	1	; select bank1
  7433  0C8E  0861               	movf	(_tap_timer+1)^(0+128),w	;volatile
  7434  0C8F  0022               	movlb	2	; select bank2
  7435  0C90  3DA9               	addwfc	(_tap_total+1)^(0+256),f
  7436  0C91  0021               	movlb	1	; select bank1
  7437  0C92  0862               	movf	(_tap_timer+2)^(0+128),w	;volatile
  7438  0C93  0022               	movlb	2	; select bank2
  7439  0C94  3DAA               	addwfc	(_tap_total+2)^(0+256),f
  7440  0C95  0021               	movlb	1	; select bank1
  7441  0C96  0863               	movf	(_tap_timer+3)^(0+128),w	;volatile
  7442  0C97  0022               	movlb	2	; select bank2
  7443  0C98  3DAB               	addwfc	(_tap_total+3)^(0+256),f
  7444                           
  7445                           ;SwitchTap.c: 121: tap_history[tap_iteration] = tap_timer;
  7446  0C99  086B               	movf	_tap_iteration^(0+256),w
  7447  0C9A  0020               	movlb	0	; select bank0
  7448  0C9B  00B8               	movwf	??_updateSwitchTap
  7449  0C9C  3001               	movlw	1
  7450  0C9D                     u6805:	
  7451  0C9D  35B8               	lslf	??_updateSwitchTap,f
  7452  0C9E  3EFF               	addlw	-1
  7453  0C9F  1D03               	skipz
  7454  0CA0  2C9D               	goto	u6805
  7455  0CA1  3538               	lslf	??_updateSwitchTap,w
  7456  0CA2  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7457  0CA3  0086               	movwf	6
  7458  0CA4  3001               	movlw	1	; select bank3/4
  7459  0CA5  0087               	movwf	7
  7460  0CA6  0021               	movlb	1	; select bank1
  7461  0CA7  0860               	movf	_tap_timer^(0+128),w	;volatile
  7462  0CA8  3FC0               	movwi [0]fsr1
  7463  0CA9  0861               	movf	(_tap_timer+1)^(0+128),w	;volatile
  7464  0CAA  3FC1               	movwi [1]fsr1
  7465  0CAB  0862               	movf	(_tap_timer+2)^(0+128),w	;volatile
  7466  0CAC  3FC2               	movwi [2]fsr1
  7467  0CAD  0863               	movf	(_tap_timer+3)^(0+128),w	;volatile
  7468  0CAE  3FC3               	movwi [3]fsr1
  7469                           
  7470                           ;SwitchTap.c: 122: tapCntDivisor = tap_iteration;
  7471  0CAF  0022               	movlb	2	; select bank2
  7472  0CB0  086C               	movf	(_tap_iteration+1)^(0+256),w
  7473  0CB1  0020               	movlb	0	; select bank0
  7474  0CB2  00BF               	movwf	updateSwitchTap@tapCntDivisor+1
  7475  0CB3  0022               	movlb	2	; select bank2
  7476  0CB4  086B               	movf	_tap_iteration^(0+256),w
  7477  0CB5  0020               	movlb	0	; select bank0
  7478  0CB6  00BE               	movwf	updateSwitchTap@tapCntDivisor
  7479                           
  7480                           ;SwitchTap.c: 123: } else {
  7481  0CB7  2D30               	goto	l5926
  7482  0CB8                     l5912:	
  7483                           
  7484                           ;SwitchTap.c: 124: tap_total = 0;
  7485  0CB8  3000               	movlw	0
  7486  0CB9  0022               	movlb	2	; select bank2
  7487  0CBA  00AB               	movwf	(_tap_total+3)^(0+256)
  7488  0CBB  3000               	movlw	0
  7489  0CBC  00AA               	movwf	(_tap_total+2)^(0+256)
  7490  0CBD  3000               	movlw	0
  7491  0CBE  00A9               	movwf	(_tap_total+1)^(0+256)
  7492  0CBF  3000               	movlw	0
  7493  0CC0  00A8               	movwf	_tap_total^(0+256)
  7494                           
  7495                           ;SwitchTap.c: 125: for (iCnt = 1; iCnt < num_taps; iCnt++) {
  7496  0CC1  0020               	movlb	0	; select bank0
  7497  0CC2  01C0               	clrf	updateSwitchTap@iCnt
  7498  0CC3  0AC0               	incf	updateSwitchTap@iCnt,f
  7499  0CC4                     l5920:	
  7500  0CC4  087D               	movf	_num_taps,w
  7501  0CC5  0240               	subwf	updateSwitchTap@iCnt,w
  7502  0CC6  1803               	btfsc	3,0
  7503  0CC7  2D0C               	goto	l5922
  7504                           
  7505                           ;SwitchTap.c: 126: tap_history[iCnt] = tap_history[iCnt + 1];
  7506  0CC8  0840               	movf	updateSwitchTap@iCnt,w
  7507  0CC9  00B8               	movwf	??_updateSwitchTap
  7508  0CCA  3001               	movlw	1
  7509  0CCB                     u6815:	
  7510  0CCB  35B8               	lslf	??_updateSwitchTap,f
  7511  0CCC  3EFF               	addlw	-1
  7512  0CCD  1D03               	skipz
  7513  0CCE  2CCB               	goto	u6815
  7514  0CCF  3538               	lslf	??_updateSwitchTap,w
  7515  0CD0  3E04               	addlw	4
  7516  0CD1  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7517  0CD2  0086               	movwf	6
  7518  0CD3  3001               	movlw	1	; select bank3/4
  7519  0CD4  0087               	movwf	7
  7520  0CD5  3F40               	moviw [0]fsr1
  7521  0CD6  00B9               	movwf	??_updateSwitchTap+1
  7522  0CD7  3F41               	moviw [1]fsr1
  7523  0CD8  00BA               	movwf	??_updateSwitchTap+2
  7524  0CD9  3F42               	moviw [2]fsr1
  7525  0CDA  00BB               	movwf	??_updateSwitchTap+3
  7526  0CDB  3F43               	moviw [3]fsr1
  7527  0CDC  00BC               	movwf	??_updateSwitchTap+4
  7528  0CDD  0840               	movf	updateSwitchTap@iCnt,w
  7529  0CDE  00BD               	movwf	??_updateSwitchTap+5
  7530  0CDF  3001               	movlw	1
  7531  0CE0                     u6825:	
  7532  0CE0  35BD               	lslf	??_updateSwitchTap+5,f
  7533  0CE1  3EFF               	addlw	-1
  7534  0CE2  1D03               	skipz
  7535  0CE3  2CE0               	goto	u6825
  7536  0CE4  353D               	lslf	??_updateSwitchTap+5,w
  7537  0CE5  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7538  0CE6  0086               	movwf	6
  7539  0CE7  3001               	movlw	1	; select bank3/4
  7540  0CE8  0087               	movwf	7
  7541  0CE9  0839               	movf	??_updateSwitchTap+1,w
  7542  0CEA  3FC0               	movwi [0]fsr1
  7543  0CEB  083A               	movf	??_updateSwitchTap+2,w
  7544  0CEC  3FC1               	movwi [1]fsr1
  7545  0CED  083B               	movf	??_updateSwitchTap+3,w
  7546  0CEE  3FC2               	movwi [2]fsr1
  7547  0CEF  083C               	movf	??_updateSwitchTap+4,w
  7548  0CF0  3FC3               	movwi [3]fsr1
  7549                           
  7550                           ;SwitchTap.c: 127: tap_total += tap_history[iCnt];
  7551  0CF1  0840               	movf	updateSwitchTap@iCnt,w
  7552  0CF2  00B8               	movwf	??_updateSwitchTap
  7553  0CF3  3001               	movlw	1
  7554  0CF4                     u6835:	
  7555  0CF4  35B8               	lslf	??_updateSwitchTap,f
  7556  0CF5  3EFF               	addlw	-1
  7557  0CF6  1D03               	skipz
  7558  0CF7  2CF4               	goto	u6835
  7559  0CF8  3538               	lslf	??_updateSwitchTap,w
  7560  0CF9  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7561  0CFA  0086               	movwf	6
  7562  0CFB  3001               	movlw	1	; select bank3/4
  7563  0CFC  0087               	movwf	7
  7564  0CFD  3F40               	moviw [0]fsr1
  7565  0CFE  0022               	movlb	2	; select bank2
  7566  0CFF  07A8               	addwf	_tap_total^(0+256),f
  7567  0D00  3F41               	moviw [1]fsr1
  7568  0D01  3DA9               	addwfc	(_tap_total+1)^(0+256),f
  7569  0D02  3F42               	moviw [2]fsr1
  7570  0D03  3DAA               	addwfc	(_tap_total+2)^(0+256),f
  7571  0D04  3F43               	moviw [3]fsr1
  7572  0D05  3DAB               	addwfc	(_tap_total+3)^(0+256),f
  7573  0D06  3001               	movlw	1
  7574  0D07  0020               	movlb	0	; select bank0
  7575  0D08  00B8               	movwf	??_updateSwitchTap
  7576  0D09  0838               	movf	??_updateSwitchTap,w
  7577  0D0A  07C0               	addwf	updateSwitchTap@iCnt,f
  7578  0D0B  2CC4               	goto	l5920
  7579  0D0C                     l5922:	
  7580                           
  7581                           ;SwitchTap.c: 128: }
  7582                           ;SwitchTap.c: 129: tap_history[num_taps] = tap_timer;
  7583  0D0C  087D               	movf	_num_taps,w
  7584  0D0D  00B8               	movwf	??_updateSwitchTap
  7585  0D0E  3001               	movlw	1
  7586  0D0F                     u6855:	
  7587  0D0F  35B8               	lslf	??_updateSwitchTap,f
  7588  0D10  3EFF               	addlw	-1
  7589  0D11  1D03               	skipz
  7590  0D12  2D0F               	goto	u6855
  7591  0D13  3538               	lslf	??_updateSwitchTap,w
  7592  0D14  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7593  0D15  0086               	movwf	6
  7594  0D16  3001               	movlw	1	; select bank3/4
  7595  0D17  0087               	movwf	7
  7596  0D18  0021               	movlb	1	; select bank1
  7597  0D19  0860               	movf	_tap_timer^(0+128),w	;volatile
  7598  0D1A  3FC0               	movwi [0]fsr1
  7599  0D1B  0861               	movf	(_tap_timer+1)^(0+128),w	;volatile
  7600  0D1C  3FC1               	movwi [1]fsr1
  7601  0D1D  0862               	movf	(_tap_timer+2)^(0+128),w	;volatile
  7602  0D1E  3FC2               	movwi [2]fsr1
  7603  0D1F  0863               	movf	(_tap_timer+3)^(0+128),w	;volatile
  7604  0D20  3FC3               	movwi [3]fsr1
  7605                           
  7606                           ;SwitchTap.c: 130: tap_total += tap_timer;
  7607  0D21  0860               	movf	_tap_timer^(0+128),w	;volatile
  7608  0D22  0022               	movlb	2	; select bank2
  7609  0D23  07A8               	addwf	_tap_total^(0+256),f
  7610  0D24  0021               	movlb	1	; select bank1
  7611  0D25  0861               	movf	(_tap_timer+1)^(0+128),w	;volatile
  7612  0D26  0022               	movlb	2	; select bank2
  7613  0D27  3DA9               	addwfc	(_tap_total+1)^(0+256),f
  7614  0D28  0021               	movlb	1	; select bank1
  7615  0D29  0862               	movf	(_tap_timer+2)^(0+128),w	;volatile
  7616  0D2A  0022               	movlb	2	; select bank2
  7617  0D2B  3DAA               	addwfc	(_tap_total+2)^(0+256),f
  7618  0D2C  0021               	movlb	1	; select bank1
  7619  0D2D  0863               	movf	(_tap_timer+3)^(0+128),w	;volatile
  7620  0D2E  0022               	movlb	2	; select bank2
  7621  0D2F  3DAB               	addwfc	(_tap_total+3)^(0+256),f
  7622  0D30                     l5926:	
  7623                           
  7624                           ;SwitchTap.c: 131: }
  7625                           ;SwitchTap.c: 133: baseline_delay_time = tap_total / tapCntDivisor;
  7626  0D30  0020               	movlb	0	; select bank0
  7627  0D31  083E               	movf	updateSwitchTap@tapCntDivisor,w
  7628  0D32  00A8               	movwf	___aldiv@divisor
  7629  0D33  083F               	movf	updateSwitchTap@tapCntDivisor+1,w
  7630  0D34  00A9               	movwf	___aldiv@divisor+1
  7631  0D35  0D89               	rlf	9,f
  7632  0D36  3B89               	subwfb	9,f
  7633  0D37  0989               	comf	9,f
  7634  0D38  00AA               	movwf	___aldiv@divisor+2
  7635  0D39  00AB               	movwf	___aldiv@divisor+3
  7636  0D3A  0022               	movlb	2	; select bank2
  7637  0D3B  082B               	movf	(_tap_total+3)^(0+256),w
  7638  0D3C  0020               	movlb	0	; select bank0
  7639  0D3D  00AF               	movwf	___aldiv@dividend+3
  7640  0D3E  0022               	movlb	2	; select bank2
  7641  0D3F  082A               	movf	(_tap_total+2)^(0+256),w
  7642  0D40  0020               	movlb	0	; select bank0
  7643  0D41  00AE               	movwf	___aldiv@dividend+2
  7644  0D42  0022               	movlb	2	; select bank2
  7645  0D43  0829               	movf	(_tap_total+1)^(0+256),w
  7646  0D44  0020               	movlb	0	; select bank0
  7647  0D45  00AD               	movwf	___aldiv@dividend+1
  7648  0D46  0022               	movlb	2	; select bank2
  7649  0D47  0828               	movf	_tap_total^(0+256),w
  7650  0D48  0020               	movlb	0	; select bank0
  7651  0D49  00AC               	movwf	___aldiv@dividend
  7652  0D4A  3195  25C3         	fcall	___aldiv
  7653  0D4C  0020               	movlb	0	; select bank0
  7654  0D4D  082B               	movf	?___aldiv+3,w
  7655  0D4E  0021               	movlb	1	; select bank1
  7656  0D4F  00CC               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  7657  0D50  0020               	movlb	0	; select bank0
  7658  0D51  082A               	movf	?___aldiv+2,w
  7659  0D52  0021               	movlb	1	; select bank1
  7660  0D53  00CB               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  7661  0D54  0020               	movlb	0	; select bank0
  7662  0D55  0829               	movf	?___aldiv+1,w
  7663  0D56  0021               	movlb	1	; select bank1
  7664  0D57  00CA               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  7665  0D58  0020               	movlb	0	; select bank0
  7666  0D59  0828               	movf	?___aldiv,w
  7667  0D5A  0021               	movlb	1	; select bank1
  7668  0D5B  00C9               	movwf	_baseline_delay_time^(0+128)	;volatile
  7669                           
  7670                           ;SwitchTap.c: 134: delay_time_changed = 1;
  7671  0D5C  3001               	movlw	1
  7672  0D5D  0022               	movlb	2	; select bank2
  7673  0D5E  00DD               	movwf	_delay_time_changed^(0+256)
  7674  0D5F  3000               	movlw	0
  7675  0D60  00DE               	movwf	(_delay_time_changed^(0+256)+1)
  7676                           
  7677                           ;SwitchTap.c: 135: tap_timer = 0;
  7678  0D61  3000               	movlw	0
  7679  0D62  0021               	movlb	1	; select bank1
  7680  0D63  00E3               	movwf	(_tap_timer+3)^(0+128)	;volatile
  7681  0D64  3000               	movlw	0
  7682  0D65  00E2               	movwf	(_tap_timer+2)^(0+128)	;volatile
  7683  0D66  3000               	movlw	0
  7684  0D67  00E1               	movwf	(_tap_timer+1)^(0+128)	;volatile
  7685  0D68  3000               	movlw	0
  7686  0D69  00E0               	movwf	_tap_timer^(0+128)	;volatile
  7687                           
  7688                           ;SwitchTap.c: 137: tap_iteration++;
  7689  0D6A  3001               	movlw	1
  7690  0D6B  0022               	movlb	2	; select bank2
  7691  0D6C  07EB               	addwf	_tap_iteration^(0+256),f
  7692  0D6D  3000               	movlw	0
  7693  0D6E  3DEC               	addwfc	(_tap_iteration+1)^(0+256),f
  7694                           
  7695                           ;SwitchTap.c: 138: }
  7696                           ;SwitchTap.c: 140: } else if (switchTap_pressed >= 25) {
  7697  0D6F  0008               	return
  7698  0D70                     l5934:	
  7699  0D70  3019               	movlw	25
  7700  0D71  0021               	movlb	1	; select bank1
  7701  0D72  026D               	subwf	_switchTap_pressed^(0+128),w
  7702  0D73  1C03               	skipc
  7703  0D74  0008               	return
  7704                           
  7705                           ;SwitchTap.c: 141: switchTap_down = 0;
  7706  0D75  01EC               	clrf	_switchTap_down^(0+128)
  7707                           
  7708                           ;SwitchTap.c: 142: switchTap_state = 0;
  7709  0D76  01DB               	clrf	_switchTap_state^(0+128)
  7710                           
  7711                           ;SwitchTap.c: 148: setLongTapState(0);
  7712  0D77  3000               	movlw	0
  7713  0D78  0020               	movlb	0	; select bank0
  7714  0D79  00A2               	movwf	setLongTapState@f_state
  7715  0D7A  00A3               	movwf	setLongTapState@f_state+1
  7716  0D7B  319E  2662         	fcall	_setLongTapState
  7717                           
  7718                           ;SwitchTap.c: 150: longTap_timer = 0;
  7719  0D7D  0022               	movlb	2	; select bank2
  7720  0D7E  01C6               	clrf	_longTap_timer^(0+256)	;volatile
  7721  0D7F  01C7               	clrf	(_longTap_timer+1)^(0+256)	;volatile
  7722                           
  7723                           ;SwitchTap.c: 151: longTap_start = 0;
  7724  0D80  01D5               	clrf	_longTap_start^(0+256)
  7725                           
  7726                           ;SwitchTap.c: 153: switchTap_pressed = 25;
  7727  0D81  3019               	movlw	25
  7728  0D82  0020               	movlb	0	; select bank0
  7729  0D83  00B8               	movwf	??_updateSwitchTap
  7730  0D84  0838               	movf	??_updateSwitchTap,w
  7731  0D85  0021               	movlb	1	; select bank1
  7732  0D86  00ED               	movwf	_switchTap_pressed^(0+128)
  7733  0D87  0008               	return
  7734  0D88                     __end_of_updateSwitchTap:	
  7735                           
  7736                           	psect	text3
  7737  1E62                     __ptext3:	
  7738 ;; *************** function _setLongTapState *****************
  7739 ;; Defined at:
  7740 ;;		line 168 in file "SwitchTap.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  f_state         2    2[BANK0 ] int 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;		None
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  1    wreg      void 
  7747 ;; Registers used:
  7748 ;;		wreg, status,0
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7756 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7757 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7758 ;;Total ram usage:        4 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    2
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_updateSwitchTap
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           
  7769                           ;psect for function _setLongTapState
  7770  1E62                     _setLongTapState:	
  7771                           
  7772                           ;SwitchTap.c: 169: if (longTap_state == f_state) {return;}
  7773                           
  7774                           ;incstack = 0
  7775                           ; Regs used in _setLongTapState: [wreg+status,0]
  7776  1E62  0020               	movlb	0	; select bank0
  7777  1E63  086A               	movf	_longTap_state,w	;volatile
  7778  1E64  00A4               	movwf	??_setLongTapState
  7779  1E65  01A5               	clrf	??_setLongTapState+1
  7780  1E66  0823               	movf	setLongTapState@f_state+1,w
  7781  1E67  0625               	xorwf	??_setLongTapState+1,w
  7782  1E68  1D03               	skipz
  7783  1E69  2E6C               	goto	u5515
  7784  1E6A  0822               	movf	setLongTapState@f_state,w
  7785  1E6B  0624               	xorwf	??_setLongTapState,w
  7786  1E6C                     u5515:	
  7787  1E6C  1903               	btfsc	3,2
  7788  1E6D  0008               	return
  7789                           
  7790                           ;SwitchTap.c: 170: longTap_state = f_state;
  7791  1E6E  0822               	movf	setLongTapState@f_state,w
  7792  1E6F  00A4               	movwf	??_setLongTapState
  7793  1E70  0824               	movf	??_setLongTapState,w
  7794  1E71  00EA               	movwf	_longTap_state	;volatile
  7795                           
  7796                           ;SwitchTap.c: 171: LATBbits.LATB5 = f_state;
  7797  1E72  0C22               	rrf	setLongTapState@f_state,w
  7798  1E73  0022               	movlb	2	; select bank2
  7799  1E74  1C03               	skipc
  7800  1E75  128D               	bcf	13,5	;volatile
  7801  1E76  1803               	skipnc
  7802  1E77  168D               	bsf	13,5	;volatile
  7803  1E78  0008               	return
  7804  1E79                     __end_of_setLongTapState:	
  7805                           
  7806                           	psect	text4
  7807  09D4                     __ptext4:	
  7808 ;; *************** function _updateSwitchBypass *****************
  7809 ;; Defined at:
  7810 ;;		line 34 in file "SwitchBypass.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      void 
  7817 ;; Registers used:
  7818 ;;		wreg, status,2, status,0, pclath, cstack
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7826 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7827 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7828 ;;Total ram usage:        2 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    5
  7831 ;; This function calls:
  7832 ;;		_setDoublePressState
  7833 ;;		_setFeedbackState
  7834 ;;		_setSwitchBypassState
  7835 ;; This function is called by:
  7836 ;;		_main
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           
  7841                           ;psect for function _updateSwitchBypass
  7842  09D4                     _updateSwitchBypass:	
  7843                           
  7844                           ;SwitchBypass.c: 41: if (PORTEbits.RE1 == 0) {
  7845                           
  7846                           ;incstack = 0
  7847                           ; Regs used in _updateSwitchBypass: [wreg+status,2+status,0+pclath+cstack]
  7848  09D4  0020               	movlb	0	; select bank0
  7849  09D5  1890               	btfsc	16,1	;volatile
  7850  09D6  29EA               	goto	l5762
  7851                           
  7852                           ;SwitchBypass.c: 42: if (switchBypass_pressed > 0) {
  7853  09D7  0022               	movlb	2	; select bank2
  7854  09D8  084F               	movf	(_switchBypass_pressed+1)^(0+256),w
  7855  09D9  3A80               	xorlw	128
  7856  09DA  0020               	movlb	0	; select bank0
  7857  09DB  00B8               	movwf	??_updateSwitchBypass
  7858  09DC  3080               	movlw	128
  7859  09DD  0238               	subwf	??_updateSwitchBypass,w
  7860  09DE  1D03               	skipz
  7861  09DF  29E3               	goto	u6435
  7862  09E0  3001               	movlw	1
  7863  09E1  0022               	movlb	2	; select bank2
  7864  09E2  024E               	subwf	_switchBypass_pressed^(0+256),w
  7865  09E3                     u6435:	
  7866  09E3  1C03               	skipc
  7867  09E4  29FD               	goto	l5766
  7868                           
  7869                           ;SwitchBypass.c: 43: switchBypass_pressed--;
  7870  09E5  30FF               	movlw	255
  7871  09E6  0022               	movlb	2	; select bank2
  7872  09E7  07CE               	addwf	_switchBypass_pressed^(0+256),f
  7873  09E8  30FF               	movlw	255
  7874  09E9  29FC               	goto	L6
  7875  09EA                     l5762:	
  7876                           ;SwitchBypass.c: 44: }
  7877                           ;SwitchBypass.c: 45: } else if (switchBypass_pressed < 25) {
  7878                           
  7879  09EA  0022               	movlb	2	; select bank2
  7880  09EB  084F               	movf	(_switchBypass_pressed+1)^(0+256),w
  7881  09EC  3A80               	xorlw	128
  7882  09ED  0020               	movlb	0	; select bank0
  7883  09EE  00B8               	movwf	??_updateSwitchBypass
  7884  09EF  3080               	movlw	128
  7885  09F0  0238               	subwf	??_updateSwitchBypass,w
  7886  09F1  1D03               	skipz
  7887  09F2  29F6               	goto	u6445
  7888  09F3  3019               	movlw	25
  7889  09F4  0022               	movlb	2	; select bank2
  7890  09F5  024E               	subwf	_switchBypass_pressed^(0+256),w
  7891  09F6                     u6445:	
  7892  09F6  1803               	skipnc
  7893  09F7  29FD               	goto	l5766
  7894                           
  7895                           ;SwitchBypass.c: 46: switchBypass_pressed++;
  7896  09F8  3001               	movlw	1
  7897  09F9  0022               	movlb	2	; select bank2
  7898  09FA  07CE               	addwf	_switchBypass_pressed^(0+256),f
  7899  09FB  3000               	movlw	0
  7900  09FC                     L6:	
  7901  09FC  3DCF               	addwfc	(_switchBypass_pressed+1)^(0+256),f
  7902  09FD                     l5766:	
  7903                           
  7904                           ;SwitchBypass.c: 47: }
  7905                           ;SwitchBypass.c: 53: if (switchBypass_pressed == 0) {
  7906  09FD  0022               	movlb	2	; select bank2
  7907  09FE  084E               	movf	_switchBypass_pressed^(0+256),w
  7908  09FF  044F               	iorwf	(_switchBypass_pressed+1)^(0+256),w
  7909  0A00  1D03               	btfss	3,2
  7910  0A01  2A5C               	goto	l5806
  7911                           
  7912                           ;SwitchBypass.c: 56: if (feedback_start == 0) {
  7913  0A02  0021               	movlb	1	; select bank1
  7914  0A03  086A               	movf	_feedback_start^(0+128),w
  7915  0A04  1D03               	btfss	3,2
  7916  0A05  2A0B               	goto	l5774
  7917                           
  7918                           ;SwitchBypass.c: 57: feedback_start = 1;
  7919  0A06  01EA               	clrf	_feedback_start^(0+128)
  7920  0A07  0AEA               	incf	_feedback_start^(0+128),f
  7921                           
  7922                           ;SwitchBypass.c: 58: feedback_timer = 0;
  7923  0A08  0022               	movlb	2	; select bank2
  7924  0A09  01BA               	clrf	_feedback_timer^(0+256)	;volatile
  7925  0A0A  01BB               	clrf	(_feedback_timer+1)^(0+256)	;volatile
  7926  0A0B                     l5774:	
  7927                           
  7928                           ;SwitchBypass.c: 59: }
  7929                           ;SwitchBypass.c: 61: if (feedback_timer >= long_press_limit && feedback_state == 0 && do
      +                          ubleTap_state == 0) {
  7930  0A0B  0021               	movlb	1	; select bank1
  7931  0A0C  0856               	movf	(_long_press_limit+1)^(0+128),w
  7932  0A0D  0022               	movlb	2	; select bank2
  7933  0A0E  023B               	subwf	(_feedback_timer+1)^(0+256),w	;volatile
  7934  0A0F  1D03               	skipz
  7935  0A10  2A15               	goto	u6475
  7936  0A11  0021               	movlb	1	; select bank1
  7937  0A12  0855               	movf	_long_press_limit^(0+128),w
  7938  0A13  0022               	movlb	2	; select bank2
  7939  0A14  023A               	subwf	_feedback_timer^(0+256),w	;volatile
  7940  0A15                     u6475:	
  7941  0A15  1C03               	skipc
  7942  0A16  2A34               	goto	l5788
  7943  0A17  0020               	movlb	0	; select bank0
  7944  0A18  0869               	movf	_feedback_state,w	;volatile
  7945  0A19  1D03               	btfss	3,2
  7946  0A1A  2A34               	goto	l5788
  7947  0A1B  086B               	movf	_doubleTap_state,w	;volatile
  7948  0A1C  1D03               	btfss	3,2
  7949  0A1D  2A34               	goto	l5788
  7950                           
  7951                           ;SwitchBypass.c: 64: LATBbits.LATB2 = 0;
  7952  0A1E  0022               	movlb	2	; select bank2
  7953  0A1F  110D               	bcf	13,2	;volatile
  7954                           
  7955                           ;SwitchBypass.c: 65: if (longTap_start != 1) {
  7956  0A20  0355               	decf	_longTap_start^(0+256),w
  7957  0A21  1903               	btfsc	3,2
  7958  0A22  2A2C               	goto	l5786
  7959                           
  7960                           ;SwitchBypass.c: 66: setFeedbackState(1);
  7961  0A23  3001               	movlw	1
  7962  0A24  0020               	movlb	0	; select bank0
  7963  0A25  00A2               	movwf	setFeedbackState@f_state
  7964  0A26  3000               	movlw	0
  7965  0A27  00A3               	movwf	setFeedbackState@f_state+1
  7966  0A28  319E  264B  3189   	fcall	_setFeedbackState
  7967                           
  7968                           ;SwitchBypass.c: 67: } else {
  7969  0A2B  2A34               	goto	l5788
  7970  0A2C                     l5786:	
  7971                           
  7972                           ;SwitchBypass.c: 68: setDoublePressState(1);
  7973  0A2C  3001               	movlw	1
  7974  0A2D  0020               	movlb	0	; select bank0
  7975  0A2E  00B4               	movwf	setDoublePressState@f_state
  7976  0A2F  3000               	movlw	0
  7977  0A30  00B5               	movwf	setDoublePressState@f_state+1
  7978  0A31  319F  2741  3189   	fcall	_setDoublePressState
  7979  0A34                     l5788:	
  7980                           
  7981                           ;SwitchBypass.c: 69: }
  7982                           ;SwitchBypass.c: 70: }
  7983                           ;SwitchBypass.c: 72: if (doubleTap_state == 0 && feedback_state == 0) {
  7984  0A34  0020               	movlb	0	; select bank0
  7985  0A35  086B               	movf	_doubleTap_state,w	;volatile
  7986  0A36  1D03               	btfss	3,2
  7987  0A37  2A58               	goto	l1056
  7988  0A38  0869               	movf	_feedback_state,w	;volatile
  7989  0A39  1D03               	btfss	3,2
  7990  0A3A  2A58               	goto	l1056
  7991                           
  7992                           ;SwitchBypass.c: 73: if (switchBypass_state == 1) {
  7993  0A3B  0021               	movlb	1	; select bank1
  7994  0A3C  035A               	decf	_switchBypass_state^(0+128),w
  7995  0A3D  1D03               	btfss	3,2
  7996  0A3E  2A4B               	goto	l5800
  7997                           
  7998                           ;SwitchBypass.c: 75: if (switchBypass_up == 1) {
  7999  0A3F  0022               	movlb	2	; select bank2
  8000  0A40  0369               	decf	_switchBypass_up^(0+256),w
  8001  0A41  046A               	iorwf	(_switchBypass_up+1)^(0+256),w
  8002  0A42  1D03               	btfss	3,2
  8003  0A43  2A58               	goto	l1056
  8004                           
  8005                           ;SwitchBypass.c: 76: currentBypassState = 1;
  8006  0A44  01EE               	clrf	_currentBypassState^(0+256)
  8007  0A45  0AEE               	incf	_currentBypassState^(0+256),f
  8008                           
  8009                           ;SwitchBypass.c: 77: switchBypass_toggle = 1;
  8010  0A46  3001               	movlw	1
  8011  0A47  00D0               	movwf	_switchBypass_toggle^(0+256)
  8012  0A48  3000               	movlw	0
  8013  0A49  00D1               	movwf	(_switchBypass_toggle^(0+256)+1)
  8014                           
  8015                           ;SwitchBypass.c: 78: }
  8016                           ;SwitchBypass.c: 93: } else {
  8017  0A4A  2A58               	goto	l1056
  8018  0A4B                     l5800:	
  8019                           
  8020                           ;SwitchBypass.c: 94: if (bypass_turning_on != 1) {
  8021  0A4B  0022               	movlb	2	; select bank2
  8022  0A4C  0353               	decf	_bypass_turning_on^(0+256),w
  8023  0A4D  1903               	btfsc	3,2
  8024  0A4E  2A58               	goto	l1056
  8025                           
  8026                           ;SwitchBypass.c: 96: currentBypassState = 0;
  8027  0A4F  01EE               	clrf	_currentBypassState^(0+256)
  8028                           
  8029                           ;SwitchBypass.c: 98: bypass_turning_on = 1;
  8030  0A50  01D3               	clrf	_bypass_turning_on^(0+256)
  8031  0A51  0AD3               	incf	_bypass_turning_on^(0+256),f
  8032                           
  8033                           ;SwitchBypass.c: 99: switchBypass_toggle = 0;
  8034  0A52  01D0               	clrf	_switchBypass_toggle^(0+256)
  8035  0A53  01D1               	clrf	(_switchBypass_toggle+1)^(0+256)
  8036                           
  8037                           ;SwitchBypass.c: 101: feedback_state = 0;
  8038  0A54  0020               	movlb	0	; select bank0
  8039  0A55  01E9               	clrf	_feedback_state	;volatile
  8040                           
  8041                           ;SwitchBypass.c: 102: feedback_start = 0;
  8042  0A56  0021               	movlb	1	; select bank1
  8043  0A57  01EA               	clrf	_feedback_start^(0+128)
  8044  0A58                     l1056:	
  8045                           
  8046                           ;SwitchBypass.c: 103: }
  8047                           ;SwitchBypass.c: 104: }
  8048                           ;SwitchBypass.c: 106: }
  8049                           ;SwitchBypass.c: 107: switchBypass_up = 0;
  8050  0A58  0022               	movlb	2	; select bank2
  8051  0A59  01E9               	clrf	_switchBypass_up^(0+256)
  8052  0A5A  01EA               	clrf	(_switchBypass_up+1)^(0+256)
  8053                           
  8054                           ;SwitchBypass.c: 108: } else if (switchBypass_pressed >= 25) {
  8055  0A5B  0008               	return
  8056  0A5C                     l5806:	
  8057  0A5C  084F               	movf	(_switchBypass_pressed+1)^(0+256),w
  8058  0A5D  3A80               	xorlw	128
  8059  0A5E  0020               	movlb	0	; select bank0
  8060  0A5F  00B8               	movwf	??_updateSwitchBypass
  8061  0A60  3080               	movlw	128
  8062  0A61  0238               	subwf	??_updateSwitchBypass,w
  8063  0A62  1D03               	skipz
  8064  0A63  2A67               	goto	u6565
  8065  0A64  3019               	movlw	25
  8066  0A65  0022               	movlb	2	; select bank2
  8067  0A66  024E               	subwf	_switchBypass_pressed^(0+256),w
  8068  0A67                     u6565:	
  8069  0A67  1C03               	skipc
  8070  0A68  0008               	return
  8071                           
  8072                           ;SwitchBypass.c: 109: if (doubleTap_state == 1) {
  8073  0A69  0020               	movlb	0	; select bank0
  8074  0A6A  036B               	decf	_doubleTap_state,w	;volatile
  8075  0A6B  1D03               	btfss	3,2
  8076  0A6C  2A76               	goto	l5812
  8077                           
  8078                           ;SwitchBypass.c: 110: setSwitchBypassState(currentBypassState);
  8079  0A6D  0022               	movlb	2	; select bank2
  8080  0A6E  086E               	movf	_currentBypassState^(0+256),w
  8081  0A6F  0020               	movlb	0	; select bank0
  8082  0A70  00B8               	movwf	??_updateSwitchBypass
  8083  0A71  01B9               	clrf	??_updateSwitchBypass+1
  8084  0A72  0838               	movf	??_updateSwitchBypass,w
  8085  0A73  00B4               	movwf	setSwitchBypassState@f_state
  8086  0A74  0839               	movf	??_updateSwitchBypass+1,w
  8087  0A75  2A91               	goto	L7
  8088  0A76                     l5812:	
  8089                           ;SwitchBypass.c: 111: } else if (bypass_turning_on == 1 || feedback_state == 1) {
  8090                           
  8091  0A76  0022               	movlb	2	; select bank2
  8092  0A77  0353               	decf	_bypass_turning_on^(0+256),w
  8093  0A78  1903               	btfsc	3,2
  8094  0A79  2A7E               	goto	l5816
  8095  0A7A  0020               	movlb	0	; select bank0
  8096  0A7B  0369               	decf	_feedback_state,w	;volatile
  8097  0A7C  1D03               	btfss	3,2
  8098  0A7D  2A83               	goto	l5818
  8099  0A7E                     l5816:	
  8100                           
  8101                           ;SwitchBypass.c: 112: setSwitchBypassState(1);
  8102  0A7E  3001               	movlw	1
  8103  0A7F  0020               	movlb	0	; select bank0
  8104  0A80  00B4               	movwf	setSwitchBypassState@f_state
  8105  0A81  3000               	movlw	0
  8106  0A82  2A91               	goto	L7
  8107  0A83                     l5818:	
  8108                           ;SwitchBypass.c: 113: } else if (switchBypass_toggle == 1 && feedback_state == 0 && doub
      +                          leTap_state == 0) {
  8109                           
  8110  0A83  0022               	movlb	2	; select bank2
  8111  0A84  0350               	decf	_switchBypass_toggle^(0+256),w
  8112  0A85  0451               	iorwf	(_switchBypass_toggle+1)^(0+256),w
  8113  0A86  1D03               	btfss	3,2
  8114  0A87  2A95               	goto	l5826
  8115  0A88  0020               	movlb	0	; select bank0
  8116  0A89  0869               	movf	_feedback_state,w	;volatile
  8117  0A8A  1D03               	btfss	3,2
  8118  0A8B  2A95               	goto	l5826
  8119  0A8C  086B               	movf	_doubleTap_state,w	;volatile
  8120  0A8D  1D03               	btfss	3,2
  8121  0A8E  2A95               	goto	l5826
  8122                           
  8123                           ;SwitchBypass.c: 114: setSwitchBypassState(0);
  8124  0A8F  3000               	movlw	0
  8125  0A90  00B4               	movwf	setSwitchBypassState@f_state
  8126  0A91                     L7:	
  8127  0A91  00B5               	movwf	setSwitchBypassState@f_state+1
  8128  0A92  3193  2314  3189   	fcall	_setSwitchBypassState
  8129  0A95                     l5826:	
  8130                           
  8131                           ;SwitchBypass.c: 115: }
  8132                           ;SwitchBypass.c: 118: LATBbits.LATB2 = switchBypass_state;
  8133  0A95  0021               	movlb	1	; select bank1
  8134  0A96  0C5A               	rrf	_switchBypass_state^(0+128),w
  8135  0A97  0022               	movlb	2	; select bank2
  8136  0A98  1C03               	skipc
  8137  0A99  110D               	bcf	13,2	;volatile
  8138  0A9A  1803               	skipnc
  8139  0A9B  150D               	bsf	13,2	;volatile
  8140                           
  8141                           ;SwitchBypass.c: 120: setFeedbackState(0);
  8142  0A9C  3000               	movlw	0
  8143  0A9D  0020               	movlb	0	; select bank0
  8144  0A9E  00A2               	movwf	setFeedbackState@f_state
  8145  0A9F  00A3               	movwf	setFeedbackState@f_state+1
  8146  0AA0  319E  264B  3189   	fcall	_setFeedbackState
  8147                           
  8148                           ;SwitchBypass.c: 121: setDoublePressState(0);
  8149  0AA3  3000               	movlw	0
  8150  0AA4  0020               	movlb	0	; select bank0
  8151  0AA5  00B4               	movwf	setDoublePressState@f_state
  8152  0AA6  00B5               	movwf	setDoublePressState@f_state+1
  8153  0AA7  319F  2741         	fcall	_setDoublePressState
  8154                           
  8155                           ;SwitchBypass.c: 122: feedback_start = 0;
  8156  0AA9  0021               	movlb	1	; select bank1
  8157  0AAA  01EA               	clrf	_feedback_start^(0+128)
  8158                           
  8159                           ;SwitchBypass.c: 123: bypass_turning_on = 0;
  8160  0AAB  0022               	movlb	2	; select bank2
  8161  0AAC  01D3               	clrf	_bypass_turning_on^(0+256)
  8162                           
  8163                           ;SwitchBypass.c: 124: switchBypass_toggle = 0;
  8164  0AAD  01D0               	clrf	_switchBypass_toggle^(0+256)
  8165  0AAE  01D1               	clrf	(_switchBypass_toggle+1)^(0+256)
  8166                           
  8167                           ;SwitchBypass.c: 125: switchBypass_up = 1;
  8168  0AAF  3001               	movlw	1
  8169  0AB0  00E9               	movwf	_switchBypass_up^(0+256)
  8170  0AB1  3000               	movlw	0
  8171  0AB2  00EA               	movwf	(_switchBypass_up^(0+256)+1)
  8172                           
  8173                           ;SwitchBypass.c: 127: switchBypass_pressed = 25;
  8174  0AB3  3019               	movlw	25
  8175  0AB4  00CE               	movwf	_switchBypass_pressed^(0+256)
  8176  0AB5  3000               	movlw	0
  8177  0AB6  00CF               	movwf	(_switchBypass_pressed^(0+256)+1)
  8178  0AB7  0008               	return
  8179  0AB8                     __end_of_updateSwitchBypass:	
  8180                           
  8181                           	psect	text5
  8182  1E4B                     __ptext5:	
  8183 ;; *************** function _setFeedbackState *****************
  8184 ;; Defined at:
  8185 ;;		line 151 in file "SwitchBypass.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;  f_state         2    2[BANK0 ] int 
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		wreg, status,0
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8201 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8202 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8203 ;;Total ram usage:        4 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    2
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_updateSwitchBypass
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           
  8214                           ;psect for function _setFeedbackState
  8215  1E4B                     _setFeedbackState:	
  8216                           
  8217                           ;SwitchBypass.c: 152: if (feedback_state == f_state) {return;}
  8218                           
  8219                           ;incstack = 0
  8220                           ; Regs used in _setFeedbackState: [wreg+status,0]
  8221  1E4B  0020               	movlb	0	; select bank0
  8222  1E4C  0869               	movf	_feedback_state,w	;volatile
  8223  1E4D  00A4               	movwf	??_setFeedbackState
  8224  1E4E  01A5               	clrf	??_setFeedbackState+1
  8225  1E4F  0823               	movf	setFeedbackState@f_state+1,w
  8226  1E50  0625               	xorwf	??_setFeedbackState+1,w
  8227  1E51  1D03               	skipz
  8228  1E52  2E55               	goto	u5485
  8229  1E53  0822               	movf	setFeedbackState@f_state,w
  8230  1E54  0624               	xorwf	??_setFeedbackState,w
  8231  1E55                     u5485:	
  8232  1E55  1903               	btfsc	3,2
  8233  1E56  0008               	return
  8234                           
  8235                           ;SwitchBypass.c: 153: feedback_state = f_state;
  8236  1E57  0822               	movf	setFeedbackState@f_state,w
  8237  1E58  00A4               	movwf	??_setFeedbackState
  8238  1E59  0824               	movf	??_setFeedbackState,w
  8239  1E5A  00E9               	movwf	_feedback_state	;volatile
  8240                           
  8241                           ;SwitchBypass.c: 154: LATBbits.LATB3 = f_state;
  8242  1E5B  0C22               	rrf	setFeedbackState@f_state,w
  8243  1E5C  0022               	movlb	2	; select bank2
  8244  1E5D  1C03               	skipc
  8245  1E5E  118D               	bcf	13,3	;volatile
  8246  1E5F  1803               	skipnc
  8247  1E60  158D               	bsf	13,3	;volatile
  8248  1E61  0008               	return
  8249  1E62                     __end_of_setFeedbackState:	
  8250                           
  8251                           	psect	text6
  8252  1F41                     __ptext6:	
  8253 ;; *************** function _setDoublePressState *****************
  8254 ;; Defined at:
  8255 ;;		line 20 in file "preset_programming.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  f_state         2   20[BANK0 ] int 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;		None
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1    wreg      void 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0, pclath, cstack
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8269 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8271 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8272 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8273 ;;Total ram usage:        4 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:    4
  8276 ;; This function calls:
  8277 ;;		_wait_ms
  8278 ;; This function is called by:
  8279 ;;		_updateSwitchBypass
  8280 ;;		_updateSwitchTap
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           
  8285                           ;psect for function _setDoublePressState
  8286  1F41                     _setDoublePressState:	
  8287                           
  8288                           ;preset_programming.c: 21: if (doubleTap_state == f_state) {return;}
  8289                           
  8290                           ;incstack = 0
  8291                           ; Regs used in _setDoublePressState: [wreg+status,2+status,0+pclath+cstack]
  8292  1F41  0020               	movlb	0	; select bank0
  8293  1F42  086B               	movf	_doubleTap_state,w	;volatile
  8294  1F43  00B6               	movwf	??_setDoublePressState
  8295  1F44  01B7               	clrf	??_setDoublePressState+1
  8296  1F45  0835               	movf	setDoublePressState@f_state+1,w
  8297  1F46  0637               	xorwf	??_setDoublePressState+1,w
  8298  1F47  1D03               	skipz
  8299  1F48  2F4B               	goto	u5495
  8300  1F49  0834               	movf	setDoublePressState@f_state,w
  8301  1F4A  0636               	xorwf	??_setDoublePressState,w
  8302  1F4B                     u5495:	
  8303  1F4B  1903               	btfsc	3,2
  8304  1F4C  0008               	return
  8305                           
  8306                           ;preset_programming.c: 22: doubleTap_state = f_state;
  8307  1F4D  0834               	movf	setDoublePressState@f_state,w
  8308  1F4E  00B6               	movwf	??_setDoublePressState
  8309  1F4F  0836               	movf	??_setDoublePressState,w
  8310  1F50  00EB               	movwf	_doubleTap_state	;volatile
  8311                           
  8312                           ;preset_programming.c: 23: if (f_state == 1) {
  8313  1F51  0334               	decf	setDoublePressState@f_state,w
  8314  1F52  0435               	iorwf	setDoublePressState@f_state+1,w
  8315  1F53  1D03               	btfss	3,2
  8316  1F54  2F58               	goto	l5324
  8317                           
  8318                           ;preset_programming.c: 24: LATBbits.LATB4 = 0;
  8319  1F55  0022               	movlb	2	; select bank2
  8320  1F56  120D               	bcf	13,4	;volatile
  8321                           
  8322                           ;preset_programming.c: 25: LATBbits.LATB2 = 0;
  8323  1F57  110D               	bcf	13,2	;volatile
  8324  1F58                     l5324:	
  8325                           
  8326                           ;preset_programming.c: 26: }
  8327                           ;preset_programming.c: 28: LATBbits.LATB1 = f_state;
  8328  1F58  0020               	movlb	0	; select bank0
  8329  1F59  0C34               	rrf	setDoublePressState@f_state,w
  8330  1F5A  0022               	movlb	2	; select bank2
  8331  1F5B  1C03               	skipc
  8332  1F5C  108D               	bcf	13,1	;volatile
  8333  1F5D  1803               	skipnc
  8334  1F5E  148D               	bsf	13,1	;volatile
  8335                           
  8336                           ;preset_programming.c: 29: LATBbits.LATB0 = f_state;
  8337  1F5F  0020               	movlb	0	; select bank0
  8338  1F60  0C34               	rrf	setDoublePressState@f_state,w
  8339  1F61  0022               	movlb	2	; select bank2
  8340  1F62  1C03               	skipc
  8341  1F63  100D               	bcf	13,0	;volatile
  8342  1F64  1803               	skipnc
  8343  1F65  140D               	bsf	13,0	;volatile
  8344                           
  8345                           ;preset_programming.c: 31: wait_ms(20);
  8346  1F66  3014               	movlw	20
  8347  1F67  0020               	movlb	0	; select bank0
  8348  1F68  00AE               	movwf	wait_ms@timeSec
  8349  1F69  3000               	movlw	0
  8350  1F6A  00AF               	movwf	wait_ms@timeSec+1
  8351  1F6B  319F  27CE         	fcall	_wait_ms
  8352  1F6D  0008               	return
  8353  1F6E                     __end_of_setDoublePressState:	
  8354                           
  8355                           	psect	text7
  8356  1F16                     __ptext7:	
  8357 ;; *************** function _showBootSequence *****************
  8358 ;; Defined at:
  8359 ;;		line 86 in file "LEDs.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;		None
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;		None
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  1    wreg      void 
  8366 ;; Registers used:
  8367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8376 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8377 ;;Total ram usage:        1 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; Hardware stack levels required when called:    5
  8380 ;; This function calls:
  8381 ;;		_getCurrentLEDState
  8382 ;;		_restoreLEDState
  8383 ;;		_solidring_tactiles
  8384 ;;		_star_tactiles
  8385 ;; This function is called by:
  8386 ;;		_main
  8387 ;; This function uses a non-reentrant model
  8388 ;;
  8389                           
  8390                           
  8391                           ;psect for function _showBootSequence
  8392  1F16                     _showBootSequence:	
  8393                           
  8394                           ;LEDs.c: 87: getCurrentLEDState();
  8395                           
  8396                           ;incstack = 0
  8397                           ; Regs used in _showBootSequence: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8398  1F16  319E  2612  319F   	fcall	_getCurrentLEDState
  8399                           
  8400                           ;LEDs.c: 88: suspend_blink = 1;
  8401  1F19  3001               	movlw	1
  8402  1F1A  0020               	movlb	0	; select bank0
  8403  1F1B  00BB               	movwf	??_showBootSequence
  8404  1F1C  083B               	movf	??_showBootSequence,w
  8405  1F1D  0021               	movlb	1	; select bank1
  8406  1F1E  00EB               	movwf	_suspend_blink^(0+128)	;volatile
  8407                           
  8408                           ;LEDs.c: 90: LATBbits.LATB4 = 0;
  8409  1F1F  0022               	movlb	2	; select bank2
  8410  1F20  120D               	bcf	13,4	;volatile
  8411                           
  8412                           ;LEDs.c: 91: LATBbits.LATB2 = 0;
  8413  1F21  110D               	bcf	13,2	;volatile
  8414                           
  8415                           ;LEDs.c: 92: LATBbits.LATB5 = 0;
  8416  1F22  128D               	bcf	13,5	;volatile
  8417                           
  8418                           ;LEDs.c: 93: LATBbits.LATB3 = 0;
  8419  1F23  118D               	bcf	13,3	;volatile
  8420                           
  8421                           ;LEDs.c: 94: LATBbits.LATB0 = 0;
  8422  1F24  100D               	bcf	13,0	;volatile
  8423                           
  8424                           ;LEDs.c: 95: LATBbits.LATB1 = 0;
  8425  1F25  108D               	bcf	13,1	;volatile
  8426                           
  8427                           ;LEDs.c: 113: star_tactiles(0);
  8428  1F26  3000               	movlw	0
  8429  1F27  3195  2554  319F   	fcall	_star_tactiles
  8430                           
  8431                           ;LEDs.c: 114: star_tactiles(0);
  8432  1F2A  3000               	movlw	0
  8433  1F2B  3195  2554  319F   	fcall	_star_tactiles
  8434                           
  8435                           ;LEDs.c: 115: star_tactiles(1);
  8436  1F2E  3001               	movlw	1
  8437  1F2F  3195  2554  319F   	fcall	_star_tactiles
  8438                           
  8439                           ;LEDs.c: 116: star_tactiles(1);
  8440  1F32  3001               	movlw	1
  8441  1F33  3195  2554  319F   	fcall	_star_tactiles
  8442                           
  8443                           ;LEDs.c: 118: solidring_tactiles();
  8444  1F36  3191  21C4  319F   	fcall	_solidring_tactiles
  8445                           
  8446                           ;LEDs.c: 119: solidring_tactiles();
  8447  1F39  3191  21C4  319F   	fcall	_solidring_tactiles
  8448                           
  8449                           ;LEDs.c: 122: suspend_blink = 0;
  8450  1F3C  0021               	movlb	1	; select bank1
  8451  1F3D  01EB               	clrf	_suspend_blink^(0+128)	;volatile
  8452                           
  8453                           ;LEDs.c: 123: restoreLEDState();
  8454  1F3E  3190  2000         	fcall	_restoreLEDState
  8455  1F40  0008               	return
  8456  1F41                     __end_of_showBootSequence:	
  8457                           
  8458                           	psect	text8
  8459  1554                     __ptext8:	
  8460 ;; *************** function _star_tactiles *****************
  8461 ;; Defined at:
  8462 ;;		line 194 in file "LEDs.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;  reverse         1    wreg     unsigned char 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;  reverse         1   22[BANK0 ] unsigned char 
  8467 ;;  iLed            2   25[BANK0 ] int 
  8468 ;;  iLed            2   23[BANK0 ] int 
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1    wreg      void 
  8471 ;; Registers used:
  8472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8479 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8481 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8482 ;;Total ram usage:        7 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; Hardware stack levels required when called:    4
  8485 ;; This function calls:
  8486 ;;		_set_leds_bottom
  8487 ;;		_set_leds_top
  8488 ;;		_wait_ms
  8489 ;; This function is called by:
  8490 ;;		_showBootSequence
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           
  8495                           ;psect for function _star_tactiles
  8496  1554                     _star_tactiles:	
  8497                           
  8498                           ;incstack = 0
  8499                           ; Regs used in _star_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8500                           ;star_tactiles@reverse stored from wreg
  8501  1554  0020               	movlb	0	; select bank0
  8502  1555  00B6               	movwf	star_tactiles@reverse
  8503                           
  8504                           ;LEDs.c: 195: if (reverse == 1) {
  8505  1556  0336               	decf	star_tactiles@reverse,w
  8506  1557  1D03               	btfss	3,2
  8507  1558  2D89               	goto	l5250
  8508                           
  8509                           ;LEDs.c: 196: for (int iLed = 5; iLed > -1; iLed--) {
  8510  1559  3005               	movlw	5
  8511  155A  00B7               	movwf	star_tactiles@iLed
  8512  155B  3000               	movlw	0
  8513  155C  00B8               	movwf	star_tactiles@iLed+1
  8514  155D                     L8:	
  8515  155D  1BB8               	btfsc	star_tactiles@iLed+1,7
  8516  155E  0008               	return
  8517                           
  8518                           ;LEDs.c: 197: set_leds_top(iLed, 1);
  8519  155F  0838               	movf	star_tactiles@iLed+1,w
  8520  1560  00A3               	movwf	set_leds_top@x+1
  8521  1561  0837               	movf	star_tactiles@iLed,w
  8522  1562  00A2               	movwf	set_leds_top@x
  8523  1563  3001               	movlw	1
  8524  1564  00A4               	movwf	set_leds_top@ledState
  8525  1565  3000               	movlw	0
  8526  1566  00A5               	movwf	set_leds_top@ledState+1
  8527  1567  3188  2009  3195   	fcall	_set_leds_top
  8528                           
  8529                           ;LEDs.c: 198: set_leds_bottom(6 - iLed);
  8530  156A  0020               	movlb	0	; select bank0
  8531  156B  0937               	comf	star_tactiles@iLed,w
  8532  156C  00B4               	movwf	??_star_tactiles
  8533  156D  0938               	comf	star_tactiles@iLed+1,w
  8534  156E  00B5               	movwf	??_star_tactiles+1
  8535  156F  0AB4               	incf	??_star_tactiles,f
  8536  1570  1903               	skipnz
  8537  1571  0AB5               	incf	??_star_tactiles+1,f
  8538  1572  0834               	movf	??_star_tactiles,w
  8539  1573  3E06               	addlw	6
  8540  1574  00A2               	movwf	set_leds_bottom@x
  8541  1575  3000               	movlw	0
  8542  1576  3D35               	addwfc	??_star_tactiles+1,w
  8543  1577  00A3               	movwf	set_leds_bottom@x+1
  8544  1578  3190  2016  3195   	fcall	_set_leds_bottom
  8545                           
  8546                           ;LEDs.c: 199: wait_ms(5);
  8547  157B  3005               	movlw	5
  8548  157C  0020               	movlb	0	; select bank0
  8549  157D  00AE               	movwf	wait_ms@timeSec
  8550  157E  3000               	movlw	0
  8551  157F  00AF               	movwf	wait_ms@timeSec+1
  8552  1580  319F  27CE  3195   	fcall	_wait_ms
  8553  1583  30FF               	movlw	255
  8554  1584  0020               	movlb	0	; select bank0
  8555  1585  07B7               	addwf	star_tactiles@iLed,f
  8556  1586  30FF               	movlw	255
  8557  1587  3DB8               	addwfc	star_tactiles@iLed+1,f
  8558  1588  2D5D               	goto	L8
  8559  1589                     l5250:	
  8560                           ;LEDs.c: 200: }
  8561                           ;LEDs.c: 201: } else {
  8562                           
  8563                           
  8564                           ;LEDs.c: 202: for (int iLed = 1; iLed < 7; iLed++) {
  8565  1589  3001               	movlw	1
  8566  158A  00B9               	movwf	star_tactiles@iLed_1435
  8567  158B  3000               	movlw	0
  8568  158C  00BA               	movwf	star_tactiles@iLed_1435+1
  8569  158D                     L9:	
  8570  158D  083A               	movf	star_tactiles@iLed_1435+1,w
  8571  158E  3A80               	xorlw	128
  8572  158F  00B4               	movwf	??_star_tactiles
  8573  1590  3080               	movlw	128
  8574  1591  0234               	subwf	??_star_tactiles,w
  8575  1592  1D03               	skipz
  8576  1593  2D96               	goto	u5435
  8577  1594  3007               	movlw	7
  8578  1595  0239               	subwf	star_tactiles@iLed_1435,w
  8579  1596                     u5435:	
  8580  1596  1803               	btfsc	3,0
  8581  1597  0008               	return
  8582                           
  8583                           ;LEDs.c: 203: set_leds_top(iLed, 1);
  8584  1598  0020               	movlb	0	; select bank0
  8585  1599  083A               	movf	star_tactiles@iLed_1435+1,w
  8586  159A  00A3               	movwf	set_leds_top@x+1
  8587  159B  0839               	movf	star_tactiles@iLed_1435,w
  8588  159C  00A2               	movwf	set_leds_top@x
  8589  159D  3001               	movlw	1
  8590  159E  00A4               	movwf	set_leds_top@ledState
  8591  159F  3000               	movlw	0
  8592  15A0  00A5               	movwf	set_leds_top@ledState+1
  8593  15A1  3188  2009  3195   	fcall	_set_leds_top
  8594                           
  8595                           ;LEDs.c: 204: set_leds_bottom(6 - iLed);
  8596  15A4  0020               	movlb	0	; select bank0
  8597  15A5  0939               	comf	star_tactiles@iLed_1435,w
  8598  15A6  00B4               	movwf	??_star_tactiles
  8599  15A7  093A               	comf	star_tactiles@iLed_1435+1,w
  8600  15A8  00B5               	movwf	??_star_tactiles+1
  8601  15A9  0AB4               	incf	??_star_tactiles,f
  8602  15AA  1903               	skipnz
  8603  15AB  0AB5               	incf	??_star_tactiles+1,f
  8604  15AC  0834               	movf	??_star_tactiles,w
  8605  15AD  3E06               	addlw	6
  8606  15AE  00A2               	movwf	set_leds_bottom@x
  8607  15AF  3000               	movlw	0
  8608  15B0  3D35               	addwfc	??_star_tactiles+1,w
  8609  15B1  00A3               	movwf	set_leds_bottom@x+1
  8610  15B2  3190  2016  3195   	fcall	_set_leds_bottom
  8611                           
  8612                           ;LEDs.c: 205: wait_ms(5);
  8613  15B5  3005               	movlw	5
  8614  15B6  0020               	movlb	0	; select bank0
  8615  15B7  00AE               	movwf	wait_ms@timeSec
  8616  15B8  3000               	movlw	0
  8617  15B9  00AF               	movwf	wait_ms@timeSec+1
  8618  15BA  319F  27CE  3195   	fcall	_wait_ms
  8619  15BD  3001               	movlw	1
  8620  15BE  0020               	movlb	0	; select bank0
  8621  15BF  07B9               	addwf	star_tactiles@iLed_1435,f
  8622  15C0  3000               	movlw	0
  8623  15C1  3DBA               	addwfc	star_tactiles@iLed_1435+1,f
  8624  15C2  2D8D               	goto	L9
  8625  15C3                     __end_of_star_tactiles:	
  8626                           
  8627                           	psect	text9
  8628  11C4                     __ptext9:	
  8629 ;; *************** function _solidring_tactiles *****************
  8630 ;; Defined at:
  8631 ;;		line 223 in file "LEDs.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;		None
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;  ring_delay      1   22[BANK0 ] unsigned char 
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  1    wreg      void 
  8638 ;; Registers used:
  8639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8647 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8648 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8649 ;;Total ram usage:        3 bytes
  8650 ;; Hardware stack levels used:    1
  8651 ;; Hardware stack levels required when called:    4
  8652 ;; This function calls:
  8653 ;;		_set_leds_bottom
  8654 ;;		_set_leds_top
  8655 ;;		_wait_ms
  8656 ;; This function is called by:
  8657 ;;		_showBootSequence
  8658 ;;		_showSave
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           
  8662                           
  8663                           ;psect for function _solidring_tactiles
  8664  11C4                     _solidring_tactiles:	
  8665                           
  8666                           ;LEDs.c: 224: uint8_t ring_delay = 30;
  8667                           
  8668                           ;incstack = 0
  8669                           ; Regs used in _solidring_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8670  11C4  301E               	movlw	30
  8671  11C5  0020               	movlb	0	; select bank0
  8672  11C6  00B4               	movwf	??_solidring_tactiles
  8673  11C7  0834               	movf	??_solidring_tactiles,w
  8674  11C8  00B6               	movwf	solidring_tactiles@ring_delay
  8675                           
  8676                           ;LEDs.c: 225: set_leds_top(100, 1);
  8677  11C9  3064               	movlw	100
  8678  11CA  00A2               	movwf	set_leds_top@x
  8679  11CB  3000               	movlw	0
  8680  11CC  00A3               	movwf	set_leds_top@x+1
  8681  11CD  3001               	movlw	1
  8682  11CE  00A4               	movwf	set_leds_top@ledState
  8683  11CF  3000               	movlw	0
  8684  11D0  00A5               	movwf	set_leds_top@ledState+1
  8685  11D1  3188  2009  3191   	fcall	_set_leds_top
  8686                           
  8687                           ;LEDs.c: 226: set_leds_bottom(100);
  8688  11D4  3064               	movlw	100
  8689  11D5  0020               	movlb	0	; select bank0
  8690  11D6  00A2               	movwf	set_leds_bottom@x
  8691  11D7  3000               	movlw	0
  8692  11D8  00A3               	movwf	set_leds_bottom@x+1
  8693  11D9  3190  2016  3191   	fcall	_set_leds_bottom
  8694                           
  8695                           ;LEDs.c: 227: wait_ms(ring_delay);
  8696  11DC  0020               	movlb	0	; select bank0
  8697  11DD  0836               	movf	solidring_tactiles@ring_delay,w
  8698  11DE  00B4               	movwf	??_solidring_tactiles
  8699  11DF  01B5               	clrf	??_solidring_tactiles+1
  8700  11E0  0834               	movf	??_solidring_tactiles,w
  8701  11E1  00AE               	movwf	wait_ms@timeSec
  8702  11E2  0835               	movf	??_solidring_tactiles+1,w
  8703  11E3  00AF               	movwf	wait_ms@timeSec+1
  8704  11E4  319F  27CE  3191   	fcall	_wait_ms
  8705                           
  8706                           ;LEDs.c: 229: set_leds_top(0, 1);
  8707  11E7  3000               	movlw	0
  8708  11E8  0020               	movlb	0	; select bank0
  8709  11E9  00A2               	movwf	set_leds_top@x
  8710  11EA  00A3               	movwf	set_leds_top@x+1
  8711  11EB  3001               	movlw	1
  8712  11EC  00A4               	movwf	set_leds_top@ledState
  8713  11ED  3000               	movlw	0
  8714  11EE  00A5               	movwf	set_leds_top@ledState+1
  8715  11EF  3188  2009  3191   	fcall	_set_leds_top
  8716                           
  8717                           ;LEDs.c: 230: set_leds_bottom(0);
  8718  11F2  3000               	movlw	0
  8719  11F3  0020               	movlb	0	; select bank0
  8720  11F4  00A2               	movwf	set_leds_bottom@x
  8721  11F5  00A3               	movwf	set_leds_bottom@x+1
  8722  11F6  3190  2016  3191   	fcall	_set_leds_bottom
  8723                           
  8724                           ;LEDs.c: 231: wait_ms(ring_delay);
  8725  11F9  0020               	movlb	0	; select bank0
  8726  11FA  0836               	movf	solidring_tactiles@ring_delay,w
  8727  11FB  00B4               	movwf	??_solidring_tactiles
  8728  11FC  01B5               	clrf	??_solidring_tactiles+1
  8729  11FD  0834               	movf	??_solidring_tactiles,w
  8730  11FE  00AE               	movwf	wait_ms@timeSec
  8731  11FF  0835               	movf	??_solidring_tactiles+1,w
  8732  1200  00AF               	movwf	wait_ms@timeSec+1
  8733  1201  319F  27CE         	fcall	_wait_ms
  8734  1203  0008               	return
  8735  1204                     __end_of_solidring_tactiles:	
  8736                           
  8737                           	psect	text10
  8738  1000                     __ptext10:	
  8739 ;; *************** function _restoreLEDState *****************
  8740 ;; Defined at:
  8741 ;;		line 89 in file "state_manager.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;		None
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;		None
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  1    wreg      void 
  8748 ;; Registers used:
  8749 ;;		wreg, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8759 ;;Total ram usage:        0 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:    2
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_showBootSequence
  8766 ;;		_showError_Alternating
  8767 ;;		_show_error
  8768 ;;		_show_cancel
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           
  8773                           ;psect for function _restoreLEDState
  8774  1000                     _restoreLEDState:	
  8775                           
  8776                           ;state_manager.c: 90: LATBbits.LATB4 = ledState.tap_A;
  8777                           
  8778                           ;incstack = 0
  8779                           ; Regs used in _restoreLEDState: [wreg+status,0]
  8780  1000  0022               	movlb	2	; select bank2
  8781  1001  0C20               	rrf	_ledState^(0+256),w
  8782  1002  1C03               	skipc
  8783  1003  120D               	bcf	13,4	;volatile
  8784  1004  1803               	skipnc
  8785  1005  160D               	bsf	13,4	;volatile
  8786                           
  8787                           ;state_manager.c: 91: LATBbits.LATB2 = ledState.bypass_A;
  8788  1006  0C22               	rrf	(_ledState^(0+256)+2),w
  8789  1007  1C03               	skipc
  8790  1008  110D               	bcf	13,2	;volatile
  8791  1009  1803               	skipnc
  8792  100A  150D               	bsf	13,2	;volatile
  8793                           
  8794                           ;state_manager.c: 92: LATBbits.LATB5 = ledState.tap_B;
  8795  100B  0C21               	rrf	(_ledState^(0+256)+1),w
  8796  100C  1C03               	skipc
  8797  100D  128D               	bcf	13,5	;volatile
  8798  100E  1803               	skipnc
  8799  100F  168D               	bsf	13,5	;volatile
  8800                           
  8801                           ;state_manager.c: 93: LATBbits.LATB3 = ledState.bypass_B;
  8802  1010  0C23               	rrf	(_ledState^(0+256)+3),w
  8803  1011  1C03               	skipc
  8804  1012  118D               	bcf	13,3	;volatile
  8805  1013  1803               	skipnc
  8806  1014  158D               	bsf	13,3	;volatile
  8807  1015  0008               	return
  8808  1016                     __end_of_restoreLEDState:	
  8809                           
  8810                           	psect	text11
  8811  1E12                     __ptext11:	
  8812 ;; *************** function _getCurrentLEDState *****************
  8813 ;; Defined at:
  8814 ;;		line 83 in file "state_manager.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;		None
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  1    wreg      void 
  8821 ;; Registers used:
  8822 ;;		wreg, status,2
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8832 ;;Total ram usage:        0 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:    2
  8835 ;; This function calls:
  8836 ;;		Nothing
  8837 ;; This function is called by:
  8838 ;;		_showBootSequence
  8839 ;;		_showError_Alternating
  8840 ;;		_show_error
  8841 ;;		_show_cancel
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           
  8846                           ;psect for function _getCurrentLEDState
  8847  1E12                     _getCurrentLEDState:	
  8848                           
  8849                           ;state_manager.c: 84: ledState.tap_A = LATBbits.LATB4;
  8850                           
  8851                           ;incstack = 0
  8852                           ; Regs used in _getCurrentLEDState: [wreg+status,2]
  8853  1E12  3000               	movlw	0
  8854  1E13  0022               	movlb	2	; select bank2
  8855  1E14  1A0D               	btfsc	13,4	;volatile
  8856  1E15  3001               	movlw	1
  8857  1E16  00A0               	movwf	_ledState^(0+256)
  8858                           
  8859                           ;state_manager.c: 85: ledState.bypass_A = LATBbits.LATB2 ;
  8860  1E17  3000               	movlw	0
  8861  1E18  190D               	btfsc	13,2	;volatile
  8862  1E19  3001               	movlw	1
  8863  1E1A  00A2               	movwf	(_ledState^(0+256)+2)
  8864                           
  8865                           ;state_manager.c: 86: ledState.tap_B = LATBbits.LATB5 ;
  8866  1E1B  3000               	movlw	0
  8867  1E1C  1A8D               	btfsc	13,5	;volatile
  8868  1E1D  3001               	movlw	1
  8869  1E1E  00A1               	movwf	(_ledState^(0+256)+1)
  8870                           
  8871                           ;state_manager.c: 87: ledState.bypass_B = LATBbits.LATB3 ;
  8872  1E1F  3000               	movlw	0
  8873  1E20  198D               	btfsc	13,3	;volatile
  8874  1E21  3001               	movlw	1
  8875  1E22  00A3               	movwf	(_ledState^(0+256)+3)
  8876  1E23  0008               	return
  8877  1E24                     __end_of_getCurrentLEDState:	
  8878                           
  8879                           	psect	text12
  8880  0911                     __ptext12:	
  8881 ;; *************** function _set_subdivision *****************
  8882 ;; Defined at:
  8883 ;;		line 77 in file "user.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;  x               2   14[BANK1 ] int 
  8886 ;;  y               2   16[BANK1 ] int 
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;  scalar          3   23[BANK1 ] float 
  8889 ;;  tmpX            2   21[BANK1 ] int 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  2   14[BANK1 ] int 
  8892 ;; Registers used:
  8893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8899 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8900 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8901 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8902 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8903 ;;Total ram usage:       12 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; Hardware stack levels required when called:    4
  8906 ;; This function calls:
  8907 ;;		___awtoft
  8908 ;;		___ftdiv
  8909 ;;		___ftmul
  8910 ;;		___fttol
  8911 ;; This function is called by:
  8912 ;;		_main
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           
  8917                           ;psect for function _set_subdivision
  8918  0911                     _set_subdivision:	
  8919                           
  8920                           ;user.c: 78: adjust_sub_delay = 0;
  8921                           
  8922                           ;incstack = 0
  8923                           ; Regs used in _set_subdivision: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8924  0911  0022               	movlb	2	; select bank2
  8925  0912  01AC               	clrf	_adjust_sub_delay^(0+256)
  8926  0913  01AD               	clrf	(_adjust_sub_delay+1)^(0+256)
  8927                           
  8928                           ;user.c: 79: int tmpX = x;
  8929  0914  0021               	movlb	1	; select bank1
  8930  0915  082F               	movf	(set_subdivision@x+1)^(0+128),w
  8931  0916  00B6               	movwf	(set_subdivision@tmpX+1)^(0+128)
  8932  0917  082E               	movf	set_subdivision@x^(0+128),w
  8933  0918  00B5               	movwf	set_subdivision@tmpX^(0+128)
  8934                           
  8935                           ;user.c: 80: float scalar = 1.0;
  8936  0919  3000               	movlw	0
  8937  091A  00B7               	movwf	set_subdivision@scalar^(0+128)
  8938  091B  3080               	movlw	128
  8939  091C  00B8               	movwf	(set_subdivision@scalar+1)^(0+128)
  8940  091D  303F               	movlw	63
  8941  091E  00B9               	movwf	(set_subdivision@scalar+2)^(0+128)
  8942                           
  8943                           ;user.c: 83: switch (y) {
  8944  091F  2939               	goto	l5982
  8945  0920                     l5970:	
  8946                           ;user.c: 84: case 1:
  8947                           
  8948                           
  8949                           ;user.c: 85: scalar = 0.75;
  8950  0920  3000               	movlw	0
  8951  0921  00B7               	movwf	set_subdivision@scalar^(0+128)
  8952  0922  3040               	movlw	64
  8953  0923  292B               	goto	L11
  8954  0924                     l5972:	
  8955                           ;user.c: 87: case 2:
  8956                           
  8957                           ;user.c: 86: break;
  8958                           
  8959                           
  8960                           ;user.c: 88: scalar = 0.6666;
  8961  0924  30A6               	movlw	166
  8962  0925  00B7               	movwf	set_subdivision@scalar^(0+128)
  8963  0926  302A               	movlw	42
  8964  0927  292B               	goto	L11
  8965  0928                     l5974:	
  8966                           ;user.c: 90: case 3:
  8967                           
  8968                           ;user.c: 89: break;
  8969                           
  8970                           
  8971                           ;user.c: 91: scalar = .5;
  8972  0928  3000               	movlw	0
  8973  0929  00B7               	movwf	set_subdivision@scalar^(0+128)
  8974  092A  3000               	movlw	0
  8975  092B                     L11:	
  8976  092B  00B8               	movwf	(set_subdivision@scalar+1)^(0+128)
  8977  092C  303F               	movlw	63
  8978  092D  2937               	goto	L13
  8979  092E                     l5976:	
  8980                           ;user.c: 93: case 4:
  8981                           
  8982                           ;user.c: 92: break;
  8983                           
  8984                           
  8985                           ;user.c: 94: scalar = 0.3333;
  8986  092E  30A6               	movlw	166
  8987  092F  00B7               	movwf	set_subdivision@scalar^(0+128)
  8988  0930  30AA               	movlw	170
  8989  0931  2935               	goto	L14
  8990  0932                     l5978:	
  8991                           ;user.c: 96: case 5:
  8992                           
  8993                           ;user.c: 95: break;
  8994                           
  8995                           
  8996                           ;user.c: 97: scalar = 0.25;
  8997  0932  3000               	movlw	0
  8998  0933  00B7               	movwf	set_subdivision@scalar^(0+128)
  8999  0934  3080               	movlw	128
  9000  0935                     L14:	
  9001  0935  00B8               	movwf	(set_subdivision@scalar+1)^(0+128)
  9002  0936  303E               	movlw	62
  9003  0937                     L13:	
  9004  0937  00B9               	movwf	(set_subdivision@scalar+2)^(0+128)
  9005                           
  9006                           ;user.c: 102: }
  9007                           
  9008                           ;user.c: 101: break;
  9009                           
  9010                           ;user.c: 99: case 6:
  9011                           
  9012                           ;user.c: 98: break;
  9013  0938  2952               	goto	l5984
  9014  0939                     l5982:	
  9015                           
  9016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9017                           ; Switch size 1, requested type "space"
  9018                           ; Number of cases is 1, Range of values is 0 to 0
  9019                           ; switch strategies available:
  9020                           ; Name         Instructions Cycles
  9021                           ; simple_byte            4     3 (average)
  9022                           ; direct_byte            8     6 (fixed)
  9023                           ; jumptable            260     6 (fixed)
  9024                           ;	Chosen strategy is simple_byte
  9025  0939  0831               	movf	(set_subdivision@y+1)^(0+128),w
  9026  093A  3A00               	xorlw	0	; case 0
  9027  093B  1903               	skipnz
  9028  093C  293E               	goto	l6578
  9029  093D  2952               	goto	l5984
  9030  093E                     l6578:	
  9031                           
  9032                           ; Switch size 1, requested type "space"
  9033                           ; Number of cases is 6, Range of values is 1 to 6
  9034                           ; switch strategies available:
  9035                           ; Name         Instructions Cycles
  9036                           ; simple_byte           19    10 (average)
  9037                           ; direct_byte           21     9 (fixed)
  9038                           ; jumptable            263     9 (fixed)
  9039                           ;	Chosen strategy is simple_byte
  9040  093E  0830               	movf	set_subdivision@y^(0+128),w
  9041  093F  3A01               	xorlw	1	; case 1
  9042  0940  1903               	skipnz
  9043  0941  2920               	goto	l5970
  9044  0942  3A03               	xorlw	3	; case 2
  9045  0943  1903               	skipnz
  9046  0944  2924               	goto	l5972
  9047  0945  3A01               	xorlw	1	; case 3
  9048  0946  1903               	skipnz
  9049  0947  2928               	goto	l5974
  9050  0948  3A07               	xorlw	7	; case 4
  9051  0949  1903               	skipnz
  9052  094A  292E               	goto	l5976
  9053  094B  3A01               	xorlw	1	; case 5
  9054  094C  1903               	skipnz
  9055  094D  2932               	goto	l5978
  9056  094E  3A03               	xorlw	3	; case 6
  9057  094F  1903               	skipnz
  9058  0950  2952               	goto	l5984
  9059  0951  2952               	goto	l5984
  9060  0952                     l5984:	
  9061                           
  9062                           ;user.c: 104: x = x * scalar;
  9063  0952  082F               	movf	(set_subdivision@x+1)^(0+128),w
  9064  0953  0020               	movlb	0	; select bank0
  9065  0954  00AB               	movwf	___awtoft@c+1
  9066  0955  0021               	movlb	1	; select bank1
  9067  0956  082E               	movf	set_subdivision@x^(0+128),w
  9068  0957  0020               	movlb	0	; select bank0
  9069  0958  00AA               	movwf	___awtoft@c
  9070  0959  319E  26CE  3189   	fcall	___awtoft
  9071  095C  0020               	movlb	0	; select bank0
  9072  095D  082A               	movf	?___awtoft,w
  9073  095E  00BA               	movwf	___ftmul@f2
  9074  095F  082B               	movf	?___awtoft+1,w
  9075  0960  00BB               	movwf	___ftmul@f2+1
  9076  0961  082C               	movf	?___awtoft+2,w
  9077  0962  00BC               	movwf	___ftmul@f2+2
  9078  0963  0021               	movlb	1	; select bank1
  9079  0964  0837               	movf	set_subdivision@scalar^(0+128),w
  9080  0965  0020               	movlb	0	; select bank0
  9081  0966  00B7               	movwf	___ftmul@f1
  9082  0967  0021               	movlb	1	; select bank1
  9083  0968  0838               	movf	(set_subdivision@scalar+1)^(0+128),w
  9084  0969  0020               	movlb	0	; select bank0
  9085  096A  00B8               	movwf	___ftmul@f1+1
  9086  096B  0021               	movlb	1	; select bank1
  9087  096C  0839               	movf	(set_subdivision@scalar+2)^(0+128),w
  9088  096D  0020               	movlb	0	; select bank0
  9089  096E  00B9               	movwf	___ftmul@f1+2
  9090  096F  3188  205D  3189   	fcall	___ftmul
  9091  0972  0020               	movlb	0	; select bank0
  9092  0973  0837               	movf	?___ftmul,w
  9093  0974  0021               	movlb	1	; select bank1
  9094  0975  00A0               	movwf	___fttol@f1^(0+128)
  9095  0976  0020               	movlb	0	; select bank0
  9096  0977  0838               	movf	?___ftmul+1,w
  9097  0978  0021               	movlb	1	; select bank1
  9098  0979  00A1               	movwf	(___fttol@f1+1)^(0+128)
  9099  097A  0020               	movlb	0	; select bank0
  9100  097B  0839               	movf	?___ftmul+2,w
  9101  097C  0021               	movlb	1	; select bank1
  9102  097D  00A2               	movwf	(___fttol@f1+2)^(0+128)
  9103  097E  3196  2645  3189   	fcall	___fttol
  9104  0981  0021               	movlb	1	; select bank1
  9105  0982  0821               	movf	(?___fttol^(0+128)+1),w
  9106  0983  00AF               	movwf	(set_subdivision@x+1)^(0+128)
  9107  0984  0820               	movf	?___fttol^(0+128),w
  9108  0985  00AE               	movwf	set_subdivision@x^(0+128)
  9109                           
  9110                           ;user.c: 105: if ((x /scalar) != tmpX) {adjust_sub_delay = 1;}
  9111  0986  0837               	movf	set_subdivision@scalar^(0+128),w
  9112  0987  0020               	movlb	0	; select bank0
  9113  0988  00C7               	movwf	___ftdiv@f2
  9114  0989  0021               	movlb	1	; select bank1
  9115  098A  0838               	movf	(set_subdivision@scalar+1)^(0+128),w
  9116  098B  0020               	movlb	0	; select bank0
  9117  098C  00C8               	movwf	___ftdiv@f2+1
  9118  098D  0021               	movlb	1	; select bank1
  9119  098E  0839               	movf	(set_subdivision@scalar+2)^(0+128),w
  9120  098F  0020               	movlb	0	; select bank0
  9121  0990  00C9               	movwf	___ftdiv@f2+2
  9122  0991  0021               	movlb	1	; select bank1
  9123  0992  082F               	movf	(set_subdivision@x+1)^(0+128),w
  9124  0993  0020               	movlb	0	; select bank0
  9125  0994  00AB               	movwf	___awtoft@c+1
  9126  0995  0021               	movlb	1	; select bank1
  9127  0996  082E               	movf	set_subdivision@x^(0+128),w
  9128  0997  0020               	movlb	0	; select bank0
  9129  0998  00AA               	movwf	___awtoft@c
  9130  0999  319E  26CE  3189   	fcall	___awtoft
  9131  099C  0020               	movlb	0	; select bank0
  9132  099D  082A               	movf	?___awtoft,w
  9133  099E  00CA               	movwf	___ftdiv@f1
  9134  099F  082B               	movf	?___awtoft+1,w
  9135  09A0  00CB               	movwf	___ftdiv@f1+1
  9136  09A1  082C               	movf	?___awtoft+2,w
  9137  09A2  00CC               	movwf	___ftdiv@f1+2
  9138  09A3  3197  2757  3189   	fcall	___ftdiv
  9139  09A6  0020               	movlb	0	; select bank0
  9140  09A7  0847               	movf	?___ftdiv,w
  9141  09A8  0021               	movlb	1	; select bank1
  9142  09A9  00B2               	movwf	??_set_subdivision^(0+128)
  9143  09AA  0020               	movlb	0	; select bank0
  9144  09AB  0848               	movf	?___ftdiv+1,w
  9145  09AC  0021               	movlb	1	; select bank1
  9146  09AD  00B3               	movwf	(??_set_subdivision^(0+128)+1)
  9147  09AE  0020               	movlb	0	; select bank0
  9148  09AF  0849               	movf	?___ftdiv+2,w
  9149  09B0  0021               	movlb	1	; select bank1
  9150  09B1  00B4               	movwf	(??_set_subdivision^(0+128)+2)
  9151  09B2  0836               	movf	(set_subdivision@tmpX+1)^(0+128),w
  9152  09B3  0020               	movlb	0	; select bank0
  9153  09B4  00AB               	movwf	___awtoft@c+1
  9154  09B5  0021               	movlb	1	; select bank1
  9155  09B6  0835               	movf	set_subdivision@tmpX^(0+128),w
  9156  09B7  0020               	movlb	0	; select bank0
  9157  09B8  00AA               	movwf	___awtoft@c
  9158  09B9  319E  26CE  3189   	fcall	___awtoft
  9159  09BC  0020               	movlb	0	; select bank0
  9160  09BD  082C               	movf	?___awtoft+2,w
  9161  09BE  0021               	movlb	1	; select bank1
  9162  09BF  0634               	xorwf	(??_set_subdivision+2)^(0+128),w
  9163  09C0  1D03               	skipz
  9164  09C1  29CC               	goto	u6885
  9165  09C2  0020               	movlb	0	; select bank0
  9166  09C3  082B               	movf	?___awtoft+1,w
  9167  09C4  0021               	movlb	1	; select bank1
  9168  09C5  0633               	xorwf	(??_set_subdivision+1)^(0+128),w
  9169  09C6  1D03               	skipz
  9170  09C7  29CC               	goto	u6885
  9171  09C8  0020               	movlb	0	; select bank0
  9172  09C9  082A               	movf	?___awtoft,w
  9173  09CA  0021               	movlb	1	; select bank1
  9174  09CB  0632               	xorwf	??_set_subdivision^(0+128),w
  9175  09CC                     u6885:	
  9176  09CC  1903               	skipnz
  9177  09CD  0008               	return
  9178  09CE  3001               	movlw	1
  9179  09CF  0022               	movlb	2	; select bank2
  9180  09D0  00AC               	movwf	_adjust_sub_delay^(0+256)
  9181  09D1  3000               	movlw	0
  9182  09D2  00AD               	movwf	(_adjust_sub_delay^(0+256)+1)
  9183  09D3  0008               	return
  9184  09D4                     __end_of_set_subdivision:	
  9185                           ;user.c: 106: return x;
  9186                           
  9187                           
  9188                           	psect	text13
  9189  1645                     __ptext13:	
  9190 ;; *************** function ___fttol *****************
  9191 ;; Defined at:
  9192 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  f1              3    0[BANK1 ] float 
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;  lval            4    9[BANK1 ] unsigned long 
  9197 ;;  exp1            1   13[BANK1 ] unsigned char 
  9198 ;;  sign1           1    8[BANK1 ] unsigned char 
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  4    0[BANK1 ] long 
  9201 ;; Registers used:
  9202 ;;		wreg, status,2, status,0
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9208 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9209 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9210 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9211 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9212 ;;Total ram usage:       14 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:    2
  9215 ;; This function calls:
  9216 ;;		Nothing
  9217 ;; This function is called by:
  9218 ;;		_main
  9219 ;;		_set_subdivision
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           
  9224                           ;psect for function ___fttol
  9225  1645                     ___fttol:	
  9226                           
  9227                           ;incstack = 0
  9228                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9229  1645  0021               	movlb	1	; select bank1
  9230  1646  0820               	movf	___fttol@f1^(0+128),w
  9231  1647  00A4               	movwf	??___fttol^(0+128)
  9232  1648  0821               	movf	(___fttol@f1+1)^(0+128),w
  9233  1649  00A5               	movwf	(??___fttol^(0+128)+1)
  9234  164A  0822               	movf	(___fttol@f1+2)^(0+128),w
  9235  164B  00A6               	movwf	(??___fttol^(0+128)+2)
  9236  164C  1003               	clrc
  9237  164D  0D25               	rlf	(??___fttol^(0+128)+1),w
  9238  164E  0D26               	rlf	(??___fttol^(0+128)+2),w
  9239  164F  00A7               	movwf	(??___fttol+3)^(0+128)
  9240  1650  0827               	movf	(??___fttol+3)^(0+128),w
  9241  1651  00AD               	movwf	___fttol@exp1^(0+128)
  9242  1652  082D               	movf	___fttol@exp1^(0+128),w
  9243  1653  1D03               	btfss	3,2
  9244  1654  2E5E               	goto	l5578
  9245  1655  3000               	movlw	0
  9246  1656  00A3               	movwf	(?___fttol+3)^(0+128)
  9247  1657  3000               	movlw	0
  9248  1658  00A2               	movwf	(?___fttol+2)^(0+128)
  9249  1659  3000               	movlw	0
  9250  165A  00A1               	movwf	(?___fttol+1)^(0+128)
  9251  165B  3000               	movlw	0
  9252  165C  00A0               	movwf	?___fttol^(0+128)
  9253  165D  0008               	return
  9254  165E                     l5578:	
  9255  165E  0820               	movf	___fttol@f1^(0+128),w
  9256  165F  00A4               	movwf	??___fttol^(0+128)
  9257  1660  0821               	movf	(___fttol@f1+1)^(0+128),w
  9258  1661  00A5               	movwf	(??___fttol^(0+128)+1)
  9259  1662  0822               	movf	(___fttol@f1+2)^(0+128),w
  9260  1663  00A6               	movwf	(??___fttol^(0+128)+2)
  9261  1664  3017               	movlw	23
  9262  1665                     u6125:	
  9263  1665  36A6               	lsrf	(??___fttol^(0+128)+2),f
  9264  1666  0CA5               	rrf	(??___fttol^(0+128)+1),f
  9265  1667  0CA4               	rrf	??___fttol^(0+128),f
  9266  1668  0B89               	decfsz	9,f
  9267  1669  2E65               	goto	u6125
  9268  166A  0824               	movf	??___fttol^(0+128),w
  9269  166B  00A7               	movwf	(??___fttol+3)^(0+128)
  9270  166C  0827               	movf	(??___fttol+3)^(0+128),w
  9271  166D  00A8               	movwf	___fttol@sign1^(0+128)
  9272  166E  17A1               	bsf	(___fttol@f1^(0+128)+1),7
  9273  166F  30FF               	movlw	255
  9274  1670  05A0               	andwf	___fttol@f1^(0+128),f
  9275  1671  30FF               	movlw	255
  9276  1672  05A1               	andwf	(___fttol@f1+1)^(0+128),f
  9277  1673  3000               	movlw	0
  9278  1674  05A2               	andwf	(___fttol@f1+2)^(0+128),f
  9279  1675  0820               	movf	___fttol@f1^(0+128),w
  9280  1676  00A9               	movwf	___fttol@lval^(0+128)
  9281  1677  0821               	movf	(___fttol@f1+1)^(0+128),w
  9282  1678  00AA               	movwf	(___fttol@lval^(0+128)+1)
  9283  1679  0822               	movf	(___fttol@f1+2)^(0+128),w
  9284  167A  00AB               	movwf	(___fttol@lval^(0+128)+2)
  9285  167B  01AC               	clrf	(___fttol@lval^(0+128)+3)
  9286  167C  308E               	movlw	142
  9287  167D  02AD               	subwf	___fttol@exp1^(0+128),f
  9288  167E  1FAD               	btfss	___fttol@exp1^(0+128),7
  9289  167F  2E9C               	goto	l5598
  9290  1680  082D               	movf	___fttol@exp1^(0+128),w
  9291  1681  3A80               	xorlw	128
  9292  1682  3E8F               	addlw	143
  9293  1683  1803               	skipnc
  9294  1684  2E8E               	goto	l5596
  9295  1685  3000               	movlw	0
  9296  1686  00A3               	movwf	(?___fttol+3)^(0+128)
  9297  1687  3000               	movlw	0
  9298  1688  00A2               	movwf	(?___fttol+2)^(0+128)
  9299  1689  3000               	movlw	0
  9300  168A  00A1               	movwf	(?___fttol+1)^(0+128)
  9301  168B  3000               	movlw	0
  9302  168C  00A0               	movwf	?___fttol^(0+128)
  9303  168D  0008               	return
  9304  168E                     l5596:	
  9305  168E  3001               	movlw	1
  9306  168F                     u6155:	
  9307  168F  36AC               	lsrf	(___fttol@lval+3)^(0+128),f
  9308  1690  0CAB               	rrf	(___fttol@lval+2)^(0+128),f
  9309  1691  0CAA               	rrf	(___fttol@lval+1)^(0+128),f
  9310  1692  0CA9               	rrf	___fttol@lval^(0+128),f
  9311  1693  0B89               	decfsz	9,f
  9312  1694  2E8F               	goto	u6155
  9313  1695  3001               	movlw	1
  9314  1696  00A4               	movwf	??___fttol^(0+128)
  9315  1697  0824               	movf	??___fttol^(0+128),w
  9316  1698  07AD               	addwf	___fttol@exp1^(0+128),f
  9317  1699  1903               	btfsc	3,2
  9318  169A  2EB5               	goto	l5606
  9319  169B  2E8E               	goto	l5596
  9320  169C                     l5598:	
  9321  169C  3018               	movlw	24
  9322  169D  022D               	subwf	___fttol@exp1^(0+128),w
  9323  169E  1C03               	skipc
  9324  169F  2EB2               	goto	l1658
  9325  16A0  3000               	movlw	0
  9326  16A1  00A3               	movwf	(?___fttol+3)^(0+128)
  9327  16A2  3000               	movlw	0
  9328  16A3  00A2               	movwf	(?___fttol+2)^(0+128)
  9329  16A4  3000               	movlw	0
  9330  16A5  00A1               	movwf	(?___fttol+1)^(0+128)
  9331  16A6  3000               	movlw	0
  9332  16A7  00A0               	movwf	?___fttol^(0+128)
  9333  16A8  0008               	return
  9334  16A9                     l5604:	
  9335  16A9  3001               	movlw	1
  9336  16AA                     u6185:	
  9337  16AA  35A9               	lslf	___fttol@lval^(0+128),f
  9338  16AB  0DAA               	rlf	(___fttol@lval+1)^(0+128),f
  9339  16AC  0DAB               	rlf	(___fttol@lval+2)^(0+128),f
  9340  16AD  0DAC               	rlf	(___fttol@lval+3)^(0+128),f
  9341  16AE  0B89               	decfsz	9,f
  9342  16AF  2EAA               	goto	u6185
  9343  16B0  3001               	movlw	1
  9344  16B1  02AD               	subwf	___fttol@exp1^(0+128),f
  9345  16B2                     l1658:	
  9346  16B2  082D               	movf	___fttol@exp1^(0+128),w
  9347  16B3  1D03               	btfss	3,2
  9348  16B4  2EA9               	goto	l5604
  9349  16B5                     l5606:	
  9350  16B5  0828               	movf	___fttol@sign1^(0+128),w
  9351  16B6  1903               	btfsc	3,2
  9352  16B7  2EC3               	goto	l5610
  9353  16B8  09A9               	comf	___fttol@lval^(0+128),f
  9354  16B9  09AA               	comf	(___fttol@lval+1)^(0+128),f
  9355  16BA  09AB               	comf	(___fttol@lval+2)^(0+128),f
  9356  16BB  09AC               	comf	(___fttol@lval+3)^(0+128),f
  9357  16BC  0AA9               	incf	___fttol@lval^(0+128),f
  9358  16BD  1903               	skipnz
  9359  16BE  0AAA               	incf	(___fttol@lval+1)^(0+128),f
  9360  16BF  1903               	skipnz
  9361  16C0  0AAB               	incf	(___fttol@lval+2)^(0+128),f
  9362  16C1  1903               	skipnz
  9363  16C2  0AAC               	incf	(___fttol@lval+3)^(0+128),f
  9364  16C3                     l5610:	
  9365  16C3  082C               	movf	(___fttol@lval+3)^(0+128),w
  9366  16C4  00A3               	movwf	(?___fttol+3)^(0+128)
  9367  16C5  082B               	movf	(___fttol@lval+2)^(0+128),w
  9368  16C6  00A2               	movwf	(?___fttol+2)^(0+128)
  9369  16C7  082A               	movf	(___fttol@lval+1)^(0+128),w
  9370  16C8  00A1               	movwf	(?___fttol+1)^(0+128)
  9371  16C9  0829               	movf	___fttol@lval^(0+128),w
  9372  16CA  00A0               	movwf	?___fttol^(0+128)
  9373  16CB  0008               	return
  9374  16CC                     __end_of___fttol:	
  9375                           
  9376                           	psect	text14
  9377  1ECE                     __ptext14:	
  9378 ;; *************** function ___awtoft *****************
  9379 ;; Defined at:
  9380 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;  c               2   10[BANK0 ] int 
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;  sign            1   15[BANK0 ] unsigned char 
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  3   10[BANK0 ] float 
  9387 ;; Registers used:
  9388 ;;		wreg, status,2, status,0, pclath, cstack
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9394 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9395 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9397 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9398 ;;Total ram usage:        6 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; Hardware stack levels required when called:    3
  9401 ;; This function calls:
  9402 ;;		___ftpack
  9403 ;; This function is called by:
  9404 ;;		_main
  9405 ;;		_set_subdivision
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           
  9410                           ;psect for function ___awtoft
  9411  1ECE                     ___awtoft:	
  9412                           
  9413                           ;incstack = 0
  9414                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9415  1ECE  0020               	movlb	0	; select bank0
  9416  1ECF  01AF               	clrf	___awtoft@sign
  9417  1ED0  1FAB               	btfss	___awtoft@c+1,7
  9418  1ED1  2ED9               	goto	l5398
  9419  1ED2  09AA               	comf	___awtoft@c,f
  9420  1ED3  09AB               	comf	___awtoft@c+1,f
  9421  1ED4  0AAA               	incf	___awtoft@c,f
  9422  1ED5  1903               	skipnz
  9423  1ED6  0AAB               	incf	___awtoft@c+1,f
  9424  1ED7  01AF               	clrf	___awtoft@sign
  9425  1ED8  0AAF               	incf	___awtoft@sign,f
  9426  1ED9                     l5398:	
  9427  1ED9  082A               	movf	___awtoft@c,w
  9428  1EDA  00A2               	movwf	___ftpack@arg
  9429  1EDB  082B               	movf	___awtoft@c+1,w
  9430  1EDC  00A3               	movwf	___ftpack@arg+1
  9431  1EDD  01A4               	clrf	___ftpack@arg+2
  9432  1EDE  308E               	movlw	142
  9433  1EDF  00AD               	movwf	??___awtoft
  9434  1EE0  082D               	movf	??___awtoft,w
  9435  1EE1  00A5               	movwf	___ftpack@exp
  9436  1EE2  082F               	movf	___awtoft@sign,w
  9437  1EE3  00AE               	movwf	??___awtoft+1
  9438  1EE4  082E               	movf	??___awtoft+1,w
  9439  1EE5  00A6               	movwf	___ftpack@sign
  9440  1EE6  3194  24EF         	fcall	___ftpack
  9441  1EE8  0020               	movlb	0	; select bank0
  9442  1EE9  0822               	movf	?___ftpack,w
  9443  1EEA  00AA               	movwf	?___awtoft
  9444  1EEB  0823               	movf	?___ftpack+1,w
  9445  1EEC  00AB               	movwf	?___awtoft+1
  9446  1EED  0824               	movf	?___ftpack+2,w
  9447  1EEE  00AC               	movwf	?___awtoft+2
  9448  1EEF  0008               	return
  9449  1EF0                     __end_of___awtoft:	
  9450                           
  9451                           	psect	text15
  9452  135E                     __ptext15:	
  9453 ;; *************** function _read_top_tactile *****************
  9454 ;; Defined at:
  9455 ;;		line 47 in file "tactiles.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;		None
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;		None
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      void 
  9462 ;; Registers used:
  9463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9471 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9473 ;;Total ram usage:        1 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:    4
  9476 ;; This function calls:
  9477 ;;		_set_leds_top
  9478 ;;		_wait_ms
  9479 ;; This function is called by:
  9480 ;;		_main
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           
  9485                           ;psect for function _read_top_tactile
  9486  135E                     _read_top_tactile:	
  9487                           
  9488                           ;tactiles.c: 56: if (PORTDbits.RD5 == 0) {
  9489                           
  9490                           ;incstack = 0
  9491                           ; Regs used in _read_top_tactile: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9492  135E  0020               	movlb	0	; select bank0
  9493  135F  1A8F               	btfsc	15,5	;volatile
  9494  1360  2B68               	goto	l5690
  9495                           
  9496                           ;tactiles.c: 57: if (topTactile_pressed > 0) {
  9497  1361  0022               	movlb	2	; select bank2
  9498  1362  085A               	movf	_topTactile_pressed^(0+256),w
  9499  1363  1903               	btfsc	3,2
  9500  1364  2B73               	goto	l837
  9501                           
  9502                           ;tactiles.c: 58: topTactile_pressed--;
  9503  1365  3001               	movlw	1
  9504  1366  02DA               	subwf	_topTactile_pressed^(0+256),f
  9505                           
  9506                           ;tactiles.c: 59: }
  9507                           ;tactiles.c: 60: } else if (topTactile_pressed < 25) {
  9508  1367  2B73               	goto	l837
  9509  1368                     l5690:	
  9510  1368  3019               	movlw	25
  9511  1369  0022               	movlb	2	; select bank2
  9512  136A  025A               	subwf	_topTactile_pressed^(0+256),w
  9513  136B  1803               	skipnc
  9514  136C  2B73               	goto	l837
  9515                           
  9516                           ;tactiles.c: 61: topTactile_pressed++;
  9517  136D  3001               	movlw	1
  9518  136E  0020               	movlb	0	; select bank0
  9519  136F  00B4               	movwf	??_read_top_tactile
  9520  1370  0834               	movf	??_read_top_tactile,w
  9521  1371  0022               	movlb	2	; select bank2
  9522  1372  07DA               	addwf	_topTactile_pressed^(0+256),f
  9523  1373                     l837:	
  9524                           
  9525                           ;tactiles.c: 62: }
  9526                           ;tactiles.c: 67: if (topTactile_pressed == 0) {
  9527  1373  085A               	movf	_topTactile_pressed^(0+256),w
  9528  1374  1D03               	btfss	3,2
  9529  1375  0008               	return
  9530                           
  9531                           ;tactiles.c: 68: top_push_state = top_push_state + 1;
  9532  1376  0021               	movlb	1	; select bank1
  9533  1377  0857               	movf	_top_push_state^(0+128),w
  9534  1378  3E01               	addlw	1
  9535  1379  00D7               	movwf	_top_push_state^(0+128)
  9536  137A  3000               	movlw	0
  9537  137B  3D58               	addwfc	(_top_push_state+1)^(0+128),w
  9538  137C  00D8               	movwf	(_top_push_state+1)^(0+128)
  9539                           
  9540                           ;tactiles.c: 69: if (top_push_state >= 7) {
  9541  137D  0858               	movf	(_top_push_state+1)^(0+128),w
  9542  137E  3A80               	xorlw	128
  9543  137F  0020               	movlb	0	; select bank0
  9544  1380  00B4               	movwf	??_read_top_tactile
  9545  1381  3080               	movlw	128
  9546  1382  0234               	subwf	??_read_top_tactile,w
  9547  1383  1D03               	skipz
  9548  1384  2B88               	goto	u6365
  9549  1385  3007               	movlw	7
  9550  1386  0021               	movlb	1	; select bank1
  9551  1387  0257               	subwf	_top_push_state^(0+128),w
  9552  1388                     u6365:	
  9553  1388  1C03               	skipc
  9554  1389  2B8F               	goto	l5700
  9555                           
  9556                           ;tactiles.c: 70: top_push_state = 1;
  9557  138A  3001               	movlw	1
  9558  138B  0021               	movlb	1	; select bank1
  9559  138C  00D7               	movwf	_top_push_state^(0+128)
  9560  138D  3000               	movlw	0
  9561  138E  00D8               	movwf	(_top_push_state^(0+128)+1)
  9562  138F                     l5700:	
  9563                           
  9564                           ;tactiles.c: 71: }
  9565                           ;tactiles.c: 72: set_leds_top(top_push_state, 1);
  9566  138F  0021               	movlb	1	; select bank1
  9567  1390  0858               	movf	(_top_push_state+1)^(0+128),w
  9568  1391  0020               	movlb	0	; select bank0
  9569  1392  00A3               	movwf	set_leds_top@x+1
  9570  1393  0021               	movlb	1	; select bank1
  9571  1394  0857               	movf	_top_push_state^(0+128),w
  9572  1395  0020               	movlb	0	; select bank0
  9573  1396  00A2               	movwf	set_leds_top@x
  9574  1397  3001               	movlw	1
  9575  1398  00A4               	movwf	set_leds_top@ledState
  9576  1399  3000               	movlw	0
  9577  139A  00A5               	movwf	set_leds_top@ledState+1
  9578  139B  3188  2009  3193   	fcall	_set_leds_top
  9579                           
  9580                           ;tactiles.c: 73: delay_time_changed = 1;
  9581  139E  3001               	movlw	1
  9582  139F  0022               	movlb	2	; select bank2
  9583  13A0  00DD               	movwf	_delay_time_changed^(0+256)
  9584  13A1  3000               	movlw	0
  9585  13A2  00DE               	movwf	(_delay_time_changed^(0+256)+1)
  9586  13A3                     l841:	
  9587                           ;tactiles.c: 76: while (PORTDbits.RD5 == 0) {
  9588                           
  9589  13A3  0020               	movlb	0	; select bank0
  9590  13A4  1E8F               	btfss	15,5	;volatile
  9591  13A5  2BA3               	goto	l841
  9592                           
  9593                           ;tactiles.c: 77: }
  9594                           ;tactiles.c: 78: wait_ms(20);
  9595  13A6  3014               	movlw	20
  9596  13A7  00AE               	movwf	wait_ms@timeSec
  9597  13A8  3000               	movlw	0
  9598  13A9  00AF               	movwf	wait_ms@timeSec+1
  9599  13AA  319F  27CE         	fcall	_wait_ms
  9600  13AC  0008               	return
  9601  13AD                     __end_of_read_top_tactile:	
  9602                           
  9603                           	psect	text16
  9604  1286                     __ptext16:	
  9605 ;; *************** function _read_bottom_tactile *****************
  9606 ;; Defined at:
  9607 ;;		line 17 in file "tactiles.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;		None
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;		None
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  1    wreg      void 
  9614 ;; Registers used:
  9615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9623 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9624 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9625 ;;Total ram usage:        1 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:    4
  9628 ;; This function calls:
  9629 ;;		_set_leds_bottom
  9630 ;;		_wait_ms
  9631 ;; This function is called by:
  9632 ;;		_main
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           
  9637                           ;psect for function _read_bottom_tactile
  9638  1286                     _read_bottom_tactile:	
  9639                           
  9640                           ;tactiles.c: 25: if (PORTDbits.RD6 == 0) {
  9641                           
  9642                           ;incstack = 0
  9643                           ; Regs used in _read_bottom_tactile: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9644  1286  0020               	movlb	0	; select bank0
  9645  1287  1B0F               	btfsc	15,6	;volatile
  9646  1288  2A90               	goto	l5670
  9647                           
  9648                           ;tactiles.c: 26: if (bottomTactile_pressed > 0) {
  9649  1289  0022               	movlb	2	; select bank2
  9650  128A  0852               	movf	_bottomTactile_pressed^(0+256),w
  9651  128B  1903               	btfsc	3,2
  9652  128C  2A9B               	goto	l825
  9653                           
  9654                           ;tactiles.c: 27: bottomTactile_pressed--;
  9655  128D  3001               	movlw	1
  9656  128E  02D2               	subwf	_bottomTactile_pressed^(0+256),f
  9657                           
  9658                           ;tactiles.c: 28: }
  9659                           ;tactiles.c: 29: } else if (bottomTactile_pressed < 25) {
  9660  128F  2A9B               	goto	l825
  9661  1290                     l5670:	
  9662  1290  3019               	movlw	25
  9663  1291  0022               	movlb	2	; select bank2
  9664  1292  0252               	subwf	_bottomTactile_pressed^(0+256),w
  9665  1293  1803               	skipnc
  9666  1294  2A9B               	goto	l825
  9667                           
  9668                           ;tactiles.c: 30: bottomTactile_pressed++;
  9669  1295  3001               	movlw	1
  9670  1296  0020               	movlb	0	; select bank0
  9671  1297  00B4               	movwf	??_read_bottom_tactile
  9672  1298  0834               	movf	??_read_bottom_tactile,w
  9673  1299  0022               	movlb	2	; select bank2
  9674  129A  07D2               	addwf	_bottomTactile_pressed^(0+256),f
  9675  129B                     l825:	
  9676                           
  9677                           ;tactiles.c: 31: }
  9678                           ;tactiles.c: 34: if (bottomTactile_pressed == 0) {
  9679  129B  0852               	movf	_bottomTactile_pressed^(0+256),w
  9680  129C  1D03               	btfss	3,2
  9681  129D  0008               	return
  9682                           
  9683                           ;tactiles.c: 35: bottom_push_state = bottom_push_state + 1;
  9684  129E  0021               	movlb	1	; select bank1
  9685  129F  0851               	movf	_bottom_push_state^(0+128),w
  9686  12A0  3E01               	addlw	1
  9687  12A1  00D1               	movwf	_bottom_push_state^(0+128)
  9688  12A2  3000               	movlw	0
  9689  12A3  3D52               	addwfc	(_bottom_push_state+1)^(0+128),w
  9690  12A4  00D2               	movwf	(_bottom_push_state+1)^(0+128)
  9691                           
  9692                           ;tactiles.c: 36: if (bottom_push_state > 6) {
  9693  12A5  0852               	movf	(_bottom_push_state+1)^(0+128),w
  9694  12A6  3A80               	xorlw	128
  9695  12A7  0020               	movlb	0	; select bank0
  9696  12A8  00B4               	movwf	??_read_bottom_tactile
  9697  12A9  3080               	movlw	128
  9698  12AA  0234               	subwf	??_read_bottom_tactile,w
  9699  12AB  1D03               	skipz
  9700  12AC  2AB0               	goto	u6305
  9701  12AD  3007               	movlw	7
  9702  12AE  0021               	movlb	1	; select bank1
  9703  12AF  0251               	subwf	_bottom_push_state^(0+128),w
  9704  12B0                     u6305:	
  9705  12B0  1C03               	skipc
  9706  12B1  2AB7               	goto	l5680
  9707                           
  9708                           ;tactiles.c: 37: bottom_push_state = 1;
  9709  12B2  3001               	movlw	1
  9710  12B3  0021               	movlb	1	; select bank1
  9711  12B4  00D1               	movwf	_bottom_push_state^(0+128)
  9712  12B5  3000               	movlw	0
  9713  12B6  00D2               	movwf	(_bottom_push_state^(0+128)+1)
  9714  12B7                     l5680:	
  9715                           
  9716                           ;tactiles.c: 38: }
  9717                           ;tactiles.c: 39: set_leds_bottom(bottom_push_state);
  9718  12B7  0021               	movlb	1	; select bank1
  9719  12B8  0852               	movf	(_bottom_push_state+1)^(0+128),w
  9720  12B9  0020               	movlb	0	; select bank0
  9721  12BA  00A3               	movwf	set_leds_bottom@x+1
  9722  12BB  0021               	movlb	1	; select bank1
  9723  12BC  0851               	movf	_bottom_push_state^(0+128),w
  9724  12BD  0020               	movlb	0	; select bank0
  9725  12BE  00A2               	movwf	set_leds_bottom@x
  9726  12BF  3190  2016  3192   	fcall	_set_leds_bottom
  9727  12C2                     l829:	
  9728                           ;tactiles.c: 41: while (PORTDbits.RD6 == 0) {
  9729                           
  9730  12C2  0020               	movlb	0	; select bank0
  9731  12C3  1F0F               	btfss	15,6	;volatile
  9732  12C4  2AC2               	goto	l829
  9733                           
  9734                           ;tactiles.c: 42: }
  9735                           ;tactiles.c: 43: wait_ms(20);
  9736  12C5  3014               	movlw	20
  9737  12C6  00AE               	movwf	wait_ms@timeSec
  9738  12C7  3000               	movlw	0
  9739  12C8  00AF               	movwf	wait_ms@timeSec+1
  9740  12C9  319F  27CE         	fcall	_wait_ms
  9741  12CB  0008               	return
  9742  12CC                     __end_of_read_bottom_tactile:	
  9743                           
  9744                           	psect	text17
  9745  108E                     __ptext17:	
  9746 ;; *************** function _modulation *****************
  9747 ;; Defined at:
  9748 ;;		line 181 in file "user.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;  x               2   23[BANK0 ] int 
  9751 ;;  y               2   25[BANK0 ] int 
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;		None
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  2   23[BANK0 ] int 
  9756 ;; Registers used:
  9757 ;;		wreg, status,2, status,0, pclath, cstack
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9763 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9765 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9766 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9767 ;;Total ram usage:       12 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; Hardware stack levels required when called:    3
  9770 ;; This function calls:
  9771 ;;		___aldiv
  9772 ;;		___wmul
  9773 ;; This function is called by:
  9774 ;;		_main
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           
  9779                           ;psect for function _modulation
  9780  108E                     _modulation:	
  9781                           
  9782                           ;user.c: 183: x = (127500 + (y * x)) / 1000;
  9783                           
  9784                           ;incstack = 0
  9785                           ; Regs used in _modulation: [wreg+status,2+status,0+pclath+cstack]
  9786  108E  3000               	movlw	0
  9787  108F  0020               	movlb	0	; select bank0
  9788  1090  00AB               	movwf	___aldiv@divisor+3
  9789  1091  3000               	movlw	0
  9790  1092  00AA               	movwf	___aldiv@divisor+2
  9791  1093  3003               	movlw	3
  9792  1094  00A9               	movwf	___aldiv@divisor+1
  9793  1095  30E8               	movlw	232
  9794  1096  00A8               	movwf	___aldiv@divisor
  9795  1097  300C               	movlw	12
  9796  1098  00BB               	movwf	??_modulation
  9797  1099  30F2               	movlw	242
  9798  109A  00BC               	movwf	??_modulation+1
  9799  109B  3001               	movlw	1
  9800  109C  00BD               	movwf	??_modulation+2
  9801  109D  3000               	movlw	0
  9802  109E  00BE               	movwf	??_modulation+3
  9803  109F  083A               	movf	modulation@y+1,w
  9804  10A0  00A3               	movwf	___wmul@multiplier+1
  9805  10A1  0839               	movf	modulation@y,w
  9806  10A2  00A2               	movwf	___wmul@multiplier
  9807  10A3  0838               	movf	modulation@x+1,w
  9808  10A4  00A5               	movwf	___wmul@multiplicand+1
  9809  10A5  0837               	movf	modulation@x,w
  9810  10A6  00A4               	movwf	___wmul@multiplicand
  9811  10A7  319E  2692  3190   	fcall	___wmul
  9812  10AA  0020               	movlb	0	; select bank0
  9813  10AB  0822               	movf	?___wmul,w
  9814  10AC  00BF               	movwf	??_modulation+4
  9815  10AD  0823               	movf	?___wmul+1,w
  9816  10AE  00C0               	movwf	??_modulation+5
  9817  10AF  3000               	movlw	0
  9818  10B0  1BC0               	btfsc	??_modulation+5,7
  9819  10B1  30FF               	movlw	255
  9820  10B2  00C1               	movwf	??_modulation+6
  9821  10B3  00C2               	movwf	??_modulation+7
  9822  10B4  083F               	movf	??_modulation+4,w
  9823  10B5  07BB               	addwf	??_modulation,f
  9824  10B6  0840               	movf	??_modulation+5,w
  9825  10B7  3DBC               	addwfc	??_modulation+1,f
  9826  10B8  0841               	movf	??_modulation+6,w
  9827  10B9  3DBD               	addwfc	??_modulation+2,f
  9828  10BA  0842               	movf	??_modulation+7,w
  9829  10BB  3DBE               	addwfc	??_modulation+3,f
  9830  10BC  083E               	movf	??_modulation+3,w
  9831  10BD  00AF               	movwf	___aldiv@dividend+3
  9832  10BE  083D               	movf	??_modulation+2,w
  9833  10BF  00AE               	movwf	___aldiv@dividend+2
  9834  10C0  083C               	movf	??_modulation+1,w
  9835  10C1  00AD               	movwf	___aldiv@dividend+1
  9836  10C2  083B               	movf	??_modulation,w
  9837  10C3  00AC               	movwf	___aldiv@dividend
  9838  10C4  3195  25C3         	fcall	___aldiv
  9839  10C6  0020               	movlb	0	; select bank0
  9840  10C7  0829               	movf	?___aldiv+1,w
  9841  10C8  00B8               	movwf	modulation@x+1
  9842  10C9  0828               	movf	?___aldiv,w
  9843  10CA  00B7               	movwf	modulation@x
  9844                           
  9845                           ;user.c: 184: return x;
  9846  10CB  0008               	return
  9847  10CC                     __end_of_modulation:	
  9848                           
  9849                           	psect	text18
  9850  1E92                     __ptext18:	
  9851 ;; *************** function ___wmul *****************
  9852 ;; Defined at:
  9853 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  multiplier      2    2[BANK0 ] unsigned int 
  9856 ;;  multiplicand    2    4[BANK0 ] unsigned int 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  product         2    6[BANK0 ] unsigned int 
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  2    2[BANK0 ] unsigned int 
  9861 ;; Registers used:
  9862 ;;		wreg, status,2, status,0
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9868 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9869 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9871 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9872 ;;Total ram usage:        6 bytes
  9873 ;; Hardware stack levels used:    1
  9874 ;; Hardware stack levels required when called:    2
  9875 ;; This function calls:
  9876 ;;		Nothing
  9877 ;; This function is called by:
  9878 ;;		_modulation
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882                           
  9883                           ;psect for function ___wmul
  9884  1E92                     ___wmul:	
  9885                           
  9886                           ;incstack = 0
  9887                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9888  1E92  0020               	movlb	0	; select bank0
  9889  1E93  01A6               	clrf	___wmul@product
  9890  1E94  01A7               	clrf	___wmul@product+1
  9891  1E95                     l5338:	
  9892  1E95  1C22               	btfss	___wmul@multiplier,0
  9893  1E96  2E9B               	goto	l1406
  9894  1E97  0824               	movf	___wmul@multiplicand,w
  9895  1E98  07A6               	addwf	___wmul@product,f
  9896  1E99  0825               	movf	___wmul@multiplicand+1,w
  9897  1E9A  3DA7               	addwfc	___wmul@product+1,f
  9898  1E9B                     l1406:	
  9899  1E9B  3001               	movlw	1
  9900  1E9C                     u5535:	
  9901  1E9C  35A4               	lslf	___wmul@multiplicand,f
  9902  1E9D  0DA5               	rlf	___wmul@multiplicand+1,f
  9903  1E9E  0B89               	decfsz	9,f
  9904  1E9F  2E9C               	goto	u5535
  9905  1EA0  3001               	movlw	1
  9906  1EA1                     u5545:	
  9907  1EA1  36A3               	lsrf	___wmul@multiplier+1,f
  9908  1EA2  0CA2               	rrf	___wmul@multiplier,f
  9909  1EA3  0B89               	decfsz	9,f
  9910  1EA4  2EA1               	goto	u5545
  9911  1EA5  0822               	movf	___wmul@multiplier,w
  9912  1EA6  0423               	iorwf	___wmul@multiplier+1,w
  9913  1EA7  1D03               	btfss	3,2
  9914  1EA8  2E95               	goto	l5338
  9915  1EA9  0827               	movf	___wmul@product+1,w
  9916  1EAA  00A3               	movwf	?___wmul+1
  9917  1EAB  0826               	movf	___wmul@product,w
  9918  1EAC  00A2               	movwf	?___wmul
  9919  1EAD  0008               	return
  9920  1EAE                     __end_of___wmul:	
  9921                           
  9922                           	psect	text19
  9923  15C3                     __ptext19:	
  9924 ;; *************** function ___aldiv *****************
  9925 ;; Defined at:
  9926 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;  divisor         4    8[BANK0 ] long 
  9929 ;;  dividend        4   12[BANK0 ] long 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  quotient        4   19[BANK0 ] long 
  9932 ;;  sign            1   18[BANK0 ] unsigned char 
  9933 ;;  counter         1   17[BANK0 ] unsigned char 
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  4    8[BANK0 ] long 
  9936 ;; Registers used:
  9937 ;;		wreg, status,2, status,0
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9943 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9944 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9946 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9947 ;;Total ram usage:       15 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:    2
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		_modulation
  9954 ;;		_updateSwitchTap
  9955 ;;		_updateSwitch1
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           
  9960                           ;psect for function ___aldiv
  9961  15C3                     ___aldiv:	
  9962                           
  9963                           ;incstack = 0
  9964                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9965  15C3  0020               	movlb	0	; select bank0
  9966  15C4  01B2               	clrf	___aldiv@sign
  9967  15C5  1FAB               	btfss	___aldiv@divisor+3,7
  9968  15C6  2DD4               	goto	l1461
  9969  15C7  09A8               	comf	___aldiv@divisor,f
  9970  15C8  09A9               	comf	___aldiv@divisor+1,f
  9971  15C9  09AA               	comf	___aldiv@divisor+2,f
  9972  15CA  09AB               	comf	___aldiv@divisor+3,f
  9973  15CB  0AA8               	incf	___aldiv@divisor,f
  9974  15CC  1903               	skipnz
  9975  15CD  0AA9               	incf	___aldiv@divisor+1,f
  9976  15CE  1903               	skipnz
  9977  15CF  0AAA               	incf	___aldiv@divisor+2,f
  9978  15D0  1903               	skipnz
  9979  15D1  0AAB               	incf	___aldiv@divisor+3,f
  9980  15D2  01B2               	clrf	___aldiv@sign
  9981  15D3  0AB2               	incf	___aldiv@sign,f
  9982  15D4                     l1461:	
  9983  15D4  1FAF               	btfss	___aldiv@dividend+3,7
  9984  15D5  2DE5               	goto	l5360
  9985  15D6  09AC               	comf	___aldiv@dividend,f
  9986  15D7  09AD               	comf	___aldiv@dividend+1,f
  9987  15D8  09AE               	comf	___aldiv@dividend+2,f
  9988  15D9  09AF               	comf	___aldiv@dividend+3,f
  9989  15DA  0AAC               	incf	___aldiv@dividend,f
  9990  15DB  1903               	skipnz
  9991  15DC  0AAD               	incf	___aldiv@dividend+1,f
  9992  15DD  1903               	skipnz
  9993  15DE  0AAE               	incf	___aldiv@dividend+2,f
  9994  15DF  1903               	skipnz
  9995  15E0  0AAF               	incf	___aldiv@dividend+3,f
  9996  15E1  3001               	movlw	1
  9997  15E2  00B0               	movwf	??___aldiv
  9998  15E3  0830               	movf	??___aldiv,w
  9999  15E4  06B2               	xorwf	___aldiv@sign,f
 10000  15E5                     l5360:	
 10001  15E5  3000               	movlw	0
 10002  15E6  00B6               	movwf	___aldiv@quotient+3
 10003  15E7  3000               	movlw	0
 10004  15E8  00B5               	movwf	___aldiv@quotient+2
 10005  15E9  3000               	movlw	0
 10006  15EA  00B4               	movwf	___aldiv@quotient+1
 10007  15EB  3000               	movlw	0
 10008  15EC  00B3               	movwf	___aldiv@quotient
 10009  15ED  082B               	movf	___aldiv@divisor+3,w
 10010  15EE  042A               	iorwf	___aldiv@divisor+2,w
 10011  15EF  0429               	iorwf	___aldiv@divisor+1,w
 10012  15F0  0428               	iorwf	___aldiv@divisor,w
 10013  15F1  1903               	skipnz
 10014  15F2  2E2E               	goto	l5382
 10015  15F3  01B1               	clrf	___aldiv@counter
 10016  15F4  0AB1               	incf	___aldiv@counter,f
 10017  15F5                     l5368:	
 10018  15F5  1BAB               	btfsc	___aldiv@divisor+3,7
 10019  15F6  2E03               	goto	l5370
 10020  15F7  3001               	movlw	1
 10021  15F8                     u5595:	
 10022  15F8  35A8               	lslf	___aldiv@divisor,f
 10023  15F9  0DA9               	rlf	___aldiv@divisor+1,f
 10024  15FA  0DAA               	rlf	___aldiv@divisor+2,f
 10025  15FB  0DAB               	rlf	___aldiv@divisor+3,f
 10026  15FC  0B89               	decfsz	9,f
 10027  15FD  2DF8               	goto	u5595
 10028  15FE  3001               	movlw	1
 10029  15FF  00B0               	movwf	??___aldiv
 10030  1600  0830               	movf	??___aldiv,w
 10031  1601  07B1               	addwf	___aldiv@counter,f
 10032  1602  2DF5               	goto	l5368
 10033  1603                     l5370:	
 10034  1603  3001               	movlw	1
 10035  1604                     u5615:	
 10036  1604  35B3               	lslf	___aldiv@quotient,f
 10037  1605  0DB4               	rlf	___aldiv@quotient+1,f
 10038  1606  0DB5               	rlf	___aldiv@quotient+2,f
 10039  1607  0DB6               	rlf	___aldiv@quotient+3,f
 10040  1608  0B89               	decfsz	9,f
 10041  1609  2E04               	goto	u5615
 10042  160A  082B               	movf	___aldiv@divisor+3,w
 10043  160B  022F               	subwf	___aldiv@dividend+3,w
 10044  160C  1D03               	skipz
 10045  160D  2E18               	goto	u5625
 10046  160E  082A               	movf	___aldiv@divisor+2,w
 10047  160F  022E               	subwf	___aldiv@dividend+2,w
 10048  1610  1D03               	skipz
 10049  1611  2E18               	goto	u5625
 10050  1612  0829               	movf	___aldiv@divisor+1,w
 10051  1613  022D               	subwf	___aldiv@dividend+1,w
 10052  1614  1D03               	skipz
 10053  1615  2E18               	goto	u5625
 10054  1616  0828               	movf	___aldiv@divisor,w
 10055  1617  022C               	subwf	___aldiv@dividend,w
 10056  1618                     u5625:	
 10057  1618  1C03               	skipc
 10058  1619  2E23               	goto	l5378
 10059  161A  0828               	movf	___aldiv@divisor,w
 10060  161B  02AC               	subwf	___aldiv@dividend,f
 10061  161C  0829               	movf	___aldiv@divisor+1,w
 10062  161D  3BAD               	subwfb	___aldiv@dividend+1,f
 10063  161E  082A               	movf	___aldiv@divisor+2,w
 10064  161F  3BAE               	subwfb	___aldiv@dividend+2,f
 10065  1620  082B               	movf	___aldiv@divisor+3,w
 10066  1621  3BAF               	subwfb	___aldiv@dividend+3,f
 10067  1622  1433               	bsf	___aldiv@quotient,0
 10068  1623                     l5378:	
 10069  1623  3001               	movlw	1
 10070  1624                     u5635:	
 10071  1624  36AB               	lsrf	___aldiv@divisor+3,f
 10072  1625  0CAA               	rrf	___aldiv@divisor+2,f
 10073  1626  0CA9               	rrf	___aldiv@divisor+1,f
 10074  1627  0CA8               	rrf	___aldiv@divisor,f
 10075  1628  0B89               	decfsz	9,f
 10076  1629  2E24               	goto	u5635
 10077  162A  3001               	movlw	1
 10078  162B  02B1               	subwf	___aldiv@counter,f
 10079  162C  1D03               	btfss	3,2
 10080  162D  2E03               	goto	l5370
 10081  162E                     l5382:	
 10082  162E  0832               	movf	___aldiv@sign,w
 10083  162F  1903               	btfsc	3,2
 10084  1630  2E3C               	goto	l5386
 10085  1631  09B3               	comf	___aldiv@quotient,f
 10086  1632  09B4               	comf	___aldiv@quotient+1,f
 10087  1633  09B5               	comf	___aldiv@quotient+2,f
 10088  1634  09B6               	comf	___aldiv@quotient+3,f
 10089  1635  0AB3               	incf	___aldiv@quotient,f
 10090  1636  1903               	skipnz
 10091  1637  0AB4               	incf	___aldiv@quotient+1,f
 10092  1638  1903               	skipnz
 10093  1639  0AB5               	incf	___aldiv@quotient+2,f
 10094  163A  1903               	skipnz
 10095  163B  0AB6               	incf	___aldiv@quotient+3,f
 10096  163C                     l5386:	
 10097  163C  0836               	movf	___aldiv@quotient+3,w
 10098  163D  00AB               	movwf	?___aldiv+3
 10099  163E  0835               	movf	___aldiv@quotient+2,w
 10100  163F  00AA               	movwf	?___aldiv+2
 10101  1640  0834               	movf	___aldiv@quotient+1,w
 10102  1641  00A9               	movwf	?___aldiv+1
 10103  1642  0833               	movf	___aldiv@quotient,w
 10104  1643  00A8               	movwf	?___aldiv
 10105  1644  0008               	return
 10106  1645                     __end_of___aldiv:	
 10107                           
 10108                           	psect	text20
 10109  16CC                     __ptext20:	
 10110 ;; *************** function _map *****************
 10111 ;; Defined at:
 10112 ;;		line 171 in file "user.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  x               3   55[BANK0 ] float 
 10115 ;;  in_min          3   58[BANK0 ] float 
 10116 ;;  in_max          3   61[BANK0 ] float 
 10117 ;;  out_min         3   64[BANK0 ] float 
 10118 ;;  out_max         3   67[BANK0 ] float 
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;		None
 10121 ;; Return value:  Size  Location     Type
 10122 ;;                  3   55[BANK0 ] float 
 10123 ;; Registers used:
 10124 ;;		wreg, status,2, status,0, pclath, cstack
 10125 ;; Tracked objects:
 10126 ;;		On entry : 0/0
 10127 ;;		On exit  : 0/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10130 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10131 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10133 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10134 ;;Total ram usage:       18 bytes
 10135 ;; Hardware stack levels used:    1
 10136 ;; Hardware stack levels required when called:    4
 10137 ;; This function calls:
 10138 ;;		___ftadd
 10139 ;;		___ftdiv
 10140 ;;		___ftmul
 10141 ;;		___ftneg
 10142 ;; This function is called by:
 10143 ;;		_main
 10144 ;; This function uses a non-reentrant model
 10145 ;;
 10146                           
 10147                           
 10148                           ;psect for function _map
 10149  16CC                     _map:	
 10150                           
 10151                           ;user.c: 172: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 10152                           
 10153                           ;incstack = 0
 10154                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
 10155  16CC  0020               	movlb	0	; select bank0
 10156  16CD  085D               	movf	map@in_max,w
 10157  16CE  00AA               	movwf	___ftadd@f1
 10158  16CF  085E               	movf	map@in_max+1,w
 10159  16D0  00AB               	movwf	___ftadd@f1+1
 10160  16D1  085F               	movf	map@in_max+2,w
 10161  16D2  00AC               	movwf	___ftadd@f1+2
 10162  16D3  085A               	movf	map@in_min,w
 10163  16D4  00A2               	movwf	___ftneg@f1
 10164  16D5  085B               	movf	map@in_min+1,w
 10165  16D6  00A3               	movwf	___ftneg@f1+1
 10166  16D7  085C               	movf	map@in_min+2,w
 10167  16D8  00A4               	movwf	___ftneg@f1+2
 10168  16D9  3188  2000  3196   	fcall	___ftneg
 10169  16DC  0020               	movlb	0	; select bank0
 10170  16DD  0822               	movf	?___ftneg,w
 10171  16DE  00AD               	movwf	___ftadd@f2
 10172  16DF  0823               	movf	?___ftneg+1,w
 10173  16E0  00AE               	movwf	___ftadd@f2+1
 10174  16E1  0824               	movf	?___ftneg+2,w
 10175  16E2  00AF               	movwf	___ftadd@f2+2
 10176  16E3  318A  22B8  3196   	fcall	___ftadd
 10177  16E6  0020               	movlb	0	; select bank0
 10178  16E7  082A               	movf	?___ftadd,w
 10179  16E8  00C7               	movwf	___ftdiv@f2
 10180  16E9  082B               	movf	?___ftadd+1,w
 10181  16EA  00C8               	movwf	___ftdiv@f2+1
 10182  16EB  082C               	movf	?___ftadd+2,w
 10183  16EC  00C9               	movwf	___ftdiv@f2+2
 10184  16ED  0863               	movf	map@out_max,w
 10185  16EE  00AA               	movwf	___ftadd@f1
 10186  16EF  0864               	movf	map@out_max+1,w
 10187  16F0  00AB               	movwf	___ftadd@f1+1
 10188  16F1  0865               	movf	map@out_max+2,w
 10189  16F2  00AC               	movwf	___ftadd@f1+2
 10190  16F3  0860               	movf	map@out_min,w
 10191  16F4  00A2               	movwf	___ftneg@f1
 10192  16F5  0861               	movf	map@out_min+1,w
 10193  16F6  00A3               	movwf	___ftneg@f1+1
 10194  16F7  0862               	movf	map@out_min+2,w
 10195  16F8  00A4               	movwf	___ftneg@f1+2
 10196  16F9  3188  2000  3196   	fcall	___ftneg
 10197  16FC  0020               	movlb	0	; select bank0
 10198  16FD  0822               	movf	?___ftneg,w
 10199  16FE  00AD               	movwf	___ftadd@f2
 10200  16FF  0823               	movf	?___ftneg+1,w
 10201  1700  00AE               	movwf	___ftadd@f2+1
 10202  1701  0824               	movf	?___ftneg+2,w
 10203  1702  00AF               	movwf	___ftadd@f2+2
 10204  1703  318A  22B8  3196   	fcall	___ftadd
 10205  1706  0020               	movlb	0	; select bank0
 10206  1707  082A               	movf	?___ftadd,w
 10207  1708  00B7               	movwf	___ftmul@f1
 10208  1709  082B               	movf	?___ftadd+1,w
 10209  170A  00B8               	movwf	___ftmul@f1+1
 10210  170B  082C               	movf	?___ftadd+2,w
 10211  170C  00B9               	movwf	___ftmul@f1+2
 10212  170D  0857               	movf	map@x,w
 10213  170E  00AA               	movwf	___ftadd@f1
 10214  170F  0858               	movf	map@x+1,w
 10215  1710  00AB               	movwf	___ftadd@f1+1
 10216  1711  0859               	movf	map@x+2,w
 10217  1712  00AC               	movwf	___ftadd@f1+2
 10218  1713  085A               	movf	map@in_min,w
 10219  1714  00A2               	movwf	___ftneg@f1
 10220  1715  085B               	movf	map@in_min+1,w
 10221  1716  00A3               	movwf	___ftneg@f1+1
 10222  1717  085C               	movf	map@in_min+2,w
 10223  1718  00A4               	movwf	___ftneg@f1+2
 10224  1719  3188  2000  3196   	fcall	___ftneg
 10225  171C  0020               	movlb	0	; select bank0
 10226  171D  0822               	movf	?___ftneg,w
 10227  171E  00AD               	movwf	___ftadd@f2
 10228  171F  0823               	movf	?___ftneg+1,w
 10229  1720  00AE               	movwf	___ftadd@f2+1
 10230  1721  0824               	movf	?___ftneg+2,w
 10231  1722  00AF               	movwf	___ftadd@f2+2
 10232  1723  318A  22B8  3196   	fcall	___ftadd
 10233  1726  0020               	movlb	0	; select bank0
 10234  1727  082A               	movf	?___ftadd,w
 10235  1728  00BA               	movwf	___ftmul@f2
 10236  1729  082B               	movf	?___ftadd+1,w
 10237  172A  00BB               	movwf	___ftmul@f2+1
 10238  172B  082C               	movf	?___ftadd+2,w
 10239  172C  00BC               	movwf	___ftmul@f2+2
 10240  172D  3188  205D  3196   	fcall	___ftmul
 10241  1730  0020               	movlb	0	; select bank0
 10242  1731  0837               	movf	?___ftmul,w
 10243  1732  00CA               	movwf	___ftdiv@f1
 10244  1733  0838               	movf	?___ftmul+1,w
 10245  1734  00CB               	movwf	___ftdiv@f1+1
 10246  1735  0839               	movf	?___ftmul+2,w
 10247  1736  00CC               	movwf	___ftdiv@f1+2
 10248  1737  3197  2757  3196   	fcall	___ftdiv
 10249  173A  0020               	movlb	0	; select bank0
 10250  173B  0847               	movf	?___ftdiv,w
 10251  173C  00E6               	movwf	_map$2230
 10252  173D  0848               	movf	?___ftdiv+1,w
 10253  173E  00E7               	movwf	_map$2230+1
 10254  173F  0849               	movf	?___ftdiv+2,w
 10255  1740  00E8               	movwf	_map$2230+2
 10256                           
 10257                           ;user.c: 172: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 10258  1741  0860               	movf	map@out_min,w
 10259  1742  00AA               	movwf	___ftadd@f1
 10260  1743  0861               	movf	map@out_min+1,w
 10261  1744  00AB               	movwf	___ftadd@f1+1
 10262  1745  0862               	movf	map@out_min+2,w
 10263  1746  00AC               	movwf	___ftadd@f1+2
 10264  1747  0866               	movf	_map$2230,w
 10265  1748  00AD               	movwf	___ftadd@f2
 10266  1749  0867               	movf	_map$2230+1,w
 10267  174A  00AE               	movwf	___ftadd@f2+1
 10268  174B  0868               	movf	_map$2230+2,w
 10269  174C  00AF               	movwf	___ftadd@f2+2
 10270  174D  318A  22B8         	fcall	___ftadd
 10271  174F  0020               	movlb	0	; select bank0
 10272  1750  082A               	movf	?___ftadd,w
 10273  1751  00D7               	movwf	?_map
 10274  1752  082B               	movf	?___ftadd+1,w
 10275  1753  00D8               	movwf	?_map+1
 10276  1754  082C               	movf	?___ftadd+2,w
 10277  1755  00D9               	movwf	?_map+2
 10278  1756  0008               	return
 10279  1757                     __end_of_map:	
 10280                           
 10281                           	psect	text21
 10282  0800                     __ptext21:	
 10283 ;; *************** function ___ftneg *****************
 10284 ;; Defined at:
 10285 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  f1              3    2[BANK0 ] float 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;		None
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  3    2[BANK0 ] float 
 10292 ;; Registers used:
 10293 ;;		wreg
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10299 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10302 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10303 ;;Total ram usage:        3 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:    2
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_map
 10310 ;;		_scalePotValue
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           
 10315                           ;psect for function ___ftneg
 10316  0800                     ___ftneg:	
 10317                           
 10318                           ;incstack = 0
 10319                           ; Regs used in ___ftneg: [wreg]
 10320  0800  0020               	movlb	0	; select bank0
 10321  0801  0824               	movf	___ftneg@f1+2,w
 10322  0802  0423               	iorwf	___ftneg@f1+1,w
 10323  0803  0422               	iorwf	___ftneg@f1,w
 10324  0804  1903               	skipnz
 10325  0805  0008               	return
 10326  0806  3080               	movlw	128
 10327  0807  06A4               	xorwf	___ftneg@f1+2,f
 10328  0808  0008               	return
 10329  0809                     __end_of___ftneg:	
 10330                           
 10331                           	psect	text22
 10332  085D                     __ptext22:	
 10333 ;; *************** function ___ftmul *****************
 10334 ;; Defined at:
 10335 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;  f1              3   23[BANK0 ] float 
 10338 ;;  f2              3   26[BANK0 ] float 
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;  f3_as_produc    3   34[BANK0 ] unsigned um
 10341 ;;  sign            1   38[BANK0 ] unsigned char 
 10342 ;;  cntr            1   37[BANK0 ] unsigned char 
 10343 ;;  exp             1   33[BANK0 ] unsigned char 
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  3   23[BANK0 ] float 
 10346 ;; Registers used:
 10347 ;;		wreg, status,2, status,0, pclath, cstack
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10353 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10354 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10355 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10356 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10357 ;;Total ram usage:       16 bytes
 10358 ;; Hardware stack levels used:    1
 10359 ;; Hardware stack levels required when called:    3
 10360 ;; This function calls:
 10361 ;;		___ftpack
 10362 ;; This function is called by:
 10363 ;;		_set_subdivision
 10364 ;;		_map
 10365 ;;		_scalePotValue
 10366 ;; This function uses a non-reentrant model
 10367 ;;
 10368                           
 10369                           
 10370                           ;psect for function ___ftmul
 10371  085D                     ___ftmul:	
 10372                           
 10373                           ;incstack = 0
 10374                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 10375  085D  0020               	movlb	0	; select bank0
 10376  085E  0837               	movf	___ftmul@f1,w
 10377  085F  00BD               	movwf	??___ftmul
 10378  0860  0838               	movf	___ftmul@f1+1,w
 10379  0861  00BE               	movwf	??___ftmul+1
 10380  0862  0839               	movf	___ftmul@f1+2,w
 10381  0863  00BF               	movwf	??___ftmul+2
 10382  0864  1003               	clrc
 10383  0865  0D3E               	rlf	??___ftmul+1,w
 10384  0866  0D3F               	rlf	??___ftmul+2,w
 10385  0867  00C0               	movwf	??___ftmul+3
 10386  0868  0840               	movf	??___ftmul+3,w
 10387  0869  00C1               	movwf	___ftmul@exp
 10388  086A  0841               	movf	___ftmul@exp,w
 10389  086B  1D03               	btfss	3,2
 10390  086C  2874               	goto	l5520
 10391  086D  3000               	movlw	0
 10392  086E  00B7               	movwf	?___ftmul
 10393  086F  3000               	movlw	0
 10394  0870  00B8               	movwf	?___ftmul+1
 10395  0871  3000               	movlw	0
 10396  0872  00B9               	movwf	?___ftmul+2
 10397  0873  0008               	return
 10398  0874                     l5520:	
 10399  0874  083A               	movf	___ftmul@f2,w
 10400  0875  00BD               	movwf	??___ftmul
 10401  0876  083B               	movf	___ftmul@f2+1,w
 10402  0877  00BE               	movwf	??___ftmul+1
 10403  0878  083C               	movf	___ftmul@f2+2,w
 10404  0879  00BF               	movwf	??___ftmul+2
 10405  087A  1003               	clrc
 10406  087B  0D3E               	rlf	??___ftmul+1,w
 10407  087C  0D3F               	rlf	??___ftmul+2,w
 10408  087D  00C0               	movwf	??___ftmul+3
 10409  087E  0840               	movf	??___ftmul+3,w
 10410  087F  00C6               	movwf	___ftmul@sign
 10411  0880  0846               	movf	___ftmul@sign,w
 10412  0881  1D03               	btfss	3,2
 10413  0882  288A               	goto	l5526
 10414  0883  3000               	movlw	0
 10415  0884  00B7               	movwf	?___ftmul
 10416  0885  3000               	movlw	0
 10417  0886  00B8               	movwf	?___ftmul+1
 10418  0887  3000               	movlw	0
 10419  0888  00B9               	movwf	?___ftmul+2
 10420  0889  0008               	return
 10421  088A                     l5526:	
 10422  088A  0846               	movf	___ftmul@sign,w
 10423  088B  3E7B               	addlw	123
 10424  088C  00BD               	movwf	??___ftmul
 10425  088D  083D               	movf	??___ftmul,w
 10426  088E  07C1               	addwf	___ftmul@exp,f
 10427  088F  0837               	movf	___ftmul@f1,w
 10428  0890  00BD               	movwf	??___ftmul
 10429  0891  0838               	movf	___ftmul@f1+1,w
 10430  0892  00BE               	movwf	??___ftmul+1
 10431  0893  0839               	movf	___ftmul@f1+2,w
 10432  0894  00BF               	movwf	??___ftmul+2
 10433  0895  3010               	movlw	16
 10434  0896                     u6005:	
 10435  0896  36BF               	lsrf	??___ftmul+2,f
 10436  0897  0CBE               	rrf	??___ftmul+1,f
 10437  0898  0CBD               	rrf	??___ftmul,f
 10438  0899  0B89               	decfsz	9,f
 10439  089A  2896               	goto	u6005
 10440  089B  083D               	movf	??___ftmul,w
 10441  089C  00C0               	movwf	??___ftmul+3
 10442  089D  0840               	movf	??___ftmul+3,w
 10443  089E  00C6               	movwf	___ftmul@sign
 10444  089F  083A               	movf	___ftmul@f2,w
 10445  08A0  00BD               	movwf	??___ftmul
 10446  08A1  083B               	movf	___ftmul@f2+1,w
 10447  08A2  00BE               	movwf	??___ftmul+1
 10448  08A3  083C               	movf	___ftmul@f2+2,w
 10449  08A4  00BF               	movwf	??___ftmul+2
 10450  08A5  3010               	movlw	16
 10451  08A6                     u6015:	
 10452  08A6  36BF               	lsrf	??___ftmul+2,f
 10453  08A7  0CBE               	rrf	??___ftmul+1,f
 10454  08A8  0CBD               	rrf	??___ftmul,f
 10455  08A9  0B89               	decfsz	9,f
 10456  08AA  28A6               	goto	u6015
 10457  08AB  083D               	movf	??___ftmul,w
 10458  08AC  00C0               	movwf	??___ftmul+3
 10459  08AD  0840               	movf	??___ftmul+3,w
 10460  08AE  06C6               	xorwf	___ftmul@sign,f
 10461  08AF  3080               	movlw	128
 10462  08B0  00BD               	movwf	??___ftmul
 10463  08B1  083D               	movf	??___ftmul,w
 10464  08B2  05C6               	andwf	___ftmul@sign,f
 10465  08B3  17B8               	bsf	___ftmul@f1+1,7
 10466  08B4  17BB               	bsf	___ftmul@f2+1,7
 10467  08B5  30FF               	movlw	255
 10468  08B6  05BA               	andwf	___ftmul@f2,f
 10469  08B7  30FF               	movlw	255
 10470  08B8  05BB               	andwf	___ftmul@f2+1,f
 10471  08B9  3000               	movlw	0
 10472  08BA  05BC               	andwf	___ftmul@f2+2,f
 10473  08BB  3000               	movlw	0
 10474  08BC  00C2               	movwf	___ftmul@f3_as_product
 10475  08BD  3000               	movlw	0
 10476  08BE  00C3               	movwf	___ftmul@f3_as_product+1
 10477  08BF  3000               	movlw	0
 10478  08C0  00C4               	movwf	___ftmul@f3_as_product+2
 10479  08C1  3007               	movlw	7
 10480  08C2  00BD               	movwf	??___ftmul
 10481  08C3  083D               	movf	??___ftmul,w
 10482  08C4  00C5               	movwf	___ftmul@cntr
 10483  08C5                     l5538:	
 10484  08C5  1C37               	btfss	___ftmul@f1,0
 10485  08C6  28CD               	goto	l5542
 10486  08C7  083A               	movf	___ftmul@f2,w
 10487  08C8  07C2               	addwf	___ftmul@f3_as_product,f
 10488  08C9  083B               	movf	___ftmul@f2+1,w
 10489  08CA  3DC3               	addwfc	___ftmul@f3_as_product+1,f
 10490  08CB  083C               	movf	___ftmul@f2+2,w
 10491  08CC  3DC4               	addwfc	___ftmul@f3_as_product+2,f
 10492  08CD                     l5542:	
 10493  08CD  3001               	movlw	1
 10494  08CE                     u6035:	
 10495  08CE  36B9               	lsrf	___ftmul@f1+2,f
 10496  08CF  0CB8               	rrf	___ftmul@f1+1,f
 10497  08D0  0CB7               	rrf	___ftmul@f1,f
 10498  08D1  0B89               	decfsz	9,f
 10499  08D2  28CE               	goto	u6035
 10500  08D3  3001               	movlw	1
 10501  08D4                     u6045:	
 10502  08D4  35BA               	lslf	___ftmul@f2,f
 10503  08D5  0DBB               	rlf	___ftmul@f2+1,f
 10504  08D6  0DBC               	rlf	___ftmul@f2+2,f
 10505  08D7  0B89               	decfsz	9,f
 10506  08D8  28D4               	goto	u6045
 10507  08D9  3001               	movlw	1
 10508  08DA  02C5               	subwf	___ftmul@cntr,f
 10509  08DB  1D03               	btfss	3,2
 10510  08DC  28C5               	goto	l5538
 10511  08DD  3009               	movlw	9
 10512  08DE  00BD               	movwf	??___ftmul
 10513  08DF  083D               	movf	??___ftmul,w
 10514  08E0  00C5               	movwf	___ftmul@cntr
 10515  08E1                     l5550:	
 10516  08E1  1C37               	btfss	___ftmul@f1,0
 10517  08E2  28E9               	goto	l5554
 10518  08E3  083A               	movf	___ftmul@f2,w
 10519  08E4  07C2               	addwf	___ftmul@f3_as_product,f
 10520  08E5  083B               	movf	___ftmul@f2+1,w
 10521  08E6  3DC3               	addwfc	___ftmul@f3_as_product+1,f
 10522  08E7  083C               	movf	___ftmul@f2+2,w
 10523  08E8  3DC4               	addwfc	___ftmul@f3_as_product+2,f
 10524  08E9                     l5554:	
 10525  08E9  3001               	movlw	1
 10526  08EA                     u6075:	
 10527  08EA  36B9               	lsrf	___ftmul@f1+2,f
 10528  08EB  0CB8               	rrf	___ftmul@f1+1,f
 10529  08EC  0CB7               	rrf	___ftmul@f1,f
 10530  08ED  0B89               	decfsz	9,f
 10531  08EE  28EA               	goto	u6075
 10532  08EF  3001               	movlw	1
 10533  08F0                     u6085:	
 10534  08F0  36C4               	lsrf	___ftmul@f3_as_product+2,f
 10535  08F1  0CC3               	rrf	___ftmul@f3_as_product+1,f
 10536  08F2  0CC2               	rrf	___ftmul@f3_as_product,f
 10537  08F3  0B89               	decfsz	9,f
 10538  08F4  28F0               	goto	u6085
 10539  08F5  3001               	movlw	1
 10540  08F6  02C5               	subwf	___ftmul@cntr,f
 10541  08F7  1D03               	btfss	3,2
 10542  08F8  28E1               	goto	l5550
 10543  08F9  0842               	movf	___ftmul@f3_as_product,w
 10544  08FA  00A2               	movwf	___ftpack@arg
 10545  08FB  0843               	movf	___ftmul@f3_as_product+1,w
 10546  08FC  00A3               	movwf	___ftpack@arg+1
 10547  08FD  0844               	movf	___ftmul@f3_as_product+2,w
 10548  08FE  00A4               	movwf	___ftpack@arg+2
 10549  08FF  0841               	movf	___ftmul@exp,w
 10550  0900  00BD               	movwf	??___ftmul
 10551  0901  083D               	movf	??___ftmul,w
 10552  0902  00A5               	movwf	___ftpack@exp
 10553  0903  0846               	movf	___ftmul@sign,w
 10554  0904  00BE               	movwf	??___ftmul+1
 10555  0905  083E               	movf	??___ftmul+1,w
 10556  0906  00A6               	movwf	___ftpack@sign
 10557  0907  3194  24EF         	fcall	___ftpack
 10558  0909  0020               	movlb	0	; select bank0
 10559  090A  0822               	movf	?___ftpack,w
 10560  090B  00B7               	movwf	?___ftmul
 10561  090C  0823               	movf	?___ftpack+1,w
 10562  090D  00B8               	movwf	?___ftmul+1
 10563  090E  0824               	movf	?___ftpack+2,w
 10564  090F  00B9               	movwf	?___ftmul+2
 10565  0910  0008               	return
 10566  0911                     __end_of___ftmul:	
 10567                           
 10568                           	psect	text23
 10569  1757                     __ptext23:	
 10570 ;; *************** function ___ftdiv *****************
 10571 ;; Defined at:
 10572 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  f2              3   39[BANK0 ] float 
 10575 ;;  f1              3   42[BANK0 ] float 
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;  f3              3   50[BANK0 ] float 
 10578 ;;  sign            1   54[BANK0 ] unsigned char 
 10579 ;;  exp             1   53[BANK0 ] unsigned char 
 10580 ;;  cntr            1   49[BANK0 ] unsigned char 
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  3   39[BANK0 ] float 
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0, pclath, cstack
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10590 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10591 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10592 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10593 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10594 ;;Total ram usage:       16 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:    3
 10597 ;; This function calls:
 10598 ;;		___ftpack
 10599 ;; This function is called by:
 10600 ;;		_main
 10601 ;;		_set_subdivision
 10602 ;;		_map
 10603 ;;		_scalePotValue
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607                           
 10608                           ;psect for function ___ftdiv
 10609  1757                     ___ftdiv:	
 10610                           
 10611                           ;incstack = 0
 10612                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 10613  1757  0020               	movlb	0	; select bank0
 10614  1758  084A               	movf	___ftdiv@f1,w
 10615  1759  00CD               	movwf	??___ftdiv
 10616  175A  084B               	movf	___ftdiv@f1+1,w
 10617  175B  00CE               	movwf	??___ftdiv+1
 10618  175C  084C               	movf	___ftdiv@f1+2,w
 10619  175D  00CF               	movwf	??___ftdiv+2
 10620  175E  1003               	clrc
 10621  175F  0D4E               	rlf	??___ftdiv+1,w
 10622  1760  0D4F               	rlf	??___ftdiv+2,w
 10623  1761  00D0               	movwf	??___ftdiv+3
 10624  1762  0850               	movf	??___ftdiv+3,w
 10625  1763  00D5               	movwf	___ftdiv@exp
 10626  1764  0855               	movf	___ftdiv@exp,w
 10627  1765  1D03               	btfss	3,2
 10628  1766  2F6E               	goto	l5478
 10629  1767  3000               	movlw	0
 10630  1768  00C7               	movwf	?___ftdiv
 10631  1769  3000               	movlw	0
 10632  176A  00C8               	movwf	?___ftdiv+1
 10633  176B  3000               	movlw	0
 10634  176C  00C9               	movwf	?___ftdiv+2
 10635  176D  0008               	return
 10636  176E                     l5478:	
 10637  176E  0847               	movf	___ftdiv@f2,w
 10638  176F  00CD               	movwf	??___ftdiv
 10639  1770  0848               	movf	___ftdiv@f2+1,w
 10640  1771  00CE               	movwf	??___ftdiv+1
 10641  1772  0849               	movf	___ftdiv@f2+2,w
 10642  1773  00CF               	movwf	??___ftdiv+2
 10643  1774  1003               	clrc
 10644  1775  0D4E               	rlf	??___ftdiv+1,w
 10645  1776  0D4F               	rlf	??___ftdiv+2,w
 10646  1777  00D0               	movwf	??___ftdiv+3
 10647  1778  0850               	movf	??___ftdiv+3,w
 10648  1779  00D6               	movwf	___ftdiv@sign
 10649  177A  0856               	movf	___ftdiv@sign,w
 10650  177B  1D03               	btfss	3,2
 10651  177C  2F84               	goto	l5484
 10652  177D  3000               	movlw	0
 10653  177E  00C7               	movwf	?___ftdiv
 10654  177F  3000               	movlw	0
 10655  1780  00C8               	movwf	?___ftdiv+1
 10656  1781  3000               	movlw	0
 10657  1782  00C9               	movwf	?___ftdiv+2
 10658  1783  0008               	return
 10659  1784                     l5484:	
 10660  1784  3000               	movlw	0
 10661  1785  00D2               	movwf	___ftdiv@f3
 10662  1786  3000               	movlw	0
 10663  1787  00D3               	movwf	___ftdiv@f3+1
 10664  1788  3000               	movlw	0
 10665  1789  00D4               	movwf	___ftdiv@f3+2
 10666  178A  3089               	movlw	137
 10667  178B  0756               	addwf	___ftdiv@sign,w
 10668  178C  00CD               	movwf	??___ftdiv
 10669  178D  084D               	movf	??___ftdiv,w
 10670  178E  02D5               	subwf	___ftdiv@exp,f
 10671  178F  084A               	movf	___ftdiv@f1,w
 10672  1790  00CD               	movwf	??___ftdiv
 10673  1791  084B               	movf	___ftdiv@f1+1,w
 10674  1792  00CE               	movwf	??___ftdiv+1
 10675  1793  084C               	movf	___ftdiv@f1+2,w
 10676  1794  00CF               	movwf	??___ftdiv+2
 10677  1795  3010               	movlw	16
 10678  1796                     u5925:	
 10679  1796  36CF               	lsrf	??___ftdiv+2,f
 10680  1797  0CCE               	rrf	??___ftdiv+1,f
 10681  1798  0CCD               	rrf	??___ftdiv,f
 10682  1799  0B89               	decfsz	9,f
 10683  179A  2F96               	goto	u5925
 10684  179B  084D               	movf	??___ftdiv,w
 10685  179C  00D0               	movwf	??___ftdiv+3
 10686  179D  0850               	movf	??___ftdiv+3,w
 10687  179E  00D6               	movwf	___ftdiv@sign
 10688  179F  0847               	movf	___ftdiv@f2,w
 10689  17A0  00CD               	movwf	??___ftdiv
 10690  17A1  0848               	movf	___ftdiv@f2+1,w
 10691  17A2  00CE               	movwf	??___ftdiv+1
 10692  17A3  0849               	movf	___ftdiv@f2+2,w
 10693  17A4  00CF               	movwf	??___ftdiv+2
 10694  17A5  3010               	movlw	16
 10695  17A6                     u5935:	
 10696  17A6  36CF               	lsrf	??___ftdiv+2,f
 10697  17A7  0CCE               	rrf	??___ftdiv+1,f
 10698  17A8  0CCD               	rrf	??___ftdiv,f
 10699  17A9  0B89               	decfsz	9,f
 10700  17AA  2FA6               	goto	u5935
 10701  17AB  084D               	movf	??___ftdiv,w
 10702  17AC  00D0               	movwf	??___ftdiv+3
 10703  17AD  0850               	movf	??___ftdiv+3,w
 10704  17AE  06D6               	xorwf	___ftdiv@sign,f
 10705  17AF  3080               	movlw	128
 10706  17B0  00CD               	movwf	??___ftdiv
 10707  17B1  084D               	movf	??___ftdiv,w
 10708  17B2  05D6               	andwf	___ftdiv@sign,f
 10709  17B3  17CB               	bsf	___ftdiv@f1+1,7
 10710  17B4  30FF               	movlw	255
 10711  17B5  05CA               	andwf	___ftdiv@f1,f
 10712  17B6  30FF               	movlw	255
 10713  17B7  05CB               	andwf	___ftdiv@f1+1,f
 10714  17B8  3000               	movlw	0
 10715  17B9  05CC               	andwf	___ftdiv@f1+2,f
 10716  17BA  17C8               	bsf	___ftdiv@f2+1,7
 10717  17BB  30FF               	movlw	255
 10718  17BC  05C7               	andwf	___ftdiv@f2,f
 10719  17BD  30FF               	movlw	255
 10720  17BE  05C8               	andwf	___ftdiv@f2+1,f
 10721  17BF  3000               	movlw	0
 10722  17C0  05C9               	andwf	___ftdiv@f2+2,f
 10723  17C1  3018               	movlw	24
 10724  17C2  00CD               	movwf	??___ftdiv
 10725  17C3  084D               	movf	??___ftdiv,w
 10726  17C4  00D1               	movwf	___ftdiv@cntr
 10727  17C5                     l5498:	
 10728  17C5  3001               	movlw	1
 10729  17C6                     u5945:	
 10730  17C6  35D2               	lslf	___ftdiv@f3,f
 10731  17C7  0DD3               	rlf	___ftdiv@f3+1,f
 10732  17C8  0DD4               	rlf	___ftdiv@f3+2,f
 10733  17C9  0B89               	decfsz	9,f
 10734  17CA  2FC6               	goto	u5945
 10735  17CB  0849               	movf	___ftdiv@f2+2,w
 10736  17CC  024C               	subwf	___ftdiv@f1+2,w
 10737  17CD  1D03               	skipz
 10738  17CE  2FD5               	goto	u5955
 10739  17CF  0848               	movf	___ftdiv@f2+1,w
 10740  17D0  024B               	subwf	___ftdiv@f1+1,w
 10741  17D1  1D03               	skipz
 10742  17D2  2FD5               	goto	u5955
 10743  17D3  0847               	movf	___ftdiv@f2,w
 10744  17D4  024A               	subwf	___ftdiv@f1,w
 10745  17D5                     u5955:	
 10746  17D5  1C03               	skipc
 10747  17D6  2FDE               	goto	l5506
 10748  17D7  0847               	movf	___ftdiv@f2,w
 10749  17D8  02CA               	subwf	___ftdiv@f1,f
 10750  17D9  0848               	movf	___ftdiv@f2+1,w
 10751  17DA  3BCB               	subwfb	___ftdiv@f1+1,f
 10752  17DB  0849               	movf	___ftdiv@f2+2,w
 10753  17DC  3BCC               	subwfb	___ftdiv@f1+2,f
 10754  17DD  1452               	bsf	___ftdiv@f3,0
 10755  17DE                     l5506:	
 10756  17DE  3001               	movlw	1
 10757  17DF                     u5965:	
 10758  17DF  35CA               	lslf	___ftdiv@f1,f
 10759  17E0  0DCB               	rlf	___ftdiv@f1+1,f
 10760  17E1  0DCC               	rlf	___ftdiv@f1+2,f
 10761  17E2  0B89               	decfsz	9,f
 10762  17E3  2FDF               	goto	u5965
 10763  17E4  3001               	movlw	1
 10764  17E5  02D1               	subwf	___ftdiv@cntr,f
 10765  17E6  1D03               	btfss	3,2
 10766  17E7  2FC5               	goto	l5498
 10767  17E8  0852               	movf	___ftdiv@f3,w
 10768  17E9  00A2               	movwf	___ftpack@arg
 10769  17EA  0853               	movf	___ftdiv@f3+1,w
 10770  17EB  00A3               	movwf	___ftpack@arg+1
 10771  17EC  0854               	movf	___ftdiv@f3+2,w
 10772  17ED  00A4               	movwf	___ftpack@arg+2
 10773  17EE  0855               	movf	___ftdiv@exp,w
 10774  17EF  00CD               	movwf	??___ftdiv
 10775  17F0  084D               	movf	??___ftdiv,w
 10776  17F1  00A5               	movwf	___ftpack@exp
 10777  17F2  0856               	movf	___ftdiv@sign,w
 10778  17F3  00CE               	movwf	??___ftdiv+1
 10779  17F4  084E               	movf	??___ftdiv+1,w
 10780  17F5  00A6               	movwf	___ftpack@sign
 10781  17F6  3194  24EF         	fcall	___ftpack
 10782  17F8  0020               	movlb	0	; select bank0
 10783  17F9  0822               	movf	?___ftpack,w
 10784  17FA  00C7               	movwf	?___ftdiv
 10785  17FB  0823               	movf	?___ftpack+1,w
 10786  17FC  00C8               	movwf	?___ftdiv+1
 10787  17FD  0824               	movf	?___ftpack+2,w
 10788  17FE  00C9               	movwf	?___ftdiv+2
 10789  17FF  0008               	return
 10790  1800                     __end_of___ftdiv:	
 10791                           
 10792                           	psect	text24
 10793  0AB8                     __ptext24:	
 10794 ;; *************** function ___ftadd *****************
 10795 ;; Defined at:
 10796 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  f1              3   10[BANK0 ] float 
 10799 ;;  f2              3   13[BANK0 ] float 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  exp1            1   22[BANK0 ] unsigned char 
 10802 ;;  exp2            1   21[BANK0 ] unsigned char 
 10803 ;;  sign            1   20[BANK0 ] unsigned char 
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  3   10[BANK0 ] float 
 10806 ;; Registers used:
 10807 ;;		wreg, status,2, status,0, pclath, cstack
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10813 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10814 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10815 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10816 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10817 ;;Total ram usage:       13 bytes
 10818 ;; Hardware stack levels used:    1
 10819 ;; Hardware stack levels required when called:    3
 10820 ;; This function calls:
 10821 ;;		___ftpack
 10822 ;; This function is called by:
 10823 ;;		_map
 10824 ;;		_scalePotValue
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           
 10829                           ;psect for function ___ftadd
 10830  0AB8                     ___ftadd:	
 10831                           
 10832                           ;incstack = 0
 10833                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 10834  0AB8  0020               	movlb	0	; select bank0
 10835  0AB9  082A               	movf	___ftadd@f1,w
 10836  0ABA  00B0               	movwf	??___ftadd
 10837  0ABB  082B               	movf	___ftadd@f1+1,w
 10838  0ABC  00B1               	movwf	??___ftadd+1
 10839  0ABD  082C               	movf	___ftadd@f1+2,w
 10840  0ABE  00B2               	movwf	??___ftadd+2
 10841  0ABF  1003               	clrc
 10842  0AC0  0D31               	rlf	??___ftadd+1,w
 10843  0AC1  0D32               	rlf	??___ftadd+2,w
 10844  0AC2  00B3               	movwf	??___ftadd+3
 10845  0AC3  0833               	movf	??___ftadd+3,w
 10846  0AC4  00B6               	movwf	___ftadd@exp1
 10847  0AC5  082D               	movf	___ftadd@f2,w
 10848  0AC6  00B0               	movwf	??___ftadd
 10849  0AC7  082E               	movf	___ftadd@f2+1,w
 10850  0AC8  00B1               	movwf	??___ftadd+1
 10851  0AC9  082F               	movf	___ftadd@f2+2,w
 10852  0ACA  00B2               	movwf	??___ftadd+2
 10853  0ACB  1003               	clrc
 10854  0ACC  0D31               	rlf	??___ftadd+1,w
 10855  0ACD  0D32               	rlf	??___ftadd+2,w
 10856  0ACE  00B3               	movwf	??___ftadd+3
 10857  0ACF  0833               	movf	??___ftadd+3,w
 10858  0AD0  00B5               	movwf	___ftadd@exp2
 10859  0AD1  0836               	movf	___ftadd@exp1,w
 10860  0AD2  1903               	btfsc	3,2
 10861  0AD3  2AE0               	goto	l5408
 10862  0AD4  0835               	movf	___ftadd@exp2,w
 10863  0AD5  0236               	subwf	___ftadd@exp1,w
 10864  0AD6  1803               	skipnc
 10865  0AD7  2AE7               	goto	l5412
 10866  0AD8  0336               	decf	___ftadd@exp1,w
 10867  0AD9  3AFF               	xorlw	255
 10868  0ADA  0735               	addwf	___ftadd@exp2,w
 10869  0ADB  00B0               	movwf	??___ftadd
 10870  0ADC  3019               	movlw	25
 10871  0ADD  0230               	subwf	??___ftadd,w
 10872  0ADE  1C03               	skipc
 10873  0ADF  2AE7               	goto	l5412
 10874  0AE0                     l5408:	
 10875  0AE0  082D               	movf	___ftadd@f2,w
 10876  0AE1  00AA               	movwf	?___ftadd
 10877  0AE2  082E               	movf	___ftadd@f2+1,w
 10878  0AE3  00AB               	movwf	?___ftadd+1
 10879  0AE4  082F               	movf	___ftadd@f2+2,w
 10880  0AE5  00AC               	movwf	?___ftadd+2
 10881  0AE6  0008               	return
 10882  0AE7                     l5412:	
 10883  0AE7  0835               	movf	___ftadd@exp2,w
 10884  0AE8  1903               	btfsc	3,2
 10885  0AE9  0008               	return
 10886  0AEA  0836               	movf	___ftadd@exp1,w
 10887  0AEB  0235               	subwf	___ftadd@exp2,w
 10888  0AEC  1803               	skipnc
 10889  0AED  2AF6               	goto	l5418
 10890  0AEE  0335               	decf	___ftadd@exp2,w
 10891  0AEF  3AFF               	xorlw	255
 10892  0AF0  0736               	addwf	___ftadd@exp1,w
 10893  0AF1  00B0               	movwf	??___ftadd
 10894  0AF2  3019               	movlw	25
 10895  0AF3  0230               	subwf	??___ftadd,w
 10896  0AF4  1803               	btfsc	3,0
 10897  0AF5  0008               	return
 10898  0AF6                     l5418:	
 10899  0AF6  3006               	movlw	6
 10900  0AF7  00B0               	movwf	??___ftadd
 10901  0AF8  0830               	movf	??___ftadd,w
 10902  0AF9  00B4               	movwf	___ftadd@sign
 10903  0AFA  1BAC               	btfsc	___ftadd@f1+2,7
 10904  0AFB  17B4               	bsf	___ftadd@sign,7
 10905  0AFC  1BAF               	btfsc	___ftadd@f2+2,7
 10906  0AFD  1734               	bsf	___ftadd@sign,6
 10907  0AFE  17AB               	bsf	___ftadd@f1+1,7
 10908  0AFF  30FF               	movlw	255
 10909  0B00  05AA               	andwf	___ftadd@f1,f
 10910  0B01  30FF               	movlw	255
 10911  0B02  05AB               	andwf	___ftadd@f1+1,f
 10912  0B03  3000               	movlw	0
 10913  0B04  05AC               	andwf	___ftadd@f1+2,f
 10914  0B05  17AE               	bsf	___ftadd@f2+1,7
 10915  0B06  30FF               	movlw	255
 10916  0B07  05AD               	andwf	___ftadd@f2,f
 10917  0B08  30FF               	movlw	255
 10918  0B09  05AE               	andwf	___ftadd@f2+1,f
 10919  0B0A  3000               	movlw	0
 10920  0B0B  05AF               	andwf	___ftadd@f2+2,f
 10921  0B0C  0835               	movf	___ftadd@exp2,w
 10922  0B0D  0236               	subwf	___ftadd@exp1,w
 10923  0B0E  1803               	skipnc
 10924  0B0F  2B32               	goto	l5440
 10925  0B10                     l5430:	
 10926  0B10  3001               	movlw	1
 10927  0B11                     u5765:	
 10928  0B11  35AD               	lslf	___ftadd@f2,f
 10929  0B12  0DAE               	rlf	___ftadd@f2+1,f
 10930  0B13  0DAF               	rlf	___ftadd@f2+2,f
 10931  0B14  0B89               	decfsz	9,f
 10932  0B15  2B11               	goto	u5765
 10933  0B16  3001               	movlw	1
 10934  0B17  02B5               	subwf	___ftadd@exp2,f
 10935  0B18  0835               	movf	___ftadd@exp2,w
 10936  0B19  0636               	xorwf	___ftadd@exp1,w
 10937  0B1A  1903               	skipnz
 10938  0B1B  2B2D               	goto	l5438
 10939  0B1C  3001               	movlw	1
 10940  0B1D  02B4               	subwf	___ftadd@sign,f
 10941  0B1E  0834               	movf	___ftadd@sign,w
 10942  0B1F  3907               	andlw	7
 10943  0B20  1903               	btfsc	3,2
 10944  0B21  2B2D               	goto	l5438
 10945  0B22  2B10               	goto	l5430
 10946  0B23                     l5436:	
 10947  0B23  3001               	movlw	1
 10948  0B24                     u5795:	
 10949  0B24  36AC               	lsrf	___ftadd@f1+2,f
 10950  0B25  0CAB               	rrf	___ftadd@f1+1,f
 10951  0B26  0CAA               	rrf	___ftadd@f1,f
 10952  0B27  0B89               	decfsz	9,f
 10953  0B28  2B24               	goto	u5795
 10954  0B29  3001               	movlw	1
 10955  0B2A  00B0               	movwf	??___ftadd
 10956  0B2B  0830               	movf	??___ftadd,w
 10957  0B2C  07B6               	addwf	___ftadd@exp1,f
 10958  0B2D                     l5438:	
 10959  0B2D  0836               	movf	___ftadd@exp1,w
 10960  0B2E  0635               	xorwf	___ftadd@exp2,w
 10961  0B2F  1903               	btfsc	3,2
 10962  0B30  2B57               	goto	l1598
 10963  0B31  2B23               	goto	l5436
 10964  0B32                     l5440:	
 10965  0B32  0836               	movf	___ftadd@exp1,w
 10966  0B33  0235               	subwf	___ftadd@exp2,w
 10967  0B34  1803               	skipnc
 10968  0B35  2B57               	goto	l1598
 10969  0B36                     l5442:	
 10970  0B36  3001               	movlw	1
 10971  0B37                     u5825:	
 10972  0B37  35AA               	lslf	___ftadd@f1,f
 10973  0B38  0DAB               	rlf	___ftadd@f1+1,f
 10974  0B39  0DAC               	rlf	___ftadd@f1+2,f
 10975  0B3A  0B89               	decfsz	9,f
 10976  0B3B  2B37               	goto	u5825
 10977  0B3C  3001               	movlw	1
 10978  0B3D  02B6               	subwf	___ftadd@exp1,f
 10979  0B3E  0835               	movf	___ftadd@exp2,w
 10980  0B3F  0636               	xorwf	___ftadd@exp1,w
 10981  0B40  1903               	skipnz
 10982  0B41  2B53               	goto	l5450
 10983  0B42  3001               	movlw	1
 10984  0B43  02B4               	subwf	___ftadd@sign,f
 10985  0B44  0834               	movf	___ftadd@sign,w
 10986  0B45  3907               	andlw	7
 10987  0B46  1903               	btfsc	3,2
 10988  0B47  2B53               	goto	l5450
 10989  0B48  2B36               	goto	l5442
 10990  0B49                     l5448:	
 10991  0B49  3001               	movlw	1
 10992  0B4A                     u5855:	
 10993  0B4A  36AF               	lsrf	___ftadd@f2+2,f
 10994  0B4B  0CAE               	rrf	___ftadd@f2+1,f
 10995  0B4C  0CAD               	rrf	___ftadd@f2,f
 10996  0B4D  0B89               	decfsz	9,f
 10997  0B4E  2B4A               	goto	u5855
 10998  0B4F  3001               	movlw	1
 10999  0B50  00B0               	movwf	??___ftadd
 11000  0B51  0830               	movf	??___ftadd,w
 11001  0B52  07B5               	addwf	___ftadd@exp2,f
 11002  0B53                     l5450:	
 11003  0B53  0836               	movf	___ftadd@exp1,w
 11004  0B54  0635               	xorwf	___ftadd@exp2,w
 11005  0B55  1D03               	skipz
 11006  0B56  2B49               	goto	l5448
 11007  0B57                     l1598:	
 11008  0B57  1FB4               	btfss	___ftadd@sign,7
 11009  0B58  2B69               	goto	l5454
 11010  0B59  30FF               	movlw	255
 11011  0B5A  06AA               	xorwf	___ftadd@f1,f
 11012  0B5B  30FF               	movlw	255
 11013  0B5C  06AB               	xorwf	___ftadd@f1+1,f
 11014  0B5D  30FF               	movlw	255
 11015  0B5E  06AC               	xorwf	___ftadd@f1+2,f
 11016  0B5F  3001               	movlw	1
 11017  0B60  07AA               	addwf	___ftadd@f1,f
 11018  0B61  3000               	movlw	0
 11019  0B62  1803               	skipnc
 11020  0B63  3001               	movlw	1
 11021  0B64  07AB               	addwf	___ftadd@f1+1,f
 11022  0B65  3000               	movlw	0
 11023  0B66  1803               	skipnc
 11024  0B67  3001               	movlw	1
 11025  0B68  07AC               	addwf	___ftadd@f1+2,f
 11026  0B69                     l5454:	
 11027  0B69  1F34               	btfss	___ftadd@sign,6
 11028  0B6A  2B7B               	goto	l5458
 11029  0B6B  30FF               	movlw	255
 11030  0B6C  06AD               	xorwf	___ftadd@f2,f
 11031  0B6D  30FF               	movlw	255
 11032  0B6E  06AE               	xorwf	___ftadd@f2+1,f
 11033  0B6F  30FF               	movlw	255
 11034  0B70  06AF               	xorwf	___ftadd@f2+2,f
 11035  0B71  3001               	movlw	1
 11036  0B72  07AD               	addwf	___ftadd@f2,f
 11037  0B73  3000               	movlw	0
 11038  0B74  1803               	skipnc
 11039  0B75  3001               	movlw	1
 11040  0B76  07AE               	addwf	___ftadd@f2+1,f
 11041  0B77  3000               	movlw	0
 11042  0B78  1803               	skipnc
 11043  0B79  3001               	movlw	1
 11044  0B7A  07AF               	addwf	___ftadd@f2+2,f
 11045  0B7B                     l5458:	
 11046  0B7B  01B4               	clrf	___ftadd@sign
 11047  0B7C  082A               	movf	___ftadd@f1,w
 11048  0B7D  07AD               	addwf	___ftadd@f2,f
 11049  0B7E  082B               	movf	___ftadd@f1+1,w
 11050  0B7F  3DAE               	addwfc	___ftadd@f2+1,f
 11051  0B80  082C               	movf	___ftadd@f1+2,w
 11052  0B81  3DAF               	addwfc	___ftadd@f2+2,f
 11053  0B82  1FAF               	btfss	___ftadd@f2+2,7
 11054  0B83  2B96               	goto	l5468
 11055  0B84  30FF               	movlw	255
 11056  0B85  06AD               	xorwf	___ftadd@f2,f
 11057  0B86  30FF               	movlw	255
 11058  0B87  06AE               	xorwf	___ftadd@f2+1,f
 11059  0B88  30FF               	movlw	255
 11060  0B89  06AF               	xorwf	___ftadd@f2+2,f
 11061  0B8A  3001               	movlw	1
 11062  0B8B  07AD               	addwf	___ftadd@f2,f
 11063  0B8C  3000               	movlw	0
 11064  0B8D  1803               	skipnc
 11065  0B8E  3001               	movlw	1
 11066  0B8F  07AE               	addwf	___ftadd@f2+1,f
 11067  0B90  3000               	movlw	0
 11068  0B91  1803               	skipnc
 11069  0B92  3001               	movlw	1
 11070  0B93  07AF               	addwf	___ftadd@f2+2,f
 11071  0B94  01B4               	clrf	___ftadd@sign
 11072  0B95  0AB4               	incf	___ftadd@sign,f
 11073  0B96                     l5468:	
 11074  0B96  082D               	movf	___ftadd@f2,w
 11075  0B97  00A2               	movwf	___ftpack@arg
 11076  0B98  082E               	movf	___ftadd@f2+1,w
 11077  0B99  00A3               	movwf	___ftpack@arg+1
 11078  0B9A  082F               	movf	___ftadd@f2+2,w
 11079  0B9B  00A4               	movwf	___ftpack@arg+2
 11080  0B9C  0836               	movf	___ftadd@exp1,w
 11081  0B9D  00B0               	movwf	??___ftadd
 11082  0B9E  0830               	movf	??___ftadd,w
 11083  0B9F  00A5               	movwf	___ftpack@exp
 11084  0BA0  0834               	movf	___ftadd@sign,w
 11085  0BA1  00B1               	movwf	??___ftadd+1
 11086  0BA2  0831               	movf	??___ftadd+1,w
 11087  0BA3  00A6               	movwf	___ftpack@sign
 11088  0BA4  3194  24EF         	fcall	___ftpack
 11089  0BA6  0020               	movlb	0	; select bank0
 11090  0BA7  0822               	movf	?___ftpack,w
 11091  0BA8  00AA               	movwf	?___ftadd
 11092  0BA9  0823               	movf	?___ftpack+1,w
 11093  0BAA  00AB               	movwf	?___ftadd+1
 11094  0BAB  0824               	movf	?___ftpack+2,w
 11095  0BAC  00AC               	movwf	?___ftadd+2
 11096  0BAD  0008               	return
 11097  0BAE                     __end_of___ftadd:	
 11098                           
 11099                           	psect	text25
 11100  1E03                     __ptext25:	
 11101 ;; *************** function _initSwitchBypass *****************
 11102 ;; Defined at:
 11103 ;;		line 29 in file "SwitchBypass.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;		None
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;  initState       2   24[BANK0 ] int 
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		wreg, status,2, status,0, pclath, cstack
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11121 ;;Total ram usage:        2 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    5
 11124 ;; This function calls:
 11125 ;;		_getSwitchBypassState
 11126 ;;		_setSwitchBypassState
 11127 ;; This function is called by:
 11128 ;;		_main
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           
 11132                           
 11133                           ;psect for function _initSwitchBypass
 11134  1E03                     _initSwitchBypass:	
 11135                           
 11136                           ;SwitchBypass.c: 30: int initState = getSwitchBypassState();
 11137                           
 11138                           ;incstack = 0
 11139                           ; Regs used in _initSwitchBypass: [wreg+status,2+status,0+pclath+cstack]
 11140  1E03  319D  25D4  319E   	fcall	_getSwitchBypassState
 11141  1E06  0020               	movlb	0	; select bank0
 11142  1E07  0823               	movf	?_getSwitchBypassState+1,w
 11143  1E08  00B9               	movwf	initSwitchBypass@initState+1
 11144  1E09  0822               	movf	?_getSwitchBypassState,w
 11145  1E0A  00B8               	movwf	initSwitchBypass@initState
 11146                           
 11147                           ;SwitchBypass.c: 31: setSwitchBypassState(initState);
 11148  1E0B  0839               	movf	initSwitchBypass@initState+1,w
 11149  1E0C  00B5               	movwf	setSwitchBypassState@f_state+1
 11150  1E0D  0838               	movf	initSwitchBypass@initState,w
 11151  1E0E  00B4               	movwf	setSwitchBypassState@f_state
 11152  1E0F  3193  2314         	fcall	_setSwitchBypassState
 11153  1E11  0008               	return
 11154  1E12                     __end_of_initSwitchBypass:	
 11155                           
 11156                           	psect	text26
 11157  1314                     __ptext26:	
 11158 ;; *************** function _setSwitchBypassState *****************
 11159 ;; Defined at:
 11160 ;;		line 134 in file "SwitchBypass.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;  f_state         2   20[BANK0 ] int 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;		None
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  1    wreg      void 
 11167 ;; Registers used:
 11168 ;;		wreg, status,2, status,0, pclath, cstack
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11176 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11177 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11178 ;;Total ram usage:        4 bytes
 11179 ;; Hardware stack levels used:    1
 11180 ;; Hardware stack levels required when called:    4
 11181 ;; This function calls:
 11182 ;;		_updateSwitchBypassState
 11183 ;;		_wait_ms
 11184 ;; This function is called by:
 11185 ;;		_initSwitchBypass
 11186 ;;		_updateSwitchBypass
 11187 ;; This function uses a non-reentrant model
 11188 ;;
 11189                           
 11190                           
 11191                           ;psect for function _setSwitchBypassState
 11192  1314                     _setSwitchBypassState:	
 11193                           
 11194                           ;SwitchBypass.c: 135: if (switchBypass_state == f_state) {return;}
 11195                           
 11196                           ;incstack = 0
 11197                           ; Regs used in _setSwitchBypassState: [wreg+status,2+status,0+pclath+cstack]
 11198  1314  0021               	movlb	1	; select bank1
 11199  1315  085A               	movf	_switchBypass_state^(0+128),w
 11200  1316  0020               	movlb	0	; select bank0
 11201  1317  00B6               	movwf	??_setSwitchBypassState
 11202  1318  01B7               	clrf	??_setSwitchBypassState+1
 11203  1319  0835               	movf	setSwitchBypassState@f_state+1,w
 11204  131A  0637               	xorwf	??_setSwitchBypassState+1,w
 11205  131B  1D03               	skipz
 11206  131C  2B1F               	goto	u5455
 11207  131D  0834               	movf	setSwitchBypassState@f_state,w
 11208  131E  0636               	xorwf	??_setSwitchBypassState,w
 11209  131F                     u5455:	
 11210  131F  1903               	btfsc	3,2
 11211  1320  0008               	return
 11212                           
 11213                           ;SwitchBypass.c: 136: switchBypass_state = f_state;
 11214  1321  0834               	movf	setSwitchBypassState@f_state,w
 11215  1322  00B6               	movwf	??_setSwitchBypassState
 11216  1323  0836               	movf	??_setSwitchBypassState,w
 11217  1324  0021               	movlb	1	; select bank1
 11218  1325  00DA               	movwf	_switchBypass_state^(0+128)
 11219                           
 11220                           ;SwitchBypass.c: 137: LATBbits.LATB2 = f_state;
 11221  1326  0020               	movlb	0	; select bank0
 11222  1327  0C34               	rrf	setSwitchBypassState@f_state,w
 11223  1328  0022               	movlb	2	; select bank2
 11224  1329  1C03               	skipc
 11225  132A  110D               	bcf	13,2	;volatile
 11226  132B  1803               	skipnc
 11227  132C  150D               	bsf	13,2	;volatile
 11228                           
 11229                           ;SwitchBypass.c: 138: LATBbits.LATB3 = 0;
 11230  132D  118D               	bcf	13,3	;volatile
 11231                           
 11232                           ;SwitchBypass.c: 139: LATGbits.LATG2 = f_state;
 11233  132E  0020               	movlb	0	; select bank0
 11234  132F  0C34               	rrf	setSwitchBypassState@f_state,w
 11235  1330  0027               	movlb	7	; select bank7
 11236  1331  1C03               	skipc
 11237  1332  110D               	bcf	13,2	;volatile
 11238  1333  1803               	skipnc
 11239  1334  150D               	bsf	13,2	;volatile
 11240                           
 11241                           ;SwitchBypass.c: 140: LATGbits.LATG1 = !f_state;
 11242  1335  0020               	movlb	0	; select bank0
 11243  1336  0834               	movf	setSwitchBypassState@f_state,w
 11244  1337  0435               	iorwf	setSwitchBypassState@f_state+1,w
 11245  1338  1D03               	btfss	3,2
 11246  1339  2B3D               	goto	u5460
 11247  133A  0027               	movlb	7	; select bank7
 11248  133B  148D               	bsf	13,1	;volatile
 11249  133C  2B3F               	goto	l5296
 11250  133D                     u5460:	
 11251  133D  0027               	movlb	7	; select bank7
 11252  133E  108D               	bcf	13,1	;volatile
 11253  133F                     l5296:	
 11254                           
 11255                           ;SwitchBypass.c: 142: wait_ms(20);
 11256  133F  3014               	movlw	20
 11257  1340  0020               	movlb	0	; select bank0
 11258  1341  00AE               	movwf	wait_ms@timeSec
 11259  1342  3000               	movlw	0
 11260  1343  00AF               	movwf	wait_ms@timeSec+1
 11261  1344  319F  27CE  3193   	fcall	_wait_ms
 11262                           
 11263                           ;SwitchBypass.c: 144: LATGbits.LATG2 = 0;
 11264  1347  0027               	movlb	7	; select bank7
 11265  1348  110D               	bcf	13,2	;volatile
 11266                           
 11267                           ;SwitchBypass.c: 145: LATGbits.LATG1 = 0;
 11268  1349  108D               	bcf	13,1	;volatile
 11269                           
 11270                           ;SwitchBypass.c: 147: updateSwitchBypassState(switchBypass_state);
 11271  134A  0021               	movlb	1	; select bank1
 11272  134B  085A               	movf	_switchBypass_state^(0+128),w
 11273  134C  0020               	movlb	0	; select bank0
 11274  134D  00B6               	movwf	??_setSwitchBypassState
 11275  134E  01B7               	clrf	??_setSwitchBypassState+1
 11276  134F  0836               	movf	??_setSwitchBypassState,w
 11277  1350  00A2               	movwf	updateSwitchBypassState@state
 11278  1351  0837               	movf	??_setSwitchBypassState+1,w
 11279  1352  00A3               	movwf	updateSwitchBypassState@state+1
 11280  1353  319D  25CE  3193   	fcall	_updateSwitchBypassState
 11281                           
 11282                           ;SwitchBypass.c: 148: wait_ms(20);
 11283  1356  3014               	movlw	20
 11284  1357  0020               	movlb	0	; select bank0
 11285  1358  00AE               	movwf	wait_ms@timeSec
 11286  1359  3000               	movlw	0
 11287  135A  00AF               	movwf	wait_ms@timeSec+1
 11288  135B  319F  27CE         	fcall	_wait_ms
 11289  135D  0008               	return
 11290  135E                     __end_of_setSwitchBypassState:	
 11291                           
 11292                           	psect	text27
 11293  1FCE                     __ptext27:	
 11294 ;; *************** function _wait_ms *****************
 11295 ;; Defined at:
 11296 ;;		line 23 in file "system.c"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;  timeSec         2   14[BANK0 ] unsigned int 
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;  timemsl         4   16[BANK0 ] long 
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  1    wreg      void 
 11303 ;; Registers used:
 11304 ;;		wreg, status,2, status,0, pclath, cstack
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11311 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11313 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11314 ;;Total ram usage:        6 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:    3
 11317 ;; This function calls:
 11318 ;;		___lmul
 11319 ;; This function is called by:
 11320 ;;		_star_tactiles
 11321 ;;		_solidring_tactiles
 11322 ;;		_read_bottom_tactile
 11323 ;;		_read_top_tactile
 11324 ;;		_setSwitchBypassState
 11325 ;;		_setDoublePressState
 11326 ;;		_showError_Alternating
 11327 ;;		_show_error
 11328 ;;		_show_cancel
 11329 ;;		_ring_tactiles
 11330 ;; This function uses a non-reentrant model
 11331 ;;
 11332                           
 11333                           
 11334                           ;psect for function _wait_ms
 11335  1FCE                     _wait_ms:	
 11336                           
 11337                           ;system.c: 25: long timemsl = 0;
 11338                           
 11339                           ;incstack = 0
 11340                           ; Regs used in _wait_ms: [wreg+status,2+status,0+pclath+cstack]
 11341  1FCE  3000               	movlw	0
 11342  1FCF  0020               	movlb	0	; select bank0
 11343  1FD0  00B3               	movwf	wait_ms@timemsl+3
 11344  1FD1  3000               	movlw	0
 11345  1FD2  00B2               	movwf	wait_ms@timemsl+2
 11346  1FD3  3000               	movlw	0
 11347  1FD4  00B1               	movwf	wait_ms@timemsl+1
 11348  1FD5  3000               	movlw	0
 11349  1FD6  00B0               	movwf	wait_ms@timemsl
 11350                           
 11351                           ;system.c: 26: timemsl = timeSec * 1000l;
 11352  1FD7  082E               	movf	wait_ms@timeSec,w
 11353  1FD8  00A2               	movwf	___lmul@multiplier
 11354  1FD9  082F               	movf	wait_ms@timeSec+1,w
 11355  1FDA  00A3               	movwf	___lmul@multiplier+1
 11356  1FDB  01A4               	clrf	___lmul@multiplier+2
 11357  1FDC  01A5               	clrf	___lmul@multiplier+3
 11358  1FDD  3000               	movlw	0
 11359  1FDE  00A9               	movwf	___lmul@multiplicand+3
 11360  1FDF  3000               	movlw	0
 11361  1FE0  00A8               	movwf	___lmul@multiplicand+2
 11362  1FE1  3003               	movlw	3
 11363  1FE2  00A7               	movwf	___lmul@multiplicand+1
 11364  1FE3  30E8               	movlw	232
 11365  1FE4  00A6               	movwf	___lmul@multiplicand
 11366  1FE5  319F  279E  319F   	fcall	___lmul
 11367  1FE8  0020               	movlb	0	; select bank0
 11368  1FE9  0825               	movf	?___lmul+3,w
 11369  1FEA  00B3               	movwf	wait_ms@timemsl+3
 11370  1FEB  0824               	movf	?___lmul+2,w
 11371  1FEC  00B2               	movwf	wait_ms@timemsl+2
 11372  1FED  0823               	movf	?___lmul+1,w
 11373  1FEE  00B1               	movwf	wait_ms@timemsl+1
 11374  1FEF  0822               	movf	?___lmul,w
 11375  1FF0  00B0               	movwf	wait_ms@timemsl
 11376  1FF1                     l343:	
 11377                           ;system.c: 27: for( ; timemsl; timemsl--);
 11378                           
 11379  1FF1  0833               	movf	wait_ms@timemsl+3,w
 11380  1FF2  0432               	iorwf	wait_ms@timemsl+2,w
 11381  1FF3  0431               	iorwf	wait_ms@timemsl+1,w
 11382  1FF4  0430               	iorwf	wait_ms@timemsl,w
 11383  1FF5  1903               	btfsc	3,2
 11384  1FF6  0008               	return
 11385  1FF7  30FF               	movlw	255
 11386  1FF8  07B0               	addwf	wait_ms@timemsl,f
 11387  1FF9  30FF               	movlw	255
 11388  1FFA  3DB1               	addwfc	wait_ms@timemsl+1,f
 11389  1FFB  30FF               	movlw	255
 11390  1FFC  3DB2               	addwfc	wait_ms@timemsl+2,f
 11391  1FFD  30FF               	movlw	255
 11392  1FFE  3DB3               	addwfc	wait_ms@timemsl+3,f
 11393  1FFF  2FF1               	goto	l343
 11394  2000                     __end_of_wait_ms:	
 11395                           
 11396                           	psect	text28
 11397  1F9E                     __ptext28:	
 11398 ;; *************** function ___lmul *****************
 11399 ;; Defined at:
 11400 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;  multiplier      4    2[BANK0 ] unsigned long 
 11403 ;;  multiplicand    4    6[BANK0 ] unsigned long 
 11404 ;; Auto vars:     Size  Location     Type
 11405 ;;  product         4   10[BANK0 ] unsigned long 
 11406 ;; Return value:  Size  Location     Type
 11407 ;;                  4    2[BANK0 ] unsigned long 
 11408 ;; Registers used:
 11409 ;;		wreg, status,2, status,0
 11410 ;; Tracked objects:
 11411 ;;		On entry : 0/0
 11412 ;;		On exit  : 0/0
 11413 ;;		Unchanged: 0/0
 11414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11415 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11416 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11418 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11419 ;;Total ram usage:       12 bytes
 11420 ;; Hardware stack levels used:    1
 11421 ;; Hardware stack levels required when called:    2
 11422 ;; This function calls:
 11423 ;;		Nothing
 11424 ;; This function is called by:
 11425 ;;		_wait_ms
 11426 ;; This function uses a non-reentrant model
 11427 ;;
 11428                           
 11429                           
 11430                           ;psect for function ___lmul
 11431  1F9E                     ___lmul:	
 11432                           
 11433                           ;incstack = 0
 11434                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11435  1F9E  3000               	movlw	0
 11436  1F9F  0020               	movlb	0	; select bank0
 11437  1FA0  00AD               	movwf	___lmul@product+3
 11438  1FA1  3000               	movlw	0
 11439  1FA2  00AC               	movwf	___lmul@product+2
 11440  1FA3  3000               	movlw	0
 11441  1FA4  00AB               	movwf	___lmul@product+1
 11442  1FA5  3000               	movlw	0
 11443  1FA6  00AA               	movwf	___lmul@product
 11444  1FA7                     l5094:	
 11445  1FA7  1C22               	btfss	___lmul@multiplier,0
 11446  1FA8  2FB1               	goto	l5098
 11447  1FA9  0826               	movf	___lmul@multiplicand,w
 11448  1FAA  07AA               	addwf	___lmul@product,f
 11449  1FAB  0827               	movf	___lmul@multiplicand+1,w
 11450  1FAC  3DAB               	addwfc	___lmul@product+1,f
 11451  1FAD  0828               	movf	___lmul@multiplicand+2,w
 11452  1FAE  3DAC               	addwfc	___lmul@product+2,f
 11453  1FAF  0829               	movf	___lmul@multiplicand+3,w
 11454  1FB0  3DAD               	addwfc	___lmul@product+3,f
 11455  1FB1                     l5098:	
 11456  1FB1  3001               	movlw	1
 11457  1FB2                     u5245:	
 11458  1FB2  35A6               	lslf	___lmul@multiplicand,f
 11459  1FB3  0DA7               	rlf	___lmul@multiplicand+1,f
 11460  1FB4  0DA8               	rlf	___lmul@multiplicand+2,f
 11461  1FB5  0DA9               	rlf	___lmul@multiplicand+3,f
 11462  1FB6  0B89               	decfsz	9,f
 11463  1FB7  2FB2               	goto	u5245
 11464  1FB8  3001               	movlw	1
 11465  1FB9                     u5255:	
 11466  1FB9  36A5               	lsrf	___lmul@multiplier+3,f
 11467  1FBA  0CA4               	rrf	___lmul@multiplier+2,f
 11468  1FBB  0CA3               	rrf	___lmul@multiplier+1,f
 11469  1FBC  0CA2               	rrf	___lmul@multiplier,f
 11470  1FBD  0B89               	decfsz	9,f
 11471  1FBE  2FB9               	goto	u5255
 11472  1FBF  0825               	movf	___lmul@multiplier+3,w
 11473  1FC0  0424               	iorwf	___lmul@multiplier+2,w
 11474  1FC1  0423               	iorwf	___lmul@multiplier+1,w
 11475  1FC2  0422               	iorwf	___lmul@multiplier,w
 11476  1FC3  1D03               	skipz
 11477  1FC4  2FA7               	goto	l5094
 11478  1FC5  082D               	movf	___lmul@product+3,w
 11479  1FC6  00A5               	movwf	?___lmul+3
 11480  1FC7  082C               	movf	___lmul@product+2,w
 11481  1FC8  00A4               	movwf	?___lmul+2
 11482  1FC9  082B               	movf	___lmul@product+1,w
 11483  1FCA  00A3               	movwf	?___lmul+1
 11484  1FCB  082A               	movf	___lmul@product,w
 11485  1FCC  00A2               	movwf	?___lmul
 11486  1FCD  0008               	return
 11487  1FCE                     __end_of___lmul:	
 11488                           
 11489                           	psect	text29
 11490  1DCE                     __ptext29:	
 11491 ;; *************** function _updateSwitchBypassState *****************
 11492 ;; Defined at:
 11493 ;;		line 96 in file "state_manager.c"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;  state           2    2[BANK0 ] int 
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;		None
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  1    wreg      void 
 11500 ;; Registers used:
 11501 ;;		None
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11507 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11510 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11511 ;;Total ram usage:        2 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; Hardware stack levels required when called:    2
 11514 ;; This function calls:
 11515 ;;		Nothing
 11516 ;; This function is called by:
 11517 ;;		_setSwitchBypassState
 11518 ;; This function uses a non-reentrant model
 11519 ;;
 11520                           
 11521                           
 11522                           ;psect for function _updateSwitchBypassState
 11523  1DCE                     _updateSwitchBypassState:	
 11524                           
 11525                           ;incstack = 0
 11526                           ; Regs used in _updateSwitchBypassState: []
 11527  1DCE  0008               	return
 11528  1DCF                     __end_of_updateSwitchBypassState:	
 11529                           
 11530                           	psect	text30
 11531  1DD4                     __ptext30:	
 11532 ;; *************** function _getSwitchBypassState *****************
 11533 ;; Defined at:
 11534 ;;		line 103 in file "state_manager.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;		None
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;		None
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  2    2[BANK0 ] int 
 11541 ;; Registers used:
 11542 ;;		status,2
 11543 ;; Tracked objects:
 11544 ;;		On entry : 0/0
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11552 ;;Total ram usage:        2 bytes
 11553 ;; Hardware stack levels used:    1
 11554 ;; Hardware stack levels required when called:    2
 11555 ;; This function calls:
 11556 ;;		Nothing
 11557 ;; This function is called by:
 11558 ;;		_initSwitchBypass
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           
 11563                           ;psect for function _getSwitchBypassState
 11564  1DD4                     _getSwitchBypassState:	
 11565                           
 11566                           ;state_manager.c: 108: return 0;
 11567                           
 11568                           ;incstack = 0
 11569                           ; Regs used in _getSwitchBypassState: [status,2]
 11570  1DD4  0020               	movlb	0	; select bank0
 11571  1DD5  01A2               	clrf	?_getSwitchBypassState
 11572  1DD6  01A3               	clrf	?_getSwitchBypassState+1
 11573  1DD7  0008               	return
 11574  1DD8                     __end_of_getSwitchBypassState:	
 11575                           
 11576                           	psect	text31
 11577  1E79                     __ptext31:	
 11578 ;; *************** function _adc_convert *****************
 11579 ;; Defined at:
 11580 ;;		line 116 in file "user.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;  channel         1    wreg     unsigned char 
 11583 ;; Auto vars:     Size  Location     Type
 11584 ;;  channel         1    5[BANK0 ] unsigned char 
 11585 ;; Return value:  Size  Location     Type
 11586 ;;                  2    2[BANK0 ] unsigned int 
 11587 ;; Registers used:
 11588 ;;		wreg, status,2, status,0
 11589 ;; Tracked objects:
 11590 ;;		On entry : 0/0
 11591 ;;		On exit  : 0/0
 11592 ;;		Unchanged: 0/0
 11593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11594 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11596 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11597 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11598 ;;Total ram usage:        4 bytes
 11599 ;; Hardware stack levels used:    1
 11600 ;; Hardware stack levels required when called:    2
 11601 ;; This function calls:
 11602 ;;		Nothing
 11603 ;; This function is called by:
 11604 ;;		_main
 11605 ;; This function uses a non-reentrant model
 11606 ;;
 11607                           
 11608                           
 11609                           ;psect for function _adc_convert
 11610  1E79                     _adc_convert:	
 11611                           
 11612                           ;incstack = 0
 11613                           ; Regs used in _adc_convert: [wreg+status,2+status,0]
 11614                           ;adc_convert@channel stored from wreg
 11615  1E79  0020               	movlb	0	; select bank0
 11616  1E7A  00A5               	movwf	adc_convert@channel
 11617                           
 11618                           ;user.c: 117: ADCON0bits.CHS = channel;
 11619  1E7B  0825               	movf	adc_convert@channel,w
 11620  1E7C  00A4               	movwf	??_adc_convert
 11621  1E7D  0DA4               	rlf	??_adc_convert,f
 11622  1E7E  0DA4               	rlf	??_adc_convert,f
 11623  1E7F  0021               	movlb	1	; select bank1
 11624  1E80  081D               	movf	29,w	;volatile
 11625  1E81  0020               	movlb	0	; select bank0
 11626  1E82  0624               	xorwf	??_adc_convert,w
 11627  1E83  3983               	andlw	-125
 11628  1E84  0624               	xorwf	??_adc_convert,w
 11629  1E85  0021               	movlb	1	; select bank1
 11630  1E86  009D               	movwf	29	;volatile
 11631                           
 11632                           ;user.c: 118: ADCON0bits.GO = 0b1;
 11633  1E87  149D               	bsf	29,1	;volatile
 11634  1E88                     l521:	
 11635                           ;user.c: 119: while (ADCON0bits.GO_nDONE);
 11636                           
 11637  1E88  189D               	btfsc	29,1	;volatile
 11638  1E89  2E88               	goto	l521
 11639                           
 11640                           ;user.c: 120: return (ADRESH << 8) | ADRESL;
 11641  1E8A  081C               	movf	28,w	;volatile
 11642  1E8B  0020               	movlb	0	; select bank0
 11643  1E8C  00A3               	movwf	?_adc_convert+1
 11644  1E8D  0021               	movlb	1	; select bank1
 11645  1E8E  081B               	movf	27,w	;volatile
 11646  1E8F  0020               	movlb	0	; select bank0
 11647  1E90  00A2               	movwf	?_adc_convert
 11648  1E91  0008               	return
 11649  1E92                     __end_of_adc_convert:	
 11650                           
 11651                           	psect	text32
 11652  149D                     __ptext32:	
 11653 ;; *************** function ___awdiv *****************
 11654 ;; Defined at:
 11655 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 11656 ;; Parameters:    Size  Location     Type
 11657 ;;  divisor         2    2[BANK0 ] int 
 11658 ;;  dividend        2    4[BANK0 ] int 
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;  quotient        2    9[BANK0 ] int 
 11661 ;;  sign            1    8[BANK0 ] unsigned char 
 11662 ;;  counter         1    7[BANK0 ] unsigned char 
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  2    2[BANK0 ] int 
 11665 ;; Registers used:
 11666 ;;		wreg, status,2, status,0
 11667 ;; Tracked objects:
 11668 ;;		On entry : 0/0
 11669 ;;		On exit  : 0/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11672 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11673 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11674 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11675 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11676 ;;Total ram usage:        9 bytes
 11677 ;; Hardware stack levels used:    1
 11678 ;; Hardware stack levels required when called:    2
 11679 ;; This function calls:
 11680 ;;		Nothing
 11681 ;; This function is called by:
 11682 ;;		_main
 11683 ;; This function uses a non-reentrant model
 11684 ;;
 11685                           
 11686                           
 11687                           ;psect for function ___awdiv
 11688  149D                     ___awdiv:	
 11689                           
 11690                           ;incstack = 0
 11691                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11692  149D  0020               	movlb	0	; select bank0
 11693  149E  01A8               	clrf	___awdiv@sign
 11694  149F  1FA3               	btfss	___awdiv@divisor+1,7
 11695  14A0  2CA8               	goto	l6020
 11696  14A1  09A2               	comf	___awdiv@divisor,f
 11697  14A2  09A3               	comf	___awdiv@divisor+1,f
 11698  14A3  0AA2               	incf	___awdiv@divisor,f
 11699  14A4  1903               	skipnz
 11700  14A5  0AA3               	incf	___awdiv@divisor+1,f
 11701  14A6  01A8               	clrf	___awdiv@sign
 11702  14A7  0AA8               	incf	___awdiv@sign,f
 11703  14A8                     l6020:	
 11704  14A8  1FA5               	btfss	___awdiv@dividend+1,7
 11705  14A9  2CB3               	goto	l6026
 11706  14AA  09A4               	comf	___awdiv@dividend,f
 11707  14AB  09A5               	comf	___awdiv@dividend+1,f
 11708  14AC  0AA4               	incf	___awdiv@dividend,f
 11709  14AD  1903               	skipnz
 11710  14AE  0AA5               	incf	___awdiv@dividend+1,f
 11711  14AF  3001               	movlw	1
 11712  14B0  00A6               	movwf	??___awdiv
 11713  14B1  0826               	movf	??___awdiv,w
 11714  14B2  06A8               	xorwf	___awdiv@sign,f
 11715  14B3                     l6026:	
 11716  14B3  01A9               	clrf	___awdiv@quotient
 11717  14B4  01AA               	clrf	___awdiv@quotient+1
 11718  14B5  0822               	movf	___awdiv@divisor,w
 11719  14B6  0423               	iorwf	___awdiv@divisor+1,w
 11720  14B7  1903               	btfsc	3,2
 11721  14B8  2CE2               	goto	l6048
 11722  14B9  01A7               	clrf	___awdiv@counter
 11723  14BA  0AA7               	incf	___awdiv@counter,f
 11724  14BB                     l6036:	
 11725  14BB  1BA3               	btfsc	___awdiv@divisor+1,7
 11726  14BC  2CC7               	goto	l6038
 11727  14BD  3001               	movlw	1
 11728  14BE                     u6955:	
 11729  14BE  35A2               	lslf	___awdiv@divisor,f
 11730  14BF  0DA3               	rlf	___awdiv@divisor+1,f
 11731  14C0  0B89               	decfsz	9,f
 11732  14C1  2CBE               	goto	u6955
 11733  14C2  3001               	movlw	1
 11734  14C3  00A6               	movwf	??___awdiv
 11735  14C4  0826               	movf	??___awdiv,w
 11736  14C5  07A7               	addwf	___awdiv@counter,f
 11737  14C6  2CBB               	goto	l6036
 11738  14C7                     l6038:	
 11739  14C7  3001               	movlw	1
 11740  14C8                     u6975:	
 11741  14C8  35A9               	lslf	___awdiv@quotient,f
 11742  14C9  0DAA               	rlf	___awdiv@quotient+1,f
 11743  14CA  0B89               	decfsz	9,f
 11744  14CB  2CC8               	goto	u6975
 11745  14CC  0823               	movf	___awdiv@divisor+1,w
 11746  14CD  0225               	subwf	___awdiv@dividend+1,w
 11747  14CE  1D03               	skipz
 11748  14CF  2CD2               	goto	u6985
 11749  14D0  0822               	movf	___awdiv@divisor,w
 11750  14D1  0224               	subwf	___awdiv@dividend,w
 11751  14D2                     u6985:	
 11752  14D2  1C03               	skipc
 11753  14D3  2CD9               	goto	l6044
 11754  14D4  0822               	movf	___awdiv@divisor,w
 11755  14D5  02A4               	subwf	___awdiv@dividend,f
 11756  14D6  0823               	movf	___awdiv@divisor+1,w
 11757  14D7  3BA5               	subwfb	___awdiv@dividend+1,f
 11758  14D8  1429               	bsf	___awdiv@quotient,0
 11759  14D9                     l6044:	
 11760  14D9  3001               	movlw	1
 11761  14DA                     u6995:	
 11762  14DA  36A3               	lsrf	___awdiv@divisor+1,f
 11763  14DB  0CA2               	rrf	___awdiv@divisor,f
 11764  14DC  0B89               	decfsz	9,f
 11765  14DD  2CDA               	goto	u6995
 11766  14DE  3001               	movlw	1
 11767  14DF  02A7               	subwf	___awdiv@counter,f
 11768  14E0  1D03               	btfss	3,2
 11769  14E1  2CC7               	goto	l6038
 11770  14E2                     l6048:	
 11771  14E2  0828               	movf	___awdiv@sign,w
 11772  14E3  1903               	btfsc	3,2
 11773  14E4  2CEA               	goto	l6052
 11774  14E5  09A9               	comf	___awdiv@quotient,f
 11775  14E6  09AA               	comf	___awdiv@quotient+1,f
 11776  14E7  0AA9               	incf	___awdiv@quotient,f
 11777  14E8  1903               	skipnz
 11778  14E9  0AAA               	incf	___awdiv@quotient+1,f
 11779  14EA                     l6052:	
 11780  14EA  082A               	movf	___awdiv@quotient+1,w
 11781  14EB  00A3               	movwf	?___awdiv+1
 11782  14EC  0829               	movf	___awdiv@quotient,w
 11783  14ED  00A2               	movwf	?___awdiv
 11784  14EE  0008               	return
 11785  14EF                     __end_of___awdiv:	
 11786                           
 11787                           	psect	text33
 11788  1051                     __ptext33:	
 11789 ;; *************** function ___altoft *****************
 11790 ;; Defined at:
 11791 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
 11792 ;; Parameters:    Size  Location     Type
 11793 ;;  c               4   10[BANK0 ] long 
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;  sign            1   17[BANK0 ] unsigned char 
 11796 ;;  exp             1   16[BANK0 ] unsigned char 
 11797 ;; Return value:  Size  Location     Type
 11798 ;;                  3   10[BANK0 ] float 
 11799 ;; Registers used:
 11800 ;;		wreg, status,2, status,0, pclath, cstack
 11801 ;; Tracked objects:
 11802 ;;		On entry : 0/0
 11803 ;;		On exit  : 0/0
 11804 ;;		Unchanged: 0/0
 11805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11806 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11807 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11808 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11809 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11810 ;;Total ram usage:        8 bytes
 11811 ;; Hardware stack levels used:    1
 11812 ;; Hardware stack levels required when called:    3
 11813 ;; This function calls:
 11814 ;;		___ftpack
 11815 ;; This function is called by:
 11816 ;;		_main
 11817 ;; This function uses a non-reentrant model
 11818 ;;
 11819                           
 11820                           
 11821                           ;psect for function ___altoft
 11822  1051                     ___altoft:	
 11823                           
 11824                           ;incstack = 0
 11825                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
 11826  1051  0020               	movlb	0	; select bank0
 11827  1052  01B1               	clrf	___altoft@sign
 11828  1053  308E               	movlw	142
 11829  1054  00AE               	movwf	??___altoft
 11830  1055  082E               	movf	??___altoft,w
 11831  1056  00B0               	movwf	___altoft@exp
 11832  1057  1FAD               	btfss	___altoft@c+3,7
 11833  1058  2866               	goto	l6006
 11834  1059  09AA               	comf	___altoft@c,f
 11835  105A  09AB               	comf	___altoft@c+1,f
 11836  105B  09AC               	comf	___altoft@c+2,f
 11837  105C  09AD               	comf	___altoft@c+3,f
 11838  105D  0AAA               	incf	___altoft@c,f
 11839  105E  1903               	skipnz
 11840  105F  0AAB               	incf	___altoft@c+1,f
 11841  1060  1903               	skipnz
 11842  1061  0AAC               	incf	___altoft@c+2,f
 11843  1062  1903               	skipnz
 11844  1063  0AAD               	incf	___altoft@c+3,f
 11845  1064  01B1               	clrf	___altoft@sign
 11846  1065  0AB1               	incf	___altoft@sign,f
 11847  1066                     l6006:	
 11848  1066  30FF               	movlw	255
 11849  1067  052D               	andwf	___altoft@c+3,w
 11850  1068  1903               	btfsc	3,2
 11851  1069  2876               	goto	l6008
 11852  106A  3001               	movlw	1
 11853  106B                     u6905:	
 11854  106B  36AD               	lsrf	___altoft@c+3,f
 11855  106C  0CAC               	rrf	___altoft@c+2,f
 11856  106D  0CAB               	rrf	___altoft@c+1,f
 11857  106E  0CAA               	rrf	___altoft@c,f
 11858  106F  0B89               	decfsz	9,f
 11859  1070  286B               	goto	u6905
 11860  1071  3001               	movlw	1
 11861  1072  00AE               	movwf	??___altoft
 11862  1073  082E               	movf	??___altoft,w
 11863  1074  07B0               	addwf	___altoft@exp,f
 11864  1075  2866               	goto	l6006
 11865  1076                     l6008:	
 11866  1076  082A               	movf	___altoft@c,w
 11867  1077  00A2               	movwf	___ftpack@arg
 11868  1078  082B               	movf	___altoft@c+1,w
 11869  1079  00A3               	movwf	___ftpack@arg+1
 11870  107A  082C               	movf	___altoft@c+2,w
 11871  107B  00A4               	movwf	___ftpack@arg+2
 11872  107C  0830               	movf	___altoft@exp,w
 11873  107D  00AE               	movwf	??___altoft
 11874  107E  082E               	movf	??___altoft,w
 11875  107F  00A5               	movwf	___ftpack@exp
 11876  1080  0831               	movf	___altoft@sign,w
 11877  1081  00AF               	movwf	??___altoft+1
 11878  1082  082F               	movf	??___altoft+1,w
 11879  1083  00A6               	movwf	___ftpack@sign
 11880  1084  3194  24EF         	fcall	___ftpack
 11881  1086  0020               	movlb	0	; select bank0
 11882  1087  0822               	movf	?___ftpack,w
 11883  1088  00AA               	movwf	?___altoft
 11884  1089  0823               	movf	?___ftpack+1,w
 11885  108A  00AB               	movwf	?___altoft+1
 11886  108B  0824               	movf	?___ftpack+2,w
 11887  108C  00AC               	movwf	?___altoft+2
 11888  108D  0008               	return
 11889  108E                     __end_of___altoft:	
 11890                           
 11891                           	psect	text34
 11892  14EF                     __ptext34:	
 11893 ;; *************** function ___ftpack *****************
 11894 ;; Defined at:
 11895 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;  arg             3    2[BANK0 ] unsigned um
 11898 ;;  exp             1    5[BANK0 ] unsigned char 
 11899 ;;  sign            1    6[BANK0 ] unsigned char 
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;		None
 11902 ;; Return value:  Size  Location     Type
 11903 ;;                  3    2[BANK0 ] float 
 11904 ;; Registers used:
 11905 ;;		wreg, status,2, status,0
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11911 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11913 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11914 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11915 ;;Total ram usage:        8 bytes
 11916 ;; Hardware stack levels used:    1
 11917 ;; Hardware stack levels required when called:    2
 11918 ;; This function calls:
 11919 ;;		Nothing
 11920 ;; This function is called by:
 11921 ;;		___altoft
 11922 ;;		___awtoft
 11923 ;;		___ftadd
 11924 ;;		___ftdiv
 11925 ;;		___ftmul
 11926 ;; This function uses a non-reentrant model
 11927 ;;
 11928                           
 11929                           
 11930                           ;psect for function ___ftpack
 11931  14EF                     ___ftpack:	
 11932                           
 11933                           ;incstack = 0
 11934                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11935  14EF  0020               	movlb	0	; select bank0
 11936  14F0  0825               	movf	___ftpack@exp,w
 11937  14F1  1903               	btfsc	3,2
 11938  14F2  2CF8               	goto	l5154
 11939  14F3  0824               	movf	___ftpack@arg+2,w
 11940  14F4  0423               	iorwf	___ftpack@arg+1,w
 11941  14F5  0422               	iorwf	___ftpack@arg,w
 11942  14F6  1D03               	skipz
 11943  14F7  2D09               	goto	l5160
 11944  14F8                     l5154:	
 11945  14F8  3000               	movlw	0
 11946  14F9  00A2               	movwf	?___ftpack
 11947  14FA  3000               	movlw	0
 11948  14FB  00A3               	movwf	?___ftpack+1
 11949  14FC  3000               	movlw	0
 11950  14FD  00A4               	movwf	?___ftpack+2
 11951  14FE  0008               	return
 11952  14FF                     l5158:	
 11953  14FF  3001               	movlw	1
 11954  1500  00A7               	movwf	??___ftpack
 11955  1501  0827               	movf	??___ftpack,w
 11956  1502  07A5               	addwf	___ftpack@exp,f
 11957  1503  3001               	movlw	1
 11958  1504                     u5305:	
 11959  1504  36A4               	lsrf	___ftpack@arg+2,f
 11960  1505  0CA3               	rrf	___ftpack@arg+1,f
 11961  1506  0CA2               	rrf	___ftpack@arg,f
 11962  1507  0B89               	decfsz	9,f
 11963  1508  2D04               	goto	u5305
 11964  1509                     l5160:	
 11965  1509  30FE               	movlw	254
 11966  150A  0524               	andwf	___ftpack@arg+2,w
 11967  150B  1903               	btfsc	3,2
 11968  150C  2D22               	goto	l1567
 11969  150D  2CFF               	goto	l5158
 11970  150E                     l5162:	
 11971  150E  3001               	movlw	1
 11972  150F  00A7               	movwf	??___ftpack
 11973  1510  0827               	movf	??___ftpack,w
 11974  1511  07A5               	addwf	___ftpack@exp,f
 11975  1512  3001               	movlw	1
 11976  1513  07A2               	addwf	___ftpack@arg,f
 11977  1514  3000               	movlw	0
 11978  1515  1803               	skipnc
 11979  1516  3001               	movlw	1
 11980  1517  07A3               	addwf	___ftpack@arg+1,f
 11981  1518  3000               	movlw	0
 11982  1519  1803               	skipnc
 11983  151A  3001               	movlw	1
 11984  151B  07A4               	addwf	___ftpack@arg+2,f
 11985  151C  3001               	movlw	1
 11986  151D                     u5325:	
 11987  151D  36A4               	lsrf	___ftpack@arg+2,f
 11988  151E  0CA3               	rrf	___ftpack@arg+1,f
 11989  151F  0CA2               	rrf	___ftpack@arg,f
 11990  1520  0B89               	decfsz	9,f
 11991  1521  2D1D               	goto	u5325
 11992  1522                     l1567:	
 11993  1522  30FF               	movlw	255
 11994  1523  0524               	andwf	___ftpack@arg+2,w
 11995  1524  1903               	btfsc	3,2
 11996  1525  2D2F               	goto	l5170
 11997  1526  2D0E               	goto	l5162
 11998  1527                     l5168:	
 11999  1527  3001               	movlw	1
 12000  1528  02A5               	subwf	___ftpack@exp,f
 12001  1529  3001               	movlw	1
 12002  152A                     u5345:	
 12003  152A  35A2               	lslf	___ftpack@arg,f
 12004  152B  0DA3               	rlf	___ftpack@arg+1,f
 12005  152C  0DA4               	rlf	___ftpack@arg+2,f
 12006  152D  0B89               	decfsz	9,f
 12007  152E  2D2A               	goto	u5345
 12008  152F                     l5170:	
 12009  152F  1BA3               	btfsc	___ftpack@arg+1,7
 12010  1530  2D35               	goto	l1574
 12011  1531  3002               	movlw	2
 12012  1532  0225               	subwf	___ftpack@exp,w
 12013  1533  1803               	skipnc
 12014  1534  2D27               	goto	l5168
 12015  1535                     l1574:	
 12016  1535  1825               	btfsc	___ftpack@exp,0
 12017  1536  2D3D               	goto	l1575
 12018  1537  30FF               	movlw	255
 12019  1538  05A2               	andwf	___ftpack@arg,f
 12020  1539  307F               	movlw	127
 12021  153A  05A3               	andwf	___ftpack@arg+1,f
 12022  153B  30FF               	movlw	255
 12023  153C  05A4               	andwf	___ftpack@arg+2,f
 12024  153D                     l1575:	
 12025  153D  1003               	clrc
 12026  153E  0CA5               	rrf	___ftpack@exp,f
 12027  153F  0825               	movf	___ftpack@exp,w
 12028  1540  00A7               	movwf	??___ftpack
 12029  1541  01A8               	clrf	??___ftpack+1
 12030  1542  01A9               	clrf	??___ftpack+2
 12031  1543  3010               	movlw	16
 12032  1544                     u5385:	
 12033  1544  35A7               	lslf	??___ftpack,f
 12034  1545  0DA8               	rlf	??___ftpack+1,f
 12035  1546  0DA9               	rlf	??___ftpack+2,f
 12036  1547  0B89               	decfsz	9,f
 12037  1548  2D44               	goto	u5385
 12038  1549  0827               	movf	??___ftpack,w
 12039  154A  04A2               	iorwf	___ftpack@arg,f
 12040  154B  0828               	movf	??___ftpack+1,w
 12041  154C  04A3               	iorwf	___ftpack@arg+1,f
 12042  154D  0829               	movf	??___ftpack+2,w
 12043  154E  04A4               	iorwf	___ftpack@arg+2,f
 12044  154F  0826               	movf	___ftpack@sign,w
 12045  1550  1903               	btfsc	3,2
 12046  1551  0008               	return
 12047  1552  17A4               	bsf	___ftpack@arg+2,7
 12048  1553  0008               	return
 12049  1554                     __end_of___ftpack:	
 12050                           
 12051                           	psect	text35
 12052  13AD                     __ptext35:	
 12053 ;; *************** function _ReadSavedSettings *****************
 12054 ;; Defined at:
 12055 ;;		line 193 in file "user.c"
 12056 ;; Parameters:    Size  Location     Type
 12057 ;;		None
 12058 ;; Auto vars:     Size  Location     Type
 12059 ;;		None
 12060 ;; Return value:  Size  Location     Type
 12061 ;;                  1    wreg      void 
 12062 ;; Registers used:
 12063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12064 ;; Tracked objects:
 12065 ;;		On entry : 0/0
 12066 ;;		On exit  : 0/0
 12067 ;;		Unchanged: 0/0
 12068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12073 ;;Total ram usage:        0 bytes
 12074 ;; Hardware stack levels used:    1
 12075 ;; Hardware stack levels required when called:    3
 12076 ;; This function calls:
 12077 ;;		_FLASH_ReadWord
 12078 ;;		_set_leds_bottom
 12079 ;;		_set_leds_top
 12080 ;; This function is called by:
 12081 ;;		_main
 12082 ;; This function uses a non-reentrant model
 12083 ;;
 12084                           
 12085                           
 12086                           ;psect for function _ReadSavedSettings
 12087  13AD                     _ReadSavedSettings:	
 12088                           
 12089                           ;user.c: 195: top_push_state = FLASH_ReadWord(0x1F81);
 12090                           
 12091                           ;incstack = 0
 12092                           ; Regs used in _ReadSavedSettings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12093  13AD  3081               	movlw	129
 12094  13AE  0020               	movlb	0	; select bank0
 12095  13AF  00A2               	movwf	FLASH_ReadWord@flashAddr
 12096  13B0  301F               	movlw	31
 12097  13B1  00A3               	movwf	FLASH_ReadWord@flashAddr+1
 12098  13B2  319E  26AE  3193   	fcall	_FLASH_ReadWord
 12099  13B5  0020               	movlb	0	; select bank0
 12100  13B6  0823               	movf	?_FLASH_ReadWord+1,w
 12101  13B7  0021               	movlb	1	; select bank1
 12102  13B8  00D8               	movwf	(_top_push_state+1)^(0+128)
 12103  13B9  0020               	movlb	0	; select bank0
 12104  13BA  0822               	movf	?_FLASH_ReadWord,w
 12105  13BB  0021               	movlb	1	; select bank1
 12106  13BC  00D7               	movwf	_top_push_state^(0+128)
 12107                           
 12108                           ;user.c: 196: bottom_push_state = FLASH_ReadWord(0x1F82);
 12109  13BD  3082               	movlw	130
 12110  13BE  0020               	movlb	0	; select bank0
 12111  13BF  00A2               	movwf	FLASH_ReadWord@flashAddr
 12112  13C0  301F               	movlw	31
 12113  13C1  00A3               	movwf	FLASH_ReadWord@flashAddr+1
 12114  13C2  319E  26AE  3193   	fcall	_FLASH_ReadWord
 12115  13C5  0020               	movlb	0	; select bank0
 12116  13C6  0823               	movf	?_FLASH_ReadWord+1,w
 12117  13C7  0021               	movlb	1	; select bank1
 12118  13C8  00D2               	movwf	(_bottom_push_state+1)^(0+128)
 12119  13C9  0020               	movlb	0	; select bank0
 12120  13CA  0822               	movf	?_FLASH_ReadWord,w
 12121  13CB  0021               	movlb	1	; select bank1
 12122  13CC  00D1               	movwf	_bottom_push_state^(0+128)
 12123                           
 12124                           ;user.c: 199: LATGbits.LATG1 = !switchBypass_state;
 12125  13CD  085A               	movf	_switchBypass_state^(0+128),w
 12126  13CE  1D03               	btfss	3,2
 12127  13CF  2BD3               	goto	u6240
 12128  13D0  0027               	movlb	7	; select bank7
 12129  13D1  148D               	bsf	13,1	;volatile
 12130  13D2  2BD5               	goto	l5646
 12131  13D3                     u6240:	
 12132  13D3  0027               	movlb	7	; select bank7
 12133  13D4  108D               	bcf	13,1	;volatile
 12134  13D5                     l5646:	
 12135                           
 12136                           ;user.c: 200: LATGbits.LATG2 = switchBypass_state;
 12137  13D5  0021               	movlb	1	; select bank1
 12138  13D6  0C5A               	rrf	_switchBypass_state^(0+128),w
 12139  13D7  0027               	movlb	7	; select bank7
 12140  13D8  1C03               	skipc
 12141  13D9  110D               	bcf	13,2	;volatile
 12142  13DA  1803               	skipnc
 12143  13DB  150D               	bsf	13,2	;volatile
 12144                           
 12145                           ;user.c: 201: LATBbits.LATB2 = 0;
 12146  13DC  0022               	movlb	2	; select bank2
 12147  13DD  110D               	bcf	13,2	;volatile
 12148                           
 12149                           ;user.c: 202: LATBbits.LATB3 = 0;
 12150  13DE  118D               	bcf	13,3	;volatile
 12151                           
 12152                           ;user.c: 204: LATBbits.LATB4 = 0;
 12153  13DF  120D               	bcf	13,4	;volatile
 12154                           
 12155                           ;user.c: 205: LATBbits.LATB5 = 0;
 12156  13E0  128D               	bcf	13,5	;volatile
 12157                           
 12158                           ;user.c: 207: LATBbits.LATB1 = 0;
 12159  13E1  108D               	bcf	13,1	;volatile
 12160                           
 12161                           ;user.c: 208: LATBbits.LATB0 = 0;
 12162  13E2  100D               	bcf	13,0	;volatile
 12163                           
 12164                           ;user.c: 211: set_leds_top(top_push_state, 1);
 12165  13E3  0021               	movlb	1	; select bank1
 12166  13E4  0858               	movf	(_top_push_state+1)^(0+128),w
 12167  13E5  0020               	movlb	0	; select bank0
 12168  13E6  00A3               	movwf	set_leds_top@x+1
 12169  13E7  0021               	movlb	1	; select bank1
 12170  13E8  0857               	movf	_top_push_state^(0+128),w
 12171  13E9  0020               	movlb	0	; select bank0
 12172  13EA  00A2               	movwf	set_leds_top@x
 12173  13EB  3001               	movlw	1
 12174  13EC  00A4               	movwf	set_leds_top@ledState
 12175  13ED  3000               	movlw	0
 12176  13EE  00A5               	movwf	set_leds_top@ledState+1
 12177  13EF  3188  2009  3193   	fcall	_set_leds_top
 12178                           
 12179                           ;user.c: 212: set_leds_bottom(bottom_push_state);
 12180  13F2  0021               	movlb	1	; select bank1
 12181  13F3  0852               	movf	(_bottom_push_state+1)^(0+128),w
 12182  13F4  0020               	movlb	0	; select bank0
 12183  13F5  00A3               	movwf	set_leds_bottom@x+1
 12184  13F6  0021               	movlb	1	; select bank1
 12185  13F7  0851               	movf	_bottom_push_state^(0+128),w
 12186  13F8  0020               	movlb	0	; select bank0
 12187  13F9  00A2               	movwf	set_leds_bottom@x
 12188  13FA  3190  2016         	fcall	_set_leds_bottom
 12189  13FC  0008               	return
 12190  13FD                     __end_of_ReadSavedSettings:	
 12191                           
 12192                           	psect	text36
 12193  0809                     __ptext36:	
 12194 ;; *************** function _set_leds_top *****************
 12195 ;; Defined at:
 12196 ;;		line 16 in file "LEDs.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;  x               2    2[BANK0 ] int 
 12199 ;;  ledState        2    4[BANK0 ] int 
 12200 ;; Auto vars:     Size  Location     Type
 12201 ;;		None
 12202 ;; Return value:  Size  Location     Type
 12203 ;;                  1    wreg      void 
 12204 ;; Registers used:
 12205 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12206 ;; Tracked objects:
 12207 ;;		On entry : 0/0
 12208 ;;		On exit  : 0/0
 12209 ;;		Unchanged: 0/0
 12210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12211 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12214 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12215 ;;Total ram usage:        4 bytes
 12216 ;; Hardware stack levels used:    1
 12217 ;; Hardware stack levels required when called:    2
 12218 ;; This function calls:
 12219 ;;		Nothing
 12220 ;; This function is called by:
 12221 ;;		_ReadSavedSettings
 12222 ;;		_star_tactiles
 12223 ;;		_solidring_tactiles
 12224 ;;		_read_top_tactile
 12225 ;;		_ring_tactiles
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           
 12230                           ;psect for function _set_leds_top
 12231  0809                     _set_leds_top:	
 12232                           
 12233                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 12234                           
 12235                           ;incstack = 0
 12236                           ; Regs used in _set_leds_top: [wreg-fsr0h+status,2+status,0]
 12237  0809  0027               	movlb	7	; select bank7
 12238  080A  100C               	bcf	12,0	;volatile
 12239                           
 12240                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 12241  080B  108C               	bcf	12,1	;volatile
 12242                           
 12243                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 12244  080C  110C               	bcf	12,2	;volatile
 12245                           
 12246                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 12247  080D  118C               	bcf	12,3	;volatile
 12248                           
 12249                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 12250  080E  120C               	bcf	12,4	;volatile
 12251                           
 12252                           ;LEDs.c: 22: switch (x) {
 12253  080F  283F               	goto	l5120
 12254  0810                     l5108:	
 12255                           ;LEDs.c: 23: case 1:
 12256                           
 12257                           
 12258                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 12259  0810  0020               	movlb	0	; select bank0
 12260  0811  0C24               	rrf	set_leds_top@ledState,w
 12261  0812  0027               	movlb	7	; select bank7
 12262  0813  1C03               	skipc
 12263  0814  100C               	bcf	12,0	;volatile
 12264  0815  1803               	skipnc
 12265  0816  140C               	bsf	12,0	;volatile
 12266                           
 12267                           ;LEDs.c: 25: break;
 12268  0817  0008               	return
 12269  0818                     l5110:	
 12270                           ;LEDs.c: 26: case 2:
 12271                           
 12272                           
 12273                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 12274  0818  0020               	movlb	0	; select bank0
 12275  0819  0C24               	rrf	set_leds_top@ledState,w
 12276  081A  0027               	movlb	7	; select bank7
 12277  081B  1C03               	skipc
 12278  081C  108C               	bcf	12,1	;volatile
 12279  081D  1803               	skipnc
 12280  081E  148C               	bsf	12,1	;volatile
 12281                           
 12282                           ;LEDs.c: 28: break;
 12283  081F  0008               	return
 12284  0820                     l5112:	
 12285                           ;LEDs.c: 29: case 3:
 12286                           
 12287                           
 12288                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 12289  0820  0020               	movlb	0	; select bank0
 12290  0821  0C24               	rrf	set_leds_top@ledState,w
 12291  0822  0027               	movlb	7	; select bank7
 12292  0823  1C03               	skipc
 12293  0824  110C               	bcf	12,2	;volatile
 12294  0825  1803               	skipnc
 12295  0826  150C               	bsf	12,2	;volatile
 12296                           
 12297                           ;LEDs.c: 31: break;
 12298  0827  0008               	return
 12299  0828                     l5114:	
 12300                           ;LEDs.c: 32: case 4:
 12301                           
 12302                           
 12303                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 12304  0828  0020               	movlb	0	; select bank0
 12305  0829  0C24               	rrf	set_leds_top@ledState,w
 12306  082A  0027               	movlb	7	; select bank7
 12307  082B  1C03               	skipc
 12308  082C  118C               	bcf	12,3	;volatile
 12309  082D  1803               	skipnc
 12310  082E  158C               	bsf	12,3	;volatile
 12311                           
 12312                           ;LEDs.c: 34: break;
 12313  082F  0008               	return
 12314  0830                     l5116:	
 12315                           ;LEDs.c: 35: case 5:
 12316                           
 12317                           
 12318                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 12319  0830  0020               	movlb	0	; select bank0
 12320  0831  0C24               	rrf	set_leds_top@ledState,w
 12321  0832  0027               	movlb	7	; select bank7
 12322  0833  1C03               	skipc
 12323  0834  120C               	bcf	12,4	;volatile
 12324  0835  1803               	skipnc
 12325  0836  160C               	bsf	12,4	;volatile
 12326                           
 12327                           ;LEDs.c: 39: break;
 12328                           
 12329                           ;LEDs.c: 38: case 6:
 12330                           
 12331                           ;LEDs.c: 37: break;
 12332  0837  0008               	return
 12333  0838                     l685:	
 12334                           ;LEDs.c: 40: case 100:
 12335                           
 12336                           
 12337                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 12338  0838  0027               	movlb	7	; select bank7
 12339  0839  140C               	bsf	12,0	;volatile
 12340                           
 12341                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 12342  083A  148C               	bsf	12,1	;volatile
 12343                           
 12344                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 12345  083B  150C               	bsf	12,2	;volatile
 12346                           
 12347                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 12348  083C  158C               	bsf	12,3	;volatile
 12349                           
 12350                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 12351  083D  160C               	bsf	12,4	;volatile
 12352                           
 12353                           ;LEDs.c: 47: }
 12354                           
 12355                           ;LEDs.c: 46: break;
 12356  083E  0008               	return
 12357  083F                     l5120:	
 12358                           
 12359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12360                           ; Switch size 1, requested type "space"
 12361                           ; Number of cases is 1, Range of values is 0 to 0
 12362                           ; switch strategies available:
 12363                           ; Name         Instructions Cycles
 12364                           ; simple_byte            4     3 (average)
 12365                           ; direct_byte            8     6 (fixed)
 12366                           ; jumptable            260     6 (fixed)
 12367                           ;	Chosen strategy is simple_byte
 12368  083F  0020               	movlb	0	; select bank0
 12369  0840  0823               	movf	set_leds_top@x+1,w
 12370  0841  3A00               	xorlw	0	; case 0
 12371  0842  1903               	skipnz
 12372  0843  2845               	goto	l6580
 12373  0844  285C               	goto	l686
 12374  0845                     l6580:	
 12375                           
 12376                           ; Switch size 1, requested type "space"
 12377                           ; Number of cases is 7, Range of values is 1 to 100
 12378                           ; switch strategies available:
 12379                           ; Name         Instructions Cycles
 12380                           ; simple_byte           22    12 (average)
 12381                           ; direct_byte          209     9 (fixed)
 12382                           ; jumptable            263     9 (fixed)
 12383                           ;	Chosen strategy is simple_byte
 12384  0845  0822               	movf	set_leds_top@x,w
 12385  0846  3A01               	xorlw	1	; case 1
 12386  0847  1903               	skipnz
 12387  0848  2810               	goto	l5108
 12388  0849  3A03               	xorlw	3	; case 2
 12389  084A  1903               	skipnz
 12390  084B  2818               	goto	l5110
 12391  084C  3A01               	xorlw	1	; case 3
 12392  084D  1903               	skipnz
 12393  084E  2820               	goto	l5112
 12394  084F  3A07               	xorlw	7	; case 4
 12395  0850  1903               	skipnz
 12396  0851  2828               	goto	l5114
 12397  0852  3A01               	xorlw	1	; case 5
 12398  0853  1903               	skipnz
 12399  0854  2830               	goto	l5116
 12400  0855  3A03               	xorlw	3	; case 6
 12401  0856  1903               	skipnz
 12402  0857  285C               	goto	l686
 12403  0858  3A62               	xorlw	98	; case 100
 12404  0859  1903               	skipnz
 12405  085A  2838               	goto	l685
 12406  085B  285C               	goto	l686
 12407  085C                     l686:	
 12408  085C  0008               	return
 12409  085D                     __end_of_set_leds_top:	
 12410                           
 12411                           	psect	text37
 12412  1016                     __ptext37:	
 12413 ;; *************** function _set_leds_bottom *****************
 12414 ;; Defined at:
 12415 ;;		line 51 in file "LEDs.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;  x               2    2[BANK0 ] int 
 12418 ;; Auto vars:     Size  Location     Type
 12419 ;;		None
 12420 ;; Return value:  Size  Location     Type
 12421 ;;                  1    wreg      void 
 12422 ;; Registers used:
 12423 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12424 ;; Tracked objects:
 12425 ;;		On entry : 0/0
 12426 ;;		On exit  : 0/0
 12427 ;;		Unchanged: 0/0
 12428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12433 ;;Total ram usage:        2 bytes
 12434 ;; Hardware stack levels used:    1
 12435 ;; Hardware stack levels required when called:    2
 12436 ;; This function calls:
 12437 ;;		Nothing
 12438 ;; This function is called by:
 12439 ;;		_ReadSavedSettings
 12440 ;;		_star_tactiles
 12441 ;;		_solidring_tactiles
 12442 ;;		_read_bottom_tactile
 12443 ;;		_ring_tactiles
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           
 12448                           ;psect for function _set_leds_bottom
 12449  1016                     _set_leds_bottom:	
 12450                           
 12451                           ;LEDs.c: 52: LATDbits.LATD0 = 0;
 12452                           
 12453                           ;incstack = 0
 12454                           ; Regs used in _set_leds_bottom: [wreg-fsr0h+status,2+status,0]
 12455  1016  0022               	movlb	2	; select bank2
 12456  1017  100F               	bcf	15,0	;volatile
 12457                           
 12458                           ;LEDs.c: 53: LATDbits.LATD1 = 0;
 12459  1018  108F               	bcf	15,1	;volatile
 12460                           
 12461                           ;LEDs.c: 54: LATDbits.LATD2 = 0;
 12462  1019  110F               	bcf	15,2	;volatile
 12463                           
 12464                           ;LEDs.c: 55: LATDbits.LATD3 = 0;
 12465  101A  118F               	bcf	15,3	;volatile
 12466                           
 12467                           ;LEDs.c: 56: LATDbits.LATD4 = 0;
 12468  101B  120F               	bcf	15,4	;volatile
 12469                           
 12470                           ;LEDs.c: 57: switch (x) {
 12471  101C  2833               	goto	l5144
 12472  101D                     l690:	
 12473                           ;LEDs.c: 58: case 1:
 12474                           
 12475                           
 12476                           ;LEDs.c: 59: LATDbits.LATD0 = 1;
 12477  101D  0022               	movlb	2	; select bank2
 12478  101E  140F               	bsf	15,0	;volatile
 12479                           
 12480                           ;LEDs.c: 60: break;
 12481  101F  0008               	return
 12482  1020                     l692:	
 12483                           ;LEDs.c: 61: case 2:
 12484                           
 12485                           
 12486                           ;LEDs.c: 62: LATDbits.LATD1 = 1;
 12487  1020  0022               	movlb	2	; select bank2
 12488  1021  148F               	bsf	15,1	;volatile
 12489                           
 12490                           ;LEDs.c: 63: break;
 12491  1022  0008               	return
 12492  1023                     l693:	
 12493                           ;LEDs.c: 64: case 3:
 12494                           
 12495                           
 12496                           ;LEDs.c: 65: LATDbits.LATD2 = 1;
 12497  1023  0022               	movlb	2	; select bank2
 12498  1024  150F               	bsf	15,2	;volatile
 12499                           
 12500                           ;LEDs.c: 66: break;
 12501  1025  0008               	return
 12502  1026                     l694:	
 12503                           ;LEDs.c: 67: case 4:
 12504                           
 12505                           
 12506                           ;LEDs.c: 68: LATDbits.LATD3 = 1;
 12507  1026  0022               	movlb	2	; select bank2
 12508  1027  158F               	bsf	15,3	;volatile
 12509                           
 12510                           ;LEDs.c: 69: break;
 12511  1028  0008               	return
 12512  1029                     l695:	
 12513                           ;LEDs.c: 70: case 5:
 12514                           
 12515                           
 12516                           ;LEDs.c: 71: LATDbits.LATD4 = 1;
 12517  1029  0022               	movlb	2	; select bank2
 12518  102A  160F               	bsf	15,4	;volatile
 12519                           
 12520                           ;LEDs.c: 74: break;
 12521                           
 12522                           ;LEDs.c: 73: case 6:
 12523                           
 12524                           ;LEDs.c: 72: break;
 12525  102B  0008               	return
 12526  102C                     l697:	
 12527                           ;LEDs.c: 75: case 100:
 12528                           
 12529                           
 12530                           ;LEDs.c: 76: LATDbits.LATD0 = 1;
 12531  102C  0022               	movlb	2	; select bank2
 12532  102D  140F               	bsf	15,0	;volatile
 12533                           
 12534                           ;LEDs.c: 77: LATDbits.LATD1 = 1;
 12535  102E  148F               	bsf	15,1	;volatile
 12536                           
 12537                           ;LEDs.c: 78: LATDbits.LATD2 = 1;
 12538  102F  150F               	bsf	15,2	;volatile
 12539                           
 12540                           ;LEDs.c: 79: LATDbits.LATD3 = 1;
 12541  1030  158F               	bsf	15,3	;volatile
 12542                           
 12543                           ;LEDs.c: 80: LATDbits.LATD4 = 1;
 12544  1031  160F               	bsf	15,4	;volatile
 12545                           
 12546                           ;LEDs.c: 82: }
 12547                           
 12548                           ;LEDs.c: 81: break;
 12549  1032  0008               	return
 12550  1033                     l5144:	
 12551                           
 12552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12553                           ; Switch size 1, requested type "space"
 12554                           ; Number of cases is 1, Range of values is 0 to 0
 12555                           ; switch strategies available:
 12556                           ; Name         Instructions Cycles
 12557                           ; simple_byte            4     3 (average)
 12558                           ; direct_byte            8     6 (fixed)
 12559                           ; jumptable            260     6 (fixed)
 12560                           ;	Chosen strategy is simple_byte
 12561  1033  0020               	movlb	0	; select bank0
 12562  1034  0823               	movf	set_leds_bottom@x+1,w
 12563  1035  3A00               	xorlw	0	; case 0
 12564  1036  1903               	skipnz
 12565  1037  2839               	goto	l6582
 12566  1038  2850               	goto	l698
 12567  1039                     l6582:	
 12568                           
 12569                           ; Switch size 1, requested type "space"
 12570                           ; Number of cases is 7, Range of values is 1 to 100
 12571                           ; switch strategies available:
 12572                           ; Name         Instructions Cycles
 12573                           ; simple_byte           22    12 (average)
 12574                           ; direct_byte          209     9 (fixed)
 12575                           ; jumptable            263     9 (fixed)
 12576                           ;	Chosen strategy is simple_byte
 12577  1039  0822               	movf	set_leds_bottom@x,w
 12578  103A  3A01               	xorlw	1	; case 1
 12579  103B  1903               	skipnz
 12580  103C  281D               	goto	l690
 12581  103D  3A03               	xorlw	3	; case 2
 12582  103E  1903               	skipnz
 12583  103F  2820               	goto	l692
 12584  1040  3A01               	xorlw	1	; case 3
 12585  1041  1903               	skipnz
 12586  1042  2823               	goto	l693
 12587  1043  3A07               	xorlw	7	; case 4
 12588  1044  1903               	skipnz
 12589  1045  2826               	goto	l694
 12590  1046  3A01               	xorlw	1	; case 5
 12591  1047  1903               	skipnz
 12592  1048  2829               	goto	l695
 12593  1049  3A03               	xorlw	3	; case 6
 12594  104A  1903               	skipnz
 12595  104B  2850               	goto	l698
 12596  104C  3A62               	xorlw	98	; case 100
 12597  104D  1903               	skipnz
 12598  104E  282C               	goto	l697
 12599  104F  2850               	goto	l698
 12600  1050                     l698:	
 12601  1050  0008               	return
 12602  1051                     __end_of_set_leds_bottom:	
 12603                           
 12604                           	psect	text38
 12605  1EAE                     __ptext38:	
 12606 ;; *************** function _FLASH_ReadWord *****************
 12607 ;; Defined at:
 12608 ;;		line 58 in file "memory.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;  flashAddr       2    2[BANK0 ] unsigned int 
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;  GIEBitValue     1    4[BANK0 ] unsigned char 
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  2    2[BANK0 ] unsigned int 
 12615 ;; Registers used:
 12616 ;;		wreg, status,2, status,0
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12625 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12626 ;;Total ram usage:        3 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:    2
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_ReadSavedSettings
 12633 ;;		_FLASH_WriteWord
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           
 12638                           ;psect for function _FLASH_ReadWord
 12639  1EAE                     _FLASH_ReadWord:	
 12640                           
 12641                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
 12642                           
 12643                           ;incstack = 0
 12644                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
 12645  1EAE  3000               	movlw	0
 12646  1EAF  1B8B               	btfsc	11,7	;volatile
 12647  1EB0  3001               	movlw	1
 12648  1EB1  0020               	movlb	0	; select bank0
 12649  1EB2  00A4               	movwf	FLASH_ReadWord@GIEBitValue
 12650                           
 12651                           ;memory.c: 61: INTCONbits.GIE = 0;
 12652  1EB3  138B               	bcf	11,7	;volatile
 12653                           
 12654                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
 12655  1EB4  0822               	movf	FLASH_ReadWord@flashAddr,w
 12656  1EB5  0023               	movlb	3	; select bank3
 12657  1EB6  0091               	movwf	17	;volatile
 12658                           
 12659                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
 12660  1EB7  0020               	movlb	0	; select bank0
 12661  1EB8  0823               	movf	FLASH_ReadWord@flashAddr+1,w
 12662  1EB9  0023               	movlb	3	; select bank3
 12663  1EBA  0092               	movwf	18	;volatile
 12664                           
 12665                           ;memory.c: 65: PMCON1bits.CFGS = 0;
 12666  1EBB  1315               	bcf	21,6	;volatile
 12667                           
 12668                           ;memory.c: 66: PMCON1bits.RD = 1;
 12669  1EBC  1415               	bsf	21,0	;volatile
 12670                           
 12671                           ;memory.c: 67: __nop();
 12672  1EBD  0000               	nop
 12673                           
 12674                           ;memory.c: 68: __nop();
 12675  1EBE  0000               	nop
 12676                           
 12677                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
 12678  1EBF  0020               	movlb	0	; select bank0
 12679  1EC0  0C24               	rrf	FLASH_ReadWord@GIEBitValue,w
 12680  1EC1  1C03               	skipc
 12681  1EC2  138B               	bcf	11,7	;volatile
 12682  1EC3  1803               	skipnc
 12683  1EC4  178B               	bsf	11,7	;volatile
 12684                           
 12685                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
 12686  1EC5  0023               	movlb	3	; select bank3
 12687  1EC6  0814               	movf	20,w	;volatile
 12688  1EC7  0020               	movlb	0	; select bank0
 12689  1EC8  00A3               	movwf	?_FLASH_ReadWord+1
 12690  1EC9  0023               	movlb	3	; select bank3
 12691  1ECA  0813               	movf	19,w	;volatile
 12692  1ECB  0020               	movlb	0	; select bank0
 12693  1ECC  00A2               	movwf	?_FLASH_ReadWord
 12694  1ECD  0008               	return
 12695  1ECE                     __end_of_FLASH_ReadWord:	
 12696                           
 12697                           	psect	text39
 12698  1EF0                     __ptext39:	
 12699 ;; *************** function _InitializeTaps *****************
 12700 ;; Defined at:
 12701 ;;		line 187 in file "user.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;		None
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;  itap            2    3[BANK0 ] int 
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1    wreg      void 
 12708 ;; Registers used:
 12709 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12719 ;;Total ram usage:        3 bytes
 12720 ;; Hardware stack levels used:    1
 12721 ;; Hardware stack levels required when called:    2
 12722 ;; This function calls:
 12723 ;;		Nothing
 12724 ;; This function is called by:
 12725 ;;		_main
 12726 ;; This function uses a non-reentrant model
 12727 ;;
 12728                           
 12729                           
 12730                           ;psect for function _InitializeTaps
 12731  1EF0                     _InitializeTaps:	
 12732                           
 12733                           ;user.c: 188: for (int itap = 0; itap < 12; itap++) {
 12734                           
 12735                           ;incstack = 0
 12736                           ; Regs used in _InitializeTaps: [wreg+fsr1l+fsr1h+status,2+status,0]
 12737  1EF0  0020               	movlb	0	; select bank0
 12738  1EF1  01A3               	clrf	InitializeTaps@itap
 12739  1EF2  01A4               	clrf	InitializeTaps@itap+1
 12740  1EF3                     L15:	
 12741  1EF3  0824               	movf	InitializeTaps@itap+1,w
 12742  1EF4  3A80               	xorlw	128
 12743  1EF5  00A2               	movwf	??_InitializeTaps
 12744  1EF6  3080               	movlw	128
 12745  1EF7  0222               	subwf	??_InitializeTaps,w
 12746  1EF8  1D03               	skipz
 12747  1EF9  2EFC               	goto	u6215
 12748  1EFA  300C               	movlw	12
 12749  1EFB  0223               	subwf	InitializeTaps@itap,w
 12750  1EFC                     u6215:	
 12751  1EFC  1803               	btfsc	3,0
 12752  1EFD  0008               	return
 12753                           
 12754                           ;user.c: 189: tap[itap] = 0;
 12755  1EFE  0020               	movlb	0	; select bank0
 12756  1EFF  0823               	movf	InitializeTaps@itap,w
 12757  1F00  00A2               	movwf	??_InitializeTaps
 12758  1F01  3001               	movlw	1
 12759  1F02                     u6225:	
 12760  1F02  35A2               	lslf	??_InitializeTaps,f
 12761  1F03  3EFF               	addlw	-1
 12762  1F04  1D03               	skipz
 12763  1F05  2F02               	goto	u6225
 12764  1F06  3522               	lslf	??_InitializeTaps,w
 12765  1F07  3EA0               	addlw	(low (_tap| (0+256)))& (0+255)
 12766  1F08  0086               	movwf	6
 12767  1F09  3001               	movlw	1	; select bank3/4
 12768  1F0A  0087               	movwf	7
 12769  1F0B  3000               	movlw	0
 12770  1F0C  3FC0               	movwi [0]fsr1
 12771  1F0D  3000               	movlw	0
 12772  1F0E  3FC1               	movwi [1]fsr1
 12773  1F0F  3FC2               	movwi [2]fsr1
 12774  1F10  3FC3               	movwi [3]fsr1
 12775  1F11  3001               	movlw	1
 12776  1F12  07A3               	addwf	InitializeTaps@itap,f
 12777  1F13  3000               	movlw	0
 12778  1F14  3DA4               	addwfc	InitializeTaps@itap+1,f
 12779  1F15  2EF3               	goto	L15
 12780  1F16                     __end_of_InitializeTaps:	
 12781                           
 12782                           	psect	text40
 12783  1F6E                     __ptext40:	
 12784 ;; *************** function _InitApp *****************
 12785 ;; Defined at:
 12786 ;;		line 23 in file "user.c"
 12787 ;; Parameters:    Size  Location     Type
 12788 ;;		None
 12789 ;; Auto vars:     Size  Location     Type
 12790 ;;		None
 12791 ;; Return value:  Size  Location     Type
 12792 ;;                  1    wreg      void 
 12793 ;; Registers used:
 12794 ;;		wreg, status,2, status,0, pclath, cstack
 12795 ;; Tracked objects:
 12796 ;;		On entry : 0/0
 12797 ;;		On exit  : 0/0
 12798 ;;		Unchanged: 0/0
 12799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12804 ;;Total ram usage:        0 bytes
 12805 ;; Hardware stack levels used:    1
 12806 ;; Hardware stack levels required when called:    4
 12807 ;; This function calls:
 12808 ;;		_init_adc
 12809 ;;		_init_pwm
 12810 ;; This function is called by:
 12811 ;;		_main
 12812 ;; This function uses a non-reentrant model
 12813 ;;
 12814                           
 12815                           
 12816                           ;psect for function _InitApp
 12817  1F6E                     _InitApp:	
 12818                           
 12819                           ;user.c: 24: TRISBbits.TRISB0 = 0;
 12820                           
 12821                           ;incstack = 0
 12822                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
 12823  1F6E  0021               	movlb	1	; select bank1
 12824  1F6F  100D               	bcf	13,0	;volatile
 12825                           
 12826                           ;user.c: 25: TRISBbits.TRISB1 = 0;
 12827  1F70  108D               	bcf	13,1	;volatile
 12828                           
 12829                           ;user.c: 26: TRISBbits.TRISB2 = 0;
 12830  1F71  110D               	bcf	13,2	;volatile
 12831                           
 12832                           ;user.c: 27: TRISBbits.TRISB3 = 0;
 12833  1F72  118D               	bcf	13,3	;volatile
 12834                           
 12835                           ;user.c: 28: TRISBbits.TRISB4 = 0;
 12836  1F73  120D               	bcf	13,4	;volatile
 12837                           
 12838                           ;user.c: 29: TRISBbits.TRISB5 = 0;
 12839  1F74  128D               	bcf	13,5	;volatile
 12840                           
 12841                           ;user.c: 31: TRISCbits.TRISC0 = 1;
 12842  1F75  140E               	bsf	14,0	;volatile
 12843                           
 12844                           ;user.c: 32: TRISCbits.TRISC4 = 0;
 12845  1F76  120E               	bcf	14,4	;volatile
 12846                           
 12847                           ;user.c: 33: TRISCbits.TRISC5 = 0;
 12848  1F77  128E               	bcf	14,5	;volatile
 12849                           
 12850                           ;user.c: 36: TRISDbits.TRISD0 = 0;
 12851  1F78  100F               	bcf	15,0	;volatile
 12852                           
 12853                           ;user.c: 37: TRISDbits.TRISD1 = 0;
 12854  1F79  108F               	bcf	15,1	;volatile
 12855                           
 12856                           ;user.c: 38: TRISDbits.TRISD2 = 0;
 12857  1F7A  110F               	bcf	15,2	;volatile
 12858                           
 12859                           ;user.c: 39: TRISDbits.TRISD3 = 0;
 12860  1F7B  118F               	bcf	15,3	;volatile
 12861                           
 12862                           ;user.c: 40: TRISDbits.TRISD4 = 0;
 12863  1F7C  120F               	bcf	15,4	;volatile
 12864                           
 12865                           ;user.c: 41: TRISDbits.TRISD5 = 1;
 12866  1F7D  168F               	bsf	15,5	;volatile
 12867                           
 12868                           ;user.c: 42: TRISDbits.TRISD6 = 1;
 12869  1F7E  170F               	bsf	15,6	;volatile
 12870                           
 12871                           ;user.c: 43: TRISDbits.TRISD7 = 1;
 12872  1F7F  178F               	bsf	15,7	;volatile
 12873                           
 12874                           ;user.c: 49: TRISEbits.TRISE0 = 1;
 12875  1F80  1410               	bsf	16,0	;volatile
 12876                           
 12877                           ;user.c: 50: TRISEbits.TRISE1 = 1;
 12878  1F81  1490               	bsf	16,1	;volatile
 12879                           
 12880                           ;user.c: 51: ANSELEbits.ANSE0 = 0;
 12881  1F82  0023               	movlb	3	; select bank3
 12882  1F83  1010               	bcf	16,0	;volatile
 12883                           
 12884                           ;user.c: 52: ANSELEbits.ANSE1 = 0;
 12885  1F84  1090               	bcf	16,1	;volatile
 12886                           
 12887                           ;user.c: 53: PORTEbits.RE0 = 0;
 12888  1F85  0020               	movlb	0	; select bank0
 12889  1F86  1010               	bcf	16,0	;volatile
 12890                           
 12891                           ;user.c: 54: PORTEbits.RE1 = 0;
 12892  1F87  1090               	bcf	16,1	;volatile
 12893                           
 12894                           ;user.c: 56: TRISFbits.TRISF0 = 0;
 12895  1F88  0026               	movlb	6	; select bank6
 12896  1F89  100C               	bcf	12,0	;volatile
 12897                           
 12898                           ;user.c: 57: TRISFbits.TRISF1 = 0;
 12899  1F8A  108C               	bcf	12,1	;volatile
 12900                           
 12901                           ;user.c: 58: TRISFbits.TRISF2 = 0;
 12902  1F8B  110C               	bcf	12,2	;volatile
 12903                           
 12904                           ;user.c: 59: TRISFbits.TRISF3 = 0;
 12905  1F8C  118C               	bcf	12,3	;volatile
 12906                           
 12907                           ;user.c: 60: TRISFbits.TRISF4 = 0;
 12908  1F8D  120C               	bcf	12,4	;volatile
 12909                           
 12910                           ;user.c: 61: TRISFbits.TRISF5 = 0;
 12911  1F8E  128C               	bcf	12,5	;volatile
 12912                           
 12913                           ;user.c: 62: TRISFbits.TRISF6 = 1;
 12914  1F8F  170C               	bsf	12,6	;volatile
 12915                           
 12916                           ;user.c: 63: ANSELFbits.ANSF6 = 0;
 12917  1F90  0028               	movlb	8	; select bank8
 12918  1F91  130C               	bcf	12,6	;volatile
 12919                           
 12920                           ;user.c: 65: TRISGbits.TRISG1 = 0;
 12921  1F92  0026               	movlb	6	; select bank6
 12922  1F93  108D               	bcf	13,1	;volatile
 12923                           
 12924                           ;user.c: 66: TRISGbits.TRISG2 = 0;
 12925  1F94  110D               	bcf	13,2	;volatile
 12926                           
 12927                           ;user.c: 68: init_adc();
 12928  1F95  319D  25E1  319F   	fcall	_init_adc
 12929                           
 12930                           ;user.c: 69: init_pwm();
 12931  1F98  3192  2204         	fcall	_init_pwm
 12932                           
 12933                           ;user.c: 71: INTCONbits.GIE = 0b1;
 12934  1F9A  178B               	bsf	11,7	;volatile
 12935                           
 12936                           ;user.c: 72: INTCONbits.TMR0IE = 0b1;
 12937  1F9B  168B               	bsf	11,5	;volatile
 12938                           
 12939                           ;user.c: 73: INTCONbits.TMR0IF = 0b0;
 12940  1F9C  110B               	bcf	11,2	;volatile
 12941  1F9D  0008               	return
 12942  1F9E                     __end_of_InitApp:	
 12943                           
 12944                           	psect	text41
 12945  1204                     __ptext41:	
 12946 ;; *************** function _init_pwm *****************
 12947 ;; Defined at:
 12948 ;;		line 123 in file "user.c"
 12949 ;; Parameters:    Size  Location     Type
 12950 ;;		None
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;		None
 12953 ;; Return value:  Size  Location     Type
 12954 ;;                  1    wreg      void 
 12955 ;; Registers used:
 12956 ;;		wreg, status,2, status,0, pclath, cstack
 12957 ;; Tracked objects:
 12958 ;;		On entry : 0/0
 12959 ;;		On exit  : 0/0
 12960 ;;		Unchanged: 0/0
 12961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12966 ;;Total ram usage:        0 bytes
 12967 ;; Hardware stack levels used:    1
 12968 ;; Hardware stack levels required when called:    3
 12969 ;; This function calls:
 12970 ;;		_init_timer0
 12971 ;;		_init_timer2
 12972 ;; This function is called by:
 12973 ;;		_InitApp
 12974 ;; This function uses a non-reentrant model
 12975 ;;
 12976                           
 12977                           
 12978                           ;psect for function _init_pwm
 12979  1204                     _init_pwm:	
 12980                           
 12981                           ;user.c: 124: APFCONbits.CCP2SEL = 0;
 12982                           
 12983                           ;incstack = 0
 12984                           ; Regs used in _init_pwm: [wreg+status,2+status,0+pclath+cstack]
 12985  1204  0022               	movlb	2	; select bank2
 12986  1205  101D               	bcf	29,0	;volatile
 12987                           
 12988                           ;user.c: 125: TRISCbits.TRISC2 = 0;
 12989  1206  0021               	movlb	1	; select bank1
 12990  1207  110E               	bcf	14,2	;volatile
 12991                           
 12992                           ;user.c: 126: TRISCbits.TRISC1 = 0;
 12993  1208  108E               	bcf	14,1	;volatile
 12994                           
 12995                           ;user.c: 127: TRISGbits.TRISG0 = 0;
 12996  1209  0026               	movlb	6	; select bank6
 12997  120A  100D               	bcf	13,0	;volatile
 12998                           
 12999                           ;user.c: 128: TRISGbits.TRISG3 = 0;
 13000  120B  118D               	bcf	13,3	;volatile
 13001                           
 13002                           ;user.c: 129: TRISGbits.TRISG4 = 0;
 13003  120C  120D               	bcf	13,4	;volatile
 13004                           
 13005                           ;user.c: 130: TRISEbits.TRISE6 = 0;
 13006  120D  0021               	movlb	1	; select bank1
 13007  120E  1310               	bcf	16,6	;volatile
 13008                           
 13009                           ;user.c: 131: TRISEbits.TRISE5 = 0;
 13010  120F  1290               	bcf	16,5	;volatile
 13011                           
 13012                           ;user.c: 132: TRISEbits.TRISE4 = 0;
 13013  1210  1210               	bcf	16,4	;volatile
 13014                           
 13015                           ;user.c: 133: TRISEbits.TRISE3 = 0;
 13016  1211  1190               	bcf	16,3	;volatile
 13017                           
 13018                           ;user.c: 134: TRISEbits.TRISE2 = 0;
 13019  1212  1110               	bcf	16,2	;volatile
 13020                           
 13021                           ;user.c: 135: CCP1CONbits.CCP1M = 0b1111;
 13022  1213  300F               	movlw	15
 13023  1214  0025               	movlb	5	; select bank5
 13024  1215  0493               	iorwf	19,f	;volatile
 13025                           
 13026                           ;user.c: 136: CCP2CONbits.CCP2M = 0b1111;
 13027  1216  300F               	movlw	15
 13028  1217  049A               	iorwf	26,f	;volatile
 13029                           
 13030                           ;user.c: 137: CCP3CONbits.CCP3M = 0b1111;
 13031  1218  300F               	movlw	15
 13032  1219  0026               	movlb	6	; select bank6
 13033  121A  0493               	iorwf	19,f	;volatile
 13034                           
 13035                           ;user.c: 138: CCP4CONbits.CCP4M = 0b1111;
 13036  121B  300F               	movlw	15
 13037  121C  049A               	iorwf	26,f	;volatile
 13038                           
 13039                           ;user.c: 139: CCP5CONbits.CCP5M = 0b1111;
 13040  121D  300F               	movlw	15
 13041  121E  049E               	iorwf	30,f	;volatile
 13042                           
 13043                           ;user.c: 140: CCP6CONbits.CCP6M = 0b1111;
 13044  121F  300F               	movlw	15
 13045  1220  002C               	movlb	12	; select bank12
 13046  1221  0493               	iorwf	19,f	;volatile
 13047                           
 13048                           ;user.c: 141: CCP7CONbits.CCP7M = 0b1111;
 13049  1222  300F               	movlw	15
 13050  1223  0496               	iorwf	22,f	;volatile
 13051                           
 13052                           ;user.c: 142: CCP8CONbits.CCP8M = 0b1111;
 13053  1224  300F               	movlw	15
 13054  1225  0499               	iorwf	25,f	;volatile
 13055                           
 13056                           ;user.c: 143: CCP9CONbits.CCP9M = 0b1111;
 13057  1226  300F               	movlw	15
 13058  1227  049C               	iorwf	28,f	;volatile
 13059                           
 13060                           ;user.c: 144: CCP10CONbits.CCP10M = 0b1111;
 13061  1228  300F               	movlw	15
 13062  1229  049F               	iorwf	31,f	;volatile
 13063                           
 13064                           ;user.c: 145: CCPTMRS0 = 0b00000000;
 13065  122A  0025               	movlb	5	; select bank5
 13066  122B  019D               	clrf	29	;volatile
 13067                           
 13068                           ;user.c: 146: CCPTMRS1 = 0b00000000;
 13069  122C  019E               	clrf	30	;volatile
 13070                           
 13071                           ;user.c: 147: CCPTMRS2 = 0b00000000;
 13072  122D  019F               	clrf	31	;volatile
 13073                           
 13074                           ;user.c: 148: CCPR1 = 50;
 13075  122E  3000               	movlw	0
 13076  122F  0092               	movwf	18	;volatile
 13077  1230  3032               	movlw	50
 13078  1231  0091               	movwf	17	;volatile
 13079                           
 13080                           ;user.c: 149: CCPR2 = 100;
 13081  1232  3000               	movlw	0
 13082  1233  0099               	movwf	25	;volatile
 13083  1234  3064               	movlw	100
 13084  1235  0098               	movwf	24	;volatile
 13085                           
 13086                           ;user.c: 150: CCPR3 = 150;
 13087  1236  3000               	movlw	0
 13088  1237  0026               	movlb	6	; select bank6
 13089  1238  0092               	movwf	18	;volatile
 13090  1239  3096               	movlw	150
 13091  123A  0091               	movwf	17	;volatile
 13092                           
 13093                           ;user.c: 151: CCPR4 = 200;
 13094  123B  3000               	movlw	0
 13095  123C  0099               	movwf	25	;volatile
 13096  123D  30C8               	movlw	200
 13097  123E  0098               	movwf	24	;volatile
 13098                           
 13099                           ;user.c: 152: init_timer2();
 13100  123F  319D  25D8  3192   	fcall	_init_timer2
 13101                           
 13102                           ;user.c: 153: init_timer0();
 13103  1242  3187  27F9         	fcall	_init_timer0
 13104  1244  0008               	return
 13105  1245                     __end_of_init_pwm:	
 13106                           
 13107                           	psect	text42
 13108  1DD8                     __ptext42:	
 13109 ;; *************** function _init_timer2 *****************
 13110 ;; Defined at:
 13111 ;;		line 156 in file "user.c"
 13112 ;; Parameters:    Size  Location     Type
 13113 ;;		None
 13114 ;; Auto vars:     Size  Location     Type
 13115 ;;		None
 13116 ;; Return value:  Size  Location     Type
 13117 ;;                  1    wreg      void 
 13118 ;; Registers used:
 13119 ;;		wreg, status,2, status,0
 13120 ;; Tracked objects:
 13121 ;;		On entry : 0/0
 13122 ;;		On exit  : 0/0
 13123 ;;		Unchanged: 0/0
 13124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13129 ;;Total ram usage:        0 bytes
 13130 ;; Hardware stack levels used:    1
 13131 ;; Hardware stack levels required when called:    2
 13132 ;; This function calls:
 13133 ;;		Nothing
 13134 ;; This function is called by:
 13135 ;;		_init_pwm
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           
 13140                           ;psect for function _init_timer2
 13141  1DD8                     _init_timer2:	
 13142                           
 13143                           ;user.c: 157: T2CONbits.T2OUTPS = 0b0000;
 13144                           
 13145                           ;incstack = 0
 13146                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
 13147  1DD8  3087               	movlw	-121
 13148  1DD9  0020               	movlb	0	; select bank0
 13149  1DDA  059C               	andwf	28,f	;volatile
 13150                           
 13151                           ;user.c: 158: T2CONbits.T2CKPS = 0b00;
 13152  1DDB  30FC               	movlw	-4
 13153  1DDC  059C               	andwf	28,f	;volatile
 13154                           
 13155                           ;user.c: 159: PR2 = 0xFF;
 13156  1DDD  30FF               	movlw	255
 13157  1DDE  009B               	movwf	27	;volatile
 13158                           
 13159                           ;user.c: 160: T2CONbits.TMR2ON = 1;
 13160  1DDF  151C               	bsf	28,2	;volatile
 13161  1DE0  0008               	return
 13162  1DE1                     __end_of_init_timer2:	
 13163                           
 13164                           	psect	text43
 13165  07F9                     __ptext43:	
 13166 ;; *************** function _init_timer0 *****************
 13167 ;; Defined at:
 13168 ;;		line 163 in file "user.c"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;		None
 13171 ;; Auto vars:     Size  Location     Type
 13172 ;;		None
 13173 ;; Return value:  Size  Location     Type
 13174 ;;                  1    wreg      void 
 13175 ;; Registers used:
 13176 ;;		None
 13177 ;; Tracked objects:
 13178 ;;		On entry : 0/0
 13179 ;;		On exit  : 0/0
 13180 ;;		Unchanged: 0/0
 13181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13186 ;;Total ram usage:        0 bytes
 13187 ;; Hardware stack levels used:    1
 13188 ;; Hardware stack levels required when called:    2
 13189 ;; This function calls:
 13190 ;;		Nothing
 13191 ;; This function is called by:
 13192 ;;		_init_pwm
 13193 ;; This function uses a non-reentrant model
 13194 ;;
 13195                           
 13196                           
 13197                           ;psect for function _init_timer0
 13198  07F9                     _init_timer0:	
 13199                           
 13200                           ;user.c: 164: OPTION_REGbits.TMR0CS = 0b0;
 13201                           
 13202                           ;incstack = 0
 13203                           ; Regs used in _init_timer0: []
 13204  07F9  0021               	movlb	1	; select bank1
 13205  07FA  1295               	bcf	21,5	;volatile
 13206                           
 13207                           ;user.c: 165: OPTION_REGbits.PSA = 0b0;
 13208  07FB  1195               	bcf	21,3	;volatile
 13209                           
 13210                           ;user.c: 166: OPTION_REGbits.PS0 = 0b0;
 13211  07FC  1015               	bcf	21,0	;volatile
 13212                           
 13213                           ;user.c: 167: OPTION_REGbits.PS1 = 0b1;
 13214  07FD  1495               	bsf	21,1	;volatile
 13215                           
 13216                           ;user.c: 168: OPTION_REGbits.PS2 = 0b0;
 13217  07FE  1115               	bcf	21,2	;volatile
 13218  07FF  0008               	return
 13219  0800                     __end_of_init_timer0:	
 13220                           
 13221                           	psect	text44
 13222  1DE1                     __ptext44:	
 13223 ;; *************** function _init_adc *****************
 13224 ;; Defined at:
 13225 ;;		line 109 in file "user.c"
 13226 ;; Parameters:    Size  Location     Type
 13227 ;;		None
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;		None
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  1    wreg      void 
 13232 ;; Registers used:
 13233 ;;		wreg, status,2, status,0
 13234 ;; Tracked objects:
 13235 ;;		On entry : 0/0
 13236 ;;		On exit  : 0/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13243 ;;Total ram usage:        0 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; Hardware stack levels required when called:    2
 13246 ;; This function calls:
 13247 ;;		Nothing
 13248 ;; This function is called by:
 13249 ;;		_InitApp
 13250 ;; This function uses a non-reentrant model
 13251 ;;
 13252                           
 13253                           
 13254                           ;psect for function _init_adc
 13255  1DE1                     _init_adc:	
 13256                           
 13257                           ;user.c: 110: ADCON1bits.ADFM = 0b1;
 13258                           
 13259                           ;incstack = 0
 13260                           ; Regs used in _init_adc: [wreg+status,2+status,0]
 13261  1DE1  0021               	movlb	1	; select bank1
 13262  1DE2  179E               	bsf	30,7	;volatile
 13263                           
 13264                           ;user.c: 111: ADCON1bits.ADCS = 0b110;
 13265  1DE3  081E               	movf	30,w	;volatile
 13266  1DE4  398F               	andlw	-113
 13267  1DE5  3860               	iorlw	96
 13268  1DE6  009E               	movwf	30	;volatile
 13269                           
 13270                           ;user.c: 112: ADCON1bits.ADPREF = 0b00;
 13271  1DE7  30FC               	movlw	-4
 13272  1DE8  059E               	andwf	30,f	;volatile
 13273                           
 13274                           ;user.c: 113: ADCON0bits.ADON = 0b1;
 13275  1DE9  141D               	bsf	29,0	;volatile
 13276  1DEA  0008               	return
 13277  1DEB                     __end_of_init_adc:	
 13278                           
 13279                           	psect	text45
 13280  1DD0                     __ptext45:	
 13281 ;; *************** function _ConfigureOscillator *****************
 13282 ;; Defined at:
 13283 ;;		line 18 in file "system.c"
 13284 ;; Parameters:    Size  Location     Type
 13285 ;;		None
 13286 ;; Auto vars:     Size  Location     Type
 13287 ;;		None
 13288 ;; Return value:  Size  Location     Type
 13289 ;;                  1    wreg      void 
 13290 ;; Registers used:
 13291 ;;		wreg, status,2, status,0
 13292 ;; Tracked objects:
 13293 ;;		On entry : 0/0
 13294 ;;		On exit  : 0/0
 13295 ;;		Unchanged: 0/0
 13296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13301 ;;Total ram usage:        0 bytes
 13302 ;; Hardware stack levels used:    1
 13303 ;; Hardware stack levels required when called:    2
 13304 ;; This function calls:
 13305 ;;		Nothing
 13306 ;; This function is called by:
 13307 ;;		_main
 13308 ;; This function uses a non-reentrant model
 13309 ;;
 13310                           
 13311                           
 13312                           ;psect for function _ConfigureOscillator
 13313  1DD0                     _ConfigureOscillator:	
 13314                           
 13315                           ;system.c: 20: OSCCONbits.SCS = 0b00;
 13316                           
 13317                           ;incstack = 0
 13318                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
 13319  1DD0  30FC               	movlw	-4
 13320  1DD1  0021               	movlb	1	; select bank1
 13321  1DD2  0599               	andwf	25,f	;volatile
 13322  1DD3  0008               	return
 13323  1DD4                     __end_of_ConfigureOscillator:	
 13324                           
 13325                           	psect	intentry
 13326  0004                     __pintentry:	
 13327 ;; *************** function _isr *****************
 13328 ;; Defined at:
 13329 ;;		line 23 in file "interrupts.c"
 13330 ;; Parameters:    Size  Location     Type
 13331 ;;		None
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;  tmpSubDelay     2    0[BANK0 ] int 
 13334 ;; Return value:  Size  Location     Type
 13335 ;;                  1    wreg      void 
 13336 ;; Registers used:
 13337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13338 ;; Tracked objects:
 13339 ;;		On entry : 0/0
 13340 ;;		On exit  : 0/0
 13341 ;;		Unchanged: 0/0
 13342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13345 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13346 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13347 ;;Total ram usage:       11 bytes
 13348 ;; Hardware stack levels used:    1
 13349 ;; Hardware stack levels required when called:    1
 13350 ;; This function calls:
 13351 ;;		i1_set_leds_top
 13352 ;; This function is called by:
 13353 ;;		Interrupt level 1
 13354 ;; This function uses a non-reentrant model
 13355 ;;
 13356                           
 13357  0004                     _isr:	
 13358                           
 13359                           ;incstack = 0
 13360                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13361  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13362  0005  3180               	pagesel	$
 13363  0006  0020               	movlb	0	; select bank0
 13364  0007  087F               	movf	127,w
 13365  0008  00FC               	movwf	??_isr+8
 13366                           
 13367                           ;interrupts.c: 24: int tmpSubDelay;
 13368                           ;interrupts.c: 25: extern volatile long timer;
 13369                           ;interrupts.c: 26: extern volatile long sub_timer;
 13370                           ;interrupts.c: 27: extern volatile long tap_timer;
 13371                           ;interrupts.c: 29: extern volatile long baseline_delay_time;
 13372                           ;interrupts.c: 31: extern int top_push_state;
 13373                           ;interrupts.c: 32: extern uint8_t feedback_start;
 13374                           ;interrupts.c: 33: extern volatile long mod_timer;
 13375                           ;interrupts.c: 34: extern volatile long delay_time;
 13376                           ;interrupts.c: 35: if (INTCONbits.TMR0IF == 1) {
 13377  0009  1D0B               	btfss	11,2	;volatile
 13378  000A  2912               	goto	i1l91
 13379                           
 13380                           ;interrupts.c: 36: tmpSubDelay = delay_time;
 13381  000B  0021               	movlb	1	; select bank1
 13382  000C  084E               	movf	(_delay_time+1)^(0+128),w	;volatile
 13383  000D  0020               	movlb	0	; select bank0
 13384  000E  00A1               	movwf	isr@tmpSubDelay+1
 13385  000F  0021               	movlb	1	; select bank1
 13386  0010  084D               	movf	_delay_time^(0+128),w	;volatile
 13387  0011  0020               	movlb	0	; select bank0
 13388  0012  00A0               	movwf	isr@tmpSubDelay
 13389                           
 13390                           ;interrupts.c: 37: timer = timer + 1;
 13391  0013  3001               	movlw	1
 13392  0014  00F4               	movwf	??_isr
 13393  0015  3000               	movlw	0
 13394  0016  00F5               	movwf	??_isr+1
 13395  0017  3000               	movlw	0
 13396  0018  00F6               	movwf	??_isr+2
 13397  0019  3000               	movlw	0
 13398  001A  00F7               	movwf	??_isr+3
 13399  001B  0021               	movlb	1	; select bank1
 13400  001C  0864               	movf	_timer^(0+128),w	;volatile
 13401  001D  07F4               	addwf	??_isr,f
 13402  001E  0865               	movf	(_timer+1)^(0+128),w	;volatile
 13403  001F  3DF5               	addwfc	??_isr+1,f
 13404  0020  0866               	movf	(_timer+2)^(0+128),w	;volatile
 13405  0021  3DF6               	addwfc	??_isr+2,f
 13406  0022  0867               	movf	(_timer+3)^(0+128),w	;volatile
 13407  0023  3DF7               	addwfc	??_isr+3,f
 13408  0024  0877               	movf	??_isr+3,w
 13409  0025  00E7               	movwf	(_timer+3)^(0+128)	;volatile
 13410  0026  0876               	movf	??_isr+2,w
 13411  0027  00E6               	movwf	(_timer+2)^(0+128)	;volatile
 13412  0028  0875               	movf	??_isr+1,w
 13413  0029  00E5               	movwf	(_timer+1)^(0+128)	;volatile
 13414  002A  0874               	movf	??_isr,w
 13415  002B  00E4               	movwf	_timer^(0+128)	;volatile
 13416                           
 13417                           ;interrupts.c: 38: sub_timer = sub_timer + 1;
 13418  002C  3001               	movlw	1
 13419  002D  00F4               	movwf	??_isr
 13420  002E  3000               	movlw	0
 13421  002F  00F5               	movwf	??_isr+1
 13422  0030  3000               	movlw	0
 13423  0031  00F6               	movwf	??_isr+2
 13424  0032  3000               	movlw	0
 13425  0033  00F7               	movwf	??_isr+3
 13426  0034  085C               	movf	_sub_timer^(0+128),w	;volatile
 13427  0035  07F4               	addwf	??_isr,f
 13428  0036  085D               	movf	(_sub_timer+1)^(0+128),w	;volatile
 13429  0037  3DF5               	addwfc	??_isr+1,f
 13430  0038  085E               	movf	(_sub_timer+2)^(0+128),w	;volatile
 13431  0039  3DF6               	addwfc	??_isr+2,f
 13432  003A  085F               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13433  003B  3DF7               	addwfc	??_isr+3,f
 13434  003C  0877               	movf	??_isr+3,w
 13435  003D  00DF               	movwf	(_sub_timer+3)^(0+128)	;volatile
 13436  003E  0876               	movf	??_isr+2,w
 13437  003F  00DE               	movwf	(_sub_timer+2)^(0+128)	;volatile
 13438  0040  0875               	movf	??_isr+1,w
 13439  0041  00DD               	movwf	(_sub_timer+1)^(0+128)	;volatile
 13440  0042  0874               	movf	??_isr,w
 13441  0043  00DC               	movwf	_sub_timer^(0+128)	;volatile
 13442                           
 13443                           ;interrupts.c: 39: tap_timer = tap_timer + 1;
 13444  0044  3001               	movlw	1
 13445  0045  00F4               	movwf	??_isr
 13446  0046  3000               	movlw	0
 13447  0047  00F5               	movwf	??_isr+1
 13448  0048  3000               	movlw	0
 13449  0049  00F6               	movwf	??_isr+2
 13450  004A  3000               	movlw	0
 13451  004B  00F7               	movwf	??_isr+3
 13452  004C  0860               	movf	_tap_timer^(0+128),w	;volatile
 13453  004D  07F4               	addwf	??_isr,f
 13454  004E  0861               	movf	(_tap_timer+1)^(0+128),w	;volatile
 13455  004F  3DF5               	addwfc	??_isr+1,f
 13456  0050  0862               	movf	(_tap_timer+2)^(0+128),w	;volatile
 13457  0051  3DF6               	addwfc	??_isr+2,f
 13458  0052  0863               	movf	(_tap_timer+3)^(0+128),w	;volatile
 13459  0053  3DF7               	addwfc	??_isr+3,f
 13460  0054  0877               	movf	??_isr+3,w
 13461  0055  00E3               	movwf	(_tap_timer+3)^(0+128)	;volatile
 13462  0056  0876               	movf	??_isr+2,w
 13463  0057  00E2               	movwf	(_tap_timer+2)^(0+128)	;volatile
 13464  0058  0875               	movf	??_isr+1,w
 13465  0059  00E1               	movwf	(_tap_timer+1)^(0+128)	;volatile
 13466  005A  0874               	movf	??_isr,w
 13467  005B  00E0               	movwf	_tap_timer^(0+128)	;volatile
 13468                           
 13469                           ;interrupts.c: 40: mod_timer = mod_timer + 1;
 13470  005C  3001               	movlw	1
 13471  005D  00F4               	movwf	??_isr
 13472  005E  3000               	movlw	0
 13473  005F  00F5               	movwf	??_isr+1
 13474  0060  3000               	movlw	0
 13475  0061  00F6               	movwf	??_isr+2
 13476  0062  3000               	movlw	0
 13477  0063  00F7               	movwf	??_isr+3
 13478  0064  0022               	movlb	2	; select bank2
 13479  0065  0824               	movf	_mod_timer^(0+256),w	;volatile
 13480  0066  07F4               	addwf	??_isr,f
 13481  0067  0825               	movf	(_mod_timer+1)^(0+256),w	;volatile
 13482  0068  3DF5               	addwfc	??_isr+1,f
 13483  0069  0826               	movf	(_mod_timer+2)^(0+256),w	;volatile
 13484  006A  3DF6               	addwfc	??_isr+2,f
 13485  006B  0827               	movf	(_mod_timer+3)^(0+256),w	;volatile
 13486  006C  3DF7               	addwfc	??_isr+3,f
 13487  006D  0877               	movf	??_isr+3,w
 13488  006E  00A7               	movwf	(_mod_timer+3)^(0+256)	;volatile
 13489  006F  0876               	movf	??_isr+2,w
 13490  0070  00A6               	movwf	(_mod_timer+2)^(0+256)	;volatile
 13491  0071  0875               	movf	??_isr+1,w
 13492  0072  00A5               	movwf	(_mod_timer+1)^(0+256)	;volatile
 13493  0073  0874               	movf	??_isr,w
 13494  0074  00A4               	movwf	_mod_timer^(0+256)	;volatile
 13495                           
 13496                           ;interrupts.c: 41: test_timer++;
 13497  0075  3001               	movlw	1
 13498  0076  0023               	movlb	3	; select bank3
 13499  0077  07E0               	addwf	_test_timer^(0+384),f	;volatile
 13500  0078  3000               	movlw	0
 13501  0079  3DE1               	addwfc	(_test_timer+1)^(0+384),f	;volatile
 13502  007A  3000               	movlw	0
 13503  007B  3DE2               	addwfc	(_test_timer+2)^(0+384),f	;volatile
 13504  007C  3000               	movlw	0
 13505  007D  3DE3               	addwfc	(_test_timer+3)^(0+384),f	;volatile
 13506                           
 13507                           ;interrupts.c: 42: if (feedback_start == 1) {
 13508  007E  0021               	movlb	1	; select bank1
 13509  007F  036A               	decf	_feedback_start^(0+128),w
 13510  0080  1D03               	btfss	3,2
 13511  0081  2899               	goto	i1l4480
 13512                           
 13513                           ;interrupts.c: 43: feedback_timer++;
 13514  0082  3001               	movlw	1
 13515  0083  0022               	movlb	2	; select bank2
 13516  0084  07BA               	addwf	_feedback_timer^(0+256),f	;volatile
 13517  0085  3000               	movlw	0
 13518  0086  3DBB               	addwfc	(_feedback_timer+1)^(0+256),f	;volatile
 13519                           
 13520                           ;interrupts.c: 44: if (feedback_timer > long_press_limit) {feedback_timer = long_press_l
      +                          imit;}
 13521  0087  083B               	movf	(_feedback_timer+1)^(0+256),w	;volatile
 13522  0088  0021               	movlb	1	; select bank1
 13523  0089  0256               	subwf	(_long_press_limit+1)^(0+128),w
 13524  008A  1D03               	skipz
 13525  008B  2890               	goto	u445_25
 13526  008C  0022               	movlb	2	; select bank2
 13527  008D  083A               	movf	_feedback_timer^(0+256),w	;volatile
 13528  008E  0021               	movlb	1	; select bank1
 13529  008F  0255               	subwf	_long_press_limit^(0+128),w
 13530  0090                     u445_25:	
 13531  0090  1803               	skipnc
 13532  0091  2899               	goto	i1l4480
 13533  0092  0856               	movf	(_long_press_limit+1)^(0+128),w
 13534  0093  0022               	movlb	2	; select bank2
 13535  0094  00BB               	movwf	(_feedback_timer+1)^(0+256)	;volatile
 13536  0095  0021               	movlb	1	; select bank1
 13537  0096  0855               	movf	_long_press_limit^(0+128),w
 13538  0097  0022               	movlb	2	; select bank2
 13539  0098  00BA               	movwf	_feedback_timer^(0+256)	;volatile
 13540  0099                     i1l4480:	
 13541                           
 13542                           ;interrupts.c: 45: }
 13543                           ;interrupts.c: 46: if (longTap_start == 1) {
 13544  0099  0022               	movlb	2	; select bank2
 13545  009A  0355               	decf	_longTap_start^(0+256),w
 13546  009B  1D03               	btfss	3,2
 13547  009C  28B3               	goto	i1l4486
 13548                           
 13549                           ;interrupts.c: 47: longTap_timer++;
 13550  009D  3001               	movlw	1
 13551  009E  07C6               	addwf	_longTap_timer^(0+256),f	;volatile
 13552  009F  3000               	movlw	0
 13553  00A0  3DC7               	addwfc	(_longTap_timer+1)^(0+256),f	;volatile
 13554                           
 13555                           ;interrupts.c: 48: if (longTap_timer > long_press_limit) {
 13556  00A1  0847               	movf	(_longTap_timer+1)^(0+256),w	;volatile
 13557  00A2  0021               	movlb	1	; select bank1
 13558  00A3  0256               	subwf	(_long_press_limit+1)^(0+128),w
 13559  00A4  1D03               	skipz
 13560  00A5  28AA               	goto	u447_25
 13561  00A6  0022               	movlb	2	; select bank2
 13562  00A7  0846               	movf	_longTap_timer^(0+256),w	;volatile
 13563  00A8  0021               	movlb	1	; select bank1
 13564  00A9  0255               	subwf	_long_press_limit^(0+128),w
 13565  00AA                     u447_25:	
 13566  00AA  1803               	skipnc
 13567  00AB  28B3               	goto	i1l4486
 13568                           
 13569                           ;interrupts.c: 49: longTap_timer = long_press_limit;
 13570  00AC  0856               	movf	(_long_press_limit+1)^(0+128),w
 13571  00AD  0022               	movlb	2	; select bank2
 13572  00AE  00C7               	movwf	(_longTap_timer+1)^(0+256)	;volatile
 13573  00AF  0021               	movlb	1	; select bank1
 13574  00B0  0855               	movf	_long_press_limit^(0+128),w
 13575  00B1  0022               	movlb	2	; select bank2
 13576  00B2  00C6               	movwf	_longTap_timer^(0+256)	;volatile
 13577  00B3                     i1l4486:	
 13578                           
 13579                           ;interrupts.c: 50: }
 13580                           ;interrupts.c: 51: }
 13581                           ;interrupts.c: 52: INTCONbits.TMR0IF = 0;
 13582  00B3  110B               	bcf	11,2	;volatile
 13583                           
 13584                           ;interrupts.c: 54: if (adjust_sub_delay == 1) {
 13585  00B4  0022               	movlb	2	; select bank2
 13586  00B5  032C               	decf	_adjust_sub_delay^(0+256),w
 13587  00B6  042D               	iorwf	(_adjust_sub_delay+1)^(0+256),w
 13588  00B7  1D03               	btfss	3,2
 13589  00B8  2912               	goto	i1l91
 13590                           
 13591                           ;interrupts.c: 55: if ((sub_timer >= delay_time) && ((baseline_delay_time - timer) < 4))
      +                           {
 13592  00B9  0021               	movlb	1	; select bank1
 13593  00BA  085F               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13594  00BB  3A80               	xorlw	128
 13595  00BC  00F4               	movwf	??_isr
 13596  00BD  0850               	movf	(_delay_time+3)^(0+128),w	;volatile
 13597  00BE  3A80               	xorlw	128
 13598  00BF  0274               	subwf	??_isr,w
 13599  00C0  1D03               	skipz
 13600  00C1  28CC               	goto	u449_23
 13601  00C2  084F               	movf	(_delay_time+2)^(0+128),w	;volatile
 13602  00C3  025E               	subwf	(_sub_timer+2)^(0+128),w	;volatile
 13603  00C4  1D03               	skipz
 13604  00C5  28CC               	goto	u449_23
 13605  00C6  084E               	movf	(_delay_time+1)^(0+128),w	;volatile
 13606  00C7  025D               	subwf	(_sub_timer+1)^(0+128),w	;volatile
 13607  00C8  1D03               	skipz
 13608  00C9  28CC               	goto	u449_23
 13609  00CA  084D               	movf	_delay_time^(0+128),w	;volatile
 13610  00CB  025C               	subwf	_sub_timer^(0+128),w	;volatile
 13611  00CC                     u449_23:	
 13612  00CC  1C03               	skipc
 13613  00CD  2912               	goto	i1l91
 13614  00CE  0849               	movf	_baseline_delay_time^(0+128),w	;volatile
 13615  00CF  00F4               	movwf	??_isr
 13616  00D0  084A               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 13617  00D1  00F5               	movwf	??_isr+1
 13618  00D2  084B               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
 13619  00D3  00F6               	movwf	??_isr+2
 13620  00D4  084C               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
 13621  00D5  00F7               	movwf	??_isr+3
 13622  00D6  0964               	comf	_timer^(0+128),w	;volatile
 13623  00D7  00F8               	movwf	??_isr+4
 13624  00D8  0965               	comf	(_timer+1)^(0+128),w	;volatile
 13625  00D9  00F9               	movwf	??_isr+5
 13626  00DA  0966               	comf	(_timer+2)^(0+128),w	;volatile
 13627  00DB  00FA               	movwf	??_isr+6
 13628  00DC  0967               	comf	(_timer+3)^(0+128),w	;volatile
 13629  00DD  00FB               	movwf	??_isr+7
 13630  00DE  0AF8               	incf	??_isr+4,f
 13631  00DF  1903               	skipnz
 13632  00E0  0AF9               	incf	??_isr+5,f
 13633  00E1  1903               	skipnz
 13634  00E2  0AFA               	incf	??_isr+6,f
 13635  00E3  1903               	skipnz
 13636  00E4  0AFB               	incf	??_isr+7,f
 13637  00E5  0878               	movf	??_isr+4,w
 13638  00E6  07F4               	addwf	??_isr,f
 13639  00E7  0879               	movf	??_isr+5,w
 13640  00E8  3DF5               	addwfc	??_isr+1,f
 13641  00E9  087A               	movf	??_isr+6,w
 13642  00EA  3DF6               	addwfc	??_isr+2,f
 13643  00EB  087B               	movf	??_isr+7,w
 13644  00EC  3DF7               	addwfc	??_isr+3,f
 13645  00ED  1BF7               	btfsc	??_isr+3,7
 13646  00EE  28FC               	goto	i1l4494
 13647  00EF  0877               	movf	??_isr+3,w
 13648  00F0  1D03               	btfss	3,2
 13649  00F1  2912               	goto	i1l91
 13650  00F2  0876               	movf	??_isr+2,w
 13651  00F3  1D03               	btfss	3,2
 13652  00F4  2912               	goto	i1l91
 13653  00F5  0875               	movf	??_isr+1,w
 13654  00F6  1D03               	btfss	3,2
 13655  00F7  2912               	goto	i1l91
 13656  00F8  3004               	movlw	4
 13657  00F9  0274               	subwf	??_isr,w
 13658  00FA  1803               	btfsc	3,0
 13659  00FB  2912               	goto	i1l91
 13660  00FC                     i1l4494:	
 13661                           
 13662                           ;interrupts.c: 56: tmpSubDelay = sub_timer + (baseline_delay_time- timer);
 13663  00FC  0964               	comf	_timer^(0+128),w	;volatile
 13664  00FD  00F4               	movwf	??_isr
 13665  00FE  0965               	comf	(_timer+1)^(0+128),w	;volatile
 13666  00FF  00F5               	movwf	??_isr+1
 13667  0100  0AF4               	incf	??_isr,f
 13668  0101  1903               	skipnz
 13669  0102  0AF5               	incf	??_isr+1,f
 13670  0103  0849               	movf	_baseline_delay_time^(0+128),w	;volatile
 13671  0104  0774               	addwf	??_isr,w
 13672  0105  00F6               	movwf	??_isr+2
 13673  0106  084A               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 13674  0107  3D75               	addwfc	??_isr+1,w
 13675  0108  00F7               	movwf	??_isr+3
 13676  0109  085C               	movf	_sub_timer^(0+128),w	;volatile
 13677  010A  0776               	addwf	??_isr+2,w
 13678  010B  0020               	movlb	0	; select bank0
 13679  010C  00A0               	movwf	isr@tmpSubDelay
 13680  010D  0021               	movlb	1	; select bank1
 13681  010E  085D               	movf	(_sub_timer+1)^(0+128),w	;volatile
 13682  010F  3D77               	addwfc	??_isr+3,w
 13683  0110  0020               	movlb	0	; select bank0
 13684  0111  00A1               	movwf	isr@tmpSubDelay+1
 13685  0112                     i1l91:	
 13686                           
 13687                           ;interrupts.c: 57: }
 13688                           ;interrupts.c: 58: }
 13689                           ;interrupts.c: 59: }
 13690                           ;interrupts.c: 72: if (longTap_state < 1 && doubleTap_state < 1) {
 13691  0112  0020               	movlb	0	; select bank0
 13692  0113  086A               	movf	_longTap_state,w	;volatile
 13693  0114  1D03               	btfss	3,2
 13694  0115  295B               	goto	i1l4514
 13695  0116  086B               	movf	_doubleTap_state,w	;volatile
 13696  0117  1D03               	btfss	3,2
 13697  0118  295B               	goto	i1l4514
 13698                           
 13699                           ;interrupts.c: 75: if (timer >= baseline_delay_time) {
 13700  0119  0021               	movlb	1	; select bank1
 13701  011A  0867               	movf	(_timer+3)^(0+128),w	;volatile
 13702  011B  3A80               	xorlw	128
 13703  011C  00F4               	movwf	??_isr
 13704  011D  084C               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
 13705  011E  3A80               	xorlw	128
 13706  011F  0274               	subwf	??_isr,w
 13707  0120  1D03               	skipz
 13708  0121  292C               	goto	u453_23
 13709  0122  084B               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
 13710  0123  0266               	subwf	(_timer+2)^(0+128),w	;volatile
 13711  0124  1D03               	skipz
 13712  0125  292C               	goto	u453_23
 13713  0126  084A               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 13714  0127  0265               	subwf	(_timer+1)^(0+128),w	;volatile
 13715  0128  1D03               	skipz
 13716  0129  292C               	goto	u453_23
 13717  012A  0849               	movf	_baseline_delay_time^(0+128),w	;volatile
 13718  012B  0264               	subwf	_timer^(0+128),w	;volatile
 13719  012C                     u453_23:	
 13720  012C  1C03               	skipc
 13721  012D  2949               	goto	i1l4510
 13722                           
 13723                           ;interrupts.c: 78: LATBbits.LATB4 = 1;
 13724  012E  0022               	movlb	2	; select bank2
 13725  012F  160D               	bsf	13,4	;volatile
 13726                           
 13727                           ;interrupts.c: 80: timer = 0;
 13728  0130  3000               	movlw	0
 13729  0131  0021               	movlb	1	; select bank1
 13730  0132  00E7               	movwf	(_timer+3)^(0+128)	;volatile
 13731  0133  3000               	movlw	0
 13732  0134  00E6               	movwf	(_timer+2)^(0+128)	;volatile
 13733  0135  3000               	movlw	0
 13734  0136  00E5               	movwf	(_timer+1)^(0+128)	;volatile
 13735  0137  3000               	movlw	0
 13736  0138  00E4               	movwf	_timer^(0+128)	;volatile
 13737                           
 13738                           ;interrupts.c: 81: if (reset_sub_delay == 1) {
 13739  0139  0022               	movlb	2	; select bank2
 13740  013A  034C               	decf	_reset_sub_delay^(0+256),w
 13741  013B  044D               	iorwf	(_reset_sub_delay+1)^(0+256),w
 13742  013C  1D03               	btfss	3,2
 13743  013D  2949               	goto	i1l4510
 13744                           
 13745                           ;interrupts.c: 82: reset_sub_delay = 0;
 13746  013E  01CC               	clrf	_reset_sub_delay^(0+256)
 13747  013F  01CD               	clrf	(_reset_sub_delay+1)^(0+256)
 13748                           
 13749                           ;interrupts.c: 83: sub_timer = delay_time;
 13750  0140  0021               	movlb	1	; select bank1
 13751  0141  0850               	movf	(_delay_time+3)^(0+128),w	;volatile
 13752  0142  00DF               	movwf	(_sub_timer+3)^(0+128)	;volatile
 13753  0143  084F               	movf	(_delay_time+2)^(0+128),w	;volatile
 13754  0144  00DE               	movwf	(_sub_timer+2)^(0+128)	;volatile
 13755  0145  084E               	movf	(_delay_time+1)^(0+128),w	;volatile
 13756  0146  00DD               	movwf	(_sub_timer+1)^(0+128)	;volatile
 13757  0147  084D               	movf	_delay_time^(0+128),w	;volatile
 13758  0148  00DC               	movwf	_sub_timer^(0+128)	;volatile
 13759  0149                     i1l4510:	
 13760                           
 13761                           ;interrupts.c: 84: }
 13762                           ;interrupts.c: 85: }
 13763                           ;interrupts.c: 87: if (timer >= 30) {
 13764  0149  0021               	movlb	1	; select bank1
 13765  014A  1BE7               	btfsc	(_timer+3)^(0+128),7	;volatile
 13766  014B  295B               	goto	i1l4514
 13767  014C  0867               	movf	(_timer+3)^(0+128),w	;volatile
 13768  014D  1D03               	btfss	3,2
 13769  014E  2959               	goto	i1l4512
 13770  014F  0866               	movf	(_timer+2)^(0+128),w	;volatile
 13771  0150  1D03               	btfss	3,2
 13772  0151  2959               	goto	i1l4512
 13773  0152  0865               	movf	(_timer+1)^(0+128),w	;volatile
 13774  0153  1D03               	btfss	3,2
 13775  0154  2959               	goto	i1l4512
 13776  0155  301E               	movlw	30
 13777  0156  0264               	subwf	_timer^(0+128),w	;volatile
 13778  0157  1C03               	btfss	3,0
 13779  0158  295B               	goto	i1l4514
 13780  0159                     i1l4512:	
 13781                           
 13782                           ;interrupts.c: 89: LATBbits.LATB4 = 0;
 13783  0159  0022               	movlb	2	; select bank2
 13784  015A  120D               	bcf	13,4	;volatile
 13785  015B                     i1l4514:	
 13786                           
 13787                           ;interrupts.c: 91: }
 13788                           ;interrupts.c: 92: }
 13789                           ;interrupts.c: 95: if (sub_timer >= tmpSubDelay) {
 13790  015B  0020               	movlb	0	; select bank0
 13791  015C  0820               	movf	isr@tmpSubDelay,w
 13792  015D  00F4               	movwf	??_isr
 13793  015E  0821               	movf	isr@tmpSubDelay+1,w
 13794  015F  00F5               	movwf	??_isr+1
 13795  0160  3000               	movlw	0
 13796  0161  1BF5               	btfsc	??_isr+1,7
 13797  0162  30FF               	movlw	255
 13798  0163  00F6               	movwf	??_isr+2
 13799  0164  00F7               	movwf	??_isr+3
 13800  0165  0021               	movlb	1	; select bank1
 13801  0166  085F               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13802  0167  3A80               	xorlw	128
 13803  0168  00F8               	movwf	??_isr+4
 13804  0169  0877               	movf	??_isr+3,w
 13805  016A  3A80               	xorlw	128
 13806  016B  0278               	subwf	??_isr+4,w
 13807  016C  1D03               	skipz
 13808  016D  2978               	goto	u456_23
 13809  016E  0876               	movf	??_isr+2,w
 13810  016F  025E               	subwf	(_sub_timer+2)^(0+128),w	;volatile
 13811  0170  1D03               	skipz
 13812  0171  2978               	goto	u456_23
 13813  0172  0875               	movf	??_isr+1,w
 13814  0173  025D               	subwf	(_sub_timer+1)^(0+128),w	;volatile
 13815  0174  1D03               	skipz
 13816  0175  2978               	goto	u456_23
 13817  0176  0874               	movf	??_isr,w
 13818  0177  025C               	subwf	_sub_timer^(0+128),w	;volatile
 13819  0178                     u456_23:	
 13820  0178  1C03               	skipc
 13821  0179  2999               	goto	i1l4524
 13822                           
 13823                           ;interrupts.c: 96: if (suspend_blink == 0) {
 13824  017A  086B               	movf	_suspend_blink^(0+128),w	;volatile
 13825  017B  1D03               	btfss	3,2
 13826  017C  2988               	goto	i1l4520
 13827                           
 13828                           ;interrupts.c: 97: set_leds_top(top_push_state, 1);
 13829  017D  0858               	movf	(_top_push_state+1)^(0+128),w
 13830  017E  00F1               	movwf	i1set_leds_top@x+1
 13831  017F  0857               	movf	_top_push_state^(0+128),w
 13832  0180  00F0               	movwf	i1set_leds_top@x
 13833  0181  3001               	movlw	1
 13834  0182  00F2               	movwf	i1set_leds_top@ledState
 13835  0183  3000               	movlw	0
 13836  0184  00F3               	movwf	i1set_leds_top@ledState+1
 13837  0185  3192  22CC  3180   	fcall	i1_set_leds_top
 13838  0188                     i1l4520:	
 13839                           
 13840                           ;interrupts.c: 98: }
 13841                           ;interrupts.c: 99: tmpSubDelay = delay_time;
 13842  0188  0021               	movlb	1	; select bank1
 13843  0189  084E               	movf	(_delay_time+1)^(0+128),w	;volatile
 13844  018A  0020               	movlb	0	; select bank0
 13845  018B  00A1               	movwf	isr@tmpSubDelay+1
 13846  018C  0021               	movlb	1	; select bank1
 13847  018D  084D               	movf	_delay_time^(0+128),w	;volatile
 13848  018E  0020               	movlb	0	; select bank0
 13849  018F  00A0               	movwf	isr@tmpSubDelay
 13850                           
 13851                           ;interrupts.c: 100: sub_timer = 0;
 13852  0190  3000               	movlw	0
 13853  0191  0021               	movlb	1	; select bank1
 13854  0192  00DF               	movwf	(_sub_timer+3)^(0+128)	;volatile
 13855  0193  3000               	movlw	0
 13856  0194  00DE               	movwf	(_sub_timer+2)^(0+128)	;volatile
 13857  0195  3000               	movlw	0
 13858  0196  00DD               	movwf	(_sub_timer+1)^(0+128)	;volatile
 13859  0197  3000               	movlw	0
 13860  0198  00DC               	movwf	_sub_timer^(0+128)	;volatile
 13861  0199                     i1l4524:	
 13862                           
 13863                           ;interrupts.c: 101: }
 13864                           ;interrupts.c: 103: if (sub_timer >= 20) {
 13865  0199  1BDF               	btfsc	(_sub_timer+3)^(0+128),7	;volatile
 13866  019A  29B5               	goto	i1l4530
 13867  019B  085F               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13868  019C  1D03               	btfss	3,2
 13869  019D  29A8               	goto	i1l4526
 13870  019E  085E               	movf	(_sub_timer+2)^(0+128),w	;volatile
 13871  019F  1D03               	btfss	3,2
 13872  01A0  29A8               	goto	i1l4526
 13873  01A1  085D               	movf	(_sub_timer+1)^(0+128),w	;volatile
 13874  01A2  1D03               	btfss	3,2
 13875  01A3  29A8               	goto	i1l4526
 13876  01A4  3014               	movlw	20
 13877  01A5  025C               	subwf	_sub_timer^(0+128),w	;volatile
 13878  01A6  1C03               	btfss	3,0
 13879  01A7  29B5               	goto	i1l4530
 13880  01A8                     i1l4526:	
 13881                           
 13882                           ;interrupts.c: 104: if (suspend_blink == 0) {
 13883  01A8  086B               	movf	_suspend_blink^(0+128),w	;volatile
 13884  01A9  1D03               	btfss	3,2
 13885  01AA  29B5               	goto	i1l4530
 13886                           
 13887                           ;interrupts.c: 105: set_leds_top(top_push_state, 0);
 13888  01AB  0858               	movf	(_top_push_state+1)^(0+128),w
 13889  01AC  00F1               	movwf	i1set_leds_top@x+1
 13890  01AD  0857               	movf	_top_push_state^(0+128),w
 13891  01AE  00F0               	movwf	i1set_leds_top@x
 13892  01AF  3000               	movlw	0
 13893  01B0  00F2               	movwf	i1set_leds_top@ledState
 13894  01B1  00F3               	movwf	i1set_leds_top@ledState+1
 13895  01B2  3192  22CC  3180   	fcall	i1_set_leds_top
 13896  01B5                     i1l4530:	
 13897                           
 13898                           ;interrupts.c: 106: }
 13899                           ;interrupts.c: 107: }
 13900                           ;interrupts.c: 110: if (preset_programmning_on == 1) {
 13901  01B5  0022               	movlb	2	; select bank2
 13902  01B6  0359               	decf	_preset_programmning_on^(0+256),w
 13903  01B7  1D03               	btfss	3,2
 13904  01B8  29DE               	goto	i1l4542
 13905                           
 13906                           ;interrupts.c: 111: preset_blink++;
 13907  01B9  3001               	movlw	1
 13908  01BA  00F4               	movwf	??_isr
 13909  01BB  0874               	movf	??_isr,w
 13910  01BC  07D8               	addwf	_preset_blink^(0+256),f
 13911                           
 13912                           ;interrupts.c: 113: if (preset_blink >= blink_delay) {
 13913  01BD  085C               	movf	(_blink_delay+1)^(0+256),w
 13914  01BE  3A80               	xorlw	128
 13915  01BF  3C80               	sublw	128
 13916  01C0  1D03               	skipz
 13917  01C1  29C4               	goto	u461_25
 13918  01C2  085B               	movf	_blink_delay^(0+256),w
 13919  01C3  0258               	subwf	_preset_blink^(0+256),w
 13920  01C4                     u461_25:	
 13921  01C4  1C03               	skipc
 13922  01C5  29DC               	goto	i1l107
 13923                           
 13924                           ;interrupts.c: 114: LATBbits.LATB1 = 1;
 13925  01C6  0022               	movlb	2	; select bank2
 13926  01C7  148D               	bsf	13,1	;volatile
 13927                           
 13928                           ;interrupts.c: 115: if (preset_blink > blink_delay*2) {
 13929  01C8  085C               	movf	(_blink_delay+1)^(0+256),w
 13930  01C9  00F5               	movwf	??_isr+1
 13931  01CA  085B               	movf	_blink_delay^(0+256),w
 13932  01CB  00F4               	movwf	??_isr
 13933  01CC  35F4               	lslf	??_isr,f
 13934  01CD  0DF5               	rlf	??_isr+1,f
 13935  01CE  0875               	movf	??_isr+1,w
 13936  01CF  3A80               	xorlw	128
 13937  01D0  00F6               	movwf	??_isr+2
 13938  01D1  3080               	movlw	128
 13939  01D2  0276               	subwf	??_isr+2,w
 13940  01D3  1D03               	skipz
 13941  01D4  29D7               	goto	u462_25
 13942  01D5  0858               	movf	_preset_blink^(0+256),w
 13943  01D6  0274               	subwf	??_isr,w
 13944  01D7                     u462_25:	
 13945  01D7  1803               	skipnc
 13946  01D8  29E3               	goto	i1l112
 13947                           
 13948                           ;interrupts.c: 116: preset_blink = 0;
 13949  01D9  0022               	movlb	2	; select bank2
 13950  01DA  01D8               	clrf	_preset_blink^(0+256)
 13951                           
 13952                           ;interrupts.c: 117: }
 13953                           ;interrupts.c: 119: } else {
 13954  01DB  29E3               	goto	i1l112
 13955  01DC                     i1l107:	
 13956                           
 13957                           ;interrupts.c: 120: LATBbits.LATB1 = 0;
 13958  01DC  0022               	movlb	2	; select bank2
 13959  01DD  29E2               	goto	i1l4546
 13960  01DE                     i1l4542:	
 13961                           ;interrupts.c: 121: }
 13962                           ;interrupts.c: 123: } else {
 13963                           
 13964                           
 13965                           ;interrupts.c: 124: if (preset_blink > 0) {
 13966  01DE  0858               	movf	_preset_blink^(0+256),w
 13967  01DF  1903               	btfsc	3,2
 13968  01E0  29E3               	goto	i1l112
 13969                           
 13970                           ;interrupts.c: 125: preset_blink = 0;
 13971  01E1  01D8               	clrf	_preset_blink^(0+256)
 13972  01E2                     i1l4546:	
 13973                           
 13974                           ;interrupts.c: 126: LATBbits.LATB1 = 0;
 13975  01E2  108D               	bcf	13,1	;volatile
 13976  01E3                     i1l112:	
 13977  01E3  087C               	movf	??_isr+8,w
 13978  01E4  0020               	movlb	0	; select bank0
 13979  01E5  00FF               	movwf	127
 13980  01E6  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13981  01E7  0009               	retfie
 13982  01E8                     __end_of_isr:	
 13983                           
 13984                           	psect	text47
 13985  12CC                     __ptext47:	
 13986 ;; *************** function i1_set_leds_top *****************
 13987 ;; Defined at:
 13988 ;;		line 16 in file "LEDs.c"
 13989 ;; Parameters:    Size  Location     Type
 13990 ;;  x               2    0[COMMON] int 
 13991 ;;  ledState        2    2[COMMON] int 
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;		None
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  1    wreg      void 
 13996 ;; Registers used:
 13997 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 14003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 14004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 14005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 14006 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 14007 ;;Total ram usage:        4 bytes
 14008 ;; Hardware stack levels used:    1
 14009 ;; This function calls:
 14010 ;;		Nothing
 14011 ;; This function is called by:
 14012 ;;		_isr
 14013 ;; This function uses a non-reentrant model
 14014 ;;
 14015                           
 14016                           
 14017                           ;psect for function i1_set_leds_top
 14018  12CC                     i1_set_leds_top:	
 14019                           
 14020                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 14021                           
 14022                           ;incstack = 0
 14023                           ; Regs used in i1_set_leds_top: [wreg-fsr0h+status,2+status,0]
 14024  12CC  0027               	movlb	7	; select bank7
 14025  12CD  100C               	bcf	12,0	;volatile
 14026                           
 14027                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 14028  12CE  108C               	bcf	12,1	;volatile
 14029                           
 14030                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 14031  12CF  110C               	bcf	12,2	;volatile
 14032                           
 14033                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 14034  12D0  118C               	bcf	12,3	;volatile
 14035                           
 14036                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 14037  12D1  120C               	bcf	12,4	;volatile
 14038                           
 14039                           ;LEDs.c: 22: switch (x) {
 14040  12D2  2AF7               	goto	i1l4464
 14041  12D3                     i1l4452:	
 14042                           ;LEDs.c: 23: case 1:
 14043                           
 14044                           
 14045                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 14046  12D3  0C72               	rrf	i1set_leds_top@ledState,w
 14047  12D4  1C03               	skipc
 14048  12D5  100C               	bcf	12,0	;volatile
 14049  12D6  1803               	skipnc
 14050  12D7  140C               	bsf	12,0	;volatile
 14051                           
 14052                           ;LEDs.c: 25: break;
 14053  12D8  0008               	return
 14054  12D9                     i1l4454:	
 14055                           ;LEDs.c: 26: case 2:
 14056                           
 14057                           
 14058                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 14059  12D9  0C72               	rrf	i1set_leds_top@ledState,w
 14060  12DA  1C03               	skipc
 14061  12DB  108C               	bcf	12,1	;volatile
 14062  12DC  1803               	skipnc
 14063  12DD  148C               	bsf	12,1	;volatile
 14064                           
 14065                           ;LEDs.c: 28: break;
 14066  12DE  0008               	return
 14067  12DF                     i1l4456:	
 14068                           ;LEDs.c: 29: case 3:
 14069                           
 14070                           
 14071                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 14072  12DF  0C72               	rrf	i1set_leds_top@ledState,w
 14073  12E0  1C03               	skipc
 14074  12E1  110C               	bcf	12,2	;volatile
 14075  12E2  1803               	skipnc
 14076  12E3  150C               	bsf	12,2	;volatile
 14077                           
 14078                           ;LEDs.c: 31: break;
 14079  12E4  0008               	return
 14080  12E5                     i1l4458:	
 14081                           ;LEDs.c: 32: case 4:
 14082                           
 14083                           
 14084                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 14085  12E5  0C72               	rrf	i1set_leds_top@ledState,w
 14086  12E6  1C03               	skipc
 14087  12E7  118C               	bcf	12,3	;volatile
 14088  12E8  1803               	skipnc
 14089  12E9  158C               	bsf	12,3	;volatile
 14090                           
 14091                           ;LEDs.c: 34: break;
 14092  12EA  0008               	return
 14093  12EB                     i1l4460:	
 14094                           ;LEDs.c: 35: case 5:
 14095                           
 14096                           
 14097                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 14098  12EB  0C72               	rrf	i1set_leds_top@ledState,w
 14099  12EC  1C03               	skipc
 14100  12ED  120C               	bcf	12,4	;volatile
 14101  12EE  1803               	skipnc
 14102  12EF  160C               	bsf	12,4	;volatile
 14103                           
 14104                           ;LEDs.c: 39: break;
 14105                           
 14106                           ;LEDs.c: 38: case 6:
 14107                           
 14108                           ;LEDs.c: 37: break;
 14109  12F0  0008               	return
 14110  12F1                     i1l685:	
 14111                           ;LEDs.c: 40: case 100:
 14112                           
 14113                           
 14114                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 14115  12F1  140C               	bsf	12,0	;volatile
 14116                           
 14117                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 14118  12F2  148C               	bsf	12,1	;volatile
 14119                           
 14120                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 14121  12F3  150C               	bsf	12,2	;volatile
 14122                           
 14123                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 14124  12F4  158C               	bsf	12,3	;volatile
 14125                           
 14126                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 14127  12F5  160C               	bsf	12,4	;volatile
 14128                           
 14129                           ;LEDs.c: 47: }
 14130                           
 14131                           ;LEDs.c: 46: break;
 14132  12F6  0008               	return
 14133  12F7                     i1l4464:	
 14134                           
 14135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14136                           ; Switch size 1, requested type "space"
 14137                           ; Number of cases is 1, Range of values is 0 to 0
 14138                           ; switch strategies available:
 14139                           ; Name         Instructions Cycles
 14140                           ; simple_byte            4     3 (average)
 14141                           ; direct_byte            8     6 (fixed)
 14142                           ; jumptable            260     6 (fixed)
 14143                           ;	Chosen strategy is simple_byte
 14144  12F7  0871               	movf	i1set_leds_top@x+1,w
 14145  12F8  3A00               	xorlw	0	; case 0
 14146  12F9  1903               	skipnz
 14147  12FA  2AFC               	goto	i1l6584
 14148  12FB  2B13               	goto	i1l686
 14149  12FC                     i1l6584:	
 14150                           
 14151                           ; Switch size 1, requested type "space"
 14152                           ; Number of cases is 7, Range of values is 1 to 100
 14153                           ; switch strategies available:
 14154                           ; Name         Instructions Cycles
 14155                           ; simple_byte           22    12 (average)
 14156                           ; direct_byte          209     9 (fixed)
 14157                           ; jumptable            263     9 (fixed)
 14158                           ;	Chosen strategy is simple_byte
 14159  12FC  0870               	movf	i1set_leds_top@x,w
 14160  12FD  3A01               	xorlw	1	; case 1
 14161  12FE  1903               	skipnz
 14162  12FF  2AD3               	goto	i1l4452
 14163  1300  3A03               	xorlw	3	; case 2
 14164  1301  1903               	skipnz
 14165  1302  2AD9               	goto	i1l4454
 14166  1303  3A01               	xorlw	1	; case 3
 14167  1304  1903               	skipnz
 14168  1305  2ADF               	goto	i1l4456
 14169  1306  3A07               	xorlw	7	; case 4
 14170  1307  1903               	skipnz
 14171  1308  2AE5               	goto	i1l4458
 14172  1309  3A01               	xorlw	1	; case 5
 14173  130A  1903               	skipnz
 14174  130B  2AEB               	goto	i1l4460
 14175  130C  3A03               	xorlw	3	; case 6
 14176  130D  1903               	skipnz
 14177  130E  2B13               	goto	i1l686
 14178  130F  3A62               	xorlw	98	; case 100
 14179  1310  1903               	skipnz
 14180  1311  2AF1               	goto	i1l685
 14181  1312  2B13               	goto	i1l686
 14182  1313                     i1l686:	
 14183  1313  0008               	return
 14184  1314                     __end_ofi1_set_leds_top:	
 14185  007E                     btemp	set	126	;btemp
 14186  007E                     int$flags	set	126
 14187  007E                     wtemp	set	126
 14188  007E                     wtemp0	set	126
 14189  0080                     wtemp1	set	128
 14190  0082                     wtemp2	set	130
 14191  0084                     wtemp3	set	132
 14192  0086                     wtemp4	set	134
 14193  0088                     wtemp5	set	136
 14194  007F                     wtemp6	set	127
 14195  007E                     ttemp	set	126
 14196  007E                     ttemp0	set	126
 14197  0081                     ttemp1	set	129
 14198  0084                     ttemp2	set	132
 14199  0087                     ttemp3	set	135
 14200  007F                     ttemp4	set	127
 14201  007E                     ltemp	set	126
 14202  007E                     ltemp0	set	126
 14203  0082                     ltemp1	set	130
 14204  0086                     ltemp2	set	134
 14205  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1082
    BSS         212
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     73      76
    BANK1            80     41      78
    BANK2            80      0      79
    BANK3            80      6      76
    BANK4            80      0      62
    BANK5            80      0      62
    BANK6            80      0      62
    BANK7            80      0      80
    BANK8            80      0      80
    BANK9            80      0      64
    BANK10           80      0      62
    BANK11            8      0       0
    BANK12            0      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_set_leds_top

Critical Paths under _main in BANK0

    _main->_map
    _updateSwitchTap->_setDoublePressState
    _updateSwitchBypass->_setDoublePressState
    _updateSwitchBypass->_setSwitchBypassState
    _setDoublePressState->_wait_ms
    _showBootSequence->_star_tactiles
    _star_tactiles->_wait_ms
    _solidring_tactiles->_wait_ms
    ___fttol->_map
    ___awtoft->___ftpack
    _read_top_tactile->_wait_ms
    _read_bottom_tactile->_wait_ms
    _modulation->___aldiv
    ___aldiv->___wmul
    _map->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___ftadd->___ftpack
    _initSwitchBypass->_setSwitchBypassState
    _setSwitchBypassState->_wait_ms
    _wait_ms->___lmul
    ___altoft->___ftpack
    _ReadSavedSettings->_set_leds_top

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_set_subdivision
    _set_subdivision->___fttol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   64480
                                             26 BANK1     15    15      0
                                              0 BANK3      6     6      0
                _ConfigureOscillator
                            _InitApp
                     _InitializeTaps
                  _ReadSavedSettings
                           ___altoft
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                        _adc_convert
                   _initSwitchBypass
                                _map
                         _modulation
                _read_bottom_tactile
                   _read_top_tactile
                    _set_subdivision
                   _showBootSequence
                 _updateSwitchBypass
                    _updateSwitchTap
                        _update_mode
 ---------------------------------------------------------------------------------
 (1) _update_mode                                          1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _updateSwitchTap                                      9     9      0    3448
                                             24 BANK0      9     9      0
                            ___aldiv
                _setDoublePressState
                    _setLongTapState
 ---------------------------------------------------------------------------------
 (2) _setLongTapState                                      4     2      2     247
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _updateSwitchBypass                                   2     2      0    4513
                                             24 BANK0      2     2      0
                _setDoublePressState
                   _setFeedbackState
               _setSwitchBypassState
 ---------------------------------------------------------------------------------
 (2) _setFeedbackState                                     4     2      2     247
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _setDoublePressState                                  4     2      2    2056
                                             20 BANK0      4     2      2
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _showBootSequence                                     1     1      0    7700
                                             27 BANK0      1     1      0
                 _getCurrentLEDState
                    _restoreLEDState
                 _solidring_tactiles
                      _star_tactiles
 ---------------------------------------------------------------------------------
 (2) _star_tactiles                                        7     7      0    3963
                                             20 BANK0      7     7      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _solidring_tactiles                                   3     3      0    3737
                                             20 BANK0      3     3      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _restoreLEDState                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurrentLEDState                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_subdivision                                     12     8      4   11643
                                             14 BANK1     12     8      4
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     910
                                              0 BANK1     14    10      4
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    3273
                                             10 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _read_top_tactile                                     1     1      0    3102
                                             20 BANK0      1     1      0
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _read_bottom_tactile                                  1     1      0    2240
                                             20 BANK0      1     1      0
                    _set_leds_bottom
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _modulation                                          12     8      4    1447
                                             23 BANK0     12     8      4
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     907
                                              8 BANK0     15     7      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _map                                                 18     3     15   14370
                                             55 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     373
                                              2 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3474
                                             23 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3560
                                             39 BANK0     16    10      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4787
                                             10 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _initSwitchBypass                                     2     2      0    2244
                                             24 BANK0      2     2      0
               _getSwitchBypassState
               _setSwitchBypassState
 ---------------------------------------------------------------------------------
 (2) _setSwitchBypassState                                 4     2      2    2210
                                             20 BANK0      4     2      2
            _updateSwitchBypassState
                            _wait_ms
 ---------------------------------------------------------------------------------
 (3) _wait_ms                                              6     4      2    1670
                                             14 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     290
                                              2 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _updateSwitchBypassState                              2     0      2      77
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getSwitchBypassState                                 2     0      2       0
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_convert                                          4     2      2      31
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     599
                                              2 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___altoft                                             8     4      4    2805
                                             10 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2524
                                              2 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReadSavedSettings                                    0     0      0    2329
                     _FLASH_ReadWord
                    _set_leds_bottom
                       _set_leds_top
 ---------------------------------------------------------------------------------
 (3) _set_leds_top                                         4     0      4    1432
                                              2 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _set_leds_bottom                                      2     0      2     570
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     327
                                              2 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitializeTaps                                       3     3      0      99
                                              2 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
                           _init_pwm
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
                        _init_timer0
                        _init_timer2
 ---------------------------------------------------------------------------------
 (3) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 11    11      0     261
                                              4 COMMON     9     9      0
                                              0 BANK0      2     2      0
                     i1_set_leds_top
 ---------------------------------------------------------------------------------
 (6) i1_set_leds_top                                       4     0      4     236
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_adc
     _init_pwm
       _init_timer0
       _init_timer2
   _InitializeTaps
   _ReadSavedSettings
     _FLASH_ReadWord
     _set_leds_bottom
     _set_leds_top
   ___altoft
     ___ftpack
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___altoft (ARG)
       ___ftpack
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___fttol
     ___altoft (ARG)
       ___ftpack
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     _map (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _adc_convert
   _initSwitchBypass
     _getSwitchBypassState
     _setSwitchBypassState
       _updateSwitchBypassState
       _wait_ms
         ___lmul
   _map
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   _modulation
     ___aldiv
       ___wmul (ARG)
     ___wmul
   _read_bottom_tactile
     _set_leds_bottom
     _wait_ms
       ___lmul
   _read_top_tactile
     _set_leds_top
     _wait_ms
       ___lmul
   _set_subdivision
     ___awtoft
       ___ftpack
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       _map (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
   _showBootSequence
     _getCurrentLEDState
     _restoreLEDState
     _solidring_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
     _star_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
   _updateSwitchBypass
     _setDoublePressState
       _wait_ms
         ___lmul
     _setFeedbackState
     _setSwitchBypassState
       _updateSwitchBypassState
       _wait_ms
         ___lmul
   _updateSwitchTap
     ___aldiv
       ___wmul (ARG)
     _setDoublePressState
       _wait_ms
         ___lmul
     _setLongTapState
   _update_mode

 _isr (ROOT)
   i1_set_leds_top

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     29      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      6      4C      11       95.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      3E      13       77.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3E      15       77.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0     31B      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      3E      18       77.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      40      24       80.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0      3E      26       77.5%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     31B      28        0.0%
BANK11               8      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12               0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Dec 26 22:47:51 2016

                     _update_mode 1245                      ___altoft@exp 0030                       __CFG_CP$OFF 0000  
                   ___altoft@sign 0031                      ___awdiv@sign 0028                _topTactile_pressed 015A  
      setDoublePressState@f_state 0034               ___wmul@multiplicand 0024                   _updateSwitchTap 0BAE  
                    ___ftadd@exp1 0036                      ___ftadd@exp2 0035                      ___ftadd@sign 0034  
                             l306 05C5                               l309 05D6                               l343 1FF1  
                             l521 1E88                               l290 02E0              __size_of_adc_convert 0019  
                             l825 129B                               l841 13A3                               l690 101D  
                             l851 126B                               l692 1020                               l693 1023  
                             l685 0838                               l829 12C2                               l837 1373  
                             l853 126D                               l694 1026                               l686 085C  
                             l854 1270                               l695 1029                               l855 127E  
                             l697 102C                               l698 1050                               _PR2 001B  
    solidring_tactiles@ring_delay 0036                               _map 16CC                               _isr 0004  
                             _tap 01A0                      __CFG_BORV$LO 0000                               wreg 0009  
                    __CFG_IESO$ON 0000                      __CFG_FOSC$HS 0000               set_subdivision@tmpX 00B5  
         __end_of_set_leds_bottom 1051                      __CFG_LVP$OFF 0000                      ___ftdiv@cntr 0051  
                    ___ftdiv@sign 0056                              _B25k 03A0                              l1056 0A58  
                            l1406 1E9B                              l1192 0C77                              l1178 0BC4  
                            l1461 15D4                              l5110 0818                              l1574 1535  
                            l1575 153D                              l1567 1522                              l5112 0820  
                            l5120 083F                              l5114 0828                              l1658 16B2  
                            l5116 0830                              l5108 0810                              l6020 14A8  
                            l6006 1066                              l1598 0B57                              l5144 1033  
                            l5160 1509                              l6008 1076                              l6120 03B8  
                            l6112 0364                              l5170 152F                              l5162 150E  
                            l5154 14F8                              l6026 14B3                              l5250 1589  
                            l6210 06E0                              l6052 14EA                              l6044 14D9  
                            l6036 14BB                              l5412 0AE7                              l5324 1F58  
                            l6204 06DA                              l6212 06FA                              l6132 0457  
                            l6124 03F8                              l5158 14FF                              l6038 14C7  
                            l5094 1FA7                              l5430 0B10                              l6206 06DD  
                            ?_map 0057                              l5168 1527                              l6048 14E2  
                            l5440 0B32                              l5408 0AE0                              l5520 0874  
                            l5360 15E5                              l6232 07B6                              l6216 0736  
                            l6160 05D8                              l6152 0580                              l6144 04F6  
                            l6136 0497                              l5098 1FB1                              l5450 0B53  
                            l5442 0B36                              l5418 0AF6                              l5506 17DE  
                            l5370 1603                              l5338 1E95                              l5610 16C3  
                            l6234 0761                              l6090 02E4                              l5436 0B23  
                            l5700 138F                              l5604 16A9                              l6236 07BC  
                            l6180 063E                              l6172 0627                              l6156 05C0  
                            l6148 0536                              l6092 02E7                              l6076 02BA  
                            l5454 0B69                              l5438 0B2D                              l5550 08E1  
                            l5542 08CD                              l5526 088A                              l5382 162E  
                            l5606 16B5                              l6190 06A5                              l6182 0684  
                            l6166 060D                              l5296 133F                              l5448 0B49  
                            l5368 15F5                              l5800 0A4B                              l5720 1273  
                            l6176 0630                              l5458 0B7B                              l5554 08E9  
                            l5538 08C5                              l5386 163C                              l5378 1623  
                            l5722 1282                              l6194 06B0                              l6186 069A  
                            l5468 0B96                              l5484 1784                              l5812 0A76  
                            l5646 13D5                              l5478 176E                              l5670 1290  
                            l5398 1ED9                              l5806 0A5C                              l6198 06BC  
                            l5680 12B7                              l5816 0A7E                              l5920 0CC4  
                            l5912 0CB8                              l5904 0C6F                              l5498 17C5  
                            l5690 1368                              l5578 165E                              l5818 0A83  
                            l5826 0A95                              l5762 09EA                              l5922 0D0C  
                            l5850 0BB9                              l6580 0845                              l5596 168E  
                            ?_isr 0070                              l6582 1039                              l5598 169C  
                            l5774 0A0B                              l5766 09FD                              l5926 0D30  
                            l5934 0D70                              l5880 0C1B                              l5872 0BF5  
                            l5856 0BD5                              l6576 06E6                              l6578 093E  
                            l5970 0920                              l5786 0A2C                              l5874 0C10  
                            l5972 0924                              l5788 0A34                              l5892 0C40  
                            l5974 0928                              l5982 0939                              l5894 0C48  
                            l5976 092E                              l5984 0952                              l5896 0C57  
                            l5978 0932                              u6005 0896                              u6015 08A6  
                            u5305 1504                              u6035 08CE                              u5325 151D  
                            u5245 1FB2                              u6045 08D4                              u6125 1665  
                            u6215 1EFC                              u5255 1FB9                              u6240 13D3  
                            u6225 1F02                              u5345 152A                              u6305 12B0  
                            u7105 0495                              u6075 08EA                              u6155 168F  
                            u5435 1596                              u5515 1E6C                              u7115 0514  
                            u7035 02D6                              u5460 133D                              u6085 08F0  
                            u7125 0534                              u5455 131F                              u5615 1604  
                            u5535 1E9C                              u7215 0639                              u7135 059E  
                            u7055 0345                              u5385 1544                              u5625 1618  
                            u5545 1EA1                              u6185 16AA                              u7145 05BE  
                            u7065 0362                              i1l91 0112                              u5635 1624  
                            u6435 09E3                              u7243 07A7                              u7235 078F  
                            u7163 05FF                              u7155 05D1                              u7075 03D6  
                            u6365 1388                              u5485 1E55                              u6445 09F6  
                            u7085 03F6                              u5495 1F4B                              u7175 0607  
                            u7095 0475                              u5825 0B37                              u5595 15F8  
                            u6475 0A15                              u6395 1258                              u5765 0B11  
                            u5925 1796                              u6565 0A67                              u6805 0C9D  
                            u6725 0C25                              u5855 0B4A                              u5935 17A6  
                            u6815 0CCB                              u6905 106B                              u5945 17C6  
                            u6825 0CE0                              u5795 0B24                              u5955 17D5  
                            u6835 0CF4                              u5965 17DF                              u6855 0D0F  
                            u6695 0BFC                              u6955 14BE                              u6795 0C87  
                            u6885 09CC                              u6975 14C8                              u6985 14D2  
                            u6995 14DA                     _star_tactiles 1554                      __CFG_WRT$OFF 0000  
                   __CFG_FCMEN$ON 0000                              _iCnt 0154                              _mod1 0520  
                            _mod2 0220                              _mod3 02A0                              _mod4 0320  
                            _mod5 2378                              _main 02A4                      ___ftpack@arg 0022  
                    ___ftpack@exp 0025                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              fsr1l 0006  
                            map@x 0057                              btemp 007E                     __CFG_BOREN$ON 0000  
                            ltemp 007E          __end_of_setFeedbackState 1E62                              start 01E8  
                            ttemp 007E                              wtemp 007E      __end_of_getSwitchBypassState 1DD8  
    updateSwitchTap@tapCntDivisor 003E      __end_of_setSwitchBypassState 135E                   ?i1_set_leds_top 0070  
                   __CFG_MCLRE$ON 0000                      ___ftmul@cntr 0045                      ___ftmul@sign 0046  
                 __end_of_InitApp 1F9E                 ??_restoreLEDState 0022                      ___fttol@exp1 00AD  
                           ??_map 0066                      ___fttol@lval 00A9                             ??_isr 0074  
                 _switchBypass_up 0169         __size_of_initSwitchBypass 000F                   __end_of___aldiv 1645  
                           ?_main 0070                   __end_of___awdiv 14EF                   __end_of___ftadd 0BAE  
                           _CCPR1 0291                             _CCPR2 0298                             _CCPR3 0311  
                           _CCPR4 0318                             _CCPR5 031C                             _CCPR9 061A  
                   __CFG_WDTE$OFF 0000                   __end_of___ftdiv 1800                   __end_of___ftneg 0809  
                 __end_of___ftmul 0911                   ___awdiv@divisor 0022                   __end_of___fttol 16CC  
                           i1l112 01E3                             i1l107 01DC                             i1l685 12F1  
                           i1l686 1313                   ___awdiv@counter 0027                             _iB25k 0420  
             _ConfigureOscillator 1DD0                      ?_init_timer0 0070                      ?_init_timer2 0070  
             ___lmul@multiplicand 0026                   _switchTap_state 00DB                 ??_setLongTapState 0024  
                   ___awtoft@sign 002F                             _delay 23F2                             _myBuf 04A0  
                   ___ftpack@sign 0026                             _timer 00E4                    ?_star_tactiles 0070  
                           main@i 01E8                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080                   __end_of_wait_ms 2000  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
     __end_of_read_bottom_tactile 12CC                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F             set_subdivision@scalar 00B7  
            ?_ConfigureOscillator 0070                _getCurrentLEDState 1E12                _updateSwitchBypass 09D4  
         __end_of_updateSwitchTap 0D88                   __initialization 01EA           _updateSwitchBypassState 1DCE  
                    __end_of_main 07F9           __size_of_InitializeTaps 0026               ?_getCurrentLEDState 0070  
             ?_updateSwitchBypass 0070                    __CFG_LPBOR$OFF 0000                   _set_subdivision 0911  
                          ??_main 00BA                     ___fttol@sign1 00A8           __size_of_FLASH_ReadWord 0020  
      __end_of_solidring_tactiles 1204                    _feedback_timer 013A                    _feedback_state 0069  
                  _feedback_start 00EA                  ?_set_leds_bottom 0022                  __end_of___altoft 108E  
                          _ADRESH 009C                            _ADRESL 009B                  ___awdiv@dividend 0024  
             _baseline_delay_time 00C9              ??_getCurrentLEDState 0022                  __end_of___awtoft 1EF0  
                __end_of___ftpack 1554              ??_updateSwitchBypass 0038                            i1l4510 0149  
                          i1l4520 0188                            i1l4512 0159                            i1l4530 01B5  
                          i1l4514 015B                            i1l4460 12EB                            i1l4452 12D3  
                          i1l4524 0199                            i1l4454 12D9                            i1l4542 01DE  
                          i1l4526 01A8                            i1l4456 12DF                            i1l4464 12F7  
                          i1l4480 0099                            i1l4458 12E5                            i1l4546 01E2  
                          i1l4494 00FC                            i1l4486 00B3                            i1l6584 12FC  
                          _PMADRH 0192                            _PMADRL 0191                            _PMDATH 0194  
                          _PMDATL 0193                            _PMCON2 0196                            u453_23 012C  
                          u461_25 01C4                            u445_25 0090                            u462_25 01D7  
                          u447_25 00AA                            u456_23 0178                            u449_23 00CC  
                  _debounce_count 0130                    _debounce_mode1 0132                    _debounce_mode2 0134  
                       ??_InitApp 0022             ??_ConfigureOscillator 0022          __end_of_read_top_tactile 13AD  
                  __CFG_PWRTE$OFF 0000                            ___lmul 1F9E                         ??___aldiv 0030  
                          ___wmul 1E92                         ??___awdiv 0026                         ??___ftadd 0030  
                  __CFG_STVREN$ON 0000                         ??___ftdiv 004D                         ??___ftneg 0025  
                       ??___ftmul 003D                         ??___fttol 00A4                  __end_of_init_adc 1DEB  
                __end_of_init_pwm 1245         __size_of_showBootSequence 002B                  ___awdiv@quotient 0029  
                    __pdataBANK10 0520             ___ftmul@f3_as_product 0042                      __pdataBIGRAM 2378  
         FLASH_ReadWord@flashAddr 0022                      __pdataCOMMON 007D              _getSwitchBypassState 1DD4  
                       ??_wait_ms 0030              _setSwitchBypassState 1314                   ??_star_tactiles 0034  
          setLongTapState@f_state 0022           __end_of__initialization 02A0                        ___altoft@c 002A  
                      ___ftadd@f1 002A                        ___ftadd@f2 002D                 _bypass_turning_on 0153  
                      ___ftdiv@f1 004A                        ___ftdiv@f2 0047                        ___ftdiv@f3 0052  
                  _top_push_state 00D7         ??_updateSwitchBypassState 0024                        ___ftneg@f1 0022  
             _switchBypass_toggle 0150                        ___awtoft@c 002A           __end_of_set_subdivision 09D4  
                      ___ftmul@f1 0037                        ___ftmul@f2 003A                        ___fttol@f1 00A0  
                ?_updateSwitchTap 0070                      ?_update_mode 0070                    __pcstackCOMMON 0070  
                    __pidataBANK0 0002                      __pidataBANK1 1E24                      __pidataBANK2 1E37  
                    __pidataBANK4 1186                      __pidataBANK5 1148                      __pidataBANK6 110A  
                    __pidataBANK7 144D                      __pidataBANK8 13FD                  _initSwitchBypass 1E03  
                 _doubleTap_state 006B                    _OPTION_REGbits 0095             ?_getSwitchBypassState 0022  
           ?_setSwitchBypassState 0034              __size_of_init_timer0 0007              __size_of_init_timer2 0009  
                      __pbssBANK0 006B                        __pbssBANK1 00DC                        __pbssBANK2 0120  
                      __pbssBANK3 01A0                        __pbssBANK9 04A0                  ??i1_set_leds_top 0074  
                 _restoreLEDState 1000                   __CFG_VCAPEN$OFF 0000                 ?_setFeedbackState 0022  
                      _delay_time 00CD                  _long_press_limit 00D5      __size_of_setDoublePressState 002D  
                      _delayfound 0138                        __pmaintext 02A4                ??_setFeedbackState 0024  
                  _InitializeTaps 1EF0                           ?___lmul 0022                           ?___wmul 0022  
                      __pintentry 0004                        _blink_rate 00D9                     ??_adc_convert 0024  
                       ?___altoft 002A                    ___lmul@product 002A                   _setLongTapState 1E62  
                       ?___awtoft 002A                         ?___ftpack 0022                    _FLASH_ReadWord 1EAE  
 __end_of_updateSwitchBypassState 1DCF                       modulation@x 0037                       modulation@y 0039  
                 _debounce_bypass 012E                     _suspend_blink 00EB                         ?_init_adc 0070  
                       ?_init_pwm 0070                           _InitApp 1F6E            __end_of_InitializeTaps 1F16  
                   ?_set_leds_top 0022                        _knob1_prev 00D3                        _knob2_prev 015F  
                      _knob3_prev 0161                        _knob4_prev 0163                        _knob5_prev 0165  
                ?_set_subdivision 00AE                           ___aldiv 15C3                           ___awdiv 149D  
                 __size_of___lmul 0030                           ___ftadd 0AB8                           ___ftdiv 1757  
                         ___ftneg 0800                        _knob_1_pos 013C                        _knob_2_pos 013E  
                 __size_of___wmul 001C                           ___ftmul 085D                        _knob_3_pos 0140  
                         ___fttol 1645                        _knob_4_pos 0142                        _knob_5_pos 0144  
               _switchTap_pressed 00ED                        ??___altoft 002E                  _showBootSequence 1F16  
          __end_of_FLASH_ReadWord 1ECE                        ??___awtoft 002D                        ??___ftpack 0027  
              InitializeTaps@itap 0023                           __ptext1 1245                           __ptext2 0BAE  
                         __ptext3 1E62                           __ptext4 09D4                           __ptext5 1E4B  
                         __ptext6 1F41                           __ptext7 1F16                           __ptext8 1554  
                         __ptext9 11C4            ??_getSwitchBypassState 0024                         _T2CONbits 001C  
                _adjust_sub_delay 012C                      __size_of_map 008B                      __size_of_isr 01E4  
          ??_setSwitchBypassState 0036               __end_of_adc_convert 1E92                  ___aldiv@dividend 002C  
                         _wait_ms 1FCE           __end_of_restoreLEDState 1016                           clrloop0 1DF8  
            end_of_initialization 02A0                        _modulation 108E                           init_ram 1DEB  
                      ??_init_adc 0022                           initloop 1DEC                        ??_init_pwm 0022  
    updateSwitchBypassState@state 0022                _solidring_tactiles 11C4                     _longTap_timer 0146  
                   _longTap_state 006A                     _longTap_start 0155                    ??_set_leds_top 0026  
               ?_read_top_tactile 0070                   ?_InitializeTaps 0070           __end_of_setLongTapState 1E79  
          i1set_leds_top@ledState 0072                ??_read_top_tactile 0034                  ___aldiv@quotient 0033  
    __size_of_read_bottom_tactile 0046               ?_solidring_tactiles 0070         FLASH_ReadWord@GIEBitValue 0024  
            __size_of_update_mode 0041                   ?_FLASH_ReadWord 0022                         _PORTCbits 000E  
                       _PORTDbits 000F                         _PORTEbits 0010              star_tactiles@reverse 0036  
                      _test_timer 01E0                         _TRISBbits 008D                         _TRISCbits 008E  
                       _TRISDbits 008F                         _TRISEbits 0090                         _TRISFbits 030C  
                       _TRISGbits 030D                         _SPI_Value 01E4           setFeedbackState@f_state 0022  
            ??_solidring_tactiles 0034       __end_of_ConfigureOscillator 1DD4       __size_of_getCurrentLEDState 0012  
                      map@out_max 0063                        map@out_min 0060       __size_of_updateSwitchBypass 00E4  
        __end_of_initSwitchBypass 1E12                       _CCP1CONbits 0293                       ___ftdiv@exp 0055  
        __size_of_set_leds_bottom 003B                       _CCP2CONbits 029A              _switchBypass_pressed 014E  
                     _CCP3CONbits 0313                       _CCP4CONbits 031A                       _CCP5CONbits 031E  
                     _CCP6CONbits 0613                       _CCP7CONbits 0616                       ___ftmul@exp 0041  
              adc_convert@channel 0025                       _CCP8CONbits 0619                       _CCP9CONbits 061C  
            set_leds_top@ledState 0024                     __pidataBANK10 10CC                    __end_of___lmul 1FCE  
                   __pidataBIGRAM 0D88                    __end_of___wmul 1EAE                       _adc_convert 1E79  
                   __pidataCOMMON 1DCF                    _switchTap_down 00EC               start_initialization 01EA  
           _bottomTactile_pressed 0152               _setDoublePressState 1F41                       __end_of_map 1757  
                     __end_of_isr 01E8                  ?_restoreLEDState 0070                _mod_delay_time_bak 0148  
           __end_of_star_tactiles 15C3                       ?_modulation 0037              ?_setDoublePressState 0034  
                ?_setLongTapState 0022                          ??___lmul 002A                          ??___wmul 0026  
                     __pdataBANK0 0069                       __pdataBANK1 00C9                       __pdataBANK2 015B  
                     __pdataBANK4 0220                       __pdataBANK5 02A0                       __pdataBANK6 0320  
                     __pdataBANK7 03A0                       __pdataBANK8 0420                     _tap_iteration 016B  
        __size_of_updateSwitchTap 01DA                 __size_of___altoft 003D         __size_of_setFeedbackState 0017  
               __size_of___awtoft 0022                 __size_of___ftpack 0065                     ??_init_timer0 0022  
                   ??_init_timer2 0022              __end_of_set_leds_top 085D                         ___latbits 0003  
              _switchBypass_state 00DA                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
                   __pcstackBANK3 01E6                     _delay_counter 0136          __end_of_showBootSequence 1F41  
        ?_updateSwitchBypassState 0022                    isr@tmpSubDelay 0020                          ?_InitApp 0070  
           ??_setDoublePressState 0036                 __size_of_init_adc 000A                 __size_of_init_pwm 0041  
                        ?___aldiv 0028                 ??_set_leds_bottom 0024                _currentBypassState 016E  
                        ?___awdiv 0022                          ?___ftadd 002A                          ?___ftdiv 0047  
                        ?___ftneg 0022                          ?___ftmul 0037                          ?___fttol 00A0  
                     _blink_delay 015B               __size_of_modulation 003E                       _blink_state 016D  
                        _CCPTMRS0 029D                          _CCPTMRS1 029E                          _CCPTMRS2 029F  
                        ?_wait_ms 002E               _read_bottom_tactile 1286               __end_of_init_timer0 0800  
             __end_of_init_timer2 1DE1                         _mod_value 014A                         _mod_timer 0124  
                ??_InitializeTaps 0022                   ___aldiv@divisor 0028                   ___aldiv@counter 0031  
                  ___wmul@product 0026                          _LATBbits 010D                          _LATDbits 010F  
                        _LATFbits 038C                          _LATGbits 038D                    _mod_delay_time 0167  
                       clear_ram0 1DF7                         _tap_timer 00E0                         _tap_total 0128  
                   set_leds_top@x 0022                  ??_FLASH_ReadWord 0024              ?_read_bottom_tactile 0070  
         __size_ofi1_set_leds_top 0048         initSwitchBypass@initState 0038                         map@in_max 005D  
                       map@in_min 005A                         _sub_timer 00DC                        _ADCON0bits 009D  
                      _ADCON1bits 009E                         main@i_376 01EA          __size_of_set_subdivision 00C3  
               ___wmul@multiplier 0022                  set_subdivision@x 00AE                  set_subdivision@y 00B0  
       __size_of_read_top_tactile 004F     __size_of_getSwitchBypassState 0004     __size_of_setSwitchBypassState 004A  
               ??_updateSwitchTap 0038                 ___lmul@multiplier 0022                 _ReadSavedSettings 13AD  
               ?_initSwitchBypass 0070                    wait_ms@timeSec 002E                ?_ReadSavedSettings 0070  
                  wait_ms@timemsl 0030       setSwitchBypassState@f_state 0034                ??_initSwitchBypass 0038  
                __size_of_InitApp 0030                       _mode1_state 0156                     ??_update_mode 0022  
                     _mode2_state 0157             ??_read_bottom_tactile 0034               updateSwitchTap@iCnt 0040  
             ??_ReadSavedSettings 0026                        _APFCONbits 011D                 star_tactiles@iLed 0037  
                __size_of___aldiv 0082                  __size_of___awdiv 0052                  __size_of___ftadd 00F6  
                __size_of___ftdiv 00A9                      ?_adc_convert 0022                  __size_of___ftneg 0009  
                        ___altoft 1051                  __size_of___ftmul 00B4                  __size_of___fttol 0087  
                        ___awtoft 1ECE             __size_of_set_leds_top 0054                          ___ftpack 14EF  
                        _map$2230 0066            _preset_programmning_on 0159            star_tactiles@iLed_1435 0039  
                      _ANSELEbits 0190                        _ANSELFbits 040C                  set_leds_bottom@x 0022  
                _setFeedbackState 1E4B                       _init_timer0 07F9                       _init_timer2 1DD8  
              _delay_time_changed 015D        __end_of_getCurrentLEDState 1E24        __end_of_updateSwitchBypass 0AB8  
                        __ptext10 1000                          __ptext11 1E12                          __ptext20 16CC  
                        __ptext12 0911                          __ptext21 0800                          __ptext13 1645  
                        __ptext30 1DD4                          __ptext22 085D                          __ptext14 1ECE  
                        __ptext31 1E79                          __ptext23 1757                          __ptext15 135E  
                        __ptext40 1F6E                          __ptext32 149D                          __ptext24 0AB8  
                        __ptext16 1286                          __ptext41 1204                          __ptext33 1051  
                        __ptext25 1E03                          __ptext17 108E                          __ptext42 1DD8  
                        __ptext34 14EF                          __ptext26 1314                          __ptext18 1E92  
                        __ptext43 07F9                          __ptext35 13AD                          __ptext27 1FCE  
                        __ptext19 15C3                          __ptext44 1DE1                          __ptext36 0809  
                        __ptext28 1F9E                          __ptext45 1DD0                          __ptext37 1016  
                        __ptext29 1DCE                          __ptext38 1EAE                          __ptext47 12CC  
                        __ptext39 1EF0         __end_of_ReadSavedSettings 13FD                  __size_of_wait_ms 0032  
     __size_of_solidring_tactiles 0040                          _ledState 0120                      ??_modulation 003B  
                     _mod_counter 00E8                          _init_adc 1DE1                     __size_of_main 0555  
                        _init_pwm 1204      __size_of_ConfigureOscillator 0004                      _set_leds_top 0809  
                        _num_taps 007D                          int$flags 007E                   i1set_leds_top@x 0070  
             __end_of_update_mode 1286                __end_of_modulation 10CC                        _INTCONbits 000B  
                     _tap_history 01CC                 ??_set_subdivision 00B2                          intlevel1 0000  
                 _set_leds_bottom 1016                        _PMCON1bits 0195                 ?_showBootSequence 0070  
               __CFG_CLKOUTEN$OFF 0000          __size_of_restoreLEDState 0016                ??_showBootSequence 003B  
                 _reset_sub_delay 014C                        _OSCCONbits 0099                      _preset_blink 0158  
                  i1_set_leds_top 12CC  __size_of_updateSwitchBypassState 0001            __size_of_star_tactiles 006F  
        __size_of_setLongTapState 0017                  _read_top_tactile 135E                      ___aldiv@sign 0032  
      __size_of_ReadSavedSettings 0050            main@adjusted_pot_value 01E6       __end_of_setDoublePressState 1F6E  
                    _CCP10CONbits 061F                 _bottom_push_state 00D1            __end_ofi1_set_leds_top 1314  
