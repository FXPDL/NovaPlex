

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Oct 26 20:02:05 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	idataBANK5,global,class=CODE,delta=2
     9                           	psect	idataBANK6,global,class=CODE,delta=2
    10                           	psect	idataBANK7,global,class=CODE,delta=2
    11                           	psect	idataBANK8,global,class=CODE,delta=2
    12                           	psect	idataBANK9,global,class=CODE,delta=2
    13                           	psect	idataBIGRAM,global,class=CODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	dataBIGRAM,global,delta=1
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    26                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    27                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1
    28                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1
    29                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2
    49                           	psect	text14,local,class=CODE,merge=1,delta=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2
    60                           	psect	text25,local,class=CODE,merge=1,delta=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2
    67                           	psect	text32,local,class=CODE,merge=1,delta=2
    68                           	psect	text33,local,class=CODE,merge=1,delta=2
    69                           	psect	text34,local,class=CODE,merge=1,delta=2
    70                           	psect	text35,local,class=CODE,merge=1,delta=2
    71                           	psect	text36,local,class=CODE,merge=1,delta=2
    72                           	psect	text37,local,class=CODE,merge=1,delta=2
    73                           	psect	text38,local,class=CODE,merge=1,delta=2
    74                           	psect	text39,local,class=CODE,merge=1,delta=2
    75                           	psect	text40,local,class=CODE,merge=1,delta=2
    76                           	psect	text41,local,class=CODE,merge=1,delta=2
    77                           	psect	text42,local,class=CODE,merge=1,delta=2
    78                           	psect	text43,local,class=CODE,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,merge=1,delta=2
    80                           	psect	text45,local,class=CODE,merge=1,delta=2
    81                           	psect	intentry,global,class=CODE,delta=2
    82                           	psect	text47,local,class=CODE,merge=1,delta=2
    83                           	dabs	1,0x920,80
    84                           	dabs	1,0x8A0,80
    85                           	dabs	1,0x820,80
    86                           	dabs	1,0x7A0,80
    87                           	dabs	1,0x720,80
    88                           	dabs	1,0x6A0,80
    89                           	dabs	1,0x652,30
    90                           	dabs	1,0x620,50
    91                           	dabs	1,0x5A8,72
    92                           	dabs	1,0x23F2,0,_delay
    93                           	dabs	1,0x2378,0,_mod5
    94                           	dabs	1,0x7E,2
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0110                     	;# 
   149  0116                     	;# 
   150  0117                     	;# 
   151  011D                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0197                     	;# 
   165  0199                     	;# 
   166  0199                     	;# 
   167  0199                     	;# 
   168  019A                     	;# 
   169  019A                     	;# 
   170  019A                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019C                     	;# 
   177  019C                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019D                     	;# 
   181  019D                     	;# 
   182  019E                     	;# 
   183  019E                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  020D                     	;# 
   189  020F                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  0219                     	;# 
   207  021A                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021D                     	;# 
   211  021E                     	;# 
   212  021F                     	;# 
   213  028C                     	;# 
   214  028D                     	;# 
   215  0291                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0298                     	;# 
   220  0298                     	;# 
   221  0299                     	;# 
   222  029A                     	;# 
   223  029D                     	;# 
   224  029E                     	;# 
   225  029F                     	;# 
   226  030C                     	;# 
   227  030D                     	;# 
   228  0311                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0318                     	;# 
   233  0318                     	;# 
   234  0319                     	;# 
   235  031A                     	;# 
   236  031C                     	;# 
   237  031C                     	;# 
   238  031D                     	;# 
   239  031E                     	;# 
   240  038C                     	;# 
   241  038D                     	;# 
   242  0394                     	;# 
   243  0395                     	;# 
   244  0396                     	;# 
   245  040C                     	;# 
   246  040D                     	;# 
   247  0411                     	;# 
   248  0411                     	;# 
   249  0412                     	;# 
   250  0413                     	;# 
   251  0414                     	;# 
   252  0415                     	;# 
   253  0416                     	;# 
   254  0417                     	;# 
   255  0418                     	;# 
   256  0418                     	;# 
   257  0419                     	;# 
   258  041A                     	;# 
   259  041B                     	;# 
   260  041C                     	;# 
   261  041D                     	;# 
   262  041E                     	;# 
   263  048D                     	;# 
   264  0491                     	;# 
   265  0491                     	;# 
   266  0492                     	;# 
   267  0492                     	;# 
   268  0493                     	;# 
   269  0493                     	;# 
   270  0493                     	;# 
   271  0494                     	;# 
   272  0494                     	;# 
   273  0495                     	;# 
   274  0495                     	;# 
   275  0496                     	;# 
   276  0496                     	;# 
   277  0497                     	;# 
   278  0497                     	;# 
   279  0595                     	;# 
   280  0596                     	;# 
   281  0597                     	;# 
   282  059C                     	;# 
   283  059D                     	;# 
   284  059E                     	;# 
   285  0611                     	;# 
   286  0611                     	;# 
   287  0612                     	;# 
   288  0613                     	;# 
   289  0614                     	;# 
   290  0614                     	;# 
   291  0615                     	;# 
   292  0616                     	;# 
   293  0617                     	;# 
   294  0617                     	;# 
   295  0618                     	;# 
   296  0619                     	;# 
   297  061A                     	;# 
   298  061A                     	;# 
   299  061B                     	;# 
   300  061C                     	;# 
   301  061D                     	;# 
   302  061D                     	;# 
   303  061E                     	;# 
   304  061F                     	;# 
   305  0FE4                     	;# 
   306  0FE5                     	;# 
   307  0FE6                     	;# 
   308  0FE7                     	;# 
   309  0FE8                     	;# 
   310  0FE9                     	;# 
   311  0FEA                     	;# 
   312  0FEB                     	;# 
   313  0FED                     	;# 
   314  0FEE                     	;# 
   315  0FEF                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0110                     	;# 
   370  0116                     	;# 
   371  0117                     	;# 
   372  011D                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  018F                     	;# 
   376  0190                     	;# 
   377  0191                     	;# 
   378  0191                     	;# 
   379  0192                     	;# 
   380  0193                     	;# 
   381  0193                     	;# 
   382  0194                     	;# 
   383  0195                     	;# 
   384  0196                     	;# 
   385  0197                     	;# 
   386  0199                     	;# 
   387  0199                     	;# 
   388  0199                     	;# 
   389  019A                     	;# 
   390  019A                     	;# 
   391  019A                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019B                     	;# 
   395  019B                     	;# 
   396  019B                     	;# 
   397  019C                     	;# 
   398  019C                     	;# 
   399  019C                     	;# 
   400  019D                     	;# 
   401  019D                     	;# 
   402  019D                     	;# 
   403  019E                     	;# 
   404  019E                     	;# 
   405  019E                     	;# 
   406  019F                     	;# 
   407  019F                     	;# 
   408  019F                     	;# 
   409  020D                     	;# 
   410  020F                     	;# 
   411  0210                     	;# 
   412  0211                     	;# 
   413  0211                     	;# 
   414  0212                     	;# 
   415  0212                     	;# 
   416  0213                     	;# 
   417  0213                     	;# 
   418  0214                     	;# 
   419  0214                     	;# 
   420  0215                     	;# 
   421  0215                     	;# 
   422  0215                     	;# 
   423  0216                     	;# 
   424  0216                     	;# 
   425  0217                     	;# 
   426  0217                     	;# 
   427  0219                     	;# 
   428  021A                     	;# 
   429  021B                     	;# 
   430  021C                     	;# 
   431  021D                     	;# 
   432  021E                     	;# 
   433  021F                     	;# 
   434  028C                     	;# 
   435  028D                     	;# 
   436  0291                     	;# 
   437  0291                     	;# 
   438  0292                     	;# 
   439  0293                     	;# 
   440  0298                     	;# 
   441  0298                     	;# 
   442  0299                     	;# 
   443  029A                     	;# 
   444  029D                     	;# 
   445  029E                     	;# 
   446  029F                     	;# 
   447  030C                     	;# 
   448  030D                     	;# 
   449  0311                     	;# 
   450  0311                     	;# 
   451  0312                     	;# 
   452  0313                     	;# 
   453  0318                     	;# 
   454  0318                     	;# 
   455  0319                     	;# 
   456  031A                     	;# 
   457  031C                     	;# 
   458  031C                     	;# 
   459  031D                     	;# 
   460  031E                     	;# 
   461  038C                     	;# 
   462  038D                     	;# 
   463  0394                     	;# 
   464  0395                     	;# 
   465  0396                     	;# 
   466  040C                     	;# 
   467  040D                     	;# 
   468  0411                     	;# 
   469  0411                     	;# 
   470  0412                     	;# 
   471  0413                     	;# 
   472  0414                     	;# 
   473  0415                     	;# 
   474  0416                     	;# 
   475  0417                     	;# 
   476  0418                     	;# 
   477  0418                     	;# 
   478  0419                     	;# 
   479  041A                     	;# 
   480  041B                     	;# 
   481  041C                     	;# 
   482  041D                     	;# 
   483  041E                     	;# 
   484  048D                     	;# 
   485  0491                     	;# 
   486  0491                     	;# 
   487  0492                     	;# 
   488  0492                     	;# 
   489  0493                     	;# 
   490  0493                     	;# 
   491  0493                     	;# 
   492  0494                     	;# 
   493  0494                     	;# 
   494  0495                     	;# 
   495  0495                     	;# 
   496  0496                     	;# 
   497  0496                     	;# 
   498  0497                     	;# 
   499  0497                     	;# 
   500  0595                     	;# 
   501  0596                     	;# 
   502  0597                     	;# 
   503  059C                     	;# 
   504  059D                     	;# 
   505  059E                     	;# 
   506  0611                     	;# 
   507  0611                     	;# 
   508  0612                     	;# 
   509  0613                     	;# 
   510  0614                     	;# 
   511  0614                     	;# 
   512  0615                     	;# 
   513  0616                     	;# 
   514  0617                     	;# 
   515  0617                     	;# 
   516  0618                     	;# 
   517  0619                     	;# 
   518  061A                     	;# 
   519  061A                     	;# 
   520  061B                     	;# 
   521  061C                     	;# 
   522  061D                     	;# 
   523  061D                     	;# 
   524  061E                     	;# 
   525  061F                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  000D                     	;# 
   551  000E                     	;# 
   552  000F                     	;# 
   553  0010                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  008E                     	;# 
   570  008F                     	;# 
   571  0090                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0094                     	;# 
   576  0095                     	;# 
   577  0096                     	;# 
   578  0097                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009B                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  010C                     	;# 
   587  010D                     	;# 
   588  010E                     	;# 
   589  010F                     	;# 
   590  0110                     	;# 
   591  0116                     	;# 
   592  0117                     	;# 
   593  011D                     	;# 
   594  018C                     	;# 
   595  018D                     	;# 
   596  018F                     	;# 
   597  0190                     	;# 
   598  0191                     	;# 
   599  0191                     	;# 
   600  0192                     	;# 
   601  0193                     	;# 
   602  0193                     	;# 
   603  0194                     	;# 
   604  0195                     	;# 
   605  0196                     	;# 
   606  0197                     	;# 
   607  0199                     	;# 
   608  0199                     	;# 
   609  0199                     	;# 
   610  019A                     	;# 
   611  019A                     	;# 
   612  019A                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019C                     	;# 
   621  019D                     	;# 
   622  019D                     	;# 
   623  019D                     	;# 
   624  019E                     	;# 
   625  019E                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  019F                     	;# 
   629  019F                     	;# 
   630  020D                     	;# 
   631  020F                     	;# 
   632  0210                     	;# 
   633  0211                     	;# 
   634  0211                     	;# 
   635  0212                     	;# 
   636  0212                     	;# 
   637  0213                     	;# 
   638  0213                     	;# 
   639  0214                     	;# 
   640  0214                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0216                     	;# 
   645  0216                     	;# 
   646  0217                     	;# 
   647  0217                     	;# 
   648  0219                     	;# 
   649  021A                     	;# 
   650  021B                     	;# 
   651  021C                     	;# 
   652  021D                     	;# 
   653  021E                     	;# 
   654  021F                     	;# 
   655  028C                     	;# 
   656  028D                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0298                     	;# 
   662  0298                     	;# 
   663  0299                     	;# 
   664  029A                     	;# 
   665  029D                     	;# 
   666  029E                     	;# 
   667  029F                     	;# 
   668  030C                     	;# 
   669  030D                     	;# 
   670  0311                     	;# 
   671  0311                     	;# 
   672  0312                     	;# 
   673  0313                     	;# 
   674  0318                     	;# 
   675  0318                     	;# 
   676  0319                     	;# 
   677  031A                     	;# 
   678  031C                     	;# 
   679  031C                     	;# 
   680  031D                     	;# 
   681  031E                     	;# 
   682  038C                     	;# 
   683  038D                     	;# 
   684  0394                     	;# 
   685  0395                     	;# 
   686  0396                     	;# 
   687  040C                     	;# 
   688  040D                     	;# 
   689  0411                     	;# 
   690  0411                     	;# 
   691  0412                     	;# 
   692  0413                     	;# 
   693  0414                     	;# 
   694  0415                     	;# 
   695  0416                     	;# 
   696  0417                     	;# 
   697  0418                     	;# 
   698  0418                     	;# 
   699  0419                     	;# 
   700  041A                     	;# 
   701  041B                     	;# 
   702  041C                     	;# 
   703  041D                     	;# 
   704  041E                     	;# 
   705  048D                     	;# 
   706  0491                     	;# 
   707  0491                     	;# 
   708  0492                     	;# 
   709  0492                     	;# 
   710  0493                     	;# 
   711  0493                     	;# 
   712  0493                     	;# 
   713  0494                     	;# 
   714  0494                     	;# 
   715  0495                     	;# 
   716  0495                     	;# 
   717  0496                     	;# 
   718  0496                     	;# 
   719  0497                     	;# 
   720  0497                     	;# 
   721  0595                     	;# 
   722  0596                     	;# 
   723  0597                     	;# 
   724  059C                     	;# 
   725  059D                     	;# 
   726  059E                     	;# 
   727  0611                     	;# 
   728  0611                     	;# 
   729  0612                     	;# 
   730  0613                     	;# 
   731  0614                     	;# 
   732  0614                     	;# 
   733  0615                     	;# 
   734  0616                     	;# 
   735  0617                     	;# 
   736  0617                     	;# 
   737  0618                     	;# 
   738  0619                     	;# 
   739  061A                     	;# 
   740  061A                     	;# 
   741  061B                     	;# 
   742  061C                     	;# 
   743  061D                     	;# 
   744  061D                     	;# 
   745  061E                     	;# 
   746  061F                     	;# 
   747  0FE4                     	;# 
   748  0FE5                     	;# 
   749  0FE6                     	;# 
   750  0FE7                     	;# 
   751  0FE8                     	;# 
   752  0FE9                     	;# 
   753  0FEA                     	;# 
   754  0FEB                     	;# 
   755  0FED                     	;# 
   756  0FEE                     	;# 
   757  0FEF                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0008                     	;# 
   767  0009                     	;# 
   768  000A                     	;# 
   769  000B                     	;# 
   770  000C                     	;# 
   771  000D                     	;# 
   772  000E                     	;# 
   773  000F                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  008C                     	;# 
   789  008D                     	;# 
   790  008E                     	;# 
   791  008F                     	;# 
   792  0090                     	;# 
   793  0091                     	;# 
   794  0092                     	;# 
   795  0093                     	;# 
   796  0094                     	;# 
   797  0095                     	;# 
   798  0096                     	;# 
   799  0097                     	;# 
   800  0099                     	;# 
   801  009A                     	;# 
   802  009B                     	;# 
   803  009B                     	;# 
   804  009C                     	;# 
   805  009D                     	;# 
   806  009E                     	;# 
   807  010C                     	;# 
   808  010D                     	;# 
   809  010E                     	;# 
   810  010F                     	;# 
   811  0110                     	;# 
   812  0116                     	;# 
   813  0117                     	;# 
   814  011D                     	;# 
   815  018C                     	;# 
   816  018D                     	;# 
   817  018F                     	;# 
   818  0190                     	;# 
   819  0191                     	;# 
   820  0191                     	;# 
   821  0192                     	;# 
   822  0193                     	;# 
   823  0193                     	;# 
   824  0194                     	;# 
   825  0195                     	;# 
   826  0196                     	;# 
   827  0197                     	;# 
   828  0199                     	;# 
   829  0199                     	;# 
   830  0199                     	;# 
   831  019A                     	;# 
   832  019A                     	;# 
   833  019A                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019C                     	;# 
   840  019C                     	;# 
   841  019C                     	;# 
   842  019D                     	;# 
   843  019D                     	;# 
   844  019D                     	;# 
   845  019E                     	;# 
   846  019E                     	;# 
   847  019E                     	;# 
   848  019F                     	;# 
   849  019F                     	;# 
   850  019F                     	;# 
   851  020D                     	;# 
   852  020F                     	;# 
   853  0210                     	;# 
   854  0211                     	;# 
   855  0211                     	;# 
   856  0212                     	;# 
   857  0212                     	;# 
   858  0213                     	;# 
   859  0213                     	;# 
   860  0214                     	;# 
   861  0214                     	;# 
   862  0215                     	;# 
   863  0215                     	;# 
   864  0215                     	;# 
   865  0216                     	;# 
   866  0216                     	;# 
   867  0217                     	;# 
   868  0217                     	;# 
   869  0219                     	;# 
   870  021A                     	;# 
   871  021B                     	;# 
   872  021C                     	;# 
   873  021D                     	;# 
   874  021E                     	;# 
   875  021F                     	;# 
   876  028C                     	;# 
   877  028D                     	;# 
   878  0291                     	;# 
   879  0291                     	;# 
   880  0292                     	;# 
   881  0293                     	;# 
   882  0298                     	;# 
   883  0298                     	;# 
   884  0299                     	;# 
   885  029A                     	;# 
   886  029D                     	;# 
   887  029E                     	;# 
   888  029F                     	;# 
   889  030C                     	;# 
   890  030D                     	;# 
   891  0311                     	;# 
   892  0311                     	;# 
   893  0312                     	;# 
   894  0313                     	;# 
   895  0318                     	;# 
   896  0318                     	;# 
   897  0319                     	;# 
   898  031A                     	;# 
   899  031C                     	;# 
   900  031C                     	;# 
   901  031D                     	;# 
   902  031E                     	;# 
   903  038C                     	;# 
   904  038D                     	;# 
   905  0394                     	;# 
   906  0395                     	;# 
   907  0396                     	;# 
   908  040C                     	;# 
   909  040D                     	;# 
   910  0411                     	;# 
   911  0411                     	;# 
   912  0412                     	;# 
   913  0413                     	;# 
   914  0414                     	;# 
   915  0415                     	;# 
   916  0416                     	;# 
   917  0417                     	;# 
   918  0418                     	;# 
   919  0418                     	;# 
   920  0419                     	;# 
   921  041A                     	;# 
   922  041B                     	;# 
   923  041C                     	;# 
   924  041D                     	;# 
   925  041E                     	;# 
   926  048D                     	;# 
   927  0491                     	;# 
   928  0491                     	;# 
   929  0492                     	;# 
   930  0492                     	;# 
   931  0493                     	;# 
   932  0493                     	;# 
   933  0493                     	;# 
   934  0494                     	;# 
   935  0494                     	;# 
   936  0495                     	;# 
   937  0495                     	;# 
   938  0496                     	;# 
   939  0496                     	;# 
   940  0497                     	;# 
   941  0497                     	;# 
   942  0595                     	;# 
   943  0596                     	;# 
   944  0597                     	;# 
   945  059C                     	;# 
   946  059D                     	;# 
   947  059E                     	;# 
   948  0611                     	;# 
   949  0611                     	;# 
   950  0612                     	;# 
   951  0613                     	;# 
   952  0614                     	;# 
   953  0614                     	;# 
   954  0615                     	;# 
   955  0616                     	;# 
   956  0617                     	;# 
   957  0617                     	;# 
   958  0618                     	;# 
   959  0619                     	;# 
   960  061A                     	;# 
   961  061A                     	;# 
   962  061B                     	;# 
   963  061C                     	;# 
   964  061D                     	;# 
   965  061D                     	;# 
   966  061E                     	;# 
   967  061F                     	;# 
   968  0FE4                     	;# 
   969  0FE5                     	;# 
   970  0FE6                     	;# 
   971  0FE7                     	;# 
   972  0FE8                     	;# 
   973  0FE9                     	;# 
   974  0FEA                     	;# 
   975  0FEB                     	;# 
   976  0FED                     	;# 
   977  0FEE                     	;# 
   978  0FEF                     	;# 
   979  0000                     	;# 
   980  0001                     	;# 
   981  0002                     	;# 
   982  0003                     	;# 
   983  0004                     	;# 
   984  0005                     	;# 
   985  0006                     	;# 
   986  0007                     	;# 
   987  0008                     	;# 
   988  0009                     	;# 
   989  000A                     	;# 
   990  000B                     	;# 
   991  000C                     	;# 
   992  000D                     	;# 
   993  000E                     	;# 
   994  000F                     	;# 
   995  0010                     	;# 
   996  0011                     	;# 
   997  0012                     	;# 
   998  0013                     	;# 
   999  0014                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0016                     	;# 
  1003  0017                     	;# 
  1004  0018                     	;# 
  1005  0019                     	;# 
  1006  001A                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  008C                     	;# 
  1010  008D                     	;# 
  1011  008E                     	;# 
  1012  008F                     	;# 
  1013  0090                     	;# 
  1014  0091                     	;# 
  1015  0092                     	;# 
  1016  0093                     	;# 
  1017  0094                     	;# 
  1018  0095                     	;# 
  1019  0096                     	;# 
  1020  0097                     	;# 
  1021  0099                     	;# 
  1022  009A                     	;# 
  1023  009B                     	;# 
  1024  009B                     	;# 
  1025  009C                     	;# 
  1026  009D                     	;# 
  1027  009E                     	;# 
  1028  010C                     	;# 
  1029  010D                     	;# 
  1030  010E                     	;# 
  1031  010F                     	;# 
  1032  0110                     	;# 
  1033  0116                     	;# 
  1034  0117                     	;# 
  1035  011D                     	;# 
  1036  018C                     	;# 
  1037  018D                     	;# 
  1038  018F                     	;# 
  1039  0190                     	;# 
  1040  0191                     	;# 
  1041  0191                     	;# 
  1042  0192                     	;# 
  1043  0193                     	;# 
  1044  0193                     	;# 
  1045  0194                     	;# 
  1046  0195                     	;# 
  1047  0196                     	;# 
  1048  0197                     	;# 
  1049  0199                     	;# 
  1050  0199                     	;# 
  1051  0199                     	;# 
  1052  019A                     	;# 
  1053  019A                     	;# 
  1054  019A                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019B                     	;# 
  1059  019B                     	;# 
  1060  019C                     	;# 
  1061  019C                     	;# 
  1062  019C                     	;# 
  1063  019D                     	;# 
  1064  019D                     	;# 
  1065  019D                     	;# 
  1066  019E                     	;# 
  1067  019E                     	;# 
  1068  019E                     	;# 
  1069  019F                     	;# 
  1070  019F                     	;# 
  1071  019F                     	;# 
  1072  020D                     	;# 
  1073  020F                     	;# 
  1074  0210                     	;# 
  1075  0211                     	;# 
  1076  0211                     	;# 
  1077  0212                     	;# 
  1078  0212                     	;# 
  1079  0213                     	;# 
  1080  0213                     	;# 
  1081  0214                     	;# 
  1082  0214                     	;# 
  1083  0215                     	;# 
  1084  0215                     	;# 
  1085  0215                     	;# 
  1086  0216                     	;# 
  1087  0216                     	;# 
  1088  0217                     	;# 
  1089  0217                     	;# 
  1090  0219                     	;# 
  1091  021A                     	;# 
  1092  021B                     	;# 
  1093  021C                     	;# 
  1094  021D                     	;# 
  1095  021E                     	;# 
  1096  021F                     	;# 
  1097  028C                     	;# 
  1098  028D                     	;# 
  1099  0291                     	;# 
  1100  0291                     	;# 
  1101  0292                     	;# 
  1102  0293                     	;# 
  1103  0298                     	;# 
  1104  0298                     	;# 
  1105  0299                     	;# 
  1106  029A                     	;# 
  1107  029D                     	;# 
  1108  029E                     	;# 
  1109  029F                     	;# 
  1110  030C                     	;# 
  1111  030D                     	;# 
  1112  0311                     	;# 
  1113  0311                     	;# 
  1114  0312                     	;# 
  1115  0313                     	;# 
  1116  0318                     	;# 
  1117  0318                     	;# 
  1118  0319                     	;# 
  1119  031A                     	;# 
  1120  031C                     	;# 
  1121  031C                     	;# 
  1122  031D                     	;# 
  1123  031E                     	;# 
  1124  038C                     	;# 
  1125  038D                     	;# 
  1126  0394                     	;# 
  1127  0395                     	;# 
  1128  0396                     	;# 
  1129  040C                     	;# 
  1130  040D                     	;# 
  1131  0411                     	;# 
  1132  0411                     	;# 
  1133  0412                     	;# 
  1134  0413                     	;# 
  1135  0414                     	;# 
  1136  0415                     	;# 
  1137  0416                     	;# 
  1138  0417                     	;# 
  1139  0418                     	;# 
  1140  0418                     	;# 
  1141  0419                     	;# 
  1142  041A                     	;# 
  1143  041B                     	;# 
  1144  041C                     	;# 
  1145  041D                     	;# 
  1146  041E                     	;# 
  1147  048D                     	;# 
  1148  0491                     	;# 
  1149  0491                     	;# 
  1150  0492                     	;# 
  1151  0492                     	;# 
  1152  0493                     	;# 
  1153  0493                     	;# 
  1154  0493                     	;# 
  1155  0494                     	;# 
  1156  0494                     	;# 
  1157  0495                     	;# 
  1158  0495                     	;# 
  1159  0496                     	;# 
  1160  0496                     	;# 
  1161  0497                     	;# 
  1162  0497                     	;# 
  1163  0595                     	;# 
  1164  0596                     	;# 
  1165  0597                     	;# 
  1166  059C                     	;# 
  1167  059D                     	;# 
  1168  059E                     	;# 
  1169  0611                     	;# 
  1170  0611                     	;# 
  1171  0612                     	;# 
  1172  0613                     	;# 
  1173  0614                     	;# 
  1174  0614                     	;# 
  1175  0615                     	;# 
  1176  0616                     	;# 
  1177  0617                     	;# 
  1178  0617                     	;# 
  1179  0618                     	;# 
  1180  0619                     	;# 
  1181  061A                     	;# 
  1182  061A                     	;# 
  1183  061B                     	;# 
  1184  061C                     	;# 
  1185  061D                     	;# 
  1186  061D                     	;# 
  1187  061E                     	;# 
  1188  061F                     	;# 
  1189  0FE4                     	;# 
  1190  0FE5                     	;# 
  1191  0FE6                     	;# 
  1192  0FE7                     	;# 
  1193  0FE8                     	;# 
  1194  0FE9                     	;# 
  1195  0FEA                     	;# 
  1196  0FEB                     	;# 
  1197  0FED                     	;# 
  1198  0FEE                     	;# 
  1199  0FEF                     	;# 
  1200  0000                     	;# 
  1201  0001                     	;# 
  1202  0002                     	;# 
  1203  0003                     	;# 
  1204  0004                     	;# 
  1205  0005                     	;# 
  1206  0006                     	;# 
  1207  0007                     	;# 
  1208  0008                     	;# 
  1209  0009                     	;# 
  1210  000A                     	;# 
  1211  000B                     	;# 
  1212  000C                     	;# 
  1213  000D                     	;# 
  1214  000E                     	;# 
  1215  000F                     	;# 
  1216  0010                     	;# 
  1217  0011                     	;# 
  1218  0012                     	;# 
  1219  0013                     	;# 
  1220  0014                     	;# 
  1221  0015                     	;# 
  1222  0016                     	;# 
  1223  0016                     	;# 
  1224  0017                     	;# 
  1225  0018                     	;# 
  1226  0019                     	;# 
  1227  001A                     	;# 
  1228  001B                     	;# 
  1229  001C                     	;# 
  1230  008C                     	;# 
  1231  008D                     	;# 
  1232  008E                     	;# 
  1233  008F                     	;# 
  1234  0090                     	;# 
  1235  0091                     	;# 
  1236  0092                     	;# 
  1237  0093                     	;# 
  1238  0094                     	;# 
  1239  0095                     	;# 
  1240  0096                     	;# 
  1241  0097                     	;# 
  1242  0099                     	;# 
  1243  009A                     	;# 
  1244  009B                     	;# 
  1245  009B                     	;# 
  1246  009C                     	;# 
  1247  009D                     	;# 
  1248  009E                     	;# 
  1249  010C                     	;# 
  1250  010D                     	;# 
  1251  010E                     	;# 
  1252  010F                     	;# 
  1253  0110                     	;# 
  1254  0116                     	;# 
  1255  0117                     	;# 
  1256  011D                     	;# 
  1257  018C                     	;# 
  1258  018D                     	;# 
  1259  018F                     	;# 
  1260  0190                     	;# 
  1261  0191                     	;# 
  1262  0191                     	;# 
  1263  0192                     	;# 
  1264  0193                     	;# 
  1265  0193                     	;# 
  1266  0194                     	;# 
  1267  0195                     	;# 
  1268  0196                     	;# 
  1269  0197                     	;# 
  1270  0199                     	;# 
  1271  0199                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019A                     	;# 
  1275  019A                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019B                     	;# 
  1280  019B                     	;# 
  1281  019C                     	;# 
  1282  019C                     	;# 
  1283  019C                     	;# 
  1284  019D                     	;# 
  1285  019D                     	;# 
  1286  019D                     	;# 
  1287  019E                     	;# 
  1288  019E                     	;# 
  1289  019E                     	;# 
  1290  019F                     	;# 
  1291  019F                     	;# 
  1292  019F                     	;# 
  1293  020D                     	;# 
  1294  020F                     	;# 
  1295  0210                     	;# 
  1296  0211                     	;# 
  1297  0211                     	;# 
  1298  0212                     	;# 
  1299  0212                     	;# 
  1300  0213                     	;# 
  1301  0213                     	;# 
  1302  0214                     	;# 
  1303  0214                     	;# 
  1304  0215                     	;# 
  1305  0215                     	;# 
  1306  0215                     	;# 
  1307  0216                     	;# 
  1308  0216                     	;# 
  1309  0217                     	;# 
  1310  0217                     	;# 
  1311  0219                     	;# 
  1312  021A                     	;# 
  1313  021B                     	;# 
  1314  021C                     	;# 
  1315  021D                     	;# 
  1316  021E                     	;# 
  1317  021F                     	;# 
  1318  028C                     	;# 
  1319  028D                     	;# 
  1320  0291                     	;# 
  1321  0291                     	;# 
  1322  0292                     	;# 
  1323  0293                     	;# 
  1324  0298                     	;# 
  1325  0298                     	;# 
  1326  0299                     	;# 
  1327  029A                     	;# 
  1328  029D                     	;# 
  1329  029E                     	;# 
  1330  029F                     	;# 
  1331  030C                     	;# 
  1332  030D                     	;# 
  1333  0311                     	;# 
  1334  0311                     	;# 
  1335  0312                     	;# 
  1336  0313                     	;# 
  1337  0318                     	;# 
  1338  0318                     	;# 
  1339  0319                     	;# 
  1340  031A                     	;# 
  1341  031C                     	;# 
  1342  031C                     	;# 
  1343  031D                     	;# 
  1344  031E                     	;# 
  1345  038C                     	;# 
  1346  038D                     	;# 
  1347  0394                     	;# 
  1348  0395                     	;# 
  1349  0396                     	;# 
  1350  040C                     	;# 
  1351  040D                     	;# 
  1352  0411                     	;# 
  1353  0411                     	;# 
  1354  0412                     	;# 
  1355  0413                     	;# 
  1356  0414                     	;# 
  1357  0415                     	;# 
  1358  0416                     	;# 
  1359  0417                     	;# 
  1360  0418                     	;# 
  1361  0418                     	;# 
  1362  0419                     	;# 
  1363  041A                     	;# 
  1364  041B                     	;# 
  1365  041C                     	;# 
  1366  041D                     	;# 
  1367  041E                     	;# 
  1368  048D                     	;# 
  1369  0491                     	;# 
  1370  0491                     	;# 
  1371  0492                     	;# 
  1372  0492                     	;# 
  1373  0493                     	;# 
  1374  0493                     	;# 
  1375  0493                     	;# 
  1376  0494                     	;# 
  1377  0494                     	;# 
  1378  0495                     	;# 
  1379  0495                     	;# 
  1380  0496                     	;# 
  1381  0496                     	;# 
  1382  0497                     	;# 
  1383  0497                     	;# 
  1384  0595                     	;# 
  1385  0596                     	;# 
  1386  0597                     	;# 
  1387  059C                     	;# 
  1388  059D                     	;# 
  1389  059E                     	;# 
  1390  0611                     	;# 
  1391  0611                     	;# 
  1392  0612                     	;# 
  1393  0613                     	;# 
  1394  0614                     	;# 
  1395  0614                     	;# 
  1396  0615                     	;# 
  1397  0616                     	;# 
  1398  0617                     	;# 
  1399  0617                     	;# 
  1400  0618                     	;# 
  1401  0619                     	;# 
  1402  061A                     	;# 
  1403  061A                     	;# 
  1404  061B                     	;# 
  1405  061C                     	;# 
  1406  061D                     	;# 
  1407  061D                     	;# 
  1408  061E                     	;# 
  1409  061F                     	;# 
  1410  0FE4                     	;# 
  1411  0FE5                     	;# 
  1412  0FE6                     	;# 
  1413  0FE7                     	;# 
  1414  0FE8                     	;# 
  1415  0FE9                     	;# 
  1416  0FEA                     	;# 
  1417  0FEB                     	;# 
  1418  0FED                     	;# 
  1419  0FEE                     	;# 
  1420  0FEF                     	;# 
  1421  0000                     	;# 
  1422  0001                     	;# 
  1423  0002                     	;# 
  1424  0003                     	;# 
  1425  0004                     	;# 
  1426  0005                     	;# 
  1427  0006                     	;# 
  1428  0007                     	;# 
  1429  0008                     	;# 
  1430  0009                     	;# 
  1431  000A                     	;# 
  1432  000B                     	;# 
  1433  000C                     	;# 
  1434  000D                     	;# 
  1435  000E                     	;# 
  1436  000F                     	;# 
  1437  0010                     	;# 
  1438  0011                     	;# 
  1439  0012                     	;# 
  1440  0013                     	;# 
  1441  0014                     	;# 
  1442  0015                     	;# 
  1443  0016                     	;# 
  1444  0016                     	;# 
  1445  0017                     	;# 
  1446  0018                     	;# 
  1447  0019                     	;# 
  1448  001A                     	;# 
  1449  001B                     	;# 
  1450  001C                     	;# 
  1451  008C                     	;# 
  1452  008D                     	;# 
  1453  008E                     	;# 
  1454  008F                     	;# 
  1455  0090                     	;# 
  1456  0091                     	;# 
  1457  0092                     	;# 
  1458  0093                     	;# 
  1459  0094                     	;# 
  1460  0095                     	;# 
  1461  0096                     	;# 
  1462  0097                     	;# 
  1463  0099                     	;# 
  1464  009A                     	;# 
  1465  009B                     	;# 
  1466  009B                     	;# 
  1467  009C                     	;# 
  1468  009D                     	;# 
  1469  009E                     	;# 
  1470  010C                     	;# 
  1471  010D                     	;# 
  1472  010E                     	;# 
  1473  010F                     	;# 
  1474  0110                     	;# 
  1475  0116                     	;# 
  1476  0117                     	;# 
  1477  011D                     	;# 
  1478  018C                     	;# 
  1479  018D                     	;# 
  1480  018F                     	;# 
  1481  0190                     	;# 
  1482  0191                     	;# 
  1483  0191                     	;# 
  1484  0192                     	;# 
  1485  0193                     	;# 
  1486  0193                     	;# 
  1487  0194                     	;# 
  1488  0195                     	;# 
  1489  0196                     	;# 
  1490  0197                     	;# 
  1491  0199                     	;# 
  1492  0199                     	;# 
  1493  0199                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019A                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019B                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019C                     	;# 
  1505  019D                     	;# 
  1506  019D                     	;# 
  1507  019D                     	;# 
  1508  019E                     	;# 
  1509  019E                     	;# 
  1510  019E                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  019F                     	;# 
  1514  020D                     	;# 
  1515  020F                     	;# 
  1516  0210                     	;# 
  1517  0211                     	;# 
  1518  0211                     	;# 
  1519  0212                     	;# 
  1520  0212                     	;# 
  1521  0213                     	;# 
  1522  0213                     	;# 
  1523  0214                     	;# 
  1524  0214                     	;# 
  1525  0215                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0216                     	;# 
  1529  0216                     	;# 
  1530  0217                     	;# 
  1531  0217                     	;# 
  1532  0219                     	;# 
  1533  021A                     	;# 
  1534  021B                     	;# 
  1535  021C                     	;# 
  1536  021D                     	;# 
  1537  021E                     	;# 
  1538  021F                     	;# 
  1539  028C                     	;# 
  1540  028D                     	;# 
  1541  0291                     	;# 
  1542  0291                     	;# 
  1543  0292                     	;# 
  1544  0293                     	;# 
  1545  0298                     	;# 
  1546  0298                     	;# 
  1547  0299                     	;# 
  1548  029A                     	;# 
  1549  029D                     	;# 
  1550  029E                     	;# 
  1551  029F                     	;# 
  1552  030C                     	;# 
  1553  030D                     	;# 
  1554  0311                     	;# 
  1555  0311                     	;# 
  1556  0312                     	;# 
  1557  0313                     	;# 
  1558  0318                     	;# 
  1559  0318                     	;# 
  1560  0319                     	;# 
  1561  031A                     	;# 
  1562  031C                     	;# 
  1563  031C                     	;# 
  1564  031D                     	;# 
  1565  031E                     	;# 
  1566  038C                     	;# 
  1567  038D                     	;# 
  1568  0394                     	;# 
  1569  0395                     	;# 
  1570  0396                     	;# 
  1571  040C                     	;# 
  1572  040D                     	;# 
  1573  0411                     	;# 
  1574  0411                     	;# 
  1575  0412                     	;# 
  1576  0413                     	;# 
  1577  0414                     	;# 
  1578  0415                     	;# 
  1579  0416                     	;# 
  1580  0417                     	;# 
  1581  0418                     	;# 
  1582  0418                     	;# 
  1583  0419                     	;# 
  1584  041A                     	;# 
  1585  041B                     	;# 
  1586  041C                     	;# 
  1587  041D                     	;# 
  1588  041E                     	;# 
  1589  048D                     	;# 
  1590  0491                     	;# 
  1591  0491                     	;# 
  1592  0492                     	;# 
  1593  0492                     	;# 
  1594  0493                     	;# 
  1595  0493                     	;# 
  1596  0493                     	;# 
  1597  0494                     	;# 
  1598  0494                     	;# 
  1599  0495                     	;# 
  1600  0495                     	;# 
  1601  0496                     	;# 
  1602  0496                     	;# 
  1603  0497                     	;# 
  1604  0497                     	;# 
  1605  0595                     	;# 
  1606  0596                     	;# 
  1607  0597                     	;# 
  1608  059C                     	;# 
  1609  059D                     	;# 
  1610  059E                     	;# 
  1611  0611                     	;# 
  1612  0611                     	;# 
  1613  0612                     	;# 
  1614  0613                     	;# 
  1615  0614                     	;# 
  1616  0614                     	;# 
  1617  0615                     	;# 
  1618  0616                     	;# 
  1619  0617                     	;# 
  1620  0617                     	;# 
  1621  0618                     	;# 
  1622  0619                     	;# 
  1623  061A                     	;# 
  1624  061A                     	;# 
  1625  061B                     	;# 
  1626  061C                     	;# 
  1627  061D                     	;# 
  1628  061D                     	;# 
  1629  061E                     	;# 
  1630  061F                     	;# 
  1631  0FE4                     	;# 
  1632  0FE5                     	;# 
  1633  0FE6                     	;# 
  1634  0FE7                     	;# 
  1635  0FE8                     	;# 
  1636  0FE9                     	;# 
  1637  0FEA                     	;# 
  1638  0FEB                     	;# 
  1639  0FED                     	;# 
  1640  0FEE                     	;# 
  1641  0FEF                     	;# 
  1642  0000                     	;# 
  1643  0001                     	;# 
  1644  0002                     	;# 
  1645  0003                     	;# 
  1646  0004                     	;# 
  1647  0005                     	;# 
  1648  0006                     	;# 
  1649  0007                     	;# 
  1650  0008                     	;# 
  1651  0009                     	;# 
  1652  000A                     	;# 
  1653  000B                     	;# 
  1654  000C                     	;# 
  1655  000D                     	;# 
  1656  000E                     	;# 
  1657  000F                     	;# 
  1658  0010                     	;# 
  1659  0011                     	;# 
  1660  0012                     	;# 
  1661  0013                     	;# 
  1662  0014                     	;# 
  1663  0015                     	;# 
  1664  0016                     	;# 
  1665  0016                     	;# 
  1666  0017                     	;# 
  1667  0018                     	;# 
  1668  0019                     	;# 
  1669  001A                     	;# 
  1670  001B                     	;# 
  1671  001C                     	;# 
  1672  008C                     	;# 
  1673  008D                     	;# 
  1674  008E                     	;# 
  1675  008F                     	;# 
  1676  0090                     	;# 
  1677  0091                     	;# 
  1678  0092                     	;# 
  1679  0093                     	;# 
  1680  0094                     	;# 
  1681  0095                     	;# 
  1682  0096                     	;# 
  1683  0097                     	;# 
  1684  0099                     	;# 
  1685  009A                     	;# 
  1686  009B                     	;# 
  1687  009B                     	;# 
  1688  009C                     	;# 
  1689  009D                     	;# 
  1690  009E                     	;# 
  1691  010C                     	;# 
  1692  010D                     	;# 
  1693  010E                     	;# 
  1694  010F                     	;# 
  1695  0110                     	;# 
  1696  0116                     	;# 
  1697  0117                     	;# 
  1698  011D                     	;# 
  1699  018C                     	;# 
  1700  018D                     	;# 
  1701  018F                     	;# 
  1702  0190                     	;# 
  1703  0191                     	;# 
  1704  0191                     	;# 
  1705  0192                     	;# 
  1706  0193                     	;# 
  1707  0193                     	;# 
  1708  0194                     	;# 
  1709  0195                     	;# 
  1710  0196                     	;# 
  1711  0197                     	;# 
  1712  0199                     	;# 
  1713  0199                     	;# 
  1714  0199                     	;# 
  1715  019A                     	;# 
  1716  019A                     	;# 
  1717  019A                     	;# 
  1718  019B                     	;# 
  1719  019B                     	;# 
  1720  019B                     	;# 
  1721  019B                     	;# 
  1722  019B                     	;# 
  1723  019C                     	;# 
  1724  019C                     	;# 
  1725  019C                     	;# 
  1726  019D                     	;# 
  1727  019D                     	;# 
  1728  019D                     	;# 
  1729  019E                     	;# 
  1730  019E                     	;# 
  1731  019E                     	;# 
  1732  019F                     	;# 
  1733  019F                     	;# 
  1734  019F                     	;# 
  1735  020D                     	;# 
  1736  020F                     	;# 
  1737  0210                     	;# 
  1738  0211                     	;# 
  1739  0211                     	;# 
  1740  0212                     	;# 
  1741  0212                     	;# 
  1742  0213                     	;# 
  1743  0213                     	;# 
  1744  0214                     	;# 
  1745  0214                     	;# 
  1746  0215                     	;# 
  1747  0215                     	;# 
  1748  0215                     	;# 
  1749  0216                     	;# 
  1750  0216                     	;# 
  1751  0217                     	;# 
  1752  0217                     	;# 
  1753  0219                     	;# 
  1754  021A                     	;# 
  1755  021B                     	;# 
  1756  021C                     	;# 
  1757  021D                     	;# 
  1758  021E                     	;# 
  1759  021F                     	;# 
  1760  028C                     	;# 
  1761  028D                     	;# 
  1762  0291                     	;# 
  1763  0291                     	;# 
  1764  0292                     	;# 
  1765  0293                     	;# 
  1766  0298                     	;# 
  1767  0298                     	;# 
  1768  0299                     	;# 
  1769  029A                     	;# 
  1770  029D                     	;# 
  1771  029E                     	;# 
  1772  029F                     	;# 
  1773  030C                     	;# 
  1774  030D                     	;# 
  1775  0311                     	;# 
  1776  0311                     	;# 
  1777  0312                     	;# 
  1778  0313                     	;# 
  1779  0318                     	;# 
  1780  0318                     	;# 
  1781  0319                     	;# 
  1782  031A                     	;# 
  1783  031C                     	;# 
  1784  031C                     	;# 
  1785  031D                     	;# 
  1786  031E                     	;# 
  1787  038C                     	;# 
  1788  038D                     	;# 
  1789  0394                     	;# 
  1790  0395                     	;# 
  1791  0396                     	;# 
  1792  040C                     	;# 
  1793  040D                     	;# 
  1794  0411                     	;# 
  1795  0411                     	;# 
  1796  0412                     	;# 
  1797  0413                     	;# 
  1798  0414                     	;# 
  1799  0415                     	;# 
  1800  0416                     	;# 
  1801  0417                     	;# 
  1802  0418                     	;# 
  1803  0418                     	;# 
  1804  0419                     	;# 
  1805  041A                     	;# 
  1806  041B                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  048D                     	;# 
  1811  0491                     	;# 
  1812  0491                     	;# 
  1813  0492                     	;# 
  1814  0492                     	;# 
  1815  0493                     	;# 
  1816  0493                     	;# 
  1817  0493                     	;# 
  1818  0494                     	;# 
  1819  0494                     	;# 
  1820  0495                     	;# 
  1821  0495                     	;# 
  1822  0496                     	;# 
  1823  0496                     	;# 
  1824  0497                     	;# 
  1825  0497                     	;# 
  1826  0595                     	;# 
  1827  0596                     	;# 
  1828  0597                     	;# 
  1829  059C                     	;# 
  1830  059D                     	;# 
  1831  059E                     	;# 
  1832  0611                     	;# 
  1833  0611                     	;# 
  1834  0612                     	;# 
  1835  0613                     	;# 
  1836  0614                     	;# 
  1837  0614                     	;# 
  1838  0615                     	;# 
  1839  0616                     	;# 
  1840  0617                     	;# 
  1841  0617                     	;# 
  1842  0618                     	;# 
  1843  0619                     	;# 
  1844  061A                     	;# 
  1845  061A                     	;# 
  1846  061B                     	;# 
  1847  061C                     	;# 
  1848  061D                     	;# 
  1849  061D                     	;# 
  1850  061E                     	;# 
  1851  061F                     	;# 
  1852  0FE4                     	;# 
  1853  0FE5                     	;# 
  1854  0FE6                     	;# 
  1855  0FE7                     	;# 
  1856  0FE8                     	;# 
  1857  0FE9                     	;# 
  1858  0FEA                     	;# 
  1859  0FEB                     	;# 
  1860  0FED                     	;# 
  1861  0FEE                     	;# 
  1862  0FEF                     	;# 
  1863  0000                     	;# 
  1864  0001                     	;# 
  1865  0002                     	;# 
  1866  0003                     	;# 
  1867  0004                     	;# 
  1868  0005                     	;# 
  1869  0006                     	;# 
  1870  0007                     	;# 
  1871  0008                     	;# 
  1872  0009                     	;# 
  1873  000A                     	;# 
  1874  000B                     	;# 
  1875  000C                     	;# 
  1876  000D                     	;# 
  1877  000E                     	;# 
  1878  000F                     	;# 
  1879  0010                     	;# 
  1880  0011                     	;# 
  1881  0012                     	;# 
  1882  0013                     	;# 
  1883  0014                     	;# 
  1884  0015                     	;# 
  1885  0016                     	;# 
  1886  0016                     	;# 
  1887  0017                     	;# 
  1888  0018                     	;# 
  1889  0019                     	;# 
  1890  001A                     	;# 
  1891  001B                     	;# 
  1892  001C                     	;# 
  1893  008C                     	;# 
  1894  008D                     	;# 
  1895  008E                     	;# 
  1896  008F                     	;# 
  1897  0090                     	;# 
  1898  0091                     	;# 
  1899  0092                     	;# 
  1900  0093                     	;# 
  1901  0094                     	;# 
  1902  0095                     	;# 
  1903  0096                     	;# 
  1904  0097                     	;# 
  1905  0099                     	;# 
  1906  009A                     	;# 
  1907  009B                     	;# 
  1908  009B                     	;# 
  1909  009C                     	;# 
  1910  009D                     	;# 
  1911  009E                     	;# 
  1912  010C                     	;# 
  1913  010D                     	;# 
  1914  010E                     	;# 
  1915  010F                     	;# 
  1916  0110                     	;# 
  1917  0116                     	;# 
  1918  0117                     	;# 
  1919  011D                     	;# 
  1920  018C                     	;# 
  1921  018D                     	;# 
  1922  018F                     	;# 
  1923  0190                     	;# 
  1924  0191                     	;# 
  1925  0191                     	;# 
  1926  0192                     	;# 
  1927  0193                     	;# 
  1928  0193                     	;# 
  1929  0194                     	;# 
  1930  0195                     	;# 
  1931  0196                     	;# 
  1932  0197                     	;# 
  1933  0199                     	;# 
  1934  0199                     	;# 
  1935  0199                     	;# 
  1936  019A                     	;# 
  1937  019A                     	;# 
  1938  019A                     	;# 
  1939  019B                     	;# 
  1940  019B                     	;# 
  1941  019B                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019C                     	;# 
  1945  019C                     	;# 
  1946  019C                     	;# 
  1947  019D                     	;# 
  1948  019D                     	;# 
  1949  019D                     	;# 
  1950  019E                     	;# 
  1951  019E                     	;# 
  1952  019E                     	;# 
  1953  019F                     	;# 
  1954  019F                     	;# 
  1955  019F                     	;# 
  1956  020D                     	;# 
  1957  020F                     	;# 
  1958  0210                     	;# 
  1959  0211                     	;# 
  1960  0211                     	;# 
  1961  0212                     	;# 
  1962  0212                     	;# 
  1963  0213                     	;# 
  1964  0213                     	;# 
  1965  0214                     	;# 
  1966  0214                     	;# 
  1967  0215                     	;# 
  1968  0215                     	;# 
  1969  0215                     	;# 
  1970  0216                     	;# 
  1971  0216                     	;# 
  1972  0217                     	;# 
  1973  0217                     	;# 
  1974  0219                     	;# 
  1975  021A                     	;# 
  1976  021B                     	;# 
  1977  021C                     	;# 
  1978  021D                     	;# 
  1979  021E                     	;# 
  1980  021F                     	;# 
  1981  028C                     	;# 
  1982  028D                     	;# 
  1983  0291                     	;# 
  1984  0291                     	;# 
  1985  0292                     	;# 
  1986  0293                     	;# 
  1987  0298                     	;# 
  1988  0298                     	;# 
  1989  0299                     	;# 
  1990  029A                     	;# 
  1991  029D                     	;# 
  1992  029E                     	;# 
  1993  029F                     	;# 
  1994  030C                     	;# 
  1995  030D                     	;# 
  1996  0311                     	;# 
  1997  0311                     	;# 
  1998  0312                     	;# 
  1999  0313                     	;# 
  2000  0318                     	;# 
  2001  0318                     	;# 
  2002  0319                     	;# 
  2003  031A                     	;# 
  2004  031C                     	;# 
  2005  031C                     	;# 
  2006  031D                     	;# 
  2007  031E                     	;# 
  2008  038C                     	;# 
  2009  038D                     	;# 
  2010  0394                     	;# 
  2011  0395                     	;# 
  2012  0396                     	;# 
  2013  040C                     	;# 
  2014  040D                     	;# 
  2015  0411                     	;# 
  2016  0411                     	;# 
  2017  0412                     	;# 
  2018  0413                     	;# 
  2019  0414                     	;# 
  2020  0415                     	;# 
  2021  0416                     	;# 
  2022  0417                     	;# 
  2023  0418                     	;# 
  2024  0418                     	;# 
  2025  0419                     	;# 
  2026  041A                     	;# 
  2027  041B                     	;# 
  2028  041C                     	;# 
  2029  041D                     	;# 
  2030  041E                     	;# 
  2031  048D                     	;# 
  2032  0491                     	;# 
  2033  0491                     	;# 
  2034  0492                     	;# 
  2035  0492                     	;# 
  2036  0493                     	;# 
  2037  0493                     	;# 
  2038  0493                     	;# 
  2039  0494                     	;# 
  2040  0494                     	;# 
  2041  0495                     	;# 
  2042  0495                     	;# 
  2043  0496                     	;# 
  2044  0496                     	;# 
  2045  0497                     	;# 
  2046  0497                     	;# 
  2047  0595                     	;# 
  2048  0596                     	;# 
  2049  0597                     	;# 
  2050  059C                     	;# 
  2051  059D                     	;# 
  2052  059E                     	;# 
  2053  0611                     	;# 
  2054  0611                     	;# 
  2055  0612                     	;# 
  2056  0613                     	;# 
  2057  0614                     	;# 
  2058  0614                     	;# 
  2059  0615                     	;# 
  2060  0616                     	;# 
  2061  0617                     	;# 
  2062  0617                     	;# 
  2063  0618                     	;# 
  2064  0619                     	;# 
  2065  061A                     	;# 
  2066  061A                     	;# 
  2067  061B                     	;# 
  2068  061C                     	;# 
  2069  061D                     	;# 
  2070  061D                     	;# 
  2071  061E                     	;# 
  2072  061F                     	;# 
  2073  0FE4                     	;# 
  2074  0FE5                     	;# 
  2075  0FE6                     	;# 
  2076  0FE7                     	;# 
  2077  0FE8                     	;# 
  2078  0FE9                     	;# 
  2079  0FEA                     	;# 
  2080  0FEB                     	;# 
  2081  0FED                     	;# 
  2082  0FEE                     	;# 
  2083  0FEF                     	;# 
  2084  0000                     	;# 
  2085  0001                     	;# 
  2086  0002                     	;# 
  2087  0003                     	;# 
  2088  0004                     	;# 
  2089  0005                     	;# 
  2090  0006                     	;# 
  2091  0007                     	;# 
  2092  0008                     	;# 
  2093  0009                     	;# 
  2094  000A                     	;# 
  2095  000B                     	;# 
  2096  000C                     	;# 
  2097  000D                     	;# 
  2098  000E                     	;# 
  2099  000F                     	;# 
  2100  0010                     	;# 
  2101  0011                     	;# 
  2102  0012                     	;# 
  2103  0013                     	;# 
  2104  0014                     	;# 
  2105  0015                     	;# 
  2106  0016                     	;# 
  2107  0016                     	;# 
  2108  0017                     	;# 
  2109  0018                     	;# 
  2110  0019                     	;# 
  2111  001A                     	;# 
  2112  001B                     	;# 
  2113  001C                     	;# 
  2114  008C                     	;# 
  2115  008D                     	;# 
  2116  008E                     	;# 
  2117  008F                     	;# 
  2118  0090                     	;# 
  2119  0091                     	;# 
  2120  0092                     	;# 
  2121  0093                     	;# 
  2122  0094                     	;# 
  2123  0095                     	;# 
  2124  0096                     	;# 
  2125  0097                     	;# 
  2126  0099                     	;# 
  2127  009A                     	;# 
  2128  009B                     	;# 
  2129  009B                     	;# 
  2130  009C                     	;# 
  2131  009D                     	;# 
  2132  009E                     	;# 
  2133  010C                     	;# 
  2134  010D                     	;# 
  2135  010E                     	;# 
  2136  010F                     	;# 
  2137  0110                     	;# 
  2138  0116                     	;# 
  2139  0117                     	;# 
  2140  011D                     	;# 
  2141  018C                     	;# 
  2142  018D                     	;# 
  2143  018F                     	;# 
  2144  0190                     	;# 
  2145  0191                     	;# 
  2146  0191                     	;# 
  2147  0192                     	;# 
  2148  0193                     	;# 
  2149  0193                     	;# 
  2150  0194                     	;# 
  2151  0195                     	;# 
  2152  0196                     	;# 
  2153  0197                     	;# 
  2154  0199                     	;# 
  2155  0199                     	;# 
  2156  0199                     	;# 
  2157  019A                     	;# 
  2158  019A                     	;# 
  2159  019A                     	;# 
  2160  019B                     	;# 
  2161  019B                     	;# 
  2162  019B                     	;# 
  2163  019B                     	;# 
  2164  019B                     	;# 
  2165  019C                     	;# 
  2166  019C                     	;# 
  2167  019C                     	;# 
  2168  019D                     	;# 
  2169  019D                     	;# 
  2170  019D                     	;# 
  2171  019E                     	;# 
  2172  019E                     	;# 
  2173  019E                     	;# 
  2174  019F                     	;# 
  2175  019F                     	;# 
  2176  019F                     	;# 
  2177  020D                     	;# 
  2178  020F                     	;# 
  2179  0210                     	;# 
  2180  0211                     	;# 
  2181  0211                     	;# 
  2182  0212                     	;# 
  2183  0212                     	;# 
  2184  0213                     	;# 
  2185  0213                     	;# 
  2186  0214                     	;# 
  2187  0214                     	;# 
  2188  0215                     	;# 
  2189  0215                     	;# 
  2190  0215                     	;# 
  2191  0216                     	;# 
  2192  0216                     	;# 
  2193  0217                     	;# 
  2194  0217                     	;# 
  2195  0219                     	;# 
  2196  021A                     	;# 
  2197  021B                     	;# 
  2198  021C                     	;# 
  2199  021D                     	;# 
  2200  021E                     	;# 
  2201  021F                     	;# 
  2202  028C                     	;# 
  2203  028D                     	;# 
  2204  0291                     	;# 
  2205  0291                     	;# 
  2206  0292                     	;# 
  2207  0293                     	;# 
  2208  0298                     	;# 
  2209  0298                     	;# 
  2210  0299                     	;# 
  2211  029A                     	;# 
  2212  029D                     	;# 
  2213  029E                     	;# 
  2214  029F                     	;# 
  2215  030C                     	;# 
  2216  030D                     	;# 
  2217  0311                     	;# 
  2218  0311                     	;# 
  2219  0312                     	;# 
  2220  0313                     	;# 
  2221  0318                     	;# 
  2222  0318                     	;# 
  2223  0319                     	;# 
  2224  031A                     	;# 
  2225  031C                     	;# 
  2226  031C                     	;# 
  2227  031D                     	;# 
  2228  031E                     	;# 
  2229  038C                     	;# 
  2230  038D                     	;# 
  2231  0394                     	;# 
  2232  0395                     	;# 
  2233  0396                     	;# 
  2234  040C                     	;# 
  2235  040D                     	;# 
  2236  0411                     	;# 
  2237  0411                     	;# 
  2238  0412                     	;# 
  2239  0413                     	;# 
  2240  0414                     	;# 
  2241  0415                     	;# 
  2242  0416                     	;# 
  2243  0417                     	;# 
  2244  0418                     	;# 
  2245  0418                     	;# 
  2246  0419                     	;# 
  2247  041A                     	;# 
  2248  041B                     	;# 
  2249  041C                     	;# 
  2250  041D                     	;# 
  2251  041E                     	;# 
  2252  048D                     	;# 
  2253  0491                     	;# 
  2254  0491                     	;# 
  2255  0492                     	;# 
  2256  0492                     	;# 
  2257  0493                     	;# 
  2258  0493                     	;# 
  2259  0493                     	;# 
  2260  0494                     	;# 
  2261  0494                     	;# 
  2262  0495                     	;# 
  2263  0495                     	;# 
  2264  0496                     	;# 
  2265  0496                     	;# 
  2266  0497                     	;# 
  2267  0497                     	;# 
  2268  0595                     	;# 
  2269  0596                     	;# 
  2270  0597                     	;# 
  2271  059C                     	;# 
  2272  059D                     	;# 
  2273  059E                     	;# 
  2274  0611                     	;# 
  2275  0611                     	;# 
  2276  0612                     	;# 
  2277  0613                     	;# 
  2278  0614                     	;# 
  2279  0614                     	;# 
  2280  0615                     	;# 
  2281  0616                     	;# 
  2282  0617                     	;# 
  2283  0617                     	;# 
  2284  0618                     	;# 
  2285  0619                     	;# 
  2286  061A                     	;# 
  2287  061A                     	;# 
  2288  061B                     	;# 
  2289  061C                     	;# 
  2290  061D                     	;# 
  2291  061D                     	;# 
  2292  061E                     	;# 
  2293  061F                     	;# 
  2294  0FE4                     	;# 
  2295  0FE5                     	;# 
  2296  0FE6                     	;# 
  2297  0FE7                     	;# 
  2298  0FE8                     	;# 
  2299  0FE9                     	;# 
  2300  0FEA                     	;# 
  2301  0FEB                     	;# 
  2302  0FED                     	;# 
  2303  0FEE                     	;# 
  2304  0FEF                     	;# 
  2305  0000                     	;# 
  2306  0001                     	;# 
  2307  0002                     	;# 
  2308  0003                     	;# 
  2309  0004                     	;# 
  2310  0005                     	;# 
  2311  0006                     	;# 
  2312  0007                     	;# 
  2313  0008                     	;# 
  2314  0009                     	;# 
  2315  000A                     	;# 
  2316  000B                     	;# 
  2317  000C                     	;# 
  2318  000D                     	;# 
  2319  000E                     	;# 
  2320  000F                     	;# 
  2321  0010                     	;# 
  2322  0011                     	;# 
  2323  0012                     	;# 
  2324  0013                     	;# 
  2325  0014                     	;# 
  2326  0015                     	;# 
  2327  0016                     	;# 
  2328  0016                     	;# 
  2329  0017                     	;# 
  2330  0018                     	;# 
  2331  0019                     	;# 
  2332  001A                     	;# 
  2333  001B                     	;# 
  2334  001C                     	;# 
  2335  008C                     	;# 
  2336  008D                     	;# 
  2337  008E                     	;# 
  2338  008F                     	;# 
  2339  0090                     	;# 
  2340  0091                     	;# 
  2341  0092                     	;# 
  2342  0093                     	;# 
  2343  0094                     	;# 
  2344  0095                     	;# 
  2345  0096                     	;# 
  2346  0097                     	;# 
  2347  0099                     	;# 
  2348  009A                     	;# 
  2349  009B                     	;# 
  2350  009B                     	;# 
  2351  009C                     	;# 
  2352  009D                     	;# 
  2353  009E                     	;# 
  2354  010C                     	;# 
  2355  010D                     	;# 
  2356  010E                     	;# 
  2357  010F                     	;# 
  2358  0110                     	;# 
  2359  0116                     	;# 
  2360  0117                     	;# 
  2361  011D                     	;# 
  2362  018C                     	;# 
  2363  018D                     	;# 
  2364  018F                     	;# 
  2365  0190                     	;# 
  2366  0191                     	;# 
  2367  0191                     	;# 
  2368  0192                     	;# 
  2369  0193                     	;# 
  2370  0193                     	;# 
  2371  0194                     	;# 
  2372  0195                     	;# 
  2373  0196                     	;# 
  2374  0197                     	;# 
  2375  0199                     	;# 
  2376  0199                     	;# 
  2377  0199                     	;# 
  2378  019A                     	;# 
  2379  019A                     	;# 
  2380  019A                     	;# 
  2381  019B                     	;# 
  2382  019B                     	;# 
  2383  019B                     	;# 
  2384  019B                     	;# 
  2385  019B                     	;# 
  2386  019C                     	;# 
  2387  019C                     	;# 
  2388  019C                     	;# 
  2389  019D                     	;# 
  2390  019D                     	;# 
  2391  019D                     	;# 
  2392  019E                     	;# 
  2393  019E                     	;# 
  2394  019E                     	;# 
  2395  019F                     	;# 
  2396  019F                     	;# 
  2397  019F                     	;# 
  2398  020D                     	;# 
  2399  020F                     	;# 
  2400  0210                     	;# 
  2401  0211                     	;# 
  2402  0211                     	;# 
  2403  0212                     	;# 
  2404  0212                     	;# 
  2405  0213                     	;# 
  2406  0213                     	;# 
  2407  0214                     	;# 
  2408  0214                     	;# 
  2409  0215                     	;# 
  2410  0215                     	;# 
  2411  0215                     	;# 
  2412  0216                     	;# 
  2413  0216                     	;# 
  2414  0217                     	;# 
  2415  0217                     	;# 
  2416  0219                     	;# 
  2417  021A                     	;# 
  2418  021B                     	;# 
  2419  021C                     	;# 
  2420  021D                     	;# 
  2421  021E                     	;# 
  2422  021F                     	;# 
  2423  028C                     	;# 
  2424  028D                     	;# 
  2425  0291                     	;# 
  2426  0291                     	;# 
  2427  0292                     	;# 
  2428  0293                     	;# 
  2429  0298                     	;# 
  2430  0298                     	;# 
  2431  0299                     	;# 
  2432  029A                     	;# 
  2433  029D                     	;# 
  2434  029E                     	;# 
  2435  029F                     	;# 
  2436  030C                     	;# 
  2437  030D                     	;# 
  2438  0311                     	;# 
  2439  0311                     	;# 
  2440  0312                     	;# 
  2441  0313                     	;# 
  2442  0318                     	;# 
  2443  0318                     	;# 
  2444  0319                     	;# 
  2445  031A                     	;# 
  2446  031C                     	;# 
  2447  031C                     	;# 
  2448  031D                     	;# 
  2449  031E                     	;# 
  2450  038C                     	;# 
  2451  038D                     	;# 
  2452  0394                     	;# 
  2453  0395                     	;# 
  2454  0396                     	;# 
  2455  040C                     	;# 
  2456  040D                     	;# 
  2457  0411                     	;# 
  2458  0411                     	;# 
  2459  0412                     	;# 
  2460  0413                     	;# 
  2461  0414                     	;# 
  2462  0415                     	;# 
  2463  0416                     	;# 
  2464  0417                     	;# 
  2465  0418                     	;# 
  2466  0418                     	;# 
  2467  0419                     	;# 
  2468  041A                     	;# 
  2469  041B                     	;# 
  2470  041C                     	;# 
  2471  041D                     	;# 
  2472  041E                     	;# 
  2473  048D                     	;# 
  2474  0491                     	;# 
  2475  0491                     	;# 
  2476  0492                     	;# 
  2477  0492                     	;# 
  2478  0493                     	;# 
  2479  0493                     	;# 
  2480  0493                     	;# 
  2481  0494                     	;# 
  2482  0494                     	;# 
  2483  0495                     	;# 
  2484  0495                     	;# 
  2485  0496                     	;# 
  2486  0496                     	;# 
  2487  0497                     	;# 
  2488  0497                     	;# 
  2489  0595                     	;# 
  2490  0596                     	;# 
  2491  0597                     	;# 
  2492  059C                     	;# 
  2493  059D                     	;# 
  2494  059E                     	;# 
  2495  0611                     	;# 
  2496  0611                     	;# 
  2497  0612                     	;# 
  2498  0613                     	;# 
  2499  0614                     	;# 
  2500  0614                     	;# 
  2501  0615                     	;# 
  2502  0616                     	;# 
  2503  0617                     	;# 
  2504  0617                     	;# 
  2505  0618                     	;# 
  2506  0619                     	;# 
  2507  061A                     	;# 
  2508  061A                     	;# 
  2509  061B                     	;# 
  2510  061C                     	;# 
  2511  061D                     	;# 
  2512  061D                     	;# 
  2513  061E                     	;# 
  2514  061F                     	;# 
  2515  0FE4                     	;# 
  2516  0FE5                     	;# 
  2517  0FE6                     	;# 
  2518  0FE7                     	;# 
  2519  0FE8                     	;# 
  2520  0FE9                     	;# 
  2521  0FEA                     	;# 
  2522  0FEB                     	;# 
  2523  0FED                     	;# 
  2524  0FEE                     	;# 
  2525  0FEF                     	;# 
  2526  0000                     	;# 
  2527  0001                     	;# 
  2528  0002                     	;# 
  2529  0003                     	;# 
  2530  0004                     	;# 
  2531  0005                     	;# 
  2532  0006                     	;# 
  2533  0007                     	;# 
  2534  0008                     	;# 
  2535  0009                     	;# 
  2536  000A                     	;# 
  2537  000B                     	;# 
  2538  000C                     	;# 
  2539  000D                     	;# 
  2540  000E                     	;# 
  2541  000F                     	;# 
  2542  0010                     	;# 
  2543  0011                     	;# 
  2544  0012                     	;# 
  2545  0013                     	;# 
  2546  0014                     	;# 
  2547  0015                     	;# 
  2548  0016                     	;# 
  2549  0016                     	;# 
  2550  0017                     	;# 
  2551  0018                     	;# 
  2552  0019                     	;# 
  2553  001A                     	;# 
  2554  001B                     	;# 
  2555  001C                     	;# 
  2556  008C                     	;# 
  2557  008D                     	;# 
  2558  008E                     	;# 
  2559  008F                     	;# 
  2560  0090                     	;# 
  2561  0091                     	;# 
  2562  0092                     	;# 
  2563  0093                     	;# 
  2564  0094                     	;# 
  2565  0095                     	;# 
  2566  0096                     	;# 
  2567  0097                     	;# 
  2568  0099                     	;# 
  2569  009A                     	;# 
  2570  009B                     	;# 
  2571  009B                     	;# 
  2572  009C                     	;# 
  2573  009D                     	;# 
  2574  009E                     	;# 
  2575  010C                     	;# 
  2576  010D                     	;# 
  2577  010E                     	;# 
  2578  010F                     	;# 
  2579  0110                     	;# 
  2580  0116                     	;# 
  2581  0117                     	;# 
  2582  011D                     	;# 
  2583  018C                     	;# 
  2584  018D                     	;# 
  2585  018F                     	;# 
  2586  0190                     	;# 
  2587  0191                     	;# 
  2588  0191                     	;# 
  2589  0192                     	;# 
  2590  0193                     	;# 
  2591  0193                     	;# 
  2592  0194                     	;# 
  2593  0195                     	;# 
  2594  0196                     	;# 
  2595  0197                     	;# 
  2596  0199                     	;# 
  2597  0199                     	;# 
  2598  0199                     	;# 
  2599  019A                     	;# 
  2600  019A                     	;# 
  2601  019A                     	;# 
  2602  019B                     	;# 
  2603  019B                     	;# 
  2604  019B                     	;# 
  2605  019B                     	;# 
  2606  019B                     	;# 
  2607  019C                     	;# 
  2608  019C                     	;# 
  2609  019C                     	;# 
  2610  019D                     	;# 
  2611  019D                     	;# 
  2612  019D                     	;# 
  2613  019E                     	;# 
  2614  019E                     	;# 
  2615  019E                     	;# 
  2616  019F                     	;# 
  2617  019F                     	;# 
  2618  019F                     	;# 
  2619  020D                     	;# 
  2620  020F                     	;# 
  2621  0210                     	;# 
  2622  0211                     	;# 
  2623  0211                     	;# 
  2624  0212                     	;# 
  2625  0212                     	;# 
  2626  0213                     	;# 
  2627  0213                     	;# 
  2628  0214                     	;# 
  2629  0214                     	;# 
  2630  0215                     	;# 
  2631  0215                     	;# 
  2632  0215                     	;# 
  2633  0216                     	;# 
  2634  0216                     	;# 
  2635  0217                     	;# 
  2636  0217                     	;# 
  2637  0219                     	;# 
  2638  021A                     	;# 
  2639  021B                     	;# 
  2640  021C                     	;# 
  2641  021D                     	;# 
  2642  021E                     	;# 
  2643  021F                     	;# 
  2644  028C                     	;# 
  2645  028D                     	;# 
  2646  0291                     	;# 
  2647  0291                     	;# 
  2648  0292                     	;# 
  2649  0293                     	;# 
  2650  0298                     	;# 
  2651  0298                     	;# 
  2652  0299                     	;# 
  2653  029A                     	;# 
  2654  029D                     	;# 
  2655  029E                     	;# 
  2656  029F                     	;# 
  2657  030C                     	;# 
  2658  030D                     	;# 
  2659  0311                     	;# 
  2660  0311                     	;# 
  2661  0312                     	;# 
  2662  0313                     	;# 
  2663  0318                     	;# 
  2664  0318                     	;# 
  2665  0319                     	;# 
  2666  031A                     	;# 
  2667  031C                     	;# 
  2668  031C                     	;# 
  2669  031D                     	;# 
  2670  031E                     	;# 
  2671  038C                     	;# 
  2672  038D                     	;# 
  2673  0394                     	;# 
  2674  0395                     	;# 
  2675  0396                     	;# 
  2676  040C                     	;# 
  2677  040D                     	;# 
  2678  0411                     	;# 
  2679  0411                     	;# 
  2680  0412                     	;# 
  2681  0413                     	;# 
  2682  0414                     	;# 
  2683  0415                     	;# 
  2684  0416                     	;# 
  2685  0417                     	;# 
  2686  0418                     	;# 
  2687  0418                     	;# 
  2688  0419                     	;# 
  2689  041A                     	;# 
  2690  041B                     	;# 
  2691  041C                     	;# 
  2692  041D                     	;# 
  2693  041E                     	;# 
  2694  048D                     	;# 
  2695  0491                     	;# 
  2696  0491                     	;# 
  2697  0492                     	;# 
  2698  0492                     	;# 
  2699  0493                     	;# 
  2700  0493                     	;# 
  2701  0493                     	;# 
  2702  0494                     	;# 
  2703  0494                     	;# 
  2704  0495                     	;# 
  2705  0495                     	;# 
  2706  0496                     	;# 
  2707  0496                     	;# 
  2708  0497                     	;# 
  2709  0497                     	;# 
  2710  0595                     	;# 
  2711  0596                     	;# 
  2712  0597                     	;# 
  2713  059C                     	;# 
  2714  059D                     	;# 
  2715  059E                     	;# 
  2716  0611                     	;# 
  2717  0611                     	;# 
  2718  0612                     	;# 
  2719  0613                     	;# 
  2720  0614                     	;# 
  2721  0614                     	;# 
  2722  0615                     	;# 
  2723  0616                     	;# 
  2724  0617                     	;# 
  2725  0617                     	;# 
  2726  0618                     	;# 
  2727  0619                     	;# 
  2728  061A                     	;# 
  2729  061A                     	;# 
  2730  061B                     	;# 
  2731  061C                     	;# 
  2732  061D                     	;# 
  2733  061D                     	;# 
  2734  061E                     	;# 
  2735  061F                     	;# 
  2736  0FE4                     	;# 
  2737  0FE5                     	;# 
  2738  0FE6                     	;# 
  2739  0FE7                     	;# 
  2740  0FE8                     	;# 
  2741  0FE9                     	;# 
  2742  0FEA                     	;# 
  2743  0FEB                     	;# 
  2744  0FED                     	;# 
  2745  0FEE                     	;# 
  2746  0FEF                     	;_mod5
  2747                           
  2748                           	psect	idataBANK0
  2749  0003                     __pidataBANK0:	
  2750                           
  2751                           ;initializer for _feedback_state
  2752  0003  34FF               	retlw	255
  2753                           
  2754                           	psect	idataBANK1
  2755  1F15                     __pidataBANK1:	
  2756                           
  2757                           ;initializer for _baseline_delay_time
  2758  1F15  34D0               	retlw	208
  2759  1F16  3407               	retlw	7
  2760  1F17  3400               	retlw	0
  2761  1F18  3400               	retlw	0
  2762                           
  2763                           ;initializer for _delay_time
  2764  1F19  34D0               	retlw	208
  2765  1F1A  3407               	retlw	7
  2766  1F1B  3400               	retlw	0
  2767  1F1C  3400               	retlw	0
  2768                           
  2769                           ;initializer for _bottom_push_state
  2770  1F1D  3406               	retlw	6
  2771  1F1E  3400               	retlw	0
  2772                           
  2773                           ;initializer for _long_press_limit
  2774  1F1F  34E8               	retlw	232
  2775  1F20  3403               	retlw	3
  2776                           
  2777                           ;initializer for _tap_iteration
  2778  1F21  3401               	retlw	1
  2779  1F22  3400               	retlw	0
  2780                           
  2781                           ;initializer for _top_push_state
  2782  1F23  3406               	retlw	6
  2783  1F24  3400               	retlw	0
  2784                           
  2785                           ;initializer for _blink_rate
  2786  1F25  3414               	retlw	20
  2787                           
  2788                           ;initializer for _currentBypassState
  2789  1F26  34FF               	retlw	255
  2790                           
  2791                           ;initializer for _longTap_state
  2792  1F27  34FF               	retlw	255
  2793                           
  2794                           ;initializer for _num_taps
  2795  1F28  3404               	retlw	4
  2796                           
  2797                           ;initializer for _switchBypass_state
  2798  1F29  34FF               	retlw	255
  2799                           
  2800                           ;initializer for _switchTap_state
  2801  1F2A  34FF               	retlw	255
  2802                           
  2803                           	psect	idataBANK2
  2804  1EEC                     __pidataBANK2:	
  2805                           
  2806                           ;initializer for _blink_delay
  2807  1EEC  3464               	retlw	100
  2808  1EED  3400               	retlw	0
  2809                           
  2810                           ;initializer for _delay_time_changed
  2811  1EEE  3401               	retlw	1
  2812  1EEF  3400               	retlw	0
  2813                           
  2814                           ;initializer for _knob1_prev
  2815  1EF0  34D0               	retlw	208
  2816  1EF1  3407               	retlw	7
  2817                           
  2818                           ;initializer for _knob2_prev
  2819  1EF2  34D0               	retlw	208
  2820  1EF3  3407               	retlw	7
  2821                           
  2822                           ;initializer for _knob3_prev
  2823  1EF4  34D0               	retlw	208
  2824  1EF5  3407               	retlw	7
  2825                           
  2826                           ;initializer for _knob4_prev
  2827  1EF6  34D0               	retlw	208
  2828  1EF7  3407               	retlw	7
  2829                           
  2830                           ;initializer for _knob5_prev
  2831  1EF8  34D0               	retlw	208
  2832  1EF9  3407               	retlw	7
  2833                           
  2834                           ;initializer for _mod_delay_time
  2835  1EFA  34D0               	retlw	208
  2836  1EFB  3407               	retlw	7
  2837                           
  2838                           ;initializer for _switchBypass_up
  2839  1EFC  3401               	retlw	1
  2840  1EFD  3400               	retlw	0
  2841                           
  2842                           ;initializer for _blink_state
  2843  1EFE  3401               	retlw	1
  2844                           
  2845                           	psect	idataBANK4
  2846  1211                     __pidataBANK4:	
  2847                           
  2848                           ;initializer for _mod2
  2849  1211  3400               	retlw	0
  2850  1212  3400               	retlw	0
  2851  1213  340D               	retlw	13
  2852  1214  3400               	retlw	0
  2853  1215  341B               	retlw	27
  2854  1216  3400               	retlw	0
  2855  1217  3428               	retlw	40
  2856  1218  3400               	retlw	0
  2857  1219  3435               	retlw	53
  2858  121A  3400               	retlw	0
  2859  121B  3443               	retlw	67
  2860  121C  3400               	retlw	0
  2861  121D  3450               	retlw	80
  2862  121E  3400               	retlw	0
  2863  121F  345D               	retlw	93
  2864  1220  3400               	retlw	0
  2865  1221  345D               	retlw	93
  2866  1222  3400               	retlw	0
  2867  1223  3450               	retlw	80
  2868  1224  3400               	retlw	0
  2869  1225  3443               	retlw	67
  2870  1226  3400               	retlw	0
  2871  1227  3435               	retlw	53
  2872  1228  3400               	retlw	0
  2873  1229  3428               	retlw	40
  2874  122A  3400               	retlw	0
  2875  122B  341B               	retlw	27
  2876  122C  3400               	retlw	0
  2877  122D  340D               	retlw	13
  2878  122E  3400               	retlw	0
  2879  122F  3400               	retlw	0
  2880  1230  3400               	retlw	0
  2881  1231  34F3               	retlw	243
  2882  1232  34FF               	retlw	255
  2883  1233  34E5               	retlw	229
  2884  1234  34FF               	retlw	255
  2885  1235  34D8               	retlw	216
  2886  1236  34FF               	retlw	255
  2887  1237  34CB               	retlw	203
  2888  1238  34FF               	retlw	255
  2889  1239  34BD               	retlw	189
  2890  123A  34FF               	retlw	255
  2891  123B  34B0               	retlw	176
  2892  123C  34FF               	retlw	255
  2893  123D  34A3               	retlw	163
  2894  123E  34FF               	retlw	255
  2895  123F  34A3               	retlw	163
  2896  1240  34FF               	retlw	255
  2897  1241  34B0               	retlw	176
  2898  1242  34FF               	retlw	255
  2899  1243  34BD               	retlw	189
  2900  1244  34FF               	retlw	255
  2901  1245  34CB               	retlw	203
  2902  1246  34FF               	retlw	255
  2903  1247  34D8               	retlw	216
  2904  1248  34FF               	retlw	255
  2905  1249  34E5               	retlw	229
  2906  124A  34FF               	retlw	255
  2907                           
  2908                           	psect	idataBANK5
  2909  11D7                     __pidataBANK5:	
  2910                           
  2911                           ;initializer for _mod3
  2912  11D7  3400               	retlw	0
  2913  11D8  3400               	retlw	0
  2914  11D9  3407               	retlw	7
  2915  11DA  3400               	retlw	0
  2916  11DB  340D               	retlw	13
  2917  11DC  3400               	retlw	0
  2918  11DD  3414               	retlw	20
  2919  11DE  3400               	retlw	0
  2920  11DF  341B               	retlw	27
  2921  11E0  3400               	retlw	0
  2922  11E1  3421               	retlw	33
  2923  11E2  3400               	retlw	0
  2924  11E3  3428               	retlw	40
  2925  11E4  3400               	retlw	0
  2926  11E5  342F               	retlw	47
  2927  11E6  3400               	retlw	0
  2928  11E7  3435               	retlw	53
  2929  11E8  3400               	retlw	0
  2930  11E9  343C               	retlw	60
  2931  11EA  3400               	retlw	0
  2932  11EB  3443               	retlw	67
  2933  11EC  3400               	retlw	0
  2934  11ED  3449               	retlw	73
  2935  11EE  3400               	retlw	0
  2936  11EF  3450               	retlw	80
  2937  11F0  3400               	retlw	0
  2938  11F1  3457               	retlw	87
  2939  11F2  3400               	retlw	0
  2940  11F3  345D               	retlw	93
  2941  11F4  3400               	retlw	0
  2942  11F5  349C               	retlw	156
  2943  11F6  34FF               	retlw	255
  2944  11F7  34A3               	retlw	163
  2945  11F8  34FF               	retlw	255
  2946  11F9  34A9               	retlw	169
  2947  11FA  34FF               	retlw	255
  2948  11FB  34B0               	retlw	176
  2949  11FC  34FF               	retlw	255
  2950  11FD  34B7               	retlw	183
  2951  11FE  34FF               	retlw	255
  2952  11FF  34BD               	retlw	189
  2953  1200  34FF               	retlw	255
  2954  1201  34C4               	retlw	196
  2955  1202  34FF               	retlw	255
  2956  1203  34CB               	retlw	203
  2957  1204  34FF               	retlw	255
  2958  1205  34D1               	retlw	209
  2959  1206  34FF               	retlw	255
  2960  1207  34D8               	retlw	216
  2961  1208  34FF               	retlw	255
  2962  1209  34DF               	retlw	223
  2963  120A  34FF               	retlw	255
  2964  120B  34E5               	retlw	229
  2965  120C  34FF               	retlw	255
  2966  120D  34EC               	retlw	236
  2967  120E  34FF               	retlw	255
  2968  120F  34F3               	retlw	243
  2969  1210  34FF               	retlw	255
  2970                           
  2971                           	psect	idataBANK6
  2972  119D                     __pidataBANK6:	
  2973                           
  2974                           ;initializer for _mod4
  2975  119D  3464               	retlw	100
  2976  119E  3400               	retlw	0
  2977  119F  3464               	retlw	100
  2978  11A0  3400               	retlw	0
  2979  11A1  3464               	retlw	100
  2980  11A2  3400               	retlw	0
  2981  11A3  3464               	retlw	100
  2982  11A4  3400               	retlw	0
  2983  11A5  3464               	retlw	100
  2984  11A6  3400               	retlw	0
  2985  11A7  3464               	retlw	100
  2986  11A8  3400               	retlw	0
  2987  11A9  3464               	retlw	100
  2988  11AA  3400               	retlw	0
  2989  11AB  3464               	retlw	100
  2990  11AC  3400               	retlw	0
  2991  11AD  3464               	retlw	100
  2992  11AE  3400               	retlw	0
  2993  11AF  3464               	retlw	100
  2994  11B0  3400               	retlw	0
  2995  11B1  3464               	retlw	100
  2996  11B2  3400               	retlw	0
  2997  11B3  3464               	retlw	100
  2998  11B4  3400               	retlw	0
  2999  11B5  3464               	retlw	100
  3000  11B6  3400               	retlw	0
  3001  11B7  3464               	retlw	100
  3002  11B8  3400               	retlw	0
  3003  11B9  3464               	retlw	100
  3004  11BA  3400               	retlw	0
  3005  11BB  349C               	retlw	156
  3006  11BC  34FF               	retlw	255
  3007  11BD  349C               	retlw	156
  3008  11BE  34FF               	retlw	255
  3009  11BF  349C               	retlw	156
  3010  11C0  34FF               	retlw	255
  3011  11C1  349C               	retlw	156
  3012  11C2  34FF               	retlw	255
  3013  11C3  349C               	retlw	156
  3014  11C4  34FF               	retlw	255
  3015  11C5  349C               	retlw	156
  3016  11C6  34FF               	retlw	255
  3017  11C7  349C               	retlw	156
  3018  11C8  34FF               	retlw	255
  3019  11C9  349C               	retlw	156
  3020  11CA  34FF               	retlw	255
  3021  11CB  349C               	retlw	156
  3022  11CC  34FF               	retlw	255
  3023  11CD  349C               	retlw	156
  3024  11CE  34FF               	retlw	255
  3025  11CF  349C               	retlw	156
  3026  11D0  34FF               	retlw	255
  3027  11D1  349C               	retlw	156
  3028  11D2  34FF               	retlw	255
  3029  11D3  349C               	retlw	156
  3030  11D4  34FF               	retlw	255
  3031  11D5  349C               	retlw	156
  3032  11D6  34FF               	retlw	255
  3033                           
  3034                           	psect	idataBANK7
  3035  14F9                     __pidataBANK7:	
  3036                           
  3037                           ;initializer for _B25k
  3038  14F9  34FF               	retlw	255
  3039  14FA  3400               	retlw	0
  3040  14FB  34FF               	retlw	255
  3041  14FC  3400               	retlw	0
  3042  14FD  34FF               	retlw	255
  3043  14FE  3400               	retlw	0
  3044  14FF  34DF               	retlw	223
  3045  1500  3400               	retlw	0
  3046  1501  34AE               	retlw	174
  3047  1502  3400               	retlw	0
  3048  1503  348E               	retlw	142
  3049  1504  3400               	retlw	0
  3050  1505  3478               	retlw	120
  3051  1506  3400               	retlw	0
  3052  1507  3467               	retlw	103
  3053  1508  3400               	retlw	0
  3054  1509  345B               	retlw	91
  3055  150A  3400               	retlw	0
  3056  150B  3450               	retlw	80
  3057  150C  3400               	retlw	0
  3058  150D  3448               	retlw	72
  3059  150E  3400               	retlw	0
  3060  150F  3442               	retlw	66
  3061  1510  3400               	retlw	0
  3062  1511  343C               	retlw	60
  3063  1512  3400               	retlw	0
  3064  1513  3437               	retlw	55
  3065  1514  3400               	retlw	0
  3066  1515  3433               	retlw	51
  3067  1516  3400               	retlw	0
  3068  1517  3430               	retlw	48
  3069  1518  3400               	retlw	0
  3070  1519  342D               	retlw	45
  3071  151A  3400               	retlw	0
  3072  151B  342A               	retlw	42
  3073  151C  3400               	retlw	0
  3074  151D  3427               	retlw	39
  3075  151E  3400               	retlw	0
  3076  151F  3425               	retlw	37
  3077  1520  3400               	retlw	0
  3078  1521  3423               	retlw	35
  3079  1522  3400               	retlw	0
  3080  1523  3421               	retlw	33
  3081  1524  3400               	retlw	0
  3082  1525  3420               	retlw	32
  3083  1526  3400               	retlw	0
  3084  1527  341E               	retlw	30
  3085  1528  3400               	retlw	0
  3086  1529  341D               	retlw	29
  3087  152A  3400               	retlw	0
  3088  152B  341C               	retlw	28
  3089  152C  3400               	retlw	0
  3090  152D  341B               	retlw	27
  3091  152E  3400               	retlw	0
  3092  152F  341A               	retlw	26
  3093  1530  3400               	retlw	0
  3094  1531  3419               	retlw	25
  3095  1532  3400               	retlw	0
  3096  1533  3418               	retlw	24
  3097  1534  3400               	retlw	0
  3098  1535  3417               	retlw	23
  3099  1536  3400               	retlw	0
  3100  1537  3416               	retlw	22
  3101  1538  3400               	retlw	0
  3102  1539  3415               	retlw	21
  3103  153A  3400               	retlw	0
  3104  153B  3415               	retlw	21
  3105  153C  3400               	retlw	0
  3106  153D  3414               	retlw	20
  3107  153E  3400               	retlw	0
  3108  153F  3413               	retlw	19
  3109  1540  3400               	retlw	0
  3110  1541  340F               	retlw	15
  3111  1542  3400               	retlw	0
  3112  1543  340B               	retlw	11
  3113  1544  3400               	retlw	0
  3114  1545  3407               	retlw	7
  3115  1546  3400               	retlw	0
  3116  1547  3407               	retlw	7
  3117  1548  3400               	retlw	0
  3118                           
  3119                           	psect	idataBANK8
  3120  14A9                     __pidataBANK8:	
  3121                           
  3122                           ;initializer for _iB25k
  3123  14A9  3407               	retlw	7
  3124  14AA  3400               	retlw	0
  3125  14AB  3407               	retlw	7
  3126  14AC  3400               	retlw	0
  3127  14AD  340B               	retlw	11
  3128  14AE  3400               	retlw	0
  3129  14AF  340F               	retlw	15
  3130  14B0  3400               	retlw	0
  3131  14B1  3413               	retlw	19
  3132  14B2  3400               	retlw	0
  3133  14B3  3414               	retlw	20
  3134  14B4  3400               	retlw	0
  3135  14B5  3415               	retlw	21
  3136  14B6  3400               	retlw	0
  3137  14B7  3415               	retlw	21
  3138  14B8  3400               	retlw	0
  3139  14B9  3416               	retlw	22
  3140  14BA  3400               	retlw	0
  3141  14BB  3417               	retlw	23
  3142  14BC  3400               	retlw	0
  3143  14BD  3418               	retlw	24
  3144  14BE  3400               	retlw	0
  3145  14BF  3419               	retlw	25
  3146  14C0  3400               	retlw	0
  3147  14C1  341A               	retlw	26
  3148  14C2  3400               	retlw	0
  3149  14C3  341B               	retlw	27
  3150  14C4  3400               	retlw	0
  3151  14C5  341C               	retlw	28
  3152  14C6  3400               	retlw	0
  3153  14C7  341D               	retlw	29
  3154  14C8  3400               	retlw	0
  3155  14C9  341E               	retlw	30
  3156  14CA  3400               	retlw	0
  3157  14CB  3420               	retlw	32
  3158  14CC  3400               	retlw	0
  3159  14CD  3421               	retlw	33
  3160  14CE  3400               	retlw	0
  3161  14CF  3423               	retlw	35
  3162  14D0  3400               	retlw	0
  3163  14D1  3425               	retlw	37
  3164  14D2  3400               	retlw	0
  3165  14D3  3427               	retlw	39
  3166  14D4  3400               	retlw	0
  3167  14D5  342A               	retlw	42
  3168  14D6  3400               	retlw	0
  3169  14D7  342D               	retlw	45
  3170  14D8  3400               	retlw	0
  3171  14D9  3430               	retlw	48
  3172  14DA  3400               	retlw	0
  3173  14DB  3433               	retlw	51
  3174  14DC  3400               	retlw	0
  3175  14DD  3437               	retlw	55
  3176  14DE  3400               	retlw	0
  3177  14DF  343C               	retlw	60
  3178  14E0  3400               	retlw	0
  3179  14E1  3442               	retlw	66
  3180  14E2  3400               	retlw	0
  3181  14E3  3448               	retlw	72
  3182  14E4  3400               	retlw	0
  3183  14E5  3450               	retlw	80
  3184  14E6  3400               	retlw	0
  3185  14E7  345B               	retlw	91
  3186  14E8  3400               	retlw	0
  3187  14E9  3467               	retlw	103
  3188  14EA  3400               	retlw	0
  3189  14EB  3478               	retlw	120
  3190  14EC  3400               	retlw	0
  3191  14ED  348E               	retlw	142
  3192  14EE  3400               	retlw	0
  3193  14EF  34AE               	retlw	174
  3194  14F0  3400               	retlw	0
  3195  14F1  34DF               	retlw	223
  3196  14F2  3400               	retlw	0
  3197  14F3  34FF               	retlw	255
  3198  14F4  3400               	retlw	0
  3199  14F5  34FF               	retlw	255
  3200  14F6  3400               	retlw	0
  3201  14F7  34FF               	retlw	255
  3202  14F8  3400               	retlw	0
  3203                           
  3204                           	psect	idataBANK9
  3205  1163                     __pidataBANK9:	
  3206                           
  3207                           ;initializer for _mod1
  3208  1163  3400               	retlw	0
  3209  1164  3400               	retlw	0
  3210  1165  3415               	retlw	21
  3211  1166  3400               	retlw	0
  3212  1167  3428               	retlw	40
  3213  1168  3400               	retlw	0
  3214  1169  343B               	retlw	59
  3215  116A  3400               	retlw	0
  3216  116B  344A               	retlw	74
  3217  116C  3400               	retlw	0
  3218  116D  3456               	retlw	86
  3219  116E  3400               	retlw	0
  3220  116F  345F               	retlw	95
  3221  1170  3400               	retlw	0
  3222  1171  3463               	retlw	99
  3223  1172  3400               	retlw	0
  3224  1173  3464               	retlw	100
  3225  1174  3400               	retlw	0
  3226  1175  345F               	retlw	95
  3227  1176  3400               	retlw	0
  3228  1177  3457               	retlw	87
  3229  1178  3400               	retlw	0
  3230  1179  344B               	retlw	75
  3231  117A  3400               	retlw	0
  3232  117B  343C               	retlw	60
  3233  117C  3400               	retlw	0
  3234  117D  342A               	retlw	42
  3235  117E  3400               	retlw	0
  3236  117F  3416               	retlw	22
  3237  1180  3400               	retlw	0
  3238  1181  3402               	retlw	2
  3239  1182  3400               	retlw	0
  3240  1183  34ED               	retlw	237
  3241  1184  34FF               	retlw	255
  3242  1185  34D9               	retlw	217
  3243  1186  34FF               	retlw	255
  3244  1187  34C7               	retlw	199
  3245  1188  34FF               	retlw	255
  3246  1189  34B7               	retlw	183
  3247  118A  34FF               	retlw	255
  3248  118B  34AB               	retlw	171
  3249  118C  34FF               	retlw	255
  3250  118D  34A2               	retlw	162
  3251  118E  34FF               	retlw	255
  3252  118F  349D               	retlw	157
  3253  1190  34FF               	retlw	255
  3254  1191  349C               	retlw	156
  3255  1192  34FF               	retlw	255
  3256  1193  34A8               	retlw	168
  3257  1194  34FF               	retlw	255
  3258  1195  34B4               	retlw	180
  3259  1196  34FF               	retlw	255
  3260  1197  34C3               	retlw	195
  3261  1198  34FF               	retlw	255
  3262  1199  34D5               	retlw	213
  3263  119A  34FF               	retlw	255
  3264  119B  34E8               	retlw	232
  3265  119C  34FF               	retlw	255
  3266                           
  3267                           	psect	idataBIGRAM
  3268  0D88                     __pidataBIGRAM:	
  3269                           
  3270                           ;initializer for _delay
  3271  0D88  3422               	retlw	34
  3272  0D89  3408               	retlw	8
  3273  0D8A  34FC               	retlw	252
  3274  0D8B  3407               	retlw	7
  3275  0D8C  34D8               	retlw	216
  3276  0D8D  3407               	retlw	7
  3277  0D8E  34B5               	retlw	181
  3278  0D8F  3407               	retlw	7
  3279  0D90  3493               	retlw	147
  3280  0D91  3407               	retlw	7
  3281  0D92  3472               	retlw	114
  3282  0D93  3407               	retlw	7
  3283  0D94  3452               	retlw	82
  3284  0D95  3407               	retlw	7
  3285  0D96  3434               	retlw	52
  3286  0D97  3407               	retlw	7
  3287  0D98  3416               	retlw	22
  3288  0D99  3407               	retlw	7
  3289  0D9A  34F9               	retlw	249
  3290  0D9B  3406               	retlw	6
  3291  0D9C  34DD               	retlw	221
  3292  0D9D  3406               	retlw	6
  3293  0D9E  34C2               	retlw	194
  3294  0D9F  3406               	retlw	6
  3295  0DA0  34A8               	retlw	168
  3296  0DA1  3406               	retlw	6
  3297  0DA2  348F               	retlw	143
  3298  0DA3  3406               	retlw	6
  3299  0DA4  3476               	retlw	118
  3300  0DA5  3406               	retlw	6
  3301  0DA6  345E               	retlw	94
  3302  0DA7  3406               	retlw	6
  3303  0DA8  3447               	retlw	71
  3304  0DA9  3406               	retlw	6
  3305  0DAA  3430               	retlw	48
  3306  0DAB  3406               	retlw	6
  3307  0DAC  341A               	retlw	26
  3308  0DAD  3406               	retlw	6
  3309  0DAE  3405               	retlw	5
  3310  0DAF  3406               	retlw	6
  3311  0DB0  34F0               	retlw	240
  3312  0DB1  3405               	retlw	5
  3313  0DB2  34DC               	retlw	220
  3314  0DB3  3405               	retlw	5
  3315  0DB4  34C8               	retlw	200
  3316  0DB5  3405               	retlw	5
  3317  0DB6  34B5               	retlw	181
  3318  0DB7  3405               	retlw	5
  3319  0DB8  34A3               	retlw	163
  3320  0DB9  3405               	retlw	5
  3321  0DBA  3490               	retlw	144
  3322  0DBB  3405               	retlw	5
  3323  0DBC  347F               	retlw	127
  3324  0DBD  3405               	retlw	5
  3325  0DBE  346D               	retlw	109
  3326  0DBF  3405               	retlw	5
  3327  0DC0  345C               	retlw	92
  3328  0DC1  3405               	retlw	5
  3329  0DC2  344C               	retlw	76
  3330  0DC3  3405               	retlw	5
  3331  0DC4  343C               	retlw	60
  3332  0DC5  3405               	retlw	5
  3333  0DC6  342C               	retlw	44
  3334  0DC7  3405               	retlw	5
  3335  0DC8  341D               	retlw	29
  3336  0DC9  3405               	retlw	5
  3337  0DCA  340E               	retlw	14
  3338  0DCB  3405               	retlw	5
  3339  0DCC  34FF               	retlw	255
  3340  0DCD  3404               	retlw	4
  3341  0DCE  34F1               	retlw	241
  3342  0DCF  3404               	retlw	4
  3343  0DD0  34E2               	retlw	226
  3344  0DD1  3404               	retlw	4
  3345  0DD2  34D5               	retlw	213
  3346  0DD3  3404               	retlw	4
  3347  0DD4  34C7               	retlw	199
  3348  0DD5  3404               	retlw	4
  3349  0DD6  34BA               	retlw	186
  3350  0DD7  3404               	retlw	4
  3351  0DD8  34AD               	retlw	173
  3352  0DD9  3404               	retlw	4
  3353  0DDA  34A1               	retlw	161
  3354  0DDB  3404               	retlw	4
  3355  0DDC  3494               	retlw	148
  3356  0DDD  3404               	retlw	4
  3357  0DDE  3488               	retlw	136
  3358  0DDF  3404               	retlw	4
  3359  0DE0  347D               	retlw	125
  3360  0DE1  3404               	retlw	4
  3361  0DE2  3471               	retlw	113
  3362  0DE3  3404               	retlw	4
  3363  0DE4  3466               	retlw	102
  3364  0DE5  3404               	retlw	4
  3365  0DE6  345A               	retlw	90
  3366  0DE7  3404               	retlw	4
  3367  0DE8  3450               	retlw	80
  3368  0DE9  3404               	retlw	4
  3369  0DEA  3445               	retlw	69
  3370  0DEB  3404               	retlw	4
  3371  0DEC  343A               	retlw	58
  3372  0DED  3404               	retlw	4
  3373  0DEE  3430               	retlw	48
  3374  0DEF  3404               	retlw	4
  3375  0DF0  3426               	retlw	38
  3376  0DF1  3404               	retlw	4
  3377  0DF2  341C               	retlw	28
  3378  0DF3  3404               	retlw	4
  3379  0DF4  3412               	retlw	18
  3380  0DF5  3404               	retlw	4
  3381  0DF6  3409               	retlw	9
  3382  0DF7  3404               	retlw	4
  3383  0DF8  34FF               	retlw	255
  3384  0DF9  3403               	retlw	3
  3385  0DFA  34F6               	retlw	246
  3386  0DFB  3403               	retlw	3
  3387  0DFC  34ED               	retlw	237
  3388  0DFD  3403               	retlw	3
  3389  0DFE  34E4               	retlw	228
  3390  0DFF  3403               	retlw	3
  3391  0E00  34DC               	retlw	220
  3392  0E01  3403               	retlw	3
  3393  0E02  34D3               	retlw	211
  3394  0E03  3403               	retlw	3
  3395  0E04  34CB               	retlw	203
  3396  0E05  3403               	retlw	3
  3397  0E06  34C2               	retlw	194
  3398  0E07  3403               	retlw	3
  3399  0E08  34BA               	retlw	186
  3400  0E09  3403               	retlw	3
  3401  0E0A  34B2               	retlw	178
  3402  0E0B  3403               	retlw	3
  3403  0E0C  34AA               	retlw	170
  3404  0E0D  3403               	retlw	3
  3405  0E0E  34A2               	retlw	162
  3406  0E0F  3403               	retlw	3
  3407  0E10  349B               	retlw	155
  3408  0E11  3403               	retlw	3
  3409  0E12  3493               	retlw	147
  3410  0E13  3403               	retlw	3
  3411  0E14  348C               	retlw	140
  3412  0E15  3403               	retlw	3
  3413  0E16  3485               	retlw	133
  3414  0E17  3403               	retlw	3
  3415  0E18  347E               	retlw	126
  3416  0E19  3403               	retlw	3
  3417  0E1A  3477               	retlw	119
  3418  0E1B  3403               	retlw	3
  3419  0E1C  3470               	retlw	112
  3420  0E1D  3403               	retlw	3
  3421  0E1E  3469               	retlw	105
  3422  0E1F  3403               	retlw	3
  3423  0E20  3462               	retlw	98
  3424  0E21  3403               	retlw	3
  3425  0E22  345C               	retlw	92
  3426  0E23  3403               	retlw	3
  3427  0E24  3455               	retlw	85
  3428  0E25  3403               	retlw	3
  3429  0E26  344F               	retlw	79
  3430  0E27  3403               	retlw	3
  3431  0E28  3448               	retlw	72
  3432  0E29  3403               	retlw	3
  3433  0E2A  3442               	retlw	66
  3434  0E2B  3403               	retlw	3
  3435  0E2C  343C               	retlw	60
  3436  0E2D  3403               	retlw	3
  3437  0E2E  3436               	retlw	54
  3438  0E2F  3403               	retlw	3
  3439  0E30  3430               	retlw	48
  3440  0E31  3403               	retlw	3
  3441  0E32  342A               	retlw	42
  3442  0E33  3403               	retlw	3
  3443  0E34  3424               	retlw	36
  3444  0E35  3403               	retlw	3
  3445  0E36  341F               	retlw	31
  3446  0E37  3403               	retlw	3
  3447  0E38  3419               	retlw	25
  3448  0E39  3403               	retlw	3
  3449  0E3A  3413               	retlw	19
  3450  0E3B  3403               	retlw	3
  3451  0E3C  340E               	retlw	14
  3452  0E3D  3403               	retlw	3
  3453  0E3E  3409               	retlw	9
  3454  0E3F  3403               	retlw	3
  3455  0E40  3403               	retlw	3
  3456  0E41  3403               	retlw	3
  3457  0E42  34FE               	retlw	254
  3458  0E43  3402               	retlw	2
  3459  0E44  34F9               	retlw	249
  3460  0E45  3402               	retlw	2
  3461  0E46  34F4               	retlw	244
  3462  0E47  3402               	retlw	2
  3463  0E48  34EF               	retlw	239
  3464  0E49  3402               	retlw	2
  3465  0E4A  34EA               	retlw	234
  3466  0E4B  3402               	retlw	2
  3467  0E4C  34E5               	retlw	229
  3468  0E4D  3402               	retlw	2
  3469  0E4E  34E0               	retlw	224
  3470  0E4F  3402               	retlw	2
  3471  0E50  34DB               	retlw	219
  3472  0E51  3402               	retlw	2
  3473  0E52  34D7               	retlw	215
  3474  0E53  3402               	retlw	2
  3475  0E54  34D2               	retlw	210
  3476  0E55  3402               	retlw	2
  3477  0E56  34CD               	retlw	205
  3478  0E57  3402               	retlw	2
  3479  0E58  34C9               	retlw	201
  3480  0E59  3402               	retlw	2
  3481  0E5A  34C4               	retlw	196
  3482  0E5B  3402               	retlw	2
  3483  0E5C  34C0               	retlw	192
  3484  0E5D  3402               	retlw	2
  3485  0E5E  34BC               	retlw	188
  3486  0E5F  3402               	retlw	2
  3487  0E60  34B7               	retlw	183
  3488  0E61  3402               	retlw	2
  3489  0E62  34B3               	retlw	179
  3490  0E63  3402               	retlw	2
  3491  0E64  34AF               	retlw	175
  3492  0E65  3402               	retlw	2
  3493  0E66  34AB               	retlw	171
  3494  0E67  3402               	retlw	2
  3495  0E68  34A6               	retlw	166
  3496  0E69  3402               	retlw	2
  3497  0E6A  34A2               	retlw	162
  3498  0E6B  3402               	retlw	2
  3499  0E6C  349E               	retlw	158
  3500  0E6D  3402               	retlw	2
  3501  0E6E  349A               	retlw	154
  3502  0E6F  3402               	retlw	2
  3503  0E70  3497               	retlw	151
  3504  0E71  3402               	retlw	2
  3505  0E72  3493               	retlw	147
  3506  0E73  3402               	retlw	2
  3507  0E74  348F               	retlw	143
  3508  0E75  3402               	retlw	2
  3509  0E76  348B               	retlw	139
  3510  0E77  3402               	retlw	2
  3511  0E78  3487               	retlw	135
  3512  0E79  3402               	retlw	2
  3513  0E7A  3484               	retlw	132
  3514  0E7B  3402               	retlw	2
  3515  0E7C  3480               	retlw	128
  3516  0E7D  3402               	retlw	2
  3517  0E7E  347C               	retlw	124
  3518  0E7F  3402               	retlw	2
  3519  0E80  3479               	retlw	121
  3520  0E81  3402               	retlw	2
  3521  0E82  3475               	retlw	117
  3522  0E83  3402               	retlw	2
  3523  0E84  3472               	retlw	114
  3524  0E85  3402               	retlw	2
  3525  0E86  346E               	retlw	110
  3526  0E87  3402               	retlw	2
  3527  0E88  346B               	retlw	107
  3528  0E89  3402               	retlw	2
  3529  0E8A  3467               	retlw	103
  3530  0E8B  3402               	retlw	2
  3531  0E8C  3464               	retlw	100
  3532  0E8D  3402               	retlw	2
  3533  0E8E  3461               	retlw	97
  3534  0E8F  3402               	retlw	2
  3535  0E90  345E               	retlw	94
  3536  0E91  3402               	retlw	2
  3537  0E92  345A               	retlw	90
  3538  0E93  3402               	retlw	2
  3539  0E94  3457               	retlw	87
  3540  0E95  3402               	retlw	2
  3541  0E96  3454               	retlw	84
  3542  0E97  3402               	retlw	2
  3543  0E98  3451               	retlw	81
  3544  0E99  3402               	retlw	2
  3545  0E9A  344E               	retlw	78
  3546  0E9B  3402               	retlw	2
  3547  0E9C  344B               	retlw	75
  3548  0E9D  3402               	retlw	2
  3549  0E9E  3448               	retlw	72
  3550  0E9F  3402               	retlw	2
  3551  0EA0  3445               	retlw	69
  3552  0EA1  3402               	retlw	2
  3553  0EA2  3442               	retlw	66
  3554  0EA3  3402               	retlw	2
  3555  0EA4  343F               	retlw	63
  3556  0EA5  3402               	retlw	2
  3557  0EA6  343C               	retlw	60
  3558  0EA7  3402               	retlw	2
  3559  0EA8  3439               	retlw	57
  3560  0EA9  3402               	retlw	2
  3561  0EAA  3436               	retlw	54
  3562  0EAB  3402               	retlw	2
  3563  0EAC  3433               	retlw	51
  3564  0EAD  3402               	retlw	2
  3565  0EAE  3430               	retlw	48
  3566  0EAF  3402               	retlw	2
  3567  0EB0  342E               	retlw	46
  3568  0EB1  3402               	retlw	2
  3569  0EB2  342B               	retlw	43
  3570  0EB3  3402               	retlw	2
  3571  0EB4  3428               	retlw	40
  3572  0EB5  3402               	retlw	2
  3573  0EB6  3425               	retlw	37
  3574  0EB7  3402               	retlw	2
  3575  0EB8  3423               	retlw	35
  3576  0EB9  3402               	retlw	2
  3577  0EBA  3420               	retlw	32
  3578  0EBB  3402               	retlw	2
  3579  0EBC  341E               	retlw	30
  3580  0EBD  3402               	retlw	2
  3581  0EBE  341B               	retlw	27
  3582  0EBF  3402               	retlw	2
  3583  0EC0  3418               	retlw	24
  3584  0EC1  3402               	retlw	2
  3585  0EC2  3416               	retlw	22
  3586  0EC3  3402               	retlw	2
  3587  0EC4  3413               	retlw	19
  3588  0EC5  3402               	retlw	2
  3589  0EC6  3411               	retlw	17
  3590  0EC7  3402               	retlw	2
  3591  0EC8  340E               	retlw	14
  3592  0EC9  3402               	retlw	2
  3593  0ECA  340C               	retlw	12
  3594  0ECB  3402               	retlw	2
  3595  0ECC  340A               	retlw	10
  3596  0ECD  3402               	retlw	2
  3597  0ECE  3407               	retlw	7
  3598  0ECF  3402               	retlw	2
  3599  0ED0  3405               	retlw	5
  3600  0ED1  3402               	retlw	2
  3601  0ED2  3402               	retlw	2
  3602  0ED3  3402               	retlw	2
  3603  0ED4  3400               	retlw	0
  3604  0ED5  3402               	retlw	2
  3605  0ED6  34FE               	retlw	254
  3606  0ED7  3401               	retlw	1
  3607  0ED8  34FB               	retlw	251
  3608  0ED9  3401               	retlw	1
  3609  0EDA  34F9               	retlw	249
  3610  0EDB  3401               	retlw	1
  3611  0EDC  34F7               	retlw	247
  3612  0EDD  3401               	retlw	1
  3613  0EDE  34F5               	retlw	245
  3614  0EDF  3401               	retlw	1
  3615  0EE0  34F2               	retlw	242
  3616  0EE1  3401               	retlw	1
  3617  0EE2  34F0               	retlw	240
  3618  0EE3  3401               	retlw	1
  3619  0EE4  34EE               	retlw	238
  3620  0EE5  3401               	retlw	1
  3621  0EE6  34EC               	retlw	236
  3622  0EE7  3401               	retlw	1
  3623  0EE8  34EA               	retlw	234
  3624  0EE9  3401               	retlw	1
  3625  0EEA  34E8               	retlw	232
  3626  0EEB  3401               	retlw	1
  3627  0EEC  34E6               	retlw	230
  3628  0EED  3401               	retlw	1
  3629  0EEE  34E3               	retlw	227
  3630  0EEF  3401               	retlw	1
  3631  0EF0  34E1               	retlw	225
  3632  0EF1  3401               	retlw	1
  3633  0EF2  34DF               	retlw	223
  3634  0EF3  3401               	retlw	1
  3635  0EF4  34DD               	retlw	221
  3636  0EF5  3401               	retlw	1
  3637  0EF6  34DB               	retlw	219
  3638  0EF7  3401               	retlw	1
  3639  0EF8  34D9               	retlw	217
  3640  0EF9  3401               	retlw	1
  3641  0EFA  34D7               	retlw	215
  3642  0EFB  3401               	retlw	1
  3643  0EFC  34D5               	retlw	213
  3644  0EFD  3401               	retlw	1
  3645  0EFE  34D3               	retlw	211
  3646  0EFF  3401               	retlw	1
  3647  0F00  34D2               	retlw	210
  3648  0F01  3401               	retlw	1
  3649  0F02  34D0               	retlw	208
  3650  0F03  3401               	retlw	1
  3651  0F04  34CE               	retlw	206
  3652  0F05  3401               	retlw	1
  3653  0F06  34CC               	retlw	204
  3654  0F07  3401               	retlw	1
  3655  0F08  34CA               	retlw	202
  3656  0F09  3401               	retlw	1
  3657  0F0A  34C8               	retlw	200
  3658  0F0B  3401               	retlw	1
  3659  0F0C  34C6               	retlw	198
  3660  0F0D  3401               	retlw	1
  3661  0F0E  34C4               	retlw	196
  3662  0F0F  3401               	retlw	1
  3663  0F10  34C3               	retlw	195
  3664  0F11  3401               	retlw	1
  3665  0F12  34C1               	retlw	193
  3666  0F13  3401               	retlw	1
  3667  0F14  34BF               	retlw	191
  3668  0F15  3401               	retlw	1
  3669  0F16  34BD               	retlw	189
  3670  0F17  3401               	retlw	1
  3671  0F18  34BC               	retlw	188
  3672  0F19  3401               	retlw	1
  3673  0F1A  34BA               	retlw	186
  3674  0F1B  3401               	retlw	1
  3675  0F1C  34B8               	retlw	184
  3676  0F1D  3401               	retlw	1
  3677  0F1E  34B6               	retlw	182
  3678  0F1F  3401               	retlw	1
  3679  0F20  34B5               	retlw	181
  3680  0F21  3401               	retlw	1
  3681  0F22  34B3               	retlw	179
  3682  0F23  3401               	retlw	1
  3683  0F24  34B1               	retlw	177
  3684  0F25  3401               	retlw	1
  3685  0F26  34B0               	retlw	176
  3686  0F27  3401               	retlw	1
  3687  0F28  34AE               	retlw	174
  3688  0F29  3401               	retlw	1
  3689  0F2A  34AC               	retlw	172
  3690  0F2B  3401               	retlw	1
  3691  0F2C  34AB               	retlw	171
  3692  0F2D  3401               	retlw	1
  3693  0F2E  34A9               	retlw	169
  3694  0F2F  3401               	retlw	1
  3695  0F30  34A8               	retlw	168
  3696  0F31  3401               	retlw	1
  3697  0F32  34A6               	retlw	166
  3698  0F33  3401               	retlw	1
  3699  0F34  34A4               	retlw	164
  3700  0F35  3401               	retlw	1
  3701  0F36  34A3               	retlw	163
  3702  0F37  3401               	retlw	1
  3703  0F38  34A1               	retlw	161
  3704  0F39  3401               	retlw	1
  3705  0F3A  34A0               	retlw	160
  3706  0F3B  3401               	retlw	1
  3707  0F3C  349E               	retlw	158
  3708  0F3D  3401               	retlw	1
  3709  0F3E  349D               	retlw	157
  3710  0F3F  3401               	retlw	1
  3711  0F40  349B               	retlw	155
  3712  0F41  3401               	retlw	1
  3713  0F42  349A               	retlw	154
  3714  0F43  3401               	retlw	1
  3715  0F44  3498               	retlw	152
  3716  0F45  3401               	retlw	1
  3717  0F46  3497               	retlw	151
  3718  0F47  3401               	retlw	1
  3719  0F48  3495               	retlw	149
  3720  0F49  3401               	retlw	1
  3721  0F4A  3494               	retlw	148
  3722  0F4B  3401               	retlw	1
  3723  0F4C  3492               	retlw	146
  3724  0F4D  3401               	retlw	1
  3725  0F4E  3491               	retlw	145
  3726  0F4F  3401               	retlw	1
  3727  0F50  3490               	retlw	144
  3728  0F51  3401               	retlw	1
  3729  0F52  348E               	retlw	142
  3730  0F53  3401               	retlw	1
  3731  0F54  348D               	retlw	141
  3732  0F55  3401               	retlw	1
  3733  0F56  348B               	retlw	139
  3734  0F57  3401               	retlw	1
  3735  0F58  348A               	retlw	138
  3736  0F59  3401               	retlw	1
  3737  0F5A  3489               	retlw	137
  3738  0F5B  3401               	retlw	1
  3739  0F5C  3487               	retlw	135
  3740  0F5D  3401               	retlw	1
  3741  0F5E  3486               	retlw	134
  3742  0F5F  3401               	retlw	1
  3743  0F60  3485               	retlw	133
  3744  0F61  3401               	retlw	1
  3745  0F62  3483               	retlw	131
  3746  0F63  3401               	retlw	1
  3747  0F64  3482               	retlw	130
  3748  0F65  3401               	retlw	1
  3749  0F66  3481               	retlw	129
  3750  0F67  3401               	retlw	1
  3751  0F68  347F               	retlw	127
  3752  0F69  3401               	retlw	1
  3753  0F6A  347E               	retlw	126
  3754  0F6B  3401               	retlw	1
  3755  0F6C  347D               	retlw	125
  3756  0F6D  3401               	retlw	1
  3757  0F6E  347B               	retlw	123
  3758  0F6F  3401               	retlw	1
  3759  0F70  347A               	retlw	122
  3760  0F71  3401               	retlw	1
  3761  0F72  3479               	retlw	121
  3762  0F73  3401               	retlw	1
  3763  0F74  3478               	retlw	120
  3764  0F75  3401               	retlw	1
  3765  0F76  3476               	retlw	118
  3766  0F77  3401               	retlw	1
  3767  0F78  3475               	retlw	117
  3768  0F79  3401               	retlw	1
  3769  0F7A  3474               	retlw	116
  3770  0F7B  3401               	retlw	1
  3771  0F7C  3473               	retlw	115
  3772  0F7D  3401               	retlw	1
  3773  0F7E  3471               	retlw	113
  3774  0F7F  3401               	retlw	1
  3775  0F80  3470               	retlw	112
  3776  0F81  3401               	retlw	1
  3777  0F82  346F               	retlw	111
  3778  0F83  3401               	retlw	1
  3779  0F84  346E               	retlw	110
  3780  0F85  3401               	retlw	1
  3781                           
  3782                           ;initializer for _mod5
  3783  0F86  3400               	retlw	0
  3784  0F87  3400               	retlw	0
  3785  0F88  340A               	retlw	10
  3786  0F89  3400               	retlw	0
  3787  0F8A  3414               	retlw	20
  3788  0F8B  3400               	retlw	0
  3789  0F8C  341E               	retlw	30
  3790  0F8D  3400               	retlw	0
  3791  0F8E  3428               	retlw	40
  3792  0F8F  3400               	retlw	0
  3793  0F90  3432               	retlw	50
  3794  0F91  3400               	retlw	0
  3795  0F92  343A               	retlw	58
  3796  0F93  3400               	retlw	0
  3797  0F94  3442               	retlw	66
  3798  0F95  3400               	retlw	0
  3799  0F96  344A               	retlw	74
  3800  0F97  3400               	retlw	0
  3801  0F98  3450               	retlw	80
  3802  0F99  3400               	retlw	0
  3803  0F9A  3456               	retlw	86
  3804  0F9B  3400               	retlw	0
  3805  0F9C  345B               	retlw	91
  3806  0F9D  3400               	retlw	0
  3807  0F9E  345F               	retlw	95
  3808  0F9F  3400               	retlw	0
  3809  0FA0  3461               	retlw	97
  3810  0FA1  3400               	retlw	0
  3811  0FA2  3463               	retlw	99
  3812  0FA3  3400               	retlw	0
  3813  0FA4  3464               	retlw	100
  3814  0FA5  3400               	retlw	0
  3815  0FA6  3463               	retlw	99
  3816  0FA7  3400               	retlw	0
  3817  0FA8  3461               	retlw	97
  3818  0FA9  3400               	retlw	0
  3819  0FAA  345F               	retlw	95
  3820  0FAB  3400               	retlw	0
  3821  0FAC  345B               	retlw	91
  3822  0FAD  3400               	retlw	0
  3823  0FAE  3456               	retlw	86
  3824  0FAF  3400               	retlw	0
  3825  0FB0  3450               	retlw	80
  3826  0FB1  3400               	retlw	0
  3827  0FB2  344A               	retlw	74
  3828  0FB3  3400               	retlw	0
  3829  0FB4  3442               	retlw	66
  3830  0FB5  3400               	retlw	0
  3831  0FB6  343A               	retlw	58
  3832  0FB7  3400               	retlw	0
  3833  0FB8  3432               	retlw	50
  3834  0FB9  3400               	retlw	0
  3835  0FBA  3428               	retlw	40
  3836  0FBB  3400               	retlw	0
  3837  0FBC  341E               	retlw	30
  3838  0FBD  3400               	retlw	0
  3839  0FBE  3414               	retlw	20
  3840  0FBF  3400               	retlw	0
  3841  0FC0  340A               	retlw	10
  3842  0FC1  3400               	retlw	0
  3843  0FC2  3400               	retlw	0
  3844  0FC3  3400               	retlw	0
  3845  0FC4  34F6               	retlw	246
  3846  0FC5  34FF               	retlw	255
  3847  0FC6  34EC               	retlw	236
  3848  0FC7  34FF               	retlw	255
  3849  0FC8  34E2               	retlw	226
  3850  0FC9  34FF               	retlw	255
  3851  0FCA  34D8               	retlw	216
  3852  0FCB  34FF               	retlw	255
  3853  0FCC  34CE               	retlw	206
  3854  0FCD  34FF               	retlw	255
  3855  0FCE  34C6               	retlw	198
  3856  0FCF  34FF               	retlw	255
  3857  0FD0  34BE               	retlw	190
  3858  0FD1  34FF               	retlw	255
  3859  0FD2  34B6               	retlw	182
  3860  0FD3  34FF               	retlw	255
  3861  0FD4  34B0               	retlw	176
  3862  0FD5  34FF               	retlw	255
  3863  0FD6  34AA               	retlw	170
  3864  0FD7  34FF               	retlw	255
  3865  0FD8  34A5               	retlw	165
  3866  0FD9  34FF               	retlw	255
  3867  0FDA  34A1               	retlw	161
  3868  0FDB  34FF               	retlw	255
  3869  0FDC  349F               	retlw	159
  3870  0FDD  34FF               	retlw	255
  3871  0FDE  349D               	retlw	157
  3872  0FDF  34FF               	retlw	255
  3873  0FE0  349C               	retlw	156
  3874  0FE1  34FF               	retlw	255
  3875  0FE2  349D               	retlw	157
  3876  0FE3  34FF               	retlw	255
  3877  0FE4  349F               	retlw	159
  3878  0FE5  34FF               	retlw	255
  3879  0FE6  34A1               	retlw	161
  3880  0FE7  34FF               	retlw	255
  3881  0FE8  34A5               	retlw	165
  3882  0FE9  34FF               	retlw	255
  3883  0FEA  34AA               	retlw	170
  3884  0FEB  34FF               	retlw	255
  3885  0FEC  34B0               	retlw	176
  3886  0FED  34FF               	retlw	255
  3887  0FEE  34B6               	retlw	182
  3888  0FEF  34FF               	retlw	255
  3889  0FF0  34BE               	retlw	190
  3890  0FF1  34FF               	retlw	255
  3891  0FF2  34C6               	retlw	198
  3892  0FF3  34FF               	retlw	255
  3893  0FF4  34CE               	retlw	206
  3894  0FF5  34FF               	retlw	255
  3895  0FF6  34D8               	retlw	216
  3896  0FF7  34FF               	retlw	255
  3897  0FF8  34E2               	retlw	226
  3898  0FF9  34FF               	retlw	255
  3899  0FFA  34EC               	retlw	236
  3900  0FFB  34FF               	retlw	255
  3901  0FFC  34F6               	retlw	246
  3902  0FFD  34FF               	retlw	255
  3903  0FFE  3400               	retlw	0
  3904  0FFF  3400               	retlw	0
  3905  000B                     _INTCONbits	set	11
  3906  000E                     _PORTCbits	set	14
  3907  000F                     _PORTDbits	set	15
  3908  0010                     _PORTEbits	set	16
  3909  001B                     _PR2	set	27
  3910  001C                     _T2CONbits	set	28
  3911  009D                     _ADCON0bits	set	157
  3912  009E                     _ADCON1bits	set	158
  3913  009C                     _ADRESH	set	156
  3914  009B                     _ADRESL	set	155
  3915  0095                     _OPTION_REGbits	set	149
  3916  0099                     _OSCCONbits	set	153
  3917  008D                     _TRISBbits	set	141
  3918  008E                     _TRISCbits	set	142
  3919  008F                     _TRISDbits	set	143
  3920  0090                     _TRISEbits	set	144
  3921  011D                     _APFCONbits	set	285
  3922  010D                     _LATBbits	set	269
  3923  010F                     _LATDbits	set	271
  3924  0190                     _ANSELEbits	set	400
  3925  0192                     _PMADRH	set	402
  3926  0191                     _PMADRL	set	401
  3927  0195                     _PMCON1bits	set	405
  3928  0196                     _PMCON2	set	406
  3929  0194                     _PMDATH	set	404
  3930  0193                     _PMDATL	set	403
  3931  0291                     _CCPR1	set	657
  3932  0298                     _CCPR2	set	664
  3933  0293                     _CCP1CONbits	set	659
  3934  029A                     _CCP2CONbits	set	666
  3935  029D                     _CCPTMRS0	set	669
  3936  029E                     _CCPTMRS1	set	670
  3937  029F                     _CCPTMRS2	set	671
  3938  0311                     _CCPR3	set	785
  3939  0318                     _CCPR4	set	792
  3940  031C                     _CCPR5	set	796
  3941  0313                     _CCP3CONbits	set	787
  3942  031A                     _CCP4CONbits	set	794
  3943  031E                     _CCP5CONbits	set	798
  3944  030C                     _TRISFbits	set	780
  3945  030D                     _TRISGbits	set	781
  3946  038C                     _LATFbits	set	908
  3947  038D                     _LATGbits	set	909
  3948  040C                     _ANSELFbits	set	1036
  3949  061A                     _CCPR9	set	1562
  3950  061F                     _CCP10CONbits	set	1567
  3951  0613                     _CCP6CONbits	set	1555
  3952  0616                     _CCP7CONbits	set	1558
  3953  0619                     _CCP8CONbits	set	1561
  3954  061C                     _CCP9CONbits	set	1564
  3955                           
  3956                           ; #config settings
  3957  0000                     
  3958                           	psect	cinit
  3959  014C                     start_initialization:	
  3960  014C                     __initialization:		;BIGRAM
  3961                           
  3962                           ; Clear objects allocated to COMMON
  3963  014C  01F9               	clrf	__pbssCOMMON& (0+127)
  3964  014D  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  3965  014E  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  3966  014F  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  3967  0150  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  3968                           
  3969                           ; Clear objects allocated to BANK1
  3970  0151  30BF               	movlw	low __pbssBANK1
  3971  0152  0084               	movwf	4
  3972  0153  3000               	movlw	high __pbssBANK1
  3973  0154  0085               	movwf	5
  3974  0155  301B               	movlw	27
  3975  0156  00FE               	movwf	btemp
  3976  0157  3000               	movlw	0
  3977  0158  00FF               	movwf	btemp+1
  3978  0159  3187  27F4  3181   	fcall	clear_ram0
  3979                           
  3980                           ; Clear objects allocated to BANK2
  3981  015C  3020               	movlw	low __pbssBANK2
  3982  015D  0084               	movwf	4
  3983  015E  3001               	movlw	high __pbssBANK2
  3984  015F  0085               	movwf	5
  3985  0160  302C               	movlw	44
  3986  0161  00FE               	movwf	btemp
  3987  0162  3000               	movlw	0
  3988  0163  00FF               	movwf	btemp+1
  3989  0164  3187  27F4  3181   	fcall	clear_ram0
  3990                           
  3991                           ; Clear objects allocated to BANK3
  3992  0167  30A0               	movlw	low __pbssBANK3
  3993  0168  0084               	movwf	4
  3994  0169  3001               	movlw	high __pbssBANK3
  3995  016A  0085               	movwf	5
  3996  016B  3040               	movlw	64
  3997  016C  00FE               	movwf	btemp
  3998  016D  3000               	movlw	0
  3999  016E  00FF               	movwf	btemp+1
  4000  016F  3187  27F4  3181   	fcall	clear_ram0
  4001                           
  4002                           ; Clear objects allocated to BANK10
  4003  0172  3020               	movlw	low __pbssBANK10
  4004  0173  0084               	movwf	4
  4005  0174  3005               	movlw	high __pbssBANK10
  4006  0175  0085               	movwf	5
  4007  0176  3040               	movlw	64
  4008  0177  00FE               	movwf	btemp
  4009  0178  3000               	movlw	0
  4010  0179  00FF               	movwf	btemp+1
  4011  017A  3187  27F4  3181   	fcall	clear_ram0
  4012                           
  4013                           ; Initialize objects allocated to BIGRAM
  4014  017D  3088               	movlw	low __pidataBIGRAM
  4015  017E  0084               	movwf	4
  4016  017F  308D               	movlw	(high __pidataBIGRAM)| (0+128)
  4017  0180  0085               	movwf	5
  4018  0181  3078               	movlw	low (0+9080)
  4019  0182  0086               	movwf	6
  4020  0183  3023               	movlw	high (0+9080)
  4021  0184  0087               	movwf	7
  4022  0185  3002               	movlw	2
  4023  0186  00FF               	movwf	btemp+1
  4024  0187  3078               	movlw	120
  4025  0188  319E  26CE  3181   	fcall	init_ram
  4026                           
  4027                           ; Initialize objects allocated to BANK0
  4028  018B  3180  2003  3181   	fcall	__pidataBANK0	;fetch initializer
  4029  018E  00EF               	movwf	__pdataBANK0& (0+127)
  4030                           
  4031                           ; Initialize objects allocated to BANK1
  4032  018F  3015               	movlw	low __pidataBANK1
  4033  0190  0084               	movwf	4
  4034  0191  309F               	movlw	(high __pidataBANK1)| (0+128)
  4035  0192  0085               	movwf	5
  4036  0193  30DA               	movlw	low __pdataBANK1
  4037  0194  0086               	movwf	6
  4038  0195  3000               	movlw	high __pdataBANK1
  4039  0196  0087               	movwf	7
  4040  0197  3000               	movlw	0
  4041  0198  00FF               	movwf	btemp+1
  4042  0199  3016               	movlw	22
  4043  019A  319E  26CE  3181   	fcall	init_ram
  4044                           
  4045                           ; Initialize objects allocated to BANK2
  4046  019D  30EC               	movlw	low __pidataBANK2
  4047  019E  0084               	movwf	4
  4048  019F  309E               	movlw	(high __pidataBANK2)| (0+128)
  4049  01A0  0085               	movwf	5
  4050  01A1  304C               	movlw	low __pdataBANK2
  4051  01A2  0086               	movwf	6
  4052  01A3  3001               	movlw	high __pdataBANK2
  4053  01A4  0087               	movwf	7
  4054  01A5  3000               	movlw	0
  4055  01A6  00FF               	movwf	btemp+1
  4056  01A7  3013               	movlw	19
  4057  01A8  319E  26CE  3181   	fcall	init_ram
  4058                           
  4059                           ; Initialize objects allocated to BANK4
  4060  01AB  3011               	movlw	low __pidataBANK4
  4061  01AC  0084               	movwf	4
  4062  01AD  3092               	movlw	(high __pidataBANK4)| (0+128)
  4063  01AE  0085               	movwf	5
  4064  01AF  3020               	movlw	low __pdataBANK4
  4065  01B0  0086               	movwf	6
  4066  01B1  3002               	movlw	high __pdataBANK4
  4067  01B2  0087               	movwf	7
  4068  01B3  3000               	movlw	0
  4069  01B4  00FF               	movwf	btemp+1
  4070  01B5  303A               	movlw	58
  4071  01B6  319E  26CE  3181   	fcall	init_ram
  4072                           
  4073                           ; Initialize objects allocated to BANK5
  4074  01B9  30D7               	movlw	low __pidataBANK5
  4075  01BA  0084               	movwf	4
  4076  01BB  3091               	movlw	(high __pidataBANK5)| (0+128)
  4077  01BC  0085               	movwf	5
  4078  01BD  30A0               	movlw	low __pdataBANK5
  4079  01BE  0086               	movwf	6
  4080  01BF  3002               	movlw	high __pdataBANK5
  4081  01C0  0087               	movwf	7
  4082  01C1  3000               	movlw	0
  4083  01C2  00FF               	movwf	btemp+1
  4084  01C3  303A               	movlw	58
  4085  01C4  319E  26CE  3181   	fcall	init_ram
  4086                           
  4087                           ; Initialize objects allocated to BANK6
  4088  01C7  309D               	movlw	low __pidataBANK6
  4089  01C8  0084               	movwf	4
  4090  01C9  3091               	movlw	(high __pidataBANK6)| (0+128)
  4091  01CA  0085               	movwf	5
  4092  01CB  3020               	movlw	low __pdataBANK6
  4093  01CC  0086               	movwf	6
  4094  01CD  3003               	movlw	high __pdataBANK6
  4095  01CE  0087               	movwf	7
  4096  01CF  3000               	movlw	0
  4097  01D0  00FF               	movwf	btemp+1
  4098  01D1  303A               	movlw	58
  4099  01D2  319E  26CE  3181   	fcall	init_ram
  4100                           
  4101                           ; Initialize objects allocated to BANK7
  4102  01D5  30F9               	movlw	low __pidataBANK7
  4103  01D6  0084               	movwf	4
  4104  01D7  3094               	movlw	(high __pidataBANK7)| (0+128)
  4105  01D8  0085               	movwf	5
  4106  01D9  30A0               	movlw	low __pdataBANK7
  4107  01DA  0086               	movwf	6
  4108  01DB  3003               	movlw	high __pdataBANK7
  4109  01DC  0087               	movwf	7
  4110  01DD  3000               	movlw	0
  4111  01DE  00FF               	movwf	btemp+1
  4112  01DF  3050               	movlw	80
  4113  01E0  319E  26CE  3181   	fcall	init_ram
  4114                           
  4115                           ; Initialize objects allocated to BANK8
  4116  01E3  30A9               	movlw	low __pidataBANK8
  4117  01E4  0084               	movwf	4
  4118  01E5  3094               	movlw	(high __pidataBANK8)| (0+128)
  4119  01E6  0085               	movwf	5
  4120  01E7  3020               	movlw	low __pdataBANK8
  4121  01E8  0086               	movwf	6
  4122  01E9  3004               	movlw	high __pdataBANK8
  4123  01EA  0087               	movwf	7
  4124  01EB  3000               	movlw	0
  4125  01EC  00FF               	movwf	btemp+1
  4126  01ED  3050               	movlw	80
  4127  01EE  319E  26CE  3181   	fcall	init_ram
  4128                           
  4129                           ; Initialize objects allocated to BANK9
  4130  01F1  3063               	movlw	low __pidataBANK9
  4131  01F2  0084               	movwf	4
  4132  01F3  3091               	movlw	(high __pidataBANK9)| (0+128)
  4133  01F4  0085               	movwf	5
  4134  01F5  30A0               	movlw	low __pdataBANK9
  4135  01F6  0086               	movwf	6
  4136  01F7  3004               	movlw	high __pdataBANK9
  4137  01F8  0087               	movwf	7
  4138  01F9  3000               	movlw	0
  4139  01FA  00FF               	movwf	btemp+1
  4140  01FB  303A               	movlw	58
  4141  01FC  319E  26CE         	fcall	init_ram
  4142  01FE                     end_of_initialization:	
  4143                           ;End of C runtime variable initialization code
  4144                           
  4145  01FE                     __end_of__initialization:	
  4146  01FE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4147  01FF  0020               	movlb	0
  4148  0200  3182  2A02         	ljmp	_main	;jump to C main() function
  4149                           
  4150                           	psect	bssCOMMON
  4151  0079                     __pbssCOMMON:	
  4152  0079                     _tap_timer:	
  4153  0079                     	ds	4
  4154  007D                     _doubleTap_state:	
  4155  007D                     	ds	1
  4156                           
  4157                           	psect	dataBANK0
  4158  006F                     __pdataBANK0:	
  4159  006F                     _feedback_state:	
  4160  006F                     	ds	1
  4161                           
  4162                           	psect	bssBANK1
  4163  00BF                     __pbssBANK1:	
  4164  00BF                     _sub_timer:	
  4165  00BF                     	ds	4
  4166  00C3                     _timer:	
  4167  00C3                     	ds	4
  4168  00C7                     _feedback_timer:	
  4169  00C7                     	ds	2
  4170  00C9                     _knob_1_pos:	
  4171  00C9                     	ds	2
  4172  00CB                     _longTap_timer:	
  4173  00CB                     	ds	2
  4174  00CD                     _mod_counter:	
  4175  00CD                     	ds	2
  4176  00CF                     _switchBypass_pressed:	
  4177  00CF                     	ds	2
  4178  00D1                     _bypass_turning_on:	
  4179  00D1                     	ds	1
  4180  00D2                     _feedback_start:	
  4181  00D2                     	ds	1
  4182  00D3                     _longTap_start:	
  4183  00D3                     	ds	1
  4184  00D4                     _mode2_state:	
  4185  00D4                     	ds	1
  4186  00D5                     _preset_blink:	
  4187  00D5                     	ds	1
  4188  00D6                     _preset_programmning_on:	
  4189  00D6                     	ds	1
  4190  00D7                     _suspend_blink:	
  4191  00D7                     	ds	1
  4192  00D8                     _switchTap_down:	
  4193  00D8                     	ds	1
  4194  00D9                     _switchTap_pressed:	
  4195  00D9                     	ds	1
  4196                           
  4197                           	psect	dataBANK1
  4198  00DA                     __pdataBANK1:	
  4199  00DA                     _baseline_delay_time:	
  4200  00DA                     	ds	4
  4201  00DE                     _delay_time:	
  4202  00DE                     	ds	4
  4203  00E2                     _bottom_push_state:	
  4204  00E2                     	ds	2
  4205  00E4                     _long_press_limit:	
  4206  00E4                     	ds	2
  4207  00E6                     _tap_iteration:	
  4208  00E6                     	ds	2
  4209  00E8                     _top_push_state:	
  4210  00E8                     	ds	2
  4211  00EA                     _blink_rate:	
  4212  00EA                     	ds	1
  4213  00EB                     _currentBypassState:	
  4214  00EB                     	ds	1
  4215  00EC                     _longTap_state:	
  4216  00EC                     	ds	1
  4217  00ED                     _num_taps:	
  4218  00ED                     	ds	1
  4219  00EE                     _switchBypass_state:	
  4220  00EE                     	ds	1
  4221  00EF                     _switchTap_state:	
  4222  00EF                     	ds	1
  4223                           
  4224                           	psect	bssBANK2
  4225  0120                     __pbssBANK2:	
  4226  0120                     _ledState:	
  4227  0120                     	ds	4
  4228  0124                     _mod_timer:	
  4229  0124                     	ds	4
  4230  0128                     _tap_total:	
  4231  0128                     	ds	4
  4232  012C                     wait_ms@timel:	
  4233  012C                     	ds	4
  4234  0130                     _SPI_Value:	
  4235  0130                     	ds	2
  4236  0132                     _debounce_bypass:	
  4237  0132                     	ds	2
  4238  0134                     _debounce_count:	
  4239  0134                     	ds	2
  4240  0136                     _debounce_mode1:	
  4241  0136                     	ds	2
  4242  0138                     _debounce_mode2:	
  4243  0138                     	ds	2
  4244  013A                     _delay_counter:	
  4245  013A                     	ds	2
  4246  013C                     _delayfound:	
  4247  013C                     	ds	2
  4248  013E                     _knob_2_pos:	
  4249  013E                     	ds	2
  4250  0140                     _knob_3_pos:	
  4251  0140                     	ds	2
  4252  0142                     _knob_4_pos:	
  4253  0142                     	ds	2
  4254  0144                     _knob_5_pos:	
  4255  0144                     	ds	2
  4256  0146                     _mod_value:	
  4257  0146                     	ds	2
  4258  0148                     _switchBypass_toggle:	
  4259  0148                     	ds	2
  4260  014A                     _iCnt:	
  4261  014A                     	ds	1
  4262  014B                     _mode1_state:	
  4263  014B                     	ds	1
  4264                           
  4265                           	psect	dataBANK2
  4266  014C                     __pdataBANK2:	
  4267  014C                     _blink_delay:	
  4268  014C                     	ds	2
  4269  014E                     _delay_time_changed:	
  4270  014E                     	ds	2
  4271  0150                     _knob1_prev:	
  4272  0150                     	ds	2
  4273  0152                     _knob2_prev:	
  4274  0152                     	ds	2
  4275  0154                     _knob3_prev:	
  4276  0154                     	ds	2
  4277  0156                     _knob4_prev:	
  4278  0156                     	ds	2
  4279  0158                     _knob5_prev:	
  4280  0158                     	ds	2
  4281  015A                     _mod_delay_time:	
  4282  015A                     	ds	2
  4283  015C                     _switchBypass_up:	
  4284  015C                     	ds	2
  4285  015E                     _blink_state:	
  4286  015E                     	ds	1
  4287                           
  4288                           	psect	bssBANK3
  4289  01A0                     __pbssBANK3:	
  4290  01A0                     _tap:	
  4291  01A0                     	ds	44
  4292  01CC                     _tap_history:	
  4293  01CC                     	ds	20
  4294                           
  4295                           	psect	dataBANK4
  4296  0220                     __pdataBANK4:	
  4297  0220                     _mod2:	
  4298  0220                     	ds	58
  4299                           
  4300                           	psect	dataBANK5
  4301  02A0                     __pdataBANK5:	
  4302  02A0                     _mod3:	
  4303  02A0                     	ds	58
  4304                           
  4305                           	psect	dataBANK6
  4306  0320                     __pdataBANK6:	
  4307  0320                     _mod4:	
  4308  0320                     	ds	58
  4309                           
  4310                           	psect	dataBANK7
  4311  03A0                     __pdataBANK7:	
  4312  03A0                     _B25k:	
  4313  03A0                     	ds	80
  4314                           
  4315                           	psect	dataBANK8
  4316  0420                     __pdataBANK8:	
  4317  0420                     _iB25k:	
  4318  0420                     	ds	80
  4319                           
  4320                           	psect	dataBANK9
  4321  04A0                     __pdataBANK9:	
  4322  04A0                     _mod1:	
  4323  04A0                     	ds	58
  4324                           
  4325                           	psect	bssBANK10
  4326  0520                     __pbssBANK10:	
  4327  0520                     _myBuf:	
  4328  0520                     	ds	64
  4329                           
  4330                           	psect	clrtext
  4331  07F4                     clear_ram0:	
  4332                           ;	Called with FSR0 containing the base address, and
  4333                           ;	btemp/btemp+1 has the size to clear
  4334                           
  4335  07F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  4336  07F5                     clrloop0:	
  4337  07F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  4338  07F6  3101               	addfsr 0,1
  4339  07F7  3001               	movlw	1
  4340  07F8  02FE               	subwf	126,f
  4341  07F9  3000               	movlw	0
  4342  07FA  3BFF               	subwfb	127,f
  4343  07FB  087F               	movf	127,w
  4344  07FC  047E               	iorwf	126,w
  4345  07FD  1903               	btfsc	3,2
  4346  07FE  3400               	retlw	0	;all done for this memory range, return
  4347  07FF  2FF5               	goto	clrloop0	;have we reached the end yet?
  4348                           
  4349                           	psect	inittext
  4350  1ECE                     init_ram:	
  4351  1ECE  00FE               	movwf	126
  4352  1ECF                     initloop:	
  4353  1ECF  0012               	moviw fsr0++
  4354  1ED0  001E               	movwi fsr1++
  4355  1ED1  3001               	movlw	1
  4356  1ED2  02FE               	subwf	126,f
  4357  1ED3  3000               	movlw	0
  4358  1ED4  3BFF               	subwfb	127,f
  4359  1ED5  087F               	movf	127,w
  4360  1ED6  047E               	iorwf	126,w
  4361  1ED7  1903               	btfsc	3,2
  4362  1ED8  3400               	retlw	0
  4363  1ED9  2ECF               	goto	initloop
  4364                           
  4365                           	psect	cstackBANK1
  4366  00A0                     __pcstackBANK1:	
  4367  00A0                     ___fttol@sign1:	
  4368                           
  4369                           ; 1 bytes @ 0x0
  4370  00A0                     	ds	1
  4371  00A1                     ___fttol@lval:	
  4372                           
  4373                           ; 4 bytes @ 0x1
  4374  00A1                     	ds	4
  4375  00A5                     ___fttol@exp1:	
  4376                           
  4377                           ; 1 bytes @ 0x5
  4378  00A5                     	ds	1
  4379  00A6                     ?_set_subdivision:	
  4380  00A6                     set_subdivision@x:	
  4381                           ; 2 bytes @ 0x6
  4382                           
  4383                           
  4384                           ; 2 bytes @ 0x6
  4385  00A6                     	ds	2
  4386  00A8                     set_subdivision@y:	
  4387                           
  4388                           ; 2 bytes @ 0x8
  4389  00A8                     	ds	2
  4390  00AA                     ??_main:	
  4391                           
  4392                           ; 1 bytes @ 0xA
  4393  00AA                     	ds	15
  4394  00B9                     main@adjusted_pot_value:	
  4395                           
  4396                           ; 2 bytes @ 0x19
  4397  00B9                     	ds	2
  4398  00BB                     main@i:	
  4399                           
  4400                           ; 2 bytes @ 0x1B
  4401  00BB                     	ds	2
  4402  00BD                     main@i_319:	
  4403                           
  4404                           ; 2 bytes @ 0x1D
  4405  00BD                     	ds	2
  4406                           
  4407                           	psect	cstackCOMMON
  4408  0070                     __pcstackCOMMON:	
  4409  0070                     ?_ConfigureOscillator:	
  4410  0070                     ?_InitApp:	
  4411                           ; 1 bytes @ 0x0
  4412                           
  4413  0070                     ?_InitializeTaps:	
  4414                           ; 1 bytes @ 0x0
  4415                           
  4416  0070                     ?_initSwitchBypass:	
  4417                           ; 1 bytes @ 0x0
  4418                           
  4419  0070                     ?_ReadSavedSettings:	
  4420                           ; 1 bytes @ 0x0
  4421                           
  4422  0070                     ?_read_bottom_tactile:	
  4423                           ; 1 bytes @ 0x0
  4424                           
  4425  0070                     ?_read_top_tactile:	
  4426                           ; 1 bytes @ 0x0
  4427                           
  4428  0070                     ?_update_mode:	
  4429                           ; 1 bytes @ 0x0
  4430                           
  4431  0070                     ?_showBootSequence:	
  4432                           ; 1 bytes @ 0x0
  4433                           
  4434  0070                     ?_updateSwitchBypass:	
  4435                           ; 1 bytes @ 0x0
  4436                           
  4437  0070                     ?_updateSwitchTap:	
  4438                           ; 1 bytes @ 0x0
  4439                           
  4440  0070                     ?_init_adc:	
  4441                           ; 1 bytes @ 0x0
  4442                           
  4443  0070                     ?_init_pwm:	
  4444                           ; 1 bytes @ 0x0
  4445                           
  4446  0070                     ?_init_timer2:	
  4447                           ; 1 bytes @ 0x0
  4448                           
  4449  0070                     ?_init_timer0:	
  4450                           ; 1 bytes @ 0x0
  4451                           
  4452  0070                     ?_getCurrentLEDState:	
  4453                           ; 1 bytes @ 0x0
  4454                           
  4455  0070                     ?_star_tactiles:	
  4456                           ; 1 bytes @ 0x0
  4457                           
  4458  0070                     ?_solidring_tactiles:	
  4459                           ; 1 bytes @ 0x0
  4460                           
  4461  0070                     ?_restoreLEDState:	
  4462                           ; 1 bytes @ 0x0
  4463                           
  4464  0070                     ?_isr:	
  4465                           ; 1 bytes @ 0x0
  4466                           
  4467  0070                     ?_main:	
  4468                           ; 1 bytes @ 0x0
  4469                           
  4470  0070                     ?i1_set_leds_top:	
  4471                           ; 1 bytes @ 0x0
  4472                           
  4473  0070                     i1set_leds_top@x:	
  4474                           ; 1 bytes @ 0x0
  4475                           
  4476                           
  4477                           ; 2 bytes @ 0x0
  4478  0070                     	ds	2
  4479  0072                     i1set_leds_top@ledState:	
  4480                           
  4481                           ; 2 bytes @ 0x2
  4482  0072                     	ds	2
  4483  0074                     ??_isr:	
  4484  0074                     ??i1_set_leds_top:	
  4485                           ; 1 bytes @ 0x4
  4486                           
  4487                           
  4488                           ; 1 bytes @ 0x4
  4489  0074                     	ds	5
  4490                           
  4491                           	psect	cstackBANK0
  4492  0020                     __pcstackBANK0:	
  4493  0020                     ?_set_leds_top:	
  4494  0020                     ??_ConfigureOscillator:	
  4495                           ; 1 bytes @ 0x0
  4496                           
  4497  0020                     ??_InitApp:	
  4498                           ; 1 bytes @ 0x0
  4499                           
  4500  0020                     ??_InitializeTaps:	
  4501                           ; 1 bytes @ 0x0
  4502                           
  4503  0020                     ??_update_mode:	
  4504                           ; 1 bytes @ 0x0
  4505                           
  4506  0020                     ??_init_adc:	
  4507                           ; 1 bytes @ 0x0
  4508                           
  4509  0020                     ??_init_pwm:	
  4510                           ; 1 bytes @ 0x0
  4511                           
  4512  0020                     ??_init_timer2:	
  4513                           ; 1 bytes @ 0x0
  4514                           
  4515  0020                     ??_init_timer0:	
  4516                           ; 1 bytes @ 0x0
  4517                           
  4518  0020                     ?_set_leds_bottom:	
  4519                           ; 1 bytes @ 0x0
  4520                           
  4521  0020                     ??_getCurrentLEDState:	
  4522                           ; 1 bytes @ 0x0
  4523                           
  4524  0020                     ??_restoreLEDState:	
  4525                           ; 1 bytes @ 0x0
  4526                           
  4527  0020                     ?_setLongTapState:	
  4528                           ; 1 bytes @ 0x0
  4529                           
  4530  0020                     ?_updateSwitchBypassState:	
  4531                           ; 1 bytes @ 0x0
  4532                           
  4533  0020                     ?_adc_convert:	
  4534                           ; 1 bytes @ 0x0
  4535                           
  4536  0020                     ?_FLASH_ReadWord:	
  4537                           ; 2 bytes @ 0x0
  4538                           
  4539  0020                     ?_getSwitchBypassState:	
  4540                           ; 2 bytes @ 0x0
  4541                           
  4542  0020                     ?___wmul:	
  4543                           ; 2 bytes @ 0x0
  4544                           
  4545  0020                     ?___awdiv:	
  4546                           ; 2 bytes @ 0x0
  4547                           
  4548  0020                     ?___ftpack:	
  4549                           ; 2 bytes @ 0x0
  4550                           
  4551  0020                     ?___ftneg:	
  4552                           ; 3 bytes @ 0x0
  4553                           
  4554  0020                     ?___lmul:	
  4555                           ; 3 bytes @ 0x0
  4556                           
  4557  0020                     FLASH_ReadWord@flashAddr:	
  4558                           ; 4 bytes @ 0x0
  4559                           
  4560  0020                     set_leds_top@x:	
  4561                           ; 2 bytes @ 0x0
  4562                           
  4563  0020                     set_leds_bottom@x:	
  4564                           ; 2 bytes @ 0x0
  4565                           
  4566  0020                     updateSwitchBypassState@state:	
  4567                           ; 2 bytes @ 0x0
  4568                           
  4569  0020                     setLongTapState@f_state:	
  4570                           ; 2 bytes @ 0x0
  4571                           
  4572  0020                     ___wmul@multiplier:	
  4573                           ; 2 bytes @ 0x0
  4574                           
  4575  0020                     ___awdiv@divisor:	
  4576                           ; 2 bytes @ 0x0
  4577                           
  4578  0020                     ___ftpack@arg:	
  4579                           ; 2 bytes @ 0x0
  4580                           
  4581  0020                     ___ftneg@f1:	
  4582                           ; 3 bytes @ 0x0
  4583                           
  4584  0020                     ___lmul@multiplier:	
  4585                           ; 3 bytes @ 0x0
  4586                           
  4587                           
  4588                           ; 4 bytes @ 0x0
  4589  0020                     	ds	1
  4590  0021                     InitializeTaps@itap:	
  4591                           
  4592                           ; 2 bytes @ 0x1
  4593  0021                     	ds	1
  4594  0022                     ??_adc_convert:	
  4595  0022                     ??_FLASH_ReadWord:	
  4596                           ; 1 bytes @ 0x2
  4597                           
  4598  0022                     ??_set_leds_bottom:	
  4599                           ; 1 bytes @ 0x2
  4600                           
  4601  0022                     ??_setLongTapState:	
  4602                           ; 1 bytes @ 0x2
  4603                           
  4604  0022                     ??_updateSwitchBypassState:	
  4605                           ; 1 bytes @ 0x2
  4606                           
  4607  0022                     ??_getSwitchBypassState:	
  4608                           ; 1 bytes @ 0x2
  4609                           
  4610  0022                     FLASH_ReadWord@GIEBitValue:	
  4611                           ; 1 bytes @ 0x2
  4612                           
  4613  0022                     set_leds_top@ledState:	
  4614                           ; 1 bytes @ 0x2
  4615                           
  4616  0022                     ___wmul@multiplicand:	
  4617                           ; 2 bytes @ 0x2
  4618                           
  4619  0022                     ___awdiv@dividend:	
  4620                           ; 2 bytes @ 0x2
  4621                           
  4622                           
  4623                           ; 2 bytes @ 0x2
  4624  0022                     	ds	1
  4625  0023                     ??___ftneg:	
  4626  0023                     adc_convert@channel:	
  4627                           ; 1 bytes @ 0x3
  4628                           
  4629  0023                     ___ftpack@exp:	
  4630                           ; 1 bytes @ 0x3
  4631                           
  4632                           
  4633                           ; 1 bytes @ 0x3
  4634  0023                     	ds	1
  4635  0024                     ??_set_leds_top:	
  4636  0024                     ??_ReadSavedSettings:	
  4637                           ; 1 bytes @ 0x4
  4638                           
  4639  0024                     ??___wmul:	
  4640                           ; 1 bytes @ 0x4
  4641                           
  4642  0024                     ??___awdiv:	
  4643                           ; 1 bytes @ 0x4
  4644                           
  4645  0024                     ___ftpack@sign:	
  4646                           ; 1 bytes @ 0x4
  4647                           
  4648  0024                     ___wmul@product:	
  4649                           ; 1 bytes @ 0x4
  4650                           
  4651  0024                     ___lmul@multiplicand:	
  4652                           ; 2 bytes @ 0x4
  4653                           
  4654                           
  4655                           ; 4 bytes @ 0x4
  4656  0024                     	ds	1
  4657  0025                     ??___ftpack:	
  4658  0025                     ___awdiv@counter:	
  4659                           ; 1 bytes @ 0x5
  4660                           
  4661                           
  4662                           ; 1 bytes @ 0x5
  4663  0025                     	ds	1
  4664  0026                     ?___aldiv:	
  4665  0026                     ___awdiv@sign:	
  4666                           ; 4 bytes @ 0x6
  4667                           
  4668  0026                     ___aldiv@divisor:	
  4669                           ; 1 bytes @ 0x6
  4670                           
  4671                           
  4672                           ; 4 bytes @ 0x6
  4673  0026                     	ds	1
  4674  0027                     ___awdiv@quotient:	
  4675                           
  4676                           ; 2 bytes @ 0x7
  4677  0027                     	ds	1
  4678  0028                     ??___lmul:	
  4679  0028                     ?___altoft:	
  4680                           ; 1 bytes @ 0x8
  4681                           
  4682  0028                     ?___awtoft:	
  4683                           ; 3 bytes @ 0x8
  4684                           
  4685  0028                     ?___ftadd:	
  4686                           ; 3 bytes @ 0x8
  4687                           
  4688  0028                     ___awtoft@c:	
  4689                           ; 3 bytes @ 0x8
  4690                           
  4691  0028                     ___ftadd@f1:	
  4692                           ; 2 bytes @ 0x8
  4693                           
  4694  0028                     ___lmul@product:	
  4695                           ; 3 bytes @ 0x8
  4696                           
  4697  0028                     ___altoft@c:	
  4698                           ; 4 bytes @ 0x8
  4699                           
  4700                           
  4701                           ; 4 bytes @ 0x8
  4702  0028                     	ds	2
  4703  002A                     ___aldiv@dividend:	
  4704                           
  4705                           ; 4 bytes @ 0xA
  4706  002A                     	ds	1
  4707  002B                     ??___awtoft:	
  4708  002B                     ___ftadd@f2:	
  4709                           ; 1 bytes @ 0xB
  4710                           
  4711                           
  4712                           ; 3 bytes @ 0xB
  4713  002B                     	ds	1
  4714  002C                     ?_wait_ms:	
  4715  002C                     ??___altoft:	
  4716                           ; 1 bytes @ 0xC
  4717                           
  4718  002C                     wait_ms@time:	
  4719                           ; 1 bytes @ 0xC
  4720                           
  4721                           
  4722                           ; 2 bytes @ 0xC
  4723  002C                     	ds	1
  4724  002D                     ___awtoft@sign:	
  4725                           
  4726                           ; 1 bytes @ 0xD
  4727  002D                     	ds	1
  4728  002E                     ??_read_bottom_tactile:	
  4729  002E                     ??_read_top_tactile:	
  4730                           ; 1 bytes @ 0xE
  4731                           
  4732  002E                     ??_star_tactiles:	
  4733                           ; 1 bytes @ 0xE
  4734                           
  4735  002E                     ??_solidring_tactiles:	
  4736                           ; 1 bytes @ 0xE
  4737                           
  4738  002E                     ?_setSwitchBypassState:	
  4739                           ; 1 bytes @ 0xE
  4740                           
  4741  002E                     ?_setFeedbackState:	
  4742                           ; 1 bytes @ 0xE
  4743                           
  4744  002E                     ?_setDoublePressState:	
  4745                           ; 1 bytes @ 0xE
  4746                           
  4747  002E                     ??_wait_ms:	
  4748                           ; 1 bytes @ 0xE
  4749                           
  4750  002E                     ??___aldiv:	
  4751                           ; 1 bytes @ 0xE
  4752                           
  4753  002E                     ??___ftadd:	
  4754                           ; 1 bytes @ 0xE
  4755                           
  4756  002E                     ___altoft@exp:	
  4757                           ; 1 bytes @ 0xE
  4758                           
  4759  002E                     setSwitchBypassState@f_state:	
  4760                           ; 1 bytes @ 0xE
  4761                           
  4762  002E                     setFeedbackState@f_state:	
  4763                           ; 2 bytes @ 0xE
  4764                           
  4765  002E                     setDoublePressState@f_state:	
  4766                           ; 2 bytes @ 0xE
  4767                           
  4768                           
  4769                           ; 2 bytes @ 0xE
  4770  002E                     	ds	1
  4771  002F                     ___aldiv@counter:	
  4772  002F                     ___altoft@sign:	
  4773                           ; 1 bytes @ 0xF
  4774                           
  4775                           
  4776                           ; 1 bytes @ 0xF
  4777  002F                     	ds	1
  4778  0030                     ??_setSwitchBypassState:	
  4779  0030                     ??_setFeedbackState:	
  4780                           ; 1 bytes @ 0x10
  4781                           
  4782  0030                     ??_setDoublePressState:	
  4783                           ; 1 bytes @ 0x10
  4784                           
  4785  0030                     star_tactiles@reverse:	
  4786                           ; 1 bytes @ 0x10
  4787                           
  4788  0030                     solidring_tactiles@ring_delay:	
  4789                           ; 1 bytes @ 0x10
  4790                           
  4791  0030                     ___aldiv@sign:	
  4792                           ; 1 bytes @ 0x10
  4793                           
  4794                           
  4795                           ; 1 bytes @ 0x10
  4796  0030                     	ds	1
  4797  0031                     star_tactiles@iLed:	
  4798  0031                     ___aldiv@quotient:	
  4799                           ; 2 bytes @ 0x11
  4800                           
  4801                           
  4802                           ; 4 bytes @ 0x11
  4803  0031                     	ds	1
  4804  0032                     ??_initSwitchBypass:	
  4805  0032                     ??_updateSwitchBypass:	
  4806                           ; 1 bytes @ 0x12
  4807                           
  4808  0032                     ___ftadd@sign:	
  4809                           ; 1 bytes @ 0x12
  4810                           
  4811  0032                     initSwitchBypass@initState:	
  4812                           ; 1 bytes @ 0x12
  4813                           
  4814                           
  4815                           ; 2 bytes @ 0x12
  4816  0032                     	ds	1
  4817  0033                     ___ftadd@exp2:	
  4818  0033                     star_tactiles@iLed_1391:	
  4819                           ; 1 bytes @ 0x13
  4820                           
  4821                           
  4822                           ; 2 bytes @ 0x13
  4823  0033                     	ds	1
  4824  0034                     ___ftadd@exp1:	
  4825                           
  4826                           ; 1 bytes @ 0x14
  4827  0034                     	ds	1
  4828  0035                     ??_showBootSequence:	
  4829  0035                     ??_updateSwitchTap:	
  4830                           ; 1 bytes @ 0x15
  4831                           
  4832  0035                     ?_modulation:	
  4833                           ; 1 bytes @ 0x15
  4834                           
  4835  0035                     ?___ftmul:	
  4836                           ; 2 bytes @ 0x15
  4837                           
  4838  0035                     modulation@x:	
  4839                           ; 3 bytes @ 0x15
  4840                           
  4841  0035                     ___ftmul@f1:	
  4842                           ; 2 bytes @ 0x15
  4843                           
  4844                           
  4845                           ; 3 bytes @ 0x15
  4846  0035                     	ds	2
  4847  0037                     modulation@y:	
  4848                           
  4849                           ; 2 bytes @ 0x17
  4850  0037                     	ds	1
  4851  0038                     ___ftmul@f2:	
  4852                           
  4853                           ; 3 bytes @ 0x18
  4854  0038                     	ds	1
  4855  0039                     ??_modulation:	
  4856                           
  4857                           ; 1 bytes @ 0x19
  4858  0039                     	ds	2
  4859  003B                     ??___ftmul:	
  4860  003B                     updateSwitchTap@tapCntDivisor:	
  4861                           ; 1 bytes @ 0x1B
  4862                           
  4863                           
  4864                           ; 2 bytes @ 0x1B
  4865  003B                     	ds	2
  4866  003D                     updateSwitchTap@iCnt:	
  4867                           
  4868                           ; 1 bytes @ 0x1D
  4869  003D                     	ds	2
  4870  003F                     ___ftmul@exp:	
  4871                           
  4872                           ; 1 bytes @ 0x1F
  4873  003F                     	ds	1
  4874  0040                     ___ftmul@f3_as_product:	
  4875                           
  4876                           ; 3 bytes @ 0x20
  4877  0040                     	ds	3
  4878  0043                     ___ftmul@cntr:	
  4879                           
  4880                           ; 1 bytes @ 0x23
  4881  0043                     	ds	1
  4882  0044                     ___ftmul@sign:	
  4883                           
  4884                           ; 1 bytes @ 0x24
  4885  0044                     	ds	1
  4886  0045                     ?___ftdiv:	
  4887  0045                     ___ftdiv@f2:	
  4888                           ; 3 bytes @ 0x25
  4889                           
  4890                           
  4891                           ; 3 bytes @ 0x25
  4892  0045                     	ds	3
  4893  0048                     ___ftdiv@f1:	
  4894                           
  4895                           ; 3 bytes @ 0x28
  4896  0048                     	ds	3
  4897  004B                     ??___ftdiv:	
  4898                           
  4899                           ; 1 bytes @ 0x2B
  4900  004B                     	ds	4
  4901  004F                     ___ftdiv@cntr:	
  4902                           
  4903                           ; 1 bytes @ 0x2F
  4904  004F                     	ds	1
  4905  0050                     ___ftdiv@f3:	
  4906                           
  4907                           ; 3 bytes @ 0x30
  4908  0050                     	ds	3
  4909  0053                     ___ftdiv@exp:	
  4910                           
  4911                           ; 1 bytes @ 0x33
  4912  0053                     	ds	1
  4913  0054                     ___ftdiv@sign:	
  4914                           
  4915                           ; 1 bytes @ 0x34
  4916  0054                     	ds	1
  4917  0055                     ?_map:	
  4918  0055                     map@x:	
  4919                           ; 3 bytes @ 0x35
  4920                           
  4921                           
  4922                           ; 3 bytes @ 0x35
  4923  0055                     	ds	3
  4924  0058                     map@in_min:	
  4925                           
  4926                           ; 3 bytes @ 0x38
  4927  0058                     	ds	3
  4928  005B                     map@in_max:	
  4929                           
  4930                           ; 3 bytes @ 0x3B
  4931  005B                     	ds	3
  4932  005E                     map@out_min:	
  4933                           
  4934                           ; 3 bytes @ 0x3E
  4935  005E                     	ds	3
  4936  0061                     map@out_max:	
  4937                           
  4938                           ; 3 bytes @ 0x41
  4939  0061                     	ds	3
  4940  0064                     ??_map:	
  4941  0064                     _map$2065:	
  4942                           ; 1 bytes @ 0x44
  4943                           
  4944                           
  4945                           ; 3 bytes @ 0x44
  4946  0064                     	ds	3
  4947  0067                     ?___fttol:	
  4948  0067                     ___fttol@f1:	
  4949                           ; 4 bytes @ 0x47
  4950                           
  4951                           
  4952                           ; 3 bytes @ 0x47
  4953  0067                     	ds	4
  4954  006B                     ??___fttol:	
  4955                           
  4956                           ; 1 bytes @ 0x4B
  4957  006B                     	ds	4
  4958  006F                     ??_set_subdivision:	
  4959                           
  4960                           	psect	maintext
  4961  0202                     __pmaintext:	
  4962                           ; 1 bytes @ 0x4F
  4963 ;;
  4964 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
  4965 ;;
  4966 ;; *************** function _main *****************
  4967 ;; Defined at:
  4968 ;;		line 82 in file "main.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  adjusted_pot    2   25[BANK1 ] int 
  4973 ;;  i               2   29[BANK1 ] int 
  4974 ;;  i               2   27[BANK1 ] int 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : B1F/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4985 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4986 ;;      Temps:          0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4987 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4988 ;;Total ram usage:       21 bytes
  4989 ;; Hardware stack levels required when called:    6
  4990 ;; This function calls:
  4991 ;;		_ConfigureOscillator
  4992 ;;		_InitApp
  4993 ;;		_InitializeTaps
  4994 ;;		_ReadSavedSettings
  4995 ;;		___altoft
  4996 ;;		___awdiv
  4997 ;;		___awtoft
  4998 ;;		___ftdiv
  4999 ;;		___fttol
  5000 ;;		_adc_convert
  5001 ;;		_initSwitchBypass
  5002 ;;		_map
  5003 ;;		_modulation
  5004 ;;		_read_bottom_tactile
  5005 ;;		_read_top_tactile
  5006 ;;		_set_subdivision
  5007 ;;		_showBootSequence
  5008 ;;		_updateSwitchBypass
  5009 ;;		_updateSwitchTap
  5010 ;;		_update_mode
  5011 ;; This function is called by:
  5012 ;;		Startup code after reset
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           
  5017                           ;psect for function _main
  5018  0202                     _main:	
  5019                           
  5020                           ;main.c: 83: ConfigureOscillator();
  5021                           
  5022                           ;incstack = 0
  5023                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5024  0202  319E  26A3  3182   	fcall	_ConfigureOscillator
  5025                           
  5026                           ;main.c: 84: InitApp();
  5027  0205  3190  2067  3182   	fcall	_InitApp
  5028                           
  5029                           ;main.c: 87: InitializeTaps();
  5030  0208  319F  27DA  3182   	fcall	_InitializeTaps
  5031                           
  5032                           ;main.c: 88: initSwitchBypass();
  5033  020B  3190  2000  3182   	fcall	_initSwitchBypass
  5034                           
  5035                           ;main.c: 91: ReadSavedSettings();
  5036  020E  3194  2459  3182   	fcall	_ReadSavedSettings
  5037  0211                     l4127:	
  5038                           ;main.c: 93: while (1) {
  5039                           
  5040                           
  5041                           ;main.c: 96: read_bottom_tactile();
  5042  0211  3190  20F8  3182   	fcall	_read_bottom_tactile
  5043                           
  5044                           ;main.c: 97: read_top_tactile();
  5045  0214  3191  2129  3182   	fcall	_read_top_tactile
  5046                           
  5047                           ;main.c: 100: update_mode();
  5048  0217  3193  2382  3182   	fcall	_update_mode
  5049                           
  5050                           ;main.c: 102: if (PORTDbits.RD7 == 0) {
  5051  021A  0020               	movlb	0	; select bank0
  5052  021B  1B8F               	btfsc	15,7	;volatile
  5053  021C  2A3B               	goto	l4141
  5054                           
  5055                           ;main.c: 103: debounce_mode1++;
  5056  021D  3001               	movlw	1
  5057  021E  0022               	movlb	2	; select bank2
  5058  021F  07B6               	addwf	_debounce_mode1^(0+256),f
  5059  0220  3000               	movlw	0
  5060  0221  3DB7               	addwfc	(_debounce_mode1+1)^(0+256),f
  5061                           
  5062                           ;main.c: 104: if (debounce_mode1 > 25) {
  5063  0222  0837               	movf	(_debounce_mode1+1)^(0+256),w
  5064  0223  3A80               	xorlw	128
  5065  0224  0021               	movlb	1	; select bank1
  5066  0225  00AA               	movwf	??_main^(0+128)
  5067  0226  3080               	movlw	128
  5068  0227  022A               	subwf	??_main^(0+128),w
  5069  0228  1D03               	skipz
  5070  0229  2A2D               	goto	u4195
  5071  022A  301A               	movlw	26
  5072  022B  0022               	movlb	2	; select bank2
  5073  022C  0236               	subwf	_debounce_mode1^(0+256),w
  5074  022D                     u4195:	
  5075  022D  1C03               	skipc
  5076  022E  2A3E               	goto	l4143
  5077                           
  5078                           ;main.c: 105: debounce_mode1 = 25;
  5079  022F  3019               	movlw	25
  5080  0230  0022               	movlb	2	; select bank2
  5081  0231  00B6               	movwf	_debounce_mode1^(0+256)
  5082  0232  3000               	movlw	0
  5083  0233  00B7               	movwf	(_debounce_mode1^(0+256)+1)
  5084                           
  5085                           ;main.c: 109: showBootSequence();
  5086  0234  3190  200F  3182   	fcall	_showBootSequence
  5087  0237                     l269:	
  5088                           ;main.c: 112: while (PORTDbits.RD7 == 0) {
  5089                           
  5090  0237  0020               	movlb	0	; select bank0
  5091  0238  1B8F               	btfsc	15,7	;volatile
  5092  0239  2A3E               	goto	l4143
  5093  023A  2A37               	goto	l269
  5094  023B                     l4141:	
  5095                           ;main.c: 113: }
  5096                           ;main.c: 114: }
  5097                           ;main.c: 115: } else {
  5098                           
  5099                           
  5100                           ;main.c: 116: debounce_mode1 = 0;
  5101  023B  0022               	movlb	2	; select bank2
  5102  023C  01B6               	clrf	_debounce_mode1^(0+256)
  5103  023D  01B7               	clrf	(_debounce_mode1+1)^(0+256)
  5104  023E                     l4143:	
  5105                           
  5106                           ;main.c: 117: }
  5107                           ;main.c: 119: updateSwitchBypass();
  5108  023E  3187  2711  3182   	fcall	_updateSwitchBypass
  5109                           
  5110                           ;main.c: 120: updateSwitchTap();
  5111  0241  318B  23BD  3182   	fcall	_updateSwitchTap
  5112                           
  5113                           ;main.c: 209: knob_1_pos = adc_convert(0);
  5114  0244  3000               	movlw	0
  5115  0245  319F  272B  3182   	fcall	_adc_convert
  5116  0248  0020               	movlb	0	; select bank0
  5117  0249  0821               	movf	?_adc_convert+1,w
  5118  024A  0021               	movlb	1	; select bank1
  5119  024B  00CA               	movwf	(_knob_1_pos+1)^(0+128)
  5120  024C  0020               	movlb	0	; select bank0
  5121  024D  0820               	movf	?_adc_convert,w
  5122  024E  0021               	movlb	1	; select bank1
  5123  024F  00C9               	movwf	_knob_1_pos^(0+128)
  5124                           
  5125                           ;main.c: 210: knob_2_pos = adc_convert(1);
  5126  0250  3001               	movlw	1
  5127  0251  319F  272B  3182   	fcall	_adc_convert
  5128  0254  0020               	movlb	0	; select bank0
  5129  0255  0821               	movf	?_adc_convert+1,w
  5130  0256  0022               	movlb	2	; select bank2
  5131  0257  00BF               	movwf	(_knob_2_pos+1)^(0+256)
  5132  0258  0020               	movlb	0	; select bank0
  5133  0259  0820               	movf	?_adc_convert,w
  5134  025A  0022               	movlb	2	; select bank2
  5135  025B  00BE               	movwf	_knob_2_pos^(0+256)
  5136                           
  5137                           ;main.c: 211: knob_3_pos = adc_convert(2);
  5138  025C  3002               	movlw	2
  5139  025D  319F  272B  3182   	fcall	_adc_convert
  5140  0260  0020               	movlb	0	; select bank0
  5141  0261  0821               	movf	?_adc_convert+1,w
  5142  0262  0022               	movlb	2	; select bank2
  5143  0263  00C1               	movwf	(_knob_3_pos+1)^(0+256)
  5144  0264  0020               	movlb	0	; select bank0
  5145  0265  0820               	movf	?_adc_convert,w
  5146  0266  0022               	movlb	2	; select bank2
  5147  0267  00C0               	movwf	_knob_3_pos^(0+256)
  5148                           
  5149                           ;main.c: 212: knob_4_pos = adc_convert(3);
  5150  0268  3003               	movlw	3
  5151  0269  319F  272B  3182   	fcall	_adc_convert
  5152  026C  0020               	movlb	0	; select bank0
  5153  026D  0821               	movf	?_adc_convert+1,w
  5154  026E  0022               	movlb	2	; select bank2
  5155  026F  00C3               	movwf	(_knob_4_pos+1)^(0+256)
  5156  0270  0020               	movlb	0	; select bank0
  5157  0271  0820               	movf	?_adc_convert,w
  5158  0272  0022               	movlb	2	; select bank2
  5159  0273  00C2               	movwf	_knob_4_pos^(0+256)
  5160                           
  5161                           ;main.c: 213: knob_5_pos = adc_convert(4);
  5162  0274  3004               	movlw	4
  5163  0275  319F  272B  3182   	fcall	_adc_convert
  5164  0278  0020               	movlb	0	; select bank0
  5165  0279  0821               	movf	?_adc_convert+1,w
  5166  027A  0022               	movlb	2	; select bank2
  5167  027B  00C5               	movwf	(_knob_5_pos+1)^(0+256)
  5168  027C  0020               	movlb	0	; select bank0
  5169  027D  0820               	movf	?_adc_convert,w
  5170  027E  0022               	movlb	2	; select bank2
  5171  027F  00C4               	movwf	_knob_5_pos^(0+256)
  5172                           
  5173                           ;main.c: 226: if (knob_1_pos - knob1_prev >= 4 || knob_1_pos - knob1_prev <= -4) {
  5174  0280  0950               	comf	_knob1_prev^(0+256),w
  5175  0281  0021               	movlb	1	; select bank1
  5176  0282  00AA               	movwf	??_main^(0+128)
  5177  0283  0022               	movlb	2	; select bank2
  5178  0284  0951               	comf	(_knob1_prev+1)^(0+256),w
  5179  0285  0021               	movlb	1	; select bank1
  5180  0286  00AB               	movwf	(??_main^(0+128)+1)
  5181  0287  0AAA               	incf	??_main^(0+128),f
  5182  0288  1903               	skipnz
  5183  0289  0AAB               	incf	(??_main^(0+128)+1),f
  5184  028A  0849               	movf	_knob_1_pos^(0+128),w
  5185  028B  072A               	addwf	??_main^(0+128),w
  5186  028C  00AC               	movwf	(??_main+2)^(0+128)
  5187  028D  084A               	movf	(_knob_1_pos+1)^(0+128),w
  5188  028E  3D2B               	addwfc	(??_main+1)^(0+128),w
  5189  028F  00AD               	movwf	(??_main+3)^(0+128)
  5190  0290  082D               	movf	(??_main+3)^(0+128),w
  5191  0291  3A80               	xorlw	128
  5192  0292  00AE               	movwf	(??_main+4)^(0+128)
  5193  0293  3080               	movlw	128
  5194  0294  022E               	subwf	(??_main+4)^(0+128),w
  5195  0295  1D03               	skipz
  5196  0296  2A99               	goto	u4215
  5197  0297  3004               	movlw	4
  5198  0298  022C               	subwf	(??_main+2)^(0+128),w
  5199  0299                     u4215:	
  5200  0299  1803               	skipnc
  5201  029A  2AB7               	goto	l4161
  5202  029B  0022               	movlb	2	; select bank2
  5203  029C  0950               	comf	_knob1_prev^(0+256),w
  5204  029D  0021               	movlb	1	; select bank1
  5205  029E  00AA               	movwf	??_main^(0+128)
  5206  029F  0022               	movlb	2	; select bank2
  5207  02A0  0951               	comf	(_knob1_prev+1)^(0+256),w
  5208  02A1  0021               	movlb	1	; select bank1
  5209  02A2  00AB               	movwf	(??_main^(0+128)+1)
  5210  02A3  0AAA               	incf	??_main^(0+128),f
  5211  02A4  1903               	skipnz
  5212  02A5  0AAB               	incf	(??_main^(0+128)+1),f
  5213  02A6  0849               	movf	_knob_1_pos^(0+128),w
  5214  02A7  072A               	addwf	??_main^(0+128),w
  5215  02A8  00AC               	movwf	(??_main+2)^(0+128)
  5216  02A9  084A               	movf	(_knob_1_pos+1)^(0+128),w
  5217  02AA  3D2B               	addwfc	(??_main+1)^(0+128),w
  5218  02AB  00AD               	movwf	(??_main+3)^(0+128)
  5219  02AC  082D               	movf	(??_main+3)^(0+128),w
  5220  02AD  3A80               	xorlw	128
  5221  02AE  00AE               	movwf	(??_main+4)^(0+128)
  5222  02AF  307F               	movlw	127
  5223  02B0  022E               	subwf	(??_main+4)^(0+128),w
  5224  02B1  1D03               	skipz
  5225  02B2  2AB5               	goto	u4225
  5226  02B3  30FD               	movlw	253
  5227  02B4  022C               	subwf	(??_main+2)^(0+128),w
  5228  02B5                     u4225:	
  5229  02B5  1803               	skipnc
  5230  02B6  2B0C               	goto	l4167
  5231  02B7                     l4161:	
  5232                           
  5233                           ;main.c: 227: knob1_prev = knob_1_pos;
  5234  02B7  0021               	movlb	1	; select bank1
  5235  02B8  084A               	movf	(_knob_1_pos+1)^(0+128),w
  5236  02B9  0022               	movlb	2	; select bank2
  5237  02BA  00D1               	movwf	(_knob1_prev+1)^(0+256)
  5238  02BB  0021               	movlb	1	; select bank1
  5239  02BC  0849               	movf	_knob_1_pos^(0+128),w
  5240  02BD  0022               	movlb	2	; select bank2
  5241  02BE  00D0               	movwf	_knob1_prev^(0+256)
  5242                           
  5243                           ;main.c: 229: baseline_delay_time = map(knob1_prev, 0, 1023, 1172, 200);
  5244  02BF  3000               	movlw	0
  5245  02C0  0020               	movlb	0	; select bank0
  5246  02C1  00E1               	movwf	map@out_max
  5247  02C2  3048               	movlw	72
  5248  02C3  00E2               	movwf	map@out_max+1
  5249  02C4  3043               	movlw	67
  5250  02C5  00E3               	movwf	map@out_max+2
  5251  02C6  3080               	movlw	128
  5252  02C7  00DE               	movwf	map@out_min
  5253  02C8  3092               	movlw	146
  5254  02C9  00DF               	movwf	map@out_min+1
  5255  02CA  3044               	movlw	68
  5256  02CB  00E0               	movwf	map@out_min+2
  5257  02CC  30C0               	movlw	192
  5258  02CD  00DB               	movwf	map@in_max
  5259  02CE  307F               	movlw	127
  5260  02CF  00DC               	movwf	map@in_max+1
  5261  02D0  3044               	movlw	68
  5262  02D1  00DD               	movwf	map@in_max+2
  5263  02D2  3000               	movlw	0
  5264  02D3  00D8               	movwf	map@in_min
  5265  02D4  3000               	movlw	0
  5266  02D5  00D9               	movwf	map@in_min+1
  5267  02D6  3000               	movlw	0
  5268  02D7  00DA               	movwf	map@in_min+2
  5269  02D8  0022               	movlb	2	; select bank2
  5270  02D9  0851               	movf	(_knob1_prev+1)^(0+256),w
  5271  02DA  0020               	movlb	0	; select bank0
  5272  02DB  00A9               	movwf	___awtoft@c+1
  5273  02DC  0022               	movlb	2	; select bank2
  5274  02DD  0850               	movf	_knob1_prev^(0+256),w
  5275  02DE  0020               	movlb	0	; select bank0
  5276  02DF  00A8               	movwf	___awtoft@c
  5277  02E0  319F  27B8  3182   	fcall	___awtoft
  5278  02E3  0020               	movlb	0	; select bank0
  5279  02E4  0828               	movf	?___awtoft,w
  5280  02E5  00D5               	movwf	map@x
  5281  02E6  0829               	movf	?___awtoft+1,w
  5282  02E7  00D6               	movwf	map@x+1
  5283  02E8  082A               	movf	?___awtoft+2,w
  5284  02E9  00D7               	movwf	map@x+2
  5285  02EA  3196  26D6  3182   	fcall	_map
  5286  02ED  0020               	movlb	0	; select bank0
  5287  02EE  0855               	movf	?_map,w
  5288  02EF  00E7               	movwf	___fttol@f1
  5289  02F0  0856               	movf	?_map+1,w
  5290  02F1  00E8               	movwf	___fttol@f1+1
  5291  02F2  0857               	movf	?_map+2,w
  5292  02F3  00E9               	movwf	___fttol@f1+2
  5293  02F4  3197  2761  3182   	fcall	___fttol
  5294  02F7  0020               	movlb	0	; select bank0
  5295  02F8  086A               	movf	?___fttol+3,w
  5296  02F9  0021               	movlb	1	; select bank1
  5297  02FA  00DD               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  5298  02FB  0020               	movlb	0	; select bank0
  5299  02FC  0869               	movf	?___fttol+2,w
  5300  02FD  0021               	movlb	1	; select bank1
  5301  02FE  00DC               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  5302  02FF  0020               	movlb	0	; select bank0
  5303  0300  0868               	movf	?___fttol+1,w
  5304  0301  0021               	movlb	1	; select bank1
  5305  0302  00DB               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  5306  0303  0020               	movlb	0	; select bank0
  5307  0304  0867               	movf	?___fttol,w
  5308  0305  0021               	movlb	1	; select bank1
  5309  0306  00DA               	movwf	_baseline_delay_time^(0+128)	;volatile
  5310                           
  5311                           ;main.c: 230: delay_time_changed = 1;
  5312  0307  3001               	movlw	1
  5313  0308  0022               	movlb	2	; select bank2
  5314  0309  00CE               	movwf	_delay_time_changed^(0+256)
  5315  030A  3000               	movlw	0
  5316  030B  00CF               	movwf	(_delay_time_changed^(0+256)+1)
  5317  030C                     l4167:	
  5318                           
  5319                           ;main.c: 231: }
  5320                           ;main.c: 240: if (knob_2_pos - knob2_prev >= 4 || knob_2_pos - knob2_prev <= -4) {
  5321  030C  0022               	movlb	2	; select bank2
  5322  030D  0952               	comf	_knob2_prev^(0+256),w
  5323  030E  0021               	movlb	1	; select bank1
  5324  030F  00AA               	movwf	??_main^(0+128)
  5325  0310  0022               	movlb	2	; select bank2
  5326  0311  0953               	comf	(_knob2_prev+1)^(0+256),w
  5327  0312  0021               	movlb	1	; select bank1
  5328  0313  00AB               	movwf	(??_main^(0+128)+1)
  5329  0314  0AAA               	incf	??_main^(0+128),f
  5330  0315  1903               	skipnz
  5331  0316  0AAB               	incf	(??_main^(0+128)+1),f
  5332  0317  0022               	movlb	2	; select bank2
  5333  0318  083E               	movf	_knob_2_pos^(0+256),w
  5334  0319  0021               	movlb	1	; select bank1
  5335  031A  072A               	addwf	??_main^(0+128),w
  5336  031B  00AC               	movwf	(??_main+2)^(0+128)
  5337  031C  0022               	movlb	2	; select bank2
  5338  031D  083F               	movf	(_knob_2_pos+1)^(0+256),w
  5339  031E  0021               	movlb	1	; select bank1
  5340  031F  3D2B               	addwfc	(??_main+1)^(0+128),w
  5341  0320  00AD               	movwf	(??_main+3)^(0+128)
  5342  0321  082D               	movf	(??_main+3)^(0+128),w
  5343  0322  3A80               	xorlw	128
  5344  0323  00AE               	movwf	(??_main+4)^(0+128)
  5345  0324  3080               	movlw	128
  5346  0325  022E               	subwf	(??_main+4)^(0+128),w
  5347  0326  1D03               	skipz
  5348  0327  2B2A               	goto	u4235
  5349  0328  3004               	movlw	4
  5350  0329  022C               	subwf	(??_main+2)^(0+128),w
  5351  032A                     u4235:	
  5352  032A  1803               	skipnc
  5353  032B  2B4C               	goto	l4171
  5354  032C  0022               	movlb	2	; select bank2
  5355  032D  0952               	comf	_knob2_prev^(0+256),w
  5356  032E  0021               	movlb	1	; select bank1
  5357  032F  00AA               	movwf	??_main^(0+128)
  5358  0330  0022               	movlb	2	; select bank2
  5359  0331  0953               	comf	(_knob2_prev+1)^(0+256),w
  5360  0332  0021               	movlb	1	; select bank1
  5361  0333  00AB               	movwf	(??_main^(0+128)+1)
  5362  0334  0AAA               	incf	??_main^(0+128),f
  5363  0335  1903               	skipnz
  5364  0336  0AAB               	incf	(??_main^(0+128)+1),f
  5365  0337  0022               	movlb	2	; select bank2
  5366  0338  083E               	movf	_knob_2_pos^(0+256),w
  5367  0339  0021               	movlb	1	; select bank1
  5368  033A  072A               	addwf	??_main^(0+128),w
  5369  033B  00AC               	movwf	(??_main+2)^(0+128)
  5370  033C  0022               	movlb	2	; select bank2
  5371  033D  083F               	movf	(_knob_2_pos+1)^(0+256),w
  5372  033E  0021               	movlb	1	; select bank1
  5373  033F  3D2B               	addwfc	(??_main+1)^(0+128),w
  5374  0340  00AD               	movwf	(??_main+3)^(0+128)
  5375  0341  082D               	movf	(??_main+3)^(0+128),w
  5376  0342  3A80               	xorlw	128
  5377  0343  00AE               	movwf	(??_main+4)^(0+128)
  5378  0344  307F               	movlw	127
  5379  0345  022E               	subwf	(??_main+4)^(0+128),w
  5380  0346  1D03               	skipz
  5381  0347  2B4A               	goto	u4245
  5382  0348  30FD               	movlw	253
  5383  0349  022C               	subwf	(??_main+2)^(0+128),w
  5384  034A                     u4245:	
  5385  034A  1803               	skipnc
  5386  034B  2BA6               	goto	l4179
  5387  034C                     l4171:	
  5388                           
  5389                           ;main.c: 241: knob2_prev = knob_2_pos;
  5390  034C  0022               	movlb	2	; select bank2
  5391  034D  083F               	movf	(_knob_2_pos+1)^(0+256),w
  5392  034E  00D3               	movwf	(_knob2_prev+1)^(0+256)
  5393  034F  083E               	movf	_knob_2_pos^(0+256),w
  5394  0350  00D2               	movwf	_knob2_prev^(0+256)
  5395                           
  5396                           ;main.c: 242: int i = map(knob2_prev, 0, 1023, 0, 39);
  5397  0351  3000               	movlw	0
  5398  0352  0020               	movlb	0	; select bank0
  5399  0353  00E1               	movwf	map@out_max
  5400  0354  301C               	movlw	28
  5401  0355  00E2               	movwf	map@out_max+1
  5402  0356  3042               	movlw	66
  5403  0357  00E3               	movwf	map@out_max+2
  5404  0358  3000               	movlw	0
  5405  0359  00DE               	movwf	map@out_min
  5406  035A  3000               	movlw	0
  5407  035B  00DF               	movwf	map@out_min+1
  5408  035C  3000               	movlw	0
  5409  035D  00E0               	movwf	map@out_min+2
  5410  035E  30C0               	movlw	192
  5411  035F  00DB               	movwf	map@in_max
  5412  0360  307F               	movlw	127
  5413  0361  00DC               	movwf	map@in_max+1
  5414  0362  3044               	movlw	68
  5415  0363  00DD               	movwf	map@in_max+2
  5416  0364  3000               	movlw	0
  5417  0365  00D8               	movwf	map@in_min
  5418  0366  3000               	movlw	0
  5419  0367  00D9               	movwf	map@in_min+1
  5420  0368  3000               	movlw	0
  5421  0369  00DA               	movwf	map@in_min+2
  5422  036A  0022               	movlb	2	; select bank2
  5423  036B  0853               	movf	(_knob2_prev+1)^(0+256),w
  5424  036C  0020               	movlb	0	; select bank0
  5425  036D  00A9               	movwf	___awtoft@c+1
  5426  036E  0022               	movlb	2	; select bank2
  5427  036F  0852               	movf	_knob2_prev^(0+256),w
  5428  0370  0020               	movlb	0	; select bank0
  5429  0371  00A8               	movwf	___awtoft@c
  5430  0372  319F  27B8  3182   	fcall	___awtoft
  5431  0375  0020               	movlb	0	; select bank0
  5432  0376  0828               	movf	?___awtoft,w
  5433  0377  00D5               	movwf	map@x
  5434  0378  0829               	movf	?___awtoft+1,w
  5435  0379  00D6               	movwf	map@x+1
  5436  037A  082A               	movf	?___awtoft+2,w
  5437  037B  00D7               	movwf	map@x+2
  5438  037C  3196  26D6  3182   	fcall	_map
  5439  037F  0020               	movlb	0	; select bank0
  5440  0380  0855               	movf	?_map,w
  5441  0381  00E7               	movwf	___fttol@f1
  5442  0382  0856               	movf	?_map+1,w
  5443  0383  00E8               	movwf	___fttol@f1+1
  5444  0384  0857               	movf	?_map+2,w
  5445  0385  00E9               	movwf	___fttol@f1+2
  5446  0386  3197  2761  3182   	fcall	___fttol
  5447  0389  0020               	movlb	0	; select bank0
  5448  038A  0868               	movf	?___fttol+1,w
  5449  038B  0021               	movlb	1	; select bank1
  5450  038C  00BC               	movwf	(main@i+1)^(0+128)
  5451  038D  0020               	movlb	0	; select bank0
  5452  038E  0867               	movf	?___fttol,w
  5453  038F  0021               	movlb	1	; select bank1
  5454  0390  00BB               	movwf	main@i^(0+128)
  5455                           
  5456                           ;main.c: 243: CCPR2 = iB25k[i];
  5457  0391  353B               	lslf	main@i^(0+128),w
  5458  0392  3E20               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5459  0393  0086               	movwf	6
  5460  0394  3004               	movlw	4	; select bank8/9
  5461  0395  0087               	movwf	7
  5462  0396  3F40               	moviw [0]fsr1
  5463  0397  0025               	movlb	5	; select bank5
  5464  0398  0098               	movwf	24	;volatile
  5465  0399  3F41               	moviw [1]fsr1
  5466  039A  0099               	movwf	25	;volatile
  5467                           
  5468                           ;main.c: 244: CCPR3 = B25k[i];
  5469  039B  0021               	movlb	1	; select bank1
  5470  039C  353B               	lslf	main@i^(0+128),w
  5471  039D  3EA0               	addlw	(low (_B25k| (0+768)))& (0+255)
  5472  039E  0086               	movwf	6
  5473  039F  3003               	movlw	3	; select bank7/8
  5474  03A0  0087               	movwf	7
  5475  03A1  3F40               	moviw [0]fsr1
  5476  03A2  0026               	movlb	6	; select bank6
  5477  03A3  0091               	movwf	17	;volatile
  5478  03A4  3F41               	moviw [1]fsr1
  5479  03A5  0092               	movwf	18	;volatile
  5480  03A6                     l4179:	
  5481                           
  5482                           ;main.c: 245: }
  5483                           ;main.c: 255: if (knob_3_pos - knob3_prev >= 4 || knob_3_pos - knob3_prev <= -4) {
  5484  03A6  0022               	movlb	2	; select bank2
  5485  03A7  0954               	comf	_knob3_prev^(0+256),w
  5486  03A8  0021               	movlb	1	; select bank1
  5487  03A9  00AA               	movwf	??_main^(0+128)
  5488  03AA  0022               	movlb	2	; select bank2
  5489  03AB  0955               	comf	(_knob3_prev+1)^(0+256),w
  5490  03AC  0021               	movlb	1	; select bank1
  5491  03AD  00AB               	movwf	(??_main^(0+128)+1)
  5492  03AE  0AAA               	incf	??_main^(0+128),f
  5493  03AF  1903               	skipnz
  5494  03B0  0AAB               	incf	(??_main^(0+128)+1),f
  5495  03B1  0022               	movlb	2	; select bank2
  5496  03B2  0840               	movf	_knob_3_pos^(0+256),w
  5497  03B3  0021               	movlb	1	; select bank1
  5498  03B4  072A               	addwf	??_main^(0+128),w
  5499  03B5  00AC               	movwf	(??_main+2)^(0+128)
  5500  03B6  0022               	movlb	2	; select bank2
  5501  03B7  0841               	movf	(_knob_3_pos+1)^(0+256),w
  5502  03B8  0021               	movlb	1	; select bank1
  5503  03B9  3D2B               	addwfc	(??_main+1)^(0+128),w
  5504  03BA  00AD               	movwf	(??_main+3)^(0+128)
  5505  03BB  082D               	movf	(??_main+3)^(0+128),w
  5506  03BC  3A80               	xorlw	128
  5507  03BD  00AE               	movwf	(??_main+4)^(0+128)
  5508  03BE  3080               	movlw	128
  5509  03BF  022E               	subwf	(??_main+4)^(0+128),w
  5510  03C0  1D03               	skipz
  5511  03C1  2BC4               	goto	u4255
  5512  03C2  3004               	movlw	4
  5513  03C3  022C               	subwf	(??_main+2)^(0+128),w
  5514  03C4                     u4255:	
  5515  03C4  1803               	skipnc
  5516  03C5  2BE6               	goto	l4183
  5517  03C6  0022               	movlb	2	; select bank2
  5518  03C7  0954               	comf	_knob3_prev^(0+256),w
  5519  03C8  0021               	movlb	1	; select bank1
  5520  03C9  00AA               	movwf	??_main^(0+128)
  5521  03CA  0022               	movlb	2	; select bank2
  5522  03CB  0955               	comf	(_knob3_prev+1)^(0+256),w
  5523  03CC  0021               	movlb	1	; select bank1
  5524  03CD  00AB               	movwf	(??_main^(0+128)+1)
  5525  03CE  0AAA               	incf	??_main^(0+128),f
  5526  03CF  1903               	skipnz
  5527  03D0  0AAB               	incf	(??_main^(0+128)+1),f
  5528  03D1  0022               	movlb	2	; select bank2
  5529  03D2  0840               	movf	_knob_3_pos^(0+256),w
  5530  03D3  0021               	movlb	1	; select bank1
  5531  03D4  072A               	addwf	??_main^(0+128),w
  5532  03D5  00AC               	movwf	(??_main+2)^(0+128)
  5533  03D6  0022               	movlb	2	; select bank2
  5534  03D7  0841               	movf	(_knob_3_pos+1)^(0+256),w
  5535  03D8  0021               	movlb	1	; select bank1
  5536  03D9  3D2B               	addwfc	(??_main+1)^(0+128),w
  5537  03DA  00AD               	movwf	(??_main+3)^(0+128)
  5538  03DB  082D               	movf	(??_main+3)^(0+128),w
  5539  03DC  3A80               	xorlw	128
  5540  03DD  00AE               	movwf	(??_main+4)^(0+128)
  5541  03DE  307F               	movlw	127
  5542  03DF  022E               	subwf	(??_main+4)^(0+128),w
  5543  03E0  1D03               	skipz
  5544  03E1  2BE4               	goto	u4265
  5545  03E2  30FD               	movlw	253
  5546  03E3  022C               	subwf	(??_main+2)^(0+128),w
  5547  03E4                     u4265:	
  5548  03E4  1803               	skipnc
  5549  03E5  2C40               	goto	l4191
  5550  03E6                     l4183:	
  5551                           
  5552                           ;main.c: 256: knob3_prev = knob_3_pos;
  5553  03E6  0022               	movlb	2	; select bank2
  5554  03E7  0841               	movf	(_knob_3_pos+1)^(0+256),w
  5555  03E8  00D5               	movwf	(_knob3_prev+1)^(0+256)
  5556  03E9  0840               	movf	_knob_3_pos^(0+256),w
  5557  03EA  00D4               	movwf	_knob3_prev^(0+256)
  5558                           
  5559                           ;main.c: 257: int i = map(knob3_prev, 0, 1023, 16, 0);
  5560  03EB  3000               	movlw	0
  5561  03EC  0020               	movlb	0	; select bank0
  5562  03ED  00E1               	movwf	map@out_max
  5563  03EE  3000               	movlw	0
  5564  03EF  00E2               	movwf	map@out_max+1
  5565  03F0  3000               	movlw	0
  5566  03F1  00E3               	movwf	map@out_max+2
  5567  03F2  3000               	movlw	0
  5568  03F3  00DE               	movwf	map@out_min
  5569  03F4  3080               	movlw	128
  5570  03F5  00DF               	movwf	map@out_min+1
  5571  03F6  3041               	movlw	65
  5572  03F7  00E0               	movwf	map@out_min+2
  5573  03F8  30C0               	movlw	192
  5574  03F9  00DB               	movwf	map@in_max
  5575  03FA  307F               	movlw	127
  5576  03FB  00DC               	movwf	map@in_max+1
  5577  03FC  3044               	movlw	68
  5578  03FD  00DD               	movwf	map@in_max+2
  5579  03FE  3000               	movlw	0
  5580  03FF  00D8               	movwf	map@in_min
  5581  0400  3000               	movlw	0
  5582  0401  00D9               	movwf	map@in_min+1
  5583  0402  3000               	movlw	0
  5584  0403  00DA               	movwf	map@in_min+2
  5585  0404  0022               	movlb	2	; select bank2
  5586  0405  0855               	movf	(_knob3_prev+1)^(0+256),w
  5587  0406  0020               	movlb	0	; select bank0
  5588  0407  00A9               	movwf	___awtoft@c+1
  5589  0408  0022               	movlb	2	; select bank2
  5590  0409  0854               	movf	_knob3_prev^(0+256),w
  5591  040A  0020               	movlb	0	; select bank0
  5592  040B  00A8               	movwf	___awtoft@c
  5593  040C  319F  27B8  3182   	fcall	___awtoft
  5594  040F  0020               	movlb	0	; select bank0
  5595  0410  0828               	movf	?___awtoft,w
  5596  0411  00D5               	movwf	map@x
  5597  0412  0829               	movf	?___awtoft+1,w
  5598  0413  00D6               	movwf	map@x+1
  5599  0414  082A               	movf	?___awtoft+2,w
  5600  0415  00D7               	movwf	map@x+2
  5601  0416  3196  26D6  3182   	fcall	_map
  5602  0419  0020               	movlb	0	; select bank0
  5603  041A  0855               	movf	?_map,w
  5604  041B  00E7               	movwf	___fttol@f1
  5605  041C  0856               	movf	?_map+1,w
  5606  041D  00E8               	movwf	___fttol@f1+1
  5607  041E  0857               	movf	?_map+2,w
  5608  041F  00E9               	movwf	___fttol@f1+2
  5609  0420  3197  2761  3182   	fcall	___fttol
  5610  0423  0020               	movlb	0	; select bank0
  5611  0424  0868               	movf	?___fttol+1,w
  5612  0425  0021               	movlb	1	; select bank1
  5613  0426  00BE               	movwf	(main@i_319+1)^(0+128)
  5614  0427  0020               	movlb	0	; select bank0
  5615  0428  0867               	movf	?___fttol,w
  5616  0429  0021               	movlb	1	; select bank1
  5617  042A  00BD               	movwf	main@i_319^(0+128)
  5618                           
  5619                           ;main.c: 258: CCPR4 = iB25k[i];
  5620  042B  353D               	lslf	main@i_319^(0+128),w
  5621  042C  3E20               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5622  042D  0086               	movwf	6
  5623  042E  3004               	movlw	4	; select bank8/9
  5624  042F  0087               	movwf	7
  5625  0430  3F40               	moviw [0]fsr1
  5626  0431  0026               	movlb	6	; select bank6
  5627  0432  0098               	movwf	24	;volatile
  5628  0433  3F41               	moviw [1]fsr1
  5629  0434  0099               	movwf	25	;volatile
  5630                           
  5631                           ;main.c: 259: CCPR5 = B25k[i];
  5632  0435  0021               	movlb	1	; select bank1
  5633  0436  353D               	lslf	main@i_319^(0+128),w
  5634  0437  3EA0               	addlw	(low (_B25k| (0+768)))& (0+255)
  5635  0438  0086               	movwf	6
  5636  0439  3003               	movlw	3	; select bank7/8
  5637  043A  0087               	movwf	7
  5638  043B  3F40               	moviw [0]fsr1
  5639  043C  0026               	movlb	6	; select bank6
  5640  043D  009C               	movwf	28	;volatile
  5641  043E  3F41               	moviw [1]fsr1
  5642  043F  009D               	movwf	29	;volatile
  5643  0440                     l4191:	
  5644                           
  5645                           ;main.c: 260: }
  5646                           ;main.c: 270: if (knob_4_pos - knob4_prev >= 4 || knob_4_pos - knob4_prev <= -4) {
  5647  0440  0022               	movlb	2	; select bank2
  5648  0441  0956               	comf	_knob4_prev^(0+256),w
  5649  0442  0021               	movlb	1	; select bank1
  5650  0443  00AA               	movwf	??_main^(0+128)
  5651  0444  0022               	movlb	2	; select bank2
  5652  0445  0957               	comf	(_knob4_prev+1)^(0+256),w
  5653  0446  0021               	movlb	1	; select bank1
  5654  0447  00AB               	movwf	(??_main^(0+128)+1)
  5655  0448  0AAA               	incf	??_main^(0+128),f
  5656  0449  1903               	skipnz
  5657  044A  0AAB               	incf	(??_main^(0+128)+1),f
  5658  044B  0022               	movlb	2	; select bank2
  5659  044C  0842               	movf	_knob_4_pos^(0+256),w
  5660  044D  0021               	movlb	1	; select bank1
  5661  044E  072A               	addwf	??_main^(0+128),w
  5662  044F  00AC               	movwf	(??_main+2)^(0+128)
  5663  0450  0022               	movlb	2	; select bank2
  5664  0451  0843               	movf	(_knob_4_pos+1)^(0+256),w
  5665  0452  0021               	movlb	1	; select bank1
  5666  0453  3D2B               	addwfc	(??_main+1)^(0+128),w
  5667  0454  00AD               	movwf	(??_main+3)^(0+128)
  5668  0455  082D               	movf	(??_main+3)^(0+128),w
  5669  0456  3A80               	xorlw	128
  5670  0457  00AE               	movwf	(??_main+4)^(0+128)
  5671  0458  3080               	movlw	128
  5672  0459  022E               	subwf	(??_main+4)^(0+128),w
  5673  045A  1D03               	skipz
  5674  045B  2C5E               	goto	u4275
  5675  045C  3004               	movlw	4
  5676  045D  022C               	subwf	(??_main+2)^(0+128),w
  5677  045E                     u4275:	
  5678  045E  1803               	skipnc
  5679  045F  2C80               	goto	l4195
  5680  0460  0022               	movlb	2	; select bank2
  5681  0461  0956               	comf	_knob4_prev^(0+256),w
  5682  0462  0021               	movlb	1	; select bank1
  5683  0463  00AA               	movwf	??_main^(0+128)
  5684  0464  0022               	movlb	2	; select bank2
  5685  0465  0957               	comf	(_knob4_prev+1)^(0+256),w
  5686  0466  0021               	movlb	1	; select bank1
  5687  0467  00AB               	movwf	(??_main^(0+128)+1)
  5688  0468  0AAA               	incf	??_main^(0+128),f
  5689  0469  1903               	skipnz
  5690  046A  0AAB               	incf	(??_main^(0+128)+1),f
  5691  046B  0022               	movlb	2	; select bank2
  5692  046C  0842               	movf	_knob_4_pos^(0+256),w
  5693  046D  0021               	movlb	1	; select bank1
  5694  046E  072A               	addwf	??_main^(0+128),w
  5695  046F  00AC               	movwf	(??_main+2)^(0+128)
  5696  0470  0022               	movlb	2	; select bank2
  5697  0471  0843               	movf	(_knob_4_pos+1)^(0+256),w
  5698  0472  0021               	movlb	1	; select bank1
  5699  0473  3D2B               	addwfc	(??_main+1)^(0+128),w
  5700  0474  00AD               	movwf	(??_main+3)^(0+128)
  5701  0475  082D               	movf	(??_main+3)^(0+128),w
  5702  0476  3A80               	xorlw	128
  5703  0477  00AE               	movwf	(??_main+4)^(0+128)
  5704  0478  307F               	movlw	127
  5705  0479  022E               	subwf	(??_main+4)^(0+128),w
  5706  047A  1D03               	skipz
  5707  047B  2C7E               	goto	u4285
  5708  047C  30FD               	movlw	253
  5709  047D  022C               	subwf	(??_main+2)^(0+128),w
  5710  047E                     u4285:	
  5711  047E  1803               	skipnc
  5712  047F  2CC5               	goto	l4199
  5713  0480                     l4195:	
  5714                           
  5715                           ;main.c: 271: knob4_prev = knob_4_pos;
  5716  0480  0022               	movlb	2	; select bank2
  5717  0481  0843               	movf	(_knob_4_pos+1)^(0+256),w
  5718  0482  00D7               	movwf	(_knob4_prev+1)^(0+256)
  5719  0483  0842               	movf	_knob_4_pos^(0+256),w
  5720  0484  00D6               	movwf	_knob4_prev^(0+256)
  5721                           
  5722                           ;main.c: 272: mod_delay_time = map(knob4_prev, 0, 1023, 60, 1000);
  5723  0485  3000               	movlw	0
  5724  0486  0020               	movlb	0	; select bank0
  5725  0487  00E1               	movwf	map@out_max
  5726  0488  307A               	movlw	122
  5727  0489  00E2               	movwf	map@out_max+1
  5728  048A  3044               	movlw	68
  5729  048B  00E3               	movwf	map@out_max+2
  5730  048C  3000               	movlw	0
  5731  048D  00DE               	movwf	map@out_min
  5732  048E  3070               	movlw	112
  5733  048F  00DF               	movwf	map@out_min+1
  5734  0490  3042               	movlw	66
  5735  0491  00E0               	movwf	map@out_min+2
  5736  0492  30C0               	movlw	192
  5737  0493  00DB               	movwf	map@in_max
  5738  0494  307F               	movlw	127
  5739  0495  00DC               	movwf	map@in_max+1
  5740  0496  3044               	movlw	68
  5741  0497  00DD               	movwf	map@in_max+2
  5742  0498  3000               	movlw	0
  5743  0499  00D8               	movwf	map@in_min
  5744  049A  3000               	movlw	0
  5745  049B  00D9               	movwf	map@in_min+1
  5746  049C  3000               	movlw	0
  5747  049D  00DA               	movwf	map@in_min+2
  5748  049E  0022               	movlb	2	; select bank2
  5749  049F  0857               	movf	(_knob4_prev+1)^(0+256),w
  5750  04A0  0020               	movlb	0	; select bank0
  5751  04A1  00A9               	movwf	___awtoft@c+1
  5752  04A2  0022               	movlb	2	; select bank2
  5753  04A3  0856               	movf	_knob4_prev^(0+256),w
  5754  04A4  0020               	movlb	0	; select bank0
  5755  04A5  00A8               	movwf	___awtoft@c
  5756  04A6  319F  27B8  3182   	fcall	___awtoft
  5757  04A9  0020               	movlb	0	; select bank0
  5758  04AA  0828               	movf	?___awtoft,w
  5759  04AB  00D5               	movwf	map@x
  5760  04AC  0829               	movf	?___awtoft+1,w
  5761  04AD  00D6               	movwf	map@x+1
  5762  04AE  082A               	movf	?___awtoft+2,w
  5763  04AF  00D7               	movwf	map@x+2
  5764  04B0  3196  26D6  3182   	fcall	_map
  5765  04B3  0020               	movlb	0	; select bank0
  5766  04B4  0855               	movf	?_map,w
  5767  04B5  00E7               	movwf	___fttol@f1
  5768  04B6  0856               	movf	?_map+1,w
  5769  04B7  00E8               	movwf	___fttol@f1+1
  5770  04B8  0857               	movf	?_map+2,w
  5771  04B9  00E9               	movwf	___fttol@f1+2
  5772  04BA  3197  2761  3182   	fcall	___fttol
  5773  04BD  0020               	movlb	0	; select bank0
  5774  04BE  0868               	movf	?___fttol+1,w
  5775  04BF  0022               	movlb	2	; select bank2
  5776  04C0  00DB               	movwf	(_mod_delay_time+1)^(0+256)
  5777  04C1  0020               	movlb	0	; select bank0
  5778  04C2  0867               	movf	?___fttol,w
  5779  04C3  0022               	movlb	2	; select bank2
  5780  04C4  00DA               	movwf	_mod_delay_time^(0+256)
  5781  04C5                     l4199:	
  5782                           
  5783                           ;main.c: 273: }
  5784                           ;main.c: 281: if (knob_5_pos - knob5_prev >= 4 || knob_5_pos - knob5_prev <= -4) {
  5785  04C5  0022               	movlb	2	; select bank2
  5786  04C6  0958               	comf	_knob5_prev^(0+256),w
  5787  04C7  0021               	movlb	1	; select bank1
  5788  04C8  00AA               	movwf	??_main^(0+128)
  5789  04C9  0022               	movlb	2	; select bank2
  5790  04CA  0959               	comf	(_knob5_prev+1)^(0+256),w
  5791  04CB  0021               	movlb	1	; select bank1
  5792  04CC  00AB               	movwf	(??_main^(0+128)+1)
  5793  04CD  0AAA               	incf	??_main^(0+128),f
  5794  04CE  1903               	skipnz
  5795  04CF  0AAB               	incf	(??_main^(0+128)+1),f
  5796  04D0  0022               	movlb	2	; select bank2
  5797  04D1  0844               	movf	_knob_5_pos^(0+256),w
  5798  04D2  0021               	movlb	1	; select bank1
  5799  04D3  072A               	addwf	??_main^(0+128),w
  5800  04D4  00AC               	movwf	(??_main+2)^(0+128)
  5801  04D5  0022               	movlb	2	; select bank2
  5802  04D6  0845               	movf	(_knob_5_pos+1)^(0+256),w
  5803  04D7  0021               	movlb	1	; select bank1
  5804  04D8  3D2B               	addwfc	(??_main+1)^(0+128),w
  5805  04D9  00AD               	movwf	(??_main+3)^(0+128)
  5806  04DA  082D               	movf	(??_main+3)^(0+128),w
  5807  04DB  3A80               	xorlw	128
  5808  04DC  00AE               	movwf	(??_main+4)^(0+128)
  5809  04DD  3080               	movlw	128
  5810  04DE  022E               	subwf	(??_main+4)^(0+128),w
  5811  04DF  1D03               	skipz
  5812  04E0  2CE3               	goto	u4295
  5813  04E1  3004               	movlw	4
  5814  04E2  022C               	subwf	(??_main+2)^(0+128),w
  5815  04E3                     u4295:	
  5816  04E3  1803               	skipnc
  5817  04E4  2D05               	goto	l4203
  5818  04E5  0022               	movlb	2	; select bank2
  5819  04E6  0958               	comf	_knob5_prev^(0+256),w
  5820  04E7  0021               	movlb	1	; select bank1
  5821  04E8  00AA               	movwf	??_main^(0+128)
  5822  04E9  0022               	movlb	2	; select bank2
  5823  04EA  0959               	comf	(_knob5_prev+1)^(0+256),w
  5824  04EB  0021               	movlb	1	; select bank1
  5825  04EC  00AB               	movwf	(??_main^(0+128)+1)
  5826  04ED  0AAA               	incf	??_main^(0+128),f
  5827  04EE  1903               	skipnz
  5828  04EF  0AAB               	incf	(??_main^(0+128)+1),f
  5829  04F0  0022               	movlb	2	; select bank2
  5830  04F1  0844               	movf	_knob_5_pos^(0+256),w
  5831  04F2  0021               	movlb	1	; select bank1
  5832  04F3  072A               	addwf	??_main^(0+128),w
  5833  04F4  00AC               	movwf	(??_main+2)^(0+128)
  5834  04F5  0022               	movlb	2	; select bank2
  5835  04F6  0845               	movf	(_knob_5_pos+1)^(0+256),w
  5836  04F7  0021               	movlb	1	; select bank1
  5837  04F8  3D2B               	addwfc	(??_main+1)^(0+128),w
  5838  04F9  00AD               	movwf	(??_main+3)^(0+128)
  5839  04FA  082D               	movf	(??_main+3)^(0+128),w
  5840  04FB  3A80               	xorlw	128
  5841  04FC  00AE               	movwf	(??_main+4)^(0+128)
  5842  04FD  307F               	movlw	127
  5843  04FE  022E               	subwf	(??_main+4)^(0+128),w
  5844  04FF  1D03               	skipz
  5845  0500  2D03               	goto	u4305
  5846  0501  30FD               	movlw	253
  5847  0502  022C               	subwf	(??_main+2)^(0+128),w
  5848  0503                     u4305:	
  5849  0503  1803               	skipnc
  5850  0504  2D0A               	goto	l285
  5851  0505                     l4203:	
  5852                           
  5853                           ;main.c: 282: knob5_prev = knob_5_pos;
  5854  0505  0022               	movlb	2	; select bank2
  5855  0506  0845               	movf	(_knob_5_pos+1)^(0+256),w
  5856  0507  00D9               	movwf	(_knob5_prev+1)^(0+256)
  5857  0508  0844               	movf	_knob_5_pos^(0+256),w
  5858  0509  00D8               	movwf	_knob5_prev^(0+256)
  5859  050A                     l285:	
  5860                           
  5861                           ;main.c: 283: }
  5862                           ;main.c: 296: if (mod_timer >= mod_delay_time) {
  5863  050A  0022               	movlb	2	; select bank2
  5864  050B  085A               	movf	_mod_delay_time^(0+256),w
  5865  050C  0021               	movlb	1	; select bank1
  5866  050D  00AA               	movwf	??_main^(0+128)
  5867  050E  0022               	movlb	2	; select bank2
  5868  050F  085B               	movf	(_mod_delay_time+1)^(0+256),w
  5869  0510  0021               	movlb	1	; select bank1
  5870  0511  00AB               	movwf	(??_main^(0+128)+1)
  5871  0512  3000               	movlw	0
  5872  0513  1BAB               	btfsc	(??_main^(0+128)+1),7
  5873  0514  30FF               	movlw	255
  5874  0515  00AC               	movwf	(??_main^(0+128)+2)
  5875  0516  00AD               	movwf	(??_main^(0+128)+3)
  5876  0517  0022               	movlb	2	; select bank2
  5877  0518  0827               	movf	(_mod_timer+3)^(0+256),w	;volatile
  5878  0519  3A80               	xorlw	128
  5879  051A  0021               	movlb	1	; select bank1
  5880  051B  00AE               	movwf	(??_main+4)^(0+128)
  5881  051C  082D               	movf	(??_main+3)^(0+128),w
  5882  051D  3A80               	xorlw	128
  5883  051E  022E               	subwf	(??_main+4)^(0+128),w
  5884  051F  0022               	movlb	2	; select bank2
  5885  0520  1D03               	skipz
  5886  0521  2D32               	goto	u4313
  5887  0522  0021               	movlb	1	; select bank1
  5888  0523  082C               	movf	(??_main+2)^(0+128),w
  5889  0524  0022               	movlb	2	; select bank2
  5890  0525  0226               	subwf	(_mod_timer+2)^(0+256),w	;volatile
  5891  0526  1D03               	skipz
  5892  0527  2D32               	goto	u4313
  5893  0528  0021               	movlb	1	; select bank1
  5894  0529  082B               	movf	(??_main+1)^(0+128),w
  5895  052A  0022               	movlb	2	; select bank2
  5896  052B  0225               	subwf	(_mod_timer+1)^(0+256),w	;volatile
  5897  052C  1D03               	skipz
  5898  052D  2D32               	goto	u4313
  5899  052E  0021               	movlb	1	; select bank1
  5900  052F  082A               	movf	??_main^(0+128),w
  5901  0530  0022               	movlb	2	; select bank2
  5902  0531  0224               	subwf	_mod_timer^(0+256),w	;volatile
  5903  0532                     u4313:	
  5904  0532  1C03               	skipc
  5905  0533  2E57               	goto	l4257
  5906                           
  5907                           ;main.c: 298: mod_counter = mod_counter + 1;
  5908  0534  0021               	movlb	1	; select bank1
  5909  0535  084D               	movf	_mod_counter^(0+128),w
  5910  0536  3E01               	addlw	1
  5911  0537  00CD               	movwf	_mod_counter^(0+128)
  5912  0538  3000               	movlw	0
  5913  0539  3D4E               	addwfc	(_mod_counter+1)^(0+128),w
  5914  053A  00CE               	movwf	(_mod_counter+1)^(0+128)
  5915                           
  5916                           ;main.c: 299: mod_timer = 0;
  5917  053B  3000               	movlw	0
  5918  053C  0022               	movlb	2	; select bank2
  5919  053D  00A7               	movwf	(_mod_timer+3)^(0+256)	;volatile
  5920  053E  3000               	movlw	0
  5921  053F  00A6               	movwf	(_mod_timer+2)^(0+256)	;volatile
  5922  0540  3000               	movlw	0
  5923  0541  00A5               	movwf	(_mod_timer+1)^(0+256)	;volatile
  5924  0542  3000               	movlw	0
  5925  0543  00A4               	movwf	_mod_timer^(0+256)	;volatile
  5926                           
  5927                           ;main.c: 301: if (bottom_push_state == 1 || bottom_push_state == 5) {
  5928  0544  0021               	movlb	1	; select bank1
  5929  0545  0362               	decf	_bottom_push_state^(0+128),w
  5930  0546  0463               	iorwf	(_bottom_push_state+1)^(0+128),w
  5931  0547  1903               	btfsc	3,2
  5932  0548  2D4E               	goto	l4213
  5933  0549  3005               	movlw	5
  5934  054A  0662               	xorwf	_bottom_push_state^(0+128),w
  5935  054B  0463               	iorwf	(_bottom_push_state+1)^(0+128),w
  5936  054C  1D03               	btfss	3,2
  5937  054D  2D57               	goto	l4217
  5938  054E                     l4213:	
  5939                           
  5940                           ;main.c: 302: if (mod_counter >= 61) {
  5941  054E  084E               	movf	(_mod_counter+1)^(0+128),w
  5942  054F  3A80               	xorlw	128
  5943  0550  00AA               	movwf	??_main^(0+128)
  5944  0551  3080               	movlw	128
  5945  0552  022A               	subwf	??_main^(0+128),w
  5946  0553  1D03               	skipz
  5947  0554  2D60               	goto	u4355
  5948  0555  303D               	movlw	61
  5949  0556  2D5F               	goto	L1
  5950  0557                     l4217:	
  5951                           ;main.c: 304: }
  5952                           ;main.c: 305: } else {
  5953                           
  5954                           ;main.c: 303: mod_counter = 0;
  5955                           
  5956                           
  5957                           ;main.c: 306: if (mod_counter > 31) {
  5958  0557  084E               	movf	(_mod_counter+1)^(0+128),w
  5959  0558  3A80               	xorlw	128
  5960  0559  00AA               	movwf	??_main^(0+128)
  5961  055A  3080               	movlw	128
  5962  055B  022A               	subwf	??_main^(0+128),w
  5963  055C  1D03               	skipz
  5964  055D  2D60               	goto	u4355
  5965  055E  3020               	movlw	32
  5966  055F                     L1:	
  5967  055F  024D               	subwf	_mod_counter^(0+128),w
  5968  0560                     u4355:	
  5969  0560  1C03               	skipc
  5970  0561  2D65               	goto	l4221
  5971                           
  5972                           ;main.c: 307: mod_counter = 0;
  5973  0562  0021               	movlb	1	; select bank1
  5974  0563  01CD               	clrf	_mod_counter^(0+128)
  5975  0564  01CE               	clrf	(_mod_counter+1)^(0+128)
  5976  0565                     l4221:	
  5977                           
  5978                           ;main.c: 308: }
  5979                           ;main.c: 309: }
  5980                           ;main.c: 312: signed int adjusted_pot_value = map(knob5_prev, 0, 1023, 1275, 0);
  5981  0565  3000               	movlw	0
  5982  0566  0020               	movlb	0	; select bank0
  5983  0567  00E1               	movwf	map@out_max
  5984  0568  3000               	movlw	0
  5985  0569  00E2               	movwf	map@out_max+1
  5986  056A  3000               	movlw	0
  5987  056B  00E3               	movwf	map@out_max+2
  5988  056C  3060               	movlw	96
  5989  056D  00DE               	movwf	map@out_min
  5990  056E  309F               	movlw	159
  5991  056F  00DF               	movwf	map@out_min+1
  5992  0570  3044               	movlw	68
  5993  0571  00E0               	movwf	map@out_min+2
  5994  0572  30C0               	movlw	192
  5995  0573  00DB               	movwf	map@in_max
  5996  0574  307F               	movlw	127
  5997  0575  00DC               	movwf	map@in_max+1
  5998  0576  3044               	movlw	68
  5999  0577  00DD               	movwf	map@in_max+2
  6000  0578  3000               	movlw	0
  6001  0579  00D8               	movwf	map@in_min
  6002  057A  3000               	movlw	0
  6003  057B  00D9               	movwf	map@in_min+1
  6004  057C  3000               	movlw	0
  6005  057D  00DA               	movwf	map@in_min+2
  6006  057E  0022               	movlb	2	; select bank2
  6007  057F  0859               	movf	(_knob5_prev+1)^(0+256),w
  6008  0580  0020               	movlb	0	; select bank0
  6009  0581  00A9               	movwf	___awtoft@c+1
  6010  0582  0022               	movlb	2	; select bank2
  6011  0583  0858               	movf	_knob5_prev^(0+256),w
  6012  0584  0020               	movlb	0	; select bank0
  6013  0585  00A8               	movwf	___awtoft@c
  6014  0586  319F  27B8  3182   	fcall	___awtoft
  6015  0589  0020               	movlb	0	; select bank0
  6016  058A  0828               	movf	?___awtoft,w
  6017  058B  00D5               	movwf	map@x
  6018  058C  0829               	movf	?___awtoft+1,w
  6019  058D  00D6               	movwf	map@x+1
  6020  058E  082A               	movf	?___awtoft+2,w
  6021  058F  00D7               	movwf	map@x+2
  6022  0590  3196  26D6  3182   	fcall	_map
  6023  0593  0020               	movlb	0	; select bank0
  6024  0594  0855               	movf	?_map,w
  6025  0595  00E7               	movwf	___fttol@f1
  6026  0596  0856               	movf	?_map+1,w
  6027  0597  00E8               	movwf	___fttol@f1+1
  6028  0598  0857               	movf	?_map+2,w
  6029  0599  00E9               	movwf	___fttol@f1+2
  6030  059A  3197  2761  3182   	fcall	___fttol
  6031  059D  0020               	movlb	0	; select bank0
  6032  059E  0868               	movf	?___fttol+1,w
  6033  059F  0021               	movlb	1	; select bank1
  6034  05A0  00BA               	movwf	(main@adjusted_pot_value+1)^(0+128)
  6035  05A1  0020               	movlb	0	; select bank0
  6036  05A2  0867               	movf	?___fttol,w
  6037  05A3  0021               	movlb	1	; select bank1
  6038  05A4  00B9               	movwf	main@adjusted_pot_value^(0+128)
  6039                           
  6040                           ;main.c: 313: switch (bottom_push_state) {
  6041  05A5  2E01               	goto	l4251
  6042  05A6                     l4223:	
  6043                           ;main.c: 314: case 1:
  6044                           
  6045                           
  6046                           ;main.c: 315: mod_value = mod5[mod_counter];
  6047  05A6  084E               	movf	(_mod_counter+1)^(0+128),w
  6048  05A7  00AB               	movwf	(??_main^(0+128)+1)
  6049  05A8  084D               	movf	_mod_counter^(0+128),w
  6050  05A9  00AA               	movwf	??_main^(0+128)
  6051  05AA  35AA               	lslf	??_main^(0+128),f
  6052  05AB  0DAB               	rlf	(??_main^(0+128)+1),f
  6053  05AC  3078               	movlw	120
  6054  05AD  00AC               	movwf	(??_main+2)^(0+128)
  6055  05AE  3023               	movlw	35
  6056  05AF  00AD               	movwf	((??_main+2)^(0+128)+1)
  6057  05B0  082A               	movf	??_main^(0+128),w
  6058  05B1  072C               	addwf	(??_main+2)^(0+128),w
  6059  05B2  0086               	movwf	6
  6060  05B3  082B               	movf	(??_main+1)^(0+128),w
  6061  05B4  3D2D               	addwfc	(??_main+3)^(0+128),w
  6062  05B5  0087               	movwf	7
  6063  05B6  3F40               	moviw [0]fsr1
  6064  05B7  0022               	movlb	2	; select bank2
  6065  05B8  00C6               	movwf	_mod_value^(0+256)
  6066  05B9  3F41               	moviw [1]fsr1
  6067  05BA  2DDB               	goto	L4
  6068  05BB                     l4227:	
  6069                           ;main.c: 318: case 2:
  6070                           
  6071                           ;main.c: 317: break;
  6072                           
  6073                           ;main.c: 316: PORTCbits.RC4 = 0;
  6074                           
  6075                           
  6076                           ;main.c: 319: mod_value = mod2[mod_counter];
  6077  05BB  0021               	movlb	1	; select bank1
  6078  05BC  354D               	lslf	_mod_counter^(0+128),w
  6079  05BD  3E20               	addlw	(low (_mod2| (0+512)))& (0+255)
  6080  05BE  0086               	movwf	6
  6081  05BF  3002               	movlw	2	; select bank4/5
  6082  05C0  0087               	movwf	7
  6083  05C1  3F40               	moviw [0]fsr1
  6084  05C2  0022               	movlb	2	; select bank2
  6085  05C3  00C6               	movwf	_mod_value^(0+256)
  6086  05C4  3F41               	moviw [1]fsr1
  6087  05C5  2DDB               	goto	L4
  6088  05C6                     l4231:	
  6089                           ;main.c: 322: case 3:
  6090                           
  6091                           ;main.c: 321: break;
  6092                           
  6093                           ;main.c: 320: PORTCbits.RC4 = 0;
  6094                           
  6095                           
  6096                           ;main.c: 323: mod_value = mod3[mod_counter];
  6097  05C6  0021               	movlb	1	; select bank1
  6098  05C7  354D               	lslf	_mod_counter^(0+128),w
  6099  05C8  3EA0               	addlw	(low (_mod3| (0+512)))& (0+255)
  6100  05C9  0086               	movwf	6
  6101  05CA  3002               	movlw	2	; select bank5/6
  6102  05CB  0087               	movwf	7
  6103  05CC  3F40               	moviw [0]fsr1
  6104  05CD  0022               	movlb	2	; select bank2
  6105  05CE  00C6               	movwf	_mod_value^(0+256)
  6106  05CF  3F41               	moviw [1]fsr1
  6107  05D0  2DDB               	goto	L4
  6108  05D1                     l4235:	
  6109                           ;main.c: 326: case 4:
  6110                           
  6111                           ;main.c: 325: break;
  6112                           
  6113                           ;main.c: 324: PORTCbits.RC4 = 0;
  6114                           
  6115                           
  6116                           ;main.c: 327: mod_value = mod4[mod_counter];
  6117  05D1  0021               	movlb	1	; select bank1
  6118  05D2  354D               	lslf	_mod_counter^(0+128),w
  6119  05D3  3E20               	addlw	(low (_mod4| (0+768)))& (0+255)
  6120  05D4  0086               	movwf	6
  6121  05D5  3003               	movlw	3	; select bank6/7
  6122  05D6  0087               	movwf	7
  6123  05D7  3F40               	moviw [0]fsr1
  6124  05D8  0022               	movlb	2	; select bank2
  6125  05D9  00C6               	movwf	_mod_value^(0+256)
  6126  05DA  3F41               	moviw [1]fsr1
  6127  05DB                     L4:	
  6128  05DB  00C7               	movwf	(_mod_value+1)^(0+256)
  6129  05DC  2DFE               	goto	l4247
  6130  05DD                     l4239:	
  6131                           ;main.c: 330: case 5:
  6132                           
  6133                           ;main.c: 329: break;
  6134                           
  6135                           ;main.c: 328: PORTCbits.RC4 = 0;
  6136                           
  6137                           
  6138                           ;main.c: 331: mod_value = mod5[mod_counter];
  6139  05DD  0021               	movlb	1	; select bank1
  6140  05DE  084E               	movf	(_mod_counter+1)^(0+128),w
  6141  05DF  00AB               	movwf	(??_main^(0+128)+1)
  6142  05E0  084D               	movf	_mod_counter^(0+128),w
  6143  05E1  00AA               	movwf	??_main^(0+128)
  6144  05E2  35AA               	lslf	??_main^(0+128),f
  6145  05E3  0DAB               	rlf	(??_main^(0+128)+1),f
  6146  05E4  3078               	movlw	120
  6147  05E5  00AC               	movwf	(??_main+2)^(0+128)
  6148  05E6  3023               	movlw	35
  6149  05E7  00AD               	movwf	((??_main+2)^(0+128)+1)
  6150  05E8  082A               	movf	??_main^(0+128),w
  6151  05E9  072C               	addwf	(??_main+2)^(0+128),w
  6152  05EA  0086               	movwf	6
  6153  05EB  082B               	movf	(??_main+1)^(0+128),w
  6154  05EC  3D2D               	addwfc	(??_main+3)^(0+128),w
  6155  05ED  0087               	movwf	7
  6156  05EE  3F40               	moviw [0]fsr1
  6157  05EF  0022               	movlb	2	; select bank2
  6158  05F0  00C6               	movwf	_mod_value^(0+256)
  6159  05F1  3F41               	moviw [1]fsr1
  6160  05F2  00C7               	movwf	(_mod_value+1)^(0+256)
  6161                           
  6162                           ;main.c: 332: adjusted_pot_value = 1275;
  6163  05F3  30FB               	movlw	251
  6164  05F4  0021               	movlb	1	; select bank1
  6165  05F5  00B9               	movwf	main@adjusted_pot_value^(0+128)
  6166  05F6  3004               	movlw	4
  6167  05F7  00BA               	movwf	(main@adjusted_pot_value^(0+128)+1)
  6168                           
  6169                           ;main.c: 333: PORTCbits.RC4 = 1;
  6170  05F8  0020               	movlb	0	; select bank0
  6171  05F9  160E               	bsf	14,4	;volatile
  6172                           
  6173                           ;main.c: 334: break;
  6174  05FA  2E1B               	goto	l4253
  6175  05FB                     l4245:	
  6176                           ;main.c: 335: case 6:
  6177                           
  6178                           
  6179                           ;main.c: 336: mod_value = 0;
  6180  05FB  0022               	movlb	2	; select bank2
  6181  05FC  01C6               	clrf	_mod_value^(0+256)
  6182  05FD  01C7               	clrf	(_mod_value+1)^(0+256)
  6183  05FE                     l4247:	
  6184                           
  6185                           ;main.c: 337: PORTCbits.RC4 = 0;
  6186  05FE  0020               	movlb	0	; select bank0
  6187  05FF  120E               	bcf	14,4	;volatile
  6188                           
  6189                           ;main.c: 339: }
  6190                           
  6191                           ;main.c: 338: break;
  6192  0600  2E1B               	goto	l4253
  6193  0601                     l4251:	
  6194                           
  6195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6196                           ; Switch size 1, requested type "space"
  6197                           ; Number of cases is 1, Range of values is 0 to 0
  6198                           ; switch strategies available:
  6199                           ; Name         Instructions Cycles
  6200                           ; simple_byte            4     3 (average)
  6201                           ; direct_byte            8     6 (fixed)
  6202                           ; jumptable            260     6 (fixed)
  6203                           ;	Chosen strategy is simple_byte
  6204  0601  0021               	movlb	1	; select bank1
  6205  0602  0863               	movf	(_bottom_push_state+1)^(0+128),w
  6206  0603  3A00               	xorlw	0	; case 0
  6207  0604  1903               	skipnz
  6208  0605  2E07               	goto	l4529
  6209  0606  2E1B               	goto	l4253
  6210  0607                     l4529:	
  6211                           
  6212                           ; Switch size 1, requested type "space"
  6213                           ; Number of cases is 6, Range of values is 1 to 6
  6214                           ; switch strategies available:
  6215                           ; Name         Instructions Cycles
  6216                           ; simple_byte           19    10 (average)
  6217                           ; direct_byte           21     9 (fixed)
  6218                           ; jumptable            263     9 (fixed)
  6219                           ;	Chosen strategy is simple_byte
  6220  0607  0862               	movf	_bottom_push_state^(0+128),w
  6221  0608  3A01               	xorlw	1	; case 1
  6222  0609  1903               	skipnz
  6223  060A  2DA6               	goto	l4223
  6224  060B  3A03               	xorlw	3	; case 2
  6225  060C  1903               	skipnz
  6226  060D  2DBB               	goto	l4227
  6227  060E  3A01               	xorlw	1	; case 3
  6228  060F  1903               	skipnz
  6229  0610  2DC6               	goto	l4231
  6230  0611  3A07               	xorlw	7	; case 4
  6231  0612  1903               	skipnz
  6232  0613  2DD1               	goto	l4235
  6233  0614  3A01               	xorlw	1	; case 5
  6234  0615  1903               	skipnz
  6235  0616  2DDD               	goto	l4239
  6236  0617  3A03               	xorlw	3	; case 6
  6237  0618  1903               	skipnz
  6238  0619  2DFB               	goto	l4245
  6239  061A  2E1B               	goto	l4253
  6240  061B                     l4253:	
  6241                           
  6242                           ;main.c: 340: mod_value = modulation(mod_value, adjusted_pot_value);
  6243  061B  0022               	movlb	2	; select bank2
  6244  061C  0847               	movf	(_mod_value+1)^(0+256),w
  6245  061D  0020               	movlb	0	; select bank0
  6246  061E  00B6               	movwf	modulation@x+1
  6247  061F  0022               	movlb	2	; select bank2
  6248  0620  0846               	movf	_mod_value^(0+256),w
  6249  0621  0020               	movlb	0	; select bank0
  6250  0622  00B5               	movwf	modulation@x
  6251  0623  0021               	movlb	1	; select bank1
  6252  0624  083A               	movf	(main@adjusted_pot_value+1)^(0+128),w
  6253  0625  0020               	movlb	0	; select bank0
  6254  0626  00B8               	movwf	modulation@y+1
  6255  0627  0021               	movlb	1	; select bank1
  6256  0628  0839               	movf	main@adjusted_pot_value^(0+128),w
  6257  0629  0020               	movlb	0	; select bank0
  6258  062A  00B7               	movwf	modulation@y
  6259  062B  3192  22C3  3182   	fcall	_modulation
  6260  062E  0020               	movlb	0	; select bank0
  6261  062F  0836               	movf	?_modulation+1,w
  6262  0630  0022               	movlb	2	; select bank2
  6263  0631  00C7               	movwf	(_mod_value+1)^(0+256)
  6264  0632  0020               	movlb	0	; select bank0
  6265  0633  0835               	movf	?_modulation,w
  6266  0634  0022               	movlb	2	; select bank2
  6267  0635  00C6               	movwf	_mod_value^(0+256)
  6268                           
  6269                           ;main.c: 341: CCPR9 = mod_value / 2;
  6270  0636  3002               	movlw	2
  6271  0637  0020               	movlb	0	; select bank0
  6272  0638  00A0               	movwf	___awdiv@divisor
  6273  0639  3000               	movlw	0
  6274  063A  00A1               	movwf	___awdiv@divisor+1
  6275  063B  0022               	movlb	2	; select bank2
  6276  063C  0847               	movf	(_mod_value+1)^(0+256),w
  6277  063D  0020               	movlb	0	; select bank0
  6278  063E  00A3               	movwf	___awdiv@dividend+1
  6279  063F  0022               	movlb	2	; select bank2
  6280  0640  0846               	movf	_mod_value^(0+256),w
  6281  0641  0020               	movlb	0	; select bank0
  6282  0642  00A2               	movwf	___awdiv@dividend
  6283  0643  3195  2549  3182   	fcall	___awdiv
  6284  0646  0020               	movlb	0	; select bank0
  6285  0647  0821               	movf	?___awdiv+1,w
  6286  0648  002C               	movlb	12	; select bank12
  6287  0649  009B               	movwf	27	;volatile
  6288  064A  0020               	movlb	0	; select bank0
  6289  064B  0820               	movf	?___awdiv,w
  6290  064C  002C               	movlb	12	; select bank12
  6291  064D  009A               	movwf	26	;volatile
  6292                           
  6293                           ;main.c: 342: mod_timer = 0;
  6294  064E  3000               	movlw	0
  6295  064F  0022               	movlb	2	; select bank2
  6296  0650  00A7               	movwf	(_mod_timer+3)^(0+256)	;volatile
  6297  0651  3000               	movlw	0
  6298  0652  00A6               	movwf	(_mod_timer+2)^(0+256)	;volatile
  6299  0653  3000               	movlw	0
  6300  0654  00A5               	movwf	(_mod_timer+1)^(0+256)	;volatile
  6301  0655  3000               	movlw	0
  6302  0656  00A4               	movwf	_mod_timer^(0+256)	;volatile
  6303  0657                     l4257:	
  6304                           
  6305                           ;main.c: 343: }
  6306                           ;main.c: 348: if (delay_time_changed == 1) {
  6307  0657  034E               	decf	_delay_time_changed^(0+256),w
  6308  0658  044F               	iorwf	(_delay_time_changed+1)^(0+256),w
  6309  0659  1D03               	btfss	3,2
  6310  065A  2A11               	goto	l4127
  6311                           
  6312                           ;main.c: 349: delay_time = baseline_delay_time;
  6313  065B  0021               	movlb	1	; select bank1
  6314  065C  085D               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
  6315  065D  00E1               	movwf	(_delay_time+3)^(0+128)	;volatile
  6316  065E  085C               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
  6317  065F  00E0               	movwf	(_delay_time+2)^(0+128)	;volatile
  6318  0660  085B               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6319  0661  00DF               	movwf	(_delay_time+1)^(0+128)	;volatile
  6320  0662  085A               	movf	_baseline_delay_time^(0+128),w	;volatile
  6321  0663  00DE               	movwf	_delay_time^(0+128)	;volatile
  6322                           
  6323                           ;main.c: 350: delay_time = set_subdivision(baseline_delay_time, top_push_state);
  6324  0664  085B               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6325  0665  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  6326  0666  085A               	movf	_baseline_delay_time^(0+128),w	;volatile
  6327  0667  00A6               	movwf	set_subdivision@x^(0+128)
  6328  0668  0869               	movf	(_top_push_state+1)^(0+128),w
  6329  0669  00A9               	movwf	(set_subdivision@y+1)^(0+128)
  6330  066A  0868               	movf	_top_push_state^(0+128),w
  6331  066B  00A8               	movwf	set_subdivision@y^(0+128)
  6332  066C  318A  22C4  3182   	fcall	_set_subdivision
  6333  066F  0021               	movlb	1	; select bank1
  6334  0670  0826               	movf	?_set_subdivision^(0+128),w
  6335  0671  00DE               	movwf	_delay_time^(0+128)	;volatile
  6336  0672  0827               	movf	(?_set_subdivision+1)^(0+128),w
  6337  0673  00DF               	movwf	(_delay_time+1)^(0+128)	;volatile
  6338  0674  0D89               	rlf	9,f
  6339  0675  3B89               	subwfb	9,f
  6340  0676  0989               	comf	9,f
  6341  0677  00E0               	movwf	(_delay_time+2)^(0+128)	;volatile
  6342  0678  00E1               	movwf	(_delay_time+3)^(0+128)	;volatile
  6343                           
  6344                           ;main.c: 351: delayfound = 0;
  6345  0679  0022               	movlb	2	; select bank2
  6346  067A  01BC               	clrf	_delayfound^(0+256)
  6347  067B  01BD               	clrf	(_delayfound+1)^(0+256)
  6348                           
  6349                           ;main.c: 352: delay_counter = 0;
  6350  067C  01BA               	clrf	_delay_counter^(0+256)
  6351  067D  01BB               	clrf	(_delay_counter+1)^(0+256)
  6352  067E                     l4273:	
  6353                           ;main.c: 353: while (delayfound == 0) {
  6354                           
  6355  067E  0022               	movlb	2	; select bank2
  6356  067F  083C               	movf	_delayfound^(0+256),w
  6357  0680  043D               	iorwf	(_delayfound+1)^(0+256),w
  6358  0681  1D03               	btfss	3,2
  6359  0682  2ED9               	goto	l4275
  6360                           
  6361                           ;main.c: 354: if (delay[delay_counter] <= delay_time * 2) {
  6362  0683  083B               	movf	(_delay_counter+1)^(0+256),w
  6363  0684  0021               	movlb	1	; select bank1
  6364  0685  00AB               	movwf	(??_main^(0+128)+1)
  6365  0686  0022               	movlb	2	; select bank2
  6366  0687  083A               	movf	_delay_counter^(0+256),w
  6367  0688  0021               	movlb	1	; select bank1
  6368  0689  00AA               	movwf	??_main^(0+128)
  6369  068A  35AA               	lslf	??_main^(0+128),f
  6370  068B  0DAB               	rlf	(??_main^(0+128)+1),f
  6371  068C  30F2               	movlw	242
  6372  068D  00AC               	movwf	(??_main+2)^(0+128)
  6373  068E  3023               	movlw	35
  6374  068F  00AD               	movwf	((??_main+2)^(0+128)+1)
  6375  0690  082A               	movf	??_main^(0+128),w
  6376  0691  072C               	addwf	(??_main+2)^(0+128),w
  6377  0692  0086               	movwf	6
  6378  0693  082B               	movf	(??_main+1)^(0+128),w
  6379  0694  3D2D               	addwfc	(??_main+3)^(0+128),w
  6380  0695  0087               	movwf	7
  6381  0696  3F40               	moviw [0]fsr1
  6382  0697  00AE               	movwf	(??_main+4)^(0+128)
  6383  0698  3F41               	moviw [1]fsr1
  6384  0699  00AF               	movwf	((??_main+4)^(0+128)+1)
  6385  069A  082E               	movf	(??_main+4)^(0+128),w
  6386  069B  00B0               	movwf	(??_main+6)^(0+128)
  6387  069C  082F               	movf	(??_main+5)^(0+128),w
  6388  069D  00B1               	movwf	((??_main+6)^(0+128)+1)
  6389  069E  3000               	movlw	0
  6390  069F  1BB1               	btfsc	((??_main+6)^(0+128)+1),7
  6391  06A0  30FF               	movlw	255
  6392  06A1  00B2               	movwf	((??_main+6)^(0+128)+2)
  6393  06A2  00B3               	movwf	((??_main+6)^(0+128)+3)
  6394  06A3  085E               	movf	_delay_time^(0+128),w	;volatile
  6395  06A4  00B4               	movwf	(??_main+10)^(0+128)
  6396  06A5  085F               	movf	(_delay_time+1)^(0+128),w	;volatile
  6397  06A6  00B5               	movwf	((??_main+10)^(0+128)+1)
  6398  06A7  0860               	movf	(_delay_time+2)^(0+128),w	;volatile
  6399  06A8  00B6               	movwf	((??_main+10)^(0+128)+2)
  6400  06A9  0861               	movf	(_delay_time+3)^(0+128),w	;volatile
  6401  06AA  00B7               	movwf	((??_main+10)^(0+128)+3)
  6402  06AB  3001               	movlw	1
  6403  06AC                     u4375:	
  6404  06AC  35B4               	lslf	(??_main+10)^(0+128),f
  6405  06AD  0DB5               	rlf	((??_main+10)^(0+128)+1),f
  6406  06AE  0DB6               	rlf	((??_main+10)^(0+128)+2),f
  6407  06AF  0DB7               	rlf	((??_main+10)^(0+128)+3),f
  6408  06B0  0B89               	decfsz	9,f
  6409  06B1  2EAC               	goto	u4375
  6410  06B2  0837               	movf	(??_main+13)^(0+128),w
  6411  06B3  3A80               	xorlw	128
  6412  06B4  00B8               	movwf	(??_main+14)^(0+128)
  6413  06B5  0833               	movf	(??_main+9)^(0+128),w
  6414  06B6  3A80               	xorlw	128
  6415  06B7  0238               	subwf	(??_main+14)^(0+128),w
  6416  06B8  1D03               	skipz
  6417  06B9  2EC4               	goto	u4383
  6418  06BA  0832               	movf	(??_main+8)^(0+128),w
  6419  06BB  0236               	subwf	(??_main+12)^(0+128),w
  6420  06BC  1D03               	skipz
  6421  06BD  2EC4               	goto	u4383
  6422  06BE  0831               	movf	(??_main+7)^(0+128),w
  6423  06BF  0235               	subwf	(??_main+11)^(0+128),w
  6424  06C0  1D03               	skipz
  6425  06C1  2EC4               	goto	u4383
  6426  06C2  0830               	movf	(??_main+6)^(0+128),w
  6427  06C3  0234               	subwf	(??_main+10)^(0+128),w
  6428  06C4                     u4383:	
  6429  06C4  1C03               	skipc
  6430  06C5  2ED3               	goto	l4271
  6431                           
  6432                           ;main.c: 355: delayfound = 1;
  6433  06C6  3001               	movlw	1
  6434  06C7  0022               	movlb	2	; select bank2
  6435  06C8  00BC               	movwf	_delayfound^(0+256)
  6436  06C9  3000               	movlw	0
  6437  06CA  00BD               	movwf	(_delayfound^(0+256)+1)
  6438                           
  6439                           ;main.c: 356: CCPR1 = delay_counter;
  6440  06CB  083B               	movf	(_delay_counter+1)^(0+256),w
  6441  06CC  0025               	movlb	5	; select bank5
  6442  06CD  0092               	movwf	18	;volatile
  6443  06CE  0022               	movlb	2	; select bank2
  6444  06CF  083A               	movf	_delay_counter^(0+256),w
  6445  06D0  0025               	movlb	5	; select bank5
  6446  06D1  0091               	movwf	17	;volatile
  6447                           
  6448                           ;main.c: 357: } else {
  6449  06D2  2E7E               	goto	l4273
  6450  06D3                     l4271:	
  6451                           
  6452                           ;main.c: 358: delay_counter++;
  6453  06D3  3001               	movlw	1
  6454  06D4  0022               	movlb	2	; select bank2
  6455  06D5  07BA               	addwf	_delay_counter^(0+256),f
  6456  06D6  3000               	movlw	0
  6457  06D7  3DBB               	addwfc	(_delay_counter+1)^(0+256),f
  6458  06D8  2E7E               	goto	l4273
  6459  06D9                     l4275:	
  6460                           
  6461                           ;main.c: 359: }
  6462                           ;main.c: 360: }
  6463                           ;main.c: 361: mod_delay_time = delay_time / 7.5;
  6464  06D9  0021               	movlb	1	; select bank1
  6465  06DA  0861               	movf	(_delay_time+3)^(0+128),w	;volatile
  6466  06DB  0020               	movlb	0	; select bank0
  6467  06DC  00AB               	movwf	___altoft@c+3
  6468  06DD  0021               	movlb	1	; select bank1
  6469  06DE  0860               	movf	(_delay_time+2)^(0+128),w	;volatile
  6470  06DF  0020               	movlb	0	; select bank0
  6471  06E0  00AA               	movwf	___altoft@c+2
  6472  06E1  0021               	movlb	1	; select bank1
  6473  06E2  085F               	movf	(_delay_time+1)^(0+128),w	;volatile
  6474  06E3  0020               	movlb	0	; select bank0
  6475  06E4  00A9               	movwf	___altoft@c+1
  6476  06E5  0021               	movlb	1	; select bank1
  6477  06E6  085E               	movf	_delay_time^(0+128),w	;volatile
  6478  06E7  0020               	movlb	0	; select bank0
  6479  06E8  00A8               	movwf	___altoft@c
  6480  06E9  3192  2286  3182   	fcall	___altoft
  6481  06EC  0020               	movlb	0	; select bank0
  6482  06ED  0828               	movf	?___altoft,w
  6483  06EE  00C8               	movwf	___ftdiv@f1
  6484  06EF  0829               	movf	?___altoft+1,w
  6485  06F0  00C9               	movwf	___ftdiv@f1+1
  6486  06F1  082A               	movf	?___altoft+2,w
  6487  06F2  00CA               	movwf	___ftdiv@f1+2
  6488  06F3  3000               	movlw	0
  6489  06F4  00C5               	movwf	___ftdiv@f2
  6490  06F5  30F0               	movlw	240
  6491  06F6  00C6               	movwf	___ftdiv@f2+1
  6492  06F7  3040               	movlw	64
  6493  06F8  00C7               	movwf	___ftdiv@f2+2
  6494  06F9  3188  2071  3182   	fcall	___ftdiv
  6495  06FC  0020               	movlb	0	; select bank0
  6496  06FD  0845               	movf	?___ftdiv,w
  6497  06FE  00E7               	movwf	___fttol@f1
  6498  06FF  0846               	movf	?___ftdiv+1,w
  6499  0700  00E8               	movwf	___fttol@f1+1
  6500  0701  0847               	movf	?___ftdiv+2,w
  6501  0702  00E9               	movwf	___fttol@f1+2
  6502  0703  3197  2761  3182   	fcall	___fttol
  6503  0706  0020               	movlb	0	; select bank0
  6504  0707  0868               	movf	?___fttol+1,w
  6505  0708  0022               	movlb	2	; select bank2
  6506  0709  00DB               	movwf	(_mod_delay_time+1)^(0+256)
  6507  070A  0020               	movlb	0	; select bank0
  6508  070B  0867               	movf	?___fttol,w
  6509  070C  0022               	movlb	2	; select bank2
  6510  070D  00DA               	movwf	_mod_delay_time^(0+256)
  6511                           
  6512                           ;main.c: 363: delay_time_changed = 0;
  6513  070E  01CE               	clrf	_delay_time_changed^(0+256)
  6514  070F  01CF               	clrf	(_delay_time_changed+1)^(0+256)
  6515  0710  2A11               	goto	l4127
  6516  0711                     __end_of_main:	
  6517                           
  6518                           	psect	text1
  6519  1382                     __ptext1:	
  6520 ;; *************** function _update_mode *****************
  6521 ;; Defined at:
  6522 ;;		line 58 in file "tactiles.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;		None
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;		None
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1    wreg      void 
  6529 ;; Registers used:
  6530 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6538 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6539 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6540 ;;Total ram usage:        1 bytes
  6541 ;; Hardware stack levels used:    1
  6542 ;; Hardware stack levels required when called:    2
  6543 ;; This function calls:
  6544 ;;		Nothing
  6545 ;; This function is called by:
  6546 ;;		_main
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           
  6551                           ;psect for function _update_mode
  6552  1382                     _update_mode:	
  6553                           
  6554                           ;tactiles.c: 63: if (PORTCbits.RC0 == 0) {
  6555                           
  6556                           ;incstack = 0
  6557                           ; Regs used in _update_mode: [wreg-fsr0h+status,2+status,0]
  6558  1382  0020               	movlb	0	; select bank0
  6559  1383  180E               	btfsc	14,0	;volatile
  6560  1384  2BC3               	goto	l3717
  6561                           
  6562                           ;tactiles.c: 64: debounce_mode2++;
  6563  1385  3001               	movlw	1
  6564  1386  0022               	movlb	2	; select bank2
  6565  1387  07B8               	addwf	_debounce_mode2^(0+256),f
  6566  1388  3000               	movlw	0
  6567  1389  3DB9               	addwfc	(_debounce_mode2+1)^(0+256),f
  6568                           
  6569                           ;tactiles.c: 65: if (debounce_mode2 > 25) {
  6570  138A  0839               	movf	(_debounce_mode2+1)^(0+256),w
  6571  138B  3A80               	xorlw	128
  6572  138C  0020               	movlb	0	; select bank0
  6573  138D  00A0               	movwf	??_update_mode
  6574  138E  3080               	movlw	128
  6575  138F  0220               	subwf	??_update_mode,w
  6576  1390  1D03               	skipz
  6577  1391  2B95               	goto	u3395
  6578  1392  301A               	movlw	26
  6579  1393  0022               	movlb	2	; select bank2
  6580  1394  0238               	subwf	_debounce_mode2^(0+256),w
  6581  1395                     u3395:	
  6582  1395  1C03               	skipc
  6583  1396  0008               	return
  6584                           
  6585                           ;tactiles.c: 66: debounce_mode2 = 25;
  6586  1397  3019               	movlw	25
  6587  1398  0022               	movlb	2	; select bank2
  6588  1399  00B8               	movwf	_debounce_mode2^(0+256)
  6589  139A  3000               	movlw	0
  6590  139B  00B9               	movwf	(_debounce_mode2^(0+256)+1)
  6591                           
  6592                           ;tactiles.c: 67: mode2_state++;
  6593  139C  3001               	movlw	1
  6594  139D  0020               	movlb	0	; select bank0
  6595  139E  00A0               	movwf	??_update_mode
  6596  139F  0820               	movf	??_update_mode,w
  6597  13A0  0021               	movlb	1	; select bank1
  6598  13A1  07D4               	addwf	_mode2_state^(0+128),f
  6599                           
  6600                           ;tactiles.c: 68: if (mode2_state > 2) {
  6601  13A2  3003               	movlw	3
  6602  13A3  0254               	subwf	_mode2_state^(0+128),w
  6603  13A4  1C03               	skipc
  6604  13A5  2BB3               	goto	l3715
  6605                           
  6606                           ;tactiles.c: 69: mode2_state = 0;
  6607  13A6  01D4               	clrf	_mode2_state^(0+128)
  6608                           
  6609                           ;tactiles.c: 70: }
  6610                           ;tactiles.c: 71: switch(mode2_state) {
  6611  13A7  2BB3               	goto	l3715
  6612  13A8                     l795:	
  6613                           ;tactiles.c: 72: case 0:
  6614                           
  6615                           
  6616                           ;tactiles.c: 73: LATBbits.LATB1 = 0;
  6617  13A8  0022               	movlb	2	; select bank2
  6618  13A9  108D               	bcf	13,1	;volatile
  6619  13AA  2BB1               	goto	L5
  6620  13AB                     l797:	
  6621                           ;tactiles.c: 76: case 1:
  6622                           
  6623                           ;tactiles.c: 75: break;
  6624                           
  6625                           ;tactiles.c: 74: LATBbits.LATB0 = 0;
  6626                           
  6627                           
  6628                           ;tactiles.c: 77: LATBbits.LATB1 = 0;
  6629  13AB  0022               	movlb	2	; select bank2
  6630  13AC  108D               	bcf	13,1	;volatile
  6631                           
  6632                           ;tactiles.c: 78: LATBbits.LATB0 = 1;
  6633  13AD  140D               	bsf	13,0	;volatile
  6634                           
  6635                           ;tactiles.c: 79: break;
  6636  13AE  2BBF               	goto	l799
  6637  13AF                     l798:	
  6638                           ;tactiles.c: 80: case 2:
  6639                           
  6640                           
  6641                           ;tactiles.c: 81: LATBbits.LATB1 = 1;
  6642  13AF  0022               	movlb	2	; select bank2
  6643  13B0  148D               	bsf	13,1	;volatile
  6644  13B1                     L5:	
  6645                           
  6646                           ;tactiles.c: 82: LATBbits.LATB0 = 0;
  6647  13B1  100D               	bcf	13,0	;volatile
  6648                           
  6649                           ;tactiles.c: 84: }
  6650                           
  6651                           ;tactiles.c: 83: break;
  6652  13B2  2BBF               	goto	l799
  6653  13B3                     l3715:	
  6654  13B3  0021               	movlb	1	; select bank1
  6655  13B4  0854               	movf	_mode2_state^(0+128),w
  6656                           
  6657                           ; Switch size 1, requested type "space"
  6658                           ; Number of cases is 3, Range of values is 0 to 2
  6659                           ; switch strategies available:
  6660                           ; Name         Instructions Cycles
  6661                           ; simple_byte           10     6 (average)
  6662                           ; direct_byte           12     6 (fixed)
  6663                           ; jumptable            260     6 (fixed)
  6664                           ;	Chosen strategy is simple_byte
  6665  13B5  3A00               	xorlw	0	; case 0
  6666  13B6  1903               	skipnz
  6667  13B7  2BA8               	goto	l795
  6668  13B8  3A01               	xorlw	1	; case 1
  6669  13B9  1903               	skipnz
  6670  13BA  2BAB               	goto	l797
  6671  13BB  3A03               	xorlw	3	; case 2
  6672  13BC  1903               	skipnz
  6673  13BD  2BAF               	goto	l798
  6674  13BE  2BBF               	goto	l799
  6675  13BF                     l799:	
  6676                           ;tactiles.c: 85: while (PORTCbits.RC0 == 0) {
  6677                           
  6678  13BF  0020               	movlb	0	; select bank0
  6679  13C0  180E               	btfsc	14,0	;volatile
  6680  13C1  0008               	return
  6681  13C2  2BBF               	goto	l799
  6682  13C3                     l3717:	
  6683                           ;tactiles.c: 86: }
  6684                           ;tactiles.c: 87: }
  6685                           ;tactiles.c: 88: } else {
  6686                           
  6687                           
  6688                           ;tactiles.c: 89: debounce_mode2 = 0;
  6689  13C3  0022               	movlb	2	; select bank2
  6690  13C4  01B8               	clrf	_debounce_mode2^(0+256)
  6691  13C5  01B9               	clrf	(_debounce_mode2+1)^(0+256)
  6692  13C6  0008               	return
  6693  13C7                     __end_of_update_mode:	
  6694                           
  6695                           	psect	text2
  6696  0BBD                     __ptext2:	
  6697 ;; *************** function _updateSwitchTap *****************
  6698 ;; Defined at:
  6699 ;;		line 59 in file "SwitchTap.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;		None
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  tapCntDiviso    2   27[BANK0 ] int 
  6704 ;;  iCnt            1   29[BANK0 ] unsigned char 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  1    wreg      void 
  6707 ;; Registers used:
  6708 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6715 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6716 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6717 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6718 ;;Total ram usage:        9 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; Hardware stack levels required when called:    5
  6721 ;; This function calls:
  6722 ;;		___aldiv
  6723 ;;		_setDoublePressState
  6724 ;;		_setLongTapState
  6725 ;; This function is called by:
  6726 ;;		_main
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           
  6731                           ;psect for function _updateSwitchTap
  6732  0BBD                     _updateSwitchTap:	
  6733                           
  6734                           ;SwitchTap.c: 60: uint8_t iCnt = 0;
  6735                           
  6736                           ;incstack = 0
  6737                           ; Regs used in _updateSwitchTap: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6738  0BBD  0020               	movlb	0	; select bank0
  6739  0BBE  01BD               	clrf	updateSwitchTap@iCnt
  6740                           
  6741                           ;SwitchTap.c: 66: if (PORTEbits.RE0 == 0) {
  6742  0BBF  1810               	btfsc	16,0	;volatile
  6743  0BC0  2BC8               	goto	l3845
  6744                           
  6745                           ;SwitchTap.c: 67: if (switchTap_pressed > 0) {
  6746  0BC1  0021               	movlb	1	; select bank1
  6747  0BC2  0859               	movf	_switchTap_pressed^(0+128),w
  6748  0BC3  1903               	btfsc	3,2
  6749  0BC4  2BD3               	goto	l1102
  6750                           
  6751                           ;SwitchTap.c: 68: switchTap_pressed--;
  6752  0BC5  3001               	movlw	1
  6753  0BC6  02D9               	subwf	_switchTap_pressed^(0+128),f
  6754                           
  6755                           ;SwitchTap.c: 69: }
  6756                           ;SwitchTap.c: 70: } else if (switchTap_pressed < 25) {
  6757  0BC7  2BD3               	goto	l1102
  6758  0BC8                     l3845:	
  6759  0BC8  3019               	movlw	25
  6760  0BC9  0021               	movlb	1	; select bank1
  6761  0BCA  0259               	subwf	_switchTap_pressed^(0+128),w
  6762  0BCB  1803               	skipnc
  6763  0BCC  2BD3               	goto	l1102
  6764                           
  6765                           ;SwitchTap.c: 71: switchTap_pressed++;
  6766  0BCD  3001               	movlw	1
  6767  0BCE  0020               	movlb	0	; select bank0
  6768  0BCF  00B5               	movwf	??_updateSwitchTap
  6769  0BD0  0835               	movf	??_updateSwitchTap,w
  6770  0BD1  0021               	movlb	1	; select bank1
  6771  0BD2  07D9               	addwf	_switchTap_pressed^(0+128),f
  6772  0BD3                     l1102:	
  6773                           
  6774                           ;SwitchTap.c: 72: }
  6775                           ;SwitchTap.c: 78: if (switchTap_pressed == 0) {
  6776  0BD3  0859               	movf	_switchTap_pressed^(0+128),w
  6777  0BD4  1D03               	btfss	3,2
  6778  0BD5  2D71               	goto	l3925
  6779                           
  6780                           ;SwitchTap.c: 82: if (tap_timer >= 1563) {
  6781  0BD6  1BFC               	btfsc	_tap_timer+3,7	;volatile
  6782  0BD7  2C4A               	goto	l3885
  6783  0BD8  087C               	movf	_tap_timer+3,w	;volatile
  6784  0BD9  1D03               	btfss	3,2
  6785  0BDA  2BE4               	goto	l3851
  6786  0BDB  087B               	movf	_tap_timer+2,w	;volatile
  6787  0BDC  1D03               	btfss	3,2
  6788  0BDD  2BE4               	goto	l3851
  6789  0BDE  301B               	movlw	27
  6790  0BDF  0279               	subwf	_tap_timer,w	;volatile
  6791  0BE0  3006               	movlw	6
  6792  0BE1  3B7A               	subwfb	_tap_timer+1,w	;volatile
  6793  0BE2  1C03               	btfss	3,0
  6794  0BE3  2C4A               	goto	l3885
  6795  0BE4                     l3851:	
  6796                           
  6797                           ;SwitchTap.c: 83: switchTap_down = 1;
  6798  0BE4  01D8               	clrf	_switchTap_down^(0+128)
  6799  0BE5  0AD8               	incf	_switchTap_down^(0+128),f
  6800                           
  6801                           ;SwitchTap.c: 84: tap_timer = 0;
  6802  0BE6  3000               	movlw	0
  6803  0BE7  00FC               	movwf	_tap_timer+3	;volatile
  6804  0BE8  3000               	movlw	0
  6805  0BE9  00FB               	movwf	_tap_timer+2	;volatile
  6806  0BEA  3000               	movlw	0
  6807  0BEB  00FA               	movwf	_tap_timer+1	;volatile
  6808  0BEC  3000               	movlw	0
  6809  0BED  00F9               	movwf	_tap_timer	;volatile
  6810                           
  6811                           ;SwitchTap.c: 85: tap_iteration = 1;
  6812  0BEE  3001               	movlw	1
  6813  0BEF  00E6               	movwf	_tap_iteration^(0+128)
  6814  0BF0  3000               	movlw	0
  6815  0BF1  00E7               	movwf	(_tap_iteration^(0+128)+1)
  6816                           
  6817                           ;SwitchTap.c: 86: tap_total = 0;
  6818  0BF2  3000               	movlw	0
  6819  0BF3  0022               	movlb	2	; select bank2
  6820  0BF4  00AB               	movwf	(_tap_total+3)^(0+256)
  6821  0BF5  3000               	movlw	0
  6822  0BF6  00AA               	movwf	(_tap_total+2)^(0+256)
  6823  0BF7  3000               	movlw	0
  6824  0BF8  00A9               	movwf	(_tap_total+1)^(0+256)
  6825  0BF9  3000               	movlw	0
  6826  0BFA  00A8               	movwf	_tap_total^(0+256)
  6827                           
  6828                           ;SwitchTap.c: 87: delay_time_changed = 0;
  6829  0BFB  01CE               	clrf	_delay_time_changed^(0+256)
  6830  0BFC  01CF               	clrf	(_delay_time_changed+1)^(0+256)
  6831                           
  6832                           ;SwitchTap.c: 89: for (iCnt = 1; iCnt <= num_taps; iCnt++) {
  6833  0BFD  0020               	movlb	0	; select bank0
  6834  0BFE  01BD               	clrf	updateSwitchTap@iCnt
  6835  0BFF  0ABD               	incf	updateSwitchTap@iCnt,f
  6836  0C00                     l3863:	
  6837  0C00  083D               	movf	updateSwitchTap@iCnt,w
  6838  0C01  0021               	movlb	1	; select bank1
  6839  0C02  026D               	subwf	_num_taps^(0+128),w
  6840  0C03  1C03               	btfss	3,0
  6841  0C04  2C1D               	goto	l3865
  6842                           
  6843                           ;SwitchTap.c: 90: tap_history[iCnt] = 0;
  6844  0C05  0020               	movlb	0	; select bank0
  6845  0C06  083D               	movf	updateSwitchTap@iCnt,w
  6846  0C07  00B5               	movwf	??_updateSwitchTap
  6847  0C08  3001               	movlw	1
  6848  0C09                     u3685:	
  6849  0C09  35B5               	lslf	??_updateSwitchTap,f
  6850  0C0A  3EFF               	addlw	-1
  6851  0C0B  1D03               	skipz
  6852  0C0C  2C09               	goto	u3685
  6853  0C0D  3535               	lslf	??_updateSwitchTap,w
  6854  0C0E  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  6855  0C0F  0086               	movwf	6
  6856  0C10  3001               	movlw	1	; select bank3/4
  6857  0C11  0087               	movwf	7
  6858  0C12  3000               	movlw	0
  6859  0C13  3FC0               	movwi [0]fsr1
  6860  0C14  3000               	movlw	0
  6861  0C15  3FC1               	movwi [1]fsr1
  6862  0C16  3FC2               	movwi [2]fsr1
  6863  0C17  3FC3               	movwi [3]fsr1
  6864  0C18  3001               	movlw	1
  6865  0C19  00B5               	movwf	??_updateSwitchTap
  6866  0C1A  0835               	movf	??_updateSwitchTap,w
  6867  0C1B  07BD               	addwf	updateSwitchTap@iCnt,f
  6868  0C1C  2C00               	goto	l3863
  6869  0C1D                     l3865:	
  6870                           
  6871                           ;SwitchTap.c: 91: }
  6872                           ;SwitchTap.c: 94: if (longTap_start == 0) {
  6873  0C1D  0853               	movf	_longTap_start^(0+128),w
  6874  0C1E  1D03               	btfss	3,2
  6875  0C1F  2C25               	goto	l3871
  6876                           
  6877                           ;SwitchTap.c: 95: longTap_start = 1;
  6878  0C20  01D3               	clrf	_longTap_start^(0+128)
  6879  0C21  0AD3               	incf	_longTap_start^(0+128),f
  6880                           
  6881                           ;SwitchTap.c: 96: longTap_state = 0;
  6882  0C22  01EC               	clrf	_longTap_state^(0+128)	;volatile
  6883                           
  6884                           ;SwitchTap.c: 97: longTap_timer = 0;
  6885  0C23  01CB               	clrf	_longTap_timer^(0+128)	;volatile
  6886  0C24  01CC               	clrf	(_longTap_timer+1)^(0+128)	;volatile
  6887  0C25                     l3871:	
  6888                           
  6889                           ;SwitchTap.c: 98: }
  6890                           ;SwitchTap.c: 102: if (longTap_timer >= long_press_limit && longTap_state == 0) {
  6891  0C25  0865               	movf	(_long_press_limit+1)^(0+128),w
  6892  0C26  024C               	subwf	(_longTap_timer+1)^(0+128),w	;volatile
  6893  0C27  1D03               	skipz
  6894  0C28  2C2B               	goto	u3715
  6895  0C29  0864               	movf	_long_press_limit^(0+128),w
  6896  0C2A  024B               	subwf	_longTap_timer^(0+128),w	;volatile
  6897  0C2B                     u3715:	
  6898  0C2B  1C03               	skipc
  6899  0C2C  0008               	return
  6900  0C2D  086C               	movf	_longTap_state^(0+128),w	;volatile
  6901  0C2E  1D03               	btfss	3,2
  6902  0C2F  0008               	return
  6903                           
  6904                           ;SwitchTap.c: 103: longTap_timer = long_press_limit;
  6905  0C30  0865               	movf	(_long_press_limit+1)^(0+128),w
  6906  0C31  00CC               	movwf	(_longTap_timer+1)^(0+128)	;volatile
  6907  0C32  0864               	movf	_long_press_limit^(0+128),w
  6908  0C33  00CB               	movwf	_longTap_timer^(0+128)	;volatile
  6909                           
  6910                           ;SwitchTap.c: 104: LATBbits.LATB4 = 0;
  6911  0C34  0022               	movlb	2	; select bank2
  6912  0C35  120D               	bcf	13,4	;volatile
  6913                           
  6914                           ;SwitchTap.c: 106: if (feedback_start != 1) {
  6915  0C36  0021               	movlb	1	; select bank1
  6916  0C37  0352               	decf	_feedback_start^(0+128),w
  6917  0C38  1903               	btfsc	3,2
  6918  0C39  2C42               	goto	l3883
  6919                           
  6920                           ;SwitchTap.c: 107: setLongTapState(1);
  6921  0C3A  3001               	movlw	1
  6922  0C3B  0020               	movlb	0	; select bank0
  6923  0C3C  00A0               	movwf	setLongTapState@f_state
  6924  0C3D  3000               	movlw	0
  6925  0C3E  00A1               	movwf	setLongTapState@f_state+1
  6926  0C3F  319F  2744         	fcall	_setLongTapState
  6927                           
  6928                           ;SwitchTap.c: 108: } else {
  6929  0C41  0008               	return
  6930  0C42                     l3883:	
  6931                           
  6932                           ;SwitchTap.c: 109: setDoublePressState(1);
  6933  0C42  3001               	movlw	1
  6934  0C43  0020               	movlb	0	; select bank0
  6935  0C44  00AE               	movwf	setDoublePressState@f_state
  6936  0C45  3000               	movlw	0
  6937  0C46  00AF               	movwf	setDoublePressState@f_state+1
  6938  0C47  3190  203A         	fcall	_setDoublePressState
  6939                           
  6940                           ;SwitchTap.c: 110: }
  6941                           ;SwitchTap.c: 111: }
  6942                           ;SwitchTap.c: 113: } else if (tap_timer < 1563 && longTap_state == 0 && switchTap_down !
      +                          = 1) {
  6943  0C49  0008               	return
  6944  0C4A                     l3885:	
  6945  0C4A  1BFC               	btfsc	_tap_timer+3,7	;volatile
  6946  0C4B  2C58               	goto	l3887
  6947  0C4C  087C               	movf	_tap_timer+3,w	;volatile
  6948  0C4D  1D03               	btfss	3,2
  6949  0C4E  0008               	return
  6950  0C4F  087B               	movf	_tap_timer+2,w	;volatile
  6951  0C50  1D03               	btfss	3,2
  6952  0C51  0008               	return
  6953  0C52  301B               	movlw	27
  6954  0C53  0279               	subwf	_tap_timer,w	;volatile
  6955  0C54  3006               	movlw	6
  6956  0C55  3B7A               	subwfb	_tap_timer+1,w	;volatile
  6957  0C56  1803               	btfsc	3,0
  6958  0C57  0008               	return
  6959  0C58                     l3887:	
  6960  0C58  0021               	movlb	1	; select bank1
  6961  0C59  086C               	movf	_longTap_state^(0+128),w	;volatile
  6962  0C5A  1D03               	btfss	3,2
  6963  0C5B  0008               	return
  6964  0C5C  0358               	decf	_switchTap_down^(0+128),w
  6965  0C5D  1903               	btfsc	3,2
  6966  0C5E  0008               	return
  6967                           
  6968                           ;SwitchTap.c: 114: if (tap_iteration <= 4) {
  6969  0C5F  0867               	movf	(_tap_iteration+1)^(0+128),w
  6970  0C60  3A80               	xorlw	128
  6971  0C61  0020               	movlb	0	; select bank0
  6972  0C62  00B5               	movwf	??_updateSwitchTap
  6973  0C63  3080               	movlw	128
  6974  0C64  0235               	subwf	??_updateSwitchTap,w
  6975  0C65  1D03               	skipz
  6976  0C66  2C6A               	goto	u3775
  6977  0C67  3005               	movlw	5
  6978  0C68  0021               	movlb	1	; select bank1
  6979  0C69  0266               	subwf	_tap_iteration^(0+128),w
  6980  0C6A                     u3775:	
  6981  0C6A  1803               	skipnc
  6982  0C6B  0008               	return
  6983                           
  6984                           ;SwitchTap.c: 115: if (tap_timer >= 1172) {
  6985  0C6C  1BFC               	btfsc	_tap_timer+3,7	;volatile
  6986  0C6D  2C82               	goto	l1116
  6987  0C6E  087C               	movf	_tap_timer+3,w	;volatile
  6988  0C6F  1D03               	btfss	3,2
  6989  0C70  2C7A               	goto	l3895
  6990  0C71  087B               	movf	_tap_timer+2,w	;volatile
  6991  0C72  1D03               	btfss	3,2
  6992  0C73  2C7A               	goto	l3895
  6993  0C74  3094               	movlw	148
  6994  0C75  0279               	subwf	_tap_timer,w	;volatile
  6995  0C76  3004               	movlw	4
  6996  0C77  3B7A               	subwfb	_tap_timer+1,w	;volatile
  6997  0C78  1C03               	btfss	3,0
  6998  0C79  2C82               	goto	l1116
  6999  0C7A                     l3895:	
  7000                           
  7001                           ;SwitchTap.c: 116: tap_timer = 1172;
  7002  0C7A  3000               	movlw	0
  7003  0C7B  00FC               	movwf	_tap_timer+3	;volatile
  7004  0C7C  3000               	movlw	0
  7005  0C7D  00FB               	movwf	_tap_timer+2	;volatile
  7006  0C7E  3004               	movlw	4
  7007  0C7F  00FA               	movwf	_tap_timer+1	;volatile
  7008  0C80  3094               	movlw	148
  7009  0C81  00F9               	movwf	_tap_timer	;volatile
  7010  0C82                     l1116:	
  7011                           
  7012                           ;SwitchTap.c: 117: }
  7013                           ;SwitchTap.c: 118: int tapCntDivisor = num_taps;
  7014  0C82  0021               	movlb	1	; select bank1
  7015  0C83  086D               	movf	_num_taps^(0+128),w
  7016  0C84  0020               	movlb	0	; select bank0
  7017  0C85  00B5               	movwf	??_updateSwitchTap
  7018  0C86  01B6               	clrf	??_updateSwitchTap+1
  7019  0C87  0835               	movf	??_updateSwitchTap,w
  7020  0C88  00BB               	movwf	updateSwitchTap@tapCntDivisor
  7021  0C89  0836               	movf	??_updateSwitchTap+1,w
  7022  0C8A  00BC               	movwf	updateSwitchTap@tapCntDivisor+1
  7023                           
  7024                           ;SwitchTap.c: 119: if (tap_iteration <= num_taps) {
  7025  0C8B  0021               	movlb	1	; select bank1
  7026  0C8C  0867               	movf	(_tap_iteration+1)^(0+128),w
  7027  0C8D  3A80               	xorlw	128
  7028  0C8E  3C80               	sublw	128
  7029  0C8F  1D03               	skipz
  7030  0C90  2C93               	goto	u3795
  7031  0C91  0866               	movf	_tap_iteration^(0+128),w
  7032  0C92  026D               	subwf	_num_taps^(0+128),w
  7033  0C93                     u3795:	
  7034  0C93  1C03               	skipc
  7035  0C94  2CBD               	goto	l3903
  7036                           
  7037                           ;SwitchTap.c: 120: tap_total += tap_timer;
  7038  0C95  0879               	movf	_tap_timer,w	;volatile
  7039  0C96  0022               	movlb	2	; select bank2
  7040  0C97  07A8               	addwf	_tap_total^(0+256),f
  7041  0C98  087A               	movf	_tap_timer+1,w	;volatile
  7042  0C99  3DA9               	addwfc	(_tap_total+1)^(0+256),f
  7043  0C9A  087B               	movf	_tap_timer+2,w	;volatile
  7044  0C9B  3DAA               	addwfc	(_tap_total+2)^(0+256),f
  7045  0C9C  087C               	movf	_tap_timer+3,w	;volatile
  7046  0C9D  3DAB               	addwfc	(_tap_total+3)^(0+256),f
  7047                           
  7048                           ;SwitchTap.c: 121: tap_history[tap_iteration] = tap_timer;
  7049  0C9E  0021               	movlb	1	; select bank1
  7050  0C9F  0866               	movf	_tap_iteration^(0+128),w
  7051  0CA0  0020               	movlb	0	; select bank0
  7052  0CA1  00B5               	movwf	??_updateSwitchTap
  7053  0CA2  3001               	movlw	1
  7054  0CA3                     u3805:	
  7055  0CA3  35B5               	lslf	??_updateSwitchTap,f
  7056  0CA4  3EFF               	addlw	-1
  7057  0CA5  1D03               	skipz
  7058  0CA6  2CA3               	goto	u3805
  7059  0CA7  3535               	lslf	??_updateSwitchTap,w
  7060  0CA8  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7061  0CA9  0086               	movwf	6
  7062  0CAA  3001               	movlw	1	; select bank3/4
  7063  0CAB  0087               	movwf	7
  7064  0CAC  0879               	movf	_tap_timer,w	;volatile
  7065  0CAD  3FC0               	movwi [0]fsr1
  7066  0CAE  087A               	movf	_tap_timer+1,w	;volatile
  7067  0CAF  3FC1               	movwi [1]fsr1
  7068  0CB0  087B               	movf	_tap_timer+2,w	;volatile
  7069  0CB1  3FC2               	movwi [2]fsr1
  7070  0CB2  087C               	movf	_tap_timer+3,w	;volatile
  7071  0CB3  3FC3               	movwi [3]fsr1
  7072                           
  7073                           ;SwitchTap.c: 122: tapCntDivisor = tap_iteration;
  7074  0CB4  0021               	movlb	1	; select bank1
  7075  0CB5  0867               	movf	(_tap_iteration+1)^(0+128),w
  7076  0CB6  0020               	movlb	0	; select bank0
  7077  0CB7  00BC               	movwf	updateSwitchTap@tapCntDivisor+1
  7078  0CB8  0021               	movlb	1	; select bank1
  7079  0CB9  0866               	movf	_tap_iteration^(0+128),w
  7080  0CBA  0020               	movlb	0	; select bank0
  7081  0CBB  00BB               	movwf	updateSwitchTap@tapCntDivisor
  7082                           
  7083                           ;SwitchTap.c: 123: } else {
  7084  0CBC  2D32               	goto	l3917
  7085  0CBD                     l3903:	
  7086                           
  7087                           ;SwitchTap.c: 124: tap_total = 0;
  7088  0CBD  3000               	movlw	0
  7089  0CBE  0022               	movlb	2	; select bank2
  7090  0CBF  00AB               	movwf	(_tap_total+3)^(0+256)
  7091  0CC0  3000               	movlw	0
  7092  0CC1  00AA               	movwf	(_tap_total+2)^(0+256)
  7093  0CC2  3000               	movlw	0
  7094  0CC3  00A9               	movwf	(_tap_total+1)^(0+256)
  7095  0CC4  3000               	movlw	0
  7096  0CC5  00A8               	movwf	_tap_total^(0+256)
  7097                           
  7098                           ;SwitchTap.c: 125: for (iCnt = 1; iCnt < num_taps; iCnt++) {
  7099  0CC6  0020               	movlb	0	; select bank0
  7100  0CC7  01BD               	clrf	updateSwitchTap@iCnt
  7101  0CC8  0ABD               	incf	updateSwitchTap@iCnt,f
  7102  0CC9                     l3911:	
  7103  0CC9  0021               	movlb	1	; select bank1
  7104  0CCA  086D               	movf	_num_taps^(0+128),w
  7105  0CCB  0020               	movlb	0	; select bank0
  7106  0CCC  023D               	subwf	updateSwitchTap@iCnt,w
  7107  0CCD  1803               	btfsc	3,0
  7108  0CCE  2D13               	goto	l3913
  7109                           
  7110                           ;SwitchTap.c: 126: tap_history[iCnt] = tap_history[iCnt + 1];
  7111  0CCF  083D               	movf	updateSwitchTap@iCnt,w
  7112  0CD0  00B5               	movwf	??_updateSwitchTap
  7113  0CD1  3001               	movlw	1
  7114  0CD2                     u3815:	
  7115  0CD2  35B5               	lslf	??_updateSwitchTap,f
  7116  0CD3  3EFF               	addlw	-1
  7117  0CD4  1D03               	skipz
  7118  0CD5  2CD2               	goto	u3815
  7119  0CD6  3535               	lslf	??_updateSwitchTap,w
  7120  0CD7  3E04               	addlw	4
  7121  0CD8  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7122  0CD9  0086               	movwf	6
  7123  0CDA  3001               	movlw	1	; select bank3/4
  7124  0CDB  0087               	movwf	7
  7125  0CDC  3F40               	moviw [0]fsr1
  7126  0CDD  00B6               	movwf	??_updateSwitchTap+1
  7127  0CDE  3F41               	moviw [1]fsr1
  7128  0CDF  00B7               	movwf	??_updateSwitchTap+2
  7129  0CE0  3F42               	moviw [2]fsr1
  7130  0CE1  00B8               	movwf	??_updateSwitchTap+3
  7131  0CE2  3F43               	moviw [3]fsr1
  7132  0CE3  00B9               	movwf	??_updateSwitchTap+4
  7133  0CE4  083D               	movf	updateSwitchTap@iCnt,w
  7134  0CE5  00BA               	movwf	??_updateSwitchTap+5
  7135  0CE6  3001               	movlw	1
  7136  0CE7                     u3825:	
  7137  0CE7  35BA               	lslf	??_updateSwitchTap+5,f
  7138  0CE8  3EFF               	addlw	-1
  7139  0CE9  1D03               	skipz
  7140  0CEA  2CE7               	goto	u3825
  7141  0CEB  353A               	lslf	??_updateSwitchTap+5,w
  7142  0CEC  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7143  0CED  0086               	movwf	6
  7144  0CEE  3001               	movlw	1	; select bank3/4
  7145  0CEF  0087               	movwf	7
  7146  0CF0  0836               	movf	??_updateSwitchTap+1,w
  7147  0CF1  3FC0               	movwi [0]fsr1
  7148  0CF2  0837               	movf	??_updateSwitchTap+2,w
  7149  0CF3  3FC1               	movwi [1]fsr1
  7150  0CF4  0838               	movf	??_updateSwitchTap+3,w
  7151  0CF5  3FC2               	movwi [2]fsr1
  7152  0CF6  0839               	movf	??_updateSwitchTap+4,w
  7153  0CF7  3FC3               	movwi [3]fsr1
  7154                           
  7155                           ;SwitchTap.c: 127: tap_total += tap_history[iCnt];
  7156  0CF8  083D               	movf	updateSwitchTap@iCnt,w
  7157  0CF9  00B5               	movwf	??_updateSwitchTap
  7158  0CFA  3001               	movlw	1
  7159  0CFB                     u3835:	
  7160  0CFB  35B5               	lslf	??_updateSwitchTap,f
  7161  0CFC  3EFF               	addlw	-1
  7162  0CFD  1D03               	skipz
  7163  0CFE  2CFB               	goto	u3835
  7164  0CFF  3535               	lslf	??_updateSwitchTap,w
  7165  0D00  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7166  0D01  0086               	movwf	6
  7167  0D02  3001               	movlw	1	; select bank3/4
  7168  0D03  0087               	movwf	7
  7169  0D04  3F40               	moviw [0]fsr1
  7170  0D05  0022               	movlb	2	; select bank2
  7171  0D06  07A8               	addwf	_tap_total^(0+256),f
  7172  0D07  3F41               	moviw [1]fsr1
  7173  0D08  3DA9               	addwfc	(_tap_total+1)^(0+256),f
  7174  0D09  3F42               	moviw [2]fsr1
  7175  0D0A  3DAA               	addwfc	(_tap_total+2)^(0+256),f
  7176  0D0B  3F43               	moviw [3]fsr1
  7177  0D0C  3DAB               	addwfc	(_tap_total+3)^(0+256),f
  7178  0D0D  3001               	movlw	1
  7179  0D0E  0020               	movlb	0	; select bank0
  7180  0D0F  00B5               	movwf	??_updateSwitchTap
  7181  0D10  0835               	movf	??_updateSwitchTap,w
  7182  0D11  07BD               	addwf	updateSwitchTap@iCnt,f
  7183  0D12  2CC9               	goto	l3911
  7184  0D13                     l3913:	
  7185                           
  7186                           ;SwitchTap.c: 128: }
  7187                           ;SwitchTap.c: 129: tap_history[num_taps] = tap_timer;
  7188  0D13  0021               	movlb	1	; select bank1
  7189  0D14  086D               	movf	_num_taps^(0+128),w
  7190  0D15  0020               	movlb	0	; select bank0
  7191  0D16  00B5               	movwf	??_updateSwitchTap
  7192  0D17  3001               	movlw	1
  7193  0D18                     u3855:	
  7194  0D18  35B5               	lslf	??_updateSwitchTap,f
  7195  0D19  3EFF               	addlw	-1
  7196  0D1A  1D03               	skipz
  7197  0D1B  2D18               	goto	u3855
  7198  0D1C  3535               	lslf	??_updateSwitchTap,w
  7199  0D1D  3ECC               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7200  0D1E  0086               	movwf	6
  7201  0D1F  3001               	movlw	1	; select bank3/4
  7202  0D20  0087               	movwf	7
  7203  0D21  0879               	movf	_tap_timer,w	;volatile
  7204  0D22  3FC0               	movwi [0]fsr1
  7205  0D23  087A               	movf	_tap_timer+1,w	;volatile
  7206  0D24  3FC1               	movwi [1]fsr1
  7207  0D25  087B               	movf	_tap_timer+2,w	;volatile
  7208  0D26  3FC2               	movwi [2]fsr1
  7209  0D27  087C               	movf	_tap_timer+3,w	;volatile
  7210  0D28  3FC3               	movwi [3]fsr1
  7211                           
  7212                           ;SwitchTap.c: 130: tap_total += tap_timer;
  7213  0D29  0879               	movf	_tap_timer,w	;volatile
  7214  0D2A  0022               	movlb	2	; select bank2
  7215  0D2B  07A8               	addwf	_tap_total^(0+256),f
  7216  0D2C  087A               	movf	_tap_timer+1,w	;volatile
  7217  0D2D  3DA9               	addwfc	(_tap_total+1)^(0+256),f
  7218  0D2E  087B               	movf	_tap_timer+2,w	;volatile
  7219  0D2F  3DAA               	addwfc	(_tap_total+2)^(0+256),f
  7220  0D30  087C               	movf	_tap_timer+3,w	;volatile
  7221  0D31  3DAB               	addwfc	(_tap_total+3)^(0+256),f
  7222  0D32                     l3917:	
  7223                           
  7224                           ;SwitchTap.c: 131: }
  7225                           ;SwitchTap.c: 134: baseline_delay_time = tap_total / tapCntDivisor;
  7226  0D32  0020               	movlb	0	; select bank0
  7227  0D33  083B               	movf	updateSwitchTap@tapCntDivisor,w
  7228  0D34  00A6               	movwf	___aldiv@divisor
  7229  0D35  083C               	movf	updateSwitchTap@tapCntDivisor+1,w
  7230  0D36  00A7               	movwf	___aldiv@divisor+1
  7231  0D37  0D89               	rlf	9,f
  7232  0D38  3B89               	subwfb	9,f
  7233  0D39  0989               	comf	9,f
  7234  0D3A  00A8               	movwf	___aldiv@divisor+2
  7235  0D3B  00A9               	movwf	___aldiv@divisor+3
  7236  0D3C  0022               	movlb	2	; select bank2
  7237  0D3D  082B               	movf	(_tap_total+3)^(0+256),w
  7238  0D3E  0020               	movlb	0	; select bank0
  7239  0D3F  00AD               	movwf	___aldiv@dividend+3
  7240  0D40  0022               	movlb	2	; select bank2
  7241  0D41  082A               	movf	(_tap_total+2)^(0+256),w
  7242  0D42  0020               	movlb	0	; select bank0
  7243  0D43  00AC               	movwf	___aldiv@dividend+2
  7244  0D44  0022               	movlb	2	; select bank2
  7245  0D45  0829               	movf	(_tap_total+1)^(0+256),w
  7246  0D46  0020               	movlb	0	; select bank0
  7247  0D47  00AB               	movwf	___aldiv@dividend+1
  7248  0D48  0022               	movlb	2	; select bank2
  7249  0D49  0828               	movf	_tap_total^(0+256),w
  7250  0D4A  0020               	movlb	0	; select bank0
  7251  0D4B  00AA               	movwf	___aldiv@dividend
  7252  0D4C  3196  2654         	fcall	___aldiv
  7253  0D4E  0020               	movlb	0	; select bank0
  7254  0D4F  0829               	movf	?___aldiv+3,w
  7255  0D50  0021               	movlb	1	; select bank1
  7256  0D51  00DD               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  7257  0D52  0020               	movlb	0	; select bank0
  7258  0D53  0828               	movf	?___aldiv+2,w
  7259  0D54  0021               	movlb	1	; select bank1
  7260  0D55  00DC               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  7261  0D56  0020               	movlb	0	; select bank0
  7262  0D57  0827               	movf	?___aldiv+1,w
  7263  0D58  0021               	movlb	1	; select bank1
  7264  0D59  00DB               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  7265  0D5A  0020               	movlb	0	; select bank0
  7266  0D5B  0826               	movf	?___aldiv,w
  7267  0D5C  0021               	movlb	1	; select bank1
  7268  0D5D  00DA               	movwf	_baseline_delay_time^(0+128)	;volatile
  7269                           
  7270                           ;SwitchTap.c: 136: delay_time_changed = 1;
  7271  0D5E  3001               	movlw	1
  7272  0D5F  0022               	movlb	2	; select bank2
  7273  0D60  00CE               	movwf	_delay_time_changed^(0+256)
  7274  0D61  3000               	movlw	0
  7275  0D62  00CF               	movwf	(_delay_time_changed^(0+256)+1)
  7276                           
  7277                           ;SwitchTap.c: 138: tap_timer = 0;
  7278  0D63  3000               	movlw	0
  7279  0D64  00FC               	movwf	_tap_timer+3	;volatile
  7280  0D65  3000               	movlw	0
  7281  0D66  00FB               	movwf	_tap_timer+2	;volatile
  7282  0D67  3000               	movlw	0
  7283  0D68  00FA               	movwf	_tap_timer+1	;volatile
  7284  0D69  3000               	movlw	0
  7285  0D6A  00F9               	movwf	_tap_timer	;volatile
  7286                           
  7287                           ;SwitchTap.c: 140: tap_iteration++;
  7288  0D6B  3001               	movlw	1
  7289  0D6C  0021               	movlb	1	; select bank1
  7290  0D6D  07E6               	addwf	_tap_iteration^(0+128),f
  7291  0D6E  3000               	movlw	0
  7292  0D6F  3DE7               	addwfc	(_tap_iteration+1)^(0+128),f
  7293                           
  7294                           ;SwitchTap.c: 141: }
  7295                           ;SwitchTap.c: 142: }
  7296                           ;SwitchTap.c: 144: } else if (switchTap_pressed >= 25) {
  7297  0D70  0008               	return
  7298  0D71                     l3925:	
  7299  0D71  3019               	movlw	25
  7300  0D72  0259               	subwf	_switchTap_pressed^(0+128),w
  7301  0D73  1C03               	skipc
  7302  0D74  0008               	return
  7303                           
  7304                           ;SwitchTap.c: 145: switchTap_down = 0;
  7305  0D75  01D8               	clrf	_switchTap_down^(0+128)
  7306                           
  7307                           ;SwitchTap.c: 146: switchTap_state = 0;
  7308  0D76  01EF               	clrf	_switchTap_state^(0+128)
  7309                           
  7310                           ;SwitchTap.c: 152: setLongTapState(0);
  7311  0D77  3000               	movlw	0
  7312  0D78  0020               	movlb	0	; select bank0
  7313  0D79  00A0               	movwf	setLongTapState@f_state
  7314  0D7A  00A1               	movwf	setLongTapState@f_state+1
  7315  0D7B  319F  2744         	fcall	_setLongTapState
  7316                           
  7317                           ;SwitchTap.c: 154: longTap_timer = 0;
  7318  0D7D  0021               	movlb	1	; select bank1
  7319  0D7E  01CB               	clrf	_longTap_timer^(0+128)	;volatile
  7320  0D7F  01CC               	clrf	(_longTap_timer+1)^(0+128)	;volatile
  7321                           
  7322                           ;SwitchTap.c: 155: longTap_start = 0;
  7323  0D80  01D3               	clrf	_longTap_start^(0+128)
  7324                           
  7325                           ;SwitchTap.c: 157: switchTap_pressed = 25;
  7326  0D81  3019               	movlw	25
  7327  0D82  0020               	movlb	0	; select bank0
  7328  0D83  00B5               	movwf	??_updateSwitchTap
  7329  0D84  0835               	movf	??_updateSwitchTap,w
  7330  0D85  0021               	movlb	1	; select bank1
  7331  0D86  00D9               	movwf	_switchTap_pressed^(0+128)
  7332  0D87  0008               	return
  7333  0D88                     __end_of_updateSwitchTap:	
  7334                           
  7335                           	psect	text3
  7336  1F44                     __ptext3:	
  7337 ;; *************** function _setLongTapState *****************
  7338 ;; Defined at:
  7339 ;;		line 172 in file "SwitchTap.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  f_state         2    0[BANK0 ] int 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;		None
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		wreg, status,0
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7355 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7356 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7357 ;;Total ram usage:        4 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    2
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_updateSwitchTap
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           
  7368                           ;psect for function _setLongTapState
  7369  1F44                     _setLongTapState:	
  7370                           
  7371                           ;SwitchTap.c: 173: if (longTap_state == f_state) {return;}
  7372                           
  7373                           ;incstack = 0
  7374                           ; Regs used in _setLongTapState: [wreg+status,0]
  7375  1F44  0021               	movlb	1	; select bank1
  7376  1F45  086C               	movf	_longTap_state^(0+128),w	;volatile
  7377  1F46  0020               	movlb	0	; select bank0
  7378  1F47  00A2               	movwf	??_setLongTapState
  7379  1F48  01A3               	clrf	??_setLongTapState+1
  7380  1F49  0821               	movf	setLongTapState@f_state+1,w
  7381  1F4A  0623               	xorwf	??_setLongTapState+1,w
  7382  1F4B  1D03               	skipz
  7383  1F4C  2F4F               	goto	u2575
  7384  1F4D  0820               	movf	setLongTapState@f_state,w
  7385  1F4E  0622               	xorwf	??_setLongTapState,w
  7386  1F4F                     u2575:	
  7387  1F4F  1903               	btfsc	3,2
  7388  1F50  0008               	return
  7389                           
  7390                           ;SwitchTap.c: 174: longTap_state = f_state;
  7391  1F51  0820               	movf	setLongTapState@f_state,w
  7392  1F52  00A2               	movwf	??_setLongTapState
  7393  1F53  0822               	movf	??_setLongTapState,w
  7394  1F54  0021               	movlb	1	; select bank1
  7395  1F55  00EC               	movwf	_longTap_state^(0+128)	;volatile
  7396                           
  7397                           ;SwitchTap.c: 175: LATBbits.LATB5 = f_state;
  7398  1F56  0020               	movlb	0	; select bank0
  7399  1F57  0C20               	rrf	setLongTapState@f_state,w
  7400  1F58  0022               	movlb	2	; select bank2
  7401  1F59  1C03               	skipc
  7402  1F5A  128D               	bcf	13,5	;volatile
  7403  1F5B  1803               	skipnc
  7404  1F5C  168D               	bsf	13,5	;volatile
  7405  1F5D  0008               	return
  7406  1F5E                     __end_of_setLongTapState:	
  7407                           
  7408                           	psect	text4
  7409  0711                     __ptext4:	
  7410 ;; *************** function _updateSwitchBypass *****************
  7411 ;; Defined at:
  7412 ;;		line 34 in file "SwitchBypass.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;		None
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;		None
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0, pclath, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7429 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7430 ;;Total ram usage:        2 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:    5
  7433 ;; This function calls:
  7434 ;;		_setDoublePressState
  7435 ;;		_setFeedbackState
  7436 ;;		_setSwitchBypassState
  7437 ;; This function is called by:
  7438 ;;		_main
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           
  7443                           ;psect for function _updateSwitchBypass
  7444  0711                     _updateSwitchBypass:	
  7445                           
  7446                           ;SwitchBypass.c: 41: if (PORTEbits.RE1 == 0) {
  7447                           
  7448                           ;incstack = 0
  7449                           ; Regs used in _updateSwitchBypass: [wreg+status,2+status,0+pclath+cstack]
  7450  0711  0020               	movlb	0	; select bank0
  7451  0712  1890               	btfsc	16,1	;volatile
  7452  0713  2F27               	goto	l3757
  7453                           
  7454                           ;SwitchBypass.c: 42: if (switchBypass_pressed > 0) {
  7455  0714  0021               	movlb	1	; select bank1
  7456  0715  0850               	movf	(_switchBypass_pressed+1)^(0+128),w
  7457  0716  3A80               	xorlw	128
  7458  0717  0020               	movlb	0	; select bank0
  7459  0718  00B2               	movwf	??_updateSwitchBypass
  7460  0719  3080               	movlw	128
  7461  071A  0232               	subwf	??_updateSwitchBypass,w
  7462  071B  1D03               	skipz
  7463  071C  2F20               	goto	u3435
  7464  071D  3001               	movlw	1
  7465  071E  0021               	movlb	1	; select bank1
  7466  071F  024F               	subwf	_switchBypass_pressed^(0+128),w
  7467  0720                     u3435:	
  7468  0720  1C03               	skipc
  7469  0721  2F3A               	goto	l3761
  7470                           
  7471                           ;SwitchBypass.c: 43: switchBypass_pressed--;
  7472  0722  30FF               	movlw	255
  7473  0723  0021               	movlb	1	; select bank1
  7474  0724  07CF               	addwf	_switchBypass_pressed^(0+128),f
  7475  0725  30FF               	movlw	255
  7476  0726  2F39               	goto	L6
  7477  0727                     l3757:	
  7478                           ;SwitchBypass.c: 44: }
  7479                           ;SwitchBypass.c: 45: } else if (switchBypass_pressed < 25) {
  7480                           
  7481  0727  0021               	movlb	1	; select bank1
  7482  0728  0850               	movf	(_switchBypass_pressed+1)^(0+128),w
  7483  0729  3A80               	xorlw	128
  7484  072A  0020               	movlb	0	; select bank0
  7485  072B  00B2               	movwf	??_updateSwitchBypass
  7486  072C  3080               	movlw	128
  7487  072D  0232               	subwf	??_updateSwitchBypass,w
  7488  072E  1D03               	skipz
  7489  072F  2F33               	goto	u3445
  7490  0730  3019               	movlw	25
  7491  0731  0021               	movlb	1	; select bank1
  7492  0732  024F               	subwf	_switchBypass_pressed^(0+128),w
  7493  0733                     u3445:	
  7494  0733  1803               	skipnc
  7495  0734  2F3A               	goto	l3761
  7496                           
  7497                           ;SwitchBypass.c: 46: switchBypass_pressed++;
  7498  0735  3001               	movlw	1
  7499  0736  0021               	movlb	1	; select bank1
  7500  0737  07CF               	addwf	_switchBypass_pressed^(0+128),f
  7501  0738  3000               	movlw	0
  7502  0739                     L6:	
  7503  0739  3DD0               	addwfc	(_switchBypass_pressed+1)^(0+128),f
  7504  073A                     l3761:	
  7505                           
  7506                           ;SwitchBypass.c: 47: }
  7507                           ;SwitchBypass.c: 53: if (switchBypass_pressed == 0) {
  7508  073A  0021               	movlb	1	; select bank1
  7509  073B  084F               	movf	_switchBypass_pressed^(0+128),w
  7510  073C  0450               	iorwf	(_switchBypass_pressed+1)^(0+128),w
  7511  073D  1D03               	btfss	3,2
  7512  073E  2F97               	goto	l3801
  7513                           
  7514                           ;SwitchBypass.c: 56: if (feedback_start == 0) {
  7515  073F  0852               	movf	_feedback_start^(0+128),w
  7516  0740  1D03               	btfss	3,2
  7517  0741  2F46               	goto	l3769
  7518                           
  7519                           ;SwitchBypass.c: 57: feedback_start = 1;
  7520  0742  01D2               	clrf	_feedback_start^(0+128)
  7521  0743  0AD2               	incf	_feedback_start^(0+128),f
  7522                           
  7523                           ;SwitchBypass.c: 58: feedback_timer = 0;
  7524  0744  01C7               	clrf	_feedback_timer^(0+128)	;volatile
  7525  0745  01C8               	clrf	(_feedback_timer+1)^(0+128)	;volatile
  7526  0746                     l3769:	
  7527                           
  7528                           ;SwitchBypass.c: 59: }
  7529                           ;SwitchBypass.c: 61: if (feedback_timer >= long_press_limit && feedback_state == 0 && do
      +                          ubleTap_state == 0) {
  7530  0746  0865               	movf	(_long_press_limit+1)^(0+128),w
  7531  0747  0248               	subwf	(_feedback_timer+1)^(0+128),w	;volatile
  7532  0748  1D03               	skipz
  7533  0749  2F4C               	goto	u3475
  7534  074A  0864               	movf	_long_press_limit^(0+128),w
  7535  074B  0247               	subwf	_feedback_timer^(0+128),w	;volatile
  7536  074C                     u3475:	
  7537  074C  1C03               	skipc
  7538  074D  2F6C               	goto	l3783
  7539  074E  0020               	movlb	0	; select bank0
  7540  074F  086F               	movf	_feedback_state,w	;volatile
  7541  0750  1D03               	btfss	3,2
  7542  0751  2F6C               	goto	l3783
  7543  0752  087D               	movf	_doubleTap_state,w	;volatile
  7544  0753  1D03               	btfss	3,2
  7545  0754  2F6C               	goto	l3783
  7546                           
  7547                           ;SwitchBypass.c: 64: LATBbits.LATB2 = 0;
  7548  0755  0022               	movlb	2	; select bank2
  7549  0756  110D               	bcf	13,2	;volatile
  7550                           
  7551                           ;SwitchBypass.c: 65: if (longTap_start != 1) {
  7552  0757  0021               	movlb	1	; select bank1
  7553  0758  0353               	decf	_longTap_start^(0+128),w
  7554  0759  1903               	btfsc	3,2
  7555  075A  2F64               	goto	l3781
  7556                           
  7557                           ;SwitchBypass.c: 66: setFeedbackState(1);
  7558  075B  3001               	movlw	1
  7559  075C  0020               	movlb	0	; select bank0
  7560  075D  00AE               	movwf	setFeedbackState@f_state
  7561  075E  3000               	movlw	0
  7562  075F  00AF               	movwf	setFeedbackState@f_state+1
  7563  0760  319F  277A  3187   	fcall	_setFeedbackState
  7564                           
  7565                           ;SwitchBypass.c: 67: } else {
  7566  0763  2F6C               	goto	l3783
  7567  0764                     l3781:	
  7568                           
  7569                           ;SwitchBypass.c: 68: setDoublePressState(1);
  7570  0764  3001               	movlw	1
  7571  0765  0020               	movlb	0	; select bank0
  7572  0766  00AE               	movwf	setDoublePressState@f_state
  7573  0767  3000               	movlw	0
  7574  0768  00AF               	movwf	setDoublePressState@f_state+1
  7575  0769  3190  203A  3187   	fcall	_setDoublePressState
  7576  076C                     l3783:	
  7577                           
  7578                           ;SwitchBypass.c: 69: }
  7579                           ;SwitchBypass.c: 70: }
  7580                           ;SwitchBypass.c: 72: if (doubleTap_state == 0 && feedback_state == 0) {
  7581  076C  087D               	movf	_doubleTap_state,w	;volatile
  7582  076D  1D03               	btfss	3,2
  7583  076E  2F93               	goto	l988
  7584  076F  0020               	movlb	0	; select bank0
  7585  0770  086F               	movf	_feedback_state,w	;volatile
  7586  0771  1D03               	btfss	3,2
  7587  0772  2F93               	goto	l988
  7588                           
  7589                           ;SwitchBypass.c: 73: if (switchBypass_state == 1) {
  7590  0773  0021               	movlb	1	; select bank1
  7591  0774  036E               	decf	_switchBypass_state^(0+128),w
  7592  0775  1D03               	btfss	3,2
  7593  0776  2F85               	goto	l3795
  7594                           
  7595                           ;SwitchBypass.c: 75: if (switchBypass_up == 1) {
  7596  0777  0022               	movlb	2	; select bank2
  7597  0778  035C               	decf	_switchBypass_up^(0+256),w
  7598  0779  045D               	iorwf	(_switchBypass_up+1)^(0+256),w
  7599  077A  1D03               	btfss	3,2
  7600  077B  2F93               	goto	l988
  7601                           
  7602                           ;SwitchBypass.c: 76: currentBypassState = 1;
  7603  077C  0021               	movlb	1	; select bank1
  7604  077D  01EB               	clrf	_currentBypassState^(0+128)
  7605  077E  0AEB               	incf	_currentBypassState^(0+128),f
  7606                           
  7607                           ;SwitchBypass.c: 77: switchBypass_toggle = 1;
  7608  077F  3001               	movlw	1
  7609  0780  0022               	movlb	2	; select bank2
  7610  0781  00C8               	movwf	_switchBypass_toggle^(0+256)
  7611  0782  3000               	movlw	0
  7612  0783  00C9               	movwf	(_switchBypass_toggle^(0+256)+1)
  7613                           
  7614                           ;SwitchBypass.c: 78: }
  7615                           ;SwitchBypass.c: 93: } else {
  7616  0784  2F93               	goto	l988
  7617  0785                     l3795:	
  7618                           
  7619                           ;SwitchBypass.c: 94: if (bypass_turning_on != 1) {
  7620  0785  0021               	movlb	1	; select bank1
  7621  0786  0351               	decf	_bypass_turning_on^(0+128),w
  7622  0787  1903               	btfsc	3,2
  7623  0788  2F93               	goto	l988
  7624                           
  7625                           ;SwitchBypass.c: 96: currentBypassState = 0;
  7626  0789  01EB               	clrf	_currentBypassState^(0+128)
  7627                           
  7628                           ;SwitchBypass.c: 98: bypass_turning_on = 1;
  7629  078A  01D1               	clrf	_bypass_turning_on^(0+128)
  7630  078B  0AD1               	incf	_bypass_turning_on^(0+128),f
  7631                           
  7632                           ;SwitchBypass.c: 99: switchBypass_toggle = 0;
  7633  078C  0022               	movlb	2	; select bank2
  7634  078D  01C8               	clrf	_switchBypass_toggle^(0+256)
  7635  078E  01C9               	clrf	(_switchBypass_toggle+1)^(0+256)
  7636                           
  7637                           ;SwitchBypass.c: 101: feedback_state = 0;
  7638  078F  0020               	movlb	0	; select bank0
  7639  0790  01EF               	clrf	_feedback_state	;volatile
  7640                           
  7641                           ;SwitchBypass.c: 102: feedback_start = 0;
  7642  0791  0021               	movlb	1	; select bank1
  7643  0792  01D2               	clrf	_feedback_start^(0+128)
  7644  0793                     l988:	
  7645                           
  7646                           ;SwitchBypass.c: 103: }
  7647                           ;SwitchBypass.c: 104: }
  7648                           ;SwitchBypass.c: 106: }
  7649                           ;SwitchBypass.c: 107: switchBypass_up = 0;
  7650  0793  0022               	movlb	2	; select bank2
  7651  0794  01DC               	clrf	_switchBypass_up^(0+256)
  7652  0795  01DD               	clrf	(_switchBypass_up+1)^(0+256)
  7653                           
  7654                           ;SwitchBypass.c: 108: } else if (switchBypass_pressed >= 25) {
  7655  0796  0008               	return
  7656  0797                     l3801:	
  7657  0797  0021               	movlb	1	; select bank1
  7658  0798  0850               	movf	(_switchBypass_pressed+1)^(0+128),w
  7659  0799  3A80               	xorlw	128
  7660  079A  0020               	movlb	0	; select bank0
  7661  079B  00B2               	movwf	??_updateSwitchBypass
  7662  079C  3080               	movlw	128
  7663  079D  0232               	subwf	??_updateSwitchBypass,w
  7664  079E  1D03               	skipz
  7665  079F  2FA3               	goto	u3565
  7666  07A0  3019               	movlw	25
  7667  07A1  0021               	movlb	1	; select bank1
  7668  07A2  024F               	subwf	_switchBypass_pressed^(0+128),w
  7669  07A3                     u3565:	
  7670  07A3  1C03               	skipc
  7671  07A4  0008               	return
  7672                           
  7673                           ;SwitchBypass.c: 109: if (doubleTap_state == 1) {
  7674  07A5  037D               	decf	_doubleTap_state,w	;volatile
  7675  07A6  1D03               	btfss	3,2
  7676  07A7  2FB1               	goto	l3807
  7677                           
  7678                           ;SwitchBypass.c: 110: setSwitchBypassState(currentBypassState);
  7679  07A8  0021               	movlb	1	; select bank1
  7680  07A9  086B               	movf	_currentBypassState^(0+128),w
  7681  07AA  0020               	movlb	0	; select bank0
  7682  07AB  00B2               	movwf	??_updateSwitchBypass
  7683  07AC  01B3               	clrf	??_updateSwitchBypass+1
  7684  07AD  0832               	movf	??_updateSwitchBypass,w
  7685  07AE  00AE               	movwf	setSwitchBypassState@f_state
  7686  07AF  0833               	movf	??_updateSwitchBypass+1,w
  7687  07B0  2FCC               	goto	L7
  7688  07B1                     l3807:	
  7689                           ;SwitchBypass.c: 111: } else if (bypass_turning_on == 1 || feedback_state == 1) {
  7690                           
  7691  07B1  0021               	movlb	1	; select bank1
  7692  07B2  0351               	decf	_bypass_turning_on^(0+128),w
  7693  07B3  1903               	btfsc	3,2
  7694  07B4  2FB9               	goto	l3811
  7695  07B5  0020               	movlb	0	; select bank0
  7696  07B6  036F               	decf	_feedback_state,w	;volatile
  7697  07B7  1D03               	btfss	3,2
  7698  07B8  2FBE               	goto	l3813
  7699  07B9                     l3811:	
  7700                           
  7701                           ;SwitchBypass.c: 112: setSwitchBypassState(1);
  7702  07B9  3001               	movlw	1
  7703  07BA  0020               	movlb	0	; select bank0
  7704  07BB  00AE               	movwf	setSwitchBypassState@f_state
  7705  07BC  3000               	movlw	0
  7706  07BD  2FCC               	goto	L7
  7707  07BE                     l3813:	
  7708                           ;SwitchBypass.c: 113: } else if (switchBypass_toggle == 1 && feedback_state == 0 && doub
      +                          leTap_state == 0) {
  7709                           
  7710  07BE  0022               	movlb	2	; select bank2
  7711  07BF  0348               	decf	_switchBypass_toggle^(0+256),w
  7712  07C0  0449               	iorwf	(_switchBypass_toggle+1)^(0+256),w
  7713  07C1  1D03               	btfss	3,2
  7714  07C2  2FD0               	goto	l3821
  7715  07C3  0020               	movlb	0	; select bank0
  7716  07C4  086F               	movf	_feedback_state,w	;volatile
  7717  07C5  1D03               	btfss	3,2
  7718  07C6  2FD0               	goto	l3821
  7719  07C7  087D               	movf	_doubleTap_state,w	;volatile
  7720  07C8  1D03               	btfss	3,2
  7721  07C9  2FD0               	goto	l3821
  7722                           
  7723                           ;SwitchBypass.c: 114: setSwitchBypassState(0);
  7724  07CA  3000               	movlw	0
  7725  07CB  00AE               	movwf	setSwitchBypassState@f_state
  7726  07CC                     L7:	
  7727  07CC  00AF               	movwf	setSwitchBypassState@f_state+1
  7728  07CD  3194  240F  3187   	fcall	_setSwitchBypassState
  7729  07D0                     l3821:	
  7730                           
  7731                           ;SwitchBypass.c: 115: }
  7732                           ;SwitchBypass.c: 118: LATBbits.LATB2 = switchBypass_state;
  7733  07D0  0021               	movlb	1	; select bank1
  7734  07D1  0C6E               	rrf	_switchBypass_state^(0+128),w
  7735  07D2  0022               	movlb	2	; select bank2
  7736  07D3  1C03               	skipc
  7737  07D4  110D               	bcf	13,2	;volatile
  7738  07D5  1803               	skipnc
  7739  07D6  150D               	bsf	13,2	;volatile
  7740                           
  7741                           ;SwitchBypass.c: 120: setFeedbackState(0);
  7742  07D7  3000               	movlw	0
  7743  07D8  0020               	movlb	0	; select bank0
  7744  07D9  00AE               	movwf	setFeedbackState@f_state
  7745  07DA  00AF               	movwf	setFeedbackState@f_state+1
  7746  07DB  319F  277A  3187   	fcall	_setFeedbackState
  7747                           
  7748                           ;SwitchBypass.c: 121: setDoublePressState(0);
  7749  07DE  3000               	movlw	0
  7750  07DF  0020               	movlb	0	; select bank0
  7751  07E0  00AE               	movwf	setDoublePressState@f_state
  7752  07E1  00AF               	movwf	setDoublePressState@f_state+1
  7753  07E2  3190  203A         	fcall	_setDoublePressState
  7754                           
  7755                           ;SwitchBypass.c: 122: feedback_start = 0;
  7756  07E4  0021               	movlb	1	; select bank1
  7757  07E5  01D2               	clrf	_feedback_start^(0+128)
  7758                           
  7759                           ;SwitchBypass.c: 123: bypass_turning_on = 0;
  7760  07E6  01D1               	clrf	_bypass_turning_on^(0+128)
  7761                           
  7762                           ;SwitchBypass.c: 124: switchBypass_toggle = 0;
  7763  07E7  0022               	movlb	2	; select bank2
  7764  07E8  01C8               	clrf	_switchBypass_toggle^(0+256)
  7765  07E9  01C9               	clrf	(_switchBypass_toggle+1)^(0+256)
  7766                           
  7767                           ;SwitchBypass.c: 125: switchBypass_up = 1;
  7768  07EA  3001               	movlw	1
  7769  07EB  00DC               	movwf	_switchBypass_up^(0+256)
  7770  07EC  3000               	movlw	0
  7771  07ED  00DD               	movwf	(_switchBypass_up^(0+256)+1)
  7772                           
  7773                           ;SwitchBypass.c: 127: switchBypass_pressed = 25;
  7774  07EE  3019               	movlw	25
  7775  07EF  0021               	movlb	1	; select bank1
  7776  07F0  00CF               	movwf	_switchBypass_pressed^(0+128)
  7777  07F1  3000               	movlw	0
  7778  07F2  00D0               	movwf	(_switchBypass_pressed^(0+128)+1)
  7779  07F3  0008               	return
  7780  07F4                     __end_of_updateSwitchBypass:	
  7781                           
  7782                           	psect	text5
  7783  1F7A                     __ptext5:	
  7784 ;; *************** function _setFeedbackState *****************
  7785 ;; Defined at:
  7786 ;;		line 151 in file "SwitchBypass.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;  f_state         2   14[BANK0 ] int 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      void 
  7793 ;; Registers used:
  7794 ;;		wreg, status,2, status,0, pclath, cstack
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7802 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7803 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7804 ;;Total ram usage:        4 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:    4
  7807 ;; This function calls:
  7808 ;;		_wait_ms
  7809 ;; This function is called by:
  7810 ;;		_updateSwitchBypass
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           
  7815                           ;psect for function _setFeedbackState
  7816  1F7A                     _setFeedbackState:	
  7817                           
  7818                           ;SwitchBypass.c: 152: if (feedback_state == f_state) {return;}
  7819                           
  7820                           ;incstack = 0
  7821                           ; Regs used in _setFeedbackState: [wreg+status,2+status,0+pclath+cstack]
  7822  1F7A  0020               	movlb	0	; select bank0
  7823  1F7B  086F               	movf	_feedback_state,w	;volatile
  7824  1F7C  00B0               	movwf	??_setFeedbackState
  7825  1F7D  01B1               	clrf	??_setFeedbackState+1
  7826  1F7E  082F               	movf	setFeedbackState@f_state+1,w
  7827  1F7F  0631               	xorwf	??_setFeedbackState+1,w
  7828  1F80  1D03               	skipz
  7829  1F81  2F84               	goto	u2545
  7830  1F82  082E               	movf	setFeedbackState@f_state,w
  7831  1F83  0630               	xorwf	??_setFeedbackState,w
  7832  1F84                     u2545:	
  7833  1F84  1903               	btfsc	3,2
  7834  1F85  0008               	return
  7835                           
  7836                           ;SwitchBypass.c: 153: feedback_state = f_state;
  7837  1F86  082E               	movf	setFeedbackState@f_state,w
  7838  1F87  00B0               	movwf	??_setFeedbackState
  7839  1F88  0830               	movf	??_setFeedbackState,w
  7840  1F89  00EF               	movwf	_feedback_state	;volatile
  7841                           
  7842                           ;SwitchBypass.c: 154: LATBbits.LATB3 = f_state;
  7843  1F8A  0C2E               	rrf	setFeedbackState@f_state,w
  7844  1F8B  0022               	movlb	2	; select bank2
  7845  1F8C  1C03               	skipc
  7846  1F8D  118D               	bcf	13,3	;volatile
  7847  1F8E  1803               	skipnc
  7848  1F8F  158D               	bsf	13,3	;volatile
  7849                           
  7850                           ;SwitchBypass.c: 156: wait_ms(20);
  7851  1F90  3014               	movlw	20
  7852  1F91  0020               	movlb	0	; select bank0
  7853  1F92  00AC               	movwf	wait_ms@time
  7854  1F93  3000               	movlw	0
  7855  1F94  00AD               	movwf	wait_ms@time+1
  7856  1F95  3190  20C7         	fcall	_wait_ms
  7857  1F97  0008               	return
  7858  1F98                     __end_of_setFeedbackState:	
  7859                           
  7860                           	psect	text6
  7861  103A                     __ptext6:	
  7862 ;; *************** function _setDoublePressState *****************
  7863 ;; Defined at:
  7864 ;;		line 20 in file "preset_programming.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  f_state         2   14[BANK0 ] int 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, status,2, status,0, pclath, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7881 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7882 ;;Total ram usage:        4 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    4
  7885 ;; This function calls:
  7886 ;;		_wait_ms
  7887 ;; This function is called by:
  7888 ;;		_updateSwitchBypass
  7889 ;;		_updateSwitchTap
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           
  7894                           ;psect for function _setDoublePressState
  7895  103A                     _setDoublePressState:	
  7896                           
  7897                           ;preset_programming.c: 21: if (doubleTap_state == f_state) {return;}
  7898                           
  7899                           ;incstack = 0
  7900                           ; Regs used in _setDoublePressState: [wreg+status,2+status,0+pclath+cstack]
  7901  103A  087D               	movf	_doubleTap_state,w	;volatile
  7902  103B  0020               	movlb	0	; select bank0
  7903  103C  00B0               	movwf	??_setDoublePressState
  7904  103D  01B1               	clrf	??_setDoublePressState+1
  7905  103E  082F               	movf	setDoublePressState@f_state+1,w
  7906  103F  0631               	xorwf	??_setDoublePressState+1,w
  7907  1040  1D03               	skipz
  7908  1041  2844               	goto	u2555
  7909  1042  082E               	movf	setDoublePressState@f_state,w
  7910  1043  0630               	xorwf	??_setDoublePressState,w
  7911  1044                     u2555:	
  7912  1044  1903               	btfsc	3,2
  7913  1045  0008               	return
  7914                           
  7915                           ;preset_programming.c: 22: doubleTap_state = f_state;
  7916  1046  082E               	movf	setDoublePressState@f_state,w
  7917  1047  00B0               	movwf	??_setDoublePressState
  7918  1048  0830               	movf	??_setDoublePressState,w
  7919  1049  00FD               	movwf	_doubleTap_state	;volatile
  7920                           
  7921                           ;preset_programming.c: 23: if (f_state == 1) {
  7922  104A  032E               	decf	setDoublePressState@f_state,w
  7923  104B  042F               	iorwf	setDoublePressState@f_state+1,w
  7924  104C  1D03               	btfss	3,2
  7925  104D  2851               	goto	l3335
  7926                           
  7927                           ;preset_programming.c: 24: LATBbits.LATB4 = 0;
  7928  104E  0022               	movlb	2	; select bank2
  7929  104F  120D               	bcf	13,4	;volatile
  7930                           
  7931                           ;preset_programming.c: 25: LATBbits.LATB2 = 0;
  7932  1050  110D               	bcf	13,2	;volatile
  7933  1051                     l3335:	
  7934                           
  7935                           ;preset_programming.c: 26: }
  7936                           ;preset_programming.c: 28: LATBbits.LATB1 = f_state;
  7937  1051  0020               	movlb	0	; select bank0
  7938  1052  0C2E               	rrf	setDoublePressState@f_state,w
  7939  1053  0022               	movlb	2	; select bank2
  7940  1054  1C03               	skipc
  7941  1055  108D               	bcf	13,1	;volatile
  7942  1056  1803               	skipnc
  7943  1057  148D               	bsf	13,1	;volatile
  7944                           
  7945                           ;preset_programming.c: 29: LATBbits.LATB0 = f_state;
  7946  1058  0020               	movlb	0	; select bank0
  7947  1059  0C2E               	rrf	setDoublePressState@f_state,w
  7948  105A  0022               	movlb	2	; select bank2
  7949  105B  1C03               	skipc
  7950  105C  100D               	bcf	13,0	;volatile
  7951  105D  1803               	skipnc
  7952  105E  140D               	bsf	13,0	;volatile
  7953                           
  7954                           ;preset_programming.c: 31: wait_ms(20);
  7955  105F  3014               	movlw	20
  7956  1060  0020               	movlb	0	; select bank0
  7957  1061  00AC               	movwf	wait_ms@time
  7958  1062  3000               	movlw	0
  7959  1063  00AD               	movwf	wait_ms@time+1
  7960  1064  3190  20C7         	fcall	_wait_ms
  7961  1066  0008               	return
  7962  1067                     __end_of_setDoublePressState:	
  7963                           
  7964                           	psect	text7
  7965  100F                     __ptext7:	
  7966 ;; *************** function _showBootSequence *****************
  7967 ;; Defined at:
  7968 ;;		line 86 in file "LEDs.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      void 
  7975 ;; Registers used:
  7976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7985 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7986 ;;Total ram usage:        1 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    5
  7989 ;; This function calls:
  7990 ;;		_getCurrentLEDState
  7991 ;;		_restoreLEDState
  7992 ;;		_solidring_tactiles
  7993 ;;		_star_tactiles
  7994 ;; This function is called by:
  7995 ;;		_main
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           
  8000                           ;psect for function _showBootSequence
  8001  100F                     _showBootSequence:	
  8002                           
  8003                           ;LEDs.c: 87: getCurrentLEDState();
  8004                           
  8005                           ;incstack = 0
  8006                           ; Regs used in _showBootSequence: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8007  100F  319E  26DA  3190   	fcall	_getCurrentLEDState
  8008                           
  8009                           ;LEDs.c: 88: suspend_blink = 1;
  8010  1012  3001               	movlw	1
  8011  1013  0020               	movlb	0	; select bank0
  8012  1014  00B5               	movwf	??_showBootSequence
  8013  1015  0835               	movf	??_showBootSequence,w
  8014  1016  0021               	movlb	1	; select bank1
  8015  1017  00D7               	movwf	_suspend_blink^(0+128)	;volatile
  8016                           
  8017                           ;LEDs.c: 90: LATBbits.LATB4 = 0;
  8018  1018  0022               	movlb	2	; select bank2
  8019  1019  120D               	bcf	13,4	;volatile
  8020                           
  8021                           ;LEDs.c: 91: LATBbits.LATB2 = 0;
  8022  101A  110D               	bcf	13,2	;volatile
  8023                           
  8024                           ;LEDs.c: 92: LATBbits.LATB5 = 0;
  8025  101B  128D               	bcf	13,5	;volatile
  8026                           
  8027                           ;LEDs.c: 93: LATBbits.LATB3 = 0;
  8028  101C  118D               	bcf	13,3	;volatile
  8029                           
  8030                           ;LEDs.c: 94: LATBbits.LATB0 = 0;
  8031  101D  100D               	bcf	13,0	;volatile
  8032                           
  8033                           ;LEDs.c: 95: LATBbits.LATB1 = 0;
  8034  101E  108D               	bcf	13,1	;volatile
  8035                           
  8036                           ;LEDs.c: 113: star_tactiles(0);
  8037  101F  3000               	movlw	0
  8038  1020  3188  2002  3190   	fcall	_star_tactiles
  8039                           
  8040                           ;LEDs.c: 114: star_tactiles(0);
  8041  1023  3000               	movlw	0
  8042  1024  3188  2002  3190   	fcall	_star_tactiles
  8043                           
  8044                           ;LEDs.c: 115: star_tactiles(1);
  8045  1027  3001               	movlw	1
  8046  1028  3188  2002  3190   	fcall	_star_tactiles
  8047                           
  8048                           ;LEDs.c: 116: star_tactiles(1);
  8049  102B  3001               	movlw	1
  8050  102C  3188  2002  3190   	fcall	_star_tactiles
  8051                           
  8052                           ;LEDs.c: 118: solidring_tactiles();
  8053  102F  3193  2301  3190   	fcall	_solidring_tactiles
  8054                           
  8055                           ;LEDs.c: 119: solidring_tactiles();
  8056  1032  3193  2301  3190   	fcall	_solidring_tactiles
  8057                           
  8058                           ;LEDs.c: 122: suspend_blink = 0;
  8059  1035  0021               	movlb	1	; select bank1
  8060  1036  01D7               	clrf	_suspend_blink^(0+128)	;volatile
  8061                           
  8062                           ;LEDs.c: 123: restoreLEDState();
  8063  1037  319E  26FF         	fcall	_restoreLEDState
  8064  1039  0008               	return
  8065  103A                     __end_of_showBootSequence:	
  8066                           
  8067                           	psect	text8
  8068  0802                     __ptext8:	
  8069 ;; *************** function _star_tactiles *****************
  8070 ;; Defined at:
  8071 ;;		line 194 in file "LEDs.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  reverse         1    wreg     unsigned char 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  reverse         1   16[BANK0 ] unsigned char 
  8076 ;;  iLed            2   19[BANK0 ] int 
  8077 ;;  iLed            2   17[BANK0 ] int 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  1    wreg      void 
  8080 ;; Registers used:
  8081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8088 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8089 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8090 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8091 ;;Total ram usage:        7 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; Hardware stack levels required when called:    4
  8094 ;; This function calls:
  8095 ;;		_set_leds_bottom
  8096 ;;		_set_leds_top
  8097 ;;		_wait_ms
  8098 ;; This function is called by:
  8099 ;;		_showBootSequence
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           
  8104                           ;psect for function _star_tactiles
  8105  0802                     _star_tactiles:	
  8106                           
  8107                           ;incstack = 0
  8108                           ; Regs used in _star_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8109                           ;star_tactiles@reverse stored from wreg
  8110  0802  0020               	movlb	0	; select bank0
  8111  0803  00B0               	movwf	star_tactiles@reverse
  8112                           
  8113                           ;LEDs.c: 195: if (reverse == 1) {
  8114  0804  0330               	decf	star_tactiles@reverse,w
  8115  0805  1D03               	btfss	3,2
  8116  0806  2837               	goto	l3259
  8117                           
  8118                           ;LEDs.c: 196: for (int iLed = 5; iLed > -1; iLed--) {
  8119  0807  3005               	movlw	5
  8120  0808  00B1               	movwf	star_tactiles@iLed
  8121  0809  3000               	movlw	0
  8122  080A  00B2               	movwf	star_tactiles@iLed+1
  8123  080B                     L8:	
  8124  080B  1BB2               	btfsc	star_tactiles@iLed+1,7
  8125  080C  0008               	return
  8126                           
  8127                           ;LEDs.c: 197: set_leds_top(iLed, 1);
  8128  080D  0832               	movf	star_tactiles@iLed+1,w
  8129  080E  00A1               	movwf	set_leds_top@x+1
  8130  080F  0831               	movf	star_tactiles@iLed,w
  8131  0810  00A0               	movwf	set_leds_top@x
  8132  0811  3001               	movlw	1
  8133  0812  00A2               	movwf	set_leds_top@ledState
  8134  0813  3000               	movlw	0
  8135  0814  00A3               	movwf	set_leds_top@ledState+1
  8136  0815  3195  259B  3188   	fcall	_set_leds_top
  8137                           
  8138                           ;LEDs.c: 198: set_leds_bottom(6 - iLed);
  8139  0818  0020               	movlb	0	; select bank0
  8140  0819  0931               	comf	star_tactiles@iLed,w
  8141  081A  00AE               	movwf	??_star_tactiles
  8142  081B  0932               	comf	star_tactiles@iLed+1,w
  8143  081C  00AF               	movwf	??_star_tactiles+1
  8144  081D  0AAE               	incf	??_star_tactiles,f
  8145  081E  1903               	skipnz
  8146  081F  0AAF               	incf	??_star_tactiles+1,f
  8147  0820  082E               	movf	??_star_tactiles,w
  8148  0821  3E06               	addlw	6
  8149  0822  00A0               	movwf	set_leds_bottom@x
  8150  0823  3000               	movlw	0
  8151  0824  3D2F               	addwfc	??_star_tactiles+1,w
  8152  0825  00A1               	movwf	set_leds_bottom@x+1
  8153  0826  3192  224B  3188   	fcall	_set_leds_bottom
  8154                           
  8155                           ;LEDs.c: 199: wait_ms(5);
  8156  0829  3005               	movlw	5
  8157  082A  0020               	movlb	0	; select bank0
  8158  082B  00AC               	movwf	wait_ms@time
  8159  082C  3000               	movlw	0
  8160  082D  00AD               	movwf	wait_ms@time+1
  8161  082E  3190  20C7  3188   	fcall	_wait_ms
  8162  0831  30FF               	movlw	255
  8163  0832  0020               	movlb	0	; select bank0
  8164  0833  07B1               	addwf	star_tactiles@iLed,f
  8165  0834  30FF               	movlw	255
  8166  0835  3DB2               	addwfc	star_tactiles@iLed+1,f
  8167  0836  280B               	goto	L8
  8168  0837                     l3259:	
  8169                           ;LEDs.c: 200: }
  8170                           ;LEDs.c: 201: } else {
  8171                           
  8172                           
  8173                           ;LEDs.c: 202: for (int iLed = 1; iLed < 7; iLed++) {
  8174  0837  3001               	movlw	1
  8175  0838  00B3               	movwf	star_tactiles@iLed_1391
  8176  0839  3000               	movlw	0
  8177  083A  00B4               	movwf	star_tactiles@iLed_1391+1
  8178  083B                     L9:	
  8179  083B  0834               	movf	star_tactiles@iLed_1391+1,w
  8180  083C  3A80               	xorlw	128
  8181  083D  00AE               	movwf	??_star_tactiles
  8182  083E  3080               	movlw	128
  8183  083F  022E               	subwf	??_star_tactiles,w
  8184  0840  1D03               	skipz
  8185  0841  2844               	goto	u2495
  8186  0842  3007               	movlw	7
  8187  0843  0233               	subwf	star_tactiles@iLed_1391,w
  8188  0844                     u2495:	
  8189  0844  1803               	btfsc	3,0
  8190  0845  0008               	return
  8191                           
  8192                           ;LEDs.c: 203: set_leds_top(iLed, 1);
  8193  0846  0020               	movlb	0	; select bank0
  8194  0847  0834               	movf	star_tactiles@iLed_1391+1,w
  8195  0848  00A1               	movwf	set_leds_top@x+1
  8196  0849  0833               	movf	star_tactiles@iLed_1391,w
  8197  084A  00A0               	movwf	set_leds_top@x
  8198  084B  3001               	movlw	1
  8199  084C  00A2               	movwf	set_leds_top@ledState
  8200  084D  3000               	movlw	0
  8201  084E  00A3               	movwf	set_leds_top@ledState+1
  8202  084F  3195  259B  3188   	fcall	_set_leds_top
  8203                           
  8204                           ;LEDs.c: 204: set_leds_bottom(6 - iLed);
  8205  0852  0020               	movlb	0	; select bank0
  8206  0853  0933               	comf	star_tactiles@iLed_1391,w
  8207  0854  00AE               	movwf	??_star_tactiles
  8208  0855  0934               	comf	star_tactiles@iLed_1391+1,w
  8209  0856  00AF               	movwf	??_star_tactiles+1
  8210  0857  0AAE               	incf	??_star_tactiles,f
  8211  0858  1903               	skipnz
  8212  0859  0AAF               	incf	??_star_tactiles+1,f
  8213  085A  082E               	movf	??_star_tactiles,w
  8214  085B  3E06               	addlw	6
  8215  085C  00A0               	movwf	set_leds_bottom@x
  8216  085D  3000               	movlw	0
  8217  085E  3D2F               	addwfc	??_star_tactiles+1,w
  8218  085F  00A1               	movwf	set_leds_bottom@x+1
  8219  0860  3192  224B  3188   	fcall	_set_leds_bottom
  8220                           
  8221                           ;LEDs.c: 205: wait_ms(5);
  8222  0863  3005               	movlw	5
  8223  0864  0020               	movlb	0	; select bank0
  8224  0865  00AC               	movwf	wait_ms@time
  8225  0866  3000               	movlw	0
  8226  0867  00AD               	movwf	wait_ms@time+1
  8227  0868  3190  20C7  3188   	fcall	_wait_ms
  8228  086B  3001               	movlw	1
  8229  086C  0020               	movlb	0	; select bank0
  8230  086D  07B3               	addwf	star_tactiles@iLed_1391,f
  8231  086E  3000               	movlw	0
  8232  086F  3DB4               	addwfc	star_tactiles@iLed_1391+1,f
  8233  0870  283B               	goto	L9
  8234  0871                     __end_of_star_tactiles:	
  8235                           
  8236                           	psect	text9
  8237  1301                     __ptext9:	
  8238 ;; *************** function _solidring_tactiles *****************
  8239 ;; Defined at:
  8240 ;;		line 223 in file "LEDs.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;		None
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  ring_delay      1   16[BANK0 ] unsigned char 
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      void 
  8247 ;; Registers used:
  8248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8256 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8257 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8258 ;;Total ram usage:        3 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; Hardware stack levels required when called:    4
  8261 ;; This function calls:
  8262 ;;		_set_leds_bottom
  8263 ;;		_set_leds_top
  8264 ;;		_wait_ms
  8265 ;; This function is called by:
  8266 ;;		_showBootSequence
  8267 ;;		_showSave
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           
  8272                           ;psect for function _solidring_tactiles
  8273  1301                     _solidring_tactiles:	
  8274                           
  8275                           ;LEDs.c: 224: uint8_t ring_delay = 30;
  8276                           
  8277                           ;incstack = 0
  8278                           ; Regs used in _solidring_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8279  1301  301E               	movlw	30
  8280  1302  0020               	movlb	0	; select bank0
  8281  1303  00AE               	movwf	??_solidring_tactiles
  8282  1304  082E               	movf	??_solidring_tactiles,w
  8283  1305  00B0               	movwf	solidring_tactiles@ring_delay
  8284                           
  8285                           ;LEDs.c: 225: set_leds_top(100, 1);
  8286  1306  3064               	movlw	100
  8287  1307  00A0               	movwf	set_leds_top@x
  8288  1308  3000               	movlw	0
  8289  1309  00A1               	movwf	set_leds_top@x+1
  8290  130A  3001               	movlw	1
  8291  130B  00A2               	movwf	set_leds_top@ledState
  8292  130C  3000               	movlw	0
  8293  130D  00A3               	movwf	set_leds_top@ledState+1
  8294  130E  3195  259B  3193   	fcall	_set_leds_top
  8295                           
  8296                           ;LEDs.c: 226: set_leds_bottom(100);
  8297  1311  3064               	movlw	100
  8298  1312  0020               	movlb	0	; select bank0
  8299  1313  00A0               	movwf	set_leds_bottom@x
  8300  1314  3000               	movlw	0
  8301  1315  00A1               	movwf	set_leds_bottom@x+1
  8302  1316  3192  224B  3193   	fcall	_set_leds_bottom
  8303                           
  8304                           ;LEDs.c: 227: wait_ms(ring_delay);
  8305  1319  0020               	movlb	0	; select bank0
  8306  131A  0830               	movf	solidring_tactiles@ring_delay,w
  8307  131B  00AE               	movwf	??_solidring_tactiles
  8308  131C  01AF               	clrf	??_solidring_tactiles+1
  8309  131D  082E               	movf	??_solidring_tactiles,w
  8310  131E  00AC               	movwf	wait_ms@time
  8311  131F  082F               	movf	??_solidring_tactiles+1,w
  8312  1320  00AD               	movwf	wait_ms@time+1
  8313  1321  3190  20C7  3193   	fcall	_wait_ms
  8314                           
  8315                           ;LEDs.c: 229: set_leds_top(0, 1);
  8316  1324  3000               	movlw	0
  8317  1325  0020               	movlb	0	; select bank0
  8318  1326  00A0               	movwf	set_leds_top@x
  8319  1327  00A1               	movwf	set_leds_top@x+1
  8320  1328  3001               	movlw	1
  8321  1329  00A2               	movwf	set_leds_top@ledState
  8322  132A  3000               	movlw	0
  8323  132B  00A3               	movwf	set_leds_top@ledState+1
  8324  132C  3195  259B  3193   	fcall	_set_leds_top
  8325                           
  8326                           ;LEDs.c: 230: set_leds_bottom(0);
  8327  132F  3000               	movlw	0
  8328  1330  0020               	movlb	0	; select bank0
  8329  1331  00A0               	movwf	set_leds_bottom@x
  8330  1332  00A1               	movwf	set_leds_bottom@x+1
  8331  1333  3192  224B  3193   	fcall	_set_leds_bottom
  8332                           
  8333                           ;LEDs.c: 231: wait_ms(ring_delay);
  8334  1336  0020               	movlb	0	; select bank0
  8335  1337  0830               	movf	solidring_tactiles@ring_delay,w
  8336  1338  00AE               	movwf	??_solidring_tactiles
  8337  1339  01AF               	clrf	??_solidring_tactiles+1
  8338  133A  082E               	movf	??_solidring_tactiles,w
  8339  133B  00AC               	movwf	wait_ms@time
  8340  133C  082F               	movf	??_solidring_tactiles+1,w
  8341  133D  00AD               	movwf	wait_ms@time+1
  8342  133E  3190  20C7         	fcall	_wait_ms
  8343  1340  0008               	return
  8344  1341                     __end_of_solidring_tactiles:	
  8345                           
  8346                           	psect	text10
  8347  1EFF                     __ptext10:	
  8348 ;; *************** function _restoreLEDState *****************
  8349 ;; Defined at:
  8350 ;;		line 89 in file "state_manager.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;		None
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;		None
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  1    wreg      void 
  8357 ;; Registers used:
  8358 ;;		wreg, status,0
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8368 ;;Total ram usage:        0 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; Hardware stack levels required when called:    2
  8371 ;; This function calls:
  8372 ;;		Nothing
  8373 ;; This function is called by:
  8374 ;;		_showBootSequence
  8375 ;;		_showError_Alternating
  8376 ;;		_show_error
  8377 ;;		_show_cancel
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           
  8382                           ;psect for function _restoreLEDState
  8383  1EFF                     _restoreLEDState:	
  8384                           
  8385                           ;state_manager.c: 90: LATBbits.LATB4 = ledState.tap_A;
  8386                           
  8387                           ;incstack = 0
  8388                           ; Regs used in _restoreLEDState: [wreg+status,0]
  8389  1EFF  0022               	movlb	2	; select bank2
  8390  1F00  0C20               	rrf	_ledState^(0+256),w
  8391  1F01  1C03               	skipc
  8392  1F02  120D               	bcf	13,4	;volatile
  8393  1F03  1803               	skipnc
  8394  1F04  160D               	bsf	13,4	;volatile
  8395                           
  8396                           ;state_manager.c: 91: LATBbits.LATB2 = ledState.bypass_A;
  8397  1F05  0C22               	rrf	(_ledState^(0+256)+2),w
  8398  1F06  1C03               	skipc
  8399  1F07  110D               	bcf	13,2	;volatile
  8400  1F08  1803               	skipnc
  8401  1F09  150D               	bsf	13,2	;volatile
  8402                           
  8403                           ;state_manager.c: 92: LATBbits.LATB5 = ledState.tap_B;
  8404  1F0A  0C21               	rrf	(_ledState^(0+256)+1),w
  8405  1F0B  1C03               	skipc
  8406  1F0C  128D               	bcf	13,5	;volatile
  8407  1F0D  1803               	skipnc
  8408  1F0E  168D               	bsf	13,5	;volatile
  8409                           
  8410                           ;state_manager.c: 93: LATBbits.LATB3 = ledState.bypass_B;
  8411  1F0F  0C23               	rrf	(_ledState^(0+256)+3),w
  8412  1F10  1C03               	skipc
  8413  1F11  118D               	bcf	13,3	;volatile
  8414  1F12  1803               	skipnc
  8415  1F13  158D               	bsf	13,3	;volatile
  8416  1F14  0008               	return
  8417  1F15                     __end_of_restoreLEDState:	
  8418                           
  8419                           	psect	text11
  8420  1EDA                     __ptext11:	
  8421 ;; *************** function _getCurrentLEDState *****************
  8422 ;; Defined at:
  8423 ;;		line 83 in file "state_manager.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;		None
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;		None
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  1    wreg      void 
  8430 ;; Registers used:
  8431 ;;		wreg, status,2
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8441 ;;Total ram usage:        0 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; Hardware stack levels required when called:    2
  8444 ;; This function calls:
  8445 ;;		Nothing
  8446 ;; This function is called by:
  8447 ;;		_showBootSequence
  8448 ;;		_showError_Alternating
  8449 ;;		_show_error
  8450 ;;		_show_cancel
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           
  8455                           ;psect for function _getCurrentLEDState
  8456  1EDA                     _getCurrentLEDState:	
  8457                           
  8458                           ;state_manager.c: 84: ledState.tap_A = LATBbits.LATB4;
  8459                           
  8460                           ;incstack = 0
  8461                           ; Regs used in _getCurrentLEDState: [wreg+status,2]
  8462  1EDA  3000               	movlw	0
  8463  1EDB  0022               	movlb	2	; select bank2
  8464  1EDC  1A0D               	btfsc	13,4	;volatile
  8465  1EDD  3001               	movlw	1
  8466  1EDE  00A0               	movwf	_ledState^(0+256)
  8467                           
  8468                           ;state_manager.c: 85: ledState.bypass_A = LATBbits.LATB2 ;
  8469  1EDF  3000               	movlw	0
  8470  1EE0  190D               	btfsc	13,2	;volatile
  8471  1EE1  3001               	movlw	1
  8472  1EE2  00A2               	movwf	(_ledState^(0+256)+2)
  8473                           
  8474                           ;state_manager.c: 86: ledState.tap_B = LATBbits.LATB5 ;
  8475  1EE3  3000               	movlw	0
  8476  1EE4  1A8D               	btfsc	13,5	;volatile
  8477  1EE5  3001               	movlw	1
  8478  1EE6  00A1               	movwf	(_ledState^(0+256)+1)
  8479                           
  8480                           ;state_manager.c: 87: ledState.bypass_B = LATBbits.LATB3 ;
  8481  1EE7  3000               	movlw	0
  8482  1EE8  198D               	btfsc	13,3	;volatile
  8483  1EE9  3001               	movlw	1
  8484  1EEA  00A3               	movwf	(_ledState^(0+256)+3)
  8485  1EEB  0008               	return
  8486  1EEC                     __end_of_getCurrentLEDState:	
  8487                           
  8488                           	psect	text12
  8489  0AC4                     __ptext12:	
  8490 ;; *************** function _set_subdivision *****************
  8491 ;; Defined at:
  8492 ;;		line 77 in file "user.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  x               2    6[BANK1 ] int 
  8495 ;;  y               2    8[BANK1 ] int 
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  2    6[BANK1 ] int 
  8500 ;; Registers used:
  8501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8507 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8510 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8511 ;;Total ram usage:        4 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:    4
  8514 ;; This function calls:
  8515 ;;		___awtoft
  8516 ;;		___ftmul
  8517 ;;		___fttol
  8518 ;; This function is called by:
  8519 ;;		_main
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           
  8524                           ;psect for function _set_subdivision
  8525  0AC4                     _set_subdivision:	
  8526                           
  8527                           ;user.c: 80: switch (y) {
  8528                           
  8529                           ;incstack = 0
  8530                           ; Regs used in _set_subdivision: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8531  0AC4  2BA2               	goto	l3969
  8532  0AC5                     l3957:	
  8533                           ;user.c: 81: case 1:
  8534                           
  8535                           
  8536                           ;user.c: 82: x = x * .75;
  8537  0AC5  0021               	movlb	1	; select bank1
  8538  0AC6  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8539  0AC7  0020               	movlb	0	; select bank0
  8540  0AC8  00A9               	movwf	___awtoft@c+1
  8541  0AC9  0021               	movlb	1	; select bank1
  8542  0ACA  0826               	movf	set_subdivision@x^(0+128),w
  8543  0ACB  0020               	movlb	0	; select bank0
  8544  0ACC  00A8               	movwf	___awtoft@c
  8545  0ACD  319F  27B8  318A   	fcall	___awtoft
  8546  0AD0  0020               	movlb	0	; select bank0
  8547  0AD1  0828               	movf	?___awtoft,w
  8548  0AD2  00B8               	movwf	___ftmul@f2
  8549  0AD3  0829               	movf	?___awtoft+1,w
  8550  0AD4  00B9               	movwf	___ftmul@f2+1
  8551  0AD5  082A               	movf	?___awtoft+2,w
  8552  0AD6  00BA               	movwf	___ftmul@f2+2
  8553  0AD7  3000               	movlw	0
  8554  0AD8  00B5               	movwf	___ftmul@f1
  8555  0AD9  3040               	movlw	64
  8556  0ADA  00B6               	movwf	___ftmul@f1+1
  8557  0ADB  303F               	movlw	63
  8558  0ADC  00B7               	movwf	___ftmul@f1+2
  8559  0ADD  3189  211A  318A   	fcall	___ftmul
  8560  0AE0  0020               	movlb	0	; select bank0
  8561  0AE1  0835               	movf	?___ftmul,w
  8562  0AE2  00E7               	movwf	___fttol@f1
  8563  0AE3  0836               	movf	?___ftmul+1,w
  8564  0AE4  00E8               	movwf	___fttol@f1+1
  8565  0AE5  0837               	movf	?___ftmul+2,w
  8566  0AE6  00E9               	movwf	___fttol@f1+2
  8567  0AE7  3197  2761         	fcall	___fttol
  8568  0AE9  0020               	movlb	0	; select bank0
  8569  0AEA  0868               	movf	?___fttol+1,w
  8570  0AEB  0021               	movlb	1	; select bank1
  8571  0AEC  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8572  0AED  0020               	movlb	0	; select bank0
  8573  0AEE  0867               	movf	?___fttol,w
  8574  0AEF  0021               	movlb	1	; select bank1
  8575  0AF0  00A6               	movwf	set_subdivision@x^(0+128)
  8576                           
  8577                           ;user.c: 83: break;
  8578  0AF1  0008               	return
  8579  0AF2                     l3959:	
  8580                           ;user.c: 84: case 2:
  8581                           
  8582                           
  8583                           ;user.c: 85: x = x * .66666;
  8584  0AF2  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8585  0AF3  0020               	movlb	0	; select bank0
  8586  0AF4  00A9               	movwf	___awtoft@c+1
  8587  0AF5  0021               	movlb	1	; select bank1
  8588  0AF6  0826               	movf	set_subdivision@x^(0+128),w
  8589  0AF7  0020               	movlb	0	; select bank0
  8590  0AF8  00A8               	movwf	___awtoft@c
  8591  0AF9  319F  27B8  318A   	fcall	___awtoft
  8592  0AFC  0020               	movlb	0	; select bank0
  8593  0AFD  0828               	movf	?___awtoft,w
  8594  0AFE  00B8               	movwf	___ftmul@f2
  8595  0AFF  0829               	movf	?___awtoft+1,w
  8596  0B00  00B9               	movwf	___ftmul@f2+1
  8597  0B01  082A               	movf	?___awtoft+2,w
  8598  0B02  00BA               	movwf	___ftmul@f2+2
  8599  0B03  30AA               	movlw	170
  8600  0B04  00B5               	movwf	___ftmul@f1
  8601  0B05  302A               	movlw	42
  8602  0B06  00B6               	movwf	___ftmul@f1+1
  8603  0B07  303F               	movlw	63
  8604  0B08  00B7               	movwf	___ftmul@f1+2
  8605  0B09  3189  211A  318A   	fcall	___ftmul
  8606  0B0C  0020               	movlb	0	; select bank0
  8607  0B0D  0835               	movf	?___ftmul,w
  8608  0B0E  00E7               	movwf	___fttol@f1
  8609  0B0F  0836               	movf	?___ftmul+1,w
  8610  0B10  00E8               	movwf	___fttol@f1+1
  8611  0B11  0837               	movf	?___ftmul+2,w
  8612  0B12  00E9               	movwf	___fttol@f1+2
  8613  0B13  3197  2761         	fcall	___fttol
  8614  0B15  0020               	movlb	0	; select bank0
  8615  0B16  0868               	movf	?___fttol+1,w
  8616  0B17  0021               	movlb	1	; select bank1
  8617  0B18  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8618  0B19  0020               	movlb	0	; select bank0
  8619  0B1A  0867               	movf	?___fttol,w
  8620  0B1B  0021               	movlb	1	; select bank1
  8621  0B1C  00A6               	movwf	set_subdivision@x^(0+128)
  8622                           
  8623                           ;user.c: 86: break;
  8624  0B1D  0008               	return
  8625  0B1E                     l3961:	
  8626                           ;user.c: 87: case 3:
  8627                           
  8628                           
  8629                           ;user.c: 88: x = x * .5;
  8630  0B1E  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8631  0B1F  0020               	movlb	0	; select bank0
  8632  0B20  00A9               	movwf	___awtoft@c+1
  8633  0B21  0021               	movlb	1	; select bank1
  8634  0B22  0826               	movf	set_subdivision@x^(0+128),w
  8635  0B23  0020               	movlb	0	; select bank0
  8636  0B24  00A8               	movwf	___awtoft@c
  8637  0B25  319F  27B8  318A   	fcall	___awtoft
  8638  0B28  0020               	movlb	0	; select bank0
  8639  0B29  0828               	movf	?___awtoft,w
  8640  0B2A  00B8               	movwf	___ftmul@f2
  8641  0B2B  0829               	movf	?___awtoft+1,w
  8642  0B2C  00B9               	movwf	___ftmul@f2+1
  8643  0B2D  082A               	movf	?___awtoft+2,w
  8644  0B2E  00BA               	movwf	___ftmul@f2+2
  8645  0B2F  3000               	movlw	0
  8646  0B30  00B5               	movwf	___ftmul@f1
  8647  0B31  3000               	movlw	0
  8648  0B32  00B6               	movwf	___ftmul@f1+1
  8649  0B33  303F               	movlw	63
  8650  0B34  00B7               	movwf	___ftmul@f1+2
  8651  0B35  3189  211A  318A   	fcall	___ftmul
  8652  0B38  0020               	movlb	0	; select bank0
  8653  0B39  0835               	movf	?___ftmul,w
  8654  0B3A  00E7               	movwf	___fttol@f1
  8655  0B3B  0836               	movf	?___ftmul+1,w
  8656  0B3C  00E8               	movwf	___fttol@f1+1
  8657  0B3D  0837               	movf	?___ftmul+2,w
  8658  0B3E  00E9               	movwf	___fttol@f1+2
  8659  0B3F  3197  2761         	fcall	___fttol
  8660  0B41  0020               	movlb	0	; select bank0
  8661  0B42  0868               	movf	?___fttol+1,w
  8662  0B43  0021               	movlb	1	; select bank1
  8663  0B44  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8664  0B45  0020               	movlb	0	; select bank0
  8665  0B46  0867               	movf	?___fttol,w
  8666  0B47  0021               	movlb	1	; select bank1
  8667  0B48  00A6               	movwf	set_subdivision@x^(0+128)
  8668                           
  8669                           ;user.c: 89: break;
  8670  0B49  0008               	return
  8671  0B4A                     l3963:	
  8672                           ;user.c: 90: case 4:
  8673                           
  8674                           
  8675                           ;user.c: 91: x = x * .3333;
  8676  0B4A  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8677  0B4B  0020               	movlb	0	; select bank0
  8678  0B4C  00A9               	movwf	___awtoft@c+1
  8679  0B4D  0021               	movlb	1	; select bank1
  8680  0B4E  0826               	movf	set_subdivision@x^(0+128),w
  8681  0B4F  0020               	movlb	0	; select bank0
  8682  0B50  00A8               	movwf	___awtoft@c
  8683  0B51  319F  27B8  318A   	fcall	___awtoft
  8684  0B54  0020               	movlb	0	; select bank0
  8685  0B55  0828               	movf	?___awtoft,w
  8686  0B56  00B8               	movwf	___ftmul@f2
  8687  0B57  0829               	movf	?___awtoft+1,w
  8688  0B58  00B9               	movwf	___ftmul@f2+1
  8689  0B59  082A               	movf	?___awtoft+2,w
  8690  0B5A  00BA               	movwf	___ftmul@f2+2
  8691  0B5B  30A6               	movlw	166
  8692  0B5C  00B5               	movwf	___ftmul@f1
  8693  0B5D  30AA               	movlw	170
  8694  0B5E  00B6               	movwf	___ftmul@f1+1
  8695  0B5F  303E               	movlw	62
  8696  0B60  00B7               	movwf	___ftmul@f1+2
  8697  0B61  3189  211A  318A   	fcall	___ftmul
  8698  0B64  0020               	movlb	0	; select bank0
  8699  0B65  0835               	movf	?___ftmul,w
  8700  0B66  00E7               	movwf	___fttol@f1
  8701  0B67  0836               	movf	?___ftmul+1,w
  8702  0B68  00E8               	movwf	___fttol@f1+1
  8703  0B69  0837               	movf	?___ftmul+2,w
  8704  0B6A  00E9               	movwf	___fttol@f1+2
  8705  0B6B  3197  2761         	fcall	___fttol
  8706  0B6D  0020               	movlb	0	; select bank0
  8707  0B6E  0868               	movf	?___fttol+1,w
  8708  0B6F  0021               	movlb	1	; select bank1
  8709  0B70  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8710  0B71  0020               	movlb	0	; select bank0
  8711  0B72  0867               	movf	?___fttol,w
  8712  0B73  0021               	movlb	1	; select bank1
  8713  0B74  00A6               	movwf	set_subdivision@x^(0+128)
  8714                           
  8715                           ;user.c: 92: break;
  8716  0B75  0008               	return
  8717  0B76                     l3965:	
  8718                           ;user.c: 93: case 5:
  8719                           
  8720                           
  8721                           ;user.c: 94: x = x * .25;
  8722  0B76  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8723  0B77  0020               	movlb	0	; select bank0
  8724  0B78  00A9               	movwf	___awtoft@c+1
  8725  0B79  0021               	movlb	1	; select bank1
  8726  0B7A  0826               	movf	set_subdivision@x^(0+128),w
  8727  0B7B  0020               	movlb	0	; select bank0
  8728  0B7C  00A8               	movwf	___awtoft@c
  8729  0B7D  319F  27B8  318A   	fcall	___awtoft
  8730  0B80  0020               	movlb	0	; select bank0
  8731  0B81  0828               	movf	?___awtoft,w
  8732  0B82  00B8               	movwf	___ftmul@f2
  8733  0B83  0829               	movf	?___awtoft+1,w
  8734  0B84  00B9               	movwf	___ftmul@f2+1
  8735  0B85  082A               	movf	?___awtoft+2,w
  8736  0B86  00BA               	movwf	___ftmul@f2+2
  8737  0B87  3000               	movlw	0
  8738  0B88  00B5               	movwf	___ftmul@f1
  8739  0B89  3080               	movlw	128
  8740  0B8A  00B6               	movwf	___ftmul@f1+1
  8741  0B8B  303E               	movlw	62
  8742  0B8C  00B7               	movwf	___ftmul@f1+2
  8743  0B8D  3189  211A  318A   	fcall	___ftmul
  8744  0B90  0020               	movlb	0	; select bank0
  8745  0B91  0835               	movf	?___ftmul,w
  8746  0B92  00E7               	movwf	___fttol@f1
  8747  0B93  0836               	movf	?___ftmul+1,w
  8748  0B94  00E8               	movwf	___fttol@f1+1
  8749  0B95  0837               	movf	?___ftmul+2,w
  8750  0B96  00E9               	movwf	___fttol@f1+2
  8751  0B97  3197  2761         	fcall	___fttol
  8752  0B99  0020               	movlb	0	; select bank0
  8753  0B9A  0868               	movf	?___fttol+1,w
  8754  0B9B  0021               	movlb	1	; select bank1
  8755  0B9C  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8756  0B9D  0020               	movlb	0	; select bank0
  8757  0B9E  0867               	movf	?___fttol,w
  8758  0B9F  0021               	movlb	1	; select bank1
  8759  0BA0  00A6               	movwf	set_subdivision@x^(0+128)
  8760                           
  8761                           ;user.c: 99: }
  8762                           
  8763                           ;user.c: 98: break;
  8764                           
  8765                           ;user.c: 96: case 6:
  8766                           
  8767                           ;user.c: 95: break;
  8768  0BA1  0008               	return
  8769  0BA2                     l3969:	
  8770                           
  8771                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8772                           ; Switch size 1, requested type "space"
  8773                           ; Number of cases is 1, Range of values is 0 to 0
  8774                           ; switch strategies available:
  8775                           ; Name         Instructions Cycles
  8776                           ; simple_byte            4     3 (average)
  8777                           ; direct_byte            8     6 (fixed)
  8778                           ; jumptable            260     6 (fixed)
  8779                           ;	Chosen strategy is simple_byte
  8780  0BA2  0021               	movlb	1	; select bank1
  8781  0BA3  0829               	movf	(set_subdivision@y+1)^(0+128),w
  8782  0BA4  3A00               	xorlw	0	; case 0
  8783  0BA5  1903               	skipnz
  8784  0BA6  2BA8               	goto	l4531
  8785  0BA7  2BBC               	goto	l480
  8786  0BA8                     l4531:	
  8787                           
  8788                           ; Switch size 1, requested type "space"
  8789                           ; Number of cases is 6, Range of values is 1 to 6
  8790                           ; switch strategies available:
  8791                           ; Name         Instructions Cycles
  8792                           ; simple_byte           19    10 (average)
  8793                           ; direct_byte           21     9 (fixed)
  8794                           ; jumptable            263     9 (fixed)
  8795                           ;	Chosen strategy is simple_byte
  8796  0BA8  0828               	movf	set_subdivision@y^(0+128),w
  8797  0BA9  3A01               	xorlw	1	; case 1
  8798  0BAA  1903               	skipnz
  8799  0BAB  2AC5               	goto	l3957
  8800  0BAC  3A03               	xorlw	3	; case 2
  8801  0BAD  1903               	skipnz
  8802  0BAE  2AF2               	goto	l3959
  8803  0BAF  3A01               	xorlw	1	; case 3
  8804  0BB0  1903               	skipnz
  8805  0BB1  2B1E               	goto	l3961
  8806  0BB2  3A07               	xorlw	7	; case 4
  8807  0BB3  1903               	skipnz
  8808  0BB4  2B4A               	goto	l3963
  8809  0BB5  3A01               	xorlw	1	; case 5
  8810  0BB6  1903               	skipnz
  8811  0BB7  2B76               	goto	l3965
  8812  0BB8  3A03               	xorlw	3	; case 6
  8813  0BB9  1903               	skipnz
  8814  0BBA  2BBC               	goto	l480
  8815  0BBB  2BBC               	goto	l480
  8816  0BBC                     l480:	
  8817                           
  8818                           ;user.c: 100: return x;
  8819  0BBC  0008               	return
  8820  0BBD                     __end_of_set_subdivision:	
  8821                           
  8822                           	psect	text13
  8823  1761                     __ptext13:	
  8824 ;; *************** function ___fttol *****************
  8825 ;; Defined at:
  8826 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  f1              3   71[BANK0 ] float 
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;  lval            4    1[BANK1 ] unsigned long 
  8831 ;;  exp1            1    5[BANK1 ] unsigned char 
  8832 ;;  sign1           1    0[BANK1 ] unsigned char 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  4   71[BANK0 ] long 
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, status,0
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8842 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8843 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8844 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8845 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8846 ;;Total ram usage:       14 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:    2
  8849 ;; This function calls:
  8850 ;;		Nothing
  8851 ;; This function is called by:
  8852 ;;		_main
  8853 ;;		_set_subdivision
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           
  8858                           ;psect for function ___fttol
  8859  1761                     ___fttol:	
  8860                           
  8861                           ;incstack = 0
  8862                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8863  1761  0020               	movlb	0	; select bank0
  8864  1762  0867               	movf	___fttol@f1,w
  8865  1763  00EB               	movwf	??___fttol
  8866  1764  0868               	movf	___fttol@f1+1,w
  8867  1765  00EC               	movwf	??___fttol+1
  8868  1766  0869               	movf	___fttol@f1+2,w
  8869  1767  00ED               	movwf	??___fttol+2
  8870  1768  1003               	clrc
  8871  1769  0D6C               	rlf	??___fttol+1,w
  8872  176A  0D6D               	rlf	??___fttol+2,w
  8873  176B  00EE               	movwf	??___fttol+3
  8874  176C  086E               	movf	??___fttol+3,w
  8875  176D  0021               	movlb	1	; select bank1
  8876  176E  00A5               	movwf	___fttol@exp1^(0+128)
  8877  176F  0825               	movf	___fttol@exp1^(0+128),w
  8878  1770  1D03               	btfss	3,2
  8879  1771  2F7C               	goto	l3589
  8880  1772  3000               	movlw	0
  8881  1773  0020               	movlb	0	; select bank0
  8882  1774  00EA               	movwf	?___fttol+3
  8883  1775  3000               	movlw	0
  8884  1776  00E9               	movwf	?___fttol+2
  8885  1777  3000               	movlw	0
  8886  1778  00E8               	movwf	?___fttol+1
  8887  1779  3000               	movlw	0
  8888  177A  00E7               	movwf	?___fttol
  8889  177B  0008               	return
  8890  177C                     l3589:	
  8891  177C  0020               	movlb	0	; select bank0
  8892  177D  0867               	movf	___fttol@f1,w
  8893  177E  00EB               	movwf	??___fttol
  8894  177F  0868               	movf	___fttol@f1+1,w
  8895  1780  00EC               	movwf	??___fttol+1
  8896  1781  0869               	movf	___fttol@f1+2,w
  8897  1782  00ED               	movwf	??___fttol+2
  8898  1783  3017               	movlw	23
  8899  1784                     u3185:	
  8900  1784  36ED               	lsrf	??___fttol+2,f
  8901  1785  0CEC               	rrf	??___fttol+1,f
  8902  1786  0CEB               	rrf	??___fttol,f
  8903  1787  0B89               	decfsz	9,f
  8904  1788  2F84               	goto	u3185
  8905  1789  086B               	movf	??___fttol,w
  8906  178A  00EE               	movwf	??___fttol+3
  8907  178B  086E               	movf	??___fttol+3,w
  8908  178C  0021               	movlb	1	; select bank1
  8909  178D  00A0               	movwf	___fttol@sign1^(0+128)
  8910  178E  0020               	movlb	0	; select bank0
  8911  178F  17E8               	bsf	___fttol@f1+1,7
  8912  1790  30FF               	movlw	255
  8913  1791  05E7               	andwf	___fttol@f1,f
  8914  1792  30FF               	movlw	255
  8915  1793  05E8               	andwf	___fttol@f1+1,f
  8916  1794  3000               	movlw	0
  8917  1795  05E9               	andwf	___fttol@f1+2,f
  8918  1796  0867               	movf	___fttol@f1,w
  8919  1797  0021               	movlb	1	; select bank1
  8920  1798  00A1               	movwf	___fttol@lval^(0+128)
  8921  1799  0020               	movlb	0	; select bank0
  8922  179A  0868               	movf	___fttol@f1+1,w
  8923  179B  0021               	movlb	1	; select bank1
  8924  179C  00A2               	movwf	(___fttol@lval^(0+128)+1)
  8925  179D  0020               	movlb	0	; select bank0
  8926  179E  0869               	movf	___fttol@f1+2,w
  8927  179F  0021               	movlb	1	; select bank1
  8928  17A0  00A3               	movwf	(___fttol@lval^(0+128)+2)
  8929  17A1  01A4               	clrf	(___fttol@lval^(0+128)+3)
  8930  17A2  308E               	movlw	142
  8931  17A3  02A5               	subwf	___fttol@exp1^(0+128),f
  8932  17A4  1FA5               	btfss	___fttol@exp1^(0+128),7
  8933  17A5  2FC6               	goto	l3609
  8934  17A6  0825               	movf	___fttol@exp1^(0+128),w
  8935  17A7  3A80               	xorlw	128
  8936  17A8  3E8F               	addlw	143
  8937  17A9  1803               	skipnc
  8938  17AA  2FB5               	goto	l3607
  8939  17AB  3000               	movlw	0
  8940  17AC  0020               	movlb	0	; select bank0
  8941  17AD  00EA               	movwf	?___fttol+3
  8942  17AE  3000               	movlw	0
  8943  17AF  00E9               	movwf	?___fttol+2
  8944  17B0  3000               	movlw	0
  8945  17B1  00E8               	movwf	?___fttol+1
  8946  17B2  3000               	movlw	0
  8947  17B3  00E7               	movwf	?___fttol
  8948  17B4  0008               	return
  8949  17B5                     l3607:	
  8950  17B5  3001               	movlw	1
  8951  17B6                     u3215:	
  8952  17B6  0021               	movlb	1	; select bank1
  8953  17B7  36A4               	lsrf	(___fttol@lval+3)^(0+128),f
  8954  17B8  0CA3               	rrf	(___fttol@lval+2)^(0+128),f
  8955  17B9  0CA2               	rrf	(___fttol@lval+1)^(0+128),f
  8956  17BA  0CA1               	rrf	___fttol@lval^(0+128),f
  8957  17BB  0B89               	decfsz	9,f
  8958  17BC  2FB6               	goto	u3215
  8959  17BD  3001               	movlw	1
  8960  17BE  0020               	movlb	0	; select bank0
  8961  17BF  00EB               	movwf	??___fttol
  8962  17C0  086B               	movf	??___fttol,w
  8963  17C1  0021               	movlb	1	; select bank1
  8964  17C2  07A5               	addwf	___fttol@exp1^(0+128),f
  8965  17C3  1903               	btfsc	3,2
  8966  17C4  2FE2               	goto	l3617
  8967  17C5  2FB5               	goto	l3607
  8968  17C6                     l3609:	
  8969  17C6  3018               	movlw	24
  8970  17C7  0225               	subwf	___fttol@exp1^(0+128),w
  8971  17C8  1C03               	skipc
  8972  17C9  2FDE               	goto	l1457
  8973  17CA  3000               	movlw	0
  8974  17CB  0020               	movlb	0	; select bank0
  8975  17CC  00EA               	movwf	?___fttol+3
  8976  17CD  3000               	movlw	0
  8977  17CE  00E9               	movwf	?___fttol+2
  8978  17CF  3000               	movlw	0
  8979  17D0  00E8               	movwf	?___fttol+1
  8980  17D1  3000               	movlw	0
  8981  17D2  00E7               	movwf	?___fttol
  8982  17D3  0008               	return
  8983  17D4                     l3615:	
  8984  17D4  3001               	movlw	1
  8985  17D5                     u3245:	
  8986  17D5  0021               	movlb	1	; select bank1
  8987  17D6  35A1               	lslf	___fttol@lval^(0+128),f
  8988  17D7  0DA2               	rlf	(___fttol@lval+1)^(0+128),f
  8989  17D8  0DA3               	rlf	(___fttol@lval+2)^(0+128),f
  8990  17D9  0DA4               	rlf	(___fttol@lval+3)^(0+128),f
  8991  17DA  0B89               	decfsz	9,f
  8992  17DB  2FD5               	goto	u3245
  8993  17DC  3001               	movlw	1
  8994  17DD  02A5               	subwf	___fttol@exp1^(0+128),f
  8995  17DE                     l1457:	
  8996  17DE  0021               	movlb	1	; select bank1
  8997  17DF  0825               	movf	___fttol@exp1^(0+128),w
  8998  17E0  1D03               	btfss	3,2
  8999  17E1  2FD4               	goto	l3615
  9000  17E2                     l3617:	
  9001  17E2  0820               	movf	___fttol@sign1^(0+128),w
  9002  17E3  1903               	btfsc	3,2
  9003  17E4  2FF0               	goto	l3621
  9004  17E5  09A1               	comf	___fttol@lval^(0+128),f
  9005  17E6  09A2               	comf	(___fttol@lval+1)^(0+128),f
  9006  17E7  09A3               	comf	(___fttol@lval+2)^(0+128),f
  9007  17E8  09A4               	comf	(___fttol@lval+3)^(0+128),f
  9008  17E9  0AA1               	incf	___fttol@lval^(0+128),f
  9009  17EA  1903               	skipnz
  9010  17EB  0AA2               	incf	(___fttol@lval+1)^(0+128),f
  9011  17EC  1903               	skipnz
  9012  17ED  0AA3               	incf	(___fttol@lval+2)^(0+128),f
  9013  17EE  1903               	skipnz
  9014  17EF  0AA4               	incf	(___fttol@lval+3)^(0+128),f
  9015  17F0                     l3621:	
  9016  17F0  0824               	movf	(___fttol@lval+3)^(0+128),w
  9017  17F1  0020               	movlb	0	; select bank0
  9018  17F2  00EA               	movwf	?___fttol+3
  9019  17F3  0021               	movlb	1	; select bank1
  9020  17F4  0823               	movf	(___fttol@lval+2)^(0+128),w
  9021  17F5  0020               	movlb	0	; select bank0
  9022  17F6  00E9               	movwf	?___fttol+2
  9023  17F7  0021               	movlb	1	; select bank1
  9024  17F8  0822               	movf	(___fttol@lval+1)^(0+128),w
  9025  17F9  0020               	movlb	0	; select bank0
  9026  17FA  00E8               	movwf	?___fttol+1
  9027  17FB  0021               	movlb	1	; select bank1
  9028  17FC  0821               	movf	___fttol@lval^(0+128),w
  9029  17FD  0020               	movlb	0	; select bank0
  9030  17FE  00E7               	movwf	?___fttol
  9031  17FF  0008               	return
  9032  1800                     __end_of___fttol:	
  9033                           
  9034                           	psect	text14
  9035  1FB8                     __ptext14:	
  9036 ;; *************** function ___awtoft *****************
  9037 ;; Defined at:
  9038 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;  c               2    8[BANK0 ] int 
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;  sign            1   13[BANK0 ] unsigned char 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  3    8[BANK0 ] float 
  9045 ;; Registers used:
  9046 ;;		wreg, status,2, status,0, pclath, cstack
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9052 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9054 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9055 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9056 ;;Total ram usage:        6 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:    3
  9059 ;; This function calls:
  9060 ;;		___ftpack
  9061 ;; This function is called by:
  9062 ;;		_main
  9063 ;;		_set_subdivision
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           
  9068                           ;psect for function ___awtoft
  9069  1FB8                     ___awtoft:	
  9070                           
  9071                           ;incstack = 0
  9072                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9073  1FB8  0020               	movlb	0	; select bank0
  9074  1FB9  01AD               	clrf	___awtoft@sign
  9075  1FBA  1FA9               	btfss	___awtoft@c+1,7
  9076  1FBB  2FC3               	goto	l3409
  9077  1FBC  09A8               	comf	___awtoft@c,f
  9078  1FBD  09A9               	comf	___awtoft@c+1,f
  9079  1FBE  0AA8               	incf	___awtoft@c,f
  9080  1FBF  1903               	skipnz
  9081  1FC0  0AA9               	incf	___awtoft@c+1,f
  9082  1FC1  01AD               	clrf	___awtoft@sign
  9083  1FC2  0AAD               	incf	___awtoft@sign,f
  9084  1FC3                     l3409:	
  9085  1FC3  0828               	movf	___awtoft@c,w
  9086  1FC4  00A0               	movwf	___ftpack@arg
  9087  1FC5  0829               	movf	___awtoft@c+1,w
  9088  1FC6  00A1               	movwf	___ftpack@arg+1
  9089  1FC7  01A2               	clrf	___ftpack@arg+2
  9090  1FC8  308E               	movlw	142
  9091  1FC9  00AB               	movwf	??___awtoft
  9092  1FCA  082B               	movf	??___awtoft,w
  9093  1FCB  00A3               	movwf	___ftpack@exp
  9094  1FCC  082D               	movf	___awtoft@sign,w
  9095  1FCD  00AC               	movwf	??___awtoft+1
  9096  1FCE  082C               	movf	??___awtoft+1,w
  9097  1FCF  00A4               	movwf	___ftpack@sign
  9098  1FD0  3195  25EF         	fcall	___ftpack
  9099  1FD2  0020               	movlb	0	; select bank0
  9100  1FD3  0820               	movf	?___ftpack,w
  9101  1FD4  00A8               	movwf	?___awtoft
  9102  1FD5  0821               	movf	?___ftpack+1,w
  9103  1FD6  00A9               	movwf	?___awtoft+1
  9104  1FD7  0822               	movf	?___ftpack+2,w
  9105  1FD8  00AA               	movwf	?___awtoft+2
  9106  1FD9  0008               	return
  9107  1FDA                     __end_of___awtoft:	
  9108                           
  9109                           	psect	text15
  9110  1129                     __ptext15:	
  9111 ;; *************** function _read_top_tactile *****************
  9112 ;; Defined at:
  9113 ;;		line 36 in file "tactiles.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;		None
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;		None
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  1    wreg      void 
  9120 ;; Registers used:
  9121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9131 ;;Total ram usage:        1 bytes
  9132 ;; Hardware stack levels used:    1
  9133 ;; Hardware stack levels required when called:    4
  9134 ;; This function calls:
  9135 ;;		_set_leds_top
  9136 ;;		_wait_ms
  9137 ;; This function is called by:
  9138 ;;		_main
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           
  9143                           ;psect for function _read_top_tactile
  9144  1129                     _read_top_tactile:	
  9145                           
  9146                           ;tactiles.c: 44: if (PORTDbits.RD5 == 0) {
  9147                           
  9148                           ;incstack = 0
  9149                           ; Regs used in _read_top_tactile: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9150  1129  0020               	movlb	0	; select bank0
  9151  112A  1A8F               	btfsc	15,5	;volatile
  9152  112B  0008               	return
  9153                           
  9154                           ;tactiles.c: 45: top_push_state = top_push_state + 1;
  9155  112C  0021               	movlb	1	; select bank1
  9156  112D  0868               	movf	_top_push_state^(0+128),w
  9157  112E  3E01               	addlw	1
  9158  112F  00E8               	movwf	_top_push_state^(0+128)
  9159  1130  3000               	movlw	0
  9160  1131  3D69               	addwfc	(_top_push_state+1)^(0+128),w
  9161  1132  00E9               	movwf	(_top_push_state+1)^(0+128)
  9162                           
  9163                           ;tactiles.c: 46: if (top_push_state >= 7) {
  9164  1133  0869               	movf	(_top_push_state+1)^(0+128),w
  9165  1134  3A80               	xorlw	128
  9166  1135  0020               	movlb	0	; select bank0
  9167  1136  00AE               	movwf	??_read_top_tactile
  9168  1137  3080               	movlw	128
  9169  1138  022E               	subwf	??_read_top_tactile,w
  9170  1139  1D03               	skipz
  9171  113A  293E               	goto	u3365
  9172  113B  3007               	movlw	7
  9173  113C  0021               	movlb	1	; select bank1
  9174  113D  0268               	subwf	_top_push_state^(0+128),w
  9175  113E                     u3365:	
  9176  113E  1C03               	skipc
  9177  113F  2945               	goto	l3695
  9178                           
  9179                           ;tactiles.c: 47: top_push_state = 1;
  9180  1140  3001               	movlw	1
  9181  1141  0021               	movlb	1	; select bank1
  9182  1142  00E8               	movwf	_top_push_state^(0+128)
  9183  1143  3000               	movlw	0
  9184  1144  00E9               	movwf	(_top_push_state^(0+128)+1)
  9185  1145                     l3695:	
  9186                           
  9187                           ;tactiles.c: 48: }
  9188                           ;tactiles.c: 49: set_leds_top(top_push_state, 1);
  9189  1145  0021               	movlb	1	; select bank1
  9190  1146  0869               	movf	(_top_push_state+1)^(0+128),w
  9191  1147  0020               	movlb	0	; select bank0
  9192  1148  00A1               	movwf	set_leds_top@x+1
  9193  1149  0021               	movlb	1	; select bank1
  9194  114A  0868               	movf	_top_push_state^(0+128),w
  9195  114B  0020               	movlb	0	; select bank0
  9196  114C  00A0               	movwf	set_leds_top@x
  9197  114D  3001               	movlw	1
  9198  114E  00A2               	movwf	set_leds_top@ledState
  9199  114F  3000               	movlw	0
  9200  1150  00A3               	movwf	set_leds_top@ledState+1
  9201  1151  3195  259B  3191   	fcall	_set_leds_top
  9202                           
  9203                           ;tactiles.c: 50: delay_time_changed = 1;
  9204  1154  3001               	movlw	1
  9205  1155  0022               	movlb	2	; select bank2
  9206  1156  00CE               	movwf	_delay_time_changed^(0+256)
  9207  1157  3000               	movlw	0
  9208  1158  00CF               	movwf	(_delay_time_changed^(0+256)+1)
  9209  1159                     l785:	
  9210                           ;tactiles.c: 52: while (PORTDbits.RD5 == 0) {
  9211                           
  9212  1159  0020               	movlb	0	; select bank0
  9213  115A  1E8F               	btfss	15,5	;volatile
  9214  115B  2959               	goto	l785
  9215                           
  9216                           ;tactiles.c: 53: }
  9217                           ;tactiles.c: 54: wait_ms(20);
  9218  115C  3014               	movlw	20
  9219  115D  00AC               	movwf	wait_ms@time
  9220  115E  3000               	movlw	0
  9221  115F  00AD               	movwf	wait_ms@time+1
  9222  1160  3190  20C7         	fcall	_wait_ms
  9223  1162  0008               	return
  9224  1163                     __end_of_read_top_tactile:	
  9225                           
  9226                           	psect	text16
  9227  10F8                     __ptext16:	
  9228 ;; *************** function _read_bottom_tactile *****************
  9229 ;; Defined at:
  9230 ;;		line 16 in file "tactiles.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;		None
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  1    wreg      void 
  9237 ;; Registers used:
  9238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9246 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9247 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9248 ;;Total ram usage:        1 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; Hardware stack levels required when called:    4
  9251 ;; This function calls:
  9252 ;;		_set_leds_bottom
  9253 ;;		_wait_ms
  9254 ;; This function is called by:
  9255 ;;		_main
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           
  9260                           ;psect for function _read_bottom_tactile
  9261  10F8                     _read_bottom_tactile:	
  9262                           
  9263                           ;tactiles.c: 23: if (PORTDbits.RD6 == 0) {
  9264                           
  9265                           ;incstack = 0
  9266                           ; Regs used in _read_bottom_tactile: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9267  10F8  0020               	movlb	0	; select bank0
  9268  10F9  1B0F               	btfsc	15,6	;volatile
  9269  10FA  0008               	return
  9270                           
  9271                           ;tactiles.c: 24: bottom_push_state = bottom_push_state + 1;
  9272  10FB  0021               	movlb	1	; select bank1
  9273  10FC  0862               	movf	_bottom_push_state^(0+128),w
  9274  10FD  3E01               	addlw	1
  9275  10FE  00E2               	movwf	_bottom_push_state^(0+128)
  9276  10FF  3000               	movlw	0
  9277  1100  3D63               	addwfc	(_bottom_push_state+1)^(0+128),w
  9278  1101  00E3               	movwf	(_bottom_push_state+1)^(0+128)
  9279                           
  9280                           ;tactiles.c: 25: if (bottom_push_state > 6) {
  9281  1102  0863               	movf	(_bottom_push_state+1)^(0+128),w
  9282  1103  3A80               	xorlw	128
  9283  1104  0020               	movlb	0	; select bank0
  9284  1105  00AE               	movwf	??_read_bottom_tactile
  9285  1106  3080               	movlw	128
  9286  1107  022E               	subwf	??_read_bottom_tactile,w
  9287  1108  1D03               	skipz
  9288  1109  290D               	goto	u3335
  9289  110A  3007               	movlw	7
  9290  110B  0021               	movlb	1	; select bank1
  9291  110C  0262               	subwf	_bottom_push_state^(0+128),w
  9292  110D                     u3335:	
  9293  110D  1C03               	skipc
  9294  110E  2914               	goto	l3683
  9295                           
  9296                           ;tactiles.c: 26: bottom_push_state = 1;
  9297  110F  3001               	movlw	1
  9298  1110  0021               	movlb	1	; select bank1
  9299  1111  00E2               	movwf	_bottom_push_state^(0+128)
  9300  1112  3000               	movlw	0
  9301  1113  00E3               	movwf	(_bottom_push_state^(0+128)+1)
  9302  1114                     l3683:	
  9303                           
  9304                           ;tactiles.c: 27: }
  9305                           ;tactiles.c: 28: set_leds_bottom(bottom_push_state);
  9306  1114  0021               	movlb	1	; select bank1
  9307  1115  0863               	movf	(_bottom_push_state+1)^(0+128),w
  9308  1116  0020               	movlb	0	; select bank0
  9309  1117  00A1               	movwf	set_leds_bottom@x+1
  9310  1118  0021               	movlb	1	; select bank1
  9311  1119  0862               	movf	_bottom_push_state^(0+128),w
  9312  111A  0020               	movlb	0	; select bank0
  9313  111B  00A0               	movwf	set_leds_bottom@x
  9314  111C  3192  224B  3190   	fcall	_set_leds_bottom
  9315  111F                     l777:	
  9316                           ;tactiles.c: 30: while (PORTDbits.RD6 == 0) {
  9317                           
  9318  111F  0020               	movlb	0	; select bank0
  9319  1120  1F0F               	btfss	15,6	;volatile
  9320  1121  291F               	goto	l777
  9321                           
  9322                           ;tactiles.c: 31: }
  9323                           ;tactiles.c: 32: wait_ms(20);
  9324  1122  3014               	movlw	20
  9325  1123  00AC               	movwf	wait_ms@time
  9326  1124  3000               	movlw	0
  9327  1125  00AD               	movwf	wait_ms@time+1
  9328  1126  3190  20C7         	fcall	_wait_ms
  9329  1128  0008               	return
  9330  1129                     __end_of_read_bottom_tactile:	
  9331                           
  9332                           	psect	text17
  9333  12C3                     __ptext17:	
  9334 ;; *************** function _modulation *****************
  9335 ;; Defined at:
  9336 ;;		line 169 in file "user.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  x               2   21[BANK0 ] int 
  9339 ;;  y               2   23[BANK0 ] int 
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;		None
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  2   21[BANK0 ] int 
  9344 ;; Registers used:
  9345 ;;		wreg, status,2, status,0, pclath, cstack
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9351 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9353 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9354 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9355 ;;Total ram usage:       12 bytes
  9356 ;; Hardware stack levels used:    1
  9357 ;; Hardware stack levels required when called:    3
  9358 ;; This function calls:
  9359 ;;		___aldiv
  9360 ;;		___wmul
  9361 ;; This function is called by:
  9362 ;;		_main
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           
  9367                           ;psect for function _modulation
  9368  12C3                     _modulation:	
  9369                           
  9370                           ;user.c: 171: x = (127500 + (y * x)) / 1000;
  9371                           
  9372                           ;incstack = 0
  9373                           ; Regs used in _modulation: [wreg+status,2+status,0+pclath+cstack]
  9374  12C3  3000               	movlw	0
  9375  12C4  0020               	movlb	0	; select bank0
  9376  12C5  00A9               	movwf	___aldiv@divisor+3
  9377  12C6  3000               	movlw	0
  9378  12C7  00A8               	movwf	___aldiv@divisor+2
  9379  12C8  3003               	movlw	3
  9380  12C9  00A7               	movwf	___aldiv@divisor+1
  9381  12CA  30E8               	movlw	232
  9382  12CB  00A6               	movwf	___aldiv@divisor
  9383  12CC  300C               	movlw	12
  9384  12CD  00B9               	movwf	??_modulation
  9385  12CE  30F2               	movlw	242
  9386  12CF  00BA               	movwf	??_modulation+1
  9387  12D0  3001               	movlw	1
  9388  12D1  00BB               	movwf	??_modulation+2
  9389  12D2  3000               	movlw	0
  9390  12D3  00BC               	movwf	??_modulation+3
  9391  12D4  0838               	movf	modulation@y+1,w
  9392  12D5  00A1               	movwf	___wmul@multiplier+1
  9393  12D6  0837               	movf	modulation@y,w
  9394  12D7  00A0               	movwf	___wmul@multiplier
  9395  12D8  0836               	movf	modulation@x+1,w
  9396  12D9  00A3               	movwf	___wmul@multiplicand+1
  9397  12DA  0835               	movf	modulation@x,w
  9398  12DB  00A2               	movwf	___wmul@multiplicand
  9399  12DC  319F  275E  3192   	fcall	___wmul
  9400  12DF  0020               	movlb	0	; select bank0
  9401  12E0  0820               	movf	?___wmul,w
  9402  12E1  00BD               	movwf	??_modulation+4
  9403  12E2  0821               	movf	?___wmul+1,w
  9404  12E3  00BE               	movwf	??_modulation+5
  9405  12E4  3000               	movlw	0
  9406  12E5  1BBE               	btfsc	??_modulation+5,7
  9407  12E6  30FF               	movlw	255
  9408  12E7  00BF               	movwf	??_modulation+6
  9409  12E8  00C0               	movwf	??_modulation+7
  9410  12E9  083D               	movf	??_modulation+4,w
  9411  12EA  07B9               	addwf	??_modulation,f
  9412  12EB  083E               	movf	??_modulation+5,w
  9413  12EC  3DBA               	addwfc	??_modulation+1,f
  9414  12ED  083F               	movf	??_modulation+6,w
  9415  12EE  3DBB               	addwfc	??_modulation+2,f
  9416  12EF  0840               	movf	??_modulation+7,w
  9417  12F0  3DBC               	addwfc	??_modulation+3,f
  9418  12F1  083C               	movf	??_modulation+3,w
  9419  12F2  00AD               	movwf	___aldiv@dividend+3
  9420  12F3  083B               	movf	??_modulation+2,w
  9421  12F4  00AC               	movwf	___aldiv@dividend+2
  9422  12F5  083A               	movf	??_modulation+1,w
  9423  12F6  00AB               	movwf	___aldiv@dividend+1
  9424  12F7  0839               	movf	??_modulation,w
  9425  12F8  00AA               	movwf	___aldiv@dividend
  9426  12F9  3196  2654         	fcall	___aldiv
  9427  12FB  0020               	movlb	0	; select bank0
  9428  12FC  0827               	movf	?___aldiv+1,w
  9429  12FD  00B6               	movwf	modulation@x+1
  9430  12FE  0826               	movf	?___aldiv,w
  9431  12FF  00B5               	movwf	modulation@x
  9432                           
  9433                           ;user.c: 172: return x;
  9434  1300  0008               	return
  9435  1301                     __end_of_modulation:	
  9436                           
  9437                           	psect	text18
  9438  1F5E                     __ptext18:	
  9439 ;; *************** function ___wmul *****************
  9440 ;; Defined at:
  9441 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9444 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;  product         2    4[BANK0 ] unsigned int 
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  2    0[BANK0 ] unsigned int 
  9449 ;; Registers used:
  9450 ;;		wreg, status,2, status,0
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9456 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9457 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9459 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9460 ;;Total ram usage:        6 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:    2
  9463 ;; This function calls:
  9464 ;;		Nothing
  9465 ;; This function is called by:
  9466 ;;		_modulation
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470                           
  9471                           ;psect for function ___wmul
  9472  1F5E                     ___wmul:	
  9473                           
  9474                           ;incstack = 0
  9475                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9476  1F5E  0020               	movlb	0	; select bank0
  9477  1F5F  01A4               	clrf	___wmul@product
  9478  1F60  01A5               	clrf	___wmul@product+1
  9479  1F61                     l3349:	
  9480  1F61  1C20               	btfss	___wmul@multiplier,0
  9481  1F62  2F67               	goto	l1205
  9482  1F63  0822               	movf	___wmul@multiplicand,w
  9483  1F64  07A4               	addwf	___wmul@product,f
  9484  1F65  0823               	movf	___wmul@multiplicand+1,w
  9485  1F66  3DA5               	addwfc	___wmul@product+1,f
  9486  1F67                     l1205:	
  9487  1F67  3001               	movlw	1
  9488  1F68                     u2595:	
  9489  1F68  35A2               	lslf	___wmul@multiplicand,f
  9490  1F69  0DA3               	rlf	___wmul@multiplicand+1,f
  9491  1F6A  0B89               	decfsz	9,f
  9492  1F6B  2F68               	goto	u2595
  9493  1F6C  3001               	movlw	1
  9494  1F6D                     u2605:	
  9495  1F6D  36A1               	lsrf	___wmul@multiplier+1,f
  9496  1F6E  0CA0               	rrf	___wmul@multiplier,f
  9497  1F6F  0B89               	decfsz	9,f
  9498  1F70  2F6D               	goto	u2605
  9499  1F71  0820               	movf	___wmul@multiplier,w
  9500  1F72  0421               	iorwf	___wmul@multiplier+1,w
  9501  1F73  1D03               	btfss	3,2
  9502  1F74  2F61               	goto	l3349
  9503  1F75  0825               	movf	___wmul@product+1,w
  9504  1F76  00A1               	movwf	?___wmul+1
  9505  1F77  0824               	movf	___wmul@product,w
  9506  1F78  00A0               	movwf	?___wmul
  9507  1F79  0008               	return
  9508  1F7A                     __end_of___wmul:	
  9509                           
  9510                           	psect	text19
  9511  1654                     __ptext19:	
  9512 ;; *************** function ___aldiv *****************
  9513 ;; Defined at:
  9514 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;  divisor         4    6[BANK0 ] long 
  9517 ;;  dividend        4   10[BANK0 ] long 
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;  quotient        4   17[BANK0 ] long 
  9520 ;;  sign            1   16[BANK0 ] unsigned char 
  9521 ;;  counter         1   15[BANK0 ] unsigned char 
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  4    6[BANK0 ] long 
  9524 ;; Registers used:
  9525 ;;		wreg, status,2, status,0
  9526 ;; Tracked objects:
  9527 ;;		On entry : 0/0
  9528 ;;		On exit  : 0/0
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9531 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9532 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9533 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9534 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9535 ;;Total ram usage:       15 bytes
  9536 ;; Hardware stack levels used:    1
  9537 ;; Hardware stack levels required when called:    2
  9538 ;; This function calls:
  9539 ;;		Nothing
  9540 ;; This function is called by:
  9541 ;;		_modulation
  9542 ;;		_updateSwitchTap
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           
  9547                           ;psect for function ___aldiv
  9548  1654                     ___aldiv:	
  9549                           
  9550                           ;incstack = 0
  9551                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9552  1654  0020               	movlb	0	; select bank0
  9553  1655  01B0               	clrf	___aldiv@sign
  9554  1656  1FA9               	btfss	___aldiv@divisor+3,7
  9555  1657  2E65               	goto	l1260
  9556  1658  09A6               	comf	___aldiv@divisor,f
  9557  1659  09A7               	comf	___aldiv@divisor+1,f
  9558  165A  09A8               	comf	___aldiv@divisor+2,f
  9559  165B  09A9               	comf	___aldiv@divisor+3,f
  9560  165C  0AA6               	incf	___aldiv@divisor,f
  9561  165D  1903               	skipnz
  9562  165E  0AA7               	incf	___aldiv@divisor+1,f
  9563  165F  1903               	skipnz
  9564  1660  0AA8               	incf	___aldiv@divisor+2,f
  9565  1661  1903               	skipnz
  9566  1662  0AA9               	incf	___aldiv@divisor+3,f
  9567  1663  01B0               	clrf	___aldiv@sign
  9568  1664  0AB0               	incf	___aldiv@sign,f
  9569  1665                     l1260:	
  9570  1665  1FAD               	btfss	___aldiv@dividend+3,7
  9571  1666  2E76               	goto	l3371
  9572  1667  09AA               	comf	___aldiv@dividend,f
  9573  1668  09AB               	comf	___aldiv@dividend+1,f
  9574  1669  09AC               	comf	___aldiv@dividend+2,f
  9575  166A  09AD               	comf	___aldiv@dividend+3,f
  9576  166B  0AAA               	incf	___aldiv@dividend,f
  9577  166C  1903               	skipnz
  9578  166D  0AAB               	incf	___aldiv@dividend+1,f
  9579  166E  1903               	skipnz
  9580  166F  0AAC               	incf	___aldiv@dividend+2,f
  9581  1670  1903               	skipnz
  9582  1671  0AAD               	incf	___aldiv@dividend+3,f
  9583  1672  3001               	movlw	1
  9584  1673  00AE               	movwf	??___aldiv
  9585  1674  082E               	movf	??___aldiv,w
  9586  1675  06B0               	xorwf	___aldiv@sign,f
  9587  1676                     l3371:	
  9588  1676  3000               	movlw	0
  9589  1677  00B4               	movwf	___aldiv@quotient+3
  9590  1678  3000               	movlw	0
  9591  1679  00B3               	movwf	___aldiv@quotient+2
  9592  167A  3000               	movlw	0
  9593  167B  00B2               	movwf	___aldiv@quotient+1
  9594  167C  3000               	movlw	0
  9595  167D  00B1               	movwf	___aldiv@quotient
  9596  167E  0829               	movf	___aldiv@divisor+3,w
  9597  167F  0428               	iorwf	___aldiv@divisor+2,w
  9598  1680  0427               	iorwf	___aldiv@divisor+1,w
  9599  1681  0426               	iorwf	___aldiv@divisor,w
  9600  1682  1903               	skipnz
  9601  1683  2EBF               	goto	l3393
  9602  1684  01AF               	clrf	___aldiv@counter
  9603  1685  0AAF               	incf	___aldiv@counter,f
  9604  1686                     l3379:	
  9605  1686  1BA9               	btfsc	___aldiv@divisor+3,7
  9606  1687  2E94               	goto	l3381
  9607  1688  3001               	movlw	1
  9608  1689                     u2655:	
  9609  1689  35A6               	lslf	___aldiv@divisor,f
  9610  168A  0DA7               	rlf	___aldiv@divisor+1,f
  9611  168B  0DA8               	rlf	___aldiv@divisor+2,f
  9612  168C  0DA9               	rlf	___aldiv@divisor+3,f
  9613  168D  0B89               	decfsz	9,f
  9614  168E  2E89               	goto	u2655
  9615  168F  3001               	movlw	1
  9616  1690  00AE               	movwf	??___aldiv
  9617  1691  082E               	movf	??___aldiv,w
  9618  1692  07AF               	addwf	___aldiv@counter,f
  9619  1693  2E86               	goto	l3379
  9620  1694                     l3381:	
  9621  1694  3001               	movlw	1
  9622  1695                     u2675:	
  9623  1695  35B1               	lslf	___aldiv@quotient,f
  9624  1696  0DB2               	rlf	___aldiv@quotient+1,f
  9625  1697  0DB3               	rlf	___aldiv@quotient+2,f
  9626  1698  0DB4               	rlf	___aldiv@quotient+3,f
  9627  1699  0B89               	decfsz	9,f
  9628  169A  2E95               	goto	u2675
  9629  169B  0829               	movf	___aldiv@divisor+3,w
  9630  169C  022D               	subwf	___aldiv@dividend+3,w
  9631  169D  1D03               	skipz
  9632  169E  2EA9               	goto	u2685
  9633  169F  0828               	movf	___aldiv@divisor+2,w
  9634  16A0  022C               	subwf	___aldiv@dividend+2,w
  9635  16A1  1D03               	skipz
  9636  16A2  2EA9               	goto	u2685
  9637  16A3  0827               	movf	___aldiv@divisor+1,w
  9638  16A4  022B               	subwf	___aldiv@dividend+1,w
  9639  16A5  1D03               	skipz
  9640  16A6  2EA9               	goto	u2685
  9641  16A7  0826               	movf	___aldiv@divisor,w
  9642  16A8  022A               	subwf	___aldiv@dividend,w
  9643  16A9                     u2685:	
  9644  16A9  1C03               	skipc
  9645  16AA  2EB4               	goto	l3389
  9646  16AB  0826               	movf	___aldiv@divisor,w
  9647  16AC  02AA               	subwf	___aldiv@dividend,f
  9648  16AD  0827               	movf	___aldiv@divisor+1,w
  9649  16AE  3BAB               	subwfb	___aldiv@dividend+1,f
  9650  16AF  0828               	movf	___aldiv@divisor+2,w
  9651  16B0  3BAC               	subwfb	___aldiv@dividend+2,f
  9652  16B1  0829               	movf	___aldiv@divisor+3,w
  9653  16B2  3BAD               	subwfb	___aldiv@dividend+3,f
  9654  16B3  1431               	bsf	___aldiv@quotient,0
  9655  16B4                     l3389:	
  9656  16B4  3001               	movlw	1
  9657  16B5                     u2695:	
  9658  16B5  36A9               	lsrf	___aldiv@divisor+3,f
  9659  16B6  0CA8               	rrf	___aldiv@divisor+2,f
  9660  16B7  0CA7               	rrf	___aldiv@divisor+1,f
  9661  16B8  0CA6               	rrf	___aldiv@divisor,f
  9662  16B9  0B89               	decfsz	9,f
  9663  16BA  2EB5               	goto	u2695
  9664  16BB  3001               	movlw	1
  9665  16BC  02AF               	subwf	___aldiv@counter,f
  9666  16BD  1D03               	btfss	3,2
  9667  16BE  2E94               	goto	l3381
  9668  16BF                     l3393:	
  9669  16BF  0830               	movf	___aldiv@sign,w
  9670  16C0  1903               	btfsc	3,2
  9671  16C1  2ECD               	goto	l3397
  9672  16C2  09B1               	comf	___aldiv@quotient,f
  9673  16C3  09B2               	comf	___aldiv@quotient+1,f
  9674  16C4  09B3               	comf	___aldiv@quotient+2,f
  9675  16C5  09B4               	comf	___aldiv@quotient+3,f
  9676  16C6  0AB1               	incf	___aldiv@quotient,f
  9677  16C7  1903               	skipnz
  9678  16C8  0AB2               	incf	___aldiv@quotient+1,f
  9679  16C9  1903               	skipnz
  9680  16CA  0AB3               	incf	___aldiv@quotient+2,f
  9681  16CB  1903               	skipnz
  9682  16CC  0AB4               	incf	___aldiv@quotient+3,f
  9683  16CD                     l3397:	
  9684  16CD  0834               	movf	___aldiv@quotient+3,w
  9685  16CE  00A9               	movwf	?___aldiv+3
  9686  16CF  0833               	movf	___aldiv@quotient+2,w
  9687  16D0  00A8               	movwf	?___aldiv+2
  9688  16D1  0832               	movf	___aldiv@quotient+1,w
  9689  16D2  00A7               	movwf	?___aldiv+1
  9690  16D3  0831               	movf	___aldiv@quotient,w
  9691  16D4  00A6               	movwf	?___aldiv
  9692  16D5  0008               	return
  9693  16D6                     __end_of___aldiv:	
  9694                           
  9695                           	psect	text20
  9696  16D6                     __ptext20:	
  9697 ;; *************** function _map *****************
  9698 ;; Defined at:
  9699 ;;		line 165 in file "user.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  x               3   53[BANK0 ] float 
  9702 ;;  in_min          3   56[BANK0 ] float 
  9703 ;;  in_max          3   59[BANK0 ] float 
  9704 ;;  out_min         3   62[BANK0 ] float 
  9705 ;;  out_max         3   65[BANK0 ] float 
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;		None
  9708 ;; Return value:  Size  Location     Type
  9709 ;;                  3   53[BANK0 ] float 
  9710 ;; Registers used:
  9711 ;;		wreg, status,2, status,0, pclath, cstack
  9712 ;; Tracked objects:
  9713 ;;		On entry : 0/0
  9714 ;;		On exit  : 0/0
  9715 ;;		Unchanged: 0/0
  9716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9717 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9718 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9720 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9721 ;;Total ram usage:       18 bytes
  9722 ;; Hardware stack levels used:    1
  9723 ;; Hardware stack levels required when called:    4
  9724 ;; This function calls:
  9725 ;;		___ftadd
  9726 ;;		___ftdiv
  9727 ;;		___ftmul
  9728 ;;		___ftneg
  9729 ;; This function is called by:
  9730 ;;		_main
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           
  9735                           ;psect for function _map
  9736  16D6                     _map:	
  9737                           
  9738                           ;user.c: 166: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  9739                           
  9740                           ;incstack = 0
  9741                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  9742  16D6  0020               	movlb	0	; select bank0
  9743  16D7  085B               	movf	map@in_max,w
  9744  16D8  00A8               	movwf	___ftadd@f1
  9745  16D9  085C               	movf	map@in_max+1,w
  9746  16DA  00A9               	movwf	___ftadd@f1+1
  9747  16DB  085D               	movf	map@in_max+2,w
  9748  16DC  00AA               	movwf	___ftadd@f1+2
  9749  16DD  0858               	movf	map@in_min,w
  9750  16DE  00A0               	movwf	___ftneg@f1
  9751  16DF  0859               	movf	map@in_min+1,w
  9752  16E0  00A1               	movwf	___ftneg@f1+1
  9753  16E1  085A               	movf	map@in_min+2,w
  9754  16E2  00A2               	movwf	___ftneg@f1+2
  9755  16E3  319E  26BB  3196   	fcall	___ftneg
  9756  16E6  0020               	movlb	0	; select bank0
  9757  16E7  0820               	movf	?___ftneg,w
  9758  16E8  00AB               	movwf	___ftadd@f2
  9759  16E9  0821               	movf	?___ftneg+1,w
  9760  16EA  00AC               	movwf	___ftadd@f2+1
  9761  16EB  0822               	movf	?___ftneg+2,w
  9762  16EC  00AD               	movwf	___ftadd@f2+2
  9763  16ED  3189  21CE  3196   	fcall	___ftadd
  9764  16F0  0020               	movlb	0	; select bank0
  9765  16F1  0828               	movf	?___ftadd,w
  9766  16F2  00C5               	movwf	___ftdiv@f2
  9767  16F3  0829               	movf	?___ftadd+1,w
  9768  16F4  00C6               	movwf	___ftdiv@f2+1
  9769  16F5  082A               	movf	?___ftadd+2,w
  9770  16F6  00C7               	movwf	___ftdiv@f2+2
  9771  16F7  0861               	movf	map@out_max,w
  9772  16F8  00A8               	movwf	___ftadd@f1
  9773  16F9  0862               	movf	map@out_max+1,w
  9774  16FA  00A9               	movwf	___ftadd@f1+1
  9775  16FB  0863               	movf	map@out_max+2,w
  9776  16FC  00AA               	movwf	___ftadd@f1+2
  9777  16FD  085E               	movf	map@out_min,w
  9778  16FE  00A0               	movwf	___ftneg@f1
  9779  16FF  085F               	movf	map@out_min+1,w
  9780  1700  00A1               	movwf	___ftneg@f1+1
  9781  1701  0860               	movf	map@out_min+2,w
  9782  1702  00A2               	movwf	___ftneg@f1+2
  9783  1703  319E  26BB  3196   	fcall	___ftneg
  9784  1706  0020               	movlb	0	; select bank0
  9785  1707  0820               	movf	?___ftneg,w
  9786  1708  00AB               	movwf	___ftadd@f2
  9787  1709  0821               	movf	?___ftneg+1,w
  9788  170A  00AC               	movwf	___ftadd@f2+1
  9789  170B  0822               	movf	?___ftneg+2,w
  9790  170C  00AD               	movwf	___ftadd@f2+2
  9791  170D  3189  21CE  3196   	fcall	___ftadd
  9792  1710  0020               	movlb	0	; select bank0
  9793  1711  0828               	movf	?___ftadd,w
  9794  1712  00B5               	movwf	___ftmul@f1
  9795  1713  0829               	movf	?___ftadd+1,w
  9796  1714  00B6               	movwf	___ftmul@f1+1
  9797  1715  082A               	movf	?___ftadd+2,w
  9798  1716  00B7               	movwf	___ftmul@f1+2
  9799  1717  0855               	movf	map@x,w
  9800  1718  00A8               	movwf	___ftadd@f1
  9801  1719  0856               	movf	map@x+1,w
  9802  171A  00A9               	movwf	___ftadd@f1+1
  9803  171B  0857               	movf	map@x+2,w
  9804  171C  00AA               	movwf	___ftadd@f1+2
  9805  171D  0858               	movf	map@in_min,w
  9806  171E  00A0               	movwf	___ftneg@f1
  9807  171F  0859               	movf	map@in_min+1,w
  9808  1720  00A1               	movwf	___ftneg@f1+1
  9809  1721  085A               	movf	map@in_min+2,w
  9810  1722  00A2               	movwf	___ftneg@f1+2
  9811  1723  319E  26BB  3196   	fcall	___ftneg
  9812  1726  0020               	movlb	0	; select bank0
  9813  1727  0820               	movf	?___ftneg,w
  9814  1728  00AB               	movwf	___ftadd@f2
  9815  1729  0821               	movf	?___ftneg+1,w
  9816  172A  00AC               	movwf	___ftadd@f2+1
  9817  172B  0822               	movf	?___ftneg+2,w
  9818  172C  00AD               	movwf	___ftadd@f2+2
  9819  172D  3189  21CE  3196   	fcall	___ftadd
  9820  1730  0020               	movlb	0	; select bank0
  9821  1731  0828               	movf	?___ftadd,w
  9822  1732  00B8               	movwf	___ftmul@f2
  9823  1733  0829               	movf	?___ftadd+1,w
  9824  1734  00B9               	movwf	___ftmul@f2+1
  9825  1735  082A               	movf	?___ftadd+2,w
  9826  1736  00BA               	movwf	___ftmul@f2+2
  9827  1737  3189  211A  3196   	fcall	___ftmul
  9828  173A  0020               	movlb	0	; select bank0
  9829  173B  0835               	movf	?___ftmul,w
  9830  173C  00C8               	movwf	___ftdiv@f1
  9831  173D  0836               	movf	?___ftmul+1,w
  9832  173E  00C9               	movwf	___ftdiv@f1+1
  9833  173F  0837               	movf	?___ftmul+2,w
  9834  1740  00CA               	movwf	___ftdiv@f1+2
  9835  1741  3188  2071  3196   	fcall	___ftdiv
  9836  1744  0020               	movlb	0	; select bank0
  9837  1745  0845               	movf	?___ftdiv,w
  9838  1746  00E4               	movwf	_map$2065
  9839  1747  0846               	movf	?___ftdiv+1,w
  9840  1748  00E5               	movwf	_map$2065+1
  9841  1749  0847               	movf	?___ftdiv+2,w
  9842  174A  00E6               	movwf	_map$2065+2
  9843                           
  9844                           ;user.c: 166: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  9845  174B  085E               	movf	map@out_min,w
  9846  174C  00A8               	movwf	___ftadd@f1
  9847  174D  085F               	movf	map@out_min+1,w
  9848  174E  00A9               	movwf	___ftadd@f1+1
  9849  174F  0860               	movf	map@out_min+2,w
  9850  1750  00AA               	movwf	___ftadd@f1+2
  9851  1751  0864               	movf	_map$2065,w
  9852  1752  00AB               	movwf	___ftadd@f2
  9853  1753  0865               	movf	_map$2065+1,w
  9854  1754  00AC               	movwf	___ftadd@f2+1
  9855  1755  0866               	movf	_map$2065+2,w
  9856  1756  00AD               	movwf	___ftadd@f2+2
  9857  1757  3189  21CE         	fcall	___ftadd
  9858  1759  0020               	movlb	0	; select bank0
  9859  175A  0828               	movf	?___ftadd,w
  9860  175B  00D5               	movwf	?_map
  9861  175C  0829               	movf	?___ftadd+1,w
  9862  175D  00D6               	movwf	?_map+1
  9863  175E  082A               	movf	?___ftadd+2,w
  9864  175F  00D7               	movwf	?_map+2
  9865  1760  0008               	return
  9866  1761                     __end_of_map:	
  9867                           
  9868                           	psect	text21
  9869  1EBB                     __ptext21:	
  9870 ;; *************** function ___ftneg *****************
  9871 ;; Defined at:
  9872 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;  f1              3    0[BANK0 ] float 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  3    0[BANK0 ] float 
  9879 ;; Registers used:
  9880 ;;		wreg
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9886 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9889 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9890 ;;Total ram usage:        3 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:    2
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_map
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           
  9901                           ;psect for function ___ftneg
  9902  1EBB                     ___ftneg:	
  9903                           
  9904                           ;incstack = 0
  9905                           ; Regs used in ___ftneg: [wreg]
  9906  1EBB  0020               	movlb	0	; select bank0
  9907  1EBC  0822               	movf	___ftneg@f1+2,w
  9908  1EBD  0421               	iorwf	___ftneg@f1+1,w
  9909  1EBE  0420               	iorwf	___ftneg@f1,w
  9910  1EBF  1903               	skipnz
  9911  1EC0  0008               	return
  9912  1EC1  3080               	movlw	128
  9913  1EC2  06A2               	xorwf	___ftneg@f1+2,f
  9914  1EC3  0008               	return
  9915  1EC4                     __end_of___ftneg:	
  9916                           
  9917                           	psect	text22
  9918  091A                     __ptext22:	
  9919 ;; *************** function ___ftmul *****************
  9920 ;; Defined at:
  9921 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;  f1              3   21[BANK0 ] float 
  9924 ;;  f2              3   24[BANK0 ] float 
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;  f3_as_produc    3   32[BANK0 ] unsigned um
  9927 ;;  sign            1   36[BANK0 ] unsigned char 
  9928 ;;  cntr            1   35[BANK0 ] unsigned char 
  9929 ;;  exp             1   31[BANK0 ] unsigned char 
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  3   21[BANK0 ] float 
  9932 ;; Registers used:
  9933 ;;		wreg, status,2, status,0, pclath, cstack
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9939 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9940 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9941 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9942 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9943 ;;Total ram usage:       16 bytes
  9944 ;; Hardware stack levels used:    1
  9945 ;; Hardware stack levels required when called:    3
  9946 ;; This function calls:
  9947 ;;		___ftpack
  9948 ;; This function is called by:
  9949 ;;		_set_subdivision
  9950 ;;		_map
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           
  9955                           ;psect for function ___ftmul
  9956  091A                     ___ftmul:	
  9957                           
  9958                           ;incstack = 0
  9959                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9960  091A  0020               	movlb	0	; select bank0
  9961  091B  0835               	movf	___ftmul@f1,w
  9962  091C  00BB               	movwf	??___ftmul
  9963  091D  0836               	movf	___ftmul@f1+1,w
  9964  091E  00BC               	movwf	??___ftmul+1
  9965  091F  0837               	movf	___ftmul@f1+2,w
  9966  0920  00BD               	movwf	??___ftmul+2
  9967  0921  1003               	clrc
  9968  0922  0D3C               	rlf	??___ftmul+1,w
  9969  0923  0D3D               	rlf	??___ftmul+2,w
  9970  0924  00BE               	movwf	??___ftmul+3
  9971  0925  083E               	movf	??___ftmul+3,w
  9972  0926  00BF               	movwf	___ftmul@exp
  9973  0927  083F               	movf	___ftmul@exp,w
  9974  0928  1D03               	btfss	3,2
  9975  0929  2931               	goto	l3531
  9976  092A  3000               	movlw	0
  9977  092B  00B5               	movwf	?___ftmul
  9978  092C  3000               	movlw	0
  9979  092D  00B6               	movwf	?___ftmul+1
  9980  092E  3000               	movlw	0
  9981  092F  00B7               	movwf	?___ftmul+2
  9982  0930  0008               	return
  9983  0931                     l3531:	
  9984  0931  0838               	movf	___ftmul@f2,w
  9985  0932  00BB               	movwf	??___ftmul
  9986  0933  0839               	movf	___ftmul@f2+1,w
  9987  0934  00BC               	movwf	??___ftmul+1
  9988  0935  083A               	movf	___ftmul@f2+2,w
  9989  0936  00BD               	movwf	??___ftmul+2
  9990  0937  1003               	clrc
  9991  0938  0D3C               	rlf	??___ftmul+1,w
  9992  0939  0D3D               	rlf	??___ftmul+2,w
  9993  093A  00BE               	movwf	??___ftmul+3
  9994  093B  083E               	movf	??___ftmul+3,w
  9995  093C  00C4               	movwf	___ftmul@sign
  9996  093D  0844               	movf	___ftmul@sign,w
  9997  093E  1D03               	btfss	3,2
  9998  093F  2947               	goto	l3537
  9999  0940  3000               	movlw	0
 10000  0941  00B5               	movwf	?___ftmul
 10001  0942  3000               	movlw	0
 10002  0943  00B6               	movwf	?___ftmul+1
 10003  0944  3000               	movlw	0
 10004  0945  00B7               	movwf	?___ftmul+2
 10005  0946  0008               	return
 10006  0947                     l3537:	
 10007  0947  0844               	movf	___ftmul@sign,w
 10008  0948  3E7B               	addlw	123
 10009  0949  00BB               	movwf	??___ftmul
 10010  094A  083B               	movf	??___ftmul,w
 10011  094B  07BF               	addwf	___ftmul@exp,f
 10012  094C  0835               	movf	___ftmul@f1,w
 10013  094D  00BB               	movwf	??___ftmul
 10014  094E  0836               	movf	___ftmul@f1+1,w
 10015  094F  00BC               	movwf	??___ftmul+1
 10016  0950  0837               	movf	___ftmul@f1+2,w
 10017  0951  00BD               	movwf	??___ftmul+2
 10018  0952  3010               	movlw	16
 10019  0953                     u3065:	
 10020  0953  36BD               	lsrf	??___ftmul+2,f
 10021  0954  0CBC               	rrf	??___ftmul+1,f
 10022  0955  0CBB               	rrf	??___ftmul,f
 10023  0956  0B89               	decfsz	9,f
 10024  0957  2953               	goto	u3065
 10025  0958  083B               	movf	??___ftmul,w
 10026  0959  00BE               	movwf	??___ftmul+3
 10027  095A  083E               	movf	??___ftmul+3,w
 10028  095B  00C4               	movwf	___ftmul@sign
 10029  095C  0838               	movf	___ftmul@f2,w
 10030  095D  00BB               	movwf	??___ftmul
 10031  095E  0839               	movf	___ftmul@f2+1,w
 10032  095F  00BC               	movwf	??___ftmul+1
 10033  0960  083A               	movf	___ftmul@f2+2,w
 10034  0961  00BD               	movwf	??___ftmul+2
 10035  0962  3010               	movlw	16
 10036  0963                     u3075:	
 10037  0963  36BD               	lsrf	??___ftmul+2,f
 10038  0964  0CBC               	rrf	??___ftmul+1,f
 10039  0965  0CBB               	rrf	??___ftmul,f
 10040  0966  0B89               	decfsz	9,f
 10041  0967  2963               	goto	u3075
 10042  0968  083B               	movf	??___ftmul,w
 10043  0969  00BE               	movwf	??___ftmul+3
 10044  096A  083E               	movf	??___ftmul+3,w
 10045  096B  06C4               	xorwf	___ftmul@sign,f
 10046  096C  3080               	movlw	128
 10047  096D  00BB               	movwf	??___ftmul
 10048  096E  083B               	movf	??___ftmul,w
 10049  096F  05C4               	andwf	___ftmul@sign,f
 10050  0970  17B6               	bsf	___ftmul@f1+1,7
 10051  0971  17B9               	bsf	___ftmul@f2+1,7
 10052  0972  30FF               	movlw	255
 10053  0973  05B8               	andwf	___ftmul@f2,f
 10054  0974  30FF               	movlw	255
 10055  0975  05B9               	andwf	___ftmul@f2+1,f
 10056  0976  3000               	movlw	0
 10057  0977  05BA               	andwf	___ftmul@f2+2,f
 10058  0978  3000               	movlw	0
 10059  0979  00C0               	movwf	___ftmul@f3_as_product
 10060  097A  3000               	movlw	0
 10061  097B  00C1               	movwf	___ftmul@f3_as_product+1
 10062  097C  3000               	movlw	0
 10063  097D  00C2               	movwf	___ftmul@f3_as_product+2
 10064  097E  3007               	movlw	7
 10065  097F  00BB               	movwf	??___ftmul
 10066  0980  083B               	movf	??___ftmul,w
 10067  0981  00C3               	movwf	___ftmul@cntr
 10068  0982                     l3549:	
 10069  0982  1C35               	btfss	___ftmul@f1,0
 10070  0983  298A               	goto	l3553
 10071  0984  0838               	movf	___ftmul@f2,w
 10072  0985  07C0               	addwf	___ftmul@f3_as_product,f
 10073  0986  0839               	movf	___ftmul@f2+1,w
 10074  0987  3DC1               	addwfc	___ftmul@f3_as_product+1,f
 10075  0988  083A               	movf	___ftmul@f2+2,w
 10076  0989  3DC2               	addwfc	___ftmul@f3_as_product+2,f
 10077  098A                     l3553:	
 10078  098A  3001               	movlw	1
 10079  098B                     u3095:	
 10080  098B  36B7               	lsrf	___ftmul@f1+2,f
 10081  098C  0CB6               	rrf	___ftmul@f1+1,f
 10082  098D  0CB5               	rrf	___ftmul@f1,f
 10083  098E  0B89               	decfsz	9,f
 10084  098F  298B               	goto	u3095
 10085  0990  3001               	movlw	1
 10086  0991                     u3105:	
 10087  0991  35B8               	lslf	___ftmul@f2,f
 10088  0992  0DB9               	rlf	___ftmul@f2+1,f
 10089  0993  0DBA               	rlf	___ftmul@f2+2,f
 10090  0994  0B89               	decfsz	9,f
 10091  0995  2991               	goto	u3105
 10092  0996  3001               	movlw	1
 10093  0997  02C3               	subwf	___ftmul@cntr,f
 10094  0998  1D03               	btfss	3,2
 10095  0999  2982               	goto	l3549
 10096  099A  3009               	movlw	9
 10097  099B  00BB               	movwf	??___ftmul
 10098  099C  083B               	movf	??___ftmul,w
 10099  099D  00C3               	movwf	___ftmul@cntr
 10100  099E                     l3561:	
 10101  099E  1C35               	btfss	___ftmul@f1,0
 10102  099F  29A6               	goto	l3565
 10103  09A0  0838               	movf	___ftmul@f2,w
 10104  09A1  07C0               	addwf	___ftmul@f3_as_product,f
 10105  09A2  0839               	movf	___ftmul@f2+1,w
 10106  09A3  3DC1               	addwfc	___ftmul@f3_as_product+1,f
 10107  09A4  083A               	movf	___ftmul@f2+2,w
 10108  09A5  3DC2               	addwfc	___ftmul@f3_as_product+2,f
 10109  09A6                     l3565:	
 10110  09A6  3001               	movlw	1
 10111  09A7                     u3135:	
 10112  09A7  36B7               	lsrf	___ftmul@f1+2,f
 10113  09A8  0CB6               	rrf	___ftmul@f1+1,f
 10114  09A9  0CB5               	rrf	___ftmul@f1,f
 10115  09AA  0B89               	decfsz	9,f
 10116  09AB  29A7               	goto	u3135
 10117  09AC  3001               	movlw	1
 10118  09AD                     u3145:	
 10119  09AD  36C2               	lsrf	___ftmul@f3_as_product+2,f
 10120  09AE  0CC1               	rrf	___ftmul@f3_as_product+1,f
 10121  09AF  0CC0               	rrf	___ftmul@f3_as_product,f
 10122  09B0  0B89               	decfsz	9,f
 10123  09B1  29AD               	goto	u3145
 10124  09B2  3001               	movlw	1
 10125  09B3  02C3               	subwf	___ftmul@cntr,f
 10126  09B4  1D03               	btfss	3,2
 10127  09B5  299E               	goto	l3561
 10128  09B6  0840               	movf	___ftmul@f3_as_product,w
 10129  09B7  00A0               	movwf	___ftpack@arg
 10130  09B8  0841               	movf	___ftmul@f3_as_product+1,w
 10131  09B9  00A1               	movwf	___ftpack@arg+1
 10132  09BA  0842               	movf	___ftmul@f3_as_product+2,w
 10133  09BB  00A2               	movwf	___ftpack@arg+2
 10134  09BC  083F               	movf	___ftmul@exp,w
 10135  09BD  00BB               	movwf	??___ftmul
 10136  09BE  083B               	movf	??___ftmul,w
 10137  09BF  00A3               	movwf	___ftpack@exp
 10138  09C0  0844               	movf	___ftmul@sign,w
 10139  09C1  00BC               	movwf	??___ftmul+1
 10140  09C2  083C               	movf	??___ftmul+1,w
 10141  09C3  00A4               	movwf	___ftpack@sign
 10142  09C4  3195  25EF         	fcall	___ftpack
 10143  09C6  0020               	movlb	0	; select bank0
 10144  09C7  0820               	movf	?___ftpack,w
 10145  09C8  00B5               	movwf	?___ftmul
 10146  09C9  0821               	movf	?___ftpack+1,w
 10147  09CA  00B6               	movwf	?___ftmul+1
 10148  09CB  0822               	movf	?___ftpack+2,w
 10149  09CC  00B7               	movwf	?___ftmul+2
 10150  09CD  0008               	return
 10151  09CE                     __end_of___ftmul:	
 10152                           
 10153                           	psect	text23
 10154  0871                     __ptext23:	
 10155 ;; *************** function ___ftdiv *****************
 10156 ;; Defined at:
 10157 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  f2              3   37[BANK0 ] float 
 10160 ;;  f1              3   40[BANK0 ] float 
 10161 ;; Auto vars:     Size  Location     Type
 10162 ;;  f3              3   48[BANK0 ] float 
 10163 ;;  sign            1   52[BANK0 ] unsigned char 
 10164 ;;  exp             1   51[BANK0 ] unsigned char 
 10165 ;;  cntr            1   47[BANK0 ] unsigned char 
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  3   37[BANK0 ] float 
 10168 ;; Registers used:
 10169 ;;		wreg, status,2, status,0, pclath, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10175 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10176 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10177 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10178 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10179 ;;Total ram usage:       16 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    3
 10182 ;; This function calls:
 10183 ;;		___ftpack
 10184 ;; This function is called by:
 10185 ;;		_main
 10186 ;;		_map
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           
 10191                           ;psect for function ___ftdiv
 10192  0871                     ___ftdiv:	
 10193                           
 10194                           ;incstack = 0
 10195                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 10196  0871  0020               	movlb	0	; select bank0
 10197  0872  0848               	movf	___ftdiv@f1,w
 10198  0873  00CB               	movwf	??___ftdiv
 10199  0874  0849               	movf	___ftdiv@f1+1,w
 10200  0875  00CC               	movwf	??___ftdiv+1
 10201  0876  084A               	movf	___ftdiv@f1+2,w
 10202  0877  00CD               	movwf	??___ftdiv+2
 10203  0878  1003               	clrc
 10204  0879  0D4C               	rlf	??___ftdiv+1,w
 10205  087A  0D4D               	rlf	??___ftdiv+2,w
 10206  087B  00CE               	movwf	??___ftdiv+3
 10207  087C  084E               	movf	??___ftdiv+3,w
 10208  087D  00D3               	movwf	___ftdiv@exp
 10209  087E  0853               	movf	___ftdiv@exp,w
 10210  087F  1D03               	btfss	3,2
 10211  0880  2888               	goto	l3489
 10212  0881  3000               	movlw	0
 10213  0882  00C5               	movwf	?___ftdiv
 10214  0883  3000               	movlw	0
 10215  0884  00C6               	movwf	?___ftdiv+1
 10216  0885  3000               	movlw	0
 10217  0886  00C7               	movwf	?___ftdiv+2
 10218  0887  0008               	return
 10219  0888                     l3489:	
 10220  0888  0845               	movf	___ftdiv@f2,w
 10221  0889  00CB               	movwf	??___ftdiv
 10222  088A  0846               	movf	___ftdiv@f2+1,w
 10223  088B  00CC               	movwf	??___ftdiv+1
 10224  088C  0847               	movf	___ftdiv@f2+2,w
 10225  088D  00CD               	movwf	??___ftdiv+2
 10226  088E  1003               	clrc
 10227  088F  0D4C               	rlf	??___ftdiv+1,w
 10228  0890  0D4D               	rlf	??___ftdiv+2,w
 10229  0891  00CE               	movwf	??___ftdiv+3
 10230  0892  084E               	movf	??___ftdiv+3,w
 10231  0893  00D4               	movwf	___ftdiv@sign
 10232  0894  0854               	movf	___ftdiv@sign,w
 10233  0895  1D03               	btfss	3,2
 10234  0896  289E               	goto	l3495
 10235  0897  3000               	movlw	0
 10236  0898  00C5               	movwf	?___ftdiv
 10237  0899  3000               	movlw	0
 10238  089A  00C6               	movwf	?___ftdiv+1
 10239  089B  3000               	movlw	0
 10240  089C  00C7               	movwf	?___ftdiv+2
 10241  089D  0008               	return
 10242  089E                     l3495:	
 10243  089E  3000               	movlw	0
 10244  089F  00D0               	movwf	___ftdiv@f3
 10245  08A0  3000               	movlw	0
 10246  08A1  00D1               	movwf	___ftdiv@f3+1
 10247  08A2  3000               	movlw	0
 10248  08A3  00D2               	movwf	___ftdiv@f3+2
 10249  08A4  3089               	movlw	137
 10250  08A5  0754               	addwf	___ftdiv@sign,w
 10251  08A6  00CB               	movwf	??___ftdiv
 10252  08A7  084B               	movf	??___ftdiv,w
 10253  08A8  02D3               	subwf	___ftdiv@exp,f
 10254  08A9  0848               	movf	___ftdiv@f1,w
 10255  08AA  00CB               	movwf	??___ftdiv
 10256  08AB  0849               	movf	___ftdiv@f1+1,w
 10257  08AC  00CC               	movwf	??___ftdiv+1
 10258  08AD  084A               	movf	___ftdiv@f1+2,w
 10259  08AE  00CD               	movwf	??___ftdiv+2
 10260  08AF  3010               	movlw	16
 10261  08B0                     u2985:	
 10262  08B0  36CD               	lsrf	??___ftdiv+2,f
 10263  08B1  0CCC               	rrf	??___ftdiv+1,f
 10264  08B2  0CCB               	rrf	??___ftdiv,f
 10265  08B3  0B89               	decfsz	9,f
 10266  08B4  28B0               	goto	u2985
 10267  08B5  084B               	movf	??___ftdiv,w
 10268  08B6  00CE               	movwf	??___ftdiv+3
 10269  08B7  084E               	movf	??___ftdiv+3,w
 10270  08B8  00D4               	movwf	___ftdiv@sign
 10271  08B9  0845               	movf	___ftdiv@f2,w
 10272  08BA  00CB               	movwf	??___ftdiv
 10273  08BB  0846               	movf	___ftdiv@f2+1,w
 10274  08BC  00CC               	movwf	??___ftdiv+1
 10275  08BD  0847               	movf	___ftdiv@f2+2,w
 10276  08BE  00CD               	movwf	??___ftdiv+2
 10277  08BF  3010               	movlw	16
 10278  08C0                     u2995:	
 10279  08C0  36CD               	lsrf	??___ftdiv+2,f
 10280  08C1  0CCC               	rrf	??___ftdiv+1,f
 10281  08C2  0CCB               	rrf	??___ftdiv,f
 10282  08C3  0B89               	decfsz	9,f
 10283  08C4  28C0               	goto	u2995
 10284  08C5  084B               	movf	??___ftdiv,w
 10285  08C6  00CE               	movwf	??___ftdiv+3
 10286  08C7  084E               	movf	??___ftdiv+3,w
 10287  08C8  06D4               	xorwf	___ftdiv@sign,f
 10288  08C9  3080               	movlw	128
 10289  08CA  00CB               	movwf	??___ftdiv
 10290  08CB  084B               	movf	??___ftdiv,w
 10291  08CC  05D4               	andwf	___ftdiv@sign,f
 10292  08CD  17C9               	bsf	___ftdiv@f1+1,7
 10293  08CE  30FF               	movlw	255
 10294  08CF  05C8               	andwf	___ftdiv@f1,f
 10295  08D0  30FF               	movlw	255
 10296  08D1  05C9               	andwf	___ftdiv@f1+1,f
 10297  08D2  3000               	movlw	0
 10298  08D3  05CA               	andwf	___ftdiv@f1+2,f
 10299  08D4  17C6               	bsf	___ftdiv@f2+1,7
 10300  08D5  30FF               	movlw	255
 10301  08D6  05C5               	andwf	___ftdiv@f2,f
 10302  08D7  30FF               	movlw	255
 10303  08D8  05C6               	andwf	___ftdiv@f2+1,f
 10304  08D9  3000               	movlw	0
 10305  08DA  05C7               	andwf	___ftdiv@f2+2,f
 10306  08DB  3018               	movlw	24
 10307  08DC  00CB               	movwf	??___ftdiv
 10308  08DD  084B               	movf	??___ftdiv,w
 10309  08DE  00CF               	movwf	___ftdiv@cntr
 10310  08DF                     l3509:	
 10311  08DF  3001               	movlw	1
 10312  08E0                     u3005:	
 10313  08E0  35D0               	lslf	___ftdiv@f3,f
 10314  08E1  0DD1               	rlf	___ftdiv@f3+1,f
 10315  08E2  0DD2               	rlf	___ftdiv@f3+2,f
 10316  08E3  0B89               	decfsz	9,f
 10317  08E4  28E0               	goto	u3005
 10318  08E5  0847               	movf	___ftdiv@f2+2,w
 10319  08E6  024A               	subwf	___ftdiv@f1+2,w
 10320  08E7  1D03               	skipz
 10321  08E8  28EF               	goto	u3015
 10322  08E9  0846               	movf	___ftdiv@f2+1,w
 10323  08EA  0249               	subwf	___ftdiv@f1+1,w
 10324  08EB  1D03               	skipz
 10325  08EC  28EF               	goto	u3015
 10326  08ED  0845               	movf	___ftdiv@f2,w
 10327  08EE  0248               	subwf	___ftdiv@f1,w
 10328  08EF                     u3015:	
 10329  08EF  1C03               	skipc
 10330  08F0  28F8               	goto	l3517
 10331  08F1  0845               	movf	___ftdiv@f2,w
 10332  08F2  02C8               	subwf	___ftdiv@f1,f
 10333  08F3  0846               	movf	___ftdiv@f2+1,w
 10334  08F4  3BC9               	subwfb	___ftdiv@f1+1,f
 10335  08F5  0847               	movf	___ftdiv@f2+2,w
 10336  08F6  3BCA               	subwfb	___ftdiv@f1+2,f
 10337  08F7  1450               	bsf	___ftdiv@f3,0
 10338  08F8                     l3517:	
 10339  08F8  3001               	movlw	1
 10340  08F9                     u3025:	
 10341  08F9  35C8               	lslf	___ftdiv@f1,f
 10342  08FA  0DC9               	rlf	___ftdiv@f1+1,f
 10343  08FB  0DCA               	rlf	___ftdiv@f1+2,f
 10344  08FC  0B89               	decfsz	9,f
 10345  08FD  28F9               	goto	u3025
 10346  08FE  3001               	movlw	1
 10347  08FF  02CF               	subwf	___ftdiv@cntr,f
 10348  0900  1D03               	btfss	3,2
 10349  0901  28DF               	goto	l3509
 10350  0902  0850               	movf	___ftdiv@f3,w
 10351  0903  00A0               	movwf	___ftpack@arg
 10352  0904  0851               	movf	___ftdiv@f3+1,w
 10353  0905  00A1               	movwf	___ftpack@arg+1
 10354  0906  0852               	movf	___ftdiv@f3+2,w
 10355  0907  00A2               	movwf	___ftpack@arg+2
 10356  0908  0853               	movf	___ftdiv@exp,w
 10357  0909  00CB               	movwf	??___ftdiv
 10358  090A  084B               	movf	??___ftdiv,w
 10359  090B  00A3               	movwf	___ftpack@exp
 10360  090C  0854               	movf	___ftdiv@sign,w
 10361  090D  00CC               	movwf	??___ftdiv+1
 10362  090E  084C               	movf	??___ftdiv+1,w
 10363  090F  00A4               	movwf	___ftpack@sign
 10364  0910  3195  25EF         	fcall	___ftpack
 10365  0912  0020               	movlb	0	; select bank0
 10366  0913  0820               	movf	?___ftpack,w
 10367  0914  00C5               	movwf	?___ftdiv
 10368  0915  0821               	movf	?___ftpack+1,w
 10369  0916  00C6               	movwf	?___ftdiv+1
 10370  0917  0822               	movf	?___ftpack+2,w
 10371  0918  00C7               	movwf	?___ftdiv+2
 10372  0919  0008               	return
 10373  091A                     __end_of___ftdiv:	
 10374                           
 10375                           	psect	text24
 10376  09CE                     __ptext24:	
 10377 ;; *************** function ___ftadd *****************
 10378 ;; Defined at:
 10379 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  f1              3    8[BANK0 ] float 
 10382 ;;  f2              3   11[BANK0 ] float 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;  exp1            1   20[BANK0 ] unsigned char 
 10385 ;;  exp2            1   19[BANK0 ] unsigned char 
 10386 ;;  sign            1   18[BANK0 ] unsigned char 
 10387 ;; Return value:  Size  Location     Type
 10388 ;;                  3    8[BANK0 ] float 
 10389 ;; Registers used:
 10390 ;;		wreg, status,2, status,0, pclath, cstack
 10391 ;; Tracked objects:
 10392 ;;		On entry : 0/0
 10393 ;;		On exit  : 0/0
 10394 ;;		Unchanged: 0/0
 10395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10396 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10397 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10398 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10399 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10400 ;;Total ram usage:       13 bytes
 10401 ;; Hardware stack levels used:    1
 10402 ;; Hardware stack levels required when called:    3
 10403 ;; This function calls:
 10404 ;;		___ftpack
 10405 ;; This function is called by:
 10406 ;;		_map
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410                           
 10411                           ;psect for function ___ftadd
 10412  09CE                     ___ftadd:	
 10413                           
 10414                           ;incstack = 0
 10415                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 10416  09CE  0020               	movlb	0	; select bank0
 10417  09CF  0828               	movf	___ftadd@f1,w
 10418  09D0  00AE               	movwf	??___ftadd
 10419  09D1  0829               	movf	___ftadd@f1+1,w
 10420  09D2  00AF               	movwf	??___ftadd+1
 10421  09D3  082A               	movf	___ftadd@f1+2,w
 10422  09D4  00B0               	movwf	??___ftadd+2
 10423  09D5  1003               	clrc
 10424  09D6  0D2F               	rlf	??___ftadd+1,w
 10425  09D7  0D30               	rlf	??___ftadd+2,w
 10426  09D8  00B1               	movwf	??___ftadd+3
 10427  09D9  0831               	movf	??___ftadd+3,w
 10428  09DA  00B4               	movwf	___ftadd@exp1
 10429  09DB  082B               	movf	___ftadd@f2,w
 10430  09DC  00AE               	movwf	??___ftadd
 10431  09DD  082C               	movf	___ftadd@f2+1,w
 10432  09DE  00AF               	movwf	??___ftadd+1
 10433  09DF  082D               	movf	___ftadd@f2+2,w
 10434  09E0  00B0               	movwf	??___ftadd+2
 10435  09E1  1003               	clrc
 10436  09E2  0D2F               	rlf	??___ftadd+1,w
 10437  09E3  0D30               	rlf	??___ftadd+2,w
 10438  09E4  00B1               	movwf	??___ftadd+3
 10439  09E5  0831               	movf	??___ftadd+3,w
 10440  09E6  00B3               	movwf	___ftadd@exp2
 10441  09E7  0834               	movf	___ftadd@exp1,w
 10442  09E8  1903               	btfsc	3,2
 10443  09E9  29F6               	goto	l3419
 10444  09EA  0833               	movf	___ftadd@exp2,w
 10445  09EB  0234               	subwf	___ftadd@exp1,w
 10446  09EC  1803               	skipnc
 10447  09ED  29FD               	goto	l3423
 10448  09EE  0334               	decf	___ftadd@exp1,w
 10449  09EF  3AFF               	xorlw	255
 10450  09F0  0733               	addwf	___ftadd@exp2,w
 10451  09F1  00AE               	movwf	??___ftadd
 10452  09F2  3019               	movlw	25
 10453  09F3  022E               	subwf	??___ftadd,w
 10454  09F4  1C03               	skipc
 10455  09F5  29FD               	goto	l3423
 10456  09F6                     l3419:	
 10457  09F6  082B               	movf	___ftadd@f2,w
 10458  09F7  00A8               	movwf	?___ftadd
 10459  09F8  082C               	movf	___ftadd@f2+1,w
 10460  09F9  00A9               	movwf	?___ftadd+1
 10461  09FA  082D               	movf	___ftadd@f2+2,w
 10462  09FB  00AA               	movwf	?___ftadd+2
 10463  09FC  0008               	return
 10464  09FD                     l3423:	
 10465  09FD  0833               	movf	___ftadd@exp2,w
 10466  09FE  1903               	btfsc	3,2
 10467  09FF  0008               	return
 10468  0A00  0834               	movf	___ftadd@exp1,w
 10469  0A01  0233               	subwf	___ftadd@exp2,w
 10470  0A02  1803               	skipnc
 10471  0A03  2A0C               	goto	l3429
 10472  0A04  0333               	decf	___ftadd@exp2,w
 10473  0A05  3AFF               	xorlw	255
 10474  0A06  0734               	addwf	___ftadd@exp1,w
 10475  0A07  00AE               	movwf	??___ftadd
 10476  0A08  3019               	movlw	25
 10477  0A09  022E               	subwf	??___ftadd,w
 10478  0A0A  1803               	btfsc	3,0
 10479  0A0B  0008               	return
 10480  0A0C                     l3429:	
 10481  0A0C  3006               	movlw	6
 10482  0A0D  00AE               	movwf	??___ftadd
 10483  0A0E  082E               	movf	??___ftadd,w
 10484  0A0F  00B2               	movwf	___ftadd@sign
 10485  0A10  1BAA               	btfsc	___ftadd@f1+2,7
 10486  0A11  17B2               	bsf	___ftadd@sign,7
 10487  0A12  1BAD               	btfsc	___ftadd@f2+2,7
 10488  0A13  1732               	bsf	___ftadd@sign,6
 10489  0A14  17A9               	bsf	___ftadd@f1+1,7
 10490  0A15  30FF               	movlw	255
 10491  0A16  05A8               	andwf	___ftadd@f1,f
 10492  0A17  30FF               	movlw	255
 10493  0A18  05A9               	andwf	___ftadd@f1+1,f
 10494  0A19  3000               	movlw	0
 10495  0A1A  05AA               	andwf	___ftadd@f1+2,f
 10496  0A1B  17AC               	bsf	___ftadd@f2+1,7
 10497  0A1C  30FF               	movlw	255
 10498  0A1D  05AB               	andwf	___ftadd@f2,f
 10499  0A1E  30FF               	movlw	255
 10500  0A1F  05AC               	andwf	___ftadd@f2+1,f
 10501  0A20  3000               	movlw	0
 10502  0A21  05AD               	andwf	___ftadd@f2+2,f
 10503  0A22  0833               	movf	___ftadd@exp2,w
 10504  0A23  0234               	subwf	___ftadd@exp1,w
 10505  0A24  1803               	skipnc
 10506  0A25  2A48               	goto	l3451
 10507  0A26                     l3441:	
 10508  0A26  3001               	movlw	1
 10509  0A27                     u2825:	
 10510  0A27  35AB               	lslf	___ftadd@f2,f
 10511  0A28  0DAC               	rlf	___ftadd@f2+1,f
 10512  0A29  0DAD               	rlf	___ftadd@f2+2,f
 10513  0A2A  0B89               	decfsz	9,f
 10514  0A2B  2A27               	goto	u2825
 10515  0A2C  3001               	movlw	1
 10516  0A2D  02B3               	subwf	___ftadd@exp2,f
 10517  0A2E  0833               	movf	___ftadd@exp2,w
 10518  0A2F  0634               	xorwf	___ftadd@exp1,w
 10519  0A30  1903               	skipnz
 10520  0A31  2A43               	goto	l3449
 10521  0A32  3001               	movlw	1
 10522  0A33  02B2               	subwf	___ftadd@sign,f
 10523  0A34  0832               	movf	___ftadd@sign,w
 10524  0A35  3907               	andlw	7
 10525  0A36  1903               	btfsc	3,2
 10526  0A37  2A43               	goto	l3449
 10527  0A38  2A26               	goto	l3441
 10528  0A39                     l3447:	
 10529  0A39  3001               	movlw	1
 10530  0A3A                     u2855:	
 10531  0A3A  36AA               	lsrf	___ftadd@f1+2,f
 10532  0A3B  0CA9               	rrf	___ftadd@f1+1,f
 10533  0A3C  0CA8               	rrf	___ftadd@f1,f
 10534  0A3D  0B89               	decfsz	9,f
 10535  0A3E  2A3A               	goto	u2855
 10536  0A3F  3001               	movlw	1
 10537  0A40  00AE               	movwf	??___ftadd
 10538  0A41  082E               	movf	??___ftadd,w
 10539  0A42  07B4               	addwf	___ftadd@exp1,f
 10540  0A43                     l3449:	
 10541  0A43  0834               	movf	___ftadd@exp1,w
 10542  0A44  0633               	xorwf	___ftadd@exp2,w
 10543  0A45  1903               	btfsc	3,2
 10544  0A46  2A6D               	goto	l1397
 10545  0A47  2A39               	goto	l3447
 10546  0A48                     l3451:	
 10547  0A48  0834               	movf	___ftadd@exp1,w
 10548  0A49  0233               	subwf	___ftadd@exp2,w
 10549  0A4A  1803               	skipnc
 10550  0A4B  2A6D               	goto	l1397
 10551  0A4C                     l3453:	
 10552  0A4C  3001               	movlw	1
 10553  0A4D                     u2885:	
 10554  0A4D  35A8               	lslf	___ftadd@f1,f
 10555  0A4E  0DA9               	rlf	___ftadd@f1+1,f
 10556  0A4F  0DAA               	rlf	___ftadd@f1+2,f
 10557  0A50  0B89               	decfsz	9,f
 10558  0A51  2A4D               	goto	u2885
 10559  0A52  3001               	movlw	1
 10560  0A53  02B4               	subwf	___ftadd@exp1,f
 10561  0A54  0833               	movf	___ftadd@exp2,w
 10562  0A55  0634               	xorwf	___ftadd@exp1,w
 10563  0A56  1903               	skipnz
 10564  0A57  2A69               	goto	l3461
 10565  0A58  3001               	movlw	1
 10566  0A59  02B2               	subwf	___ftadd@sign,f
 10567  0A5A  0832               	movf	___ftadd@sign,w
 10568  0A5B  3907               	andlw	7
 10569  0A5C  1903               	btfsc	3,2
 10570  0A5D  2A69               	goto	l3461
 10571  0A5E  2A4C               	goto	l3453
 10572  0A5F                     l3459:	
 10573  0A5F  3001               	movlw	1
 10574  0A60                     u2915:	
 10575  0A60  36AD               	lsrf	___ftadd@f2+2,f
 10576  0A61  0CAC               	rrf	___ftadd@f2+1,f
 10577  0A62  0CAB               	rrf	___ftadd@f2,f
 10578  0A63  0B89               	decfsz	9,f
 10579  0A64  2A60               	goto	u2915
 10580  0A65  3001               	movlw	1
 10581  0A66  00AE               	movwf	??___ftadd
 10582  0A67  082E               	movf	??___ftadd,w
 10583  0A68  07B3               	addwf	___ftadd@exp2,f
 10584  0A69                     l3461:	
 10585  0A69  0834               	movf	___ftadd@exp1,w
 10586  0A6A  0633               	xorwf	___ftadd@exp2,w
 10587  0A6B  1D03               	skipz
 10588  0A6C  2A5F               	goto	l3459
 10589  0A6D                     l1397:	
 10590  0A6D  1FB2               	btfss	___ftadd@sign,7
 10591  0A6E  2A7F               	goto	l3465
 10592  0A6F  30FF               	movlw	255
 10593  0A70  06A8               	xorwf	___ftadd@f1,f
 10594  0A71  30FF               	movlw	255
 10595  0A72  06A9               	xorwf	___ftadd@f1+1,f
 10596  0A73  30FF               	movlw	255
 10597  0A74  06AA               	xorwf	___ftadd@f1+2,f
 10598  0A75  3001               	movlw	1
 10599  0A76  07A8               	addwf	___ftadd@f1,f
 10600  0A77  3000               	movlw	0
 10601  0A78  1803               	skipnc
 10602  0A79  3001               	movlw	1
 10603  0A7A  07A9               	addwf	___ftadd@f1+1,f
 10604  0A7B  3000               	movlw	0
 10605  0A7C  1803               	skipnc
 10606  0A7D  3001               	movlw	1
 10607  0A7E  07AA               	addwf	___ftadd@f1+2,f
 10608  0A7F                     l3465:	
 10609  0A7F  1F32               	btfss	___ftadd@sign,6
 10610  0A80  2A91               	goto	l3469
 10611  0A81  30FF               	movlw	255
 10612  0A82  06AB               	xorwf	___ftadd@f2,f
 10613  0A83  30FF               	movlw	255
 10614  0A84  06AC               	xorwf	___ftadd@f2+1,f
 10615  0A85  30FF               	movlw	255
 10616  0A86  06AD               	xorwf	___ftadd@f2+2,f
 10617  0A87  3001               	movlw	1
 10618  0A88  07AB               	addwf	___ftadd@f2,f
 10619  0A89  3000               	movlw	0
 10620  0A8A  1803               	skipnc
 10621  0A8B  3001               	movlw	1
 10622  0A8C  07AC               	addwf	___ftadd@f2+1,f
 10623  0A8D  3000               	movlw	0
 10624  0A8E  1803               	skipnc
 10625  0A8F  3001               	movlw	1
 10626  0A90  07AD               	addwf	___ftadd@f2+2,f
 10627  0A91                     l3469:	
 10628  0A91  01B2               	clrf	___ftadd@sign
 10629  0A92  0828               	movf	___ftadd@f1,w
 10630  0A93  07AB               	addwf	___ftadd@f2,f
 10631  0A94  0829               	movf	___ftadd@f1+1,w
 10632  0A95  3DAC               	addwfc	___ftadd@f2+1,f
 10633  0A96  082A               	movf	___ftadd@f1+2,w
 10634  0A97  3DAD               	addwfc	___ftadd@f2+2,f
 10635  0A98  1FAD               	btfss	___ftadd@f2+2,7
 10636  0A99  2AAC               	goto	l3479
 10637  0A9A  30FF               	movlw	255
 10638  0A9B  06AB               	xorwf	___ftadd@f2,f
 10639  0A9C  30FF               	movlw	255
 10640  0A9D  06AC               	xorwf	___ftadd@f2+1,f
 10641  0A9E  30FF               	movlw	255
 10642  0A9F  06AD               	xorwf	___ftadd@f2+2,f
 10643  0AA0  3001               	movlw	1
 10644  0AA1  07AB               	addwf	___ftadd@f2,f
 10645  0AA2  3000               	movlw	0
 10646  0AA3  1803               	skipnc
 10647  0AA4  3001               	movlw	1
 10648  0AA5  07AC               	addwf	___ftadd@f2+1,f
 10649  0AA6  3000               	movlw	0
 10650  0AA7  1803               	skipnc
 10651  0AA8  3001               	movlw	1
 10652  0AA9  07AD               	addwf	___ftadd@f2+2,f
 10653  0AAA  01B2               	clrf	___ftadd@sign
 10654  0AAB  0AB2               	incf	___ftadd@sign,f
 10655  0AAC                     l3479:	
 10656  0AAC  082B               	movf	___ftadd@f2,w
 10657  0AAD  00A0               	movwf	___ftpack@arg
 10658  0AAE  082C               	movf	___ftadd@f2+1,w
 10659  0AAF  00A1               	movwf	___ftpack@arg+1
 10660  0AB0  082D               	movf	___ftadd@f2+2,w
 10661  0AB1  00A2               	movwf	___ftpack@arg+2
 10662  0AB2  0834               	movf	___ftadd@exp1,w
 10663  0AB3  00AE               	movwf	??___ftadd
 10664  0AB4  082E               	movf	??___ftadd,w
 10665  0AB5  00A3               	movwf	___ftpack@exp
 10666  0AB6  0832               	movf	___ftadd@sign,w
 10667  0AB7  00AF               	movwf	??___ftadd+1
 10668  0AB8  082F               	movf	??___ftadd+1,w
 10669  0AB9  00A4               	movwf	___ftpack@sign
 10670  0ABA  3195  25EF         	fcall	___ftpack
 10671  0ABC  0020               	movlb	0	; select bank0
 10672  0ABD  0820               	movf	?___ftpack,w
 10673  0ABE  00A8               	movwf	?___ftadd
 10674  0ABF  0821               	movf	?___ftpack+1,w
 10675  0AC0  00A9               	movwf	?___ftadd+1
 10676  0AC1  0822               	movf	?___ftpack+2,w
 10677  0AC2  00AA               	movwf	?___ftadd+2
 10678  0AC3  0008               	return
 10679  0AC4                     __end_of___ftadd:	
 10680                           
 10681                           	psect	text25
 10682  1000                     __ptext25:	
 10683 ;; *************** function _initSwitchBypass *****************
 10684 ;; Defined at:
 10685 ;;		line 29 in file "SwitchBypass.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;		None
 10688 ;; Auto vars:     Size  Location     Type
 10689 ;;  initState       2   18[BANK0 ] int 
 10690 ;; Return value:  Size  Location     Type
 10691 ;;                  1    wreg      void 
 10692 ;; Registers used:
 10693 ;;		wreg, status,2, status,0, pclath, cstack
 10694 ;; Tracked objects:
 10695 ;;		On entry : 0/0
 10696 ;;		On exit  : 0/0
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10700 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10702 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10703 ;;Total ram usage:        2 bytes
 10704 ;; Hardware stack levels used:    1
 10705 ;; Hardware stack levels required when called:    5
 10706 ;; This function calls:
 10707 ;;		_getSwitchBypassState
 10708 ;;		_setSwitchBypassState
 10709 ;; This function is called by:
 10710 ;;		_main
 10711 ;; This function uses a non-reentrant model
 10712 ;;
 10713                           
 10714                           
 10715                           ;psect for function _initSwitchBypass
 10716  1000                     _initSwitchBypass:	
 10717                           
 10718                           ;SwitchBypass.c: 30: int initState = getSwitchBypassState();
 10719                           
 10720                           ;incstack = 0
 10721                           ; Regs used in _initSwitchBypass: [wreg+status,2+status,0+pclath+cstack]
 10722  1000  319E  26A7  3190   	fcall	_getSwitchBypassState
 10723  1003  0020               	movlb	0	; select bank0
 10724  1004  0821               	movf	?_getSwitchBypassState+1,w
 10725  1005  00B3               	movwf	initSwitchBypass@initState+1
 10726  1006  0820               	movf	?_getSwitchBypassState,w
 10727  1007  00B2               	movwf	initSwitchBypass@initState
 10728                           
 10729                           ;SwitchBypass.c: 31: setSwitchBypassState(initState);
 10730  1008  0833               	movf	initSwitchBypass@initState+1,w
 10731  1009  00AF               	movwf	setSwitchBypassState@f_state+1
 10732  100A  0832               	movf	initSwitchBypass@initState,w
 10733  100B  00AE               	movwf	setSwitchBypassState@f_state
 10734  100C  3194  240F         	fcall	_setSwitchBypassState
 10735  100E  0008               	return
 10736  100F                     __end_of_initSwitchBypass:	
 10737                           
 10738                           	psect	text26
 10739  140F                     __ptext26:	
 10740 ;; *************** function _setSwitchBypassState *****************
 10741 ;; Defined at:
 10742 ;;		line 134 in file "SwitchBypass.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;  f_state         2   14[BANK0 ] int 
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  1    wreg      void 
 10749 ;; Registers used:
 10750 ;;		wreg, status,2, status,0, pclath, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10756 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10759 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10760 ;;Total ram usage:        4 bytes
 10761 ;; Hardware stack levels used:    1
 10762 ;; Hardware stack levels required when called:    4
 10763 ;; This function calls:
 10764 ;;		_updateSwitchBypassState
 10765 ;;		_wait_ms
 10766 ;; This function is called by:
 10767 ;;		_initSwitchBypass
 10768 ;;		_updateSwitchBypass
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           
 10772                           
 10773                           ;psect for function _setSwitchBypassState
 10774  140F                     _setSwitchBypassState:	
 10775                           
 10776                           ;SwitchBypass.c: 135: if (switchBypass_state == f_state) {return;}
 10777                           
 10778                           ;incstack = 0
 10779                           ; Regs used in _setSwitchBypassState: [wreg+status,2+status,0+pclath+cstack]
 10780  140F  0021               	movlb	1	; select bank1
 10781  1410  086E               	movf	_switchBypass_state^(0+128),w
 10782  1411  0020               	movlb	0	; select bank0
 10783  1412  00B0               	movwf	??_setSwitchBypassState
 10784  1413  01B1               	clrf	??_setSwitchBypassState+1
 10785  1414  082F               	movf	setSwitchBypassState@f_state+1,w
 10786  1415  0631               	xorwf	??_setSwitchBypassState+1,w
 10787  1416  1D03               	skipz
 10788  1417  2C1A               	goto	u2515
 10789  1418  082E               	movf	setSwitchBypassState@f_state,w
 10790  1419  0630               	xorwf	??_setSwitchBypassState,w
 10791  141A                     u2515:	
 10792  141A  1903               	btfsc	3,2
 10793  141B  0008               	return
 10794                           
 10795                           ;SwitchBypass.c: 136: switchBypass_state = f_state;
 10796  141C  082E               	movf	setSwitchBypassState@f_state,w
 10797  141D  00B0               	movwf	??_setSwitchBypassState
 10798  141E  0830               	movf	??_setSwitchBypassState,w
 10799  141F  0021               	movlb	1	; select bank1
 10800  1420  00EE               	movwf	_switchBypass_state^(0+128)
 10801                           
 10802                           ;SwitchBypass.c: 137: LATBbits.LATB2 = f_state;
 10803  1421  0020               	movlb	0	; select bank0
 10804  1422  0C2E               	rrf	setSwitchBypassState@f_state,w
 10805  1423  0022               	movlb	2	; select bank2
 10806  1424  1C03               	skipc
 10807  1425  110D               	bcf	13,2	;volatile
 10808  1426  1803               	skipnc
 10809  1427  150D               	bsf	13,2	;volatile
 10810                           
 10811                           ;SwitchBypass.c: 138: LATBbits.LATB3 = 0;
 10812  1428  118D               	bcf	13,3	;volatile
 10813                           
 10814                           ;SwitchBypass.c: 139: LATGbits.LATG2 = f_state;
 10815  1429  0020               	movlb	0	; select bank0
 10816  142A  0C2E               	rrf	setSwitchBypassState@f_state,w
 10817  142B  0027               	movlb	7	; select bank7
 10818  142C  1C03               	skipc
 10819  142D  110D               	bcf	13,2	;volatile
 10820  142E  1803               	skipnc
 10821  142F  150D               	bsf	13,2	;volatile
 10822                           
 10823                           ;SwitchBypass.c: 140: LATGbits.LATG1 = !f_state;
 10824  1430  0020               	movlb	0	; select bank0
 10825  1431  082E               	movf	setSwitchBypassState@f_state,w
 10826  1432  042F               	iorwf	setSwitchBypassState@f_state+1,w
 10827  1433  1D03               	btfss	3,2
 10828  1434  2C38               	goto	u2520
 10829  1435  0027               	movlb	7	; select bank7
 10830  1436  148D               	bsf	13,1	;volatile
 10831  1437  2C3A               	goto	l3305
 10832  1438                     u2520:	
 10833  1438  0027               	movlb	7	; select bank7
 10834  1439  108D               	bcf	13,1	;volatile
 10835  143A                     l3305:	
 10836                           
 10837                           ;SwitchBypass.c: 142: wait_ms(20);
 10838  143A  3014               	movlw	20
 10839  143B  0020               	movlb	0	; select bank0
 10840  143C  00AC               	movwf	wait_ms@time
 10841  143D  3000               	movlw	0
 10842  143E  00AD               	movwf	wait_ms@time+1
 10843  143F  3190  20C7  3194   	fcall	_wait_ms
 10844                           
 10845                           ;SwitchBypass.c: 144: LATGbits.LATG2 = 0;
 10846  1442  0027               	movlb	7	; select bank7
 10847  1443  110D               	bcf	13,2	;volatile
 10848                           
 10849                           ;SwitchBypass.c: 145: LATGbits.LATG1 = 0;
 10850  1444  108D               	bcf	13,1	;volatile
 10851                           
 10852                           ;SwitchBypass.c: 147: updateSwitchBypassState(switchBypass_state);
 10853  1445  0021               	movlb	1	; select bank1
 10854  1446  086E               	movf	_switchBypass_state^(0+128),w
 10855  1447  0020               	movlb	0	; select bank0
 10856  1448  00B0               	movwf	??_setSwitchBypassState
 10857  1449  01B1               	clrf	??_setSwitchBypassState+1
 10858  144A  0830               	movf	??_setSwitchBypassState,w
 10859  144B  00A0               	movwf	updateSwitchBypassState@state
 10860  144C  0831               	movf	??_setSwitchBypassState+1,w
 10861  144D  00A1               	movwf	updateSwitchBypassState@state+1
 10862  144E  3180  2002  3194   	fcall	_updateSwitchBypassState
 10863                           
 10864                           ;SwitchBypass.c: 148: wait_ms(20);
 10865  1451  3014               	movlw	20
 10866  1452  0020               	movlb	0	; select bank0
 10867  1453  00AC               	movwf	wait_ms@time
 10868  1454  3000               	movlw	0
 10869  1455  00AD               	movwf	wait_ms@time+1
 10870  1456  3190  20C7         	fcall	_wait_ms
 10871  1458  0008               	return
 10872  1459                     __end_of_setSwitchBypassState:	
 10873                           
 10874                           	psect	text27
 10875  10C7                     __ptext27:	
 10876 ;; *************** function _wait_ms *****************
 10877 ;; Defined at:
 10878 ;;		line 23 in file "system.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;  time            2   12[BANK0 ] unsigned int 
 10881 ;; Auto vars:     Size  Location     Type
 10882 ;;		None
 10883 ;; Return value:  Size  Location     Type
 10884 ;;                  1    wreg      void 
 10885 ;; Registers used:
 10886 ;;		wreg, status,2, status,0, pclath, cstack
 10887 ;; Tracked objects:
 10888 ;;		On entry : 0/0
 10889 ;;		On exit  : 0/0
 10890 ;;		Unchanged: 0/0
 10891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10892 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10895 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10896 ;;Total ram usage:        2 bytes
 10897 ;; Hardware stack levels used:    1
 10898 ;; Hardware stack levels required when called:    3
 10899 ;; This function calls:
 10900 ;;		___lmul
 10901 ;; This function is called by:
 10902 ;;		_star_tactiles
 10903 ;;		_solidring_tactiles
 10904 ;;		_read_bottom_tactile
 10905 ;;		_read_top_tactile
 10906 ;;		_setSwitchBypassState
 10907 ;;		_setFeedbackState
 10908 ;;		_setDoublePressState
 10909 ;;		_showError_Alternating
 10910 ;;		_show_error
 10911 ;;		_show_cancel
 10912 ;;		_ring_tactiles
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           
 10917                           ;psect for function _wait_ms
 10918  10C7                     _wait_ms:	
 10919                           
 10920                           ;system.c: 25: static long timel = 0;
 10921                           ;system.c: 26: timel = time * 1000l;
 10922                           
 10923                           ;incstack = 0
 10924                           ; Regs used in _wait_ms: [wreg+status,2+status,0+pclath+cstack]
 10925  10C7  0020               	movlb	0	; select bank0
 10926  10C8  082C               	movf	wait_ms@time,w
 10927  10C9  00A0               	movwf	___lmul@multiplier
 10928  10CA  082D               	movf	wait_ms@time+1,w
 10929  10CB  00A1               	movwf	___lmul@multiplier+1
 10930  10CC  01A2               	clrf	___lmul@multiplier+2
 10931  10CD  01A3               	clrf	___lmul@multiplier+3
 10932  10CE  3000               	movlw	0
 10933  10CF  00A7               	movwf	___lmul@multiplicand+3
 10934  10D0  3000               	movlw	0
 10935  10D1  00A6               	movwf	___lmul@multiplicand+2
 10936  10D2  3003               	movlw	3
 10937  10D3  00A5               	movwf	___lmul@multiplicand+1
 10938  10D4  30E8               	movlw	232
 10939  10D5  00A4               	movwf	___lmul@multiplicand
 10940  10D6  3190  2097  3190   	fcall	___lmul
 10941  10D9  0020               	movlb	0	; select bank0
 10942  10DA  0823               	movf	?___lmul+3,w
 10943  10DB  0022               	movlb	2	; select bank2
 10944  10DC  00AF               	movwf	(wait_ms@timel+3)^(0+256)
 10945  10DD  0020               	movlb	0	; select bank0
 10946  10DE  0822               	movf	?___lmul+2,w
 10947  10DF  0022               	movlb	2	; select bank2
 10948  10E0  00AE               	movwf	(wait_ms@timel+2)^(0+256)
 10949  10E1  0020               	movlb	0	; select bank0
 10950  10E2  0821               	movf	?___lmul+1,w
 10951  10E3  0022               	movlb	2	; select bank2
 10952  10E4  00AD               	movwf	(wait_ms@timel+1)^(0+256)
 10953  10E5  0020               	movlb	0	; select bank0
 10954  10E6  0820               	movf	?___lmul,w
 10955  10E7  0022               	movlb	2	; select bank2
 10956  10E8  00AC               	movwf	wait_ms@timel^(0+256)
 10957  10E9                     l321:	
 10958                           ;system.c: 27: for( ; timel; timel--);
 10959                           
 10960  10E9  082F               	movf	(wait_ms@timel+3)^(0+256),w
 10961  10EA  042E               	iorwf	(wait_ms@timel+2)^(0+256),w
 10962  10EB  042D               	iorwf	(wait_ms@timel+1)^(0+256),w
 10963  10EC  042C               	iorwf	wait_ms@timel^(0+256),w
 10964  10ED  1903               	btfsc	3,2
 10965  10EE  0008               	return
 10966  10EF  30FF               	movlw	255
 10967  10F0  07AC               	addwf	wait_ms@timel^(0+256),f
 10968  10F1  30FF               	movlw	255
 10969  10F2  3DAD               	addwfc	(wait_ms@timel+1)^(0+256),f
 10970  10F3  30FF               	movlw	255
 10971  10F4  3DAE               	addwfc	(wait_ms@timel+2)^(0+256),f
 10972  10F5  30FF               	movlw	255
 10973  10F6  3DAF               	addwfc	(wait_ms@timel+3)^(0+256),f
 10974  10F7  28E9               	goto	l321
 10975  10F8                     __end_of_wait_ms:	
 10976                           
 10977                           	psect	text28
 10978  1097                     __ptext28:	
 10979 ;; *************** function ___lmul *****************
 10980 ;; Defined at:
 10981 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
 10982 ;; Parameters:    Size  Location     Type
 10983 ;;  multiplier      4    0[BANK0 ] unsigned long 
 10984 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;  product         4    8[BANK0 ] unsigned long 
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  4    0[BANK0 ] unsigned long 
 10989 ;; Registers used:
 10990 ;;		wreg, status,2, status,0
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10996 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10997 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10999 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11000 ;;Total ram usage:       12 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    2
 11003 ;; This function calls:
 11004 ;;		Nothing
 11005 ;; This function is called by:
 11006 ;;		_wait_ms
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           
 11011                           ;psect for function ___lmul
 11012  1097                     ___lmul:	
 11013                           
 11014                           ;incstack = 0
 11015                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11016  1097  3000               	movlw	0
 11017  1098  0020               	movlb	0	; select bank0
 11018  1099  00AB               	movwf	___lmul@product+3
 11019  109A  3000               	movlw	0
 11020  109B  00AA               	movwf	___lmul@product+2
 11021  109C  3000               	movlw	0
 11022  109D  00A9               	movwf	___lmul@product+1
 11023  109E  3000               	movlw	0
 11024  109F  00A8               	movwf	___lmul@product
 11025  10A0                     l3105:	
 11026  10A0  1C20               	btfss	___lmul@multiplier,0
 11027  10A1  28AA               	goto	l3109
 11028  10A2  0824               	movf	___lmul@multiplicand,w
 11029  10A3  07A8               	addwf	___lmul@product,f
 11030  10A4  0825               	movf	___lmul@multiplicand+1,w
 11031  10A5  3DA9               	addwfc	___lmul@product+1,f
 11032  10A6  0826               	movf	___lmul@multiplicand+2,w
 11033  10A7  3DAA               	addwfc	___lmul@product+2,f
 11034  10A8  0827               	movf	___lmul@multiplicand+3,w
 11035  10A9  3DAB               	addwfc	___lmul@product+3,f
 11036  10AA                     l3109:	
 11037  10AA  3001               	movlw	1
 11038  10AB                     u2305:	
 11039  10AB  35A4               	lslf	___lmul@multiplicand,f
 11040  10AC  0DA5               	rlf	___lmul@multiplicand+1,f
 11041  10AD  0DA6               	rlf	___lmul@multiplicand+2,f
 11042  10AE  0DA7               	rlf	___lmul@multiplicand+3,f
 11043  10AF  0B89               	decfsz	9,f
 11044  10B0  28AB               	goto	u2305
 11045  10B1  3001               	movlw	1
 11046  10B2                     u2315:	
 11047  10B2  36A3               	lsrf	___lmul@multiplier+3,f
 11048  10B3  0CA2               	rrf	___lmul@multiplier+2,f
 11049  10B4  0CA1               	rrf	___lmul@multiplier+1,f
 11050  10B5  0CA0               	rrf	___lmul@multiplier,f
 11051  10B6  0B89               	decfsz	9,f
 11052  10B7  28B2               	goto	u2315
 11053  10B8  0823               	movf	___lmul@multiplier+3,w
 11054  10B9  0422               	iorwf	___lmul@multiplier+2,w
 11055  10BA  0421               	iorwf	___lmul@multiplier+1,w
 11056  10BB  0420               	iorwf	___lmul@multiplier,w
 11057  10BC  1D03               	skipz
 11058  10BD  28A0               	goto	l3105
 11059  10BE  082B               	movf	___lmul@product+3,w
 11060  10BF  00A3               	movwf	?___lmul+3
 11061  10C0  082A               	movf	___lmul@product+2,w
 11062  10C1  00A2               	movwf	?___lmul+2
 11063  10C2  0829               	movf	___lmul@product+1,w
 11064  10C3  00A1               	movwf	?___lmul+1
 11065  10C4  0828               	movf	___lmul@product,w
 11066  10C5  00A0               	movwf	?___lmul
 11067  10C6  0008               	return
 11068  10C7                     __end_of___lmul:	
 11069                           
 11070                           	psect	text29
 11071  0002                     __ptext29:	
 11072 ;; *************** function _updateSwitchBypassState *****************
 11073 ;; Defined at:
 11074 ;;		line 96 in file "state_manager.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;  state           2    0[BANK0 ] int 
 11077 ;; Auto vars:     Size  Location     Type
 11078 ;;		None
 11079 ;; Return value:  Size  Location     Type
 11080 ;;                  1    wreg      void 
 11081 ;; Registers used:
 11082 ;;		None
 11083 ;; Tracked objects:
 11084 ;;		On entry : 0/0
 11085 ;;		On exit  : 0/0
 11086 ;;		Unchanged: 0/0
 11087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11088 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11091 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11092 ;;Total ram usage:        2 bytes
 11093 ;; Hardware stack levels used:    1
 11094 ;; Hardware stack levels required when called:    2
 11095 ;; This function calls:
 11096 ;;		Nothing
 11097 ;; This function is called by:
 11098 ;;		_setSwitchBypassState
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           
 11103                           ;psect for function _updateSwitchBypassState
 11104  0002                     _updateSwitchBypassState:	
 11105                           
 11106                           ;incstack = 0
 11107                           ; Regs used in _updateSwitchBypassState: []
 11108  0002  0008               	return
 11109  0003                     __end_of_updateSwitchBypassState:	
 11110                           
 11111                           	psect	text30
 11112  1EA7                     __ptext30:	
 11113 ;; *************** function _getSwitchBypassState *****************
 11114 ;; Defined at:
 11115 ;;		line 103 in file "state_manager.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;		None
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  2    0[BANK0 ] int 
 11122 ;; Registers used:
 11123 ;;		status,2
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11133 ;;Total ram usage:        2 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; Hardware stack levels required when called:    2
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		_initSwitchBypass
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           
 11144                           ;psect for function _getSwitchBypassState
 11145  1EA7                     _getSwitchBypassState:	
 11146                           
 11147                           ;state_manager.c: 108: return 0;
 11148                           
 11149                           ;incstack = 0
 11150                           ; Regs used in _getSwitchBypassState: [status,2]
 11151  1EA7  0020               	movlb	0	; select bank0
 11152  1EA8  01A0               	clrf	?_getSwitchBypassState
 11153  1EA9  01A1               	clrf	?_getSwitchBypassState+1
 11154  1EAA  0008               	return
 11155  1EAB                     __end_of_getSwitchBypassState:	
 11156                           
 11157                           	psect	text31
 11158  1F2B                     __ptext31:	
 11159 ;; *************** function _adc_convert *****************
 11160 ;; Defined at:
 11161 ;;		line 110 in file "user.c"
 11162 ;; Parameters:    Size  Location     Type
 11163 ;;  channel         1    wreg     unsigned char 
 11164 ;; Auto vars:     Size  Location     Type
 11165 ;;  channel         1    3[BANK0 ] unsigned char 
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  2    0[BANK0 ] unsigned int 
 11168 ;; Registers used:
 11169 ;;		wreg, status,2, status,0
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 0/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11175 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11177 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11178 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11179 ;;Total ram usage:        4 bytes
 11180 ;; Hardware stack levels used:    1
 11181 ;; Hardware stack levels required when called:    2
 11182 ;; This function calls:
 11183 ;;		Nothing
 11184 ;; This function is called by:
 11185 ;;		_main
 11186 ;; This function uses a non-reentrant model
 11187 ;;
 11188                           
 11189                           
 11190                           ;psect for function _adc_convert
 11191  1F2B                     _adc_convert:	
 11192                           
 11193                           ;incstack = 0
 11194                           ; Regs used in _adc_convert: [wreg+status,2+status,0]
 11195                           ;adc_convert@channel stored from wreg
 11196  1F2B  0020               	movlb	0	; select bank0
 11197  1F2C  00A3               	movwf	adc_convert@channel
 11198                           
 11199                           ;user.c: 111: ADCON0bits.CHS = channel;
 11200  1F2D  0823               	movf	adc_convert@channel,w
 11201  1F2E  00A2               	movwf	??_adc_convert
 11202  1F2F  0DA2               	rlf	??_adc_convert,f
 11203  1F30  0DA2               	rlf	??_adc_convert,f
 11204  1F31  0021               	movlb	1	; select bank1
 11205  1F32  081D               	movf	29,w	;volatile
 11206  1F33  0020               	movlb	0	; select bank0
 11207  1F34  0622               	xorwf	??_adc_convert,w
 11208  1F35  3983               	andlw	-125
 11209  1F36  0622               	xorwf	??_adc_convert,w
 11210  1F37  0021               	movlb	1	; select bank1
 11211  1F38  009D               	movwf	29	;volatile
 11212                           
 11213                           ;user.c: 112: ADCON0bits.GO = 0b1;
 11214  1F39  149D               	bsf	29,1	;volatile
 11215  1F3A                     l492:	
 11216                           ;user.c: 113: while (ADCON0bits.GO_nDONE);
 11217                           
 11218  1F3A  189D               	btfsc	29,1	;volatile
 11219  1F3B  2F3A               	goto	l492
 11220                           
 11221                           ;user.c: 114: return (ADRESH << 8) | ADRESL;
 11222  1F3C  081C               	movf	28,w	;volatile
 11223  1F3D  0020               	movlb	0	; select bank0
 11224  1F3E  00A1               	movwf	?_adc_convert+1
 11225  1F3F  0021               	movlb	1	; select bank1
 11226  1F40  081B               	movf	27,w	;volatile
 11227  1F41  0020               	movlb	0	; select bank0
 11228  1F42  00A0               	movwf	?_adc_convert
 11229  1F43  0008               	return
 11230  1F44                     __end_of_adc_convert:	
 11231                           
 11232                           	psect	text32
 11233  1549                     __ptext32:	
 11234 ;; *************** function ___awdiv *****************
 11235 ;; Defined at:
 11236 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;  divisor         2    0[BANK0 ] int 
 11239 ;;  dividend        2    2[BANK0 ] int 
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;  quotient        2    7[BANK0 ] int 
 11242 ;;  sign            1    6[BANK0 ] unsigned char 
 11243 ;;  counter         1    5[BANK0 ] unsigned char 
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  2    0[BANK0 ] int 
 11246 ;; Registers used:
 11247 ;;		wreg, status,2, status,0
 11248 ;; Tracked objects:
 11249 ;;		On entry : 0/0
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11253 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11254 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11255 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11256 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11257 ;;Total ram usage:        9 bytes
 11258 ;; Hardware stack levels used:    1
 11259 ;; Hardware stack levels required when called:    2
 11260 ;; This function calls:
 11261 ;;		Nothing
 11262 ;; This function is called by:
 11263 ;;		_main
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           
 11268                           ;psect for function ___awdiv
 11269  1549                     ___awdiv:	
 11270                           
 11271                           ;incstack = 0
 11272                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11273  1549  0020               	movlb	0	; select bank0
 11274  154A  01A6               	clrf	___awdiv@sign
 11275  154B  1FA1               	btfss	___awdiv@divisor+1,7
 11276  154C  2D54               	goto	l3999
 11277  154D  09A0               	comf	___awdiv@divisor,f
 11278  154E  09A1               	comf	___awdiv@divisor+1,f
 11279  154F  0AA0               	incf	___awdiv@divisor,f
 11280  1550  1903               	skipnz
 11281  1551  0AA1               	incf	___awdiv@divisor+1,f
 11282  1552  01A6               	clrf	___awdiv@sign
 11283  1553  0AA6               	incf	___awdiv@sign,f
 11284  1554                     l3999:	
 11285  1554  1FA3               	btfss	___awdiv@dividend+1,7
 11286  1555  2D5F               	goto	l4005
 11287  1556  09A2               	comf	___awdiv@dividend,f
 11288  1557  09A3               	comf	___awdiv@dividend+1,f
 11289  1558  0AA2               	incf	___awdiv@dividend,f
 11290  1559  1903               	skipnz
 11291  155A  0AA3               	incf	___awdiv@dividend+1,f
 11292  155B  3001               	movlw	1
 11293  155C  00A4               	movwf	??___awdiv
 11294  155D  0824               	movf	??___awdiv,w
 11295  155E  06A6               	xorwf	___awdiv@sign,f
 11296  155F                     l4005:	
 11297  155F  01A7               	clrf	___awdiv@quotient
 11298  1560  01A8               	clrf	___awdiv@quotient+1
 11299  1561  0820               	movf	___awdiv@divisor,w
 11300  1562  0421               	iorwf	___awdiv@divisor+1,w
 11301  1563  1903               	btfsc	3,2
 11302  1564  2D8E               	goto	l4027
 11303  1565  01A5               	clrf	___awdiv@counter
 11304  1566  0AA5               	incf	___awdiv@counter,f
 11305  1567                     l4015:	
 11306  1567  1BA1               	btfsc	___awdiv@divisor+1,7
 11307  1568  2D73               	goto	l4017
 11308  1569  3001               	movlw	1
 11309  156A                     u3945:	
 11310  156A  35A0               	lslf	___awdiv@divisor,f
 11311  156B  0DA1               	rlf	___awdiv@divisor+1,f
 11312  156C  0B89               	decfsz	9,f
 11313  156D  2D6A               	goto	u3945
 11314  156E  3001               	movlw	1
 11315  156F  00A4               	movwf	??___awdiv
 11316  1570  0824               	movf	??___awdiv,w
 11317  1571  07A5               	addwf	___awdiv@counter,f
 11318  1572  2D67               	goto	l4015
 11319  1573                     l4017:	
 11320  1573  3001               	movlw	1
 11321  1574                     u3965:	
 11322  1574  35A7               	lslf	___awdiv@quotient,f
 11323  1575  0DA8               	rlf	___awdiv@quotient+1,f
 11324  1576  0B89               	decfsz	9,f
 11325  1577  2D74               	goto	u3965
 11326  1578  0821               	movf	___awdiv@divisor+1,w
 11327  1579  0223               	subwf	___awdiv@dividend+1,w
 11328  157A  1D03               	skipz
 11329  157B  2D7E               	goto	u3975
 11330  157C  0820               	movf	___awdiv@divisor,w
 11331  157D  0222               	subwf	___awdiv@dividend,w
 11332  157E                     u3975:	
 11333  157E  1C03               	skipc
 11334  157F  2D85               	goto	l4023
 11335  1580  0820               	movf	___awdiv@divisor,w
 11336  1581  02A2               	subwf	___awdiv@dividend,f
 11337  1582  0821               	movf	___awdiv@divisor+1,w
 11338  1583  3BA3               	subwfb	___awdiv@dividend+1,f
 11339  1584  1427               	bsf	___awdiv@quotient,0
 11340  1585                     l4023:	
 11341  1585  3001               	movlw	1
 11342  1586                     u3985:	
 11343  1586  36A1               	lsrf	___awdiv@divisor+1,f
 11344  1587  0CA0               	rrf	___awdiv@divisor,f
 11345  1588  0B89               	decfsz	9,f
 11346  1589  2D86               	goto	u3985
 11347  158A  3001               	movlw	1
 11348  158B  02A5               	subwf	___awdiv@counter,f
 11349  158C  1D03               	btfss	3,2
 11350  158D  2D73               	goto	l4017
 11351  158E                     l4027:	
 11352  158E  0826               	movf	___awdiv@sign,w
 11353  158F  1903               	btfsc	3,2
 11354  1590  2D96               	goto	l4031
 11355  1591  09A7               	comf	___awdiv@quotient,f
 11356  1592  09A8               	comf	___awdiv@quotient+1,f
 11357  1593  0AA7               	incf	___awdiv@quotient,f
 11358  1594  1903               	skipnz
 11359  1595  0AA8               	incf	___awdiv@quotient+1,f
 11360  1596                     l4031:	
 11361  1596  0828               	movf	___awdiv@quotient+1,w
 11362  1597  00A1               	movwf	?___awdiv+1
 11363  1598  0827               	movf	___awdiv@quotient,w
 11364  1599  00A0               	movwf	?___awdiv
 11365  159A  0008               	return
 11366  159B                     __end_of___awdiv:	
 11367                           
 11368                           	psect	text33
 11369  1286                     __ptext33:	
 11370 ;; *************** function ___altoft *****************
 11371 ;; Defined at:
 11372 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;  c               4    8[BANK0 ] long 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;  sign            1   15[BANK0 ] unsigned char 
 11377 ;;  exp             1   14[BANK0 ] unsigned char 
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  3    8[BANK0 ] float 
 11380 ;; Registers used:
 11381 ;;		wreg, status,2, status,0, pclath, cstack
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11389 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11390 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11391 ;;Total ram usage:        8 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    3
 11394 ;; This function calls:
 11395 ;;		___ftpack
 11396 ;; This function is called by:
 11397 ;;		_main
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           
 11401                           
 11402                           ;psect for function ___altoft
 11403  1286                     ___altoft:	
 11404                           
 11405                           ;incstack = 0
 11406                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
 11407  1286  0020               	movlb	0	; select bank0
 11408  1287  01AF               	clrf	___altoft@sign
 11409  1288  308E               	movlw	142
 11410  1289  00AC               	movwf	??___altoft
 11411  128A  082C               	movf	??___altoft,w
 11412  128B  00AE               	movwf	___altoft@exp
 11413  128C  1FAB               	btfss	___altoft@c+3,7
 11414  128D  2A9B               	goto	l3985
 11415  128E  09A8               	comf	___altoft@c,f
 11416  128F  09A9               	comf	___altoft@c+1,f
 11417  1290  09AA               	comf	___altoft@c+2,f
 11418  1291  09AB               	comf	___altoft@c+3,f
 11419  1292  0AA8               	incf	___altoft@c,f
 11420  1293  1903               	skipnz
 11421  1294  0AA9               	incf	___altoft@c+1,f
 11422  1295  1903               	skipnz
 11423  1296  0AAA               	incf	___altoft@c+2,f
 11424  1297  1903               	skipnz
 11425  1298  0AAB               	incf	___altoft@c+3,f
 11426  1299  01AF               	clrf	___altoft@sign
 11427  129A  0AAF               	incf	___altoft@sign,f
 11428  129B                     l3985:	
 11429  129B  30FF               	movlw	255
 11430  129C  052B               	andwf	___altoft@c+3,w
 11431  129D  1903               	btfsc	3,2
 11432  129E  2AAB               	goto	l3987
 11433  129F  3001               	movlw	1
 11434  12A0                     u3895:	
 11435  12A0  36AB               	lsrf	___altoft@c+3,f
 11436  12A1  0CAA               	rrf	___altoft@c+2,f
 11437  12A2  0CA9               	rrf	___altoft@c+1,f
 11438  12A3  0CA8               	rrf	___altoft@c,f
 11439  12A4  0B89               	decfsz	9,f
 11440  12A5  2AA0               	goto	u3895
 11441  12A6  3001               	movlw	1
 11442  12A7  00AC               	movwf	??___altoft
 11443  12A8  082C               	movf	??___altoft,w
 11444  12A9  07AE               	addwf	___altoft@exp,f
 11445  12AA  2A9B               	goto	l3985
 11446  12AB                     l3987:	
 11447  12AB  0828               	movf	___altoft@c,w
 11448  12AC  00A0               	movwf	___ftpack@arg
 11449  12AD  0829               	movf	___altoft@c+1,w
 11450  12AE  00A1               	movwf	___ftpack@arg+1
 11451  12AF  082A               	movf	___altoft@c+2,w
 11452  12B0  00A2               	movwf	___ftpack@arg+2
 11453  12B1  082E               	movf	___altoft@exp,w
 11454  12B2  00AC               	movwf	??___altoft
 11455  12B3  082C               	movf	??___altoft,w
 11456  12B4  00A3               	movwf	___ftpack@exp
 11457  12B5  082F               	movf	___altoft@sign,w
 11458  12B6  00AD               	movwf	??___altoft+1
 11459  12B7  082D               	movf	??___altoft+1,w
 11460  12B8  00A4               	movwf	___ftpack@sign
 11461  12B9  3195  25EF         	fcall	___ftpack
 11462  12BB  0020               	movlb	0	; select bank0
 11463  12BC  0820               	movf	?___ftpack,w
 11464  12BD  00A8               	movwf	?___altoft
 11465  12BE  0821               	movf	?___ftpack+1,w
 11466  12BF  00A9               	movwf	?___altoft+1
 11467  12C0  0822               	movf	?___ftpack+2,w
 11468  12C1  00AA               	movwf	?___altoft+2
 11469  12C2  0008               	return
 11470  12C3                     __end_of___altoft:	
 11471                           
 11472                           	psect	text34
 11473  15EF                     __ptext34:	
 11474 ;; *************** function ___ftpack *****************
 11475 ;; Defined at:
 11476 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;  arg             3    0[BANK0 ] unsigned um
 11479 ;;  exp             1    3[BANK0 ] unsigned char 
 11480 ;;  sign            1    4[BANK0 ] unsigned char 
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;		None
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  3    0[BANK0 ] float 
 11485 ;; Registers used:
 11486 ;;		wreg, status,2, status,0
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11492 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11494 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11495 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11496 ;;Total ram usage:        8 bytes
 11497 ;; Hardware stack levels used:    1
 11498 ;; Hardware stack levels required when called:    2
 11499 ;; This function calls:
 11500 ;;		Nothing
 11501 ;; This function is called by:
 11502 ;;		___altoft
 11503 ;;		___awtoft
 11504 ;;		___ftadd
 11505 ;;		___ftdiv
 11506 ;;		___ftmul
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           
 11511                           ;psect for function ___ftpack
 11512  15EF                     ___ftpack:	
 11513                           
 11514                           ;incstack = 0
 11515                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11516  15EF  0020               	movlb	0	; select bank0
 11517  15F0  0823               	movf	___ftpack@exp,w
 11518  15F1  1903               	btfsc	3,2
 11519  15F2  2DF8               	goto	l3163
 11520  15F3  0822               	movf	___ftpack@arg+2,w
 11521  15F4  0421               	iorwf	___ftpack@arg+1,w
 11522  15F5  0420               	iorwf	___ftpack@arg,w
 11523  15F6  1D03               	skipz
 11524  15F7  2E09               	goto	l3169
 11525  15F8                     l3163:	
 11526  15F8  3000               	movlw	0
 11527  15F9  00A0               	movwf	?___ftpack
 11528  15FA  3000               	movlw	0
 11529  15FB  00A1               	movwf	?___ftpack+1
 11530  15FC  3000               	movlw	0
 11531  15FD  00A2               	movwf	?___ftpack+2
 11532  15FE  0008               	return
 11533  15FF                     l3167:	
 11534  15FF  3001               	movlw	1
 11535  1600  00A5               	movwf	??___ftpack
 11536  1601  0825               	movf	??___ftpack,w
 11537  1602  07A3               	addwf	___ftpack@exp,f
 11538  1603  3001               	movlw	1
 11539  1604                     u2365:	
 11540  1604  36A2               	lsrf	___ftpack@arg+2,f
 11541  1605  0CA1               	rrf	___ftpack@arg+1,f
 11542  1606  0CA0               	rrf	___ftpack@arg,f
 11543  1607  0B89               	decfsz	9,f
 11544  1608  2E04               	goto	u2365
 11545  1609                     l3169:	
 11546  1609  30FE               	movlw	254
 11547  160A  0522               	andwf	___ftpack@arg+2,w
 11548  160B  1903               	btfsc	3,2
 11549  160C  2E22               	goto	l1366
 11550  160D  2DFF               	goto	l3167
 11551  160E                     l3171:	
 11552  160E  3001               	movlw	1
 11553  160F  00A5               	movwf	??___ftpack
 11554  1610  0825               	movf	??___ftpack,w
 11555  1611  07A3               	addwf	___ftpack@exp,f
 11556  1612  3001               	movlw	1
 11557  1613  07A0               	addwf	___ftpack@arg,f
 11558  1614  3000               	movlw	0
 11559  1615  1803               	skipnc
 11560  1616  3001               	movlw	1
 11561  1617  07A1               	addwf	___ftpack@arg+1,f
 11562  1618  3000               	movlw	0
 11563  1619  1803               	skipnc
 11564  161A  3001               	movlw	1
 11565  161B  07A2               	addwf	___ftpack@arg+2,f
 11566  161C  3001               	movlw	1
 11567  161D                     u2385:	
 11568  161D  36A2               	lsrf	___ftpack@arg+2,f
 11569  161E  0CA1               	rrf	___ftpack@arg+1,f
 11570  161F  0CA0               	rrf	___ftpack@arg,f
 11571  1620  0B89               	decfsz	9,f
 11572  1621  2E1D               	goto	u2385
 11573  1622                     l1366:	
 11574  1622  30FF               	movlw	255
 11575  1623  0522               	andwf	___ftpack@arg+2,w
 11576  1624  1903               	btfsc	3,2
 11577  1625  2E2F               	goto	l3179
 11578  1626  2E0E               	goto	l3171
 11579  1627                     l3177:	
 11580  1627  3001               	movlw	1
 11581  1628  02A3               	subwf	___ftpack@exp,f
 11582  1629  3001               	movlw	1
 11583  162A                     u2405:	
 11584  162A  35A0               	lslf	___ftpack@arg,f
 11585  162B  0DA1               	rlf	___ftpack@arg+1,f
 11586  162C  0DA2               	rlf	___ftpack@arg+2,f
 11587  162D  0B89               	decfsz	9,f
 11588  162E  2E2A               	goto	u2405
 11589  162F                     l3179:	
 11590  162F  1BA1               	btfsc	___ftpack@arg+1,7
 11591  1630  2E35               	goto	l1373
 11592  1631  3002               	movlw	2
 11593  1632  0223               	subwf	___ftpack@exp,w
 11594  1633  1803               	skipnc
 11595  1634  2E27               	goto	l3177
 11596  1635                     l1373:	
 11597  1635  1823               	btfsc	___ftpack@exp,0
 11598  1636  2E3D               	goto	l1374
 11599  1637  30FF               	movlw	255
 11600  1638  05A0               	andwf	___ftpack@arg,f
 11601  1639  307F               	movlw	127
 11602  163A  05A1               	andwf	___ftpack@arg+1,f
 11603  163B  30FF               	movlw	255
 11604  163C  05A2               	andwf	___ftpack@arg+2,f
 11605  163D                     l1374:	
 11606  163D  1003               	clrc
 11607  163E  0CA3               	rrf	___ftpack@exp,f
 11608  163F  0823               	movf	___ftpack@exp,w
 11609  1640  00A5               	movwf	??___ftpack
 11610  1641  01A6               	clrf	??___ftpack+1
 11611  1642  01A7               	clrf	??___ftpack+2
 11612  1643  3010               	movlw	16
 11613  1644                     u2445:	
 11614  1644  35A5               	lslf	??___ftpack,f
 11615  1645  0DA6               	rlf	??___ftpack+1,f
 11616  1646  0DA7               	rlf	??___ftpack+2,f
 11617  1647  0B89               	decfsz	9,f
 11618  1648  2E44               	goto	u2445
 11619  1649  0825               	movf	??___ftpack,w
 11620  164A  04A0               	iorwf	___ftpack@arg,f
 11621  164B  0826               	movf	??___ftpack+1,w
 11622  164C  04A1               	iorwf	___ftpack@arg+1,f
 11623  164D  0827               	movf	??___ftpack+2,w
 11624  164E  04A2               	iorwf	___ftpack@arg+2,f
 11625  164F  0824               	movf	___ftpack@sign,w
 11626  1650  1903               	btfsc	3,2
 11627  1651  0008               	return
 11628  1652  17A2               	bsf	___ftpack@arg+2,7
 11629  1653  0008               	return
 11630  1654                     __end_of___ftpack:	
 11631                           
 11632                           	psect	text35
 11633  1459                     __ptext35:	
 11634 ;; *************** function _ReadSavedSettings *****************
 11635 ;; Defined at:
 11636 ;;		line 181 in file "user.c"
 11637 ;; Parameters:    Size  Location     Type
 11638 ;;		None
 11639 ;; Auto vars:     Size  Location     Type
 11640 ;;		None
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  1    wreg      void 
 11643 ;; Registers used:
 11644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11654 ;;Total ram usage:        0 bytes
 11655 ;; Hardware stack levels used:    1
 11656 ;; Hardware stack levels required when called:    3
 11657 ;; This function calls:
 11658 ;;		_FLASH_ReadWord
 11659 ;;		_set_leds_bottom
 11660 ;;		_set_leds_top
 11661 ;; This function is called by:
 11662 ;;		_main
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           
 11666                           
 11667                           ;psect for function _ReadSavedSettings
 11668  1459                     _ReadSavedSettings:	
 11669                           
 11670                           ;user.c: 183: top_push_state = FLASH_ReadWord(0x1F81);
 11671                           
 11672                           ;incstack = 0
 11673                           ; Regs used in _ReadSavedSettings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11674  1459  3081               	movlw	129
 11675  145A  0020               	movlb	0	; select bank0
 11676  145B  00A0               	movwf	FLASH_ReadWord@flashAddr
 11677  145C  301F               	movlw	31
 11678  145D  00A1               	movwf	FLASH_ReadWord@flashAddr+1
 11679  145E  319F  2798  3194   	fcall	_FLASH_ReadWord
 11680  1461  0020               	movlb	0	; select bank0
 11681  1462  0821               	movf	?_FLASH_ReadWord+1,w
 11682  1463  0021               	movlb	1	; select bank1
 11683  1464  00E9               	movwf	(_top_push_state+1)^(0+128)
 11684  1465  0020               	movlb	0	; select bank0
 11685  1466  0820               	movf	?_FLASH_ReadWord,w
 11686  1467  0021               	movlb	1	; select bank1
 11687  1468  00E8               	movwf	_top_push_state^(0+128)
 11688                           
 11689                           ;user.c: 184: bottom_push_state = FLASH_ReadWord(0x1F82);
 11690  1469  3082               	movlw	130
 11691  146A  0020               	movlb	0	; select bank0
 11692  146B  00A0               	movwf	FLASH_ReadWord@flashAddr
 11693  146C  301F               	movlw	31
 11694  146D  00A1               	movwf	FLASH_ReadWord@flashAddr+1
 11695  146E  319F  2798  3194   	fcall	_FLASH_ReadWord
 11696  1471  0020               	movlb	0	; select bank0
 11697  1472  0821               	movf	?_FLASH_ReadWord+1,w
 11698  1473  0021               	movlb	1	; select bank1
 11699  1474  00E3               	movwf	(_bottom_push_state+1)^(0+128)
 11700  1475  0020               	movlb	0	; select bank0
 11701  1476  0820               	movf	?_FLASH_ReadWord,w
 11702  1477  0021               	movlb	1	; select bank1
 11703  1478  00E2               	movwf	_bottom_push_state^(0+128)
 11704                           
 11705                           ;user.c: 187: LATGbits.LATG1 = !switchBypass_state;
 11706  1479  086E               	movf	_switchBypass_state^(0+128),w
 11707  147A  1D03               	btfss	3,2
 11708  147B  2C7F               	goto	u3300
 11709  147C  0027               	movlb	7	; select bank7
 11710  147D  148D               	bsf	13,1	;volatile
 11711  147E  2C81               	goto	l3657
 11712  147F                     u3300:	
 11713  147F  0027               	movlb	7	; select bank7
 11714  1480  108D               	bcf	13,1	;volatile
 11715  1481                     l3657:	
 11716                           
 11717                           ;user.c: 188: LATGbits.LATG2 = switchBypass_state;
 11718  1481  0021               	movlb	1	; select bank1
 11719  1482  0C6E               	rrf	_switchBypass_state^(0+128),w
 11720  1483  0027               	movlb	7	; select bank7
 11721  1484  1C03               	skipc
 11722  1485  110D               	bcf	13,2	;volatile
 11723  1486  1803               	skipnc
 11724  1487  150D               	bsf	13,2	;volatile
 11725                           
 11726                           ;user.c: 189: LATBbits.LATB2 = 0;
 11727  1488  0022               	movlb	2	; select bank2
 11728  1489  110D               	bcf	13,2	;volatile
 11729                           
 11730                           ;user.c: 190: LATBbits.LATB3 = 0;
 11731  148A  118D               	bcf	13,3	;volatile
 11732                           
 11733                           ;user.c: 192: LATBbits.LATB4 = 0;
 11734  148B  120D               	bcf	13,4	;volatile
 11735                           
 11736                           ;user.c: 193: LATBbits.LATB5 = 0;
 11737  148C  128D               	bcf	13,5	;volatile
 11738                           
 11739                           ;user.c: 195: LATBbits.LATB1 = 0;
 11740  148D  108D               	bcf	13,1	;volatile
 11741                           
 11742                           ;user.c: 196: LATBbits.LATB0 = 0;
 11743  148E  100D               	bcf	13,0	;volatile
 11744                           
 11745                           ;user.c: 199: set_leds_top(top_push_state, 1);
 11746  148F  0021               	movlb	1	; select bank1
 11747  1490  0869               	movf	(_top_push_state+1)^(0+128),w
 11748  1491  0020               	movlb	0	; select bank0
 11749  1492  00A1               	movwf	set_leds_top@x+1
 11750  1493  0021               	movlb	1	; select bank1
 11751  1494  0868               	movf	_top_push_state^(0+128),w
 11752  1495  0020               	movlb	0	; select bank0
 11753  1496  00A0               	movwf	set_leds_top@x
 11754  1497  3001               	movlw	1
 11755  1498  00A2               	movwf	set_leds_top@ledState
 11756  1499  3000               	movlw	0
 11757  149A  00A3               	movwf	set_leds_top@ledState+1
 11758  149B  3195  259B  3194   	fcall	_set_leds_top
 11759                           
 11760                           ;user.c: 200: set_leds_bottom(bottom_push_state);
 11761  149E  0021               	movlb	1	; select bank1
 11762  149F  0863               	movf	(_bottom_push_state+1)^(0+128),w
 11763  14A0  0020               	movlb	0	; select bank0
 11764  14A1  00A1               	movwf	set_leds_bottom@x+1
 11765  14A2  0021               	movlb	1	; select bank1
 11766  14A3  0862               	movf	_bottom_push_state^(0+128),w
 11767  14A4  0020               	movlb	0	; select bank0
 11768  14A5  00A0               	movwf	set_leds_bottom@x
 11769  14A6  3192  224B         	fcall	_set_leds_bottom
 11770  14A8  0008               	return
 11771  14A9                     __end_of_ReadSavedSettings:	
 11772                           
 11773                           	psect	text36
 11774  159B                     __ptext36:	
 11775 ;; *************** function _set_leds_top *****************
 11776 ;; Defined at:
 11777 ;;		line 16 in file "LEDs.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;  x               2    0[BANK0 ] int 
 11780 ;;  ledState        2    2[BANK0 ] int 
 11781 ;; Auto vars:     Size  Location     Type
 11782 ;;		None
 11783 ;; Return value:  Size  Location     Type
 11784 ;;                  1    wreg      void 
 11785 ;; Registers used:
 11786 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11787 ;; Tracked objects:
 11788 ;;		On entry : 0/0
 11789 ;;		On exit  : 0/0
 11790 ;;		Unchanged: 0/0
 11791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11792 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11795 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11796 ;;Total ram usage:        4 bytes
 11797 ;; Hardware stack levels used:    1
 11798 ;; Hardware stack levels required when called:    2
 11799 ;; This function calls:
 11800 ;;		Nothing
 11801 ;; This function is called by:
 11802 ;;		_ReadSavedSettings
 11803 ;;		_star_tactiles
 11804 ;;		_solidring_tactiles
 11805 ;;		_read_top_tactile
 11806 ;;		_ring_tactiles
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810                           
 11811                           ;psect for function _set_leds_top
 11812  159B                     _set_leds_top:	
 11813                           
 11814                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 11815                           
 11816                           ;incstack = 0
 11817                           ; Regs used in _set_leds_top: [wreg-fsr0h+status,2+status,0]
 11818  159B  0027               	movlb	7	; select bank7
 11819  159C  100C               	bcf	12,0	;volatile
 11820                           
 11821                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 11822  159D  108C               	bcf	12,1	;volatile
 11823                           
 11824                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 11825  159E  110C               	bcf	12,2	;volatile
 11826                           
 11827                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 11828  159F  118C               	bcf	12,3	;volatile
 11829                           
 11830                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 11831  15A0  120C               	bcf	12,4	;volatile
 11832                           
 11833                           ;LEDs.c: 22: switch (x) {
 11834  15A1  2DD1               	goto	l3131
 11835  15A2                     l3119:	
 11836                           ;LEDs.c: 23: case 1:
 11837                           
 11838                           
 11839                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 11840  15A2  0020               	movlb	0	; select bank0
 11841  15A3  0C22               	rrf	set_leds_top@ledState,w
 11842  15A4  0027               	movlb	7	; select bank7
 11843  15A5  1C03               	skipc
 11844  15A6  100C               	bcf	12,0	;volatile
 11845  15A7  1803               	skipnc
 11846  15A8  140C               	bsf	12,0	;volatile
 11847                           
 11848                           ;LEDs.c: 25: break;
 11849  15A9  0008               	return
 11850  15AA                     l3121:	
 11851                           ;LEDs.c: 26: case 2:
 11852                           
 11853                           
 11854                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 11855  15AA  0020               	movlb	0	; select bank0
 11856  15AB  0C22               	rrf	set_leds_top@ledState,w
 11857  15AC  0027               	movlb	7	; select bank7
 11858  15AD  1C03               	skipc
 11859  15AE  108C               	bcf	12,1	;volatile
 11860  15AF  1803               	skipnc
 11861  15B0  148C               	bsf	12,1	;volatile
 11862                           
 11863                           ;LEDs.c: 28: break;
 11864  15B1  0008               	return
 11865  15B2                     l3123:	
 11866                           ;LEDs.c: 29: case 3:
 11867                           
 11868                           
 11869                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 11870  15B2  0020               	movlb	0	; select bank0
 11871  15B3  0C22               	rrf	set_leds_top@ledState,w
 11872  15B4  0027               	movlb	7	; select bank7
 11873  15B5  1C03               	skipc
 11874  15B6  110C               	bcf	12,2	;volatile
 11875  15B7  1803               	skipnc
 11876  15B8  150C               	bsf	12,2	;volatile
 11877                           
 11878                           ;LEDs.c: 31: break;
 11879  15B9  0008               	return
 11880  15BA                     l3125:	
 11881                           ;LEDs.c: 32: case 4:
 11882                           
 11883                           
 11884                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 11885  15BA  0020               	movlb	0	; select bank0
 11886  15BB  0C22               	rrf	set_leds_top@ledState,w
 11887  15BC  0027               	movlb	7	; select bank7
 11888  15BD  1C03               	skipc
 11889  15BE  118C               	bcf	12,3	;volatile
 11890  15BF  1803               	skipnc
 11891  15C0  158C               	bsf	12,3	;volatile
 11892                           
 11893                           ;LEDs.c: 34: break;
 11894  15C1  0008               	return
 11895  15C2                     l3127:	
 11896                           ;LEDs.c: 35: case 5:
 11897                           
 11898                           
 11899                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 11900  15C2  0020               	movlb	0	; select bank0
 11901  15C3  0C22               	rrf	set_leds_top@ledState,w
 11902  15C4  0027               	movlb	7	; select bank7
 11903  15C5  1C03               	skipc
 11904  15C6  120C               	bcf	12,4	;volatile
 11905  15C7  1803               	skipnc
 11906  15C8  160C               	bsf	12,4	;volatile
 11907                           
 11908                           ;LEDs.c: 39: break;
 11909                           
 11910                           ;LEDs.c: 38: case 6:
 11911                           
 11912                           ;LEDs.c: 37: break;
 11913  15C9  0008               	return
 11914  15CA                     l647:	
 11915                           ;LEDs.c: 40: case 100:
 11916                           
 11917                           
 11918                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 11919  15CA  0027               	movlb	7	; select bank7
 11920  15CB  140C               	bsf	12,0	;volatile
 11921                           
 11922                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 11923  15CC  148C               	bsf	12,1	;volatile
 11924                           
 11925                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 11926  15CD  150C               	bsf	12,2	;volatile
 11927                           
 11928                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 11929  15CE  158C               	bsf	12,3	;volatile
 11930                           
 11931                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 11932  15CF  160C               	bsf	12,4	;volatile
 11933                           
 11934                           ;LEDs.c: 47: }
 11935                           
 11936                           ;LEDs.c: 46: break;
 11937  15D0  0008               	return
 11938  15D1                     l3131:	
 11939                           
 11940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11941                           ; Switch size 1, requested type "space"
 11942                           ; Number of cases is 1, Range of values is 0 to 0
 11943                           ; switch strategies available:
 11944                           ; Name         Instructions Cycles
 11945                           ; simple_byte            4     3 (average)
 11946                           ; direct_byte            8     6 (fixed)
 11947                           ; jumptable            260     6 (fixed)
 11948                           ;	Chosen strategy is simple_byte
 11949  15D1  0020               	movlb	0	; select bank0
 11950  15D2  0821               	movf	set_leds_top@x+1,w
 11951  15D3  3A00               	xorlw	0	; case 0
 11952  15D4  1903               	skipnz
 11953  15D5  2DD7               	goto	l4533
 11954  15D6  2DEE               	goto	l648
 11955  15D7                     l4533:	
 11956                           
 11957                           ; Switch size 1, requested type "space"
 11958                           ; Number of cases is 7, Range of values is 1 to 100
 11959                           ; switch strategies available:
 11960                           ; Name         Instructions Cycles
 11961                           ; simple_byte           22    12 (average)
 11962                           ; direct_byte          209     9 (fixed)
 11963                           ; jumptable            263     9 (fixed)
 11964                           ;	Chosen strategy is simple_byte
 11965  15D7  0820               	movf	set_leds_top@x,w
 11966  15D8  3A01               	xorlw	1	; case 1
 11967  15D9  1903               	skipnz
 11968  15DA  2DA2               	goto	l3119
 11969  15DB  3A03               	xorlw	3	; case 2
 11970  15DC  1903               	skipnz
 11971  15DD  2DAA               	goto	l3121
 11972  15DE  3A01               	xorlw	1	; case 3
 11973  15DF  1903               	skipnz
 11974  15E0  2DB2               	goto	l3123
 11975  15E1  3A07               	xorlw	7	; case 4
 11976  15E2  1903               	skipnz
 11977  15E3  2DBA               	goto	l3125
 11978  15E4  3A01               	xorlw	1	; case 5
 11979  15E5  1903               	skipnz
 11980  15E6  2DC2               	goto	l3127
 11981  15E7  3A03               	xorlw	3	; case 6
 11982  15E8  1903               	skipnz
 11983  15E9  2DEE               	goto	l648
 11984  15EA  3A62               	xorlw	98	; case 100
 11985  15EB  1903               	skipnz
 11986  15EC  2DCA               	goto	l647
 11987  15ED  2DEE               	goto	l648
 11988  15EE                     l648:	
 11989  15EE  0008               	return
 11990  15EF                     __end_of_set_leds_top:	
 11991                           
 11992                           	psect	text37
 11993  124B                     __ptext37:	
 11994 ;; *************** function _set_leds_bottom *****************
 11995 ;; Defined at:
 11996 ;;		line 51 in file "LEDs.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;  x               2    0[BANK0 ] int 
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;		None
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      void 
 12003 ;; Registers used:
 12004 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12013 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12014 ;;Total ram usage:        2 bytes
 12015 ;; Hardware stack levels used:    1
 12016 ;; Hardware stack levels required when called:    2
 12017 ;; This function calls:
 12018 ;;		Nothing
 12019 ;; This function is called by:
 12020 ;;		_ReadSavedSettings
 12021 ;;		_star_tactiles
 12022 ;;		_solidring_tactiles
 12023 ;;		_read_bottom_tactile
 12024 ;;		_ring_tactiles
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           
 12029                           ;psect for function _set_leds_bottom
 12030  124B                     _set_leds_bottom:	
 12031                           
 12032                           ;LEDs.c: 52: LATDbits.LATD0 = 0;
 12033                           
 12034                           ;incstack = 0
 12035                           ; Regs used in _set_leds_bottom: [wreg-fsr0h+status,2+status,0]
 12036  124B  0022               	movlb	2	; select bank2
 12037  124C  100F               	bcf	15,0	;volatile
 12038                           
 12039                           ;LEDs.c: 53: LATDbits.LATD1 = 0;
 12040  124D  108F               	bcf	15,1	;volatile
 12041                           
 12042                           ;LEDs.c: 54: LATDbits.LATD2 = 0;
 12043  124E  110F               	bcf	15,2	;volatile
 12044                           
 12045                           ;LEDs.c: 55: LATDbits.LATD3 = 0;
 12046  124F  118F               	bcf	15,3	;volatile
 12047                           
 12048                           ;LEDs.c: 56: LATDbits.LATD4 = 0;
 12049  1250  120F               	bcf	15,4	;volatile
 12050                           
 12051                           ;LEDs.c: 57: switch (x) {
 12052  1251  2A68               	goto	l3153
 12053  1252                     l652:	
 12054                           ;LEDs.c: 58: case 1:
 12055                           
 12056                           
 12057                           ;LEDs.c: 59: LATDbits.LATD0 = 1;
 12058  1252  0022               	movlb	2	; select bank2
 12059  1253  140F               	bsf	15,0	;volatile
 12060                           
 12061                           ;LEDs.c: 60: break;
 12062  1254  0008               	return
 12063  1255                     l654:	
 12064                           ;LEDs.c: 61: case 2:
 12065                           
 12066                           
 12067                           ;LEDs.c: 62: LATDbits.LATD1 = 1;
 12068  1255  0022               	movlb	2	; select bank2
 12069  1256  148F               	bsf	15,1	;volatile
 12070                           
 12071                           ;LEDs.c: 63: break;
 12072  1257  0008               	return
 12073  1258                     l655:	
 12074                           ;LEDs.c: 64: case 3:
 12075                           
 12076                           
 12077                           ;LEDs.c: 65: LATDbits.LATD2 = 1;
 12078  1258  0022               	movlb	2	; select bank2
 12079  1259  150F               	bsf	15,2	;volatile
 12080                           
 12081                           ;LEDs.c: 66: break;
 12082  125A  0008               	return
 12083  125B                     l656:	
 12084                           ;LEDs.c: 67: case 4:
 12085                           
 12086                           
 12087                           ;LEDs.c: 68: LATDbits.LATD3 = 1;
 12088  125B  0022               	movlb	2	; select bank2
 12089  125C  158F               	bsf	15,3	;volatile
 12090                           
 12091                           ;LEDs.c: 69: break;
 12092  125D  0008               	return
 12093  125E                     l657:	
 12094                           ;LEDs.c: 70: case 5:
 12095                           
 12096                           
 12097                           ;LEDs.c: 71: LATDbits.LATD4 = 1;
 12098  125E  0022               	movlb	2	; select bank2
 12099  125F  160F               	bsf	15,4	;volatile
 12100                           
 12101                           ;LEDs.c: 74: break;
 12102                           
 12103                           ;LEDs.c: 73: case 6:
 12104                           
 12105                           ;LEDs.c: 72: break;
 12106  1260  0008               	return
 12107  1261                     l659:	
 12108                           ;LEDs.c: 75: case 100:
 12109                           
 12110                           
 12111                           ;LEDs.c: 76: LATDbits.LATD0 = 1;
 12112  1261  0022               	movlb	2	; select bank2
 12113  1262  140F               	bsf	15,0	;volatile
 12114                           
 12115                           ;LEDs.c: 77: LATDbits.LATD1 = 1;
 12116  1263  148F               	bsf	15,1	;volatile
 12117                           
 12118                           ;LEDs.c: 78: LATDbits.LATD2 = 1;
 12119  1264  150F               	bsf	15,2	;volatile
 12120                           
 12121                           ;LEDs.c: 79: LATDbits.LATD3 = 1;
 12122  1265  158F               	bsf	15,3	;volatile
 12123                           
 12124                           ;LEDs.c: 80: LATDbits.LATD4 = 1;
 12125  1266  160F               	bsf	15,4	;volatile
 12126                           
 12127                           ;LEDs.c: 82: }
 12128                           
 12129                           ;LEDs.c: 81: break;
 12130  1267  0008               	return
 12131  1268                     l3153:	
 12132                           
 12133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12134                           ; Switch size 1, requested type "space"
 12135                           ; Number of cases is 1, Range of values is 0 to 0
 12136                           ; switch strategies available:
 12137                           ; Name         Instructions Cycles
 12138                           ; simple_byte            4     3 (average)
 12139                           ; direct_byte            8     6 (fixed)
 12140                           ; jumptable            260     6 (fixed)
 12141                           ;	Chosen strategy is simple_byte
 12142  1268  0020               	movlb	0	; select bank0
 12143  1269  0821               	movf	set_leds_bottom@x+1,w
 12144  126A  3A00               	xorlw	0	; case 0
 12145  126B  1903               	skipnz
 12146  126C  2A6E               	goto	l4535
 12147  126D  2A85               	goto	l660
 12148  126E                     l4535:	
 12149                           
 12150                           ; Switch size 1, requested type "space"
 12151                           ; Number of cases is 7, Range of values is 1 to 100
 12152                           ; switch strategies available:
 12153                           ; Name         Instructions Cycles
 12154                           ; simple_byte           22    12 (average)
 12155                           ; direct_byte          209     9 (fixed)
 12156                           ; jumptable            263     9 (fixed)
 12157                           ;	Chosen strategy is simple_byte
 12158  126E  0820               	movf	set_leds_bottom@x,w
 12159  126F  3A01               	xorlw	1	; case 1
 12160  1270  1903               	skipnz
 12161  1271  2A52               	goto	l652
 12162  1272  3A03               	xorlw	3	; case 2
 12163  1273  1903               	skipnz
 12164  1274  2A55               	goto	l654
 12165  1275  3A01               	xorlw	1	; case 3
 12166  1276  1903               	skipnz
 12167  1277  2A58               	goto	l655
 12168  1278  3A07               	xorlw	7	; case 4
 12169  1279  1903               	skipnz
 12170  127A  2A5B               	goto	l656
 12171  127B  3A01               	xorlw	1	; case 5
 12172  127C  1903               	skipnz
 12173  127D  2A5E               	goto	l657
 12174  127E  3A03               	xorlw	3	; case 6
 12175  127F  1903               	skipnz
 12176  1280  2A85               	goto	l660
 12177  1281  3A62               	xorlw	98	; case 100
 12178  1282  1903               	skipnz
 12179  1283  2A61               	goto	l659
 12180  1284  2A85               	goto	l660
 12181  1285                     l660:	
 12182  1285  0008               	return
 12183  1286                     __end_of_set_leds_bottom:	
 12184                           
 12185                           	psect	text38
 12186  1F98                     __ptext38:	
 12187 ;; *************** function _FLASH_ReadWord *****************
 12188 ;; Defined at:
 12189 ;;		line 58 in file "memory.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;  flashAddr       2    0[BANK0 ] unsigned int 
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  2    0[BANK0 ] unsigned int 
 12196 ;; Registers used:
 12197 ;;		wreg, status,2, status,0
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12203 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12204 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12206 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12207 ;;Total ram usage:        3 bytes
 12208 ;; Hardware stack levels used:    1
 12209 ;; Hardware stack levels required when called:    2
 12210 ;; This function calls:
 12211 ;;		Nothing
 12212 ;; This function is called by:
 12213 ;;		_ReadSavedSettings
 12214 ;;		_FLASH_WriteWord
 12215 ;; This function uses a non-reentrant model
 12216 ;;
 12217                           
 12218                           
 12219                           ;psect for function _FLASH_ReadWord
 12220  1F98                     _FLASH_ReadWord:	
 12221                           
 12222                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
 12223                           
 12224                           ;incstack = 0
 12225                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
 12226  1F98  3000               	movlw	0
 12227  1F99  1B8B               	btfsc	11,7	;volatile
 12228  1F9A  3001               	movlw	1
 12229  1F9B  0020               	movlb	0	; select bank0
 12230  1F9C  00A2               	movwf	FLASH_ReadWord@GIEBitValue
 12231                           
 12232                           ;memory.c: 61: INTCONbits.GIE = 0;
 12233  1F9D  138B               	bcf	11,7	;volatile
 12234                           
 12235                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
 12236  1F9E  0820               	movf	FLASH_ReadWord@flashAddr,w
 12237  1F9F  0023               	movlb	3	; select bank3
 12238  1FA0  0091               	movwf	17	;volatile
 12239                           
 12240                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
 12241  1FA1  0020               	movlb	0	; select bank0
 12242  1FA2  0821               	movf	FLASH_ReadWord@flashAddr+1,w
 12243  1FA3  0023               	movlb	3	; select bank3
 12244  1FA4  0092               	movwf	18	;volatile
 12245                           
 12246                           ;memory.c: 65: PMCON1bits.CFGS = 0;
 12247  1FA5  1315               	bcf	21,6	;volatile
 12248                           
 12249                           ;memory.c: 66: PMCON1bits.RD = 1;
 12250  1FA6  1415               	bsf	21,0	;volatile
 12251                           
 12252                           ;memory.c: 67: __nop();
 12253  1FA7  0000               	nop
 12254                           
 12255                           ;memory.c: 68: __nop();
 12256  1FA8  0000               	nop
 12257                           
 12258                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
 12259  1FA9  0020               	movlb	0	; select bank0
 12260  1FAA  0C22               	rrf	FLASH_ReadWord@GIEBitValue,w
 12261  1FAB  1C03               	skipc
 12262  1FAC  138B               	bcf	11,7	;volatile
 12263  1FAD  1803               	skipnc
 12264  1FAE  178B               	bsf	11,7	;volatile
 12265                           
 12266                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
 12267  1FAF  0023               	movlb	3	; select bank3
 12268  1FB0  0814               	movf	20,w	;volatile
 12269  1FB1  0020               	movlb	0	; select bank0
 12270  1FB2  00A1               	movwf	?_FLASH_ReadWord+1
 12271  1FB3  0023               	movlb	3	; select bank3
 12272  1FB4  0813               	movf	19,w	;volatile
 12273  1FB5  0020               	movlb	0	; select bank0
 12274  1FB6  00A0               	movwf	?_FLASH_ReadWord
 12275  1FB7  0008               	return
 12276  1FB8                     __end_of_FLASH_ReadWord:	
 12277                           
 12278                           	psect	text39
 12279  1FDA                     __ptext39:	
 12280 ;; *************** function _InitializeTaps *****************
 12281 ;; Defined at:
 12282 ;;		line 175 in file "user.c"
 12283 ;; Parameters:    Size  Location     Type
 12284 ;;		None
 12285 ;; Auto vars:     Size  Location     Type
 12286 ;;  itap            2    1[BANK0 ] int 
 12287 ;; Return value:  Size  Location     Type
 12288 ;;                  1    wreg      void 
 12289 ;; Registers used:
 12290 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12291 ;; Tracked objects:
 12292 ;;		On entry : 0/0
 12293 ;;		On exit  : 0/0
 12294 ;;		Unchanged: 0/0
 12295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12297 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12298 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12299 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12300 ;;Total ram usage:        3 bytes
 12301 ;; Hardware stack levels used:    1
 12302 ;; Hardware stack levels required when called:    2
 12303 ;; This function calls:
 12304 ;;		Nothing
 12305 ;; This function is called by:
 12306 ;;		_main
 12307 ;; This function uses a non-reentrant model
 12308 ;;
 12309                           
 12310                           
 12311                           ;psect for function _InitializeTaps
 12312  1FDA                     _InitializeTaps:	
 12313                           
 12314                           ;user.c: 176: for (int itap = 0; itap < 12; itap++) {
 12315                           
 12316                           ;incstack = 0
 12317                           ; Regs used in _InitializeTaps: [wreg+fsr1l+fsr1h+status,2+status,0]
 12318  1FDA  0020               	movlb	0	; select bank0
 12319  1FDB  01A1               	clrf	InitializeTaps@itap
 12320  1FDC  01A2               	clrf	InitializeTaps@itap+1
 12321  1FDD                     L10:	
 12322  1FDD  0822               	movf	InitializeTaps@itap+1,w
 12323  1FDE  3A80               	xorlw	128
 12324  1FDF  00A0               	movwf	??_InitializeTaps
 12325  1FE0  3080               	movlw	128
 12326  1FE1  0220               	subwf	??_InitializeTaps,w
 12327  1FE2  1D03               	skipz
 12328  1FE3  2FE6               	goto	u3275
 12329  1FE4  300C               	movlw	12
 12330  1FE5  0221               	subwf	InitializeTaps@itap,w
 12331  1FE6                     u3275:	
 12332  1FE6  1803               	btfsc	3,0
 12333  1FE7  0008               	return
 12334                           
 12335                           ;user.c: 177: tap[itap] = 0;
 12336  1FE8  0020               	movlb	0	; select bank0
 12337  1FE9  0821               	movf	InitializeTaps@itap,w
 12338  1FEA  00A0               	movwf	??_InitializeTaps
 12339  1FEB  3001               	movlw	1
 12340  1FEC                     u3285:	
 12341  1FEC  35A0               	lslf	??_InitializeTaps,f
 12342  1FED  3EFF               	addlw	-1
 12343  1FEE  1D03               	skipz
 12344  1FEF  2FEC               	goto	u3285
 12345  1FF0  3520               	lslf	??_InitializeTaps,w
 12346  1FF1  3EA0               	addlw	(low (_tap| (0+256)))& (0+255)
 12347  1FF2  0086               	movwf	6
 12348  1FF3  3001               	movlw	1	; select bank3/4
 12349  1FF4  0087               	movwf	7
 12350  1FF5  3000               	movlw	0
 12351  1FF6  3FC0               	movwi [0]fsr1
 12352  1FF7  3000               	movlw	0
 12353  1FF8  3FC1               	movwi [1]fsr1
 12354  1FF9  3FC2               	movwi [2]fsr1
 12355  1FFA  3FC3               	movwi [3]fsr1
 12356  1FFB  3001               	movlw	1
 12357  1FFC  07A1               	addwf	InitializeTaps@itap,f
 12358  1FFD  3000               	movlw	0
 12359  1FFE  3DA2               	addwfc	InitializeTaps@itap+1,f
 12360  1FFF  2FDD               	goto	L10
 12361  2000                     __end_of_InitializeTaps:	
 12362                           
 12363                           	psect	text40
 12364  1067                     __ptext40:	
 12365 ;; *************** function _InitApp *****************
 12366 ;; Defined at:
 12367 ;;		line 23 in file "user.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;		None
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;		None
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  1    wreg      void 
 12374 ;; Registers used:
 12375 ;;		wreg, status,2, status,0, pclath, cstack
 12376 ;; Tracked objects:
 12377 ;;		On entry : 0/0
 12378 ;;		On exit  : 0/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12385 ;;Total ram usage:        0 bytes
 12386 ;; Hardware stack levels used:    1
 12387 ;; Hardware stack levels required when called:    4
 12388 ;; This function calls:
 12389 ;;		_init_adc
 12390 ;;		_init_pwm
 12391 ;; This function is called by:
 12392 ;;		_main
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           
 12397                           ;psect for function _InitApp
 12398  1067                     _InitApp:	
 12399                           
 12400                           ;user.c: 24: TRISBbits.TRISB0 = 0;
 12401                           
 12402                           ;incstack = 0
 12403                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
 12404  1067  0021               	movlb	1	; select bank1
 12405  1068  100D               	bcf	13,0	;volatile
 12406                           
 12407                           ;user.c: 25: TRISBbits.TRISB1 = 0;
 12408  1069  108D               	bcf	13,1	;volatile
 12409                           
 12410                           ;user.c: 26: TRISBbits.TRISB2 = 0;
 12411  106A  110D               	bcf	13,2	;volatile
 12412                           
 12413                           ;user.c: 27: TRISBbits.TRISB3 = 0;
 12414  106B  118D               	bcf	13,3	;volatile
 12415                           
 12416                           ;user.c: 28: TRISBbits.TRISB4 = 0;
 12417  106C  120D               	bcf	13,4	;volatile
 12418                           
 12419                           ;user.c: 29: TRISBbits.TRISB5 = 0;
 12420  106D  128D               	bcf	13,5	;volatile
 12421                           
 12422                           ;user.c: 31: TRISCbits.TRISC0 = 1;
 12423  106E  140E               	bsf	14,0	;volatile
 12424                           
 12425                           ;user.c: 32: TRISCbits.TRISC4 = 0;
 12426  106F  120E               	bcf	14,4	;volatile
 12427                           
 12428                           ;user.c: 33: TRISCbits.TRISC5 = 0;
 12429  1070  128E               	bcf	14,5	;volatile
 12430                           
 12431                           ;user.c: 36: TRISDbits.TRISD0 = 0;
 12432  1071  100F               	bcf	15,0	;volatile
 12433                           
 12434                           ;user.c: 37: TRISDbits.TRISD1 = 0;
 12435  1072  108F               	bcf	15,1	;volatile
 12436                           
 12437                           ;user.c: 38: TRISDbits.TRISD2 = 0;
 12438  1073  110F               	bcf	15,2	;volatile
 12439                           
 12440                           ;user.c: 39: TRISDbits.TRISD3 = 0;
 12441  1074  118F               	bcf	15,3	;volatile
 12442                           
 12443                           ;user.c: 40: TRISDbits.TRISD4 = 0;
 12444  1075  120F               	bcf	15,4	;volatile
 12445                           
 12446                           ;user.c: 41: TRISDbits.TRISD5 = 1;
 12447  1076  168F               	bsf	15,5	;volatile
 12448                           
 12449                           ;user.c: 42: TRISDbits.TRISD6 = 1;
 12450  1077  170F               	bsf	15,6	;volatile
 12451                           
 12452                           ;user.c: 43: TRISDbits.TRISD7 = 1;
 12453  1078  178F               	bsf	15,7	;volatile
 12454                           
 12455                           ;user.c: 49: TRISEbits.TRISE0 = 1;
 12456  1079  1410               	bsf	16,0	;volatile
 12457                           
 12458                           ;user.c: 50: TRISEbits.TRISE1 = 1;
 12459  107A  1490               	bsf	16,1	;volatile
 12460                           
 12461                           ;user.c: 51: ANSELEbits.ANSE0 = 0;
 12462  107B  0023               	movlb	3	; select bank3
 12463  107C  1010               	bcf	16,0	;volatile
 12464                           
 12465                           ;user.c: 52: ANSELEbits.ANSE1 = 0;
 12466  107D  1090               	bcf	16,1	;volatile
 12467                           
 12468                           ;user.c: 53: PORTEbits.RE0 = 0;
 12469  107E  0020               	movlb	0	; select bank0
 12470  107F  1010               	bcf	16,0	;volatile
 12471                           
 12472                           ;user.c: 54: PORTEbits.RE1 = 0;
 12473  1080  1090               	bcf	16,1	;volatile
 12474                           
 12475                           ;user.c: 56: TRISFbits.TRISF0 = 0;
 12476  1081  0026               	movlb	6	; select bank6
 12477  1082  100C               	bcf	12,0	;volatile
 12478                           
 12479                           ;user.c: 57: TRISFbits.TRISF1 = 0;
 12480  1083  108C               	bcf	12,1	;volatile
 12481                           
 12482                           ;user.c: 58: TRISFbits.TRISF2 = 0;
 12483  1084  110C               	bcf	12,2	;volatile
 12484                           
 12485                           ;user.c: 59: TRISFbits.TRISF3 = 0;
 12486  1085  118C               	bcf	12,3	;volatile
 12487                           
 12488                           ;user.c: 60: TRISFbits.TRISF4 = 0;
 12489  1086  120C               	bcf	12,4	;volatile
 12490                           
 12491                           ;user.c: 61: TRISFbits.TRISF5 = 0;
 12492  1087  128C               	bcf	12,5	;volatile
 12493                           
 12494                           ;user.c: 62: TRISFbits.TRISF6 = 1;
 12495  1088  170C               	bsf	12,6	;volatile
 12496                           
 12497                           ;user.c: 63: ANSELFbits.ANSF6 = 0;
 12498  1089  0028               	movlb	8	; select bank8
 12499  108A  130C               	bcf	12,6	;volatile
 12500                           
 12501                           ;user.c: 65: TRISGbits.TRISG1 = 0;
 12502  108B  0026               	movlb	6	; select bank6
 12503  108C  108D               	bcf	13,1	;volatile
 12504                           
 12505                           ;user.c: 66: TRISGbits.TRISG2 = 0;
 12506  108D  110D               	bcf	13,2	;volatile
 12507                           
 12508                           ;user.c: 68: init_adc();
 12509  108E  319E  26C4  3190   	fcall	_init_adc
 12510                           
 12511                           ;user.c: 69: init_pwm();
 12512  1091  3193  2341         	fcall	_init_pwm
 12513                           
 12514                           ;user.c: 71: INTCONbits.GIE = 0b1;
 12515  1093  178B               	bsf	11,7	;volatile
 12516                           
 12517                           ;user.c: 72: INTCONbits.TMR0IE = 0b1;
 12518  1094  168B               	bsf	11,5	;volatile
 12519                           
 12520                           ;user.c: 73: INTCONbits.TMR0IF = 0b0;
 12521  1095  110B               	bcf	11,2	;volatile
 12522  1096  0008               	return
 12523  1097                     __end_of_InitApp:	
 12524                           
 12525                           	psect	text41
 12526  1341                     __ptext41:	
 12527 ;; *************** function _init_pwm *****************
 12528 ;; Defined at:
 12529 ;;		line 117 in file "user.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;		None
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;		None
 12534 ;; Return value:  Size  Location     Type
 12535 ;;                  1    wreg      void 
 12536 ;; Registers used:
 12537 ;;		wreg, status,2, status,0, pclath, cstack
 12538 ;; Tracked objects:
 12539 ;;		On entry : 0/0
 12540 ;;		On exit  : 0/0
 12541 ;;		Unchanged: 0/0
 12542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12547 ;;Total ram usage:        0 bytes
 12548 ;; Hardware stack levels used:    1
 12549 ;; Hardware stack levels required when called:    3
 12550 ;; This function calls:
 12551 ;;		_init_timer0
 12552 ;;		_init_timer2
 12553 ;; This function is called by:
 12554 ;;		_InitApp
 12555 ;; This function uses a non-reentrant model
 12556 ;;
 12557                           
 12558                           
 12559                           ;psect for function _init_pwm
 12560  1341                     _init_pwm:	
 12561                           
 12562                           ;user.c: 118: APFCONbits.CCP2SEL = 0;
 12563                           
 12564                           ;incstack = 0
 12565                           ; Regs used in _init_pwm: [wreg+status,2+status,0+pclath+cstack]
 12566  1341  0022               	movlb	2	; select bank2
 12567  1342  101D               	bcf	29,0	;volatile
 12568                           
 12569                           ;user.c: 119: TRISCbits.TRISC2 = 0;
 12570  1343  0021               	movlb	1	; select bank1
 12571  1344  110E               	bcf	14,2	;volatile
 12572                           
 12573                           ;user.c: 120: TRISCbits.TRISC1 = 0;
 12574  1345  108E               	bcf	14,1	;volatile
 12575                           
 12576                           ;user.c: 121: TRISGbits.TRISG0 = 0;
 12577  1346  0026               	movlb	6	; select bank6
 12578  1347  100D               	bcf	13,0	;volatile
 12579                           
 12580                           ;user.c: 122: TRISGbits.TRISG3 = 0;
 12581  1348  118D               	bcf	13,3	;volatile
 12582                           
 12583                           ;user.c: 123: TRISGbits.TRISG4 = 0;
 12584  1349  120D               	bcf	13,4	;volatile
 12585                           
 12586                           ;user.c: 124: TRISEbits.TRISE6 = 0;
 12587  134A  0021               	movlb	1	; select bank1
 12588  134B  1310               	bcf	16,6	;volatile
 12589                           
 12590                           ;user.c: 125: TRISEbits.TRISE5 = 0;
 12591  134C  1290               	bcf	16,5	;volatile
 12592                           
 12593                           ;user.c: 126: TRISEbits.TRISE4 = 0;
 12594  134D  1210               	bcf	16,4	;volatile
 12595                           
 12596                           ;user.c: 127: TRISEbits.TRISE3 = 0;
 12597  134E  1190               	bcf	16,3	;volatile
 12598                           
 12599                           ;user.c: 128: TRISEbits.TRISE2 = 0;
 12600  134F  1110               	bcf	16,2	;volatile
 12601                           
 12602                           ;user.c: 129: CCP1CONbits.CCP1M = 0b1111;
 12603  1350  300F               	movlw	15
 12604  1351  0025               	movlb	5	; select bank5
 12605  1352  0493               	iorwf	19,f	;volatile
 12606                           
 12607                           ;user.c: 130: CCP2CONbits.CCP2M = 0b1111;
 12608  1353  300F               	movlw	15
 12609  1354  049A               	iorwf	26,f	;volatile
 12610                           
 12611                           ;user.c: 131: CCP3CONbits.CCP3M = 0b1111;
 12612  1355  300F               	movlw	15
 12613  1356  0026               	movlb	6	; select bank6
 12614  1357  0493               	iorwf	19,f	;volatile
 12615                           
 12616                           ;user.c: 132: CCP4CONbits.CCP4M = 0b1111;
 12617  1358  300F               	movlw	15
 12618  1359  049A               	iorwf	26,f	;volatile
 12619                           
 12620                           ;user.c: 133: CCP5CONbits.CCP5M = 0b1111;
 12621  135A  300F               	movlw	15
 12622  135B  049E               	iorwf	30,f	;volatile
 12623                           
 12624                           ;user.c: 134: CCP6CONbits.CCP6M = 0b1111;
 12625  135C  300F               	movlw	15
 12626  135D  002C               	movlb	12	; select bank12
 12627  135E  0493               	iorwf	19,f	;volatile
 12628                           
 12629                           ;user.c: 135: CCP7CONbits.CCP7M = 0b1111;
 12630  135F  300F               	movlw	15
 12631  1360  0496               	iorwf	22,f	;volatile
 12632                           
 12633                           ;user.c: 136: CCP8CONbits.CCP8M = 0b1111;
 12634  1361  300F               	movlw	15
 12635  1362  0499               	iorwf	25,f	;volatile
 12636                           
 12637                           ;user.c: 137: CCP9CONbits.CCP9M = 0b1111;
 12638  1363  300F               	movlw	15
 12639  1364  049C               	iorwf	28,f	;volatile
 12640                           
 12641                           ;user.c: 138: CCP10CONbits.CCP10M = 0b1111;
 12642  1365  300F               	movlw	15
 12643  1366  049F               	iorwf	31,f	;volatile
 12644                           
 12645                           ;user.c: 139: CCPTMRS0 = 0b00000000;
 12646  1367  0025               	movlb	5	; select bank5
 12647  1368  019D               	clrf	29	;volatile
 12648                           
 12649                           ;user.c: 140: CCPTMRS1 = 0b00000000;
 12650  1369  019E               	clrf	30	;volatile
 12651                           
 12652                           ;user.c: 141: CCPTMRS2 = 0b00000000;
 12653  136A  019F               	clrf	31	;volatile
 12654                           
 12655                           ;user.c: 142: CCPR1 = 50;
 12656  136B  3000               	movlw	0
 12657  136C  0092               	movwf	18	;volatile
 12658  136D  3032               	movlw	50
 12659  136E  0091               	movwf	17	;volatile
 12660                           
 12661                           ;user.c: 143: CCPR2 = 100;
 12662  136F  3000               	movlw	0
 12663  1370  0099               	movwf	25	;volatile
 12664  1371  3064               	movlw	100
 12665  1372  0098               	movwf	24	;volatile
 12666                           
 12667                           ;user.c: 144: CCPR3 = 150;
 12668  1373  3000               	movlw	0
 12669  1374  0026               	movlb	6	; select bank6
 12670  1375  0092               	movwf	18	;volatile
 12671  1376  3096               	movlw	150
 12672  1377  0091               	movwf	17	;volatile
 12673                           
 12674                           ;user.c: 145: CCPR4 = 200;
 12675  1378  3000               	movlw	0
 12676  1379  0099               	movwf	25	;volatile
 12677  137A  30C8               	movlw	200
 12678  137B  0098               	movwf	24	;volatile
 12679                           
 12680                           ;user.c: 146: init_timer2();
 12681  137C  319E  26B2  3193   	fcall	_init_timer2
 12682                           
 12683                           ;user.c: 147: init_timer0();
 12684  137F  319E  26AB         	fcall	_init_timer0
 12685  1381  0008               	return
 12686  1382                     __end_of_init_pwm:	
 12687                           
 12688                           	psect	text42
 12689  1EB2                     __ptext42:	
 12690 ;; *************** function _init_timer2 *****************
 12691 ;; Defined at:
 12692 ;;		line 150 in file "user.c"
 12693 ;; Parameters:    Size  Location     Type
 12694 ;;		None
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;		None
 12697 ;; Return value:  Size  Location     Type
 12698 ;;                  1    wreg      void 
 12699 ;; Registers used:
 12700 ;;		wreg, status,2, status,0
 12701 ;; Tracked objects:
 12702 ;;		On entry : 0/0
 12703 ;;		On exit  : 0/0
 12704 ;;		Unchanged: 0/0
 12705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12710 ;;Total ram usage:        0 bytes
 12711 ;; Hardware stack levels used:    1
 12712 ;; Hardware stack levels required when called:    2
 12713 ;; This function calls:
 12714 ;;		Nothing
 12715 ;; This function is called by:
 12716 ;;		_init_pwm
 12717 ;; This function uses a non-reentrant model
 12718 ;;
 12719                           
 12720                           
 12721                           ;psect for function _init_timer2
 12722  1EB2                     _init_timer2:	
 12723                           
 12724                           ;user.c: 151: T2CONbits.T2OUTPS = 0b0000;
 12725                           
 12726                           ;incstack = 0
 12727                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
 12728  1EB2  3087               	movlw	-121
 12729  1EB3  0020               	movlb	0	; select bank0
 12730  1EB4  059C               	andwf	28,f	;volatile
 12731                           
 12732                           ;user.c: 152: T2CONbits.T2CKPS = 0b00;
 12733  1EB5  30FC               	movlw	-4
 12734  1EB6  059C               	andwf	28,f	;volatile
 12735                           
 12736                           ;user.c: 153: PR2 = 0xFF;
 12737  1EB7  30FF               	movlw	255
 12738  1EB8  009B               	movwf	27	;volatile
 12739                           
 12740                           ;user.c: 154: T2CONbits.TMR2ON = 1;
 12741  1EB9  151C               	bsf	28,2	;volatile
 12742  1EBA  0008               	return
 12743  1EBB                     __end_of_init_timer2:	
 12744                           
 12745                           	psect	text43
 12746  1EAB                     __ptext43:	
 12747 ;; *************** function _init_timer0 *****************
 12748 ;; Defined at:
 12749 ;;		line 157 in file "user.c"
 12750 ;; Parameters:    Size  Location     Type
 12751 ;;		None
 12752 ;; Auto vars:     Size  Location     Type
 12753 ;;		None
 12754 ;; Return value:  Size  Location     Type
 12755 ;;                  1    wreg      void 
 12756 ;; Registers used:
 12757 ;;		None
 12758 ;; Tracked objects:
 12759 ;;		On entry : 0/0
 12760 ;;		On exit  : 0/0
 12761 ;;		Unchanged: 0/0
 12762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12767 ;;Total ram usage:        0 bytes
 12768 ;; Hardware stack levels used:    1
 12769 ;; Hardware stack levels required when called:    2
 12770 ;; This function calls:
 12771 ;;		Nothing
 12772 ;; This function is called by:
 12773 ;;		_init_pwm
 12774 ;; This function uses a non-reentrant model
 12775 ;;
 12776                           
 12777                           
 12778                           ;psect for function _init_timer0
 12779  1EAB                     _init_timer0:	
 12780                           
 12781                           ;user.c: 158: OPTION_REGbits.TMR0CS = 0b0;
 12782                           
 12783                           ;incstack = 0
 12784                           ; Regs used in _init_timer0: []
 12785  1EAB  0021               	movlb	1	; select bank1
 12786  1EAC  1295               	bcf	21,5	;volatile
 12787                           
 12788                           ;user.c: 159: OPTION_REGbits.PSA = 0b0;
 12789  1EAD  1195               	bcf	21,3	;volatile
 12790                           
 12791                           ;user.c: 160: OPTION_REGbits.PS0 = 0b0;
 12792  1EAE  1015               	bcf	21,0	;volatile
 12793                           
 12794                           ;user.c: 161: OPTION_REGbits.PS1 = 0b1;
 12795  1EAF  1495               	bsf	21,1	;volatile
 12796                           
 12797                           ;user.c: 162: OPTION_REGbits.PS2 = 0b0;
 12798  1EB0  1115               	bcf	21,2	;volatile
 12799  1EB1  0008               	return
 12800  1EB2                     __end_of_init_timer0:	
 12801                           
 12802                           	psect	text44
 12803  1EC4                     __ptext44:	
 12804 ;; *************** function _init_adc *****************
 12805 ;; Defined at:
 12806 ;;		line 103 in file "user.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;		None
 12809 ;; Auto vars:     Size  Location     Type
 12810 ;;		None
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  1    wreg      void 
 12813 ;; Registers used:
 12814 ;;		wreg, status,2, status,0
 12815 ;; Tracked objects:
 12816 ;;		On entry : 0/0
 12817 ;;		On exit  : 0/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12824 ;;Total ram usage:        0 bytes
 12825 ;; Hardware stack levels used:    1
 12826 ;; Hardware stack levels required when called:    2
 12827 ;; This function calls:
 12828 ;;		Nothing
 12829 ;; This function is called by:
 12830 ;;		_InitApp
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           
 12835                           ;psect for function _init_adc
 12836  1EC4                     _init_adc:	
 12837                           
 12838                           ;user.c: 104: ADCON1bits.ADFM = 0b1;
 12839                           
 12840                           ;incstack = 0
 12841                           ; Regs used in _init_adc: [wreg+status,2+status,0]
 12842  1EC4  0021               	movlb	1	; select bank1
 12843  1EC5  179E               	bsf	30,7	;volatile
 12844                           
 12845                           ;user.c: 105: ADCON1bits.ADCS = 0b110;
 12846  1EC6  081E               	movf	30,w	;volatile
 12847  1EC7  398F               	andlw	-113
 12848  1EC8  3860               	iorlw	96
 12849  1EC9  009E               	movwf	30	;volatile
 12850                           
 12851                           ;user.c: 106: ADCON1bits.ADPREF = 0b00;
 12852  1ECA  30FC               	movlw	-4
 12853  1ECB  059E               	andwf	30,f	;volatile
 12854                           
 12855                           ;user.c: 107: ADCON0bits.ADON = 0b1;
 12856  1ECC  141D               	bsf	29,0	;volatile
 12857  1ECD  0008               	return
 12858  1ECE                     __end_of_init_adc:	
 12859                           
 12860                           	psect	text45
 12861  1EA3                     __ptext45:	
 12862 ;; *************** function _ConfigureOscillator *****************
 12863 ;; Defined at:
 12864 ;;		line 18 in file "system.c"
 12865 ;; Parameters:    Size  Location     Type
 12866 ;;		None
 12867 ;; Auto vars:     Size  Location     Type
 12868 ;;		None
 12869 ;; Return value:  Size  Location     Type
 12870 ;;                  1    wreg      void 
 12871 ;; Registers used:
 12872 ;;		wreg, status,2, status,0
 12873 ;; Tracked objects:
 12874 ;;		On entry : 0/0
 12875 ;;		On exit  : 0/0
 12876 ;;		Unchanged: 0/0
 12877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12882 ;;Total ram usage:        0 bytes
 12883 ;; Hardware stack levels used:    1
 12884 ;; Hardware stack levels required when called:    2
 12885 ;; This function calls:
 12886 ;;		Nothing
 12887 ;; This function is called by:
 12888 ;;		_main
 12889 ;; This function uses a non-reentrant model
 12890 ;;
 12891                           
 12892                           
 12893                           ;psect for function _ConfigureOscillator
 12894  1EA3                     _ConfigureOscillator:	
 12895                           
 12896                           ;system.c: 20: OSCCONbits.SCS = 0b00;
 12897                           
 12898                           ;incstack = 0
 12899                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
 12900  1EA3  30FC               	movlw	-4
 12901  1EA4  0021               	movlb	1	; select bank1
 12902  1EA5  0599               	andwf	25,f	;volatile
 12903  1EA6  0008               	return
 12904  1EA7                     __end_of_ConfigureOscillator:	
 12905                           
 12906                           	psect	intentry
 12907  0004                     __pintentry:	
 12908 ;; *************** function _isr *****************
 12909 ;; Defined at:
 12910 ;;		line 23 in file "interrupts.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;		None
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;		None
 12915 ;; Return value:  Size  Location     Type
 12916 ;;                  1    wreg      void 
 12917 ;; Registers used:
 12918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12926 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12927 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12928 ;;Total ram usage:        5 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; Hardware stack levels required when called:    1
 12931 ;; This function calls:
 12932 ;;		i1_set_leds_top
 12933 ;; This function is called by:
 12934 ;;		Interrupt level 1
 12935 ;; This function uses a non-reentrant model
 12936 ;;
 12937                           
 12938  0004                     _isr:	
 12939                           
 12940                           ;incstack = 0
 12941                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12942  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12943  0005  3180               	pagesel	$
 12944  0006  0020               	movlb	0	; select bank0
 12945  0007  087F               	movf	127,w
 12946  0008  00F8               	movwf	??_isr+4
 12947                           
 12948                           ;interrupts.c: 24: extern volatile long timer;
 12949                           ;interrupts.c: 25: extern volatile long sub_timer;
 12950                           ;interrupts.c: 26: extern volatile long tap_timer;
 12951                           ;interrupts.c: 27: extern volatile long mod_timer;
 12952                           ;interrupts.c: 28: extern volatile long baseline_delay_time;
 12953                           ;interrupts.c: 29: extern volatile long delay_time;
 12954                           ;interrupts.c: 30: extern int top_push_state;
 12955                           ;interrupts.c: 31: extern uint8_t feedback_start;
 12956                           ;interrupts.c: 33: if (INTCONbits.TMR0IF == 1) {
 12957  0009  1D0B               	btfss	11,2	;volatile
 12958  000A  2895               	goto	i1l4073
 12959                           
 12960                           ;interrupts.c: 34: timer = timer + 1;
 12961  000B  3001               	movlw	1
 12962  000C  00F4               	movwf	??_isr
 12963  000D  3000               	movlw	0
 12964  000E  00F5               	movwf	??_isr+1
 12965  000F  3000               	movlw	0
 12966  0010  00F6               	movwf	??_isr+2
 12967  0011  3000               	movlw	0
 12968  0012  00F7               	movwf	??_isr+3
 12969  0013  0021               	movlb	1	; select bank1
 12970  0014  0843               	movf	_timer^(0+128),w	;volatile
 12971  0015  07F4               	addwf	??_isr,f
 12972  0016  0844               	movf	(_timer+1)^(0+128),w	;volatile
 12973  0017  3DF5               	addwfc	??_isr+1,f
 12974  0018  0845               	movf	(_timer+2)^(0+128),w	;volatile
 12975  0019  3DF6               	addwfc	??_isr+2,f
 12976  001A  0846               	movf	(_timer+3)^(0+128),w	;volatile
 12977  001B  3DF7               	addwfc	??_isr+3,f
 12978  001C  0877               	movf	??_isr+3,w
 12979  001D  00C6               	movwf	(_timer+3)^(0+128)	;volatile
 12980  001E  0876               	movf	??_isr+2,w
 12981  001F  00C5               	movwf	(_timer+2)^(0+128)	;volatile
 12982  0020  0875               	movf	??_isr+1,w
 12983  0021  00C4               	movwf	(_timer+1)^(0+128)	;volatile
 12984  0022  0874               	movf	??_isr,w
 12985  0023  00C3               	movwf	_timer^(0+128)	;volatile
 12986                           
 12987                           ;interrupts.c: 35: sub_timer = sub_timer + 1;
 12988  0024  3001               	movlw	1
 12989  0025  00F4               	movwf	??_isr
 12990  0026  3000               	movlw	0
 12991  0027  00F5               	movwf	??_isr+1
 12992  0028  3000               	movlw	0
 12993  0029  00F6               	movwf	??_isr+2
 12994  002A  3000               	movlw	0
 12995  002B  00F7               	movwf	??_isr+3
 12996  002C  083F               	movf	_sub_timer^(0+128),w	;volatile
 12997  002D  07F4               	addwf	??_isr,f
 12998  002E  0840               	movf	(_sub_timer+1)^(0+128),w	;volatile
 12999  002F  3DF5               	addwfc	??_isr+1,f
 13000  0030  0841               	movf	(_sub_timer+2)^(0+128),w	;volatile
 13001  0031  3DF6               	addwfc	??_isr+2,f
 13002  0032  0842               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13003  0033  3DF7               	addwfc	??_isr+3,f
 13004  0034  0877               	movf	??_isr+3,w
 13005  0035  00C2               	movwf	(_sub_timer+3)^(0+128)	;volatile
 13006  0036  0876               	movf	??_isr+2,w
 13007  0037  00C1               	movwf	(_sub_timer+2)^(0+128)	;volatile
 13008  0038  0875               	movf	??_isr+1,w
 13009  0039  00C0               	movwf	(_sub_timer+1)^(0+128)	;volatile
 13010  003A  0874               	movf	??_isr,w
 13011  003B  00BF               	movwf	_sub_timer^(0+128)	;volatile
 13012                           
 13013                           ;interrupts.c: 36: tap_timer = tap_timer + 1;
 13014  003C  3001               	movlw	1
 13015  003D  00F4               	movwf	??_isr
 13016  003E  3000               	movlw	0
 13017  003F  00F5               	movwf	??_isr+1
 13018  0040  3000               	movlw	0
 13019  0041  00F6               	movwf	??_isr+2
 13020  0042  3000               	movlw	0
 13021  0043  00F7               	movwf	??_isr+3
 13022  0044  0879               	movf	_tap_timer,w	;volatile
 13023  0045  07F4               	addwf	??_isr,f
 13024  0046  087A               	movf	_tap_timer+1,w	;volatile
 13025  0047  3DF5               	addwfc	??_isr+1,f
 13026  0048  087B               	movf	_tap_timer+2,w	;volatile
 13027  0049  3DF6               	addwfc	??_isr+2,f
 13028  004A  087C               	movf	_tap_timer+3,w	;volatile
 13029  004B  3DF7               	addwfc	??_isr+3,f
 13030  004C  0877               	movf	??_isr+3,w
 13031  004D  00FC               	movwf	_tap_timer+3	;volatile
 13032  004E  0876               	movf	??_isr+2,w
 13033  004F  00FB               	movwf	_tap_timer+2	;volatile
 13034  0050  0875               	movf	??_isr+1,w
 13035  0051  00FA               	movwf	_tap_timer+1	;volatile
 13036  0052  0874               	movf	??_isr,w
 13037  0053  00F9               	movwf	_tap_timer	;volatile
 13038                           
 13039                           ;interrupts.c: 37: mod_timer = mod_timer + 1;
 13040  0054  3001               	movlw	1
 13041  0055  00F4               	movwf	??_isr
 13042  0056  3000               	movlw	0
 13043  0057  00F5               	movwf	??_isr+1
 13044  0058  3000               	movlw	0
 13045  0059  00F6               	movwf	??_isr+2
 13046  005A  3000               	movlw	0
 13047  005B  00F7               	movwf	??_isr+3
 13048  005C  0022               	movlb	2	; select bank2
 13049  005D  0824               	movf	_mod_timer^(0+256),w	;volatile
 13050  005E  07F4               	addwf	??_isr,f
 13051  005F  0825               	movf	(_mod_timer+1)^(0+256),w	;volatile
 13052  0060  3DF5               	addwfc	??_isr+1,f
 13053  0061  0826               	movf	(_mod_timer+2)^(0+256),w	;volatile
 13054  0062  3DF6               	addwfc	??_isr+2,f
 13055  0063  0827               	movf	(_mod_timer+3)^(0+256),w	;volatile
 13056  0064  3DF7               	addwfc	??_isr+3,f
 13057  0065  0877               	movf	??_isr+3,w
 13058  0066  00A7               	movwf	(_mod_timer+3)^(0+256)	;volatile
 13059  0067  0876               	movf	??_isr+2,w
 13060  0068  00A6               	movwf	(_mod_timer+2)^(0+256)	;volatile
 13061  0069  0875               	movf	??_isr+1,w
 13062  006A  00A5               	movwf	(_mod_timer+1)^(0+256)	;volatile
 13063  006B  0874               	movf	??_isr,w
 13064  006C  00A4               	movwf	_mod_timer^(0+256)	;volatile
 13065                           
 13066                           ;interrupts.c: 38: if (feedback_start == 1) {
 13067  006D  0021               	movlb	1	; select bank1
 13068  006E  0352               	decf	_feedback_start^(0+128),w
 13069  006F  1D03               	btfss	3,2
 13070  0070  2881               	goto	i1l4065
 13071                           
 13072                           ;interrupts.c: 39: feedback_timer++;
 13073  0071  3001               	movlw	1
 13074  0072  07C7               	addwf	_feedback_timer^(0+128),f	;volatile
 13075  0073  3000               	movlw	0
 13076  0074  3DC8               	addwfc	(_feedback_timer+1)^(0+128),f	;volatile
 13077                           
 13078                           ;interrupts.c: 40: if (feedback_timer > long_press_limit) {feedback_timer = long_press_l
      +                          imit;}
 13079  0075  0848               	movf	(_feedback_timer+1)^(0+128),w	;volatile
 13080  0076  0265               	subwf	(_long_press_limit+1)^(0+128),w
 13081  0077  1D03               	skipz
 13082  0078  287B               	goto	u403_25
 13083  0079  0847               	movf	_feedback_timer^(0+128),w	;volatile
 13084  007A  0264               	subwf	_long_press_limit^(0+128),w
 13085  007B                     u403_25:	
 13086  007B  1803               	skipnc
 13087  007C  2881               	goto	i1l4065
 13088  007D  0865               	movf	(_long_press_limit+1)^(0+128),w
 13089  007E  00C8               	movwf	(_feedback_timer+1)^(0+128)	;volatile
 13090  007F  0864               	movf	_long_press_limit^(0+128),w
 13091  0080  00C7               	movwf	_feedback_timer^(0+128)	;volatile
 13092  0081                     i1l4065:	
 13093                           
 13094                           ;interrupts.c: 41: }
 13095                           ;interrupts.c: 42: if (longTap_start == 1) {
 13096  0081  0353               	decf	_longTap_start^(0+128),w
 13097  0082  1D03               	btfss	3,2
 13098  0083  2894               	goto	i1l4071
 13099                           
 13100                           ;interrupts.c: 43: longTap_timer++;
 13101  0084  3001               	movlw	1
 13102  0085  07CB               	addwf	_longTap_timer^(0+128),f	;volatile
 13103  0086  3000               	movlw	0
 13104  0087  3DCC               	addwfc	(_longTap_timer+1)^(0+128),f	;volatile
 13105                           
 13106                           ;interrupts.c: 44: if (longTap_timer > long_press_limit) {
 13107  0088  084C               	movf	(_longTap_timer+1)^(0+128),w	;volatile
 13108  0089  0265               	subwf	(_long_press_limit+1)^(0+128),w
 13109  008A  1D03               	skipz
 13110  008B  288E               	goto	u405_25
 13111  008C  084B               	movf	_longTap_timer^(0+128),w	;volatile
 13112  008D  0264               	subwf	_long_press_limit^(0+128),w
 13113  008E                     u405_25:	
 13114  008E  1803               	skipnc
 13115  008F  2894               	goto	i1l4071
 13116                           
 13117                           ;interrupts.c: 45: longTap_timer = long_press_limit;
 13118  0090  0865               	movf	(_long_press_limit+1)^(0+128),w
 13119  0091  00CC               	movwf	(_longTap_timer+1)^(0+128)	;volatile
 13120  0092  0864               	movf	_long_press_limit^(0+128),w
 13121  0093  00CB               	movwf	_longTap_timer^(0+128)	;volatile
 13122  0094                     i1l4071:	
 13123                           
 13124                           ;interrupts.c: 46: }
 13125                           ;interrupts.c: 47: }
 13126                           ;interrupts.c: 49: INTCONbits.TMR0IF = 0;
 13127  0094  110B               	bcf	11,2	;volatile
 13128  0095                     i1l4073:	
 13129                           
 13130                           ;interrupts.c: 50: }
 13131                           ;interrupts.c: 54: if (longTap_state < 1 && doubleTap_state < 1) {
 13132  0095  0021               	movlb	1	; select bank1
 13133  0096  086C               	movf	_longTap_state^(0+128),w	;volatile
 13134  0097  1D03               	btfss	3,2
 13135  0098  28CC               	goto	i1l4087
 13136  0099  087D               	movf	_doubleTap_state,w	;volatile
 13137  009A  1D03               	btfss	3,2
 13138  009B  28CC               	goto	i1l4087
 13139                           
 13140                           ;interrupts.c: 56: if (timer >= baseline_delay_time) {
 13141  009C  0846               	movf	(_timer+3)^(0+128),w	;volatile
 13142  009D  3A80               	xorlw	128
 13143  009E  00F4               	movwf	??_isr
 13144  009F  085D               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
 13145  00A0  3A80               	xorlw	128
 13146  00A1  0274               	subwf	??_isr,w
 13147  00A2  1D03               	skipz
 13148  00A3  28AE               	goto	u408_23
 13149  00A4  085C               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
 13150  00A5  0245               	subwf	(_timer+2)^(0+128),w	;volatile
 13151  00A6  1D03               	skipz
 13152  00A7  28AE               	goto	u408_23
 13153  00A8  085B               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 13154  00A9  0244               	subwf	(_timer+1)^(0+128),w	;volatile
 13155  00AA  1D03               	skipz
 13156  00AB  28AE               	goto	u408_23
 13157  00AC  085A               	movf	_baseline_delay_time^(0+128),w	;volatile
 13158  00AD  0243               	subwf	_timer^(0+128),w	;volatile
 13159  00AE                     u408_23:	
 13160  00AE  1C03               	skipc
 13161  00AF  28BB               	goto	i1l4083
 13162                           
 13163                           ;interrupts.c: 59: LATBbits.LATB4 = 1;
 13164  00B0  0022               	movlb	2	; select bank2
 13165  00B1  160D               	bsf	13,4	;volatile
 13166                           
 13167                           ;interrupts.c: 61: timer = 0;
 13168  00B2  3000               	movlw	0
 13169  00B3  0021               	movlb	1	; select bank1
 13170  00B4  00C6               	movwf	(_timer+3)^(0+128)	;volatile
 13171  00B5  3000               	movlw	0
 13172  00B6  00C5               	movwf	(_timer+2)^(0+128)	;volatile
 13173  00B7  3000               	movlw	0
 13174  00B8  00C4               	movwf	(_timer+1)^(0+128)	;volatile
 13175  00B9  3000               	movlw	0
 13176  00BA  00C3               	movwf	_timer^(0+128)	;volatile
 13177  00BB                     i1l4083:	
 13178                           
 13179                           ;interrupts.c: 62: }
 13180                           ;interrupts.c: 64: if (timer >= 20) {
 13181  00BB  1BC6               	btfsc	(_timer+3)^(0+128),7	;volatile
 13182  00BC  28CC               	goto	i1l4087
 13183  00BD  0846               	movf	(_timer+3)^(0+128),w	;volatile
 13184  00BE  1D03               	btfss	3,2
 13185  00BF  28CA               	goto	i1l4085
 13186  00C0  0845               	movf	(_timer+2)^(0+128),w	;volatile
 13187  00C1  1D03               	btfss	3,2
 13188  00C2  28CA               	goto	i1l4085
 13189  00C3  0844               	movf	(_timer+1)^(0+128),w	;volatile
 13190  00C4  1D03               	btfss	3,2
 13191  00C5  28CA               	goto	i1l4085
 13192  00C6  3014               	movlw	20
 13193  00C7  0243               	subwf	_timer^(0+128),w	;volatile
 13194  00C8  1C03               	btfss	3,0
 13195  00C9  28CC               	goto	i1l4087
 13196  00CA                     i1l4085:	
 13197                           
 13198                           ;interrupts.c: 66: LATBbits.LATB4 = 0;
 13199  00CA  0022               	movlb	2	; select bank2
 13200  00CB  120D               	bcf	13,4	;volatile
 13201  00CC                     i1l4087:	
 13202                           
 13203                           ;interrupts.c: 68: }
 13204                           ;interrupts.c: 69: }
 13205                           ;interrupts.c: 72: if (sub_timer >= delay_time) {
 13206  00CC  0021               	movlb	1	; select bank1
 13207  00CD  0842               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13208  00CE  3A80               	xorlw	128
 13209  00CF  00F4               	movwf	??_isr
 13210  00D0  0861               	movf	(_delay_time+3)^(0+128),w	;volatile
 13211  00D1  3A80               	xorlw	128
 13212  00D2  0274               	subwf	??_isr,w
 13213  00D3  1D03               	skipz
 13214  00D4  28DF               	goto	u410_23
 13215  00D5  0860               	movf	(_delay_time+2)^(0+128),w	;volatile
 13216  00D6  0241               	subwf	(_sub_timer+2)^(0+128),w	;volatile
 13217  00D7  1D03               	skipz
 13218  00D8  28DF               	goto	u410_23
 13219  00D9  085F               	movf	(_delay_time+1)^(0+128),w	;volatile
 13220  00DA  0240               	subwf	(_sub_timer+1)^(0+128),w	;volatile
 13221  00DB  1D03               	skipz
 13222  00DC  28DF               	goto	u410_23
 13223  00DD  085E               	movf	_delay_time^(0+128),w	;volatile
 13224  00DE  023F               	subwf	_sub_timer^(0+128),w	;volatile
 13225  00DF                     u410_23:	
 13226  00DF  1C03               	skipc
 13227  00E0  28F8               	goto	i1l4095
 13228                           
 13229                           ;interrupts.c: 73: if (suspend_blink == 0) {
 13230  00E1  0857               	movf	_suspend_blink^(0+128),w	;volatile
 13231  00E2  1D03               	btfss	3,2
 13232  00E3  28EF               	goto	i1l4093
 13233                           
 13234                           ;interrupts.c: 74: set_leds_top(top_push_state, 1);
 13235  00E4  0869               	movf	(_top_push_state+1)^(0+128),w
 13236  00E5  00F1               	movwf	i1set_leds_top@x+1
 13237  00E6  0868               	movf	_top_push_state^(0+128),w
 13238  00E7  00F0               	movwf	i1set_leds_top@x
 13239  00E8  3001               	movlw	1
 13240  00E9  00F2               	movwf	i1set_leds_top@ledState
 13241  00EA  3000               	movlw	0
 13242  00EB  00F3               	movwf	i1set_leds_top@ledState+1
 13243  00EC  3193  23C7  3180   	fcall	i1_set_leds_top
 13244  00EF                     i1l4093:	
 13245                           
 13246                           ;interrupts.c: 75: }
 13247                           ;interrupts.c: 76: sub_timer = 0;
 13248  00EF  3000               	movlw	0
 13249  00F0  0021               	movlb	1	; select bank1
 13250  00F1  00C2               	movwf	(_sub_timer+3)^(0+128)	;volatile
 13251  00F2  3000               	movlw	0
 13252  00F3  00C1               	movwf	(_sub_timer+2)^(0+128)	;volatile
 13253  00F4  3000               	movlw	0
 13254  00F5  00C0               	movwf	(_sub_timer+1)^(0+128)	;volatile
 13255  00F6  3000               	movlw	0
 13256  00F7  00BF               	movwf	_sub_timer^(0+128)	;volatile
 13257  00F8                     i1l4095:	
 13258                           
 13259                           ;interrupts.c: 77: }
 13260                           ;interrupts.c: 79: if (sub_timer >= 20) {
 13261  00F8  1BC2               	btfsc	(_sub_timer+3)^(0+128),7	;volatile
 13262  00F9  2914               	goto	i1l4101
 13263  00FA  0842               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13264  00FB  1D03               	btfss	3,2
 13265  00FC  2907               	goto	i1l4097
 13266  00FD  0841               	movf	(_sub_timer+2)^(0+128),w	;volatile
 13267  00FE  1D03               	btfss	3,2
 13268  00FF  2907               	goto	i1l4097
 13269  0100  0840               	movf	(_sub_timer+1)^(0+128),w	;volatile
 13270  0101  1D03               	btfss	3,2
 13271  0102  2907               	goto	i1l4097
 13272  0103  3014               	movlw	20
 13273  0104  023F               	subwf	_sub_timer^(0+128),w	;volatile
 13274  0105  1C03               	btfss	3,0
 13275  0106  2914               	goto	i1l4101
 13276  0107                     i1l4097:	
 13277                           
 13278                           ;interrupts.c: 80: if (suspend_blink == 0) {
 13279  0107  0857               	movf	_suspend_blink^(0+128),w	;volatile
 13280  0108  1D03               	btfss	3,2
 13281  0109  2914               	goto	i1l4101
 13282                           
 13283                           ;interrupts.c: 81: set_leds_top(top_push_state, 0);
 13284  010A  0869               	movf	(_top_push_state+1)^(0+128),w
 13285  010B  00F1               	movwf	i1set_leds_top@x+1
 13286  010C  0868               	movf	_top_push_state^(0+128),w
 13287  010D  00F0               	movwf	i1set_leds_top@x
 13288  010E  3000               	movlw	0
 13289  010F  00F2               	movwf	i1set_leds_top@ledState
 13290  0110  00F3               	movwf	i1set_leds_top@ledState+1
 13291  0111  3193  23C7  3180   	fcall	i1_set_leds_top
 13292  0114                     i1l4101:	
 13293                           
 13294                           ;interrupts.c: 82: }
 13295                           ;interrupts.c: 83: }
 13296                           ;interrupts.c: 86: if (preset_programmning_on == 1) {
 13297  0114  0021               	movlb	1	; select bank1
 13298  0115  0356               	decf	_preset_programmning_on^(0+128),w
 13299  0116  1D03               	btfss	3,2
 13300  0117  293E               	goto	i1l4113
 13301                           
 13302                           ;interrupts.c: 87: preset_blink++;
 13303  0118  3001               	movlw	1
 13304  0119  00F4               	movwf	??_isr
 13305  011A  0874               	movf	??_isr,w
 13306  011B  07D5               	addwf	_preset_blink^(0+128),f
 13307                           
 13308                           ;interrupts.c: 89: if (preset_blink >= blink_delay) {
 13309  011C  0022               	movlb	2	; select bank2
 13310  011D  084D               	movf	(_blink_delay+1)^(0+256),w
 13311  011E  3A80               	xorlw	128
 13312  011F  3C80               	sublw	128
 13313  0120  1D03               	skipz
 13314  0121  2925               	goto	u415_25
 13315  0122  084C               	movf	_blink_delay^(0+256),w
 13316  0123  0021               	movlb	1	; select bank1
 13317  0124  0255               	subwf	_preset_blink^(0+128),w
 13318  0125                     u415_25:	
 13319  0125  1C03               	skipc
 13320  0126  2943               	goto	i1l4117
 13321                           
 13322                           ;interrupts.c: 90: LATBbits.LATB1 = 1;
 13323  0127  0022               	movlb	2	; select bank2
 13324  0128  148D               	bsf	13,1	;volatile
 13325                           
 13326                           ;interrupts.c: 91: if (preset_blink > blink_delay*2) {
 13327  0129  084D               	movf	(_blink_delay+1)^(0+256),w
 13328  012A  00F5               	movwf	??_isr+1
 13329  012B  084C               	movf	_blink_delay^(0+256),w
 13330  012C  00F4               	movwf	??_isr
 13331  012D  35F4               	lslf	??_isr,f
 13332  012E  0DF5               	rlf	??_isr+1,f
 13333  012F  0875               	movf	??_isr+1,w
 13334  0130  3A80               	xorlw	128
 13335  0131  00F6               	movwf	??_isr+2
 13336  0132  3080               	movlw	128
 13337  0133  0276               	subwf	??_isr+2,w
 13338  0134  1D03               	skipz
 13339  0135  2939               	goto	u416_25
 13340  0136  0021               	movlb	1	; select bank1
 13341  0137  0855               	movf	_preset_blink^(0+128),w
 13342  0138  0274               	subwf	??_isr,w
 13343  0139                     u416_25:	
 13344  0139  1803               	skipnc
 13345  013A  2945               	goto	i1l103
 13346                           
 13347                           ;interrupts.c: 92: preset_blink = 0;
 13348  013B  0021               	movlb	1	; select bank1
 13349  013C  01D5               	clrf	_preset_blink^(0+128)
 13350                           
 13351                           ;interrupts.c: 93: }
 13352                           ;interrupts.c: 95: } else {
 13353  013D  2945               	goto	i1l103
 13354  013E                     i1l4113:	
 13355                           ;interrupts.c: 97: }
 13356                           ;interrupts.c: 99: } else {
 13357                           
 13358                           ;interrupts.c: 96: LATBbits.LATB1 = 0;
 13359                           
 13360                           
 13361                           ;interrupts.c: 100: if (preset_blink > 0) {
 13362  013E  0021               	movlb	1	; select bank1
 13363  013F  0855               	movf	_preset_blink^(0+128),w
 13364  0140  1903               	btfsc	3,2
 13365  0141  2945               	goto	i1l103
 13366                           
 13367                           ;interrupts.c: 101: preset_blink = 0;
 13368  0142  01D5               	clrf	_preset_blink^(0+128)
 13369  0143                     i1l4117:	
 13370                           
 13371                           ;interrupts.c: 102: LATBbits.LATB1 = 0;
 13372  0143  0022               	movlb	2	; select bank2
 13373  0144  108D               	bcf	13,1	;volatile
 13374  0145                     i1l103:	
 13375  0145  0878               	movf	??_isr+4,w
 13376  0146  0020               	movlb	0	; select bank0
 13377  0147  00FF               	movwf	127
 13378  0148  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13379  0149  0009               	retfie
 13380  014A                     __end_of_isr:	
 13381                           
 13382                           	psect	text47
 13383  13C7                     __ptext47:	
 13384 ;; *************** function i1_set_leds_top *****************
 13385 ;; Defined at:
 13386 ;;		line 16 in file "LEDs.c"
 13387 ;; Parameters:    Size  Location     Type
 13388 ;;  x               2    0[COMMON] int 
 13389 ;;  ledState        2    2[COMMON] int 
 13390 ;; Auto vars:     Size  Location     Type
 13391 ;;		None
 13392 ;; Return value:  Size  Location     Type
 13393 ;;                  1    wreg      void 
 13394 ;; Registers used:
 13395 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13396 ;; Tracked objects:
 13397 ;;		On entry : 0/0
 13398 ;;		On exit  : 0/0
 13399 ;;		Unchanged: 0/0
 13400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13404 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13405 ;;Total ram usage:        4 bytes
 13406 ;; Hardware stack levels used:    1
 13407 ;; This function calls:
 13408 ;;		Nothing
 13409 ;; This function is called by:
 13410 ;;		_isr
 13411 ;; This function uses a non-reentrant model
 13412 ;;
 13413                           
 13414                           
 13415                           ;psect for function i1_set_leds_top
 13416  13C7                     i1_set_leds_top:	
 13417                           
 13418                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 13419                           
 13420                           ;incstack = 0
 13421                           ; Regs used in i1_set_leds_top: [wreg-fsr0h+status,2+status,0]
 13422  13C7  0027               	movlb	7	; select bank7
 13423  13C8  100C               	bcf	12,0	;volatile
 13424                           
 13425                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 13426  13C9  108C               	bcf	12,1	;volatile
 13427                           
 13428                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 13429  13CA  110C               	bcf	12,2	;volatile
 13430                           
 13431                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 13432  13CB  118C               	bcf	12,3	;volatile
 13433                           
 13434                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 13435  13CC  120C               	bcf	12,4	;volatile
 13436                           
 13437                           ;LEDs.c: 22: switch (x) {
 13438  13CD  2BF2               	goto	i1l4049
 13439  13CE                     i1l4037:	
 13440                           ;LEDs.c: 23: case 1:
 13441                           
 13442                           
 13443                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 13444  13CE  0C72               	rrf	i1set_leds_top@ledState,w
 13445  13CF  1C03               	skipc
 13446  13D0  100C               	bcf	12,0	;volatile
 13447  13D1  1803               	skipnc
 13448  13D2  140C               	bsf	12,0	;volatile
 13449                           
 13450                           ;LEDs.c: 25: break;
 13451  13D3  0008               	return
 13452  13D4                     i1l4039:	
 13453                           ;LEDs.c: 26: case 2:
 13454                           
 13455                           
 13456                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 13457  13D4  0C72               	rrf	i1set_leds_top@ledState,w
 13458  13D5  1C03               	skipc
 13459  13D6  108C               	bcf	12,1	;volatile
 13460  13D7  1803               	skipnc
 13461  13D8  148C               	bsf	12,1	;volatile
 13462                           
 13463                           ;LEDs.c: 28: break;
 13464  13D9  0008               	return
 13465  13DA                     i1l4041:	
 13466                           ;LEDs.c: 29: case 3:
 13467                           
 13468                           
 13469                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 13470  13DA  0C72               	rrf	i1set_leds_top@ledState,w
 13471  13DB  1C03               	skipc
 13472  13DC  110C               	bcf	12,2	;volatile
 13473  13DD  1803               	skipnc
 13474  13DE  150C               	bsf	12,2	;volatile
 13475                           
 13476                           ;LEDs.c: 31: break;
 13477  13DF  0008               	return
 13478  13E0                     i1l4043:	
 13479                           ;LEDs.c: 32: case 4:
 13480                           
 13481                           
 13482                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 13483  13E0  0C72               	rrf	i1set_leds_top@ledState,w
 13484  13E1  1C03               	skipc
 13485  13E2  118C               	bcf	12,3	;volatile
 13486  13E3  1803               	skipnc
 13487  13E4  158C               	bsf	12,3	;volatile
 13488                           
 13489                           ;LEDs.c: 34: break;
 13490  13E5  0008               	return
 13491  13E6                     i1l4045:	
 13492                           ;LEDs.c: 35: case 5:
 13493                           
 13494                           
 13495                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 13496  13E6  0C72               	rrf	i1set_leds_top@ledState,w
 13497  13E7  1C03               	skipc
 13498  13E8  120C               	bcf	12,4	;volatile
 13499  13E9  1803               	skipnc
 13500  13EA  160C               	bsf	12,4	;volatile
 13501                           
 13502                           ;LEDs.c: 39: break;
 13503                           
 13504                           ;LEDs.c: 38: case 6:
 13505                           
 13506                           ;LEDs.c: 37: break;
 13507  13EB  0008               	return
 13508  13EC                     i1l647:	
 13509                           ;LEDs.c: 40: case 100:
 13510                           
 13511                           
 13512                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 13513  13EC  140C               	bsf	12,0	;volatile
 13514                           
 13515                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 13516  13ED  148C               	bsf	12,1	;volatile
 13517                           
 13518                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 13519  13EE  150C               	bsf	12,2	;volatile
 13520                           
 13521                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 13522  13EF  158C               	bsf	12,3	;volatile
 13523                           
 13524                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 13525  13F0  160C               	bsf	12,4	;volatile
 13526                           
 13527                           ;LEDs.c: 47: }
 13528                           
 13529                           ;LEDs.c: 46: break;
 13530  13F1  0008               	return
 13531  13F2                     i1l4049:	
 13532                           
 13533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13534                           ; Switch size 1, requested type "space"
 13535                           ; Number of cases is 1, Range of values is 0 to 0
 13536                           ; switch strategies available:
 13537                           ; Name         Instructions Cycles
 13538                           ; simple_byte            4     3 (average)
 13539                           ; direct_byte            8     6 (fixed)
 13540                           ; jumptable            260     6 (fixed)
 13541                           ;	Chosen strategy is simple_byte
 13542  13F2  0871               	movf	i1set_leds_top@x+1,w
 13543  13F3  3A00               	xorlw	0	; case 0
 13544  13F4  1903               	skipnz
 13545  13F5  2BF7               	goto	i1l4537
 13546  13F6  2C0E               	goto	i1l648
 13547  13F7                     i1l4537:	
 13548                           
 13549                           ; Switch size 1, requested type "space"
 13550                           ; Number of cases is 7, Range of values is 1 to 100
 13551                           ; switch strategies available:
 13552                           ; Name         Instructions Cycles
 13553                           ; simple_byte           22    12 (average)
 13554                           ; direct_byte          209     9 (fixed)
 13555                           ; jumptable            263     9 (fixed)
 13556                           ;	Chosen strategy is simple_byte
 13557  13F7  0870               	movf	i1set_leds_top@x,w
 13558  13F8  3A01               	xorlw	1	; case 1
 13559  13F9  1903               	skipnz
 13560  13FA  2BCE               	goto	i1l4037
 13561  13FB  3A03               	xorlw	3	; case 2
 13562  13FC  1903               	skipnz
 13563  13FD  2BD4               	goto	i1l4039
 13564  13FE  3A01               	xorlw	1	; case 3
 13565  13FF  1903               	skipnz
 13566  1400  2BDA               	goto	i1l4041
 13567  1401  3A07               	xorlw	7	; case 4
 13568  1402  1903               	skipnz
 13569  1403  2BE0               	goto	i1l4043
 13570  1404  3A01               	xorlw	1	; case 5
 13571  1405  1903               	skipnz
 13572  1406  2BE6               	goto	i1l4045
 13573  1407  3A03               	xorlw	3	; case 6
 13574  1408  1903               	skipnz
 13575  1409  2C0E               	goto	i1l648
 13576  140A  3A62               	xorlw	98	; case 100
 13577  140B  1903               	skipnz
 13578  140C  2BEC               	goto	i1l647
 13579  140D  2C0E               	goto	i1l648
 13580  140E                     i1l648:	
 13581  140E  0008               	return
 13582  140F                     __end_ofi1_set_leds_top:	
 13583  007E                     btemp	set	126	;btemp
 13584  007E                     int$flags	set	126
 13585  007E                     wtemp	set	126
 13586  007E                     wtemp0	set	126
 13587  0080                     wtemp1	set	128
 13588  0082                     wtemp2	set	130
 13589  0084                     wtemp3	set	132
 13590  0086                     wtemp4	set	134
 13591  0088                     wtemp5	set	136
 13592  007F                     wtemp6	set	127
 13593  007E                     ttemp	set	126
 13594  007E                     ttemp0	set	126
 13595  0081                     ttemp1	set	129
 13596  0084                     ttemp2	set	132
 13597  0087                     ttemp3	set	135
 13598  007F                     ttemp4	set	127
 13599  007E                     ltemp	set	126
 13600  007E                     ltemp0	set	126
 13601  0082                     ltemp1	set	130
 13602  0086                     ltemp2	set	134
 13603  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1066
    BSS         204
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     79      80
    BANK1            80     31      80
    BANK2            80      0      63
    BANK3            80      0      64
    BANK4            80      0      58
    BANK5            80      0      58
    BANK6            80      0      58
    BANK7            80      0      80
    BANK8            80      0      80
    BANK9            80      0      58
    BANK10           80      0      64
    BANK11            8      0       0
    BANK12            0      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_set_leds_top

Critical Paths under _main in BANK0

    _main->___fttol
    _updateSwitchTap->___aldiv
    _updateSwitchBypass->_setDoublePressState
    _updateSwitchBypass->_setFeedbackState
    _updateSwitchBypass->_setSwitchBypassState
    _setFeedbackState->_wait_ms
    _setDoublePressState->_wait_ms
    _showBootSequence->_star_tactiles
    _star_tactiles->_wait_ms
    _solidring_tactiles->_wait_ms
    _set_subdivision->___fttol
    ___fttol->_map
    ___awtoft->___ftpack
    _read_top_tactile->_wait_ms
    _read_bottom_tactile->_wait_ms
    _modulation->___aldiv
    ___aldiv->___wmul
    _map->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___ftadd->___ftpack
    _initSwitchBypass->_setSwitchBypassState
    _setSwitchBypassState->_wait_ms
    _wait_ms->___lmul
    ___altoft->___ftpack
    _ReadSavedSettings->_set_leds_top

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_set_subdivision
    _set_subdivision->___fttol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   51310
                                             10 BANK1     21    21      0
                _ConfigureOscillator
                            _InitApp
                     _InitializeTaps
                  _ReadSavedSettings
                           ___altoft
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                        _adc_convert
                   _initSwitchBypass
                                _map
                         _modulation
                _read_bottom_tactile
                   _read_top_tactile
                    _set_subdivision
                   _showBootSequence
                 _updateSwitchBypass
                    _updateSwitchTap
                        _update_mode
 ---------------------------------------------------------------------------------
 (1) _update_mode                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _updateSwitchTap                                      9     9      0    2607
                                             21 BANK0      9     9      0
                            ___aldiv
                _setDoublePressState
                    _setLongTapState
 ---------------------------------------------------------------------------------
 (2) _setLongTapState                                      4     2      2     194
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _updateSwitchBypass                                   2     2      0    5108
                                             18 BANK0      2     2      0
                _setDoublePressState
                   _setFeedbackState
               _setSwitchBypassState
 ---------------------------------------------------------------------------------
 (2) _setFeedbackState                                     4     2      2    1588
                                             14 BANK0      4     2      2
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _setDoublePressState                                  4     2      2    1696
                                             14 BANK0      4     2      2
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _showBootSequence                                     1     1      0    6335
                                             21 BANK0      1     1      0
                 _getCurrentLEDState
                    _restoreLEDState
                 _solidring_tactiles
                      _star_tactiles
 ---------------------------------------------------------------------------------
 (2) _star_tactiles                                        7     7      0    3246
                                             14 BANK0      7     7      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _solidring_tactiles                                   3     3      0    3089
                                             14 BANK0      3     3      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _restoreLEDState                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurrentLEDState                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_subdivision                                      4     0      4    7286
                                              6 BANK1      4     0      4
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     956
                                             71 BANK0      8     4      4
                                              0 BANK1      6     6      0
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2840
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _read_top_tactile                                     1     1      0    2574
                                             14 BANK0      1     1      0
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _read_bottom_tactile                                  1     1      0    1864
                                             14 BANK0      1     1      0
                    _set_leds_bottom
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _modulation                                          12     8      4     971
                                             21 BANK0     12     8      4
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     556
                                              6 BANK0     15     7      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _map                                                 18     3     15   11425
                                             53 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     237
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3203
                                             21 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2645
                                             37 BANK0     16    10      6
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3563
                                              8 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _initSwitchBypass                                     2     2      0    1847
                                             18 BANK0      2     2      0
               _getSwitchBypassState
               _setSwitchBypassState
 ---------------------------------------------------------------------------------
 (2) _setSwitchBypassState                                 4     2      2    1824
                                             14 BANK0      4     2      2
            _updateSwitchBypassState
                            _wait_ms
 ---------------------------------------------------------------------------------
 (3) _wait_ms                                              2     0      2    1394
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     220
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _updateSwitchBypassState                              2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getSwitchBypassState                                 2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_convert                                          4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___altoft                                             8     4      4    2311
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2109
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReadSavedSettings                                    0     0      0    1909
                     _FLASH_ReadWord
                    _set_leds_bottom
                       _set_leds_top
 ---------------------------------------------------------------------------------
 (3) _set_leds_top                                         4     0      4    1180
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _set_leds_bottom                                      2     0      2     470
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     259
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitializeTaps                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
                           _init_pwm
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
                        _init_timer0
                        _init_timer2
 ---------------------------------------------------------------------------------
 (3) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0     236
                                              4 COMMON     5     5      0
                     i1_set_leds_top
 ---------------------------------------------------------------------------------
 (6) i1_set_leds_top                                       4     0      4     236
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_adc
     _init_pwm
       _init_timer0
       _init_timer2
   _InitializeTaps
   _ReadSavedSettings
     _FLASH_ReadWord
     _set_leds_bottom
     _set_leds_top
   ___altoft
     ___ftpack
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___altoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___fttol
     ___altoft (ARG)
       ___ftpack
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     _map (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _adc_convert
   _initSwitchBypass
     _getSwitchBypassState
     _setSwitchBypassState
       _updateSwitchBypassState
       _wait_ms
         ___lmul
   _map
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   _modulation
     ___aldiv
       ___wmul (ARG)
     ___wmul
   _read_bottom_tactile
     _set_leds_bottom
     _wait_ms
       ___lmul
   _read_top_tactile
     _set_leds_top
     _wait_ms
       ___lmul
   _set_subdivision
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       _map (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
   _showBootSequence
     _getCurrentLEDState
     _restoreLEDState
     _solidring_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
     _star_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
   _updateSwitchBypass
     _setDoublePressState
       _wait_ms
         ___lmul
     _setFeedbackState
       _wait_ms
         ___lmul
     _setSwitchBypassState
       _updateSwitchBypassState
       _wait_ms
         ___lmul
   _updateSwitchTap
     ___aldiv
       ___wmul (ARG)
     _setDoublePressState
       _wait_ms
         ___lmul
     _setLongTapState
   _update_mode

 _isr (ROOT)
   i1_set_leds_top

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3F       9       78.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      3A      13       72.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3A      15       72.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0     2F5      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      3A      18       72.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      3A      24       72.5%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0      40      26       80.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     2F5      28        0.0%
BANK11               8      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12               0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Oct 26 20:02:05 2016

                     _update_mode 1382                      ___altoft@exp 002E                       __CFG_CP$OFF 0000  
                   ___altoft@sign 002F                      ___awdiv@sign 0026        setDoublePressState@f_state 002E  
             ___wmul@multiplicand 0022                   _updateSwitchTap 0BBD                      ___ftadd@exp1 0034  
                    ___ftadd@exp2 0033                      ___ftadd@sign 0032                               l321 10E9  
                             l285 050A                               l269 0237                               l480 0BBC  
            __size_of_adc_convert 0019                               l660 1285                               l652 1252  
                             l492 1F3A                               l654 1255                               l655 1258  
                             l647 15CA                               l656 125B                               l648 15EE  
                             l657 125E                               l659 1261                               l777 111F  
                             l785 1159                               l795 13A8                               l797 13AB  
                             l798 13AF                               l799 13BF                               l988 0793  
                             _PR2 001B      solidring_tactiles@ring_delay 0030                               _map 16D6  
                             _isr 0004                               _tap 01A0                      __CFG_BORV$LO 0000  
                             wreg 0009                      __CFG_IESO$ON 0000                      __CFG_FOSC$HS 0000  
         __end_of_set_leds_bottom 1286                      __CFG_LVP$OFF 0000                      ___ftdiv@cntr 004F  
                    ___ftdiv@sign 0054                              _B25k 03A0                              l1102 0BD3  
                            l1116 0C82                              l1205 1F67                              l1260 1665  
                            l3121 15AA                              l3105 10A0                              l3123 15B2  
                            l3131 15D1                              l3125 15BA                              l1373 1635  
                            l4005 155F                              l3109 10AA                              l1374 163D  
                            l1366 1622                              l3127 15C2                              l3119 15A2  
                            l4031 1596                              l4023 1585                              l4015 1567  
                            l3153 1268                              l4017 1573                              l3305 143A  
                            l1457 17DE                              l3171 160E                              l3163 15F8  
                            l4027 158E                              l4203 0505                              l1397 0A6D  
                            l4221 0565                              l4213 054E                              l4141 023B  
                            l3167 15FF                              l3423 09FD                              l3335 1051  
                            l4231 05C6                              l4223 05A6                              l4143 023E  
                            l4127 0211                              l3177 1627                              l3169 1609  
                            l3441 0A26                              l3409 1FC3                              l4217 0557  
                            l4161 02B7                              l3179 162F                              l3451 0A48  
                            l3419 09F6                              l3531 0931                              l3371 1676  
                            l3259 0837                              l4235 05D1                              l4227 05BB  
                            l4251 0601                              l4171 034C                              l3461 0A69  
                            l3453 0A4C                              l3429 0A0C                              l3517 08F8  
                            l3509 08DF                              l3381 1694                              l3349 1F61  
                            l3621 17F0                              l4245 05FB                              l4253 061B  
                            l3447 0A39                              l3615 17D4                              l3607 17B5  
                            l4271 06D3                              l4247 05FE                              l4239 05DD  
                            l4191 0440                              l4183 03E6                              l4167 030C  
                            l3465 0A7F                              l3449 0A43                              l3561 099E  
                            l3553 098A                              l3537 0947                              l3393 16BF  
                            l3617 17E2                              l3609 17C6                              l3801 0797  
                            l4273 067E                              l4257 0657                              l3459 0A5F  
                            l3379 1686                              l4531 0BA8                              l3811 07B9  
                            l3715 13B3                              l4275 06D9                              l4195 0480  
                            l4179 03A6                              l4533 15D7                              l3469 0A91  
                            l3565 09A6                              l3549 0982                              l3397 16CD  
                            l3389 16B4                              l3813 07BE                              l3821 07D0  
                            l3717 13C3                              ?_map 0055                              l4535 126E  
                            l3479 0AAC                              l3495 089E                              l3807 07B1  
                            l3911 0CC9                              l3903 0CBD                              l4199 04C5  
                            l3657 1481                              l3489 0888                              l3761 073A  
                            l3913 0D13                              l4529 0607                              l3683 1114  
                            l3851 0BE4                              l3589 177C                              l3781 0764  
                            l3757 0727                              l3917 0D32                              l3925 0D71  
                            l3845 0BC8                              l3695 1145                              l3783 076C  
                            l3871 0C25                              l3863 0C00                              l3961 0B1E  
                            l3769 0746                              l3865 0C1D                              l3963 0B4A  
                            l3795 0785                              l3883 0C42                              l3965 0B76  
                            l3957 0AC5                              l3885 0C4A                              l3959 0AF2  
                            l3895 0C7A                              l3887 0C58                              l3985 129B  
                            l3969 0BA2                              l3987 12AB                              ?_isr 0070  
                            l3999 1554                              u3005 08E0                              u3015 08EF  
                            u2305 10AB                              u3025 08F9                              u3105 0991  
                            u2315 10B2                              u3300 147F                              u2405 162A  
                            u3135 09A7                              u3215 17B6                              u2520 1438  
                            u3145 09AD                              u3065 0953                              u2515 141A  
                            u3075 0963                              u2445 1644                              u2365 1604  
                            u2605 1F6D                              u3245 17D5                              u3095 098B  
                            u3335 110D                              u4215 0299                              u2385 161D  
                            u3185 1784                              u2545 1F84                              u4313 0532  
                            u4305 0503                              u4225 02B5                              u3275 1FE6  
                            u2555 1044                              u3435 0720                              u4235 032A  
                            u3285 1FEC                              u3365 113E                              u3445 0733  
                            u4245 034A                              u2655 1689                              u2495 0844  
                            u2575 1F4F                              u4255 03C4                              u2825 0A27  
                            u4265 03E4                              u2915 0A60                              u2675 1695  
                            u2595 1F68                              u3475 074C                              u3715 0C2B  
                            u3395 1395                              u4355 0560                              u4275 045E  
                            u4195 022D                              u2685 16A9                              u3565 07A3  
                            u3805 0CA3                              u4285 047E                              u2855 0A3A  
                            u2695 16B5                              u3815 0CD2                              u4383 06C4  
                            u4375 06AC                              u4295 04E3                              u3825 0CE7  
                            u3835 0CFB                              u2885 0A4D                              u3685 0C09  
                            u3855 0D18                              u3775 0C6A                              u3945 156A  
                            u2985 08B0                              u2995 08C0                              u3795 0C93  
                            u3965 1574                              u3895 12A0                              u3975 157E  
                            u3985 1586                     _star_tactiles 0802                      __CFG_WRT$OFF 0000  
                   __CFG_FCMEN$ON 0000                              _iCnt 014A                              _mod1 04A0  
                            _mod2 0220                              _mod3 02A0                              _mod4 0320  
                            _mod5 2378                              _main 0202                      ___ftpack@arg 0020  
                    ___ftpack@exp 0023                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              fsr1l 0006  
                            map@x 0055                              btemp 007E                     __CFG_BOREN$ON 0000  
                            ltemp 007E          __end_of_setFeedbackState 1F98                              start 014A  
                            ttemp 007E                              wtemp 007E      __end_of_getSwitchBypassState 1EAB  
    updateSwitchTap@tapCntDivisor 003B      __end_of_setSwitchBypassState 1459                   ?i1_set_leds_top 0070  
                   __CFG_MCLRE$ON 0000                      ___ftmul@cntr 0043                      ___ftmul@sign 0044  
                 __end_of_InitApp 1097                 ??_restoreLEDState 0020                      ___fttol@exp1 00A5  
                           ??_map 0064                      ___fttol@lval 00A1                             ??_isr 0074  
                 _switchBypass_up 015C         __size_of_initSwitchBypass 000F                   __end_of___aldiv 16D6  
                           ?_main 0070                   __end_of___awdiv 159B                   __end_of___ftadd 0AC4  
                           _CCPR1 0291                             _CCPR2 0298                             _CCPR3 0311  
                           _CCPR4 0318                             _CCPR5 031C                             _CCPR9 061A  
                   __CFG_WDTE$OFF 0000                   __end_of___ftdiv 091A                   __end_of___ftneg 1EC4  
                 __end_of___ftmul 09CE                   ___awdiv@divisor 0020                   __end_of___fttol 1800  
                           i1l103 0145                             i1l647 13EC                             i1l648 140E  
                 ___awdiv@counter 0025                             _iB25k 0420               _ConfigureOscillator 1EA3  
                    ?_init_timer0 0070                      ?_init_timer2 0070               ___lmul@multiplicand 0024  
                 _switchTap_state 00EF                 ??_setLongTapState 0022                     ___awtoft@sign 002D  
                           _delay 23F2                             _myBuf 0520                     ___ftpack@sign 0024  
                           _timer 00C3                    ?_star_tactiles 0070                             main@i 00BB  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080                   __end_of_wait_ms 10F8                             ttemp0 007E  
                           ttemp1 0081                             ttemp2 0084                             ttemp3 0087  
                           ttemp4 007F                             status 0003       __end_of_read_bottom_tactile 1129  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F              ?_ConfigureOscillator 0070                _getCurrentLEDState 1EDA  
              _updateSwitchBypass 0711           __end_of_updateSwitchTap 0D88                   __initialization 014C  
         _updateSwitchBypassState 0002                      __end_of_main 0711           __size_of_InitializeTaps 0026  
             ?_getCurrentLEDState 0070               ?_updateSwitchBypass 0070                    __CFG_LPBOR$OFF 0000  
                 _set_subdivision 0AC4                            ??_main 00AA                     ___fttol@sign1 00A0  
         __size_of_FLASH_ReadWord 0020        __end_of_solidring_tactiles 1341                    _feedback_timer 00C7  
                  _feedback_state 006F                    _feedback_start 00D2                  ?_set_leds_bottom 0020  
                __end_of___altoft 12C3                            _ADRESH 009C                            _ADRESL 009B  
                ___awdiv@dividend 0022               _baseline_delay_time 00DA              ??_getCurrentLEDState 0020  
                __end_of___awtoft 1FDA                  __end_of___ftpack 1654              ??_updateSwitchBypass 0032  
                          i1l4101 0114                            i1l4041 13DA                            i1l4113 013E  
                          i1l4043 13E0                            i1l4045 13E6                            i1l4037 13CE  
                          i1l4117 0143                            i1l4039 13D4                            i1l4071 0094  
                          i1l4049 13F2                            i1l4065 0081                            i1l4073 0095  
                          i1l4083 00BB                            i1l4093 00EF                            i1l4085 00CA  
                          i1l4095 00F8                            i1l4087 00CC                            i1l4097 0107  
                          i1l4537 13F7                            u410_23 00DF                            u403_25 007B  
                          u405_25 008E                            u415_25 0125                            u408_23 00AE  
                          _PMADRH 0192                            u416_25 0139                            _PMADRL 0191  
                          _PMDATH 0194                            _PMDATL 0193                            _PMCON2 0196  
                  _debounce_count 0134                    _debounce_mode1 0136                    _debounce_mode2 0138  
                       ??_InitApp 0020             ??_ConfigureOscillator 0020          __end_of_read_top_tactile 1163  
                  __CFG_PWRTE$OFF 0000                            ___lmul 1097                         ??___aldiv 002E  
                          ___wmul 1F5E                         ??___awdiv 0024                         ??___ftadd 002E  
                  __CFG_STVREN$ON 0000                         ??___ftdiv 004B                         ??___ftneg 0023  
                       ??___ftmul 003B                         ??___fttol 006B                  __end_of_init_adc 1ECE  
                __end_of_init_pwm 1382         __size_of_showBootSequence 002B                  ___awdiv@quotient 0027  
           ___ftmul@f3_as_product 0040                      __pdataBIGRAM 2378           FLASH_ReadWord@flashAddr 0020  
            _getSwitchBypassState 1EA7                         ??_wait_ms 002E              _setSwitchBypassState 140F  
                 ??_star_tactiles 002E            setLongTapState@f_state 0020           __end_of__initialization 01FE  
                      ___altoft@c 0028                        ___ftadd@f1 0028                        ___ftadd@f2 002B  
               _bypass_turning_on 00D1                        ___ftdiv@f1 0048                        ___ftdiv@f2 0045  
                      ___ftdiv@f3 0050                    _top_push_state 00E8         ??_updateSwitchBypassState 0022  
                      ___ftneg@f1 0020               _switchBypass_toggle 0148                        ___awtoft@c 0028  
         __end_of_set_subdivision 0BBD                        ___ftmul@f1 0035                        ___ftmul@f2 0038  
                      ___fttol@f1 0067                  ?_updateSwitchTap 0070                      ?_update_mode 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 0003                      __pidataBANK1 1F15  
                    __pidataBANK2 1EEC                      __pidataBANK4 1211                      __pidataBANK5 11D7  
                    __pidataBANK6 119D                      __pidataBANK7 14F9                      __pidataBANK8 14A9  
                    __pidataBANK9 1163                  _initSwitchBypass 1000                   _doubleTap_state 007D  
                  _OPTION_REGbits 0095             ?_getSwitchBypassState 0020             ?_setSwitchBypassState 002E  
            __size_of_init_timer0 0007              __size_of_init_timer2 0009                        __pbssBANK1 00BF  
                      __pbssBANK2 0120                        __pbssBANK3 01A0                  ??i1_set_leds_top 0074  
                 _restoreLEDState 1EFF                   __CFG_VCAPEN$OFF 0000                 ?_setFeedbackState 002E  
                      _delay_time 00DE                  _long_press_limit 00E4      __size_of_setDoublePressState 002D  
                      _delayfound 013C                        __pmaintext 0202                ??_setFeedbackState 0030  
                  _InitializeTaps 1FDA                           ?___lmul 0020                           ?___wmul 0020  
                      __pintentry 0004                        _blink_rate 00EA                     ??_adc_convert 0022  
                       ?___altoft 0028                    ___lmul@product 0028                   _setLongTapState 1F44  
                       ?___awtoft 0028                         ?___ftpack 0020                    _FLASH_ReadWord 1F98  
 __end_of_updateSwitchBypassState 0003                       modulation@x 0035                       modulation@y 0037  
                 _debounce_bypass 0132                     _suspend_blink 00D7                         ?_init_adc 0070  
                       ?_init_pwm 0070                           _InitApp 1067            __end_of_InitializeTaps 2000  
                   ?_set_leds_top 0020                        _knob1_prev 0150                        _knob2_prev 0152  
                      _knob3_prev 0154                        _knob4_prev 0156                        _knob5_prev 0158  
                ?_set_subdivision 00A6                           ___aldiv 1654                           ___awdiv 1549  
                 __size_of___lmul 0030                           ___ftadd 09CE                           ___ftdiv 0871  
                         ___ftneg 1EBB                        _knob_1_pos 00C9                        _knob_2_pos 013E  
                 __size_of___wmul 001C                           ___ftmul 091A                        _knob_3_pos 0140  
                         ___fttol 1761                        _knob_4_pos 0142                        _knob_5_pos 0144  
               _switchTap_pressed 00D9                        ??___altoft 002C                  _showBootSequence 100F  
          __end_of_FLASH_ReadWord 1FB8                        ??___awtoft 002B                        ??___ftpack 0025  
              InitializeTaps@itap 0021                           __ptext1 1382                           __ptext2 0BBD  
                         __ptext3 1F44                           __ptext4 0711                           __ptext5 1F7A  
                         __ptext6 103A                           __ptext7 100F                           __ptext8 0802  
                         __ptext9 1301            ??_getSwitchBypassState 0022                         _T2CONbits 001C  
                    __size_of_map 008B                      __size_of_isr 0146            ??_setSwitchBypassState 0030  
             __end_of_adc_convert 1F44                  ___aldiv@dividend 002A                           _wait_ms 10C7  
         __end_of_restoreLEDState 1F15                           clrloop0 07F5              end_of_initialization 01FE  
                      _modulation 12C3                           init_ram 1ECE                        ??_init_adc 0020  
                         initloop 1ECF                        ??_init_pwm 0020      updateSwitchBypassState@state 0020  
              _solidring_tactiles 1301                     _longTap_timer 00CB                     _longTap_state 00EC  
                   _longTap_start 00D3                    ??_set_leds_top 0024                 ?_read_top_tactile 0070  
                 ?_InitializeTaps 0070           __end_of_setLongTapState 1F5E            i1set_leds_top@ledState 0072  
              ??_read_top_tactile 002E                  ___aldiv@quotient 0031      __size_of_read_bottom_tactile 0031  
             ?_solidring_tactiles 0070                       wait_ms@time 002C         FLASH_ReadWord@GIEBitValue 0022  
            __size_of_update_mode 0045                   ?_FLASH_ReadWord 0020                         _PORTCbits 000E  
                       _PORTDbits 000F                         _PORTEbits 0010              star_tactiles@reverse 0030  
                       _TRISBbits 008D                         _TRISCbits 008E                         _TRISDbits 008F  
                       _TRISEbits 0090                         _TRISFbits 030C                         _TRISGbits 030D  
                       _SPI_Value 0130           setFeedbackState@f_state 002E              ??_solidring_tactiles 002E  
     __end_of_ConfigureOscillator 1EA7       __size_of_getCurrentLEDState 0012                        map@out_max 0061  
                      map@out_min 005E       __size_of_updateSwitchBypass 00E3          __end_of_initSwitchBypass 100F  
                     _CCP1CONbits 0293                       ___ftdiv@exp 0053          __size_of_set_leds_bottom 003B  
                     _CCP2CONbits 029A              _switchBypass_pressed 00CF                       _CCP3CONbits 0313  
                     _CCP4CONbits 031A                       _CCP5CONbits 031E                       _CCP6CONbits 0613  
                     _CCP7CONbits 0616                       ___ftmul@exp 003F                adc_convert@channel 0023  
                     _CCP8CONbits 0619                       _CCP9CONbits 061C              set_leds_top@ledState 0022  
                  __end_of___lmul 10C7                     __pidataBIGRAM 0D88                    __end_of___wmul 1F7A  
                     _adc_convert 1F2B                    _switchTap_down 00D8               start_initialization 014C  
             _setDoublePressState 103A                       __end_of_map 1761                       __end_of_isr 014A  
                ?_restoreLEDState 0070             __end_of_star_tactiles 0871                       ?_modulation 0035  
            ?_setDoublePressState 002E                  ?_setLongTapState 0020                          ??___lmul 0028  
                        ??___wmul 0024                       __pdataBANK0 006F                       __pdataBANK1 00DA  
                     __pdataBANK2 014C                       __pdataBANK4 0220                       __pdataBANK5 02A0  
                     __pdataBANK6 0320                       __pdataBANK7 03A0                       __pdataBANK8 0420  
                     __pdataBANK9 04A0                     _tap_iteration 00E6          __size_of_updateSwitchTap 01CB  
               __size_of___altoft 003D                       __pbssBANK10 0520         __size_of_setFeedbackState 001E  
               __size_of___awtoft 0022                 __size_of___ftpack 0065                     ??_init_timer0 0020  
                   ??_init_timer2 0020                       __pbssCOMMON 0079              __end_of_set_leds_top 15EF  
                       ___latbits 0003                _switchBypass_state 00EE                     __pcstackBANK0 0020  
                   __pcstackBANK1 00A0                     _delay_counter 013A          __end_of_showBootSequence 103A  
        ?_updateSwitchBypassState 0020                          ?_InitApp 0070             ??_setDoublePressState 0030  
               __size_of_init_adc 000A                 __size_of_init_pwm 0041                          ?___aldiv 0026  
               ??_set_leds_bottom 0022                _currentBypassState 00EB                          ?___awdiv 0020  
                        ?___ftadd 0028                          ?___ftdiv 0045                          ?___ftneg 0020  
                        ?___ftmul 0035                          ?___fttol 0067                       _blink_delay 014C  
             __size_of_modulation 003E                       _blink_state 015E                          _CCPTMRS0 029D  
                        _CCPTMRS1 029E                          _CCPTMRS2 029F                          ?_wait_ms 002C  
             _read_bottom_tactile 10F8               __end_of_init_timer0 1EB2               __end_of_init_timer2 1EBB  
                       _mod_value 0146                         _mod_timer 0124                  ??_InitializeTaps 0020  
                 ___aldiv@divisor 0026                   ___aldiv@counter 002F                    ___wmul@product 0024  
                        _LATBbits 010D                          _LATDbits 010F                          _LATFbits 038C  
                        _LATGbits 038D                    _mod_delay_time 015A                         clear_ram0 07F4  
                       _tap_timer 0079                         _tap_total 0128                     set_leds_top@x 0020  
                ??_FLASH_ReadWord 0022              ?_read_bottom_tactile 0070           __size_ofi1_set_leds_top 0048  
       initSwitchBypass@initState 0032                         map@in_max 005B                         map@in_min 0058  
                       _sub_timer 00BF                        _ADCON0bits 009D                        _ADCON1bits 009E  
                       main@i_319 00BD          __size_of_set_subdivision 00F9                 ___wmul@multiplier 0020  
                set_subdivision@x 00A6                  set_subdivision@y 00A8         __size_of_read_top_tactile 003A  
   __size_of_getSwitchBypassState 0004     __size_of_setSwitchBypassState 004A                 ??_updateSwitchTap 0035  
               ___lmul@multiplier 0020                 _ReadSavedSettings 1459                 ?_initSwitchBypass 0070  
              ?_ReadSavedSettings 0070       setSwitchBypassState@f_state 002E                ??_initSwitchBypass 0032  
                __size_of_InitApp 0030                       _mode1_state 014B                     ??_update_mode 0020  
                     _mode2_state 00D4             ??_read_bottom_tactile 002E               updateSwitchTap@iCnt 003D  
             ??_ReadSavedSettings 0024                        _APFCONbits 011D                 star_tactiles@iLed 0031  
                __size_of___aldiv 0082                  __size_of___awdiv 0052                  __size_of___ftadd 00F6  
                __size_of___ftdiv 00A9                      ?_adc_convert 0020                  __size_of___ftneg 0009  
                        ___altoft 1286                  __size_of___ftmul 00B4                  __size_of___fttol 009F  
                        ___awtoft 1FB8             __size_of_set_leds_top 0054                          ___ftpack 15EF  
                        _map$2065 0064            _preset_programmning_on 00D6            star_tactiles@iLed_1391 0033  
                      _ANSELEbits 0190                        _ANSELFbits 040C                  set_leds_bottom@x 0020  
                _setFeedbackState 1F7A                       _init_timer0 1EAB                       _init_timer2 1EB2  
              _delay_time_changed 014E        __end_of_getCurrentLEDState 1EEC        __end_of_updateSwitchBypass 07F4  
                        __ptext10 1EFF                          __ptext11 1EDA                          __ptext20 16D6  
                        __ptext12 0AC4                          __ptext21 1EBB                          __ptext13 1761  
                        __ptext30 1EA7                          __ptext22 091A                          __ptext14 1FB8  
                        __ptext31 1F2B                          __ptext23 0871                          __ptext15 1129  
                        __ptext40 1067                          __ptext32 1549                          __ptext24 09CE  
                        __ptext16 10F8                          __ptext41 1341                          __ptext33 1286  
                        __ptext25 1000                          __ptext17 12C3                          __ptext42 1EB2  
                        __ptext34 15EF                          __ptext26 140F                          __ptext18 1F5E  
                        __ptext43 1EAB                          __ptext35 1459                          __ptext27 10C7  
                        __ptext19 1654                          __ptext44 1EC4                          __ptext36 159B  
                        __ptext28 1097                          __ptext45 1EA3                          __ptext37 124B  
                        __ptext29 0002                          __ptext38 1F98                          __ptext47 13C7  
                        __ptext39 1FDA         __end_of_ReadSavedSettings 14A9                  __size_of_wait_ms 0031  
     __size_of_solidring_tactiles 0040                          _ledState 0120                      ??_modulation 0039  
                     _mod_counter 00CD                          _init_adc 1EC4                     __size_of_main 050F  
                        _init_pwm 1341      __size_of_ConfigureOscillator 0004                      _set_leds_top 159B  
                        _num_taps 00ED                          int$flags 007E                   i1set_leds_top@x 0070  
             __end_of_update_mode 13C7                __end_of_modulation 1301                        _INTCONbits 000B  
                     _tap_history 01CC                 ??_set_subdivision 006F                          intlevel1 0000  
                 _set_leds_bottom 124B                        _PMCON1bits 0195                 ?_showBootSequence 0070  
               __CFG_CLKOUTEN$OFF 0000          __size_of_restoreLEDState 0016                ??_showBootSequence 0035  
                      _OSCCONbits 0099                      _preset_blink 00D5                    i1_set_leds_top 13C7  
__size_of_updateSwitchBypassState 0001                      wait_ms@timel 012C            __size_of_star_tactiles 006F  
        __size_of_setLongTapState 001A                  _read_top_tactile 1129                      ___aldiv@sign 0030  
      __size_of_ReadSavedSettings 0050            main@adjusted_pot_value 00B9       __end_of_setDoublePressState 1067  
                    _CCP10CONbits 061F                 _bottom_push_state 00E2            __end_ofi1_set_leds_top 140F  
