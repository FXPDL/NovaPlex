

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Dec 20 08:15:16 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	idataBANK5,global,class=CODE,delta=2
     9                           	psect	idataBANK6,global,class=CODE,delta=2
    10                           	psect	idataBANK7,global,class=CODE,delta=2
    11                           	psect	idataBANK8,global,class=CODE,delta=2
    12                           	psect	idataBANK9,global,class=CODE,delta=2
    13                           	psect	idataBIGRAM,global,class=CODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	dataBIGRAM,global,delta=1
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    26                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    27                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1
    28                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1
    29                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2
    49                           	psect	text14,local,class=CODE,merge=1,delta=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2
    60                           	psect	text25,local,class=CODE,merge=1,delta=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2
    67                           	psect	text32,local,class=CODE,merge=1,delta=2
    68                           	psect	text33,local,class=CODE,merge=1,delta=2
    69                           	psect	text34,local,class=CODE,merge=1,delta=2
    70                           	psect	text35,local,class=CODE,merge=1,delta=2
    71                           	psect	text36,local,class=CODE,merge=1,delta=2
    72                           	psect	text37,local,class=CODE,merge=1,delta=2
    73                           	psect	text38,local,class=CODE,merge=1,delta=2
    74                           	psect	text39,local,class=CODE,merge=1,delta=2
    75                           	psect	text40,local,class=CODE,merge=1,delta=2
    76                           	psect	text41,local,class=CODE,merge=1,delta=2
    77                           	psect	text42,local,class=CODE,merge=1,delta=2
    78                           	psect	text43,local,class=CODE,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,merge=1,delta=2
    80                           	psect	text45,local,class=CODE,merge=1,delta=2
    81                           	psect	intentry,global,class=CODE,delta=2
    82                           	psect	text47,local,class=CODE,merge=1,delta=2
    83                           	dabs	1,0x920,80
    84                           	dabs	1,0x8A0,80
    85                           	dabs	1,0x820,80
    86                           	dabs	1,0x7A0,80
    87                           	dabs	1,0x720,80
    88                           	dabs	1,0x6A0,80
    89                           	dabs	1,0x652,30
    90                           	dabs	1,0x620,50
    91                           	dabs	1,0x5A8,72
    92                           	dabs	1,0x23F2,0,_delay
    93                           	dabs	1,0x2378,0,_mod5
    94                           	dabs	1,0x7E,2
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0110                     	;# 
   149  0116                     	;# 
   150  0117                     	;# 
   151  011D                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0197                     	;# 
   165  0199                     	;# 
   166  0199                     	;# 
   167  0199                     	;# 
   168  019A                     	;# 
   169  019A                     	;# 
   170  019A                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019C                     	;# 
   177  019C                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019D                     	;# 
   181  019D                     	;# 
   182  019E                     	;# 
   183  019E                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  020D                     	;# 
   189  020F                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  0219                     	;# 
   207  021A                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021D                     	;# 
   211  021E                     	;# 
   212  021F                     	;# 
   213  028C                     	;# 
   214  028D                     	;# 
   215  0291                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0298                     	;# 
   220  0298                     	;# 
   221  0299                     	;# 
   222  029A                     	;# 
   223  029D                     	;# 
   224  029E                     	;# 
   225  029F                     	;# 
   226  030C                     	;# 
   227  030D                     	;# 
   228  0311                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0318                     	;# 
   233  0318                     	;# 
   234  0319                     	;# 
   235  031A                     	;# 
   236  031C                     	;# 
   237  031C                     	;# 
   238  031D                     	;# 
   239  031E                     	;# 
   240  038C                     	;# 
   241  038D                     	;# 
   242  0394                     	;# 
   243  0395                     	;# 
   244  0396                     	;# 
   245  040C                     	;# 
   246  040D                     	;# 
   247  0411                     	;# 
   248  0411                     	;# 
   249  0412                     	;# 
   250  0413                     	;# 
   251  0414                     	;# 
   252  0415                     	;# 
   253  0416                     	;# 
   254  0417                     	;# 
   255  0418                     	;# 
   256  0418                     	;# 
   257  0419                     	;# 
   258  041A                     	;# 
   259  041B                     	;# 
   260  041C                     	;# 
   261  041D                     	;# 
   262  041E                     	;# 
   263  048D                     	;# 
   264  0491                     	;# 
   265  0491                     	;# 
   266  0492                     	;# 
   267  0492                     	;# 
   268  0493                     	;# 
   269  0493                     	;# 
   270  0493                     	;# 
   271  0494                     	;# 
   272  0494                     	;# 
   273  0495                     	;# 
   274  0495                     	;# 
   275  0496                     	;# 
   276  0496                     	;# 
   277  0497                     	;# 
   278  0497                     	;# 
   279  0595                     	;# 
   280  0596                     	;# 
   281  0597                     	;# 
   282  059C                     	;# 
   283  059D                     	;# 
   284  059E                     	;# 
   285  0611                     	;# 
   286  0611                     	;# 
   287  0612                     	;# 
   288  0613                     	;# 
   289  0614                     	;# 
   290  0614                     	;# 
   291  0615                     	;# 
   292  0616                     	;# 
   293  0617                     	;# 
   294  0617                     	;# 
   295  0618                     	;# 
   296  0619                     	;# 
   297  061A                     	;# 
   298  061A                     	;# 
   299  061B                     	;# 
   300  061C                     	;# 
   301  061D                     	;# 
   302  061D                     	;# 
   303  061E                     	;# 
   304  061F                     	;# 
   305  0FE4                     	;# 
   306  0FE5                     	;# 
   307  0FE6                     	;# 
   308  0FE7                     	;# 
   309  0FE8                     	;# 
   310  0FE9                     	;# 
   311  0FEA                     	;# 
   312  0FEB                     	;# 
   313  0FED                     	;# 
   314  0FEE                     	;# 
   315  0FEF                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0110                     	;# 
   370  0116                     	;# 
   371  0117                     	;# 
   372  011D                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  018F                     	;# 
   376  0190                     	;# 
   377  0191                     	;# 
   378  0191                     	;# 
   379  0192                     	;# 
   380  0193                     	;# 
   381  0193                     	;# 
   382  0194                     	;# 
   383  0195                     	;# 
   384  0196                     	;# 
   385  0197                     	;# 
   386  0199                     	;# 
   387  0199                     	;# 
   388  0199                     	;# 
   389  019A                     	;# 
   390  019A                     	;# 
   391  019A                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019B                     	;# 
   395  019B                     	;# 
   396  019B                     	;# 
   397  019C                     	;# 
   398  019C                     	;# 
   399  019C                     	;# 
   400  019D                     	;# 
   401  019D                     	;# 
   402  019D                     	;# 
   403  019E                     	;# 
   404  019E                     	;# 
   405  019E                     	;# 
   406  019F                     	;# 
   407  019F                     	;# 
   408  019F                     	;# 
   409  020D                     	;# 
   410  020F                     	;# 
   411  0210                     	;# 
   412  0211                     	;# 
   413  0211                     	;# 
   414  0212                     	;# 
   415  0212                     	;# 
   416  0213                     	;# 
   417  0213                     	;# 
   418  0214                     	;# 
   419  0214                     	;# 
   420  0215                     	;# 
   421  0215                     	;# 
   422  0215                     	;# 
   423  0216                     	;# 
   424  0216                     	;# 
   425  0217                     	;# 
   426  0217                     	;# 
   427  0219                     	;# 
   428  021A                     	;# 
   429  021B                     	;# 
   430  021C                     	;# 
   431  021D                     	;# 
   432  021E                     	;# 
   433  021F                     	;# 
   434  028C                     	;# 
   435  028D                     	;# 
   436  0291                     	;# 
   437  0291                     	;# 
   438  0292                     	;# 
   439  0293                     	;# 
   440  0298                     	;# 
   441  0298                     	;# 
   442  0299                     	;# 
   443  029A                     	;# 
   444  029D                     	;# 
   445  029E                     	;# 
   446  029F                     	;# 
   447  030C                     	;# 
   448  030D                     	;# 
   449  0311                     	;# 
   450  0311                     	;# 
   451  0312                     	;# 
   452  0313                     	;# 
   453  0318                     	;# 
   454  0318                     	;# 
   455  0319                     	;# 
   456  031A                     	;# 
   457  031C                     	;# 
   458  031C                     	;# 
   459  031D                     	;# 
   460  031E                     	;# 
   461  038C                     	;# 
   462  038D                     	;# 
   463  0394                     	;# 
   464  0395                     	;# 
   465  0396                     	;# 
   466  040C                     	;# 
   467  040D                     	;# 
   468  0411                     	;# 
   469  0411                     	;# 
   470  0412                     	;# 
   471  0413                     	;# 
   472  0414                     	;# 
   473  0415                     	;# 
   474  0416                     	;# 
   475  0417                     	;# 
   476  0418                     	;# 
   477  0418                     	;# 
   478  0419                     	;# 
   479  041A                     	;# 
   480  041B                     	;# 
   481  041C                     	;# 
   482  041D                     	;# 
   483  041E                     	;# 
   484  048D                     	;# 
   485  0491                     	;# 
   486  0491                     	;# 
   487  0492                     	;# 
   488  0492                     	;# 
   489  0493                     	;# 
   490  0493                     	;# 
   491  0493                     	;# 
   492  0494                     	;# 
   493  0494                     	;# 
   494  0495                     	;# 
   495  0495                     	;# 
   496  0496                     	;# 
   497  0496                     	;# 
   498  0497                     	;# 
   499  0497                     	;# 
   500  0595                     	;# 
   501  0596                     	;# 
   502  0597                     	;# 
   503  059C                     	;# 
   504  059D                     	;# 
   505  059E                     	;# 
   506  0611                     	;# 
   507  0611                     	;# 
   508  0612                     	;# 
   509  0613                     	;# 
   510  0614                     	;# 
   511  0614                     	;# 
   512  0615                     	;# 
   513  0616                     	;# 
   514  0617                     	;# 
   515  0617                     	;# 
   516  0618                     	;# 
   517  0619                     	;# 
   518  061A                     	;# 
   519  061A                     	;# 
   520  061B                     	;# 
   521  061C                     	;# 
   522  061D                     	;# 
   523  061D                     	;# 
   524  061E                     	;# 
   525  061F                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  000D                     	;# 
   551  000E                     	;# 
   552  000F                     	;# 
   553  0010                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  008E                     	;# 
   570  008F                     	;# 
   571  0090                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0094                     	;# 
   576  0095                     	;# 
   577  0096                     	;# 
   578  0097                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009B                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  010C                     	;# 
   587  010D                     	;# 
   588  010E                     	;# 
   589  010F                     	;# 
   590  0110                     	;# 
   591  0116                     	;# 
   592  0117                     	;# 
   593  011D                     	;# 
   594  018C                     	;# 
   595  018D                     	;# 
   596  018F                     	;# 
   597  0190                     	;# 
   598  0191                     	;# 
   599  0191                     	;# 
   600  0192                     	;# 
   601  0193                     	;# 
   602  0193                     	;# 
   603  0194                     	;# 
   604  0195                     	;# 
   605  0196                     	;# 
   606  0197                     	;# 
   607  0199                     	;# 
   608  0199                     	;# 
   609  0199                     	;# 
   610  019A                     	;# 
   611  019A                     	;# 
   612  019A                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019C                     	;# 
   621  019D                     	;# 
   622  019D                     	;# 
   623  019D                     	;# 
   624  019E                     	;# 
   625  019E                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  019F                     	;# 
   629  019F                     	;# 
   630  020D                     	;# 
   631  020F                     	;# 
   632  0210                     	;# 
   633  0211                     	;# 
   634  0211                     	;# 
   635  0212                     	;# 
   636  0212                     	;# 
   637  0213                     	;# 
   638  0213                     	;# 
   639  0214                     	;# 
   640  0214                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0216                     	;# 
   645  0216                     	;# 
   646  0217                     	;# 
   647  0217                     	;# 
   648  0219                     	;# 
   649  021A                     	;# 
   650  021B                     	;# 
   651  021C                     	;# 
   652  021D                     	;# 
   653  021E                     	;# 
   654  021F                     	;# 
   655  028C                     	;# 
   656  028D                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0298                     	;# 
   662  0298                     	;# 
   663  0299                     	;# 
   664  029A                     	;# 
   665  029D                     	;# 
   666  029E                     	;# 
   667  029F                     	;# 
   668  030C                     	;# 
   669  030D                     	;# 
   670  0311                     	;# 
   671  0311                     	;# 
   672  0312                     	;# 
   673  0313                     	;# 
   674  0318                     	;# 
   675  0318                     	;# 
   676  0319                     	;# 
   677  031A                     	;# 
   678  031C                     	;# 
   679  031C                     	;# 
   680  031D                     	;# 
   681  031E                     	;# 
   682  038C                     	;# 
   683  038D                     	;# 
   684  0394                     	;# 
   685  0395                     	;# 
   686  0396                     	;# 
   687  040C                     	;# 
   688  040D                     	;# 
   689  0411                     	;# 
   690  0411                     	;# 
   691  0412                     	;# 
   692  0413                     	;# 
   693  0414                     	;# 
   694  0415                     	;# 
   695  0416                     	;# 
   696  0417                     	;# 
   697  0418                     	;# 
   698  0418                     	;# 
   699  0419                     	;# 
   700  041A                     	;# 
   701  041B                     	;# 
   702  041C                     	;# 
   703  041D                     	;# 
   704  041E                     	;# 
   705  048D                     	;# 
   706  0491                     	;# 
   707  0491                     	;# 
   708  0492                     	;# 
   709  0492                     	;# 
   710  0493                     	;# 
   711  0493                     	;# 
   712  0493                     	;# 
   713  0494                     	;# 
   714  0494                     	;# 
   715  0495                     	;# 
   716  0495                     	;# 
   717  0496                     	;# 
   718  0496                     	;# 
   719  0497                     	;# 
   720  0497                     	;# 
   721  0595                     	;# 
   722  0596                     	;# 
   723  0597                     	;# 
   724  059C                     	;# 
   725  059D                     	;# 
   726  059E                     	;# 
   727  0611                     	;# 
   728  0611                     	;# 
   729  0612                     	;# 
   730  0613                     	;# 
   731  0614                     	;# 
   732  0614                     	;# 
   733  0615                     	;# 
   734  0616                     	;# 
   735  0617                     	;# 
   736  0617                     	;# 
   737  0618                     	;# 
   738  0619                     	;# 
   739  061A                     	;# 
   740  061A                     	;# 
   741  061B                     	;# 
   742  061C                     	;# 
   743  061D                     	;# 
   744  061D                     	;# 
   745  061E                     	;# 
   746  061F                     	;# 
   747  0FE4                     	;# 
   748  0FE5                     	;# 
   749  0FE6                     	;# 
   750  0FE7                     	;# 
   751  0FE8                     	;# 
   752  0FE9                     	;# 
   753  0FEA                     	;# 
   754  0FEB                     	;# 
   755  0FED                     	;# 
   756  0FEE                     	;# 
   757  0FEF                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0008                     	;# 
   767  0009                     	;# 
   768  000A                     	;# 
   769  000B                     	;# 
   770  000C                     	;# 
   771  000D                     	;# 
   772  000E                     	;# 
   773  000F                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  008C                     	;# 
   789  008D                     	;# 
   790  008E                     	;# 
   791  008F                     	;# 
   792  0090                     	;# 
   793  0091                     	;# 
   794  0092                     	;# 
   795  0093                     	;# 
   796  0094                     	;# 
   797  0095                     	;# 
   798  0096                     	;# 
   799  0097                     	;# 
   800  0099                     	;# 
   801  009A                     	;# 
   802  009B                     	;# 
   803  009B                     	;# 
   804  009C                     	;# 
   805  009D                     	;# 
   806  009E                     	;# 
   807  010C                     	;# 
   808  010D                     	;# 
   809  010E                     	;# 
   810  010F                     	;# 
   811  0110                     	;# 
   812  0116                     	;# 
   813  0117                     	;# 
   814  011D                     	;# 
   815  018C                     	;# 
   816  018D                     	;# 
   817  018F                     	;# 
   818  0190                     	;# 
   819  0191                     	;# 
   820  0191                     	;# 
   821  0192                     	;# 
   822  0193                     	;# 
   823  0193                     	;# 
   824  0194                     	;# 
   825  0195                     	;# 
   826  0196                     	;# 
   827  0197                     	;# 
   828  0199                     	;# 
   829  0199                     	;# 
   830  0199                     	;# 
   831  019A                     	;# 
   832  019A                     	;# 
   833  019A                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019C                     	;# 
   840  019C                     	;# 
   841  019C                     	;# 
   842  019D                     	;# 
   843  019D                     	;# 
   844  019D                     	;# 
   845  019E                     	;# 
   846  019E                     	;# 
   847  019E                     	;# 
   848  019F                     	;# 
   849  019F                     	;# 
   850  019F                     	;# 
   851  020D                     	;# 
   852  020F                     	;# 
   853  0210                     	;# 
   854  0211                     	;# 
   855  0211                     	;# 
   856  0212                     	;# 
   857  0212                     	;# 
   858  0213                     	;# 
   859  0213                     	;# 
   860  0214                     	;# 
   861  0214                     	;# 
   862  0215                     	;# 
   863  0215                     	;# 
   864  0215                     	;# 
   865  0216                     	;# 
   866  0216                     	;# 
   867  0217                     	;# 
   868  0217                     	;# 
   869  0219                     	;# 
   870  021A                     	;# 
   871  021B                     	;# 
   872  021C                     	;# 
   873  021D                     	;# 
   874  021E                     	;# 
   875  021F                     	;# 
   876  028C                     	;# 
   877  028D                     	;# 
   878  0291                     	;# 
   879  0291                     	;# 
   880  0292                     	;# 
   881  0293                     	;# 
   882  0298                     	;# 
   883  0298                     	;# 
   884  0299                     	;# 
   885  029A                     	;# 
   886  029D                     	;# 
   887  029E                     	;# 
   888  029F                     	;# 
   889  030C                     	;# 
   890  030D                     	;# 
   891  0311                     	;# 
   892  0311                     	;# 
   893  0312                     	;# 
   894  0313                     	;# 
   895  0318                     	;# 
   896  0318                     	;# 
   897  0319                     	;# 
   898  031A                     	;# 
   899  031C                     	;# 
   900  031C                     	;# 
   901  031D                     	;# 
   902  031E                     	;# 
   903  038C                     	;# 
   904  038D                     	;# 
   905  0394                     	;# 
   906  0395                     	;# 
   907  0396                     	;# 
   908  040C                     	;# 
   909  040D                     	;# 
   910  0411                     	;# 
   911  0411                     	;# 
   912  0412                     	;# 
   913  0413                     	;# 
   914  0414                     	;# 
   915  0415                     	;# 
   916  0416                     	;# 
   917  0417                     	;# 
   918  0418                     	;# 
   919  0418                     	;# 
   920  0419                     	;# 
   921  041A                     	;# 
   922  041B                     	;# 
   923  041C                     	;# 
   924  041D                     	;# 
   925  041E                     	;# 
   926  048D                     	;# 
   927  0491                     	;# 
   928  0491                     	;# 
   929  0492                     	;# 
   930  0492                     	;# 
   931  0493                     	;# 
   932  0493                     	;# 
   933  0493                     	;# 
   934  0494                     	;# 
   935  0494                     	;# 
   936  0495                     	;# 
   937  0495                     	;# 
   938  0496                     	;# 
   939  0496                     	;# 
   940  0497                     	;# 
   941  0497                     	;# 
   942  0595                     	;# 
   943  0596                     	;# 
   944  0597                     	;# 
   945  059C                     	;# 
   946  059D                     	;# 
   947  059E                     	;# 
   948  0611                     	;# 
   949  0611                     	;# 
   950  0612                     	;# 
   951  0613                     	;# 
   952  0614                     	;# 
   953  0614                     	;# 
   954  0615                     	;# 
   955  0616                     	;# 
   956  0617                     	;# 
   957  0617                     	;# 
   958  0618                     	;# 
   959  0619                     	;# 
   960  061A                     	;# 
   961  061A                     	;# 
   962  061B                     	;# 
   963  061C                     	;# 
   964  061D                     	;# 
   965  061D                     	;# 
   966  061E                     	;# 
   967  061F                     	;# 
   968  0FE4                     	;# 
   969  0FE5                     	;# 
   970  0FE6                     	;# 
   971  0FE7                     	;# 
   972  0FE8                     	;# 
   973  0FE9                     	;# 
   974  0FEA                     	;# 
   975  0FEB                     	;# 
   976  0FED                     	;# 
   977  0FEE                     	;# 
   978  0FEF                     	;# 
   979  0000                     	;# 
   980  0001                     	;# 
   981  0002                     	;# 
   982  0003                     	;# 
   983  0004                     	;# 
   984  0005                     	;# 
   985  0006                     	;# 
   986  0007                     	;# 
   987  0008                     	;# 
   988  0009                     	;# 
   989  000A                     	;# 
   990  000B                     	;# 
   991  000C                     	;# 
   992  000D                     	;# 
   993  000E                     	;# 
   994  000F                     	;# 
   995  0010                     	;# 
   996  0011                     	;# 
   997  0012                     	;# 
   998  0013                     	;# 
   999  0014                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0016                     	;# 
  1003  0017                     	;# 
  1004  0018                     	;# 
  1005  0019                     	;# 
  1006  001A                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  008C                     	;# 
  1010  008D                     	;# 
  1011  008E                     	;# 
  1012  008F                     	;# 
  1013  0090                     	;# 
  1014  0091                     	;# 
  1015  0092                     	;# 
  1016  0093                     	;# 
  1017  0094                     	;# 
  1018  0095                     	;# 
  1019  0096                     	;# 
  1020  0097                     	;# 
  1021  0099                     	;# 
  1022  009A                     	;# 
  1023  009B                     	;# 
  1024  009B                     	;# 
  1025  009C                     	;# 
  1026  009D                     	;# 
  1027  009E                     	;# 
  1028  010C                     	;# 
  1029  010D                     	;# 
  1030  010E                     	;# 
  1031  010F                     	;# 
  1032  0110                     	;# 
  1033  0116                     	;# 
  1034  0117                     	;# 
  1035  011D                     	;# 
  1036  018C                     	;# 
  1037  018D                     	;# 
  1038  018F                     	;# 
  1039  0190                     	;# 
  1040  0191                     	;# 
  1041  0191                     	;# 
  1042  0192                     	;# 
  1043  0193                     	;# 
  1044  0193                     	;# 
  1045  0194                     	;# 
  1046  0195                     	;# 
  1047  0196                     	;# 
  1048  0197                     	;# 
  1049  0199                     	;# 
  1050  0199                     	;# 
  1051  0199                     	;# 
  1052  019A                     	;# 
  1053  019A                     	;# 
  1054  019A                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019B                     	;# 
  1059  019B                     	;# 
  1060  019C                     	;# 
  1061  019C                     	;# 
  1062  019C                     	;# 
  1063  019D                     	;# 
  1064  019D                     	;# 
  1065  019D                     	;# 
  1066  019E                     	;# 
  1067  019E                     	;# 
  1068  019E                     	;# 
  1069  019F                     	;# 
  1070  019F                     	;# 
  1071  019F                     	;# 
  1072  020D                     	;# 
  1073  020F                     	;# 
  1074  0210                     	;# 
  1075  0211                     	;# 
  1076  0211                     	;# 
  1077  0212                     	;# 
  1078  0212                     	;# 
  1079  0213                     	;# 
  1080  0213                     	;# 
  1081  0214                     	;# 
  1082  0214                     	;# 
  1083  0215                     	;# 
  1084  0215                     	;# 
  1085  0215                     	;# 
  1086  0216                     	;# 
  1087  0216                     	;# 
  1088  0217                     	;# 
  1089  0217                     	;# 
  1090  0219                     	;# 
  1091  021A                     	;# 
  1092  021B                     	;# 
  1093  021C                     	;# 
  1094  021D                     	;# 
  1095  021E                     	;# 
  1096  021F                     	;# 
  1097  028C                     	;# 
  1098  028D                     	;# 
  1099  0291                     	;# 
  1100  0291                     	;# 
  1101  0292                     	;# 
  1102  0293                     	;# 
  1103  0298                     	;# 
  1104  0298                     	;# 
  1105  0299                     	;# 
  1106  029A                     	;# 
  1107  029D                     	;# 
  1108  029E                     	;# 
  1109  029F                     	;# 
  1110  030C                     	;# 
  1111  030D                     	;# 
  1112  0311                     	;# 
  1113  0311                     	;# 
  1114  0312                     	;# 
  1115  0313                     	;# 
  1116  0318                     	;# 
  1117  0318                     	;# 
  1118  0319                     	;# 
  1119  031A                     	;# 
  1120  031C                     	;# 
  1121  031C                     	;# 
  1122  031D                     	;# 
  1123  031E                     	;# 
  1124  038C                     	;# 
  1125  038D                     	;# 
  1126  0394                     	;# 
  1127  0395                     	;# 
  1128  0396                     	;# 
  1129  040C                     	;# 
  1130  040D                     	;# 
  1131  0411                     	;# 
  1132  0411                     	;# 
  1133  0412                     	;# 
  1134  0413                     	;# 
  1135  0414                     	;# 
  1136  0415                     	;# 
  1137  0416                     	;# 
  1138  0417                     	;# 
  1139  0418                     	;# 
  1140  0418                     	;# 
  1141  0419                     	;# 
  1142  041A                     	;# 
  1143  041B                     	;# 
  1144  041C                     	;# 
  1145  041D                     	;# 
  1146  041E                     	;# 
  1147  048D                     	;# 
  1148  0491                     	;# 
  1149  0491                     	;# 
  1150  0492                     	;# 
  1151  0492                     	;# 
  1152  0493                     	;# 
  1153  0493                     	;# 
  1154  0493                     	;# 
  1155  0494                     	;# 
  1156  0494                     	;# 
  1157  0495                     	;# 
  1158  0495                     	;# 
  1159  0496                     	;# 
  1160  0496                     	;# 
  1161  0497                     	;# 
  1162  0497                     	;# 
  1163  0595                     	;# 
  1164  0596                     	;# 
  1165  0597                     	;# 
  1166  059C                     	;# 
  1167  059D                     	;# 
  1168  059E                     	;# 
  1169  0611                     	;# 
  1170  0611                     	;# 
  1171  0612                     	;# 
  1172  0613                     	;# 
  1173  0614                     	;# 
  1174  0614                     	;# 
  1175  0615                     	;# 
  1176  0616                     	;# 
  1177  0617                     	;# 
  1178  0617                     	;# 
  1179  0618                     	;# 
  1180  0619                     	;# 
  1181  061A                     	;# 
  1182  061A                     	;# 
  1183  061B                     	;# 
  1184  061C                     	;# 
  1185  061D                     	;# 
  1186  061D                     	;# 
  1187  061E                     	;# 
  1188  061F                     	;# 
  1189  0FE4                     	;# 
  1190  0FE5                     	;# 
  1191  0FE6                     	;# 
  1192  0FE7                     	;# 
  1193  0FE8                     	;# 
  1194  0FE9                     	;# 
  1195  0FEA                     	;# 
  1196  0FEB                     	;# 
  1197  0FED                     	;# 
  1198  0FEE                     	;# 
  1199  0FEF                     	;# 
  1200  0000                     	;# 
  1201  0001                     	;# 
  1202  0002                     	;# 
  1203  0003                     	;# 
  1204  0004                     	;# 
  1205  0005                     	;# 
  1206  0006                     	;# 
  1207  0007                     	;# 
  1208  0008                     	;# 
  1209  0009                     	;# 
  1210  000A                     	;# 
  1211  000B                     	;# 
  1212  000C                     	;# 
  1213  000D                     	;# 
  1214  000E                     	;# 
  1215  000F                     	;# 
  1216  0010                     	;# 
  1217  0011                     	;# 
  1218  0012                     	;# 
  1219  0013                     	;# 
  1220  0014                     	;# 
  1221  0015                     	;# 
  1222  0016                     	;# 
  1223  0016                     	;# 
  1224  0017                     	;# 
  1225  0018                     	;# 
  1226  0019                     	;# 
  1227  001A                     	;# 
  1228  001B                     	;# 
  1229  001C                     	;# 
  1230  008C                     	;# 
  1231  008D                     	;# 
  1232  008E                     	;# 
  1233  008F                     	;# 
  1234  0090                     	;# 
  1235  0091                     	;# 
  1236  0092                     	;# 
  1237  0093                     	;# 
  1238  0094                     	;# 
  1239  0095                     	;# 
  1240  0096                     	;# 
  1241  0097                     	;# 
  1242  0099                     	;# 
  1243  009A                     	;# 
  1244  009B                     	;# 
  1245  009B                     	;# 
  1246  009C                     	;# 
  1247  009D                     	;# 
  1248  009E                     	;# 
  1249  010C                     	;# 
  1250  010D                     	;# 
  1251  010E                     	;# 
  1252  010F                     	;# 
  1253  0110                     	;# 
  1254  0116                     	;# 
  1255  0117                     	;# 
  1256  011D                     	;# 
  1257  018C                     	;# 
  1258  018D                     	;# 
  1259  018F                     	;# 
  1260  0190                     	;# 
  1261  0191                     	;# 
  1262  0191                     	;# 
  1263  0192                     	;# 
  1264  0193                     	;# 
  1265  0193                     	;# 
  1266  0194                     	;# 
  1267  0195                     	;# 
  1268  0196                     	;# 
  1269  0197                     	;# 
  1270  0199                     	;# 
  1271  0199                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019A                     	;# 
  1275  019A                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019B                     	;# 
  1280  019B                     	;# 
  1281  019C                     	;# 
  1282  019C                     	;# 
  1283  019C                     	;# 
  1284  019D                     	;# 
  1285  019D                     	;# 
  1286  019D                     	;# 
  1287  019E                     	;# 
  1288  019E                     	;# 
  1289  019E                     	;# 
  1290  019F                     	;# 
  1291  019F                     	;# 
  1292  019F                     	;# 
  1293  020D                     	;# 
  1294  020F                     	;# 
  1295  0210                     	;# 
  1296  0211                     	;# 
  1297  0211                     	;# 
  1298  0212                     	;# 
  1299  0212                     	;# 
  1300  0213                     	;# 
  1301  0213                     	;# 
  1302  0214                     	;# 
  1303  0214                     	;# 
  1304  0215                     	;# 
  1305  0215                     	;# 
  1306  0215                     	;# 
  1307  0216                     	;# 
  1308  0216                     	;# 
  1309  0217                     	;# 
  1310  0217                     	;# 
  1311  0219                     	;# 
  1312  021A                     	;# 
  1313  021B                     	;# 
  1314  021C                     	;# 
  1315  021D                     	;# 
  1316  021E                     	;# 
  1317  021F                     	;# 
  1318  028C                     	;# 
  1319  028D                     	;# 
  1320  0291                     	;# 
  1321  0291                     	;# 
  1322  0292                     	;# 
  1323  0293                     	;# 
  1324  0298                     	;# 
  1325  0298                     	;# 
  1326  0299                     	;# 
  1327  029A                     	;# 
  1328  029D                     	;# 
  1329  029E                     	;# 
  1330  029F                     	;# 
  1331  030C                     	;# 
  1332  030D                     	;# 
  1333  0311                     	;# 
  1334  0311                     	;# 
  1335  0312                     	;# 
  1336  0313                     	;# 
  1337  0318                     	;# 
  1338  0318                     	;# 
  1339  0319                     	;# 
  1340  031A                     	;# 
  1341  031C                     	;# 
  1342  031C                     	;# 
  1343  031D                     	;# 
  1344  031E                     	;# 
  1345  038C                     	;# 
  1346  038D                     	;# 
  1347  0394                     	;# 
  1348  0395                     	;# 
  1349  0396                     	;# 
  1350  040C                     	;# 
  1351  040D                     	;# 
  1352  0411                     	;# 
  1353  0411                     	;# 
  1354  0412                     	;# 
  1355  0413                     	;# 
  1356  0414                     	;# 
  1357  0415                     	;# 
  1358  0416                     	;# 
  1359  0417                     	;# 
  1360  0418                     	;# 
  1361  0418                     	;# 
  1362  0419                     	;# 
  1363  041A                     	;# 
  1364  041B                     	;# 
  1365  041C                     	;# 
  1366  041D                     	;# 
  1367  041E                     	;# 
  1368  048D                     	;# 
  1369  0491                     	;# 
  1370  0491                     	;# 
  1371  0492                     	;# 
  1372  0492                     	;# 
  1373  0493                     	;# 
  1374  0493                     	;# 
  1375  0493                     	;# 
  1376  0494                     	;# 
  1377  0494                     	;# 
  1378  0495                     	;# 
  1379  0495                     	;# 
  1380  0496                     	;# 
  1381  0496                     	;# 
  1382  0497                     	;# 
  1383  0497                     	;# 
  1384  0595                     	;# 
  1385  0596                     	;# 
  1386  0597                     	;# 
  1387  059C                     	;# 
  1388  059D                     	;# 
  1389  059E                     	;# 
  1390  0611                     	;# 
  1391  0611                     	;# 
  1392  0612                     	;# 
  1393  0613                     	;# 
  1394  0614                     	;# 
  1395  0614                     	;# 
  1396  0615                     	;# 
  1397  0616                     	;# 
  1398  0617                     	;# 
  1399  0617                     	;# 
  1400  0618                     	;# 
  1401  0619                     	;# 
  1402  061A                     	;# 
  1403  061A                     	;# 
  1404  061B                     	;# 
  1405  061C                     	;# 
  1406  061D                     	;# 
  1407  061D                     	;# 
  1408  061E                     	;# 
  1409  061F                     	;# 
  1410  0FE4                     	;# 
  1411  0FE5                     	;# 
  1412  0FE6                     	;# 
  1413  0FE7                     	;# 
  1414  0FE8                     	;# 
  1415  0FE9                     	;# 
  1416  0FEA                     	;# 
  1417  0FEB                     	;# 
  1418  0FED                     	;# 
  1419  0FEE                     	;# 
  1420  0FEF                     	;# 
  1421  0000                     	;# 
  1422  0001                     	;# 
  1423  0002                     	;# 
  1424  0003                     	;# 
  1425  0004                     	;# 
  1426  0005                     	;# 
  1427  0006                     	;# 
  1428  0007                     	;# 
  1429  0008                     	;# 
  1430  0009                     	;# 
  1431  000A                     	;# 
  1432  000B                     	;# 
  1433  000C                     	;# 
  1434  000D                     	;# 
  1435  000E                     	;# 
  1436  000F                     	;# 
  1437  0010                     	;# 
  1438  0011                     	;# 
  1439  0012                     	;# 
  1440  0013                     	;# 
  1441  0014                     	;# 
  1442  0015                     	;# 
  1443  0016                     	;# 
  1444  0016                     	;# 
  1445  0017                     	;# 
  1446  0018                     	;# 
  1447  0019                     	;# 
  1448  001A                     	;# 
  1449  001B                     	;# 
  1450  001C                     	;# 
  1451  008C                     	;# 
  1452  008D                     	;# 
  1453  008E                     	;# 
  1454  008F                     	;# 
  1455  0090                     	;# 
  1456  0091                     	;# 
  1457  0092                     	;# 
  1458  0093                     	;# 
  1459  0094                     	;# 
  1460  0095                     	;# 
  1461  0096                     	;# 
  1462  0097                     	;# 
  1463  0099                     	;# 
  1464  009A                     	;# 
  1465  009B                     	;# 
  1466  009B                     	;# 
  1467  009C                     	;# 
  1468  009D                     	;# 
  1469  009E                     	;# 
  1470  010C                     	;# 
  1471  010D                     	;# 
  1472  010E                     	;# 
  1473  010F                     	;# 
  1474  0110                     	;# 
  1475  0116                     	;# 
  1476  0117                     	;# 
  1477  011D                     	;# 
  1478  018C                     	;# 
  1479  018D                     	;# 
  1480  018F                     	;# 
  1481  0190                     	;# 
  1482  0191                     	;# 
  1483  0191                     	;# 
  1484  0192                     	;# 
  1485  0193                     	;# 
  1486  0193                     	;# 
  1487  0194                     	;# 
  1488  0195                     	;# 
  1489  0196                     	;# 
  1490  0197                     	;# 
  1491  0199                     	;# 
  1492  0199                     	;# 
  1493  0199                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019A                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019B                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019C                     	;# 
  1505  019D                     	;# 
  1506  019D                     	;# 
  1507  019D                     	;# 
  1508  019E                     	;# 
  1509  019E                     	;# 
  1510  019E                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  019F                     	;# 
  1514  020D                     	;# 
  1515  020F                     	;# 
  1516  0210                     	;# 
  1517  0211                     	;# 
  1518  0211                     	;# 
  1519  0212                     	;# 
  1520  0212                     	;# 
  1521  0213                     	;# 
  1522  0213                     	;# 
  1523  0214                     	;# 
  1524  0214                     	;# 
  1525  0215                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0216                     	;# 
  1529  0216                     	;# 
  1530  0217                     	;# 
  1531  0217                     	;# 
  1532  0219                     	;# 
  1533  021A                     	;# 
  1534  021B                     	;# 
  1535  021C                     	;# 
  1536  021D                     	;# 
  1537  021E                     	;# 
  1538  021F                     	;# 
  1539  028C                     	;# 
  1540  028D                     	;# 
  1541  0291                     	;# 
  1542  0291                     	;# 
  1543  0292                     	;# 
  1544  0293                     	;# 
  1545  0298                     	;# 
  1546  0298                     	;# 
  1547  0299                     	;# 
  1548  029A                     	;# 
  1549  029D                     	;# 
  1550  029E                     	;# 
  1551  029F                     	;# 
  1552  030C                     	;# 
  1553  030D                     	;# 
  1554  0311                     	;# 
  1555  0311                     	;# 
  1556  0312                     	;# 
  1557  0313                     	;# 
  1558  0318                     	;# 
  1559  0318                     	;# 
  1560  0319                     	;# 
  1561  031A                     	;# 
  1562  031C                     	;# 
  1563  031C                     	;# 
  1564  031D                     	;# 
  1565  031E                     	;# 
  1566  038C                     	;# 
  1567  038D                     	;# 
  1568  0394                     	;# 
  1569  0395                     	;# 
  1570  0396                     	;# 
  1571  040C                     	;# 
  1572  040D                     	;# 
  1573  0411                     	;# 
  1574  0411                     	;# 
  1575  0412                     	;# 
  1576  0413                     	;# 
  1577  0414                     	;# 
  1578  0415                     	;# 
  1579  0416                     	;# 
  1580  0417                     	;# 
  1581  0418                     	;# 
  1582  0418                     	;# 
  1583  0419                     	;# 
  1584  041A                     	;# 
  1585  041B                     	;# 
  1586  041C                     	;# 
  1587  041D                     	;# 
  1588  041E                     	;# 
  1589  048D                     	;# 
  1590  0491                     	;# 
  1591  0491                     	;# 
  1592  0492                     	;# 
  1593  0492                     	;# 
  1594  0493                     	;# 
  1595  0493                     	;# 
  1596  0493                     	;# 
  1597  0494                     	;# 
  1598  0494                     	;# 
  1599  0495                     	;# 
  1600  0495                     	;# 
  1601  0496                     	;# 
  1602  0496                     	;# 
  1603  0497                     	;# 
  1604  0497                     	;# 
  1605  0595                     	;# 
  1606  0596                     	;# 
  1607  0597                     	;# 
  1608  059C                     	;# 
  1609  059D                     	;# 
  1610  059E                     	;# 
  1611  0611                     	;# 
  1612  0611                     	;# 
  1613  0612                     	;# 
  1614  0613                     	;# 
  1615  0614                     	;# 
  1616  0614                     	;# 
  1617  0615                     	;# 
  1618  0616                     	;# 
  1619  0617                     	;# 
  1620  0617                     	;# 
  1621  0618                     	;# 
  1622  0619                     	;# 
  1623  061A                     	;# 
  1624  061A                     	;# 
  1625  061B                     	;# 
  1626  061C                     	;# 
  1627  061D                     	;# 
  1628  061D                     	;# 
  1629  061E                     	;# 
  1630  061F                     	;# 
  1631  0FE4                     	;# 
  1632  0FE5                     	;# 
  1633  0FE6                     	;# 
  1634  0FE7                     	;# 
  1635  0FE8                     	;# 
  1636  0FE9                     	;# 
  1637  0FEA                     	;# 
  1638  0FEB                     	;# 
  1639  0FED                     	;# 
  1640  0FEE                     	;# 
  1641  0FEF                     	;# 
  1642  0000                     	;# 
  1643  0001                     	;# 
  1644  0002                     	;# 
  1645  0003                     	;# 
  1646  0004                     	;# 
  1647  0005                     	;# 
  1648  0006                     	;# 
  1649  0007                     	;# 
  1650  0008                     	;# 
  1651  0009                     	;# 
  1652  000A                     	;# 
  1653  000B                     	;# 
  1654  000C                     	;# 
  1655  000D                     	;# 
  1656  000E                     	;# 
  1657  000F                     	;# 
  1658  0010                     	;# 
  1659  0011                     	;# 
  1660  0012                     	;# 
  1661  0013                     	;# 
  1662  0014                     	;# 
  1663  0015                     	;# 
  1664  0016                     	;# 
  1665  0016                     	;# 
  1666  0017                     	;# 
  1667  0018                     	;# 
  1668  0019                     	;# 
  1669  001A                     	;# 
  1670  001B                     	;# 
  1671  001C                     	;# 
  1672  008C                     	;# 
  1673  008D                     	;# 
  1674  008E                     	;# 
  1675  008F                     	;# 
  1676  0090                     	;# 
  1677  0091                     	;# 
  1678  0092                     	;# 
  1679  0093                     	;# 
  1680  0094                     	;# 
  1681  0095                     	;# 
  1682  0096                     	;# 
  1683  0097                     	;# 
  1684  0099                     	;# 
  1685  009A                     	;# 
  1686  009B                     	;# 
  1687  009B                     	;# 
  1688  009C                     	;# 
  1689  009D                     	;# 
  1690  009E                     	;# 
  1691  010C                     	;# 
  1692  010D                     	;# 
  1693  010E                     	;# 
  1694  010F                     	;# 
  1695  0110                     	;# 
  1696  0116                     	;# 
  1697  0117                     	;# 
  1698  011D                     	;# 
  1699  018C                     	;# 
  1700  018D                     	;# 
  1701  018F                     	;# 
  1702  0190                     	;# 
  1703  0191                     	;# 
  1704  0191                     	;# 
  1705  0192                     	;# 
  1706  0193                     	;# 
  1707  0193                     	;# 
  1708  0194                     	;# 
  1709  0195                     	;# 
  1710  0196                     	;# 
  1711  0197                     	;# 
  1712  0199                     	;# 
  1713  0199                     	;# 
  1714  0199                     	;# 
  1715  019A                     	;# 
  1716  019A                     	;# 
  1717  019A                     	;# 
  1718  019B                     	;# 
  1719  019B                     	;# 
  1720  019B                     	;# 
  1721  019B                     	;# 
  1722  019B                     	;# 
  1723  019C                     	;# 
  1724  019C                     	;# 
  1725  019C                     	;# 
  1726  019D                     	;# 
  1727  019D                     	;# 
  1728  019D                     	;# 
  1729  019E                     	;# 
  1730  019E                     	;# 
  1731  019E                     	;# 
  1732  019F                     	;# 
  1733  019F                     	;# 
  1734  019F                     	;# 
  1735  020D                     	;# 
  1736  020F                     	;# 
  1737  0210                     	;# 
  1738  0211                     	;# 
  1739  0211                     	;# 
  1740  0212                     	;# 
  1741  0212                     	;# 
  1742  0213                     	;# 
  1743  0213                     	;# 
  1744  0214                     	;# 
  1745  0214                     	;# 
  1746  0215                     	;# 
  1747  0215                     	;# 
  1748  0215                     	;# 
  1749  0216                     	;# 
  1750  0216                     	;# 
  1751  0217                     	;# 
  1752  0217                     	;# 
  1753  0219                     	;# 
  1754  021A                     	;# 
  1755  021B                     	;# 
  1756  021C                     	;# 
  1757  021D                     	;# 
  1758  021E                     	;# 
  1759  021F                     	;# 
  1760  028C                     	;# 
  1761  028D                     	;# 
  1762  0291                     	;# 
  1763  0291                     	;# 
  1764  0292                     	;# 
  1765  0293                     	;# 
  1766  0298                     	;# 
  1767  0298                     	;# 
  1768  0299                     	;# 
  1769  029A                     	;# 
  1770  029D                     	;# 
  1771  029E                     	;# 
  1772  029F                     	;# 
  1773  030C                     	;# 
  1774  030D                     	;# 
  1775  0311                     	;# 
  1776  0311                     	;# 
  1777  0312                     	;# 
  1778  0313                     	;# 
  1779  0318                     	;# 
  1780  0318                     	;# 
  1781  0319                     	;# 
  1782  031A                     	;# 
  1783  031C                     	;# 
  1784  031C                     	;# 
  1785  031D                     	;# 
  1786  031E                     	;# 
  1787  038C                     	;# 
  1788  038D                     	;# 
  1789  0394                     	;# 
  1790  0395                     	;# 
  1791  0396                     	;# 
  1792  040C                     	;# 
  1793  040D                     	;# 
  1794  0411                     	;# 
  1795  0411                     	;# 
  1796  0412                     	;# 
  1797  0413                     	;# 
  1798  0414                     	;# 
  1799  0415                     	;# 
  1800  0416                     	;# 
  1801  0417                     	;# 
  1802  0418                     	;# 
  1803  0418                     	;# 
  1804  0419                     	;# 
  1805  041A                     	;# 
  1806  041B                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  048D                     	;# 
  1811  0491                     	;# 
  1812  0491                     	;# 
  1813  0492                     	;# 
  1814  0492                     	;# 
  1815  0493                     	;# 
  1816  0493                     	;# 
  1817  0493                     	;# 
  1818  0494                     	;# 
  1819  0494                     	;# 
  1820  0495                     	;# 
  1821  0495                     	;# 
  1822  0496                     	;# 
  1823  0496                     	;# 
  1824  0497                     	;# 
  1825  0497                     	;# 
  1826  0595                     	;# 
  1827  0596                     	;# 
  1828  0597                     	;# 
  1829  059C                     	;# 
  1830  059D                     	;# 
  1831  059E                     	;# 
  1832  0611                     	;# 
  1833  0611                     	;# 
  1834  0612                     	;# 
  1835  0613                     	;# 
  1836  0614                     	;# 
  1837  0614                     	;# 
  1838  0615                     	;# 
  1839  0616                     	;# 
  1840  0617                     	;# 
  1841  0617                     	;# 
  1842  0618                     	;# 
  1843  0619                     	;# 
  1844  061A                     	;# 
  1845  061A                     	;# 
  1846  061B                     	;# 
  1847  061C                     	;# 
  1848  061D                     	;# 
  1849  061D                     	;# 
  1850  061E                     	;# 
  1851  061F                     	;# 
  1852  0FE4                     	;# 
  1853  0FE5                     	;# 
  1854  0FE6                     	;# 
  1855  0FE7                     	;# 
  1856  0FE8                     	;# 
  1857  0FE9                     	;# 
  1858  0FEA                     	;# 
  1859  0FEB                     	;# 
  1860  0FED                     	;# 
  1861  0FEE                     	;# 
  1862  0FEF                     	;# 
  1863  0000                     	;# 
  1864  0001                     	;# 
  1865  0002                     	;# 
  1866  0003                     	;# 
  1867  0004                     	;# 
  1868  0005                     	;# 
  1869  0006                     	;# 
  1870  0007                     	;# 
  1871  0008                     	;# 
  1872  0009                     	;# 
  1873  000A                     	;# 
  1874  000B                     	;# 
  1875  000C                     	;# 
  1876  000D                     	;# 
  1877  000E                     	;# 
  1878  000F                     	;# 
  1879  0010                     	;# 
  1880  0011                     	;# 
  1881  0012                     	;# 
  1882  0013                     	;# 
  1883  0014                     	;# 
  1884  0015                     	;# 
  1885  0016                     	;# 
  1886  0016                     	;# 
  1887  0017                     	;# 
  1888  0018                     	;# 
  1889  0019                     	;# 
  1890  001A                     	;# 
  1891  001B                     	;# 
  1892  001C                     	;# 
  1893  008C                     	;# 
  1894  008D                     	;# 
  1895  008E                     	;# 
  1896  008F                     	;# 
  1897  0090                     	;# 
  1898  0091                     	;# 
  1899  0092                     	;# 
  1900  0093                     	;# 
  1901  0094                     	;# 
  1902  0095                     	;# 
  1903  0096                     	;# 
  1904  0097                     	;# 
  1905  0099                     	;# 
  1906  009A                     	;# 
  1907  009B                     	;# 
  1908  009B                     	;# 
  1909  009C                     	;# 
  1910  009D                     	;# 
  1911  009E                     	;# 
  1912  010C                     	;# 
  1913  010D                     	;# 
  1914  010E                     	;# 
  1915  010F                     	;# 
  1916  0110                     	;# 
  1917  0116                     	;# 
  1918  0117                     	;# 
  1919  011D                     	;# 
  1920  018C                     	;# 
  1921  018D                     	;# 
  1922  018F                     	;# 
  1923  0190                     	;# 
  1924  0191                     	;# 
  1925  0191                     	;# 
  1926  0192                     	;# 
  1927  0193                     	;# 
  1928  0193                     	;# 
  1929  0194                     	;# 
  1930  0195                     	;# 
  1931  0196                     	;# 
  1932  0197                     	;# 
  1933  0199                     	;# 
  1934  0199                     	;# 
  1935  0199                     	;# 
  1936  019A                     	;# 
  1937  019A                     	;# 
  1938  019A                     	;# 
  1939  019B                     	;# 
  1940  019B                     	;# 
  1941  019B                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019C                     	;# 
  1945  019C                     	;# 
  1946  019C                     	;# 
  1947  019D                     	;# 
  1948  019D                     	;# 
  1949  019D                     	;# 
  1950  019E                     	;# 
  1951  019E                     	;# 
  1952  019E                     	;# 
  1953  019F                     	;# 
  1954  019F                     	;# 
  1955  019F                     	;# 
  1956  020D                     	;# 
  1957  020F                     	;# 
  1958  0210                     	;# 
  1959  0211                     	;# 
  1960  0211                     	;# 
  1961  0212                     	;# 
  1962  0212                     	;# 
  1963  0213                     	;# 
  1964  0213                     	;# 
  1965  0214                     	;# 
  1966  0214                     	;# 
  1967  0215                     	;# 
  1968  0215                     	;# 
  1969  0215                     	;# 
  1970  0216                     	;# 
  1971  0216                     	;# 
  1972  0217                     	;# 
  1973  0217                     	;# 
  1974  0219                     	;# 
  1975  021A                     	;# 
  1976  021B                     	;# 
  1977  021C                     	;# 
  1978  021D                     	;# 
  1979  021E                     	;# 
  1980  021F                     	;# 
  1981  028C                     	;# 
  1982  028D                     	;# 
  1983  0291                     	;# 
  1984  0291                     	;# 
  1985  0292                     	;# 
  1986  0293                     	;# 
  1987  0298                     	;# 
  1988  0298                     	;# 
  1989  0299                     	;# 
  1990  029A                     	;# 
  1991  029D                     	;# 
  1992  029E                     	;# 
  1993  029F                     	;# 
  1994  030C                     	;# 
  1995  030D                     	;# 
  1996  0311                     	;# 
  1997  0311                     	;# 
  1998  0312                     	;# 
  1999  0313                     	;# 
  2000  0318                     	;# 
  2001  0318                     	;# 
  2002  0319                     	;# 
  2003  031A                     	;# 
  2004  031C                     	;# 
  2005  031C                     	;# 
  2006  031D                     	;# 
  2007  031E                     	;# 
  2008  038C                     	;# 
  2009  038D                     	;# 
  2010  0394                     	;# 
  2011  0395                     	;# 
  2012  0396                     	;# 
  2013  040C                     	;# 
  2014  040D                     	;# 
  2015  0411                     	;# 
  2016  0411                     	;# 
  2017  0412                     	;# 
  2018  0413                     	;# 
  2019  0414                     	;# 
  2020  0415                     	;# 
  2021  0416                     	;# 
  2022  0417                     	;# 
  2023  0418                     	;# 
  2024  0418                     	;# 
  2025  0419                     	;# 
  2026  041A                     	;# 
  2027  041B                     	;# 
  2028  041C                     	;# 
  2029  041D                     	;# 
  2030  041E                     	;# 
  2031  048D                     	;# 
  2032  0491                     	;# 
  2033  0491                     	;# 
  2034  0492                     	;# 
  2035  0492                     	;# 
  2036  0493                     	;# 
  2037  0493                     	;# 
  2038  0493                     	;# 
  2039  0494                     	;# 
  2040  0494                     	;# 
  2041  0495                     	;# 
  2042  0495                     	;# 
  2043  0496                     	;# 
  2044  0496                     	;# 
  2045  0497                     	;# 
  2046  0497                     	;# 
  2047  0595                     	;# 
  2048  0596                     	;# 
  2049  0597                     	;# 
  2050  059C                     	;# 
  2051  059D                     	;# 
  2052  059E                     	;# 
  2053  0611                     	;# 
  2054  0611                     	;# 
  2055  0612                     	;# 
  2056  0613                     	;# 
  2057  0614                     	;# 
  2058  0614                     	;# 
  2059  0615                     	;# 
  2060  0616                     	;# 
  2061  0617                     	;# 
  2062  0617                     	;# 
  2063  0618                     	;# 
  2064  0619                     	;# 
  2065  061A                     	;# 
  2066  061A                     	;# 
  2067  061B                     	;# 
  2068  061C                     	;# 
  2069  061D                     	;# 
  2070  061D                     	;# 
  2071  061E                     	;# 
  2072  061F                     	;# 
  2073  0FE4                     	;# 
  2074  0FE5                     	;# 
  2075  0FE6                     	;# 
  2076  0FE7                     	;# 
  2077  0FE8                     	;# 
  2078  0FE9                     	;# 
  2079  0FEA                     	;# 
  2080  0FEB                     	;# 
  2081  0FED                     	;# 
  2082  0FEE                     	;# 
  2083  0FEF                     	;# 
  2084  0000                     	;# 
  2085  0001                     	;# 
  2086  0002                     	;# 
  2087  0003                     	;# 
  2088  0004                     	;# 
  2089  0005                     	;# 
  2090  0006                     	;# 
  2091  0007                     	;# 
  2092  0008                     	;# 
  2093  0009                     	;# 
  2094  000A                     	;# 
  2095  000B                     	;# 
  2096  000C                     	;# 
  2097  000D                     	;# 
  2098  000E                     	;# 
  2099  000F                     	;# 
  2100  0010                     	;# 
  2101  0011                     	;# 
  2102  0012                     	;# 
  2103  0013                     	;# 
  2104  0014                     	;# 
  2105  0015                     	;# 
  2106  0016                     	;# 
  2107  0016                     	;# 
  2108  0017                     	;# 
  2109  0018                     	;# 
  2110  0019                     	;# 
  2111  001A                     	;# 
  2112  001B                     	;# 
  2113  001C                     	;# 
  2114  008C                     	;# 
  2115  008D                     	;# 
  2116  008E                     	;# 
  2117  008F                     	;# 
  2118  0090                     	;# 
  2119  0091                     	;# 
  2120  0092                     	;# 
  2121  0093                     	;# 
  2122  0094                     	;# 
  2123  0095                     	;# 
  2124  0096                     	;# 
  2125  0097                     	;# 
  2126  0099                     	;# 
  2127  009A                     	;# 
  2128  009B                     	;# 
  2129  009B                     	;# 
  2130  009C                     	;# 
  2131  009D                     	;# 
  2132  009E                     	;# 
  2133  010C                     	;# 
  2134  010D                     	;# 
  2135  010E                     	;# 
  2136  010F                     	;# 
  2137  0110                     	;# 
  2138  0116                     	;# 
  2139  0117                     	;# 
  2140  011D                     	;# 
  2141  018C                     	;# 
  2142  018D                     	;# 
  2143  018F                     	;# 
  2144  0190                     	;# 
  2145  0191                     	;# 
  2146  0191                     	;# 
  2147  0192                     	;# 
  2148  0193                     	;# 
  2149  0193                     	;# 
  2150  0194                     	;# 
  2151  0195                     	;# 
  2152  0196                     	;# 
  2153  0197                     	;# 
  2154  0199                     	;# 
  2155  0199                     	;# 
  2156  0199                     	;# 
  2157  019A                     	;# 
  2158  019A                     	;# 
  2159  019A                     	;# 
  2160  019B                     	;# 
  2161  019B                     	;# 
  2162  019B                     	;# 
  2163  019B                     	;# 
  2164  019B                     	;# 
  2165  019C                     	;# 
  2166  019C                     	;# 
  2167  019C                     	;# 
  2168  019D                     	;# 
  2169  019D                     	;# 
  2170  019D                     	;# 
  2171  019E                     	;# 
  2172  019E                     	;# 
  2173  019E                     	;# 
  2174  019F                     	;# 
  2175  019F                     	;# 
  2176  019F                     	;# 
  2177  020D                     	;# 
  2178  020F                     	;# 
  2179  0210                     	;# 
  2180  0211                     	;# 
  2181  0211                     	;# 
  2182  0212                     	;# 
  2183  0212                     	;# 
  2184  0213                     	;# 
  2185  0213                     	;# 
  2186  0214                     	;# 
  2187  0214                     	;# 
  2188  0215                     	;# 
  2189  0215                     	;# 
  2190  0215                     	;# 
  2191  0216                     	;# 
  2192  0216                     	;# 
  2193  0217                     	;# 
  2194  0217                     	;# 
  2195  0219                     	;# 
  2196  021A                     	;# 
  2197  021B                     	;# 
  2198  021C                     	;# 
  2199  021D                     	;# 
  2200  021E                     	;# 
  2201  021F                     	;# 
  2202  028C                     	;# 
  2203  028D                     	;# 
  2204  0291                     	;# 
  2205  0291                     	;# 
  2206  0292                     	;# 
  2207  0293                     	;# 
  2208  0298                     	;# 
  2209  0298                     	;# 
  2210  0299                     	;# 
  2211  029A                     	;# 
  2212  029D                     	;# 
  2213  029E                     	;# 
  2214  029F                     	;# 
  2215  030C                     	;# 
  2216  030D                     	;# 
  2217  0311                     	;# 
  2218  0311                     	;# 
  2219  0312                     	;# 
  2220  0313                     	;# 
  2221  0318                     	;# 
  2222  0318                     	;# 
  2223  0319                     	;# 
  2224  031A                     	;# 
  2225  031C                     	;# 
  2226  031C                     	;# 
  2227  031D                     	;# 
  2228  031E                     	;# 
  2229  038C                     	;# 
  2230  038D                     	;# 
  2231  0394                     	;# 
  2232  0395                     	;# 
  2233  0396                     	;# 
  2234  040C                     	;# 
  2235  040D                     	;# 
  2236  0411                     	;# 
  2237  0411                     	;# 
  2238  0412                     	;# 
  2239  0413                     	;# 
  2240  0414                     	;# 
  2241  0415                     	;# 
  2242  0416                     	;# 
  2243  0417                     	;# 
  2244  0418                     	;# 
  2245  0418                     	;# 
  2246  0419                     	;# 
  2247  041A                     	;# 
  2248  041B                     	;# 
  2249  041C                     	;# 
  2250  041D                     	;# 
  2251  041E                     	;# 
  2252  048D                     	;# 
  2253  0491                     	;# 
  2254  0491                     	;# 
  2255  0492                     	;# 
  2256  0492                     	;# 
  2257  0493                     	;# 
  2258  0493                     	;# 
  2259  0493                     	;# 
  2260  0494                     	;# 
  2261  0494                     	;# 
  2262  0495                     	;# 
  2263  0495                     	;# 
  2264  0496                     	;# 
  2265  0496                     	;# 
  2266  0497                     	;# 
  2267  0497                     	;# 
  2268  0595                     	;# 
  2269  0596                     	;# 
  2270  0597                     	;# 
  2271  059C                     	;# 
  2272  059D                     	;# 
  2273  059E                     	;# 
  2274  0611                     	;# 
  2275  0611                     	;# 
  2276  0612                     	;# 
  2277  0613                     	;# 
  2278  0614                     	;# 
  2279  0614                     	;# 
  2280  0615                     	;# 
  2281  0616                     	;# 
  2282  0617                     	;# 
  2283  0617                     	;# 
  2284  0618                     	;# 
  2285  0619                     	;# 
  2286  061A                     	;# 
  2287  061A                     	;# 
  2288  061B                     	;# 
  2289  061C                     	;# 
  2290  061D                     	;# 
  2291  061D                     	;# 
  2292  061E                     	;# 
  2293  061F                     	;# 
  2294  0FE4                     	;# 
  2295  0FE5                     	;# 
  2296  0FE6                     	;# 
  2297  0FE7                     	;# 
  2298  0FE8                     	;# 
  2299  0FE9                     	;# 
  2300  0FEA                     	;# 
  2301  0FEB                     	;# 
  2302  0FED                     	;# 
  2303  0FEE                     	;# 
  2304  0FEF                     	;# 
  2305  0000                     	;# 
  2306  0001                     	;# 
  2307  0002                     	;# 
  2308  0003                     	;# 
  2309  0004                     	;# 
  2310  0005                     	;# 
  2311  0006                     	;# 
  2312  0007                     	;# 
  2313  0008                     	;# 
  2314  0009                     	;# 
  2315  000A                     	;# 
  2316  000B                     	;# 
  2317  000C                     	;# 
  2318  000D                     	;# 
  2319  000E                     	;# 
  2320  000F                     	;# 
  2321  0010                     	;# 
  2322  0011                     	;# 
  2323  0012                     	;# 
  2324  0013                     	;# 
  2325  0014                     	;# 
  2326  0015                     	;# 
  2327  0016                     	;# 
  2328  0016                     	;# 
  2329  0017                     	;# 
  2330  0018                     	;# 
  2331  0019                     	;# 
  2332  001A                     	;# 
  2333  001B                     	;# 
  2334  001C                     	;# 
  2335  008C                     	;# 
  2336  008D                     	;# 
  2337  008E                     	;# 
  2338  008F                     	;# 
  2339  0090                     	;# 
  2340  0091                     	;# 
  2341  0092                     	;# 
  2342  0093                     	;# 
  2343  0094                     	;# 
  2344  0095                     	;# 
  2345  0096                     	;# 
  2346  0097                     	;# 
  2347  0099                     	;# 
  2348  009A                     	;# 
  2349  009B                     	;# 
  2350  009B                     	;# 
  2351  009C                     	;# 
  2352  009D                     	;# 
  2353  009E                     	;# 
  2354  010C                     	;# 
  2355  010D                     	;# 
  2356  010E                     	;# 
  2357  010F                     	;# 
  2358  0110                     	;# 
  2359  0116                     	;# 
  2360  0117                     	;# 
  2361  011D                     	;# 
  2362  018C                     	;# 
  2363  018D                     	;# 
  2364  018F                     	;# 
  2365  0190                     	;# 
  2366  0191                     	;# 
  2367  0191                     	;# 
  2368  0192                     	;# 
  2369  0193                     	;# 
  2370  0193                     	;# 
  2371  0194                     	;# 
  2372  0195                     	;# 
  2373  0196                     	;# 
  2374  0197                     	;# 
  2375  0199                     	;# 
  2376  0199                     	;# 
  2377  0199                     	;# 
  2378  019A                     	;# 
  2379  019A                     	;# 
  2380  019A                     	;# 
  2381  019B                     	;# 
  2382  019B                     	;# 
  2383  019B                     	;# 
  2384  019B                     	;# 
  2385  019B                     	;# 
  2386  019C                     	;# 
  2387  019C                     	;# 
  2388  019C                     	;# 
  2389  019D                     	;# 
  2390  019D                     	;# 
  2391  019D                     	;# 
  2392  019E                     	;# 
  2393  019E                     	;# 
  2394  019E                     	;# 
  2395  019F                     	;# 
  2396  019F                     	;# 
  2397  019F                     	;# 
  2398  020D                     	;# 
  2399  020F                     	;# 
  2400  0210                     	;# 
  2401  0211                     	;# 
  2402  0211                     	;# 
  2403  0212                     	;# 
  2404  0212                     	;# 
  2405  0213                     	;# 
  2406  0213                     	;# 
  2407  0214                     	;# 
  2408  0214                     	;# 
  2409  0215                     	;# 
  2410  0215                     	;# 
  2411  0215                     	;# 
  2412  0216                     	;# 
  2413  0216                     	;# 
  2414  0217                     	;# 
  2415  0217                     	;# 
  2416  0219                     	;# 
  2417  021A                     	;# 
  2418  021B                     	;# 
  2419  021C                     	;# 
  2420  021D                     	;# 
  2421  021E                     	;# 
  2422  021F                     	;# 
  2423  028C                     	;# 
  2424  028D                     	;# 
  2425  0291                     	;# 
  2426  0291                     	;# 
  2427  0292                     	;# 
  2428  0293                     	;# 
  2429  0298                     	;# 
  2430  0298                     	;# 
  2431  0299                     	;# 
  2432  029A                     	;# 
  2433  029D                     	;# 
  2434  029E                     	;# 
  2435  029F                     	;# 
  2436  030C                     	;# 
  2437  030D                     	;# 
  2438  0311                     	;# 
  2439  0311                     	;# 
  2440  0312                     	;# 
  2441  0313                     	;# 
  2442  0318                     	;# 
  2443  0318                     	;# 
  2444  0319                     	;# 
  2445  031A                     	;# 
  2446  031C                     	;# 
  2447  031C                     	;# 
  2448  031D                     	;# 
  2449  031E                     	;# 
  2450  038C                     	;# 
  2451  038D                     	;# 
  2452  0394                     	;# 
  2453  0395                     	;# 
  2454  0396                     	;# 
  2455  040C                     	;# 
  2456  040D                     	;# 
  2457  0411                     	;# 
  2458  0411                     	;# 
  2459  0412                     	;# 
  2460  0413                     	;# 
  2461  0414                     	;# 
  2462  0415                     	;# 
  2463  0416                     	;# 
  2464  0417                     	;# 
  2465  0418                     	;# 
  2466  0418                     	;# 
  2467  0419                     	;# 
  2468  041A                     	;# 
  2469  041B                     	;# 
  2470  041C                     	;# 
  2471  041D                     	;# 
  2472  041E                     	;# 
  2473  048D                     	;# 
  2474  0491                     	;# 
  2475  0491                     	;# 
  2476  0492                     	;# 
  2477  0492                     	;# 
  2478  0493                     	;# 
  2479  0493                     	;# 
  2480  0493                     	;# 
  2481  0494                     	;# 
  2482  0494                     	;# 
  2483  0495                     	;# 
  2484  0495                     	;# 
  2485  0496                     	;# 
  2486  0496                     	;# 
  2487  0497                     	;# 
  2488  0497                     	;# 
  2489  0595                     	;# 
  2490  0596                     	;# 
  2491  0597                     	;# 
  2492  059C                     	;# 
  2493  059D                     	;# 
  2494  059E                     	;# 
  2495  0611                     	;# 
  2496  0611                     	;# 
  2497  0612                     	;# 
  2498  0613                     	;# 
  2499  0614                     	;# 
  2500  0614                     	;# 
  2501  0615                     	;# 
  2502  0616                     	;# 
  2503  0617                     	;# 
  2504  0617                     	;# 
  2505  0618                     	;# 
  2506  0619                     	;# 
  2507  061A                     	;# 
  2508  061A                     	;# 
  2509  061B                     	;# 
  2510  061C                     	;# 
  2511  061D                     	;# 
  2512  061D                     	;# 
  2513  061E                     	;# 
  2514  061F                     	;# 
  2515  0FE4                     	;# 
  2516  0FE5                     	;# 
  2517  0FE6                     	;# 
  2518  0FE7                     	;# 
  2519  0FE8                     	;# 
  2520  0FE9                     	;# 
  2521  0FEA                     	;# 
  2522  0FEB                     	;# 
  2523  0FED                     	;# 
  2524  0FEE                     	;# 
  2525  0FEF                     	;# 
  2526  0000                     	;# 
  2527  0001                     	;# 
  2528  0002                     	;# 
  2529  0003                     	;# 
  2530  0004                     	;# 
  2531  0005                     	;# 
  2532  0006                     	;# 
  2533  0007                     	;# 
  2534  0008                     	;# 
  2535  0009                     	;# 
  2536  000A                     	;# 
  2537  000B                     	;# 
  2538  000C                     	;# 
  2539  000D                     	;# 
  2540  000E                     	;# 
  2541  000F                     	;# 
  2542  0010                     	;# 
  2543  0011                     	;# 
  2544  0012                     	;# 
  2545  0013                     	;# 
  2546  0014                     	;# 
  2547  0015                     	;# 
  2548  0016                     	;# 
  2549  0016                     	;# 
  2550  0017                     	;# 
  2551  0018                     	;# 
  2552  0019                     	;# 
  2553  001A                     	;# 
  2554  001B                     	;# 
  2555  001C                     	;# 
  2556  008C                     	;# 
  2557  008D                     	;# 
  2558  008E                     	;# 
  2559  008F                     	;# 
  2560  0090                     	;# 
  2561  0091                     	;# 
  2562  0092                     	;# 
  2563  0093                     	;# 
  2564  0094                     	;# 
  2565  0095                     	;# 
  2566  0096                     	;# 
  2567  0097                     	;# 
  2568  0099                     	;# 
  2569  009A                     	;# 
  2570  009B                     	;# 
  2571  009B                     	;# 
  2572  009C                     	;# 
  2573  009D                     	;# 
  2574  009E                     	;# 
  2575  010C                     	;# 
  2576  010D                     	;# 
  2577  010E                     	;# 
  2578  010F                     	;# 
  2579  0110                     	;# 
  2580  0116                     	;# 
  2581  0117                     	;# 
  2582  011D                     	;# 
  2583  018C                     	;# 
  2584  018D                     	;# 
  2585  018F                     	;# 
  2586  0190                     	;# 
  2587  0191                     	;# 
  2588  0191                     	;# 
  2589  0192                     	;# 
  2590  0193                     	;# 
  2591  0193                     	;# 
  2592  0194                     	;# 
  2593  0195                     	;# 
  2594  0196                     	;# 
  2595  0197                     	;# 
  2596  0199                     	;# 
  2597  0199                     	;# 
  2598  0199                     	;# 
  2599  019A                     	;# 
  2600  019A                     	;# 
  2601  019A                     	;# 
  2602  019B                     	;# 
  2603  019B                     	;# 
  2604  019B                     	;# 
  2605  019B                     	;# 
  2606  019B                     	;# 
  2607  019C                     	;# 
  2608  019C                     	;# 
  2609  019C                     	;# 
  2610  019D                     	;# 
  2611  019D                     	;# 
  2612  019D                     	;# 
  2613  019E                     	;# 
  2614  019E                     	;# 
  2615  019E                     	;# 
  2616  019F                     	;# 
  2617  019F                     	;# 
  2618  019F                     	;# 
  2619  020D                     	;# 
  2620  020F                     	;# 
  2621  0210                     	;# 
  2622  0211                     	;# 
  2623  0211                     	;# 
  2624  0212                     	;# 
  2625  0212                     	;# 
  2626  0213                     	;# 
  2627  0213                     	;# 
  2628  0214                     	;# 
  2629  0214                     	;# 
  2630  0215                     	;# 
  2631  0215                     	;# 
  2632  0215                     	;# 
  2633  0216                     	;# 
  2634  0216                     	;# 
  2635  0217                     	;# 
  2636  0217                     	;# 
  2637  0219                     	;# 
  2638  021A                     	;# 
  2639  021B                     	;# 
  2640  021C                     	;# 
  2641  021D                     	;# 
  2642  021E                     	;# 
  2643  021F                     	;# 
  2644  028C                     	;# 
  2645  028D                     	;# 
  2646  0291                     	;# 
  2647  0291                     	;# 
  2648  0292                     	;# 
  2649  0293                     	;# 
  2650  0298                     	;# 
  2651  0298                     	;# 
  2652  0299                     	;# 
  2653  029A                     	;# 
  2654  029D                     	;# 
  2655  029E                     	;# 
  2656  029F                     	;# 
  2657  030C                     	;# 
  2658  030D                     	;# 
  2659  0311                     	;# 
  2660  0311                     	;# 
  2661  0312                     	;# 
  2662  0313                     	;# 
  2663  0318                     	;# 
  2664  0318                     	;# 
  2665  0319                     	;# 
  2666  031A                     	;# 
  2667  031C                     	;# 
  2668  031C                     	;# 
  2669  031D                     	;# 
  2670  031E                     	;# 
  2671  038C                     	;# 
  2672  038D                     	;# 
  2673  0394                     	;# 
  2674  0395                     	;# 
  2675  0396                     	;# 
  2676  040C                     	;# 
  2677  040D                     	;# 
  2678  0411                     	;# 
  2679  0411                     	;# 
  2680  0412                     	;# 
  2681  0413                     	;# 
  2682  0414                     	;# 
  2683  0415                     	;# 
  2684  0416                     	;# 
  2685  0417                     	;# 
  2686  0418                     	;# 
  2687  0418                     	;# 
  2688  0419                     	;# 
  2689  041A                     	;# 
  2690  041B                     	;# 
  2691  041C                     	;# 
  2692  041D                     	;# 
  2693  041E                     	;# 
  2694  048D                     	;# 
  2695  0491                     	;# 
  2696  0491                     	;# 
  2697  0492                     	;# 
  2698  0492                     	;# 
  2699  0493                     	;# 
  2700  0493                     	;# 
  2701  0493                     	;# 
  2702  0494                     	;# 
  2703  0494                     	;# 
  2704  0495                     	;# 
  2705  0495                     	;# 
  2706  0496                     	;# 
  2707  0496                     	;# 
  2708  0497                     	;# 
  2709  0497                     	;# 
  2710  0595                     	;# 
  2711  0596                     	;# 
  2712  0597                     	;# 
  2713  059C                     	;# 
  2714  059D                     	;# 
  2715  059E                     	;# 
  2716  0611                     	;# 
  2717  0611                     	;# 
  2718  0612                     	;# 
  2719  0613                     	;# 
  2720  0614                     	;# 
  2721  0614                     	;# 
  2722  0615                     	;# 
  2723  0616                     	;# 
  2724  0617                     	;# 
  2725  0617                     	;# 
  2726  0618                     	;# 
  2727  0619                     	;# 
  2728  061A                     	;# 
  2729  061A                     	;# 
  2730  061B                     	;# 
  2731  061C                     	;# 
  2732  061D                     	;# 
  2733  061D                     	;# 
  2734  061E                     	;# 
  2735  061F                     	;# 
  2736  0FE4                     	;# 
  2737  0FE5                     	;# 
  2738  0FE6                     	;# 
  2739  0FE7                     	;# 
  2740  0FE8                     	;# 
  2741  0FE9                     	;# 
  2742  0FEA                     	;# 
  2743  0FEB                     	;# 
  2744  0FED                     	;# 
  2745  0FEE                     	;# 
  2746  0FEF                     	;# 
  2747  0000                     	;# 
  2748  0001                     	;# 
  2749  0002                     	;# 
  2750  0003                     	;# 
  2751  0004                     	;# 
  2752  0005                     	;# 
  2753  0006                     	;# 
  2754  0007                     	;# 
  2755  0008                     	;# 
  2756  0009                     	;# 
  2757  000A                     	;# 
  2758  000B                     	;# 
  2759  000C                     	;# 
  2760  000D                     	;# 
  2761  000E                     	;# 
  2762  000F                     	;# 
  2763  0010                     	;# 
  2764  0011                     	;# 
  2765  0012                     	;# 
  2766  0013                     	;# 
  2767  0014                     	;# 
  2768  0015                     	;# 
  2769  0016                     	;# 
  2770  0016                     	;# 
  2771  0017                     	;# 
  2772  0018                     	;# 
  2773  0019                     	;# 
  2774  001A                     	;# 
  2775  001B                     	;# 
  2776  001C                     	;# 
  2777  008C                     	;# 
  2778  008D                     	;# 
  2779  008E                     	;# 
  2780  008F                     	;# 
  2781  0090                     	;# 
  2782  0091                     	;# 
  2783  0092                     	;# 
  2784  0093                     	;# 
  2785  0094                     	;# 
  2786  0095                     	;# 
  2787  0096                     	;# 
  2788  0097                     	;# 
  2789  0099                     	;# 
  2790  009A                     	;# 
  2791  009B                     	;# 
  2792  009B                     	;# 
  2793  009C                     	;# 
  2794  009D                     	;# 
  2795  009E                     	;# 
  2796  010C                     	;# 
  2797  010D                     	;# 
  2798  010E                     	;# 
  2799  010F                     	;# 
  2800  0110                     	;# 
  2801  0116                     	;# 
  2802  0117                     	;# 
  2803  011D                     	;# 
  2804  018C                     	;# 
  2805  018D                     	;# 
  2806  018F                     	;# 
  2807  0190                     	;# 
  2808  0191                     	;# 
  2809  0191                     	;# 
  2810  0192                     	;# 
  2811  0193                     	;# 
  2812  0193                     	;# 
  2813  0194                     	;# 
  2814  0195                     	;# 
  2815  0196                     	;# 
  2816  0197                     	;# 
  2817  0199                     	;# 
  2818  0199                     	;# 
  2819  0199                     	;# 
  2820  019A                     	;# 
  2821  019A                     	;# 
  2822  019A                     	;# 
  2823  019B                     	;# 
  2824  019B                     	;# 
  2825  019B                     	;# 
  2826  019B                     	;# 
  2827  019B                     	;# 
  2828  019C                     	;# 
  2829  019C                     	;# 
  2830  019C                     	;# 
  2831  019D                     	;# 
  2832  019D                     	;# 
  2833  019D                     	;# 
  2834  019E                     	;# 
  2835  019E                     	;# 
  2836  019E                     	;# 
  2837  019F                     	;# 
  2838  019F                     	;# 
  2839  019F                     	;# 
  2840  020D                     	;# 
  2841  020F                     	;# 
  2842  0210                     	;# 
  2843  0211                     	;# 
  2844  0211                     	;# 
  2845  0212                     	;# 
  2846  0212                     	;# 
  2847  0213                     	;# 
  2848  0213                     	;# 
  2849  0214                     	;# 
  2850  0214                     	;# 
  2851  0215                     	;# 
  2852  0215                     	;# 
  2853  0215                     	;# 
  2854  0216                     	;# 
  2855  0216                     	;# 
  2856  0217                     	;# 
  2857  0217                     	;# 
  2858  0219                     	;# 
  2859  021A                     	;# 
  2860  021B                     	;# 
  2861  021C                     	;# 
  2862  021D                     	;# 
  2863  021E                     	;# 
  2864  021F                     	;# 
  2865  028C                     	;# 
  2866  028D                     	;# 
  2867  0291                     	;# 
  2868  0291                     	;# 
  2869  0292                     	;# 
  2870  0293                     	;# 
  2871  0298                     	;# 
  2872  0298                     	;# 
  2873  0299                     	;# 
  2874  029A                     	;# 
  2875  029D                     	;# 
  2876  029E                     	;# 
  2877  029F                     	;# 
  2878  030C                     	;# 
  2879  030D                     	;# 
  2880  0311                     	;# 
  2881  0311                     	;# 
  2882  0312                     	;# 
  2883  0313                     	;# 
  2884  0318                     	;# 
  2885  0318                     	;# 
  2886  0319                     	;# 
  2887  031A                     	;# 
  2888  031C                     	;# 
  2889  031C                     	;# 
  2890  031D                     	;# 
  2891  031E                     	;# 
  2892  038C                     	;# 
  2893  038D                     	;# 
  2894  0394                     	;# 
  2895  0395                     	;# 
  2896  0396                     	;# 
  2897  040C                     	;# 
  2898  040D                     	;# 
  2899  0411                     	;# 
  2900  0411                     	;# 
  2901  0412                     	;# 
  2902  0413                     	;# 
  2903  0414                     	;# 
  2904  0415                     	;# 
  2905  0416                     	;# 
  2906  0417                     	;# 
  2907  0418                     	;# 
  2908  0418                     	;# 
  2909  0419                     	;# 
  2910  041A                     	;# 
  2911  041B                     	;# 
  2912  041C                     	;# 
  2913  041D                     	;# 
  2914  041E                     	;# 
  2915  048D                     	;# 
  2916  0491                     	;# 
  2917  0491                     	;# 
  2918  0492                     	;# 
  2919  0492                     	;# 
  2920  0493                     	;# 
  2921  0493                     	;# 
  2922  0493                     	;# 
  2923  0494                     	;# 
  2924  0494                     	;# 
  2925  0495                     	;# 
  2926  0495                     	;# 
  2927  0496                     	;# 
  2928  0496                     	;# 
  2929  0497                     	;# 
  2930  0497                     	;# 
  2931  0595                     	;# 
  2932  0596                     	;# 
  2933  0597                     	;# 
  2934  059C                     	;# 
  2935  059D                     	;# 
  2936  059E                     	;# 
  2937  0611                     	;# 
  2938  0611                     	;# 
  2939  0612                     	;# 
  2940  0613                     	;# 
  2941  0614                     	;# 
  2942  0614                     	;# 
  2943  0615                     	;# 
  2944  0616                     	;# 
  2945  0617                     	;# 
  2946  0617                     	;# 
  2947  0618                     	;# 
  2948  0619                     	;# 
  2949  061A                     	;# 
  2950  061A                     	;# 
  2951  061B                     	;# 
  2952  061C                     	;# 
  2953  061D                     	;# 
  2954  061D                     	;# 
  2955  061E                     	;# 
  2956  061F                     	;# 
  2957  0FE4                     	;# 
  2958  0FE5                     	;# 
  2959  0FE6                     	;# 
  2960  0FE7                     	;# 
  2961  0FE8                     	;# 
  2962  0FE9                     	;# 
  2963  0FEA                     	;# 
  2964  0FEB                     	;# 
  2965  0FED                     	;# 
  2966  0FEE                     	;# 
  2967  0FEF                     	;_mod5
  2968                           
  2969                           	psect	idataBANK0
  2970  07FE                     __pidataBANK0:	
  2971                           
  2972                           ;initializer for _longTap_state
  2973  07FE  34FF               	retlw	255
  2974                           
  2975                           	psect	idataBANK1
  2976  1F4E                     __pidataBANK1:	
  2977                           
  2978                           ;initializer for _baseline_delay_time
  2979  1F4E  34D0               	retlw	208
  2980  1F4F  3407               	retlw	7
  2981  1F50  3400               	retlw	0
  2982  1F51  3400               	retlw	0
  2983                           
  2984                           ;initializer for _delay_time
  2985  1F52  34D0               	retlw	208
  2986  1F53  3407               	retlw	7
  2987  1F54  3400               	retlw	0
  2988  1F55  3400               	retlw	0
  2989                           
  2990                           ;initializer for _bottom_push_state
  2991  1F56  3406               	retlw	6
  2992  1F57  3400               	retlw	0
  2993                           
  2994                           ;initializer for _knob1_prev
  2995  1F58  34D0               	retlw	208
  2996  1F59  3407               	retlw	7
  2997                           
  2998                           ;initializer for _knob2_prev
  2999  1F5A  34D0               	retlw	208
  3000  1F5B  3407               	retlw	7
  3001                           
  3002                           ;initializer for _knob3_prev
  3003  1F5C  34D0               	retlw	208
  3004  1F5D  3407               	retlw	7
  3005                           
  3006                           ;initializer for _knob4_prev
  3007  1F5E  34D0               	retlw	208
  3008  1F5F  3407               	retlw	7
  3009                           
  3010                           ;initializer for _knob5_prev
  3011  1F60  34D0               	retlw	208
  3012  1F61  3407               	retlw	7
  3013                           
  3014                           ;initializer for _long_press_limit
  3015  1F62  34E8               	retlw	232
  3016  1F63  3403               	retlw	3
  3017                           
  3018                           ;initializer for _tap_iteration
  3019  1F64  3401               	retlw	1
  3020  1F65  3400               	retlw	0
  3021                           
  3022                           ;initializer for _top_push_state
  3023  1F66  3406               	retlw	6
  3024  1F67  3400               	retlw	0
  3025                           
  3026                           ;initializer for _blink_rate
  3027  1F68  3414               	retlw	20
  3028                           
  3029                           ;initializer for _feedback_state
  3030  1F69  34FF               	retlw	255
  3031                           
  3032                           ;initializer for _num_taps
  3033  1F6A  3404               	retlw	4
  3034                           
  3035                           ;initializer for _switchBypass_state
  3036  1F6B  34FF               	retlw	255
  3037                           
  3038                           ;initializer for _switchTap_state
  3039  1F6C  34FF               	retlw	255
  3040                           
  3041                           	psect	idataBANK2
  3042  1EA1                     __pidataBANK2:	
  3043                           
  3044                           ;initializer for _blink_delay
  3045  1EA1  3464               	retlw	100
  3046  1EA2  3400               	retlw	0
  3047                           
  3048                           ;initializer for _delay_time_changed
  3049  1EA3  3401               	retlw	1
  3050  1EA4  3400               	retlw	0
  3051                           
  3052                           ;initializer for _mod_delay_time
  3053  1EA5  34D0               	retlw	208
  3054  1EA6  3407               	retlw	7
  3055                           
  3056                           ;initializer for _switchBypass_up
  3057  1EA7  3401               	retlw	1
  3058  1EA8  3400               	retlw	0
  3059                           
  3060                           ;initializer for _blink_state
  3061  1EA9  3401               	retlw	1
  3062                           
  3063                           ;initializer for _currentBypassState
  3064  1EAA  34FF               	retlw	255
  3065                           
  3066                           	psect	idataBANK4
  3067  11DF                     __pidataBANK4:	
  3068                           
  3069                           ;initializer for _mod2
  3070  11DF  3400               	retlw	0
  3071  11E0  3400               	retlw	0
  3072  11E1  340D               	retlw	13
  3073  11E2  3400               	retlw	0
  3074  11E3  341B               	retlw	27
  3075  11E4  3400               	retlw	0
  3076  11E5  3428               	retlw	40
  3077  11E6  3400               	retlw	0
  3078  11E7  3435               	retlw	53
  3079  11E8  3400               	retlw	0
  3080  11E9  3443               	retlw	67
  3081  11EA  3400               	retlw	0
  3082  11EB  3450               	retlw	80
  3083  11EC  3400               	retlw	0
  3084  11ED  345D               	retlw	93
  3085  11EE  3400               	retlw	0
  3086  11EF  345D               	retlw	93
  3087  11F0  3400               	retlw	0
  3088  11F1  3450               	retlw	80
  3089  11F2  3400               	retlw	0
  3090  11F3  3443               	retlw	67
  3091  11F4  3400               	retlw	0
  3092  11F5  3435               	retlw	53
  3093  11F6  3400               	retlw	0
  3094  11F7  3428               	retlw	40
  3095  11F8  3400               	retlw	0
  3096  11F9  341B               	retlw	27
  3097  11FA  3400               	retlw	0
  3098  11FB  340D               	retlw	13
  3099  11FC  3400               	retlw	0
  3100  11FD  3400               	retlw	0
  3101  11FE  3400               	retlw	0
  3102  11FF  34F3               	retlw	243
  3103  1200  34FF               	retlw	255
  3104  1201  34E5               	retlw	229
  3105  1202  34FF               	retlw	255
  3106  1203  34D8               	retlw	216
  3107  1204  34FF               	retlw	255
  3108  1205  34CB               	retlw	203
  3109  1206  34FF               	retlw	255
  3110  1207  34BD               	retlw	189
  3111  1208  34FF               	retlw	255
  3112  1209  34B0               	retlw	176
  3113  120A  34FF               	retlw	255
  3114  120B  34A3               	retlw	163
  3115  120C  34FF               	retlw	255
  3116  120D  34A3               	retlw	163
  3117  120E  34FF               	retlw	255
  3118  120F  34B0               	retlw	176
  3119  1210  34FF               	retlw	255
  3120  1211  34BD               	retlw	189
  3121  1212  34FF               	retlw	255
  3122  1213  34CB               	retlw	203
  3123  1214  34FF               	retlw	255
  3124  1215  34D8               	retlw	216
  3125  1216  34FF               	retlw	255
  3126  1217  34E5               	retlw	229
  3127  1218  34FF               	retlw	255
  3128                           
  3129                           	psect	idataBANK5
  3130  11A5                     __pidataBANK5:	
  3131                           
  3132                           ;initializer for _mod3
  3133  11A5  3400               	retlw	0
  3134  11A6  3400               	retlw	0
  3135  11A7  3407               	retlw	7
  3136  11A8  3400               	retlw	0
  3137  11A9  340D               	retlw	13
  3138  11AA  3400               	retlw	0
  3139  11AB  3414               	retlw	20
  3140  11AC  3400               	retlw	0
  3141  11AD  341B               	retlw	27
  3142  11AE  3400               	retlw	0
  3143  11AF  3421               	retlw	33
  3144  11B0  3400               	retlw	0
  3145  11B1  3428               	retlw	40
  3146  11B2  3400               	retlw	0
  3147  11B3  342F               	retlw	47
  3148  11B4  3400               	retlw	0
  3149  11B5  3435               	retlw	53
  3150  11B6  3400               	retlw	0
  3151  11B7  343C               	retlw	60
  3152  11B8  3400               	retlw	0
  3153  11B9  3443               	retlw	67
  3154  11BA  3400               	retlw	0
  3155  11BB  3449               	retlw	73
  3156  11BC  3400               	retlw	0
  3157  11BD  3450               	retlw	80
  3158  11BE  3400               	retlw	0
  3159  11BF  3457               	retlw	87
  3160  11C0  3400               	retlw	0
  3161  11C1  345D               	retlw	93
  3162  11C2  3400               	retlw	0
  3163  11C3  349C               	retlw	156
  3164  11C4  34FF               	retlw	255
  3165  11C5  34A3               	retlw	163
  3166  11C6  34FF               	retlw	255
  3167  11C7  34A9               	retlw	169
  3168  11C8  34FF               	retlw	255
  3169  11C9  34B0               	retlw	176
  3170  11CA  34FF               	retlw	255
  3171  11CB  34B7               	retlw	183
  3172  11CC  34FF               	retlw	255
  3173  11CD  34BD               	retlw	189
  3174  11CE  34FF               	retlw	255
  3175  11CF  34C4               	retlw	196
  3176  11D0  34FF               	retlw	255
  3177  11D1  34CB               	retlw	203
  3178  11D2  34FF               	retlw	255
  3179  11D3  34D1               	retlw	209
  3180  11D4  34FF               	retlw	255
  3181  11D5  34D8               	retlw	216
  3182  11D6  34FF               	retlw	255
  3183  11D7  34DF               	retlw	223
  3184  11D8  34FF               	retlw	255
  3185  11D9  34E5               	retlw	229
  3186  11DA  34FF               	retlw	255
  3187  11DB  34EC               	retlw	236
  3188  11DC  34FF               	retlw	255
  3189  11DD  34F3               	retlw	243
  3190  11DE  34FF               	retlw	255
  3191                           
  3192                           	psect	idataBANK6
  3193  116B                     __pidataBANK6:	
  3194                           
  3195                           ;initializer for _mod4
  3196  116B  3464               	retlw	100
  3197  116C  3400               	retlw	0
  3198  116D  3464               	retlw	100
  3199  116E  3400               	retlw	0
  3200  116F  3464               	retlw	100
  3201  1170  3400               	retlw	0
  3202  1171  3464               	retlw	100
  3203  1172  3400               	retlw	0
  3204  1173  3464               	retlw	100
  3205  1174  3400               	retlw	0
  3206  1175  3464               	retlw	100
  3207  1176  3400               	retlw	0
  3208  1177  3464               	retlw	100
  3209  1178  3400               	retlw	0
  3210  1179  3464               	retlw	100
  3211  117A  3400               	retlw	0
  3212  117B  3464               	retlw	100
  3213  117C  3400               	retlw	0
  3214  117D  3464               	retlw	100
  3215  117E  3400               	retlw	0
  3216  117F  3464               	retlw	100
  3217  1180  3400               	retlw	0
  3218  1181  3464               	retlw	100
  3219  1182  3400               	retlw	0
  3220  1183  3464               	retlw	100
  3221  1184  3400               	retlw	0
  3222  1185  3464               	retlw	100
  3223  1186  3400               	retlw	0
  3224  1187  3464               	retlw	100
  3225  1188  3400               	retlw	0
  3226  1189  349C               	retlw	156
  3227  118A  34FF               	retlw	255
  3228  118B  349C               	retlw	156
  3229  118C  34FF               	retlw	255
  3230  118D  349C               	retlw	156
  3231  118E  34FF               	retlw	255
  3232  118F  349C               	retlw	156
  3233  1190  34FF               	retlw	255
  3234  1191  349C               	retlw	156
  3235  1192  34FF               	retlw	255
  3236  1193  349C               	retlw	156
  3237  1194  34FF               	retlw	255
  3238  1195  349C               	retlw	156
  3239  1196  34FF               	retlw	255
  3240  1197  349C               	retlw	156
  3241  1198  34FF               	retlw	255
  3242  1199  349C               	retlw	156
  3243  119A  34FF               	retlw	255
  3244  119B  349C               	retlw	156
  3245  119C  34FF               	retlw	255
  3246  119D  349C               	retlw	156
  3247  119E  34FF               	retlw	255
  3248  119F  349C               	retlw	156
  3249  11A0  34FF               	retlw	255
  3250  11A1  349C               	retlw	156
  3251  11A2  34FF               	retlw	255
  3252  11A3  349C               	retlw	156
  3253  11A4  34FF               	retlw	255
  3254                           
  3255                           	psect	idataBANK7
  3256  148A                     __pidataBANK7:	
  3257                           
  3258                           ;initializer for _B25k
  3259  148A  34FF               	retlw	255
  3260  148B  3400               	retlw	0
  3261  148C  34FF               	retlw	255
  3262  148D  3400               	retlw	0
  3263  148E  34FF               	retlw	255
  3264  148F  3400               	retlw	0
  3265  1490  34DF               	retlw	223
  3266  1491  3400               	retlw	0
  3267  1492  34AE               	retlw	174
  3268  1493  3400               	retlw	0
  3269  1494  348E               	retlw	142
  3270  1495  3400               	retlw	0
  3271  1496  3478               	retlw	120
  3272  1497  3400               	retlw	0
  3273  1498  3467               	retlw	103
  3274  1499  3400               	retlw	0
  3275  149A  345B               	retlw	91
  3276  149B  3400               	retlw	0
  3277  149C  3450               	retlw	80
  3278  149D  3400               	retlw	0
  3279  149E  3448               	retlw	72
  3280  149F  3400               	retlw	0
  3281  14A0  3442               	retlw	66
  3282  14A1  3400               	retlw	0
  3283  14A2  343C               	retlw	60
  3284  14A3  3400               	retlw	0
  3285  14A4  3437               	retlw	55
  3286  14A5  3400               	retlw	0
  3287  14A6  3433               	retlw	51
  3288  14A7  3400               	retlw	0
  3289  14A8  3430               	retlw	48
  3290  14A9  3400               	retlw	0
  3291  14AA  342D               	retlw	45
  3292  14AB  3400               	retlw	0
  3293  14AC  342A               	retlw	42
  3294  14AD  3400               	retlw	0
  3295  14AE  3427               	retlw	39
  3296  14AF  3400               	retlw	0
  3297  14B0  3425               	retlw	37
  3298  14B1  3400               	retlw	0
  3299  14B2  3423               	retlw	35
  3300  14B3  3400               	retlw	0
  3301  14B4  3421               	retlw	33
  3302  14B5  3400               	retlw	0
  3303  14B6  3420               	retlw	32
  3304  14B7  3400               	retlw	0
  3305  14B8  341E               	retlw	30
  3306  14B9  3400               	retlw	0
  3307  14BA  341D               	retlw	29
  3308  14BB  3400               	retlw	0
  3309  14BC  341C               	retlw	28
  3310  14BD  3400               	retlw	0
  3311  14BE  341B               	retlw	27
  3312  14BF  3400               	retlw	0
  3313  14C0  341A               	retlw	26
  3314  14C1  3400               	retlw	0
  3315  14C2  3419               	retlw	25
  3316  14C3  3400               	retlw	0
  3317  14C4  3418               	retlw	24
  3318  14C5  3400               	retlw	0
  3319  14C6  3417               	retlw	23
  3320  14C7  3400               	retlw	0
  3321  14C8  3416               	retlw	22
  3322  14C9  3400               	retlw	0
  3323  14CA  3415               	retlw	21
  3324  14CB  3400               	retlw	0
  3325  14CC  3415               	retlw	21
  3326  14CD  3400               	retlw	0
  3327  14CE  3414               	retlw	20
  3328  14CF  3400               	retlw	0
  3329  14D0  3413               	retlw	19
  3330  14D1  3400               	retlw	0
  3331  14D2  340F               	retlw	15
  3332  14D3  3400               	retlw	0
  3333  14D4  340B               	retlw	11
  3334  14D5  3400               	retlw	0
  3335  14D6  3407               	retlw	7
  3336  14D7  3400               	retlw	0
  3337  14D8  3407               	retlw	7
  3338  14D9  3400               	retlw	0
  3339                           
  3340                           	psect	idataBANK8
  3341  143A                     __pidataBANK8:	
  3342                           
  3343                           ;initializer for _iB25k
  3344  143A  3407               	retlw	7
  3345  143B  3400               	retlw	0
  3346  143C  3407               	retlw	7
  3347  143D  3400               	retlw	0
  3348  143E  340B               	retlw	11
  3349  143F  3400               	retlw	0
  3350  1440  340F               	retlw	15
  3351  1441  3400               	retlw	0
  3352  1442  3413               	retlw	19
  3353  1443  3400               	retlw	0
  3354  1444  3414               	retlw	20
  3355  1445  3400               	retlw	0
  3356  1446  3415               	retlw	21
  3357  1447  3400               	retlw	0
  3358  1448  3415               	retlw	21
  3359  1449  3400               	retlw	0
  3360  144A  3416               	retlw	22
  3361  144B  3400               	retlw	0
  3362  144C  3417               	retlw	23
  3363  144D  3400               	retlw	0
  3364  144E  3418               	retlw	24
  3365  144F  3400               	retlw	0
  3366  1450  3419               	retlw	25
  3367  1451  3400               	retlw	0
  3368  1452  341A               	retlw	26
  3369  1453  3400               	retlw	0
  3370  1454  341B               	retlw	27
  3371  1455  3400               	retlw	0
  3372  1456  341C               	retlw	28
  3373  1457  3400               	retlw	0
  3374  1458  341D               	retlw	29
  3375  1459  3400               	retlw	0
  3376  145A  341E               	retlw	30
  3377  145B  3400               	retlw	0
  3378  145C  3420               	retlw	32
  3379  145D  3400               	retlw	0
  3380  145E  3421               	retlw	33
  3381  145F  3400               	retlw	0
  3382  1460  3423               	retlw	35
  3383  1461  3400               	retlw	0
  3384  1462  3425               	retlw	37
  3385  1463  3400               	retlw	0
  3386  1464  3427               	retlw	39
  3387  1465  3400               	retlw	0
  3388  1466  342A               	retlw	42
  3389  1467  3400               	retlw	0
  3390  1468  342D               	retlw	45
  3391  1469  3400               	retlw	0
  3392  146A  3430               	retlw	48
  3393  146B  3400               	retlw	0
  3394  146C  3433               	retlw	51
  3395  146D  3400               	retlw	0
  3396  146E  3437               	retlw	55
  3397  146F  3400               	retlw	0
  3398  1470  343C               	retlw	60
  3399  1471  3400               	retlw	0
  3400  1472  3442               	retlw	66
  3401  1473  3400               	retlw	0
  3402  1474  3448               	retlw	72
  3403  1475  3400               	retlw	0
  3404  1476  3450               	retlw	80
  3405  1477  3400               	retlw	0
  3406  1478  345B               	retlw	91
  3407  1479  3400               	retlw	0
  3408  147A  3467               	retlw	103
  3409  147B  3400               	retlw	0
  3410  147C  3478               	retlw	120
  3411  147D  3400               	retlw	0
  3412  147E  348E               	retlw	142
  3413  147F  3400               	retlw	0
  3414  1480  34AE               	retlw	174
  3415  1481  3400               	retlw	0
  3416  1482  34DF               	retlw	223
  3417  1483  3400               	retlw	0
  3418  1484  34FF               	retlw	255
  3419  1485  3400               	retlw	0
  3420  1486  34FF               	retlw	255
  3421  1487  3400               	retlw	0
  3422  1488  34FF               	retlw	255
  3423  1489  3400               	retlw	0
  3424                           
  3425                           	psect	idataBANK9
  3426  1131                     __pidataBANK9:	
  3427                           
  3428                           ;initializer for _mod1
  3429  1131  3400               	retlw	0
  3430  1132  3400               	retlw	0
  3431  1133  3415               	retlw	21
  3432  1134  3400               	retlw	0
  3433  1135  3428               	retlw	40
  3434  1136  3400               	retlw	0
  3435  1137  343B               	retlw	59
  3436  1138  3400               	retlw	0
  3437  1139  344A               	retlw	74
  3438  113A  3400               	retlw	0
  3439  113B  3456               	retlw	86
  3440  113C  3400               	retlw	0
  3441  113D  345F               	retlw	95
  3442  113E  3400               	retlw	0
  3443  113F  3463               	retlw	99
  3444  1140  3400               	retlw	0
  3445  1141  3464               	retlw	100
  3446  1142  3400               	retlw	0
  3447  1143  345F               	retlw	95
  3448  1144  3400               	retlw	0
  3449  1145  3457               	retlw	87
  3450  1146  3400               	retlw	0
  3451  1147  344B               	retlw	75
  3452  1148  3400               	retlw	0
  3453  1149  343C               	retlw	60
  3454  114A  3400               	retlw	0
  3455  114B  342A               	retlw	42
  3456  114C  3400               	retlw	0
  3457  114D  3416               	retlw	22
  3458  114E  3400               	retlw	0
  3459  114F  3402               	retlw	2
  3460  1150  3400               	retlw	0
  3461  1151  34ED               	retlw	237
  3462  1152  34FF               	retlw	255
  3463  1153  34D9               	retlw	217
  3464  1154  34FF               	retlw	255
  3465  1155  34C7               	retlw	199
  3466  1156  34FF               	retlw	255
  3467  1157  34B7               	retlw	183
  3468  1158  34FF               	retlw	255
  3469  1159  34AB               	retlw	171
  3470  115A  34FF               	retlw	255
  3471  115B  34A2               	retlw	162
  3472  115C  34FF               	retlw	255
  3473  115D  349D               	retlw	157
  3474  115E  34FF               	retlw	255
  3475  115F  349C               	retlw	156
  3476  1160  34FF               	retlw	255
  3477  1161  34A8               	retlw	168
  3478  1162  34FF               	retlw	255
  3479  1163  34B4               	retlw	180
  3480  1164  34FF               	retlw	255
  3481  1165  34C3               	retlw	195
  3482  1166  34FF               	retlw	255
  3483  1167  34D5               	retlw	213
  3484  1168  34FF               	retlw	255
  3485  1169  34E8               	retlw	232
  3486  116A  34FF               	retlw	255
  3487                           
  3488                           	psect	idataBIGRAM
  3489  0D88                     __pidataBIGRAM:	
  3490                           
  3491                           ;initializer for _delay
  3492  0D88  3422               	retlw	34
  3493  0D89  3408               	retlw	8
  3494  0D8A  34FC               	retlw	252
  3495  0D8B  3407               	retlw	7
  3496  0D8C  34D8               	retlw	216
  3497  0D8D  3407               	retlw	7
  3498  0D8E  34B5               	retlw	181
  3499  0D8F  3407               	retlw	7
  3500  0D90  3493               	retlw	147
  3501  0D91  3407               	retlw	7
  3502  0D92  3472               	retlw	114
  3503  0D93  3407               	retlw	7
  3504  0D94  3452               	retlw	82
  3505  0D95  3407               	retlw	7
  3506  0D96  3434               	retlw	52
  3507  0D97  3407               	retlw	7
  3508  0D98  3416               	retlw	22
  3509  0D99  3407               	retlw	7
  3510  0D9A  34F9               	retlw	249
  3511  0D9B  3406               	retlw	6
  3512  0D9C  34DD               	retlw	221
  3513  0D9D  3406               	retlw	6
  3514  0D9E  34C2               	retlw	194
  3515  0D9F  3406               	retlw	6
  3516  0DA0  34A8               	retlw	168
  3517  0DA1  3406               	retlw	6
  3518  0DA2  348F               	retlw	143
  3519  0DA3  3406               	retlw	6
  3520  0DA4  3476               	retlw	118
  3521  0DA5  3406               	retlw	6
  3522  0DA6  345E               	retlw	94
  3523  0DA7  3406               	retlw	6
  3524  0DA8  3447               	retlw	71
  3525  0DA9  3406               	retlw	6
  3526  0DAA  3430               	retlw	48
  3527  0DAB  3406               	retlw	6
  3528  0DAC  341A               	retlw	26
  3529  0DAD  3406               	retlw	6
  3530  0DAE  3405               	retlw	5
  3531  0DAF  3406               	retlw	6
  3532  0DB0  34F0               	retlw	240
  3533  0DB1  3405               	retlw	5
  3534  0DB2  34DC               	retlw	220
  3535  0DB3  3405               	retlw	5
  3536  0DB4  34C8               	retlw	200
  3537  0DB5  3405               	retlw	5
  3538  0DB6  34B5               	retlw	181
  3539  0DB7  3405               	retlw	5
  3540  0DB8  34A3               	retlw	163
  3541  0DB9  3405               	retlw	5
  3542  0DBA  3490               	retlw	144
  3543  0DBB  3405               	retlw	5
  3544  0DBC  347F               	retlw	127
  3545  0DBD  3405               	retlw	5
  3546  0DBE  346D               	retlw	109
  3547  0DBF  3405               	retlw	5
  3548  0DC0  345C               	retlw	92
  3549  0DC1  3405               	retlw	5
  3550  0DC2  344C               	retlw	76
  3551  0DC3  3405               	retlw	5
  3552  0DC4  343C               	retlw	60
  3553  0DC5  3405               	retlw	5
  3554  0DC6  342C               	retlw	44
  3555  0DC7  3405               	retlw	5
  3556  0DC8  341D               	retlw	29
  3557  0DC9  3405               	retlw	5
  3558  0DCA  340E               	retlw	14
  3559  0DCB  3405               	retlw	5
  3560  0DCC  34FF               	retlw	255
  3561  0DCD  3404               	retlw	4
  3562  0DCE  34F1               	retlw	241
  3563  0DCF  3404               	retlw	4
  3564  0DD0  34E2               	retlw	226
  3565  0DD1  3404               	retlw	4
  3566  0DD2  34D5               	retlw	213
  3567  0DD3  3404               	retlw	4
  3568  0DD4  34C7               	retlw	199
  3569  0DD5  3404               	retlw	4
  3570  0DD6  34BA               	retlw	186
  3571  0DD7  3404               	retlw	4
  3572  0DD8  34AD               	retlw	173
  3573  0DD9  3404               	retlw	4
  3574  0DDA  34A1               	retlw	161
  3575  0DDB  3404               	retlw	4
  3576  0DDC  3494               	retlw	148
  3577  0DDD  3404               	retlw	4
  3578  0DDE  3488               	retlw	136
  3579  0DDF  3404               	retlw	4
  3580  0DE0  347D               	retlw	125
  3581  0DE1  3404               	retlw	4
  3582  0DE2  3471               	retlw	113
  3583  0DE3  3404               	retlw	4
  3584  0DE4  3466               	retlw	102
  3585  0DE5  3404               	retlw	4
  3586  0DE6  345A               	retlw	90
  3587  0DE7  3404               	retlw	4
  3588  0DE8  3450               	retlw	80
  3589  0DE9  3404               	retlw	4
  3590  0DEA  3445               	retlw	69
  3591  0DEB  3404               	retlw	4
  3592  0DEC  343A               	retlw	58
  3593  0DED  3404               	retlw	4
  3594  0DEE  3430               	retlw	48
  3595  0DEF  3404               	retlw	4
  3596  0DF0  3426               	retlw	38
  3597  0DF1  3404               	retlw	4
  3598  0DF2  341C               	retlw	28
  3599  0DF3  3404               	retlw	4
  3600  0DF4  3412               	retlw	18
  3601  0DF5  3404               	retlw	4
  3602  0DF6  3409               	retlw	9
  3603  0DF7  3404               	retlw	4
  3604  0DF8  34FF               	retlw	255
  3605  0DF9  3403               	retlw	3
  3606  0DFA  34F6               	retlw	246
  3607  0DFB  3403               	retlw	3
  3608  0DFC  34ED               	retlw	237
  3609  0DFD  3403               	retlw	3
  3610  0DFE  34E4               	retlw	228
  3611  0DFF  3403               	retlw	3
  3612  0E00  34DC               	retlw	220
  3613  0E01  3403               	retlw	3
  3614  0E02  34D3               	retlw	211
  3615  0E03  3403               	retlw	3
  3616  0E04  34CB               	retlw	203
  3617  0E05  3403               	retlw	3
  3618  0E06  34C2               	retlw	194
  3619  0E07  3403               	retlw	3
  3620  0E08  34BA               	retlw	186
  3621  0E09  3403               	retlw	3
  3622  0E0A  34B2               	retlw	178
  3623  0E0B  3403               	retlw	3
  3624  0E0C  34AA               	retlw	170
  3625  0E0D  3403               	retlw	3
  3626  0E0E  34A2               	retlw	162
  3627  0E0F  3403               	retlw	3
  3628  0E10  349B               	retlw	155
  3629  0E11  3403               	retlw	3
  3630  0E12  3493               	retlw	147
  3631  0E13  3403               	retlw	3
  3632  0E14  348C               	retlw	140
  3633  0E15  3403               	retlw	3
  3634  0E16  3485               	retlw	133
  3635  0E17  3403               	retlw	3
  3636  0E18  347E               	retlw	126
  3637  0E19  3403               	retlw	3
  3638  0E1A  3477               	retlw	119
  3639  0E1B  3403               	retlw	3
  3640  0E1C  3470               	retlw	112
  3641  0E1D  3403               	retlw	3
  3642  0E1E  3469               	retlw	105
  3643  0E1F  3403               	retlw	3
  3644  0E20  3462               	retlw	98
  3645  0E21  3403               	retlw	3
  3646  0E22  345C               	retlw	92
  3647  0E23  3403               	retlw	3
  3648  0E24  3455               	retlw	85
  3649  0E25  3403               	retlw	3
  3650  0E26  344F               	retlw	79
  3651  0E27  3403               	retlw	3
  3652  0E28  3448               	retlw	72
  3653  0E29  3403               	retlw	3
  3654  0E2A  3442               	retlw	66
  3655  0E2B  3403               	retlw	3
  3656  0E2C  343C               	retlw	60
  3657  0E2D  3403               	retlw	3
  3658  0E2E  3436               	retlw	54
  3659  0E2F  3403               	retlw	3
  3660  0E30  3430               	retlw	48
  3661  0E31  3403               	retlw	3
  3662  0E32  342A               	retlw	42
  3663  0E33  3403               	retlw	3
  3664  0E34  3424               	retlw	36
  3665  0E35  3403               	retlw	3
  3666  0E36  341F               	retlw	31
  3667  0E37  3403               	retlw	3
  3668  0E38  3419               	retlw	25
  3669  0E39  3403               	retlw	3
  3670  0E3A  3413               	retlw	19
  3671  0E3B  3403               	retlw	3
  3672  0E3C  340E               	retlw	14
  3673  0E3D  3403               	retlw	3
  3674  0E3E  3409               	retlw	9
  3675  0E3F  3403               	retlw	3
  3676  0E40  3403               	retlw	3
  3677  0E41  3403               	retlw	3
  3678  0E42  34FE               	retlw	254
  3679  0E43  3402               	retlw	2
  3680  0E44  34F9               	retlw	249
  3681  0E45  3402               	retlw	2
  3682  0E46  34F4               	retlw	244
  3683  0E47  3402               	retlw	2
  3684  0E48  34EF               	retlw	239
  3685  0E49  3402               	retlw	2
  3686  0E4A  34EA               	retlw	234
  3687  0E4B  3402               	retlw	2
  3688  0E4C  34E5               	retlw	229
  3689  0E4D  3402               	retlw	2
  3690  0E4E  34E0               	retlw	224
  3691  0E4F  3402               	retlw	2
  3692  0E50  34DB               	retlw	219
  3693  0E51  3402               	retlw	2
  3694  0E52  34D7               	retlw	215
  3695  0E53  3402               	retlw	2
  3696  0E54  34D2               	retlw	210
  3697  0E55  3402               	retlw	2
  3698  0E56  34CD               	retlw	205
  3699  0E57  3402               	retlw	2
  3700  0E58  34C9               	retlw	201
  3701  0E59  3402               	retlw	2
  3702  0E5A  34C4               	retlw	196
  3703  0E5B  3402               	retlw	2
  3704  0E5C  34C0               	retlw	192
  3705  0E5D  3402               	retlw	2
  3706  0E5E  34BC               	retlw	188
  3707  0E5F  3402               	retlw	2
  3708  0E60  34B7               	retlw	183
  3709  0E61  3402               	retlw	2
  3710  0E62  34B3               	retlw	179
  3711  0E63  3402               	retlw	2
  3712  0E64  34AF               	retlw	175
  3713  0E65  3402               	retlw	2
  3714  0E66  34AB               	retlw	171
  3715  0E67  3402               	retlw	2
  3716  0E68  34A6               	retlw	166
  3717  0E69  3402               	retlw	2
  3718  0E6A  34A2               	retlw	162
  3719  0E6B  3402               	retlw	2
  3720  0E6C  349E               	retlw	158
  3721  0E6D  3402               	retlw	2
  3722  0E6E  349A               	retlw	154
  3723  0E6F  3402               	retlw	2
  3724  0E70  3497               	retlw	151
  3725  0E71  3402               	retlw	2
  3726  0E72  3493               	retlw	147
  3727  0E73  3402               	retlw	2
  3728  0E74  348F               	retlw	143
  3729  0E75  3402               	retlw	2
  3730  0E76  348B               	retlw	139
  3731  0E77  3402               	retlw	2
  3732  0E78  3487               	retlw	135
  3733  0E79  3402               	retlw	2
  3734  0E7A  3484               	retlw	132
  3735  0E7B  3402               	retlw	2
  3736  0E7C  3480               	retlw	128
  3737  0E7D  3402               	retlw	2
  3738  0E7E  347C               	retlw	124
  3739  0E7F  3402               	retlw	2
  3740  0E80  3479               	retlw	121
  3741  0E81  3402               	retlw	2
  3742  0E82  3475               	retlw	117
  3743  0E83  3402               	retlw	2
  3744  0E84  3472               	retlw	114
  3745  0E85  3402               	retlw	2
  3746  0E86  346E               	retlw	110
  3747  0E87  3402               	retlw	2
  3748  0E88  346B               	retlw	107
  3749  0E89  3402               	retlw	2
  3750  0E8A  3467               	retlw	103
  3751  0E8B  3402               	retlw	2
  3752  0E8C  3464               	retlw	100
  3753  0E8D  3402               	retlw	2
  3754  0E8E  3461               	retlw	97
  3755  0E8F  3402               	retlw	2
  3756  0E90  345E               	retlw	94
  3757  0E91  3402               	retlw	2
  3758  0E92  345A               	retlw	90
  3759  0E93  3402               	retlw	2
  3760  0E94  3457               	retlw	87
  3761  0E95  3402               	retlw	2
  3762  0E96  3454               	retlw	84
  3763  0E97  3402               	retlw	2
  3764  0E98  3451               	retlw	81
  3765  0E99  3402               	retlw	2
  3766  0E9A  344E               	retlw	78
  3767  0E9B  3402               	retlw	2
  3768  0E9C  344B               	retlw	75
  3769  0E9D  3402               	retlw	2
  3770  0E9E  3448               	retlw	72
  3771  0E9F  3402               	retlw	2
  3772  0EA0  3445               	retlw	69
  3773  0EA1  3402               	retlw	2
  3774  0EA2  3442               	retlw	66
  3775  0EA3  3402               	retlw	2
  3776  0EA4  343F               	retlw	63
  3777  0EA5  3402               	retlw	2
  3778  0EA6  343C               	retlw	60
  3779  0EA7  3402               	retlw	2
  3780  0EA8  3439               	retlw	57
  3781  0EA9  3402               	retlw	2
  3782  0EAA  3436               	retlw	54
  3783  0EAB  3402               	retlw	2
  3784  0EAC  3433               	retlw	51
  3785  0EAD  3402               	retlw	2
  3786  0EAE  3430               	retlw	48
  3787  0EAF  3402               	retlw	2
  3788  0EB0  342E               	retlw	46
  3789  0EB1  3402               	retlw	2
  3790  0EB2  342B               	retlw	43
  3791  0EB3  3402               	retlw	2
  3792  0EB4  3428               	retlw	40
  3793  0EB5  3402               	retlw	2
  3794  0EB6  3425               	retlw	37
  3795  0EB7  3402               	retlw	2
  3796  0EB8  3423               	retlw	35
  3797  0EB9  3402               	retlw	2
  3798  0EBA  3420               	retlw	32
  3799  0EBB  3402               	retlw	2
  3800  0EBC  341E               	retlw	30
  3801  0EBD  3402               	retlw	2
  3802  0EBE  341B               	retlw	27
  3803  0EBF  3402               	retlw	2
  3804  0EC0  3418               	retlw	24
  3805  0EC1  3402               	retlw	2
  3806  0EC2  3416               	retlw	22
  3807  0EC3  3402               	retlw	2
  3808  0EC4  3413               	retlw	19
  3809  0EC5  3402               	retlw	2
  3810  0EC6  3411               	retlw	17
  3811  0EC7  3402               	retlw	2
  3812  0EC8  340E               	retlw	14
  3813  0EC9  3402               	retlw	2
  3814  0ECA  340C               	retlw	12
  3815  0ECB  3402               	retlw	2
  3816  0ECC  340A               	retlw	10
  3817  0ECD  3402               	retlw	2
  3818  0ECE  3407               	retlw	7
  3819  0ECF  3402               	retlw	2
  3820  0ED0  3405               	retlw	5
  3821  0ED1  3402               	retlw	2
  3822  0ED2  3402               	retlw	2
  3823  0ED3  3402               	retlw	2
  3824  0ED4  3400               	retlw	0
  3825  0ED5  3402               	retlw	2
  3826  0ED6  34FE               	retlw	254
  3827  0ED7  3401               	retlw	1
  3828  0ED8  34FB               	retlw	251
  3829  0ED9  3401               	retlw	1
  3830  0EDA  34F9               	retlw	249
  3831  0EDB  3401               	retlw	1
  3832  0EDC  34F7               	retlw	247
  3833  0EDD  3401               	retlw	1
  3834  0EDE  34F5               	retlw	245
  3835  0EDF  3401               	retlw	1
  3836  0EE0  34F2               	retlw	242
  3837  0EE1  3401               	retlw	1
  3838  0EE2  34F0               	retlw	240
  3839  0EE3  3401               	retlw	1
  3840  0EE4  34EE               	retlw	238
  3841  0EE5  3401               	retlw	1
  3842  0EE6  34EC               	retlw	236
  3843  0EE7  3401               	retlw	1
  3844  0EE8  34EA               	retlw	234
  3845  0EE9  3401               	retlw	1
  3846  0EEA  34E8               	retlw	232
  3847  0EEB  3401               	retlw	1
  3848  0EEC  34E6               	retlw	230
  3849  0EED  3401               	retlw	1
  3850  0EEE  34E3               	retlw	227
  3851  0EEF  3401               	retlw	1
  3852  0EF0  34E1               	retlw	225
  3853  0EF1  3401               	retlw	1
  3854  0EF2  34DF               	retlw	223
  3855  0EF3  3401               	retlw	1
  3856  0EF4  34DD               	retlw	221
  3857  0EF5  3401               	retlw	1
  3858  0EF6  34DB               	retlw	219
  3859  0EF7  3401               	retlw	1
  3860  0EF8  34D9               	retlw	217
  3861  0EF9  3401               	retlw	1
  3862  0EFA  34D7               	retlw	215
  3863  0EFB  3401               	retlw	1
  3864  0EFC  34D5               	retlw	213
  3865  0EFD  3401               	retlw	1
  3866  0EFE  34D3               	retlw	211
  3867  0EFF  3401               	retlw	1
  3868  0F00  34D2               	retlw	210
  3869  0F01  3401               	retlw	1
  3870  0F02  34D0               	retlw	208
  3871  0F03  3401               	retlw	1
  3872  0F04  34CE               	retlw	206
  3873  0F05  3401               	retlw	1
  3874  0F06  34CC               	retlw	204
  3875  0F07  3401               	retlw	1
  3876  0F08  34CA               	retlw	202
  3877  0F09  3401               	retlw	1
  3878  0F0A  34C8               	retlw	200
  3879  0F0B  3401               	retlw	1
  3880  0F0C  34C6               	retlw	198
  3881  0F0D  3401               	retlw	1
  3882  0F0E  34C4               	retlw	196
  3883  0F0F  3401               	retlw	1
  3884  0F10  34C3               	retlw	195
  3885  0F11  3401               	retlw	1
  3886  0F12  34C1               	retlw	193
  3887  0F13  3401               	retlw	1
  3888  0F14  34BF               	retlw	191
  3889  0F15  3401               	retlw	1
  3890  0F16  34BD               	retlw	189
  3891  0F17  3401               	retlw	1
  3892  0F18  34BC               	retlw	188
  3893  0F19  3401               	retlw	1
  3894  0F1A  34BA               	retlw	186
  3895  0F1B  3401               	retlw	1
  3896  0F1C  34B8               	retlw	184
  3897  0F1D  3401               	retlw	1
  3898  0F1E  34B6               	retlw	182
  3899  0F1F  3401               	retlw	1
  3900  0F20  34B5               	retlw	181
  3901  0F21  3401               	retlw	1
  3902  0F22  34B3               	retlw	179
  3903  0F23  3401               	retlw	1
  3904  0F24  34B1               	retlw	177
  3905  0F25  3401               	retlw	1
  3906  0F26  34B0               	retlw	176
  3907  0F27  3401               	retlw	1
  3908  0F28  34AE               	retlw	174
  3909  0F29  3401               	retlw	1
  3910  0F2A  34AC               	retlw	172
  3911  0F2B  3401               	retlw	1
  3912  0F2C  34AB               	retlw	171
  3913  0F2D  3401               	retlw	1
  3914  0F2E  34A9               	retlw	169
  3915  0F2F  3401               	retlw	1
  3916  0F30  34A8               	retlw	168
  3917  0F31  3401               	retlw	1
  3918  0F32  34A6               	retlw	166
  3919  0F33  3401               	retlw	1
  3920  0F34  34A4               	retlw	164
  3921  0F35  3401               	retlw	1
  3922  0F36  34A3               	retlw	163
  3923  0F37  3401               	retlw	1
  3924  0F38  34A1               	retlw	161
  3925  0F39  3401               	retlw	1
  3926  0F3A  34A0               	retlw	160
  3927  0F3B  3401               	retlw	1
  3928  0F3C  349E               	retlw	158
  3929  0F3D  3401               	retlw	1
  3930  0F3E  349D               	retlw	157
  3931  0F3F  3401               	retlw	1
  3932  0F40  349B               	retlw	155
  3933  0F41  3401               	retlw	1
  3934  0F42  349A               	retlw	154
  3935  0F43  3401               	retlw	1
  3936  0F44  3498               	retlw	152
  3937  0F45  3401               	retlw	1
  3938  0F46  3497               	retlw	151
  3939  0F47  3401               	retlw	1
  3940  0F48  3495               	retlw	149
  3941  0F49  3401               	retlw	1
  3942  0F4A  3494               	retlw	148
  3943  0F4B  3401               	retlw	1
  3944  0F4C  3492               	retlw	146
  3945  0F4D  3401               	retlw	1
  3946  0F4E  3491               	retlw	145
  3947  0F4F  3401               	retlw	1
  3948  0F50  3490               	retlw	144
  3949  0F51  3401               	retlw	1
  3950  0F52  348E               	retlw	142
  3951  0F53  3401               	retlw	1
  3952  0F54  348D               	retlw	141
  3953  0F55  3401               	retlw	1
  3954  0F56  348B               	retlw	139
  3955  0F57  3401               	retlw	1
  3956  0F58  348A               	retlw	138
  3957  0F59  3401               	retlw	1
  3958  0F5A  3489               	retlw	137
  3959  0F5B  3401               	retlw	1
  3960  0F5C  3487               	retlw	135
  3961  0F5D  3401               	retlw	1
  3962  0F5E  3486               	retlw	134
  3963  0F5F  3401               	retlw	1
  3964  0F60  3485               	retlw	133
  3965  0F61  3401               	retlw	1
  3966  0F62  3483               	retlw	131
  3967  0F63  3401               	retlw	1
  3968  0F64  3482               	retlw	130
  3969  0F65  3401               	retlw	1
  3970  0F66  3481               	retlw	129
  3971  0F67  3401               	retlw	1
  3972  0F68  347F               	retlw	127
  3973  0F69  3401               	retlw	1
  3974  0F6A  347E               	retlw	126
  3975  0F6B  3401               	retlw	1
  3976  0F6C  347D               	retlw	125
  3977  0F6D  3401               	retlw	1
  3978  0F6E  347B               	retlw	123
  3979  0F6F  3401               	retlw	1
  3980  0F70  347A               	retlw	122
  3981  0F71  3401               	retlw	1
  3982  0F72  3479               	retlw	121
  3983  0F73  3401               	retlw	1
  3984  0F74  3478               	retlw	120
  3985  0F75  3401               	retlw	1
  3986  0F76  3476               	retlw	118
  3987  0F77  3401               	retlw	1
  3988  0F78  3475               	retlw	117
  3989  0F79  3401               	retlw	1
  3990  0F7A  3474               	retlw	116
  3991  0F7B  3401               	retlw	1
  3992  0F7C  3473               	retlw	115
  3993  0F7D  3401               	retlw	1
  3994  0F7E  3471               	retlw	113
  3995  0F7F  3401               	retlw	1
  3996  0F80  3470               	retlw	112
  3997  0F81  3401               	retlw	1
  3998  0F82  346F               	retlw	111
  3999  0F83  3401               	retlw	1
  4000  0F84  346E               	retlw	110
  4001  0F85  3401               	retlw	1
  4002                           
  4003                           ;initializer for _mod5
  4004  0F86  3400               	retlw	0
  4005  0F87  3400               	retlw	0
  4006  0F88  340A               	retlw	10
  4007  0F89  3400               	retlw	0
  4008  0F8A  3414               	retlw	20
  4009  0F8B  3400               	retlw	0
  4010  0F8C  341E               	retlw	30
  4011  0F8D  3400               	retlw	0
  4012  0F8E  3428               	retlw	40
  4013  0F8F  3400               	retlw	0
  4014  0F90  3432               	retlw	50
  4015  0F91  3400               	retlw	0
  4016  0F92  343A               	retlw	58
  4017  0F93  3400               	retlw	0
  4018  0F94  3442               	retlw	66
  4019  0F95  3400               	retlw	0
  4020  0F96  344A               	retlw	74
  4021  0F97  3400               	retlw	0
  4022  0F98  3450               	retlw	80
  4023  0F99  3400               	retlw	0
  4024  0F9A  3456               	retlw	86
  4025  0F9B  3400               	retlw	0
  4026  0F9C  345B               	retlw	91
  4027  0F9D  3400               	retlw	0
  4028  0F9E  345F               	retlw	95
  4029  0F9F  3400               	retlw	0
  4030  0FA0  3461               	retlw	97
  4031  0FA1  3400               	retlw	0
  4032  0FA2  3463               	retlw	99
  4033  0FA3  3400               	retlw	0
  4034  0FA4  3464               	retlw	100
  4035  0FA5  3400               	retlw	0
  4036  0FA6  3463               	retlw	99
  4037  0FA7  3400               	retlw	0
  4038  0FA8  3461               	retlw	97
  4039  0FA9  3400               	retlw	0
  4040  0FAA  345F               	retlw	95
  4041  0FAB  3400               	retlw	0
  4042  0FAC  345B               	retlw	91
  4043  0FAD  3400               	retlw	0
  4044  0FAE  3456               	retlw	86
  4045  0FAF  3400               	retlw	0
  4046  0FB0  3450               	retlw	80
  4047  0FB1  3400               	retlw	0
  4048  0FB2  344A               	retlw	74
  4049  0FB3  3400               	retlw	0
  4050  0FB4  3442               	retlw	66
  4051  0FB5  3400               	retlw	0
  4052  0FB6  343A               	retlw	58
  4053  0FB7  3400               	retlw	0
  4054  0FB8  3432               	retlw	50
  4055  0FB9  3400               	retlw	0
  4056  0FBA  3428               	retlw	40
  4057  0FBB  3400               	retlw	0
  4058  0FBC  341E               	retlw	30
  4059  0FBD  3400               	retlw	0
  4060  0FBE  3414               	retlw	20
  4061  0FBF  3400               	retlw	0
  4062  0FC0  340A               	retlw	10
  4063  0FC1  3400               	retlw	0
  4064  0FC2  3400               	retlw	0
  4065  0FC3  3400               	retlw	0
  4066  0FC4  34F6               	retlw	246
  4067  0FC5  34FF               	retlw	255
  4068  0FC6  34EC               	retlw	236
  4069  0FC7  34FF               	retlw	255
  4070  0FC8  34E2               	retlw	226
  4071  0FC9  34FF               	retlw	255
  4072  0FCA  34D8               	retlw	216
  4073  0FCB  34FF               	retlw	255
  4074  0FCC  34CE               	retlw	206
  4075  0FCD  34FF               	retlw	255
  4076  0FCE  34C6               	retlw	198
  4077  0FCF  34FF               	retlw	255
  4078  0FD0  34BE               	retlw	190
  4079  0FD1  34FF               	retlw	255
  4080  0FD2  34B6               	retlw	182
  4081  0FD3  34FF               	retlw	255
  4082  0FD4  34B0               	retlw	176
  4083  0FD5  34FF               	retlw	255
  4084  0FD6  34AA               	retlw	170
  4085  0FD7  34FF               	retlw	255
  4086  0FD8  34A5               	retlw	165
  4087  0FD9  34FF               	retlw	255
  4088  0FDA  34A1               	retlw	161
  4089  0FDB  34FF               	retlw	255
  4090  0FDC  349F               	retlw	159
  4091  0FDD  34FF               	retlw	255
  4092  0FDE  349D               	retlw	157
  4093  0FDF  34FF               	retlw	255
  4094  0FE0  349C               	retlw	156
  4095  0FE1  34FF               	retlw	255
  4096  0FE2  349D               	retlw	157
  4097  0FE3  34FF               	retlw	255
  4098  0FE4  349F               	retlw	159
  4099  0FE5  34FF               	retlw	255
  4100  0FE6  34A1               	retlw	161
  4101  0FE7  34FF               	retlw	255
  4102  0FE8  34A5               	retlw	165
  4103  0FE9  34FF               	retlw	255
  4104  0FEA  34AA               	retlw	170
  4105  0FEB  34FF               	retlw	255
  4106  0FEC  34B0               	retlw	176
  4107  0FED  34FF               	retlw	255
  4108  0FEE  34B6               	retlw	182
  4109  0FEF  34FF               	retlw	255
  4110  0FF0  34BE               	retlw	190
  4111  0FF1  34FF               	retlw	255
  4112  0FF2  34C6               	retlw	198
  4113  0FF3  34FF               	retlw	255
  4114  0FF4  34CE               	retlw	206
  4115  0FF5  34FF               	retlw	255
  4116  0FF6  34D8               	retlw	216
  4117  0FF7  34FF               	retlw	255
  4118  0FF8  34E2               	retlw	226
  4119  0FF9  34FF               	retlw	255
  4120  0FFA  34EC               	retlw	236
  4121  0FFB  34FF               	retlw	255
  4122  0FFC  34F6               	retlw	246
  4123  0FFD  34FF               	retlw	255
  4124  0FFE  3400               	retlw	0
  4125  0FFF  3400               	retlw	0
  4126  000B                     _INTCONbits	set	11
  4127  000E                     _PORTCbits	set	14
  4128  000F                     _PORTDbits	set	15
  4129  0010                     _PORTEbits	set	16
  4130  001B                     _PR2	set	27
  4131  001C                     _T2CONbits	set	28
  4132  009D                     _ADCON0bits	set	157
  4133  009E                     _ADCON1bits	set	158
  4134  009C                     _ADRESH	set	156
  4135  009B                     _ADRESL	set	155
  4136  0095                     _OPTION_REGbits	set	149
  4137  0099                     _OSCCONbits	set	153
  4138  008D                     _TRISBbits	set	141
  4139  008E                     _TRISCbits	set	142
  4140  008F                     _TRISDbits	set	143
  4141  0090                     _TRISEbits	set	144
  4142  011D                     _APFCONbits	set	285
  4143  010D                     _LATBbits	set	269
  4144  010F                     _LATDbits	set	271
  4145  0190                     _ANSELEbits	set	400
  4146  0192                     _PMADRH	set	402
  4147  0191                     _PMADRL	set	401
  4148  0195                     _PMCON1bits	set	405
  4149  0196                     _PMCON2	set	406
  4150  0194                     _PMDATH	set	404
  4151  0193                     _PMDATL	set	403
  4152  0291                     _CCPR1	set	657
  4153  0298                     _CCPR2	set	664
  4154  0293                     _CCP1CONbits	set	659
  4155  029A                     _CCP2CONbits	set	666
  4156  029D                     _CCPTMRS0	set	669
  4157  029E                     _CCPTMRS1	set	670
  4158  029F                     _CCPTMRS2	set	671
  4159  0311                     _CCPR3	set	785
  4160  0318                     _CCPR4	set	792
  4161  031C                     _CCPR5	set	796
  4162  0313                     _CCP3CONbits	set	787
  4163  031A                     _CCP4CONbits	set	794
  4164  031E                     _CCP5CONbits	set	798
  4165  030C                     _TRISFbits	set	780
  4166  030D                     _TRISGbits	set	781
  4167  038C                     _LATFbits	set	908
  4168  038D                     _LATGbits	set	909
  4169  040C                     _ANSELFbits	set	1036
  4170  061A                     _CCPR9	set	1562
  4171  061F                     _CCP10CONbits	set	1567
  4172  0613                     _CCP6CONbits	set	1555
  4173  0616                     _CCP7CONbits	set	1558
  4174  0619                     _CCP8CONbits	set	1561
  4175  061C                     _CCP9CONbits	set	1564
  4176                           
  4177                           ; #config settings
  4178  0000                     
  4179                           	psect	cinit
  4180  0175                     start_initialization:	
  4181  0175                     __initialization:		;BIGRAM
  4182                           
  4183                           ; Clear objects allocated to COMMON
  4184  0175  01F9               	clrf	__pbssCOMMON& (0+127)
  4185  0176  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  4186  0177  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  4187  0178  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  4188  0179  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  4189                           
  4190                           ; Clear objects allocated to BANK1
  4191  017A  30DE               	movlw	low __pbssBANK1
  4192  017B  0084               	movwf	4
  4193  017C  3000               	movlw	high __pbssBANK1
  4194  017D  0085               	movwf	5
  4195  017E  3012               	movlw	18
  4196  017F  00FE               	movwf	btemp
  4197  0180  3000               	movlw	0
  4198  0181  00FF               	movwf	btemp+1
  4199  0182  319E  26B7  3181   	fcall	clear_ram0
  4200                           
  4201                           ; Clear objects allocated to BANK2
  4202  0185  3020               	movlw	low __pbssBANK2
  4203  0186  0084               	movwf	4
  4204  0187  3001               	movlw	high __pbssBANK2
  4205  0188  0085               	movwf	5
  4206  0189  3045               	movlw	69
  4207  018A  00FE               	movwf	btemp
  4208  018B  3000               	movlw	0
  4209  018C  00FF               	movwf	btemp+1
  4210  018D  319E  26B7  3181   	fcall	clear_ram0
  4211                           
  4212                           ; Clear objects allocated to BANK3
  4213  0190  30A0               	movlw	low __pbssBANK3
  4214  0191  0084               	movwf	4
  4215  0192  3001               	movlw	high __pbssBANK3
  4216  0193  0085               	movwf	5
  4217  0194  3030               	movlw	48
  4218  0195  00FE               	movwf	btemp
  4219  0196  3000               	movlw	0
  4220  0197  00FF               	movwf	btemp+1
  4221  0198  319E  26B7  3181   	fcall	clear_ram0
  4222                           
  4223                           ; Clear objects allocated to BANK10
  4224  019B  3020               	movlw	low __pbssBANK10
  4225  019C  0084               	movwf	4
  4226  019D  3005               	movlw	high __pbssBANK10
  4227  019E  0085               	movwf	5
  4228  019F  3040               	movlw	64
  4229  01A0  00FE               	movwf	btemp
  4230  01A1  3000               	movlw	0
  4231  01A2  00FF               	movwf	btemp+1
  4232  01A3  319E  26B7  3181   	fcall	clear_ram0
  4233                           
  4234                           ; Initialize objects allocated to BIGRAM
  4235  01A6  3088               	movlw	low __pidataBIGRAM
  4236  01A7  0084               	movwf	4
  4237  01A8  308D               	movlw	(high __pidataBIGRAM)| (0+128)
  4238  01A9  0085               	movwf	5
  4239  01AA  3078               	movlw	low (0+9080)
  4240  01AB  0086               	movwf	6
  4241  01AC  3023               	movlw	high (0+9080)
  4242  01AD  0087               	movwf	7
  4243  01AE  3002               	movlw	2
  4244  01AF  00FF               	movwf	btemp+1
  4245  01B0  3078               	movlw	120
  4246  01B1  319E  26AB  3181   	fcall	init_ram
  4247                           
  4248                           ; Initialize objects allocated to BANK0
  4249  01B4  3187  27FE  3181   	fcall	__pidataBANK0	;fetch initializer
  4250  01B7  00EF               	movwf	__pdataBANK0& (0+127)
  4251                           
  4252                           ; Initialize objects allocated to BANK1
  4253  01B8  304E               	movlw	low __pidataBANK1
  4254  01B9  0084               	movwf	4
  4255  01BA  309F               	movlw	(high __pidataBANK1)| (0+128)
  4256  01BB  0085               	movwf	5
  4257  01BC  30A0               	movlw	low __pdataBANK1
  4258  01BD  0086               	movwf	6
  4259  01BE  3000               	movlw	high __pdataBANK1
  4260  01BF  0087               	movwf	7
  4261  01C0  3000               	movlw	0
  4262  01C1  00FF               	movwf	btemp+1
  4263  01C2  301F               	movlw	31
  4264  01C3  319E  26AB  3181   	fcall	init_ram
  4265                           
  4266                           ; Initialize objects allocated to BANK2
  4267  01C6  30A1               	movlw	low __pidataBANK2
  4268  01C7  0084               	movwf	4
  4269  01C8  309E               	movlw	(high __pidataBANK2)| (0+128)
  4270  01C9  0085               	movwf	5
  4271  01CA  3065               	movlw	low __pdataBANK2
  4272  01CB  0086               	movwf	6
  4273  01CC  3001               	movlw	high __pdataBANK2
  4274  01CD  0087               	movwf	7
  4275  01CE  3000               	movlw	0
  4276  01CF  00FF               	movwf	btemp+1
  4277  01D0  300A               	movlw	10
  4278  01D1  319E  26AB  3181   	fcall	init_ram
  4279                           
  4280                           ; Initialize objects allocated to BANK4
  4281  01D4  30DF               	movlw	low __pidataBANK4
  4282  01D5  0084               	movwf	4
  4283  01D6  3091               	movlw	(high __pidataBANK4)| (0+128)
  4284  01D7  0085               	movwf	5
  4285  01D8  3020               	movlw	low __pdataBANK4
  4286  01D9  0086               	movwf	6
  4287  01DA  3002               	movlw	high __pdataBANK4
  4288  01DB  0087               	movwf	7
  4289  01DC  3000               	movlw	0
  4290  01DD  00FF               	movwf	btemp+1
  4291  01DE  303A               	movlw	58
  4292  01DF  319E  26AB  3181   	fcall	init_ram
  4293                           
  4294                           ; Initialize objects allocated to BANK5
  4295  01E2  30A5               	movlw	low __pidataBANK5
  4296  01E3  0084               	movwf	4
  4297  01E4  3091               	movlw	(high __pidataBANK5)| (0+128)
  4298  01E5  0085               	movwf	5
  4299  01E6  30A0               	movlw	low __pdataBANK5
  4300  01E7  0086               	movwf	6
  4301  01E8  3002               	movlw	high __pdataBANK5
  4302  01E9  0087               	movwf	7
  4303  01EA  3000               	movlw	0
  4304  01EB  00FF               	movwf	btemp+1
  4305  01EC  303A               	movlw	58
  4306  01ED  319E  26AB  3181   	fcall	init_ram
  4307                           
  4308                           ; Initialize objects allocated to BANK6
  4309  01F0  306B               	movlw	low __pidataBANK6
  4310  01F1  0084               	movwf	4
  4311  01F2  3091               	movlw	(high __pidataBANK6)| (0+128)
  4312  01F3  0085               	movwf	5
  4313  01F4  3020               	movlw	low __pdataBANK6
  4314  01F5  0086               	movwf	6
  4315  01F6  3003               	movlw	high __pdataBANK6
  4316  01F7  0087               	movwf	7
  4317  01F8  3000               	movlw	0
  4318  01F9  00FF               	movwf	btemp+1
  4319  01FA  303A               	movlw	58
  4320  01FB  319E  26AB  3181   	fcall	init_ram
  4321                           
  4322                           ; Initialize objects allocated to BANK7
  4323  01FE  308A               	movlw	low __pidataBANK7
  4324  01FF  0084               	movwf	4
  4325  0200  3094               	movlw	(high __pidataBANK7)| (0+128)
  4326  0201  0085               	movwf	5
  4327  0202  30A0               	movlw	low __pdataBANK7
  4328  0203  0086               	movwf	6
  4329  0204  3003               	movlw	high __pdataBANK7
  4330  0205  0087               	movwf	7
  4331  0206  3000               	movlw	0
  4332  0207  00FF               	movwf	btemp+1
  4333  0208  3050               	movlw	80
  4334  0209  319E  26AB  3181   	fcall	init_ram
  4335                           
  4336                           ; Initialize objects allocated to BANK8
  4337  020C  303A               	movlw	low __pidataBANK8
  4338  020D  0084               	movwf	4
  4339  020E  3094               	movlw	(high __pidataBANK8)| (0+128)
  4340  020F  0085               	movwf	5
  4341  0210  3020               	movlw	low __pdataBANK8
  4342  0211  0086               	movwf	6
  4343  0212  3004               	movlw	high __pdataBANK8
  4344  0213  0087               	movwf	7
  4345  0214  3000               	movlw	0
  4346  0215  00FF               	movwf	btemp+1
  4347  0216  3050               	movlw	80
  4348  0217  319E  26AB  3181   	fcall	init_ram
  4349                           
  4350                           ; Initialize objects allocated to BANK9
  4351  021A  3031               	movlw	low __pidataBANK9
  4352  021B  0084               	movwf	4
  4353  021C  3091               	movlw	(high __pidataBANK9)| (0+128)
  4354  021D  0085               	movwf	5
  4355  021E  30A0               	movlw	low __pdataBANK9
  4356  021F  0086               	movwf	6
  4357  0220  3004               	movlw	high __pdataBANK9
  4358  0221  0087               	movwf	7
  4359  0222  3000               	movlw	0
  4360  0223  00FF               	movwf	btemp+1
  4361  0224  303A               	movlw	58
  4362  0225  319E  26AB         	fcall	init_ram
  4363  0227                     end_of_initialization:	
  4364                           ;End of C runtime variable initialization code
  4365                           
  4366  0227                     __end_of__initialization:	
  4367  0227  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4368  0228  0020               	movlb	0
  4369  0229  3182  2A2B         	ljmp	_main	;jump to C main() function
  4370                           
  4371                           	psect	bssCOMMON
  4372  0079                     __pbssCOMMON:	
  4373  0079                     _tap_timer:	
  4374  0079                     	ds	4
  4375  007D                     _doubleTap_state:	
  4376  007D                     	ds	1
  4377                           
  4378                           	psect	dataBANK0
  4379  006F                     __pdataBANK0:	
  4380  006F                     _longTap_state:	
  4381  006F                     	ds	1
  4382                           
  4383                           	psect	bssBANK1
  4384  00DE                     __pbssBANK1:	
  4385  00DE                     _sub_timer:	
  4386  00DE                     	ds	4
  4387  00E2                     _timer:	
  4388  00E2                     	ds	4
  4389  00E6                     _mod_counter:	
  4390  00E6                     	ds	2
  4391  00E8                     _bypass_turning_on:	
  4392  00E8                     	ds	1
  4393  00E9                     _feedback_start:	
  4394  00E9                     	ds	1
  4395  00EA                     _longTap_start:	
  4396  00EA                     	ds	1
  4397  00EB                     _mode2_state:	
  4398  00EB                     	ds	1
  4399  00EC                     _preset_blink:	
  4400  00EC                     	ds	1
  4401  00ED                     _suspend_blink:	
  4402  00ED                     	ds	1
  4403  00EE                     _switchTap_down:	
  4404  00EE                     	ds	1
  4405  00EF                     _switchTap_pressed:	
  4406  00EF                     	ds	1
  4407                           
  4408                           	psect	dataBANK1
  4409  00A0                     __pdataBANK1:	
  4410  00A0                     _baseline_delay_time:	
  4411  00A0                     	ds	4
  4412  00A4                     _delay_time:	
  4413  00A4                     	ds	4
  4414  00A8                     _bottom_push_state:	
  4415  00A8                     	ds	2
  4416  00AA                     _knob1_prev:	
  4417  00AA                     	ds	2
  4418  00AC                     _knob2_prev:	
  4419  00AC                     	ds	2
  4420  00AE                     _knob3_prev:	
  4421  00AE                     	ds	2
  4422  00B0                     _knob4_prev:	
  4423  00B0                     	ds	2
  4424  00B2                     _knob5_prev:	
  4425  00B2                     	ds	2
  4426  00B4                     _long_press_limit:	
  4427  00B4                     	ds	2
  4428  00B6                     _tap_iteration:	
  4429  00B6                     	ds	2
  4430  00B8                     _top_push_state:	
  4431  00B8                     	ds	2
  4432  00BA                     _blink_rate:	
  4433  00BA                     	ds	1
  4434  00BB                     _feedback_state:	
  4435  00BB                     	ds	1
  4436  00BC                     _num_taps:	
  4437  00BC                     	ds	1
  4438  00BD                     _switchBypass_state:	
  4439  00BD                     	ds	1
  4440  00BE                     _switchTap_state:	
  4441  00BE                     	ds	1
  4442                           
  4443                           	psect	bssBANK2
  4444  0120                     __pbssBANK2:	
  4445  0120                     _tap_history:	
  4446  0120                     	ds	20
  4447  0134                     _ledState:	
  4448  0134                     	ds	4
  4449  0138                     _mod_timer:	
  4450  0138                     	ds	4
  4451  013C                     _tap_total:	
  4452  013C                     	ds	4
  4453  0140                     _SPI_Value:	
  4454  0140                     	ds	2
  4455  0142                     _debounce_bypass:	
  4456  0142                     	ds	2
  4457  0144                     _debounce_count:	
  4458  0144                     	ds	2
  4459  0146                     _debounce_mode1:	
  4460  0146                     	ds	2
  4461  0148                     _debounce_mode2:	
  4462  0148                     	ds	2
  4463  014A                     _delay_counter:	
  4464  014A                     	ds	2
  4465  014C                     _delayfound:	
  4466  014C                     	ds	2
  4467  014E                     _feedback_timer:	
  4468  014E                     	ds	2
  4469  0150                     _knob_1_pos:	
  4470  0150                     	ds	2
  4471  0152                     _knob_2_pos:	
  4472  0152                     	ds	2
  4473  0154                     _knob_3_pos:	
  4474  0154                     	ds	2
  4475  0156                     _knob_4_pos:	
  4476  0156                     	ds	2
  4477  0158                     _knob_5_pos:	
  4478  0158                     	ds	2
  4479  015A                     _longTap_timer:	
  4480  015A                     	ds	2
  4481  015C                     _mod_value:	
  4482  015C                     	ds	2
  4483  015E                     _switchBypass_pressed:	
  4484  015E                     	ds	2
  4485  0160                     _switchBypass_toggle:	
  4486  0160                     	ds	2
  4487  0162                     _iCnt:	
  4488  0162                     	ds	1
  4489  0163                     _mode1_state:	
  4490  0163                     	ds	1
  4491  0164                     _preset_programmning_on:	
  4492  0164                     	ds	1
  4493                           
  4494                           	psect	dataBANK2
  4495  0165                     __pdataBANK2:	
  4496  0165                     _blink_delay:	
  4497  0165                     	ds	2
  4498  0167                     _delay_time_changed:	
  4499  0167                     	ds	2
  4500  0169                     _mod_delay_time:	
  4501  0169                     	ds	2
  4502  016B                     _switchBypass_up:	
  4503  016B                     	ds	2
  4504  016D                     _blink_state:	
  4505  016D                     	ds	1
  4506  016E                     _currentBypassState:	
  4507  016E                     	ds	1
  4508                           
  4509                           	psect	bssBANK3
  4510  01A0                     __pbssBANK3:	
  4511  01A0                     _tap:	
  4512  01A0                     	ds	44
  4513  01CC                     _test_timer:	
  4514  01CC                     	ds	4
  4515                           
  4516                           	psect	dataBANK4
  4517  0220                     __pdataBANK4:	
  4518  0220                     _mod2:	
  4519  0220                     	ds	58
  4520                           
  4521                           	psect	dataBANK5
  4522  02A0                     __pdataBANK5:	
  4523  02A0                     _mod3:	
  4524  02A0                     	ds	58
  4525                           
  4526                           	psect	dataBANK6
  4527  0320                     __pdataBANK6:	
  4528  0320                     _mod4:	
  4529  0320                     	ds	58
  4530                           
  4531                           	psect	dataBANK7
  4532  03A0                     __pdataBANK7:	
  4533  03A0                     _B25k:	
  4534  03A0                     	ds	80
  4535                           
  4536                           	psect	dataBANK8
  4537  0420                     __pdataBANK8:	
  4538  0420                     _iB25k:	
  4539  0420                     	ds	80
  4540                           
  4541                           	psect	dataBANK9
  4542  04A0                     __pdataBANK9:	
  4543  04A0                     _mod1:	
  4544  04A0                     	ds	58
  4545                           
  4546                           	psect	bssBANK10
  4547  0520                     __pbssBANK10:	
  4548  0520                     _myBuf:	
  4549  0520                     	ds	64
  4550                           
  4551                           	psect	clrtext
  4552  1EB7                     clear_ram0:	
  4553                           ;	Called with FSR0 containing the base address, and
  4554                           ;	btemp/btemp+1 has the size to clear
  4555                           
  4556  1EB7  0064               	clrwdt	;clear the watchdog before getting into this loop
  4557  1EB8                     clrloop0:	
  4558  1EB8  0180               	clrf	0	;clear RAM location pointed to by FSR
  4559  1EB9  3101               	addfsr 0,1
  4560  1EBA  3001               	movlw	1
  4561  1EBB  02FE               	subwf	126,f
  4562  1EBC  3000               	movlw	0
  4563  1EBD  3BFF               	subwfb	127,f
  4564  1EBE  087F               	movf	127,w
  4565  1EBF  047E               	iorwf	126,w
  4566  1EC0  1903               	btfsc	3,2
  4567  1EC1  3400               	retlw	0	;all done for this memory range, return
  4568  1EC2  2EB8               	goto	clrloop0	;have we reached the end yet?
  4569                           
  4570                           	psect	inittext
  4571  1EAB                     init_ram:	
  4572  1EAB  00FE               	movwf	126
  4573  1EAC                     initloop:	
  4574  1EAC  0012               	moviw fsr0++
  4575  1EAD  001E               	movwi fsr1++
  4576  1EAE  3001               	movlw	1
  4577  1EAF  02FE               	subwf	126,f
  4578  1EB0  3000               	movlw	0
  4579  1EB1  3BFF               	subwfb	127,f
  4580  1EB2  087F               	movf	127,w
  4581  1EB3  047E               	iorwf	126,w
  4582  1EB4  1903               	btfsc	3,2
  4583  1EB5  3400               	retlw	0
  4584  1EB6  2EAC               	goto	initloop
  4585                           
  4586                           	psect	cstackBANK1
  4587  00BF                     __pcstackBANK1:	
  4588  00BF                     ___fttol@sign1:	
  4589                           
  4590                           ; 1 bytes @ 0x0
  4591  00BF                     	ds	1
  4592  00C0                     ___fttol@lval:	
  4593                           
  4594                           ; 4 bytes @ 0x1
  4595  00C0                     	ds	4
  4596  00C4                     ___fttol@exp1:	
  4597                           
  4598                           ; 1 bytes @ 0x5
  4599  00C4                     	ds	1
  4600  00C5                     ?_set_subdivision:	
  4601  00C5                     set_subdivision@x:	
  4602                           ; 2 bytes @ 0x6
  4603                           
  4604                           
  4605                           ; 2 bytes @ 0x6
  4606  00C5                     	ds	2
  4607  00C7                     set_subdivision@y:	
  4608                           
  4609                           ; 2 bytes @ 0x8
  4610  00C7                     	ds	2
  4611  00C9                     ??_main:	
  4612                           
  4613                           ; 1 bytes @ 0xA
  4614  00C9                     	ds	15
  4615  00D8                     main@adjusted_pot_value:	
  4616                           
  4617                           ; 2 bytes @ 0x19
  4618  00D8                     	ds	2
  4619  00DA                     main@i:	
  4620                           
  4621                           ; 2 bytes @ 0x1B
  4622  00DA                     	ds	2
  4623  00DC                     main@i_358:	
  4624                           
  4625                           ; 2 bytes @ 0x1D
  4626  00DC                     	ds	2
  4627                           
  4628                           	psect	cstackCOMMON
  4629  0070                     __pcstackCOMMON:	
  4630  0070                     ?_ConfigureOscillator:	
  4631  0070                     ?_InitApp:	
  4632                           ; 1 bytes @ 0x0
  4633                           
  4634  0070                     ?_InitializeTaps:	
  4635                           ; 1 bytes @ 0x0
  4636                           
  4637  0070                     ?_initSwitchBypass:	
  4638                           ; 1 bytes @ 0x0
  4639                           
  4640  0070                     ?_ReadSavedSettings:	
  4641                           ; 1 bytes @ 0x0
  4642                           
  4643  0070                     ?_read_bottom_tactile:	
  4644                           ; 1 bytes @ 0x0
  4645                           
  4646  0070                     ?_read_top_tactile:	
  4647                           ; 1 bytes @ 0x0
  4648                           
  4649  0070                     ?_update_mode:	
  4650                           ; 1 bytes @ 0x0
  4651                           
  4652  0070                     ?_showBootSequence:	
  4653                           ; 1 bytes @ 0x0
  4654                           
  4655  0070                     ?_updateSwitchBypass:	
  4656                           ; 1 bytes @ 0x0
  4657                           
  4658  0070                     ?_updateSwitchTap:	
  4659                           ; 1 bytes @ 0x0
  4660                           
  4661  0070                     ?_init_adc:	
  4662                           ; 1 bytes @ 0x0
  4663                           
  4664  0070                     ?_init_pwm:	
  4665                           ; 1 bytes @ 0x0
  4666                           
  4667  0070                     ?_init_timer2:	
  4668                           ; 1 bytes @ 0x0
  4669                           
  4670  0070                     ?_init_timer0:	
  4671                           ; 1 bytes @ 0x0
  4672                           
  4673  0070                     ?_getCurrentLEDState:	
  4674                           ; 1 bytes @ 0x0
  4675                           
  4676  0070                     ?_star_tactiles:	
  4677                           ; 1 bytes @ 0x0
  4678                           
  4679  0070                     ?_solidring_tactiles:	
  4680                           ; 1 bytes @ 0x0
  4681                           
  4682  0070                     ?_restoreLEDState:	
  4683                           ; 1 bytes @ 0x0
  4684                           
  4685  0070                     ?_isr:	
  4686                           ; 1 bytes @ 0x0
  4687                           
  4688  0070                     ?_main:	
  4689                           ; 1 bytes @ 0x0
  4690                           
  4691  0070                     ?i1_set_leds_top:	
  4692                           ; 1 bytes @ 0x0
  4693                           
  4694  0070                     i1set_leds_top@x:	
  4695                           ; 1 bytes @ 0x0
  4696                           
  4697                           
  4698                           ; 2 bytes @ 0x0
  4699  0070                     	ds	2
  4700  0072                     i1set_leds_top@ledState:	
  4701                           
  4702                           ; 2 bytes @ 0x2
  4703  0072                     	ds	2
  4704  0074                     ??_isr:	
  4705  0074                     ??i1_set_leds_top:	
  4706                           ; 1 bytes @ 0x4
  4707                           
  4708                           
  4709                           ; 1 bytes @ 0x4
  4710  0074                     	ds	5
  4711                           
  4712                           	psect	cstackBANK0
  4713  0020                     __pcstackBANK0:	
  4714  0020                     ?_set_leds_top:	
  4715  0020                     ??_ConfigureOscillator:	
  4716                           ; 1 bytes @ 0x0
  4717                           
  4718  0020                     ??_InitApp:	
  4719                           ; 1 bytes @ 0x0
  4720                           
  4721  0020                     ??_InitializeTaps:	
  4722                           ; 1 bytes @ 0x0
  4723                           
  4724  0020                     ??_update_mode:	
  4725                           ; 1 bytes @ 0x0
  4726                           
  4727  0020                     ??_init_adc:	
  4728                           ; 1 bytes @ 0x0
  4729                           
  4730  0020                     ??_init_pwm:	
  4731                           ; 1 bytes @ 0x0
  4732                           
  4733  0020                     ??_init_timer2:	
  4734                           ; 1 bytes @ 0x0
  4735                           
  4736  0020                     ??_init_timer0:	
  4737                           ; 1 bytes @ 0x0
  4738                           
  4739  0020                     ?_set_leds_bottom:	
  4740                           ; 1 bytes @ 0x0
  4741                           
  4742  0020                     ??_getCurrentLEDState:	
  4743                           ; 1 bytes @ 0x0
  4744                           
  4745  0020                     ??_restoreLEDState:	
  4746                           ; 1 bytes @ 0x0
  4747                           
  4748  0020                     ?_setFeedbackState:	
  4749                           ; 1 bytes @ 0x0
  4750                           
  4751  0020                     ?_setLongTapState:	
  4752                           ; 1 bytes @ 0x0
  4753                           
  4754  0020                     ?_updateSwitchBypassState:	
  4755                           ; 1 bytes @ 0x0
  4756                           
  4757  0020                     ?_adc_convert:	
  4758                           ; 1 bytes @ 0x0
  4759                           
  4760  0020                     ?_FLASH_ReadWord:	
  4761                           ; 2 bytes @ 0x0
  4762                           
  4763  0020                     ?_getSwitchBypassState:	
  4764                           ; 2 bytes @ 0x0
  4765                           
  4766  0020                     ?___wmul:	
  4767                           ; 2 bytes @ 0x0
  4768                           
  4769  0020                     ?___awdiv:	
  4770                           ; 2 bytes @ 0x0
  4771                           
  4772  0020                     ?___ftpack:	
  4773                           ; 2 bytes @ 0x0
  4774                           
  4775  0020                     ?___ftneg:	
  4776                           ; 3 bytes @ 0x0
  4777                           
  4778  0020                     ?___lmul:	
  4779                           ; 3 bytes @ 0x0
  4780                           
  4781  0020                     FLASH_ReadWord@flashAddr:	
  4782                           ; 4 bytes @ 0x0
  4783                           
  4784  0020                     set_leds_top@x:	
  4785                           ; 2 bytes @ 0x0
  4786                           
  4787  0020                     set_leds_bottom@x:	
  4788                           ; 2 bytes @ 0x0
  4789                           
  4790  0020                     updateSwitchBypassState@state:	
  4791                           ; 2 bytes @ 0x0
  4792                           
  4793  0020                     setFeedbackState@f_state:	
  4794                           ; 2 bytes @ 0x0
  4795                           
  4796  0020                     setLongTapState@f_state:	
  4797                           ; 2 bytes @ 0x0
  4798                           
  4799  0020                     ___wmul@multiplier:	
  4800                           ; 2 bytes @ 0x0
  4801                           
  4802  0020                     ___awdiv@divisor:	
  4803                           ; 2 bytes @ 0x0
  4804                           
  4805  0020                     ___ftpack@arg:	
  4806                           ; 2 bytes @ 0x0
  4807                           
  4808  0020                     ___ftneg@f1:	
  4809                           ; 3 bytes @ 0x0
  4810                           
  4811  0020                     ___lmul@multiplier:	
  4812                           ; 3 bytes @ 0x0
  4813                           
  4814                           
  4815                           ; 4 bytes @ 0x0
  4816  0020                     	ds	1
  4817  0021                     InitializeTaps@itap:	
  4818                           
  4819                           ; 2 bytes @ 0x1
  4820  0021                     	ds	1
  4821  0022                     ??_adc_convert:	
  4822  0022                     ??_FLASH_ReadWord:	
  4823                           ; 1 bytes @ 0x2
  4824                           
  4825  0022                     ??_set_leds_bottom:	
  4826                           ; 1 bytes @ 0x2
  4827                           
  4828  0022                     ??_setFeedbackState:	
  4829                           ; 1 bytes @ 0x2
  4830                           
  4831  0022                     ??_setLongTapState:	
  4832                           ; 1 bytes @ 0x2
  4833                           
  4834  0022                     ??_updateSwitchBypassState:	
  4835                           ; 1 bytes @ 0x2
  4836                           
  4837  0022                     ??_getSwitchBypassState:	
  4838                           ; 1 bytes @ 0x2
  4839                           
  4840  0022                     FLASH_ReadWord@GIEBitValue:	
  4841                           ; 1 bytes @ 0x2
  4842                           
  4843  0022                     set_leds_top@ledState:	
  4844                           ; 1 bytes @ 0x2
  4845                           
  4846  0022                     ___wmul@multiplicand:	
  4847                           ; 2 bytes @ 0x2
  4848                           
  4849  0022                     ___awdiv@dividend:	
  4850                           ; 2 bytes @ 0x2
  4851                           
  4852                           
  4853                           ; 2 bytes @ 0x2
  4854  0022                     	ds	1
  4855  0023                     ??___ftneg:	
  4856  0023                     adc_convert@channel:	
  4857                           ; 1 bytes @ 0x3
  4858                           
  4859  0023                     ___ftpack@exp:	
  4860                           ; 1 bytes @ 0x3
  4861                           
  4862                           
  4863                           ; 1 bytes @ 0x3
  4864  0023                     	ds	1
  4865  0024                     ??_set_leds_top:	
  4866  0024                     ??_ReadSavedSettings:	
  4867                           ; 1 bytes @ 0x4
  4868                           
  4869  0024                     ??___wmul:	
  4870                           ; 1 bytes @ 0x4
  4871                           
  4872  0024                     ??___awdiv:	
  4873                           ; 1 bytes @ 0x4
  4874                           
  4875  0024                     ___ftpack@sign:	
  4876                           ; 1 bytes @ 0x4
  4877                           
  4878  0024                     ___wmul@product:	
  4879                           ; 1 bytes @ 0x4
  4880                           
  4881  0024                     ___lmul@multiplicand:	
  4882                           ; 2 bytes @ 0x4
  4883                           
  4884                           
  4885                           ; 4 bytes @ 0x4
  4886  0024                     	ds	1
  4887  0025                     ??___ftpack:	
  4888  0025                     ___awdiv@counter:	
  4889                           ; 1 bytes @ 0x5
  4890                           
  4891                           
  4892                           ; 1 bytes @ 0x5
  4893  0025                     	ds	1
  4894  0026                     ?___aldiv:	
  4895  0026                     ___awdiv@sign:	
  4896                           ; 4 bytes @ 0x6
  4897                           
  4898  0026                     ___aldiv@divisor:	
  4899                           ; 1 bytes @ 0x6
  4900                           
  4901                           
  4902                           ; 4 bytes @ 0x6
  4903  0026                     	ds	1
  4904  0027                     ___awdiv@quotient:	
  4905                           
  4906                           ; 2 bytes @ 0x7
  4907  0027                     	ds	1
  4908  0028                     ??___lmul:	
  4909  0028                     ?___altoft:	
  4910                           ; 1 bytes @ 0x8
  4911                           
  4912  0028                     ?___awtoft:	
  4913                           ; 3 bytes @ 0x8
  4914                           
  4915  0028                     ?___ftadd:	
  4916                           ; 3 bytes @ 0x8
  4917                           
  4918  0028                     ___awtoft@c:	
  4919                           ; 3 bytes @ 0x8
  4920                           
  4921  0028                     ___ftadd@f1:	
  4922                           ; 2 bytes @ 0x8
  4923                           
  4924  0028                     ___lmul@product:	
  4925                           ; 3 bytes @ 0x8
  4926                           
  4927  0028                     ___altoft@c:	
  4928                           ; 4 bytes @ 0x8
  4929                           
  4930                           
  4931                           ; 4 bytes @ 0x8
  4932  0028                     	ds	2
  4933  002A                     ___aldiv@dividend:	
  4934                           
  4935                           ; 4 bytes @ 0xA
  4936  002A                     	ds	1
  4937  002B                     ??___awtoft:	
  4938  002B                     ___ftadd@f2:	
  4939                           ; 1 bytes @ 0xB
  4940                           
  4941                           
  4942                           ; 3 bytes @ 0xB
  4943  002B                     	ds	1
  4944  002C                     ?_wait_ms:	
  4945  002C                     ??___altoft:	
  4946                           ; 1 bytes @ 0xC
  4947                           
  4948  002C                     wait_ms@timeSec:	
  4949                           ; 1 bytes @ 0xC
  4950                           
  4951                           
  4952                           ; 2 bytes @ 0xC
  4953  002C                     	ds	1
  4954  002D                     ___awtoft@sign:	
  4955                           
  4956                           ; 1 bytes @ 0xD
  4957  002D                     	ds	1
  4958  002E                     ??_wait_ms:	
  4959  002E                     ??___aldiv:	
  4960                           ; 1 bytes @ 0xE
  4961                           
  4962  002E                     ??___ftadd:	
  4963                           ; 1 bytes @ 0xE
  4964                           
  4965  002E                     ___altoft@exp:	
  4966                           ; 1 bytes @ 0xE
  4967                           
  4968  002E                     wait_ms@timemsl:	
  4969                           ; 1 bytes @ 0xE
  4970                           
  4971                           
  4972                           ; 4 bytes @ 0xE
  4973  002E                     	ds	1
  4974  002F                     ___aldiv@counter:	
  4975  002F                     ___altoft@sign:	
  4976                           ; 1 bytes @ 0xF
  4977                           
  4978                           
  4979                           ; 1 bytes @ 0xF
  4980  002F                     	ds	1
  4981  0030                     ___aldiv@sign:	
  4982                           
  4983                           ; 1 bytes @ 0x10
  4984  0030                     	ds	1
  4985  0031                     ___aldiv@quotient:	
  4986                           
  4987                           ; 4 bytes @ 0x11
  4988  0031                     	ds	1
  4989  0032                     ??_read_bottom_tactile:	
  4990  0032                     ??_read_top_tactile:	
  4991                           ; 1 bytes @ 0x12
  4992                           
  4993  0032                     ??_star_tactiles:	
  4994                           ; 1 bytes @ 0x12
  4995                           
  4996  0032                     ??_solidring_tactiles:	
  4997                           ; 1 bytes @ 0x12
  4998                           
  4999  0032                     ?_setSwitchBypassState:	
  5000                           ; 1 bytes @ 0x12
  5001                           
  5002  0032                     ?_setDoublePressState:	
  5003                           ; 1 bytes @ 0x12
  5004                           
  5005  0032                     ___ftadd@sign:	
  5006                           ; 1 bytes @ 0x12
  5007                           
  5008  0032                     setSwitchBypassState@f_state:	
  5009                           ; 1 bytes @ 0x12
  5010                           
  5011  0032                     setDoublePressState@f_state:	
  5012                           ; 2 bytes @ 0x12
  5013                           
  5014                           
  5015                           ; 2 bytes @ 0x12
  5016  0032                     	ds	1
  5017  0033                     ___ftadd@exp2:	
  5018                           
  5019                           ; 1 bytes @ 0x13
  5020  0033                     	ds	1
  5021  0034                     ??_setSwitchBypassState:	
  5022  0034                     ??_setDoublePressState:	
  5023                           ; 1 bytes @ 0x14
  5024                           
  5025  0034                     star_tactiles@reverse:	
  5026                           ; 1 bytes @ 0x14
  5027                           
  5028  0034                     solidring_tactiles@ring_delay:	
  5029                           ; 1 bytes @ 0x14
  5030                           
  5031  0034                     ___ftadd@exp1:	
  5032                           ; 1 bytes @ 0x14
  5033                           
  5034                           
  5035                           ; 1 bytes @ 0x14
  5036  0034                     	ds	1
  5037  0035                     ?_modulation:	
  5038  0035                     ?___ftmul:	
  5039                           ; 2 bytes @ 0x15
  5040                           
  5041  0035                     modulation@x:	
  5042                           ; 3 bytes @ 0x15
  5043                           
  5044  0035                     star_tactiles@iLed:	
  5045                           ; 2 bytes @ 0x15
  5046                           
  5047  0035                     ___ftmul@f1:	
  5048                           ; 2 bytes @ 0x15
  5049                           
  5050                           
  5051                           ; 3 bytes @ 0x15
  5052  0035                     	ds	1
  5053  0036                     ??_initSwitchBypass:	
  5054  0036                     ??_updateSwitchBypass:	
  5055                           ; 1 bytes @ 0x16
  5056                           
  5057  0036                     ??_updateSwitchTap:	
  5058                           ; 1 bytes @ 0x16
  5059                           
  5060  0036                     initSwitchBypass@initState:	
  5061                           ; 1 bytes @ 0x16
  5062                           
  5063                           
  5064                           ; 2 bytes @ 0x16
  5065  0036                     	ds	1
  5066  0037                     modulation@y:	
  5067  0037                     star_tactiles@iLed_1411:	
  5068                           ; 2 bytes @ 0x17
  5069                           
  5070                           
  5071                           ; 2 bytes @ 0x17
  5072  0037                     	ds	1
  5073  0038                     ___ftmul@f2:	
  5074                           
  5075                           ; 3 bytes @ 0x18
  5076  0038                     	ds	1
  5077  0039                     ??_showBootSequence:	
  5078  0039                     ??_modulation:	
  5079                           ; 1 bytes @ 0x19
  5080                           
  5081                           
  5082                           ; 1 bytes @ 0x19
  5083  0039                     	ds	2
  5084  003B                     ??___ftmul:	
  5085                           
  5086                           ; 1 bytes @ 0x1B
  5087  003B                     	ds	1
  5088  003C                     updateSwitchTap@tapCntDivisor:	
  5089                           
  5090                           ; 2 bytes @ 0x1C
  5091  003C                     	ds	2
  5092  003E                     updateSwitchTap@iCnt:	
  5093                           
  5094                           ; 1 bytes @ 0x1E
  5095  003E                     	ds	1
  5096  003F                     ___ftmul@exp:	
  5097                           
  5098                           ; 1 bytes @ 0x1F
  5099  003F                     	ds	1
  5100  0040                     ___ftmul@f3_as_product:	
  5101                           
  5102                           ; 3 bytes @ 0x20
  5103  0040                     	ds	3
  5104  0043                     ___ftmul@cntr:	
  5105                           
  5106                           ; 1 bytes @ 0x23
  5107  0043                     	ds	1
  5108  0044                     ___ftmul@sign:	
  5109                           
  5110                           ; 1 bytes @ 0x24
  5111  0044                     	ds	1
  5112  0045                     ?___ftdiv:	
  5113  0045                     ___ftdiv@f2:	
  5114                           ; 3 bytes @ 0x25
  5115                           
  5116                           
  5117                           ; 3 bytes @ 0x25
  5118  0045                     	ds	3
  5119  0048                     ___ftdiv@f1:	
  5120                           
  5121                           ; 3 bytes @ 0x28
  5122  0048                     	ds	3
  5123  004B                     ??___ftdiv:	
  5124                           
  5125                           ; 1 bytes @ 0x2B
  5126  004B                     	ds	4
  5127  004F                     ___ftdiv@cntr:	
  5128                           
  5129                           ; 1 bytes @ 0x2F
  5130  004F                     	ds	1
  5131  0050                     ___ftdiv@f3:	
  5132                           
  5133                           ; 3 bytes @ 0x30
  5134  0050                     	ds	3
  5135  0053                     ___ftdiv@exp:	
  5136                           
  5137                           ; 1 bytes @ 0x33
  5138  0053                     	ds	1
  5139  0054                     ___ftdiv@sign:	
  5140                           
  5141                           ; 1 bytes @ 0x34
  5142  0054                     	ds	1
  5143  0055                     ?_map:	
  5144  0055                     map@x:	
  5145                           ; 3 bytes @ 0x35
  5146                           
  5147                           
  5148                           ; 3 bytes @ 0x35
  5149  0055                     	ds	3
  5150  0058                     map@in_min:	
  5151                           
  5152                           ; 3 bytes @ 0x38
  5153  0058                     	ds	3
  5154  005B                     map@in_max:	
  5155                           
  5156                           ; 3 bytes @ 0x3B
  5157  005B                     	ds	3
  5158  005E                     map@out_min:	
  5159                           
  5160                           ; 3 bytes @ 0x3E
  5161  005E                     	ds	3
  5162  0061                     map@out_max:	
  5163                           
  5164                           ; 3 bytes @ 0x41
  5165  0061                     	ds	3
  5166  0064                     ??_map:	
  5167  0064                     _map$2192:	
  5168                           ; 1 bytes @ 0x44
  5169                           
  5170                           
  5171                           ; 3 bytes @ 0x44
  5172  0064                     	ds	3
  5173  0067                     ?___fttol:	
  5174  0067                     ___fttol@f1:	
  5175                           ; 4 bytes @ 0x47
  5176                           
  5177                           
  5178                           ; 3 bytes @ 0x47
  5179  0067                     	ds	4
  5180  006B                     ??___fttol:	
  5181                           
  5182                           ; 1 bytes @ 0x4B
  5183  006B                     	ds	4
  5184  006F                     ??_set_subdivision:	
  5185                           
  5186                           	psect	maintext
  5187  022B                     __pmaintext:	
  5188                           ; 1 bytes @ 0x4F
  5189 ;;
  5190 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
  5191 ;;
  5192 ;; *************** function _main *****************
  5193 ;; Defined at:
  5194 ;;		line 84 in file "main.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  adjusted_pot    2   25[BANK1 ] int 
  5199 ;;  i               2   29[BANK1 ] int 
  5200 ;;  i               2   27[BANK1 ] int 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : B1F/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5211 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5212 ;;      Temps:          0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5213 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5214 ;;Total ram usage:       21 bytes
  5215 ;; Hardware stack levels required when called:    6
  5216 ;; This function calls:
  5217 ;;		_ConfigureOscillator
  5218 ;;		_InitApp
  5219 ;;		_InitializeTaps
  5220 ;;		_ReadSavedSettings
  5221 ;;		___altoft
  5222 ;;		___awdiv
  5223 ;;		___awtoft
  5224 ;;		___ftdiv
  5225 ;;		___fttol
  5226 ;;		_adc_convert
  5227 ;;		_initSwitchBypass
  5228 ;;		_map
  5229 ;;		_modulation
  5230 ;;		_read_bottom_tactile
  5231 ;;		_read_top_tactile
  5232 ;;		_set_subdivision
  5233 ;;		_showBootSequence
  5234 ;;		_updateSwitchBypass
  5235 ;;		_updateSwitchTap
  5236 ;;		_update_mode
  5237 ;; This function is called by:
  5238 ;;		Startup code after reset
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           
  5243                           ;psect for function _main
  5244  022B                     _main:	
  5245                           
  5246                           ;main.c: 85: ConfigureOscillator();
  5247                           
  5248                           ;incstack = 0
  5249                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5250  022B  319E  267D  3182   	fcall	_ConfigureOscillator
  5251                           
  5252                           ;main.c: 86: InitApp();
  5253  022E  3190  2034  3182   	fcall	_InitApp
  5254                           
  5255                           ;main.c: 88: PORTEbits.RE0 = 1;
  5256  0231  0020               	movlb	0	; select bank0
  5257  0232  1410               	bsf	16,0	;volatile
  5258                           
  5259                           ;main.c: 89: PORTEbits.RE1 = 1;
  5260  0233  1490               	bsf	16,1	;volatile
  5261                           
  5262                           ;main.c: 90: PORTDbits.RD6 = 1;
  5263  0234  170F               	bsf	15,6	;volatile
  5264                           
  5265                           ;main.c: 91: PORTDbits.RD5 = 1;
  5266  0235  168F               	bsf	15,5	;volatile
  5267                           
  5268                           ;main.c: 92: PORTCbits.RC0 = 1;
  5269  0236  140E               	bsf	14,0	;volatile
  5270                           
  5271                           ;main.c: 93: PORTDbits.RD7 = 1;
  5272  0237  178F               	bsf	15,7	;volatile
  5273                           
  5274                           ;main.c: 95: InitializeTaps();
  5275  0238  319F  27AF  3182   	fcall	_InitializeTaps
  5276                           
  5277                           ;main.c: 96: initSwitchBypass();
  5278  023B  319E  26C3  3182   	fcall	_initSwitchBypass
  5279                           
  5280                           ;main.c: 99: ReadSavedSettings();
  5281  023E  3193  23EA  3182   	fcall	_ReadSavedSettings
  5282  0241                     l4419:	
  5283                           ;main.c: 101: while (1) {
  5284                           
  5285                           
  5286                           ;main.c: 104: read_bottom_tactile();
  5287  0241  3190  2094  3182   	fcall	_read_bottom_tactile
  5288                           
  5289                           ;main.c: 105: read_top_tactile();
  5290  0244  3190  20F7  3182   	fcall	_read_top_tactile
  5291                           
  5292                           ;main.c: 108: update_mode();
  5293  0247  3193  2313  3182   	fcall	_update_mode
  5294                           
  5295                           ;main.c: 110: if (PORTDbits.RD7 == 0) {
  5296  024A  0020               	movlb	0	; select bank0
  5297  024B  1B8F               	btfsc	15,7	;volatile
  5298  024C  2A6B               	goto	l4433
  5299                           
  5300                           ;main.c: 111: debounce_mode1++;
  5301  024D  3001               	movlw	1
  5302  024E  0022               	movlb	2	; select bank2
  5303  024F  07C6               	addwf	_debounce_mode1^(0+256),f
  5304  0250  3000               	movlw	0
  5305  0251  3DC7               	addwfc	(_debounce_mode1+1)^(0+256),f
  5306                           
  5307                           ;main.c: 112: if (debounce_mode1 > 25) {
  5308  0252  0847               	movf	(_debounce_mode1+1)^(0+256),w
  5309  0253  3A80               	xorlw	128
  5310  0254  0021               	movlb	1	; select bank1
  5311  0255  00C9               	movwf	??_main^(0+128)
  5312  0256  3080               	movlw	128
  5313  0257  0249               	subwf	??_main^(0+128),w
  5314  0258  1D03               	skipz
  5315  0259  2A5D               	goto	u4435
  5316  025A  301A               	movlw	26
  5317  025B  0022               	movlb	2	; select bank2
  5318  025C  0246               	subwf	_debounce_mode1^(0+256),w
  5319  025D                     u4435:	
  5320  025D  1C03               	skipc
  5321  025E  2A6E               	goto	l4435
  5322                           
  5323                           ;main.c: 113: debounce_mode1 = 25;
  5324  025F  3019               	movlw	25
  5325  0260  0022               	movlb	2	; select bank2
  5326  0261  00C6               	movwf	_debounce_mode1^(0+256)
  5327  0262  3000               	movlw	0
  5328  0263  00C7               	movwf	(_debounce_mode1^(0+256)+1)
  5329                           
  5330                           ;main.c: 117: showBootSequence();
  5331  0264  319F  27D5  3182   	fcall	_showBootSequence
  5332  0267                     l277:	
  5333                           ;main.c: 120: while (PORTDbits.RD7 == 0) {
  5334                           
  5335  0267  0020               	movlb	0	; select bank0
  5336  0268  1B8F               	btfsc	15,7	;volatile
  5337  0269  2A6E               	goto	l4435
  5338  026A  2A67               	goto	l277
  5339  026B                     l4433:	
  5340                           ;main.c: 121: }
  5341                           ;main.c: 122: }
  5342                           ;main.c: 123: } else {
  5343                           
  5344                           
  5345                           ;main.c: 124: debounce_mode1 = 0;
  5346  026B  0022               	movlb	2	; select bank2
  5347  026C  01C6               	clrf	_debounce_mode1^(0+256)
  5348  026D  01C7               	clrf	(_debounce_mode1+1)^(0+256)
  5349  026E                     l4435:	
  5350                           
  5351                           ;main.c: 125: }
  5352                           ;main.c: 127: updateSwitchBypass();
  5353  026E  3188  20E6  3182   	fcall	_updateSwitchBypass
  5354                           
  5355                           ;main.c: 128: updateSwitchTap();
  5356  0271  318B  23B9  3182   	fcall	_updateSwitchTap
  5357                           
  5358                           ;main.c: 222: knob_1_pos = adc_convert(0);
  5359  0274  3000               	movlw	0
  5360  0275  319E  26FF  3182   	fcall	_adc_convert
  5361  0278  0020               	movlb	0	; select bank0
  5362  0279  0821               	movf	?_adc_convert+1,w
  5363  027A  0022               	movlb	2	; select bank2
  5364  027B  00D1               	movwf	(_knob_1_pos+1)^(0+256)
  5365  027C  0020               	movlb	0	; select bank0
  5366  027D  0820               	movf	?_adc_convert,w
  5367  027E  0022               	movlb	2	; select bank2
  5368  027F  00D0               	movwf	_knob_1_pos^(0+256)
  5369                           
  5370                           ;main.c: 223: knob_2_pos = adc_convert(1);
  5371  0280  3001               	movlw	1
  5372  0281  319E  26FF  3182   	fcall	_adc_convert
  5373  0284  0020               	movlb	0	; select bank0
  5374  0285  0821               	movf	?_adc_convert+1,w
  5375  0286  0022               	movlb	2	; select bank2
  5376  0287  00D3               	movwf	(_knob_2_pos+1)^(0+256)
  5377  0288  0020               	movlb	0	; select bank0
  5378  0289  0820               	movf	?_adc_convert,w
  5379  028A  0022               	movlb	2	; select bank2
  5380  028B  00D2               	movwf	_knob_2_pos^(0+256)
  5381                           
  5382                           ;main.c: 224: knob_3_pos = adc_convert(2);
  5383  028C  3002               	movlw	2
  5384  028D  319E  26FF  3182   	fcall	_adc_convert
  5385  0290  0020               	movlb	0	; select bank0
  5386  0291  0821               	movf	?_adc_convert+1,w
  5387  0292  0022               	movlb	2	; select bank2
  5388  0293  00D5               	movwf	(_knob_3_pos+1)^(0+256)
  5389  0294  0020               	movlb	0	; select bank0
  5390  0295  0820               	movf	?_adc_convert,w
  5391  0296  0022               	movlb	2	; select bank2
  5392  0297  00D4               	movwf	_knob_3_pos^(0+256)
  5393                           
  5394                           ;main.c: 225: knob_4_pos = adc_convert(3);
  5395  0298  3003               	movlw	3
  5396  0299  319E  26FF  3182   	fcall	_adc_convert
  5397  029C  0020               	movlb	0	; select bank0
  5398  029D  0821               	movf	?_adc_convert+1,w
  5399  029E  0022               	movlb	2	; select bank2
  5400  029F  00D7               	movwf	(_knob_4_pos+1)^(0+256)
  5401  02A0  0020               	movlb	0	; select bank0
  5402  02A1  0820               	movf	?_adc_convert,w
  5403  02A2  0022               	movlb	2	; select bank2
  5404  02A3  00D6               	movwf	_knob_4_pos^(0+256)
  5405                           
  5406                           ;main.c: 226: knob_5_pos = adc_convert(4);
  5407  02A4  3004               	movlw	4
  5408  02A5  319E  26FF  3182   	fcall	_adc_convert
  5409  02A8  0020               	movlb	0	; select bank0
  5410  02A9  0821               	movf	?_adc_convert+1,w
  5411  02AA  0022               	movlb	2	; select bank2
  5412  02AB  00D9               	movwf	(_knob_5_pos+1)^(0+256)
  5413  02AC  0020               	movlb	0	; select bank0
  5414  02AD  0820               	movf	?_adc_convert,w
  5415  02AE  0022               	movlb	2	; select bank2
  5416  02AF  00D8               	movwf	_knob_5_pos^(0+256)
  5417                           
  5418                           ;main.c: 253: if ((knob_1_pos - knob1_prev) >= 4 || (knob_1_pos - knob1_prev) <= -4) {
  5419  02B0  0021               	movlb	1	; select bank1
  5420  02B1  092A               	comf	_knob1_prev^(0+128),w	;volatile
  5421  02B2  00C9               	movwf	??_main^(0+128)
  5422  02B3  092B               	comf	(_knob1_prev+1)^(0+128),w	;volatile
  5423  02B4  00CA               	movwf	(??_main^(0+128)+1)
  5424  02B5  0AC9               	incf	??_main^(0+128),f
  5425  02B6  1903               	skipnz
  5426  02B7  0ACA               	incf	(??_main^(0+128)+1),f
  5427  02B8  0022               	movlb	2	; select bank2
  5428  02B9  0850               	movf	_knob_1_pos^(0+256),w
  5429  02BA  0021               	movlb	1	; select bank1
  5430  02BB  0749               	addwf	??_main^(0+128),w
  5431  02BC  00CB               	movwf	(??_main+2)^(0+128)
  5432  02BD  0022               	movlb	2	; select bank2
  5433  02BE  0851               	movf	(_knob_1_pos+1)^(0+256),w
  5434  02BF  0021               	movlb	1	; select bank1
  5435  02C0  3D4A               	addwfc	(??_main+1)^(0+128),w
  5436  02C1  00CC               	movwf	(??_main+3)^(0+128)
  5437  02C2  084C               	movf	(??_main+3)^(0+128),w
  5438  02C3  3A80               	xorlw	128
  5439  02C4  00CD               	movwf	(??_main+4)^(0+128)
  5440  02C5  3080               	movlw	128
  5441  02C6  024D               	subwf	(??_main+4)^(0+128),w
  5442  02C7  1D03               	skipz
  5443  02C8  2ACB               	goto	u4455
  5444  02C9  3004               	movlw	4
  5445  02CA  024B               	subwf	(??_main+2)^(0+128),w
  5446  02CB                     u4455:	
  5447  02CB  1803               	skipnc
  5448  02CC  2AEA               	goto	l4453
  5449  02CD  0021               	movlb	1	; select bank1
  5450  02CE  092A               	comf	_knob1_prev^(0+128),w	;volatile
  5451  02CF  00C9               	movwf	??_main^(0+128)
  5452  02D0  092B               	comf	(_knob1_prev+1)^(0+128),w	;volatile
  5453  02D1  00CA               	movwf	(??_main^(0+128)+1)
  5454  02D2  0AC9               	incf	??_main^(0+128),f
  5455  02D3  1903               	skipnz
  5456  02D4  0ACA               	incf	(??_main^(0+128)+1),f
  5457  02D5  0022               	movlb	2	; select bank2
  5458  02D6  0850               	movf	_knob_1_pos^(0+256),w
  5459  02D7  0021               	movlb	1	; select bank1
  5460  02D8  0749               	addwf	??_main^(0+128),w
  5461  02D9  00CB               	movwf	(??_main+2)^(0+128)
  5462  02DA  0022               	movlb	2	; select bank2
  5463  02DB  0851               	movf	(_knob_1_pos+1)^(0+256),w
  5464  02DC  0021               	movlb	1	; select bank1
  5465  02DD  3D4A               	addwfc	(??_main+1)^(0+128),w
  5466  02DE  00CC               	movwf	(??_main+3)^(0+128)
  5467  02DF  084C               	movf	(??_main+3)^(0+128),w
  5468  02E0  3A80               	xorlw	128
  5469  02E1  00CD               	movwf	(??_main+4)^(0+128)
  5470  02E2  307F               	movlw	127
  5471  02E3  024D               	subwf	(??_main+4)^(0+128),w
  5472  02E4  1D03               	skipz
  5473  02E5  2AE8               	goto	u4465
  5474  02E6  30FD               	movlw	253
  5475  02E7  024B               	subwf	(??_main+2)^(0+128),w
  5476  02E8                     u4465:	
  5477  02E8  1803               	skipnc
  5478  02E9  2B3F               	goto	l4459
  5479  02EA                     l4453:	
  5480                           
  5481                           ;main.c: 254: knob1_prev = knob_1_pos;
  5482  02EA  0022               	movlb	2	; select bank2
  5483  02EB  0851               	movf	(_knob_1_pos+1)^(0+256),w
  5484  02EC  0021               	movlb	1	; select bank1
  5485  02ED  00AB               	movwf	(_knob1_prev+1)^(0+128)	;volatile
  5486  02EE  0022               	movlb	2	; select bank2
  5487  02EF  0850               	movf	_knob_1_pos^(0+256),w
  5488  02F0  0021               	movlb	1	; select bank1
  5489  02F1  00AA               	movwf	_knob1_prev^(0+128)	;volatile
  5490                           
  5491                           ;main.c: 255: baseline_delay_time = map(knob1_prev, 0, 1023, 1172, 200);
  5492  02F2  3000               	movlw	0
  5493  02F3  0020               	movlb	0	; select bank0
  5494  02F4  00E1               	movwf	map@out_max
  5495  02F5  3048               	movlw	72
  5496  02F6  00E2               	movwf	map@out_max+1
  5497  02F7  3043               	movlw	67
  5498  02F8  00E3               	movwf	map@out_max+2
  5499  02F9  3080               	movlw	128
  5500  02FA  00DE               	movwf	map@out_min
  5501  02FB  3092               	movlw	146
  5502  02FC  00DF               	movwf	map@out_min+1
  5503  02FD  3044               	movlw	68
  5504  02FE  00E0               	movwf	map@out_min+2
  5505  02FF  30C0               	movlw	192
  5506  0300  00DB               	movwf	map@in_max
  5507  0301  307F               	movlw	127
  5508  0302  00DC               	movwf	map@in_max+1
  5509  0303  3044               	movlw	68
  5510  0304  00DD               	movwf	map@in_max+2
  5511  0305  3000               	movlw	0
  5512  0306  00D8               	movwf	map@in_min
  5513  0307  3000               	movlw	0
  5514  0308  00D9               	movwf	map@in_min+1
  5515  0309  3000               	movlw	0
  5516  030A  00DA               	movwf	map@in_min+2
  5517  030B  0021               	movlb	1	; select bank1
  5518  030C  082B               	movf	(_knob1_prev+1)^(0+128),w	;volatile
  5519  030D  0020               	movlb	0	; select bank0
  5520  030E  00A9               	movwf	___awtoft@c+1
  5521  030F  0021               	movlb	1	; select bank1
  5522  0310  082A               	movf	_knob1_prev^(0+128),w	;volatile
  5523  0311  0020               	movlb	0	; select bank0
  5524  0312  00A8               	movwf	___awtoft@c
  5525  0313  319F  278D  3182   	fcall	___awtoft
  5526  0316  0020               	movlb	0	; select bank0
  5527  0317  0828               	movf	?___awtoft,w
  5528  0318  00D5               	movwf	map@x
  5529  0319  0829               	movf	?___awtoft+1,w
  5530  031A  00D6               	movwf	map@x+1
  5531  031B  082A               	movf	?___awtoft+2,w
  5532  031C  00D7               	movwf	map@x+2
  5533  031D  3196  26D6  3182   	fcall	_map
  5534  0320  0020               	movlb	0	; select bank0
  5535  0321  0855               	movf	?_map,w
  5536  0322  00E7               	movwf	___fttol@f1
  5537  0323  0856               	movf	?_map+1,w
  5538  0324  00E8               	movwf	___fttol@f1+1
  5539  0325  0857               	movf	?_map+2,w
  5540  0326  00E9               	movwf	___fttol@f1+2
  5541  0327  3197  2761  3182   	fcall	___fttol
  5542  032A  0020               	movlb	0	; select bank0
  5543  032B  086A               	movf	?___fttol+3,w
  5544  032C  0021               	movlb	1	; select bank1
  5545  032D  00A3               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  5546  032E  0020               	movlb	0	; select bank0
  5547  032F  0869               	movf	?___fttol+2,w
  5548  0330  0021               	movlb	1	; select bank1
  5549  0331  00A2               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  5550  0332  0020               	movlb	0	; select bank0
  5551  0333  0868               	movf	?___fttol+1,w
  5552  0334  0021               	movlb	1	; select bank1
  5553  0335  00A1               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  5554  0336  0020               	movlb	0	; select bank0
  5555  0337  0867               	movf	?___fttol,w
  5556  0338  0021               	movlb	1	; select bank1
  5557  0339  00A0               	movwf	_baseline_delay_time^(0+128)	;volatile
  5558                           
  5559                           ;main.c: 256: delay_time_changed = 1;
  5560  033A  3001               	movlw	1
  5561  033B  0022               	movlb	2	; select bank2
  5562  033C  00E7               	movwf	_delay_time_changed^(0+256)
  5563  033D  3000               	movlw	0
  5564  033E  00E8               	movwf	(_delay_time_changed^(0+256)+1)
  5565  033F                     l4459:	
  5566                           
  5567                           ;main.c: 257: }
  5568                           ;main.c: 267: if (knob_2_pos - knob2_prev >= 4 || knob_2_pos - knob2_prev <= -4) {
  5569  033F  0021               	movlb	1	; select bank1
  5570  0340  092C               	comf	_knob2_prev^(0+128),w	;volatile
  5571  0341  00C9               	movwf	??_main^(0+128)
  5572  0342  092D               	comf	(_knob2_prev+1)^(0+128),w	;volatile
  5573  0343  00CA               	movwf	(??_main^(0+128)+1)
  5574  0344  0AC9               	incf	??_main^(0+128),f
  5575  0345  1903               	skipnz
  5576  0346  0ACA               	incf	(??_main^(0+128)+1),f
  5577  0347  0022               	movlb	2	; select bank2
  5578  0348  0852               	movf	_knob_2_pos^(0+256),w
  5579  0349  0021               	movlb	1	; select bank1
  5580  034A  0749               	addwf	??_main^(0+128),w
  5581  034B  00CB               	movwf	(??_main+2)^(0+128)
  5582  034C  0022               	movlb	2	; select bank2
  5583  034D  0853               	movf	(_knob_2_pos+1)^(0+256),w
  5584  034E  0021               	movlb	1	; select bank1
  5585  034F  3D4A               	addwfc	(??_main+1)^(0+128),w
  5586  0350  00CC               	movwf	(??_main+3)^(0+128)
  5587  0351  084C               	movf	(??_main+3)^(0+128),w
  5588  0352  3A80               	xorlw	128
  5589  0353  00CD               	movwf	(??_main+4)^(0+128)
  5590  0354  3080               	movlw	128
  5591  0355  024D               	subwf	(??_main+4)^(0+128),w
  5592  0356  1D03               	skipz
  5593  0357  2B5A               	goto	u4475
  5594  0358  3004               	movlw	4
  5595  0359  024B               	subwf	(??_main+2)^(0+128),w
  5596  035A                     u4475:	
  5597  035A  1803               	skipnc
  5598  035B  2B79               	goto	l4463
  5599  035C  0021               	movlb	1	; select bank1
  5600  035D  092C               	comf	_knob2_prev^(0+128),w	;volatile
  5601  035E  00C9               	movwf	??_main^(0+128)
  5602  035F  092D               	comf	(_knob2_prev+1)^(0+128),w	;volatile
  5603  0360  00CA               	movwf	(??_main^(0+128)+1)
  5604  0361  0AC9               	incf	??_main^(0+128),f
  5605  0362  1903               	skipnz
  5606  0363  0ACA               	incf	(??_main^(0+128)+1),f
  5607  0364  0022               	movlb	2	; select bank2
  5608  0365  0852               	movf	_knob_2_pos^(0+256),w
  5609  0366  0021               	movlb	1	; select bank1
  5610  0367  0749               	addwf	??_main^(0+128),w
  5611  0368  00CB               	movwf	(??_main+2)^(0+128)
  5612  0369  0022               	movlb	2	; select bank2
  5613  036A  0853               	movf	(_knob_2_pos+1)^(0+256),w
  5614  036B  0021               	movlb	1	; select bank1
  5615  036C  3D4A               	addwfc	(??_main+1)^(0+128),w
  5616  036D  00CC               	movwf	(??_main+3)^(0+128)
  5617  036E  084C               	movf	(??_main+3)^(0+128),w
  5618  036F  3A80               	xorlw	128
  5619  0370  00CD               	movwf	(??_main+4)^(0+128)
  5620  0371  307F               	movlw	127
  5621  0372  024D               	subwf	(??_main+4)^(0+128),w
  5622  0373  1D03               	skipz
  5623  0374  2B77               	goto	u4485
  5624  0375  30FD               	movlw	253
  5625  0376  024B               	subwf	(??_main+2)^(0+128),w
  5626  0377                     u4485:	
  5627  0377  1803               	skipnc
  5628  0378  2BD6               	goto	l4471
  5629  0379                     l4463:	
  5630                           
  5631                           ;main.c: 268: knob2_prev = knob_2_pos;
  5632  0379  0022               	movlb	2	; select bank2
  5633  037A  0853               	movf	(_knob_2_pos+1)^(0+256),w
  5634  037B  0021               	movlb	1	; select bank1
  5635  037C  00AD               	movwf	(_knob2_prev+1)^(0+128)	;volatile
  5636  037D  0022               	movlb	2	; select bank2
  5637  037E  0852               	movf	_knob_2_pos^(0+256),w
  5638  037F  0021               	movlb	1	; select bank1
  5639  0380  00AC               	movwf	_knob2_prev^(0+128)	;volatile
  5640                           
  5641                           ;main.c: 269: int i = map(knob2_prev, 0, 1023, 0, 39);
  5642  0381  3000               	movlw	0
  5643  0382  0020               	movlb	0	; select bank0
  5644  0383  00E1               	movwf	map@out_max
  5645  0384  301C               	movlw	28
  5646  0385  00E2               	movwf	map@out_max+1
  5647  0386  3042               	movlw	66
  5648  0387  00E3               	movwf	map@out_max+2
  5649  0388  3000               	movlw	0
  5650  0389  00DE               	movwf	map@out_min
  5651  038A  3000               	movlw	0
  5652  038B  00DF               	movwf	map@out_min+1
  5653  038C  3000               	movlw	0
  5654  038D  00E0               	movwf	map@out_min+2
  5655  038E  30C0               	movlw	192
  5656  038F  00DB               	movwf	map@in_max
  5657  0390  307F               	movlw	127
  5658  0391  00DC               	movwf	map@in_max+1
  5659  0392  3044               	movlw	68
  5660  0393  00DD               	movwf	map@in_max+2
  5661  0394  3000               	movlw	0
  5662  0395  00D8               	movwf	map@in_min
  5663  0396  3000               	movlw	0
  5664  0397  00D9               	movwf	map@in_min+1
  5665  0398  3000               	movlw	0
  5666  0399  00DA               	movwf	map@in_min+2
  5667  039A  0021               	movlb	1	; select bank1
  5668  039B  082D               	movf	(_knob2_prev+1)^(0+128),w	;volatile
  5669  039C  0020               	movlb	0	; select bank0
  5670  039D  00A9               	movwf	___awtoft@c+1
  5671  039E  0021               	movlb	1	; select bank1
  5672  039F  082C               	movf	_knob2_prev^(0+128),w	;volatile
  5673  03A0  0020               	movlb	0	; select bank0
  5674  03A1  00A8               	movwf	___awtoft@c
  5675  03A2  319F  278D  3182   	fcall	___awtoft
  5676  03A5  0020               	movlb	0	; select bank0
  5677  03A6  0828               	movf	?___awtoft,w
  5678  03A7  00D5               	movwf	map@x
  5679  03A8  0829               	movf	?___awtoft+1,w
  5680  03A9  00D6               	movwf	map@x+1
  5681  03AA  082A               	movf	?___awtoft+2,w
  5682  03AB  00D7               	movwf	map@x+2
  5683  03AC  3196  26D6  3182   	fcall	_map
  5684  03AF  0020               	movlb	0	; select bank0
  5685  03B0  0855               	movf	?_map,w
  5686  03B1  00E7               	movwf	___fttol@f1
  5687  03B2  0856               	movf	?_map+1,w
  5688  03B3  00E8               	movwf	___fttol@f1+1
  5689  03B4  0857               	movf	?_map+2,w
  5690  03B5  00E9               	movwf	___fttol@f1+2
  5691  03B6  3197  2761  3182   	fcall	___fttol
  5692  03B9  0020               	movlb	0	; select bank0
  5693  03BA  0868               	movf	?___fttol+1,w
  5694  03BB  0021               	movlb	1	; select bank1
  5695  03BC  00DB               	movwf	(main@i+1)^(0+128)
  5696  03BD  0020               	movlb	0	; select bank0
  5697  03BE  0867               	movf	?___fttol,w
  5698  03BF  0021               	movlb	1	; select bank1
  5699  03C0  00DA               	movwf	main@i^(0+128)
  5700                           
  5701                           ;main.c: 270: CCPR2 = iB25k[i];
  5702  03C1  355A               	lslf	main@i^(0+128),w
  5703  03C2  3E20               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5704  03C3  0086               	movwf	6
  5705  03C4  3004               	movlw	4	; select bank8/9
  5706  03C5  0087               	movwf	7
  5707  03C6  3F40               	moviw [0]fsr1
  5708  03C7  0025               	movlb	5	; select bank5
  5709  03C8  0098               	movwf	24	;volatile
  5710  03C9  3F41               	moviw [1]fsr1
  5711  03CA  0099               	movwf	25	;volatile
  5712                           
  5713                           ;main.c: 271: CCPR3 = B25k[i];
  5714  03CB  0021               	movlb	1	; select bank1
  5715  03CC  355A               	lslf	main@i^(0+128),w
  5716  03CD  3EA0               	addlw	(low (_B25k| (0+768)))& (0+255)
  5717  03CE  0086               	movwf	6
  5718  03CF  3003               	movlw	3	; select bank7/8
  5719  03D0  0087               	movwf	7
  5720  03D1  3F40               	moviw [0]fsr1
  5721  03D2  0026               	movlb	6	; select bank6
  5722  03D3  0091               	movwf	17	;volatile
  5723  03D4  3F41               	moviw [1]fsr1
  5724  03D5  0092               	movwf	18	;volatile
  5725  03D6                     l4471:	
  5726                           
  5727                           ;main.c: 272: }
  5728                           ;main.c: 282: if (knob_3_pos - knob3_prev >= 4 || knob_3_pos - knob3_prev <= -4) {
  5729  03D6  0021               	movlb	1	; select bank1
  5730  03D7  092E               	comf	_knob3_prev^(0+128),w	;volatile
  5731  03D8  00C9               	movwf	??_main^(0+128)
  5732  03D9  092F               	comf	(_knob3_prev+1)^(0+128),w	;volatile
  5733  03DA  00CA               	movwf	(??_main^(0+128)+1)
  5734  03DB  0AC9               	incf	??_main^(0+128),f
  5735  03DC  1903               	skipnz
  5736  03DD  0ACA               	incf	(??_main^(0+128)+1),f
  5737  03DE  0022               	movlb	2	; select bank2
  5738  03DF  0854               	movf	_knob_3_pos^(0+256),w
  5739  03E0  0021               	movlb	1	; select bank1
  5740  03E1  0749               	addwf	??_main^(0+128),w
  5741  03E2  00CB               	movwf	(??_main+2)^(0+128)
  5742  03E3  0022               	movlb	2	; select bank2
  5743  03E4  0855               	movf	(_knob_3_pos+1)^(0+256),w
  5744  03E5  0021               	movlb	1	; select bank1
  5745  03E6  3D4A               	addwfc	(??_main+1)^(0+128),w
  5746  03E7  00CC               	movwf	(??_main+3)^(0+128)
  5747  03E8  084C               	movf	(??_main+3)^(0+128),w
  5748  03E9  3A80               	xorlw	128
  5749  03EA  00CD               	movwf	(??_main+4)^(0+128)
  5750  03EB  3080               	movlw	128
  5751  03EC  024D               	subwf	(??_main+4)^(0+128),w
  5752  03ED  1D03               	skipz
  5753  03EE  2BF1               	goto	u4495
  5754  03EF  3004               	movlw	4
  5755  03F0  024B               	subwf	(??_main+2)^(0+128),w
  5756  03F1                     u4495:	
  5757  03F1  1803               	skipnc
  5758  03F2  2C10               	goto	l4475
  5759  03F3  0021               	movlb	1	; select bank1
  5760  03F4  092E               	comf	_knob3_prev^(0+128),w	;volatile
  5761  03F5  00C9               	movwf	??_main^(0+128)
  5762  03F6  092F               	comf	(_knob3_prev+1)^(0+128),w	;volatile
  5763  03F7  00CA               	movwf	(??_main^(0+128)+1)
  5764  03F8  0AC9               	incf	??_main^(0+128),f
  5765  03F9  1903               	skipnz
  5766  03FA  0ACA               	incf	(??_main^(0+128)+1),f
  5767  03FB  0022               	movlb	2	; select bank2
  5768  03FC  0854               	movf	_knob_3_pos^(0+256),w
  5769  03FD  0021               	movlb	1	; select bank1
  5770  03FE  0749               	addwf	??_main^(0+128),w
  5771  03FF  00CB               	movwf	(??_main+2)^(0+128)
  5772  0400  0022               	movlb	2	; select bank2
  5773  0401  0855               	movf	(_knob_3_pos+1)^(0+256),w
  5774  0402  0021               	movlb	1	; select bank1
  5775  0403  3D4A               	addwfc	(??_main+1)^(0+128),w
  5776  0404  00CC               	movwf	(??_main+3)^(0+128)
  5777  0405  084C               	movf	(??_main+3)^(0+128),w
  5778  0406  3A80               	xorlw	128
  5779  0407  00CD               	movwf	(??_main+4)^(0+128)
  5780  0408  307F               	movlw	127
  5781  0409  024D               	subwf	(??_main+4)^(0+128),w
  5782  040A  1D03               	skipz
  5783  040B  2C0E               	goto	u4505
  5784  040C  30FD               	movlw	253
  5785  040D  024B               	subwf	(??_main+2)^(0+128),w
  5786  040E                     u4505:	
  5787  040E  1803               	skipnc
  5788  040F  2C6D               	goto	l4483
  5789  0410                     l4475:	
  5790                           
  5791                           ;main.c: 283: knob3_prev = knob_3_pos;
  5792  0410  0022               	movlb	2	; select bank2
  5793  0411  0855               	movf	(_knob_3_pos+1)^(0+256),w
  5794  0412  0021               	movlb	1	; select bank1
  5795  0413  00AF               	movwf	(_knob3_prev+1)^(0+128)	;volatile
  5796  0414  0022               	movlb	2	; select bank2
  5797  0415  0854               	movf	_knob_3_pos^(0+256),w
  5798  0416  0021               	movlb	1	; select bank1
  5799  0417  00AE               	movwf	_knob3_prev^(0+128)	;volatile
  5800                           
  5801                           ;main.c: 284: int i = map(knob3_prev, 0, 1023, 16, 0);
  5802  0418  3000               	movlw	0
  5803  0419  0020               	movlb	0	; select bank0
  5804  041A  00E1               	movwf	map@out_max
  5805  041B  3000               	movlw	0
  5806  041C  00E2               	movwf	map@out_max+1
  5807  041D  3000               	movlw	0
  5808  041E  00E3               	movwf	map@out_max+2
  5809  041F  3000               	movlw	0
  5810  0420  00DE               	movwf	map@out_min
  5811  0421  3080               	movlw	128
  5812  0422  00DF               	movwf	map@out_min+1
  5813  0423  3041               	movlw	65
  5814  0424  00E0               	movwf	map@out_min+2
  5815  0425  30C0               	movlw	192
  5816  0426  00DB               	movwf	map@in_max
  5817  0427  307F               	movlw	127
  5818  0428  00DC               	movwf	map@in_max+1
  5819  0429  3044               	movlw	68
  5820  042A  00DD               	movwf	map@in_max+2
  5821  042B  3000               	movlw	0
  5822  042C  00D8               	movwf	map@in_min
  5823  042D  3000               	movlw	0
  5824  042E  00D9               	movwf	map@in_min+1
  5825  042F  3000               	movlw	0
  5826  0430  00DA               	movwf	map@in_min+2
  5827  0431  0021               	movlb	1	; select bank1
  5828  0432  082F               	movf	(_knob3_prev+1)^(0+128),w	;volatile
  5829  0433  0020               	movlb	0	; select bank0
  5830  0434  00A9               	movwf	___awtoft@c+1
  5831  0435  0021               	movlb	1	; select bank1
  5832  0436  082E               	movf	_knob3_prev^(0+128),w	;volatile
  5833  0437  0020               	movlb	0	; select bank0
  5834  0438  00A8               	movwf	___awtoft@c
  5835  0439  319F  278D  3182   	fcall	___awtoft
  5836  043C  0020               	movlb	0	; select bank0
  5837  043D  0828               	movf	?___awtoft,w
  5838  043E  00D5               	movwf	map@x
  5839  043F  0829               	movf	?___awtoft+1,w
  5840  0440  00D6               	movwf	map@x+1
  5841  0441  082A               	movf	?___awtoft+2,w
  5842  0442  00D7               	movwf	map@x+2
  5843  0443  3196  26D6  3182   	fcall	_map
  5844  0446  0020               	movlb	0	; select bank0
  5845  0447  0855               	movf	?_map,w
  5846  0448  00E7               	movwf	___fttol@f1
  5847  0449  0856               	movf	?_map+1,w
  5848  044A  00E8               	movwf	___fttol@f1+1
  5849  044B  0857               	movf	?_map+2,w
  5850  044C  00E9               	movwf	___fttol@f1+2
  5851  044D  3197  2761  3182   	fcall	___fttol
  5852  0450  0020               	movlb	0	; select bank0
  5853  0451  0868               	movf	?___fttol+1,w
  5854  0452  0021               	movlb	1	; select bank1
  5855  0453  00DD               	movwf	(main@i_358+1)^(0+128)
  5856  0454  0020               	movlb	0	; select bank0
  5857  0455  0867               	movf	?___fttol,w
  5858  0456  0021               	movlb	1	; select bank1
  5859  0457  00DC               	movwf	main@i_358^(0+128)
  5860                           
  5861                           ;main.c: 285: CCPR4 = iB25k[i];
  5862  0458  355C               	lslf	main@i_358^(0+128),w
  5863  0459  3E20               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5864  045A  0086               	movwf	6
  5865  045B  3004               	movlw	4	; select bank8/9
  5866  045C  0087               	movwf	7
  5867  045D  3F40               	moviw [0]fsr1
  5868  045E  0026               	movlb	6	; select bank6
  5869  045F  0098               	movwf	24	;volatile
  5870  0460  3F41               	moviw [1]fsr1
  5871  0461  0099               	movwf	25	;volatile
  5872                           
  5873                           ;main.c: 286: CCPR5 = B25k[i];
  5874  0462  0021               	movlb	1	; select bank1
  5875  0463  355C               	lslf	main@i_358^(0+128),w
  5876  0464  3EA0               	addlw	(low (_B25k| (0+768)))& (0+255)
  5877  0465  0086               	movwf	6
  5878  0466  3003               	movlw	3	; select bank7/8
  5879  0467  0087               	movwf	7
  5880  0468  3F40               	moviw [0]fsr1
  5881  0469  0026               	movlb	6	; select bank6
  5882  046A  009C               	movwf	28	;volatile
  5883  046B  3F41               	moviw [1]fsr1
  5884  046C  009D               	movwf	29	;volatile
  5885  046D                     l4483:	
  5886                           
  5887                           ;main.c: 287: }
  5888                           ;main.c: 297: if (knob_4_pos - knob4_prev >= 4 || knob_4_pos - knob4_prev <= -4) {
  5889  046D  0021               	movlb	1	; select bank1
  5890  046E  0930               	comf	_knob4_prev^(0+128),w	;volatile
  5891  046F  00C9               	movwf	??_main^(0+128)
  5892  0470  0931               	comf	(_knob4_prev+1)^(0+128),w	;volatile
  5893  0471  00CA               	movwf	(??_main^(0+128)+1)
  5894  0472  0AC9               	incf	??_main^(0+128),f
  5895  0473  1903               	skipnz
  5896  0474  0ACA               	incf	(??_main^(0+128)+1),f
  5897  0475  0022               	movlb	2	; select bank2
  5898  0476  0856               	movf	_knob_4_pos^(0+256),w
  5899  0477  0021               	movlb	1	; select bank1
  5900  0478  0749               	addwf	??_main^(0+128),w
  5901  0479  00CB               	movwf	(??_main+2)^(0+128)
  5902  047A  0022               	movlb	2	; select bank2
  5903  047B  0857               	movf	(_knob_4_pos+1)^(0+256),w
  5904  047C  0021               	movlb	1	; select bank1
  5905  047D  3D4A               	addwfc	(??_main+1)^(0+128),w
  5906  047E  00CC               	movwf	(??_main+3)^(0+128)
  5907  047F  084C               	movf	(??_main+3)^(0+128),w
  5908  0480  3A80               	xorlw	128
  5909  0481  00CD               	movwf	(??_main+4)^(0+128)
  5910  0482  3080               	movlw	128
  5911  0483  024D               	subwf	(??_main+4)^(0+128),w
  5912  0484  1D03               	skipz
  5913  0485  2C88               	goto	u4515
  5914  0486  3004               	movlw	4
  5915  0487  024B               	subwf	(??_main+2)^(0+128),w
  5916  0488                     u4515:	
  5917  0488  1803               	skipnc
  5918  0489  2CA7               	goto	l4487
  5919  048A  0021               	movlb	1	; select bank1
  5920  048B  0930               	comf	_knob4_prev^(0+128),w	;volatile
  5921  048C  00C9               	movwf	??_main^(0+128)
  5922  048D  0931               	comf	(_knob4_prev+1)^(0+128),w	;volatile
  5923  048E  00CA               	movwf	(??_main^(0+128)+1)
  5924  048F  0AC9               	incf	??_main^(0+128),f
  5925  0490  1903               	skipnz
  5926  0491  0ACA               	incf	(??_main^(0+128)+1),f
  5927  0492  0022               	movlb	2	; select bank2
  5928  0493  0856               	movf	_knob_4_pos^(0+256),w
  5929  0494  0021               	movlb	1	; select bank1
  5930  0495  0749               	addwf	??_main^(0+128),w
  5931  0496  00CB               	movwf	(??_main+2)^(0+128)
  5932  0497  0022               	movlb	2	; select bank2
  5933  0498  0857               	movf	(_knob_4_pos+1)^(0+256),w
  5934  0499  0021               	movlb	1	; select bank1
  5935  049A  3D4A               	addwfc	(??_main+1)^(0+128),w
  5936  049B  00CC               	movwf	(??_main+3)^(0+128)
  5937  049C  084C               	movf	(??_main+3)^(0+128),w
  5938  049D  3A80               	xorlw	128
  5939  049E  00CD               	movwf	(??_main+4)^(0+128)
  5940  049F  307F               	movlw	127
  5941  04A0  024D               	subwf	(??_main+4)^(0+128),w
  5942  04A1  1D03               	skipz
  5943  04A2  2CA5               	goto	u4525
  5944  04A3  30FD               	movlw	253
  5945  04A4  024B               	subwf	(??_main+2)^(0+128),w
  5946  04A5                     u4525:	
  5947  04A5  1803               	skipnc
  5948  04A6  2CEF               	goto	l4491
  5949  04A7                     l4487:	
  5950                           
  5951                           ;main.c: 298: knob4_prev = knob_4_pos;
  5952  04A7  0022               	movlb	2	; select bank2
  5953  04A8  0857               	movf	(_knob_4_pos+1)^(0+256),w
  5954  04A9  0021               	movlb	1	; select bank1
  5955  04AA  00B1               	movwf	(_knob4_prev+1)^(0+128)	;volatile
  5956  04AB  0022               	movlb	2	; select bank2
  5957  04AC  0856               	movf	_knob_4_pos^(0+256),w
  5958  04AD  0021               	movlb	1	; select bank1
  5959  04AE  00B0               	movwf	_knob4_prev^(0+128)	;volatile
  5960                           
  5961                           ;main.c: 299: mod_delay_time = map(knob4_prev, 0, 1023, 60, 1000);
  5962  04AF  3000               	movlw	0
  5963  04B0  0020               	movlb	0	; select bank0
  5964  04B1  00E1               	movwf	map@out_max
  5965  04B2  307A               	movlw	122
  5966  04B3  00E2               	movwf	map@out_max+1
  5967  04B4  3044               	movlw	68
  5968  04B5  00E3               	movwf	map@out_max+2
  5969  04B6  3000               	movlw	0
  5970  04B7  00DE               	movwf	map@out_min
  5971  04B8  3070               	movlw	112
  5972  04B9  00DF               	movwf	map@out_min+1
  5973  04BA  3042               	movlw	66
  5974  04BB  00E0               	movwf	map@out_min+2
  5975  04BC  30C0               	movlw	192
  5976  04BD  00DB               	movwf	map@in_max
  5977  04BE  307F               	movlw	127
  5978  04BF  00DC               	movwf	map@in_max+1
  5979  04C0  3044               	movlw	68
  5980  04C1  00DD               	movwf	map@in_max+2
  5981  04C2  3000               	movlw	0
  5982  04C3  00D8               	movwf	map@in_min
  5983  04C4  3000               	movlw	0
  5984  04C5  00D9               	movwf	map@in_min+1
  5985  04C6  3000               	movlw	0
  5986  04C7  00DA               	movwf	map@in_min+2
  5987  04C8  0021               	movlb	1	; select bank1
  5988  04C9  0831               	movf	(_knob4_prev+1)^(0+128),w	;volatile
  5989  04CA  0020               	movlb	0	; select bank0
  5990  04CB  00A9               	movwf	___awtoft@c+1
  5991  04CC  0021               	movlb	1	; select bank1
  5992  04CD  0830               	movf	_knob4_prev^(0+128),w	;volatile
  5993  04CE  0020               	movlb	0	; select bank0
  5994  04CF  00A8               	movwf	___awtoft@c
  5995  04D0  319F  278D  3182   	fcall	___awtoft
  5996  04D3  0020               	movlb	0	; select bank0
  5997  04D4  0828               	movf	?___awtoft,w
  5998  04D5  00D5               	movwf	map@x
  5999  04D6  0829               	movf	?___awtoft+1,w
  6000  04D7  00D6               	movwf	map@x+1
  6001  04D8  082A               	movf	?___awtoft+2,w
  6002  04D9  00D7               	movwf	map@x+2
  6003  04DA  3196  26D6  3182   	fcall	_map
  6004  04DD  0020               	movlb	0	; select bank0
  6005  04DE  0855               	movf	?_map,w
  6006  04DF  00E7               	movwf	___fttol@f1
  6007  04E0  0856               	movf	?_map+1,w
  6008  04E1  00E8               	movwf	___fttol@f1+1
  6009  04E2  0857               	movf	?_map+2,w
  6010  04E3  00E9               	movwf	___fttol@f1+2
  6011  04E4  3197  2761  3182   	fcall	___fttol
  6012  04E7  0020               	movlb	0	; select bank0
  6013  04E8  0868               	movf	?___fttol+1,w
  6014  04E9  0022               	movlb	2	; select bank2
  6015  04EA  00EA               	movwf	(_mod_delay_time+1)^(0+256)
  6016  04EB  0020               	movlb	0	; select bank0
  6017  04EC  0867               	movf	?___fttol,w
  6018  04ED  0022               	movlb	2	; select bank2
  6019  04EE  00E9               	movwf	_mod_delay_time^(0+256)
  6020  04EF                     l4491:	
  6021                           
  6022                           ;main.c: 300: }
  6023                           ;main.c: 308: if (knob_5_pos - knob5_prev >= 4 || knob_5_pos - knob5_prev <= -4) {
  6024  04EF  0021               	movlb	1	; select bank1
  6025  04F0  0932               	comf	_knob5_prev^(0+128),w	;volatile
  6026  04F1  00C9               	movwf	??_main^(0+128)
  6027  04F2  0933               	comf	(_knob5_prev+1)^(0+128),w	;volatile
  6028  04F3  00CA               	movwf	(??_main^(0+128)+1)
  6029  04F4  0AC9               	incf	??_main^(0+128),f
  6030  04F5  1903               	skipnz
  6031  04F6  0ACA               	incf	(??_main^(0+128)+1),f
  6032  04F7  0022               	movlb	2	; select bank2
  6033  04F8  0858               	movf	_knob_5_pos^(0+256),w
  6034  04F9  0021               	movlb	1	; select bank1
  6035  04FA  0749               	addwf	??_main^(0+128),w
  6036  04FB  00CB               	movwf	(??_main+2)^(0+128)
  6037  04FC  0022               	movlb	2	; select bank2
  6038  04FD  0859               	movf	(_knob_5_pos+1)^(0+256),w
  6039  04FE  0021               	movlb	1	; select bank1
  6040  04FF  3D4A               	addwfc	(??_main+1)^(0+128),w
  6041  0500  00CC               	movwf	(??_main+3)^(0+128)
  6042  0501  084C               	movf	(??_main+3)^(0+128),w
  6043  0502  3A80               	xorlw	128
  6044  0503  00CD               	movwf	(??_main+4)^(0+128)
  6045  0504  3080               	movlw	128
  6046  0505  024D               	subwf	(??_main+4)^(0+128),w
  6047  0506  1D03               	skipz
  6048  0507  2D0A               	goto	u4535
  6049  0508  3004               	movlw	4
  6050  0509  024B               	subwf	(??_main+2)^(0+128),w
  6051  050A                     u4535:	
  6052  050A  1803               	skipnc
  6053  050B  2D29               	goto	l4495
  6054  050C  0021               	movlb	1	; select bank1
  6055  050D  0932               	comf	_knob5_prev^(0+128),w	;volatile
  6056  050E  00C9               	movwf	??_main^(0+128)
  6057  050F  0933               	comf	(_knob5_prev+1)^(0+128),w	;volatile
  6058  0510  00CA               	movwf	(??_main^(0+128)+1)
  6059  0511  0AC9               	incf	??_main^(0+128),f
  6060  0512  1903               	skipnz
  6061  0513  0ACA               	incf	(??_main^(0+128)+1),f
  6062  0514  0022               	movlb	2	; select bank2
  6063  0515  0858               	movf	_knob_5_pos^(0+256),w
  6064  0516  0021               	movlb	1	; select bank1
  6065  0517  0749               	addwf	??_main^(0+128),w
  6066  0518  00CB               	movwf	(??_main+2)^(0+128)
  6067  0519  0022               	movlb	2	; select bank2
  6068  051A  0859               	movf	(_knob_5_pos+1)^(0+256),w
  6069  051B  0021               	movlb	1	; select bank1
  6070  051C  3D4A               	addwfc	(??_main+1)^(0+128),w
  6071  051D  00CC               	movwf	(??_main+3)^(0+128)
  6072  051E  084C               	movf	(??_main+3)^(0+128),w
  6073  051F  3A80               	xorlw	128
  6074  0520  00CD               	movwf	(??_main+4)^(0+128)
  6075  0521  307F               	movlw	127
  6076  0522  024D               	subwf	(??_main+4)^(0+128),w
  6077  0523  1D03               	skipz
  6078  0524  2D27               	goto	u4545
  6079  0525  30FD               	movlw	253
  6080  0526  024B               	subwf	(??_main+2)^(0+128),w
  6081  0527                     u4545:	
  6082  0527  1803               	skipnc
  6083  0528  2D31               	goto	l293
  6084  0529                     l4495:	
  6085                           
  6086                           ;main.c: 309: knob5_prev = knob_5_pos;
  6087  0529  0022               	movlb	2	; select bank2
  6088  052A  0859               	movf	(_knob_5_pos+1)^(0+256),w
  6089  052B  0021               	movlb	1	; select bank1
  6090  052C  00B3               	movwf	(_knob5_prev+1)^(0+128)	;volatile
  6091  052D  0022               	movlb	2	; select bank2
  6092  052E  0858               	movf	_knob_5_pos^(0+256),w
  6093  052F  0021               	movlb	1	; select bank1
  6094  0530  00B2               	movwf	_knob5_prev^(0+128)	;volatile
  6095  0531                     l293:	
  6096                           
  6097                           ;main.c: 310: }
  6098                           ;main.c: 323: if (mod_timer >= mod_delay_time) {
  6099  0531  0022               	movlb	2	; select bank2
  6100  0532  0869               	movf	_mod_delay_time^(0+256),w
  6101  0533  0021               	movlb	1	; select bank1
  6102  0534  00C9               	movwf	??_main^(0+128)
  6103  0535  0022               	movlb	2	; select bank2
  6104  0536  086A               	movf	(_mod_delay_time+1)^(0+256),w
  6105  0537  0021               	movlb	1	; select bank1
  6106  0538  00CA               	movwf	(??_main^(0+128)+1)
  6107  0539  3000               	movlw	0
  6108  053A  1BCA               	btfsc	(??_main^(0+128)+1),7
  6109  053B  30FF               	movlw	255
  6110  053C  00CB               	movwf	(??_main^(0+128)+2)
  6111  053D  00CC               	movwf	(??_main^(0+128)+3)
  6112  053E  0022               	movlb	2	; select bank2
  6113  053F  083B               	movf	(_mod_timer+3)^(0+256),w	;volatile
  6114  0540  3A80               	xorlw	128
  6115  0541  0021               	movlb	1	; select bank1
  6116  0542  00CD               	movwf	(??_main+4)^(0+128)
  6117  0543  084C               	movf	(??_main+3)^(0+128),w
  6118  0544  3A80               	xorlw	128
  6119  0545  024D               	subwf	(??_main+4)^(0+128),w
  6120  0546  0022               	movlb	2	; select bank2
  6121  0547  1D03               	skipz
  6122  0548  2D59               	goto	u4553
  6123  0549  0021               	movlb	1	; select bank1
  6124  054A  084B               	movf	(??_main+2)^(0+128),w
  6125  054B  0022               	movlb	2	; select bank2
  6126  054C  023A               	subwf	(_mod_timer+2)^(0+256),w	;volatile
  6127  054D  1D03               	skipz
  6128  054E  2D59               	goto	u4553
  6129  054F  0021               	movlb	1	; select bank1
  6130  0550  084A               	movf	(??_main+1)^(0+128),w
  6131  0551  0022               	movlb	2	; select bank2
  6132  0552  0239               	subwf	(_mod_timer+1)^(0+256),w	;volatile
  6133  0553  1D03               	skipz
  6134  0554  2D59               	goto	u4553
  6135  0555  0021               	movlb	1	; select bank1
  6136  0556  0849               	movf	??_main^(0+128),w
  6137  0557  0022               	movlb	2	; select bank2
  6138  0558  0238               	subwf	_mod_timer^(0+256),w	;volatile
  6139  0559                     u4553:	
  6140  0559  1C03               	skipc
  6141  055A  2E7E               	goto	l4549
  6142                           
  6143                           ;main.c: 325: mod_counter = mod_counter + 1;
  6144  055B  0021               	movlb	1	; select bank1
  6145  055C  0866               	movf	_mod_counter^(0+128),w
  6146  055D  3E01               	addlw	1
  6147  055E  00E6               	movwf	_mod_counter^(0+128)
  6148  055F  3000               	movlw	0
  6149  0560  3D67               	addwfc	(_mod_counter+1)^(0+128),w
  6150  0561  00E7               	movwf	(_mod_counter+1)^(0+128)
  6151                           
  6152                           ;main.c: 326: mod_timer = 0;
  6153  0562  3000               	movlw	0
  6154  0563  0022               	movlb	2	; select bank2
  6155  0564  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
  6156  0565  3000               	movlw	0
  6157  0566  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
  6158  0567  3000               	movlw	0
  6159  0568  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
  6160  0569  3000               	movlw	0
  6161  056A  00B8               	movwf	_mod_timer^(0+256)	;volatile
  6162                           
  6163                           ;main.c: 328: if (bottom_push_state == 1 || bottom_push_state == 5) {
  6164  056B  0021               	movlb	1	; select bank1
  6165  056C  0328               	decf	_bottom_push_state^(0+128),w
  6166  056D  0429               	iorwf	(_bottom_push_state+1)^(0+128),w
  6167  056E  1903               	btfsc	3,2
  6168  056F  2D75               	goto	l4505
  6169  0570  3005               	movlw	5
  6170  0571  0628               	xorwf	_bottom_push_state^(0+128),w
  6171  0572  0429               	iorwf	(_bottom_push_state+1)^(0+128),w
  6172  0573  1D03               	btfss	3,2
  6173  0574  2D7E               	goto	l4509
  6174  0575                     l4505:	
  6175                           
  6176                           ;main.c: 329: if (mod_counter >= 61) {
  6177  0575  0867               	movf	(_mod_counter+1)^(0+128),w
  6178  0576  3A80               	xorlw	128
  6179  0577  00C9               	movwf	??_main^(0+128)
  6180  0578  3080               	movlw	128
  6181  0579  0249               	subwf	??_main^(0+128),w
  6182  057A  1D03               	skipz
  6183  057B  2D87               	goto	u4595
  6184  057C  303D               	movlw	61
  6185  057D  2D86               	goto	L1
  6186  057E                     l4509:	
  6187                           ;main.c: 331: }
  6188                           ;main.c: 332: } else {
  6189                           
  6190                           ;main.c: 330: mod_counter = 0;
  6191                           
  6192                           
  6193                           ;main.c: 333: if (mod_counter > 31) {
  6194  057E  0867               	movf	(_mod_counter+1)^(0+128),w
  6195  057F  3A80               	xorlw	128
  6196  0580  00C9               	movwf	??_main^(0+128)
  6197  0581  3080               	movlw	128
  6198  0582  0249               	subwf	??_main^(0+128),w
  6199  0583  1D03               	skipz
  6200  0584  2D87               	goto	u4595
  6201  0585  3020               	movlw	32
  6202  0586                     L1:	
  6203  0586  0266               	subwf	_mod_counter^(0+128),w
  6204  0587                     u4595:	
  6205  0587  1C03               	skipc
  6206  0588  2D8C               	goto	l4513
  6207                           
  6208                           ;main.c: 334: mod_counter = 0;
  6209  0589  0021               	movlb	1	; select bank1
  6210  058A  01E6               	clrf	_mod_counter^(0+128)
  6211  058B  01E7               	clrf	(_mod_counter+1)^(0+128)
  6212  058C                     l4513:	
  6213                           
  6214                           ;main.c: 335: }
  6215                           ;main.c: 336: }
  6216                           ;main.c: 339: signed int adjusted_pot_value = map(knob5_prev, 0, 1023, 1275, 0);
  6217  058C  3000               	movlw	0
  6218  058D  0020               	movlb	0	; select bank0
  6219  058E  00E1               	movwf	map@out_max
  6220  058F  3000               	movlw	0
  6221  0590  00E2               	movwf	map@out_max+1
  6222  0591  3000               	movlw	0
  6223  0592  00E3               	movwf	map@out_max+2
  6224  0593  3060               	movlw	96
  6225  0594  00DE               	movwf	map@out_min
  6226  0595  309F               	movlw	159
  6227  0596  00DF               	movwf	map@out_min+1
  6228  0597  3044               	movlw	68
  6229  0598  00E0               	movwf	map@out_min+2
  6230  0599  30C0               	movlw	192
  6231  059A  00DB               	movwf	map@in_max
  6232  059B  307F               	movlw	127
  6233  059C  00DC               	movwf	map@in_max+1
  6234  059D  3044               	movlw	68
  6235  059E  00DD               	movwf	map@in_max+2
  6236  059F  3000               	movlw	0
  6237  05A0  00D8               	movwf	map@in_min
  6238  05A1  3000               	movlw	0
  6239  05A2  00D9               	movwf	map@in_min+1
  6240  05A3  3000               	movlw	0
  6241  05A4  00DA               	movwf	map@in_min+2
  6242  05A5  0021               	movlb	1	; select bank1
  6243  05A6  0833               	movf	(_knob5_prev+1)^(0+128),w	;volatile
  6244  05A7  0020               	movlb	0	; select bank0
  6245  05A8  00A9               	movwf	___awtoft@c+1
  6246  05A9  0021               	movlb	1	; select bank1
  6247  05AA  0832               	movf	_knob5_prev^(0+128),w	;volatile
  6248  05AB  0020               	movlb	0	; select bank0
  6249  05AC  00A8               	movwf	___awtoft@c
  6250  05AD  319F  278D  3182   	fcall	___awtoft
  6251  05B0  0020               	movlb	0	; select bank0
  6252  05B1  0828               	movf	?___awtoft,w
  6253  05B2  00D5               	movwf	map@x
  6254  05B3  0829               	movf	?___awtoft+1,w
  6255  05B4  00D6               	movwf	map@x+1
  6256  05B5  082A               	movf	?___awtoft+2,w
  6257  05B6  00D7               	movwf	map@x+2
  6258  05B7  3196  26D6  3182   	fcall	_map
  6259  05BA  0020               	movlb	0	; select bank0
  6260  05BB  0855               	movf	?_map,w
  6261  05BC  00E7               	movwf	___fttol@f1
  6262  05BD  0856               	movf	?_map+1,w
  6263  05BE  00E8               	movwf	___fttol@f1+1
  6264  05BF  0857               	movf	?_map+2,w
  6265  05C0  00E9               	movwf	___fttol@f1+2
  6266  05C1  3197  2761  3182   	fcall	___fttol
  6267  05C4  0020               	movlb	0	; select bank0
  6268  05C5  0868               	movf	?___fttol+1,w
  6269  05C6  0021               	movlb	1	; select bank1
  6270  05C7  00D9               	movwf	(main@adjusted_pot_value+1)^(0+128)
  6271  05C8  0020               	movlb	0	; select bank0
  6272  05C9  0867               	movf	?___fttol,w
  6273  05CA  0021               	movlb	1	; select bank1
  6274  05CB  00D8               	movwf	main@adjusted_pot_value^(0+128)
  6275                           
  6276                           ;main.c: 340: switch (bottom_push_state) {
  6277  05CC  2E28               	goto	l4543
  6278  05CD                     l4515:	
  6279                           ;main.c: 341: case 1:
  6280                           
  6281                           
  6282                           ;main.c: 342: mod_value = mod5[mod_counter];
  6283  05CD  0867               	movf	(_mod_counter+1)^(0+128),w
  6284  05CE  00CA               	movwf	(??_main^(0+128)+1)
  6285  05CF  0866               	movf	_mod_counter^(0+128),w
  6286  05D0  00C9               	movwf	??_main^(0+128)
  6287  05D1  35C9               	lslf	??_main^(0+128),f
  6288  05D2  0DCA               	rlf	(??_main^(0+128)+1),f
  6289  05D3  3078               	movlw	120
  6290  05D4  00CB               	movwf	(??_main+2)^(0+128)
  6291  05D5  3023               	movlw	35
  6292  05D6  00CC               	movwf	((??_main+2)^(0+128)+1)
  6293  05D7  0849               	movf	??_main^(0+128),w
  6294  05D8  074B               	addwf	(??_main+2)^(0+128),w
  6295  05D9  0086               	movwf	6
  6296  05DA  084A               	movf	(??_main+1)^(0+128),w
  6297  05DB  3D4C               	addwfc	(??_main+3)^(0+128),w
  6298  05DC  0087               	movwf	7
  6299  05DD  3F40               	moviw [0]fsr1
  6300  05DE  0022               	movlb	2	; select bank2
  6301  05DF  00DC               	movwf	_mod_value^(0+256)
  6302  05E0  3F41               	moviw [1]fsr1
  6303  05E1  2E02               	goto	L4
  6304  05E2                     l4519:	
  6305                           ;main.c: 345: case 2:
  6306                           
  6307                           ;main.c: 344: break;
  6308                           
  6309                           ;main.c: 343: PORTCbits.RC4 = 0;
  6310                           
  6311                           
  6312                           ;main.c: 346: mod_value = mod2[mod_counter];
  6313  05E2  0021               	movlb	1	; select bank1
  6314  05E3  3566               	lslf	_mod_counter^(0+128),w
  6315  05E4  3E20               	addlw	(low (_mod2| (0+512)))& (0+255)
  6316  05E5  0086               	movwf	6
  6317  05E6  3002               	movlw	2	; select bank4/5
  6318  05E7  0087               	movwf	7
  6319  05E8  3F40               	moviw [0]fsr1
  6320  05E9  0022               	movlb	2	; select bank2
  6321  05EA  00DC               	movwf	_mod_value^(0+256)
  6322  05EB  3F41               	moviw [1]fsr1
  6323  05EC  2E02               	goto	L4
  6324  05ED                     l4523:	
  6325                           ;main.c: 349: case 3:
  6326                           
  6327                           ;main.c: 348: break;
  6328                           
  6329                           ;main.c: 347: PORTCbits.RC4 = 0;
  6330                           
  6331                           
  6332                           ;main.c: 350: mod_value = mod3[mod_counter];
  6333  05ED  0021               	movlb	1	; select bank1
  6334  05EE  3566               	lslf	_mod_counter^(0+128),w
  6335  05EF  3EA0               	addlw	(low (_mod3| (0+512)))& (0+255)
  6336  05F0  0086               	movwf	6
  6337  05F1  3002               	movlw	2	; select bank5/6
  6338  05F2  0087               	movwf	7
  6339  05F3  3F40               	moviw [0]fsr1
  6340  05F4  0022               	movlb	2	; select bank2
  6341  05F5  00DC               	movwf	_mod_value^(0+256)
  6342  05F6  3F41               	moviw [1]fsr1
  6343  05F7  2E02               	goto	L4
  6344  05F8                     l4527:	
  6345                           ;main.c: 353: case 4:
  6346                           
  6347                           ;main.c: 352: break;
  6348                           
  6349                           ;main.c: 351: PORTCbits.RC4 = 0;
  6350                           
  6351                           
  6352                           ;main.c: 354: mod_value = mod4[mod_counter];
  6353  05F8  0021               	movlb	1	; select bank1
  6354  05F9  3566               	lslf	_mod_counter^(0+128),w
  6355  05FA  3E20               	addlw	(low (_mod4| (0+768)))& (0+255)
  6356  05FB  0086               	movwf	6
  6357  05FC  3003               	movlw	3	; select bank6/7
  6358  05FD  0087               	movwf	7
  6359  05FE  3F40               	moviw [0]fsr1
  6360  05FF  0022               	movlb	2	; select bank2
  6361  0600  00DC               	movwf	_mod_value^(0+256)
  6362  0601  3F41               	moviw [1]fsr1
  6363  0602                     L4:	
  6364  0602  00DD               	movwf	(_mod_value+1)^(0+256)
  6365  0603  2E25               	goto	l4539
  6366  0604                     l4531:	
  6367                           ;main.c: 357: case 5:
  6368                           
  6369                           ;main.c: 356: break;
  6370                           
  6371                           ;main.c: 355: PORTCbits.RC4 = 0;
  6372                           
  6373                           
  6374                           ;main.c: 358: mod_value = mod5[mod_counter];
  6375  0604  0021               	movlb	1	; select bank1
  6376  0605  0867               	movf	(_mod_counter+1)^(0+128),w
  6377  0606  00CA               	movwf	(??_main^(0+128)+1)
  6378  0607  0866               	movf	_mod_counter^(0+128),w
  6379  0608  00C9               	movwf	??_main^(0+128)
  6380  0609  35C9               	lslf	??_main^(0+128),f
  6381  060A  0DCA               	rlf	(??_main^(0+128)+1),f
  6382  060B  3078               	movlw	120
  6383  060C  00CB               	movwf	(??_main+2)^(0+128)
  6384  060D  3023               	movlw	35
  6385  060E  00CC               	movwf	((??_main+2)^(0+128)+1)
  6386  060F  0849               	movf	??_main^(0+128),w
  6387  0610  074B               	addwf	(??_main+2)^(0+128),w
  6388  0611  0086               	movwf	6
  6389  0612  084A               	movf	(??_main+1)^(0+128),w
  6390  0613  3D4C               	addwfc	(??_main+3)^(0+128),w
  6391  0614  0087               	movwf	7
  6392  0615  3F40               	moviw [0]fsr1
  6393  0616  0022               	movlb	2	; select bank2
  6394  0617  00DC               	movwf	_mod_value^(0+256)
  6395  0618  3F41               	moviw [1]fsr1
  6396  0619  00DD               	movwf	(_mod_value+1)^(0+256)
  6397                           
  6398                           ;main.c: 359: adjusted_pot_value = 1275;
  6399  061A  30FB               	movlw	251
  6400  061B  0021               	movlb	1	; select bank1
  6401  061C  00D8               	movwf	main@adjusted_pot_value^(0+128)
  6402  061D  3004               	movlw	4
  6403  061E  00D9               	movwf	(main@adjusted_pot_value^(0+128)+1)
  6404                           
  6405                           ;main.c: 360: PORTCbits.RC4 = 1;
  6406  061F  0020               	movlb	0	; select bank0
  6407  0620  160E               	bsf	14,4	;volatile
  6408                           
  6409                           ;main.c: 361: break;
  6410  0621  2E42               	goto	l4545
  6411  0622                     l4537:	
  6412                           ;main.c: 362: case 6:
  6413                           
  6414                           
  6415                           ;main.c: 363: mod_value = 0;
  6416  0622  0022               	movlb	2	; select bank2
  6417  0623  01DC               	clrf	_mod_value^(0+256)
  6418  0624  01DD               	clrf	(_mod_value+1)^(0+256)
  6419  0625                     l4539:	
  6420                           
  6421                           ;main.c: 364: PORTCbits.RC4 = 0;
  6422  0625  0020               	movlb	0	; select bank0
  6423  0626  120E               	bcf	14,4	;volatile
  6424                           
  6425                           ;main.c: 366: }
  6426                           
  6427                           ;main.c: 365: break;
  6428  0627  2E42               	goto	l4545
  6429  0628                     l4543:	
  6430                           
  6431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6432                           ; Switch size 1, requested type "space"
  6433                           ; Number of cases is 1, Range of values is 0 to 0
  6434                           ; switch strategies available:
  6435                           ; Name         Instructions Cycles
  6436                           ; simple_byte            4     3 (average)
  6437                           ; direct_byte            8     6 (fixed)
  6438                           ; jumptable            260     6 (fixed)
  6439                           ;	Chosen strategy is simple_byte
  6440  0628  0021               	movlb	1	; select bank1
  6441  0629  0829               	movf	(_bottom_push_state+1)^(0+128),w
  6442  062A  3A00               	xorlw	0	; case 0
  6443  062B  1903               	skipnz
  6444  062C  2E2E               	goto	l4931
  6445  062D  2E42               	goto	l4545
  6446  062E                     l4931:	
  6447                           
  6448                           ; Switch size 1, requested type "space"
  6449                           ; Number of cases is 6, Range of values is 1 to 6
  6450                           ; switch strategies available:
  6451                           ; Name         Instructions Cycles
  6452                           ; simple_byte           19    10 (average)
  6453                           ; direct_byte           21     9 (fixed)
  6454                           ; jumptable            263     9 (fixed)
  6455                           ;	Chosen strategy is simple_byte
  6456  062E  0828               	movf	_bottom_push_state^(0+128),w
  6457  062F  3A01               	xorlw	1	; case 1
  6458  0630  1903               	skipnz
  6459  0631  2DCD               	goto	l4515
  6460  0632  3A03               	xorlw	3	; case 2
  6461  0633  1903               	skipnz
  6462  0634  2DE2               	goto	l4519
  6463  0635  3A01               	xorlw	1	; case 3
  6464  0636  1903               	skipnz
  6465  0637  2DED               	goto	l4523
  6466  0638  3A07               	xorlw	7	; case 4
  6467  0639  1903               	skipnz
  6468  063A  2DF8               	goto	l4527
  6469  063B  3A01               	xorlw	1	; case 5
  6470  063C  1903               	skipnz
  6471  063D  2E04               	goto	l4531
  6472  063E  3A03               	xorlw	3	; case 6
  6473  063F  1903               	skipnz
  6474  0640  2E22               	goto	l4537
  6475  0641  2E42               	goto	l4545
  6476  0642                     l4545:	
  6477                           
  6478                           ;main.c: 367: mod_value = modulation(mod_value, adjusted_pot_value);
  6479  0642  0022               	movlb	2	; select bank2
  6480  0643  085D               	movf	(_mod_value+1)^(0+256),w
  6481  0644  0020               	movlb	0	; select bank0
  6482  0645  00B6               	movwf	modulation@x+1
  6483  0646  0022               	movlb	2	; select bank2
  6484  0647  085C               	movf	_mod_value^(0+256),w
  6485  0648  0020               	movlb	0	; select bank0
  6486  0649  00B5               	movwf	modulation@x
  6487  064A  0021               	movlb	1	; select bank1
  6488  064B  0859               	movf	(main@adjusted_pot_value+1)^(0+128),w
  6489  064C  0020               	movlb	0	; select bank0
  6490  064D  00B8               	movwf	modulation@y+1
  6491  064E  0021               	movlb	1	; select bank1
  6492  064F  0858               	movf	main@adjusted_pot_value^(0+128),w
  6493  0650  0020               	movlb	0	; select bank0
  6494  0651  00B7               	movwf	modulation@y
  6495  0652  3192  2254  3182   	fcall	_modulation
  6496  0655  0020               	movlb	0	; select bank0
  6497  0656  0836               	movf	?_modulation+1,w
  6498  0657  0022               	movlb	2	; select bank2
  6499  0658  00DD               	movwf	(_mod_value+1)^(0+256)
  6500  0659  0020               	movlb	0	; select bank0
  6501  065A  0835               	movf	?_modulation,w
  6502  065B  0022               	movlb	2	; select bank2
  6503  065C  00DC               	movwf	_mod_value^(0+256)
  6504                           
  6505                           ;main.c: 368: CCPR9 = mod_value / 2;
  6506  065D  3002               	movlw	2
  6507  065E  0020               	movlb	0	; select bank0
  6508  065F  00A0               	movwf	___awdiv@divisor
  6509  0660  3000               	movlw	0
  6510  0661  00A1               	movwf	___awdiv@divisor+1
  6511  0662  0022               	movlb	2	; select bank2
  6512  0663  085D               	movf	(_mod_value+1)^(0+256),w
  6513  0664  0020               	movlb	0	; select bank0
  6514  0665  00A3               	movwf	___awdiv@dividend+1
  6515  0666  0022               	movlb	2	; select bank2
  6516  0667  085C               	movf	_mod_value^(0+256),w
  6517  0668  0020               	movlb	0	; select bank0
  6518  0669  00A2               	movwf	___awdiv@dividend
  6519  066A  3194  24DA  3182   	fcall	___awdiv
  6520  066D  0020               	movlb	0	; select bank0
  6521  066E  0821               	movf	?___awdiv+1,w
  6522  066F  002C               	movlb	12	; select bank12
  6523  0670  009B               	movwf	27	;volatile
  6524  0671  0020               	movlb	0	; select bank0
  6525  0672  0820               	movf	?___awdiv,w
  6526  0673  002C               	movlb	12	; select bank12
  6527  0674  009A               	movwf	26	;volatile
  6528                           
  6529                           ;main.c: 369: mod_timer = 0;
  6530  0675  3000               	movlw	0
  6531  0676  0022               	movlb	2	; select bank2
  6532  0677  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
  6533  0678  3000               	movlw	0
  6534  0679  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
  6535  067A  3000               	movlw	0
  6536  067B  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
  6537  067C  3000               	movlw	0
  6538  067D  00B8               	movwf	_mod_timer^(0+256)	;volatile
  6539  067E                     l4549:	
  6540                           
  6541                           ;main.c: 370: }
  6542                           ;main.c: 375: if (delay_time_changed == 1) {
  6543  067E  0367               	decf	_delay_time_changed^(0+256),w
  6544  067F  0468               	iorwf	(_delay_time_changed+1)^(0+256),w
  6545  0680  1D03               	btfss	3,2
  6546  0681  2A41               	goto	l4419
  6547                           
  6548                           ;main.c: 376: delay_time = baseline_delay_time;
  6549  0682  0021               	movlb	1	; select bank1
  6550  0683  0823               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
  6551  0684  00A7               	movwf	(_delay_time+3)^(0+128)	;volatile
  6552  0685  0822               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
  6553  0686  00A6               	movwf	(_delay_time+2)^(0+128)	;volatile
  6554  0687  0821               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6555  0688  00A5               	movwf	(_delay_time+1)^(0+128)	;volatile
  6556  0689  0820               	movf	_baseline_delay_time^(0+128),w	;volatile
  6557  068A  00A4               	movwf	_delay_time^(0+128)	;volatile
  6558                           
  6559                           ;main.c: 377: delay_time = set_subdivision(baseline_delay_time, top_push_state);
  6560  068B  0821               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6561  068C  00C6               	movwf	(set_subdivision@x+1)^(0+128)
  6562  068D  0820               	movf	_baseline_delay_time^(0+128),w	;volatile
  6563  068E  00C5               	movwf	set_subdivision@x^(0+128)
  6564  068F  0839               	movf	(_top_push_state+1)^(0+128),w
  6565  0690  00C8               	movwf	(set_subdivision@y+1)^(0+128)
  6566  0691  0838               	movf	_top_push_state^(0+128),w
  6567  0692  00C7               	movwf	set_subdivision@y^(0+128)
  6568  0693  318A  22C0  3182   	fcall	_set_subdivision
  6569  0696  0021               	movlb	1	; select bank1
  6570  0697  0845               	movf	?_set_subdivision^(0+128),w
  6571  0698  00A4               	movwf	_delay_time^(0+128)	;volatile
  6572  0699  0846               	movf	(?_set_subdivision+1)^(0+128),w
  6573  069A  00A5               	movwf	(_delay_time+1)^(0+128)	;volatile
  6574  069B  0D89               	rlf	9,f
  6575  069C  3B89               	subwfb	9,f
  6576  069D  0989               	comf	9,f
  6577  069E  00A6               	movwf	(_delay_time+2)^(0+128)	;volatile
  6578  069F  00A7               	movwf	(_delay_time+3)^(0+128)	;volatile
  6579                           
  6580                           ;main.c: 378: delayfound = 0;
  6581  06A0  0022               	movlb	2	; select bank2
  6582  06A1  01CC               	clrf	_delayfound^(0+256)
  6583  06A2  01CD               	clrf	(_delayfound+1)^(0+256)
  6584                           
  6585                           ;main.c: 379: delay_counter = 0;
  6586  06A3  01CA               	clrf	_delay_counter^(0+256)
  6587  06A4  01CB               	clrf	(_delay_counter+1)^(0+256)
  6588  06A5                     l4565:	
  6589                           ;main.c: 380: while (delayfound == 0) {
  6590                           
  6591  06A5  0022               	movlb	2	; select bank2
  6592  06A6  084C               	movf	_delayfound^(0+256),w
  6593  06A7  044D               	iorwf	(_delayfound+1)^(0+256),w
  6594  06A8  1D03               	btfss	3,2
  6595  06A9  2F00               	goto	l4567
  6596                           
  6597                           ;main.c: 381: if (delay[delay_counter] <= delay_time * 2) {
  6598  06AA  084B               	movf	(_delay_counter+1)^(0+256),w
  6599  06AB  0021               	movlb	1	; select bank1
  6600  06AC  00CA               	movwf	(??_main^(0+128)+1)
  6601  06AD  0022               	movlb	2	; select bank2
  6602  06AE  084A               	movf	_delay_counter^(0+256),w
  6603  06AF  0021               	movlb	1	; select bank1
  6604  06B0  00C9               	movwf	??_main^(0+128)
  6605  06B1  35C9               	lslf	??_main^(0+128),f
  6606  06B2  0DCA               	rlf	(??_main^(0+128)+1),f
  6607  06B3  30F2               	movlw	242
  6608  06B4  00CB               	movwf	(??_main+2)^(0+128)
  6609  06B5  3023               	movlw	35
  6610  06B6  00CC               	movwf	((??_main+2)^(0+128)+1)
  6611  06B7  0849               	movf	??_main^(0+128),w
  6612  06B8  074B               	addwf	(??_main+2)^(0+128),w
  6613  06B9  0086               	movwf	6
  6614  06BA  084A               	movf	(??_main+1)^(0+128),w
  6615  06BB  3D4C               	addwfc	(??_main+3)^(0+128),w
  6616  06BC  0087               	movwf	7
  6617  06BD  3F40               	moviw [0]fsr1
  6618  06BE  00CD               	movwf	(??_main+4)^(0+128)
  6619  06BF  3F41               	moviw [1]fsr1
  6620  06C0  00CE               	movwf	((??_main+4)^(0+128)+1)
  6621  06C1  084D               	movf	(??_main+4)^(0+128),w
  6622  06C2  00CF               	movwf	(??_main+6)^(0+128)
  6623  06C3  084E               	movf	(??_main+5)^(0+128),w
  6624  06C4  00D0               	movwf	((??_main+6)^(0+128)+1)
  6625  06C5  3000               	movlw	0
  6626  06C6  1BD0               	btfsc	((??_main+6)^(0+128)+1),7
  6627  06C7  30FF               	movlw	255
  6628  06C8  00D1               	movwf	((??_main+6)^(0+128)+2)
  6629  06C9  00D2               	movwf	((??_main+6)^(0+128)+3)
  6630  06CA  0824               	movf	_delay_time^(0+128),w	;volatile
  6631  06CB  00D3               	movwf	(??_main+10)^(0+128)
  6632  06CC  0825               	movf	(_delay_time+1)^(0+128),w	;volatile
  6633  06CD  00D4               	movwf	((??_main+10)^(0+128)+1)
  6634  06CE  0826               	movf	(_delay_time+2)^(0+128),w	;volatile
  6635  06CF  00D5               	movwf	((??_main+10)^(0+128)+2)
  6636  06D0  0827               	movf	(_delay_time+3)^(0+128),w	;volatile
  6637  06D1  00D6               	movwf	((??_main+10)^(0+128)+3)
  6638  06D2  3001               	movlw	1
  6639  06D3                     u4615:	
  6640  06D3  35D3               	lslf	(??_main+10)^(0+128),f
  6641  06D4  0DD4               	rlf	((??_main+10)^(0+128)+1),f
  6642  06D5  0DD5               	rlf	((??_main+10)^(0+128)+2),f
  6643  06D6  0DD6               	rlf	((??_main+10)^(0+128)+3),f
  6644  06D7  0B89               	decfsz	9,f
  6645  06D8  2ED3               	goto	u4615
  6646  06D9  0856               	movf	(??_main+13)^(0+128),w
  6647  06DA  3A80               	xorlw	128
  6648  06DB  00D7               	movwf	(??_main+14)^(0+128)
  6649  06DC  0852               	movf	(??_main+9)^(0+128),w
  6650  06DD  3A80               	xorlw	128
  6651  06DE  0257               	subwf	(??_main+14)^(0+128),w
  6652  06DF  1D03               	skipz
  6653  06E0  2EEB               	goto	u4623
  6654  06E1  0851               	movf	(??_main+8)^(0+128),w
  6655  06E2  0255               	subwf	(??_main+12)^(0+128),w
  6656  06E3  1D03               	skipz
  6657  06E4  2EEB               	goto	u4623
  6658  06E5  0850               	movf	(??_main+7)^(0+128),w
  6659  06E6  0254               	subwf	(??_main+11)^(0+128),w
  6660  06E7  1D03               	skipz
  6661  06E8  2EEB               	goto	u4623
  6662  06E9  084F               	movf	(??_main+6)^(0+128),w
  6663  06EA  0253               	subwf	(??_main+10)^(0+128),w
  6664  06EB                     u4623:	
  6665  06EB  1C03               	skipc
  6666  06EC  2EFA               	goto	l4563
  6667                           
  6668                           ;main.c: 382: delayfound = 1;
  6669  06ED  3001               	movlw	1
  6670  06EE  0022               	movlb	2	; select bank2
  6671  06EF  00CC               	movwf	_delayfound^(0+256)
  6672  06F0  3000               	movlw	0
  6673  06F1  00CD               	movwf	(_delayfound^(0+256)+1)
  6674                           
  6675                           ;main.c: 383: CCPR1 = delay_counter;
  6676  06F2  084B               	movf	(_delay_counter+1)^(0+256),w
  6677  06F3  0025               	movlb	5	; select bank5
  6678  06F4  0092               	movwf	18	;volatile
  6679  06F5  0022               	movlb	2	; select bank2
  6680  06F6  084A               	movf	_delay_counter^(0+256),w
  6681  06F7  0025               	movlb	5	; select bank5
  6682  06F8  0091               	movwf	17	;volatile
  6683                           
  6684                           ;main.c: 384: } else {
  6685  06F9  2EA5               	goto	l4565
  6686  06FA                     l4563:	
  6687                           
  6688                           ;main.c: 385: delay_counter++;
  6689  06FA  3001               	movlw	1
  6690  06FB  0022               	movlb	2	; select bank2
  6691  06FC  07CA               	addwf	_delay_counter^(0+256),f
  6692  06FD  3000               	movlw	0
  6693  06FE  3DCB               	addwfc	(_delay_counter+1)^(0+256),f
  6694  06FF  2EA5               	goto	l4565
  6695  0700                     l4567:	
  6696                           
  6697                           ;main.c: 386: }
  6698                           ;main.c: 387: }
  6699                           ;main.c: 388: mod_delay_time = delay_time / 7.5;
  6700  0700  0021               	movlb	1	; select bank1
  6701  0701  0827               	movf	(_delay_time+3)^(0+128),w	;volatile
  6702  0702  0020               	movlb	0	; select bank0
  6703  0703  00AB               	movwf	___altoft@c+3
  6704  0704  0021               	movlb	1	; select bank1
  6705  0705  0826               	movf	(_delay_time+2)^(0+128),w	;volatile
  6706  0706  0020               	movlb	0	; select bank0
  6707  0707  00AA               	movwf	___altoft@c+2
  6708  0708  0021               	movlb	1	; select bank1
  6709  0709  0825               	movf	(_delay_time+1)^(0+128),w	;volatile
  6710  070A  0020               	movlb	0	; select bank0
  6711  070B  00A9               	movwf	___altoft@c+1
  6712  070C  0021               	movlb	1	; select bank1
  6713  070D  0824               	movf	_delay_time^(0+128),w	;volatile
  6714  070E  0020               	movlb	0	; select bank0
  6715  070F  00A8               	movwf	___altoft@c
  6716  0710  3188  2000  3182   	fcall	___altoft
  6717  0713  0020               	movlb	0	; select bank0
  6718  0714  0828               	movf	?___altoft,w
  6719  0715  00C8               	movwf	___ftdiv@f1
  6720  0716  0829               	movf	?___altoft+1,w
  6721  0717  00C9               	movwf	___ftdiv@f1+1
  6722  0718  082A               	movf	?___altoft+2,w
  6723  0719  00CA               	movwf	___ftdiv@f1+2
  6724  071A  3000               	movlw	0
  6725  071B  00C5               	movwf	___ftdiv@f2
  6726  071C  30F0               	movlw	240
  6727  071D  00C6               	movwf	___ftdiv@f2+1
  6728  071E  3040               	movlw	64
  6729  071F  00C7               	movwf	___ftdiv@f2+2
  6730  0720  3188  203D  3182   	fcall	___ftdiv
  6731  0723  0020               	movlb	0	; select bank0
  6732  0724  0845               	movf	?___ftdiv,w
  6733  0725  00E7               	movwf	___fttol@f1
  6734  0726  0846               	movf	?___ftdiv+1,w
  6735  0727  00E8               	movwf	___fttol@f1+1
  6736  0728  0847               	movf	?___ftdiv+2,w
  6737  0729  00E9               	movwf	___fttol@f1+2
  6738  072A  3197  2761  3182   	fcall	___fttol
  6739  072D  0020               	movlb	0	; select bank0
  6740  072E  0868               	movf	?___fttol+1,w
  6741  072F  0022               	movlb	2	; select bank2
  6742  0730  00EA               	movwf	(_mod_delay_time+1)^(0+256)
  6743  0731  0020               	movlb	0	; select bank0
  6744  0732  0867               	movf	?___fttol,w
  6745  0733  0022               	movlb	2	; select bank2
  6746  0734  00E9               	movwf	_mod_delay_time^(0+256)
  6747                           
  6748                           ;main.c: 390: delay_time_changed = 0;
  6749  0735  01E7               	clrf	_delay_time_changed^(0+256)
  6750  0736  01E8               	clrf	(_delay_time_changed+1)^(0+256)
  6751  0737  2A41               	goto	l4419
  6752  0738                     __end_of_main:	
  6753                           
  6754                           	psect	text1
  6755  1313                     __ptext1:	
  6756 ;; *************** function _update_mode *****************
  6757 ;; Defined at:
  6758 ;;		line 58 in file "tactiles.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;		None
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6774 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6775 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6776 ;;Total ram usage:        1 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    2
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_main
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           
  6787                           ;psect for function _update_mode
  6788  1313                     _update_mode:	
  6789                           
  6790                           ;tactiles.c: 63: if (PORTCbits.RC0 == 0) {
  6791                           
  6792                           ;incstack = 0
  6793                           ; Regs used in _update_mode: [wreg-fsr0h+status,2+status,0]
  6794  1313  0020               	movlb	0	; select bank0
  6795  1314  180E               	btfsc	14,0	;volatile
  6796  1315  2B54               	goto	l3989
  6797                           
  6798                           ;tactiles.c: 64: debounce_mode2++;
  6799  1316  3001               	movlw	1
  6800  1317  0022               	movlb	2	; select bank2
  6801  1318  07C8               	addwf	_debounce_mode2^(0+256),f
  6802  1319  3000               	movlw	0
  6803  131A  3DC9               	addwfc	(_debounce_mode2+1)^(0+256),f
  6804                           
  6805                           ;tactiles.c: 65: if (debounce_mode2 > 25) {
  6806  131B  0849               	movf	(_debounce_mode2+1)^(0+256),w
  6807  131C  3A80               	xorlw	128
  6808  131D  0020               	movlb	0	; select bank0
  6809  131E  00A0               	movwf	??_update_mode
  6810  131F  3080               	movlw	128
  6811  1320  0220               	subwf	??_update_mode,w
  6812  1321  1D03               	skipz
  6813  1322  2B26               	goto	u3625
  6814  1323  301A               	movlw	26
  6815  1324  0022               	movlb	2	; select bank2
  6816  1325  0248               	subwf	_debounce_mode2^(0+256),w
  6817  1326                     u3625:	
  6818  1326  1C03               	skipc
  6819  1327  0008               	return
  6820                           
  6821                           ;tactiles.c: 66: debounce_mode2 = 25;
  6822  1328  3019               	movlw	25
  6823  1329  0022               	movlb	2	; select bank2
  6824  132A  00C8               	movwf	_debounce_mode2^(0+256)
  6825  132B  3000               	movlw	0
  6826  132C  00C9               	movwf	(_debounce_mode2^(0+256)+1)
  6827                           
  6828                           ;tactiles.c: 67: mode2_state++;
  6829  132D  3001               	movlw	1
  6830  132E  0020               	movlb	0	; select bank0
  6831  132F  00A0               	movwf	??_update_mode
  6832  1330  0820               	movf	??_update_mode,w
  6833  1331  0021               	movlb	1	; select bank1
  6834  1332  07EB               	addwf	_mode2_state^(0+128),f
  6835                           
  6836                           ;tactiles.c: 68: if (mode2_state > 2) {
  6837  1333  3003               	movlw	3
  6838  1334  026B               	subwf	_mode2_state^(0+128),w
  6839  1335  1C03               	skipc
  6840  1336  2B44               	goto	l3987
  6841                           
  6842                           ;tactiles.c: 69: mode2_state = 0;
  6843  1337  01EB               	clrf	_mode2_state^(0+128)
  6844                           
  6845                           ;tactiles.c: 70: }
  6846                           ;tactiles.c: 71: switch(mode2_state) {
  6847  1338  2B44               	goto	l3987
  6848  1339                     l810:	
  6849                           ;tactiles.c: 72: case 0:
  6850                           
  6851                           
  6852                           ;tactiles.c: 73: LATBbits.LATB1 = 0;
  6853  1339  0022               	movlb	2	; select bank2
  6854  133A  108D               	bcf	13,1	;volatile
  6855  133B  2B42               	goto	L5
  6856  133C                     l812:	
  6857                           ;tactiles.c: 76: case 1:
  6858                           
  6859                           ;tactiles.c: 75: break;
  6860                           
  6861                           ;tactiles.c: 74: LATBbits.LATB0 = 0;
  6862                           
  6863                           
  6864                           ;tactiles.c: 77: LATBbits.LATB1 = 0;
  6865  133C  0022               	movlb	2	; select bank2
  6866  133D  108D               	bcf	13,1	;volatile
  6867                           
  6868                           ;tactiles.c: 78: LATBbits.LATB0 = 1;
  6869  133E  140D               	bsf	13,0	;volatile
  6870                           
  6871                           ;tactiles.c: 79: break;
  6872  133F  2B50               	goto	l814
  6873  1340                     l813:	
  6874                           ;tactiles.c: 80: case 2:
  6875                           
  6876                           
  6877                           ;tactiles.c: 81: LATBbits.LATB1 = 1;
  6878  1340  0022               	movlb	2	; select bank2
  6879  1341  148D               	bsf	13,1	;volatile
  6880  1342                     L5:	
  6881                           
  6882                           ;tactiles.c: 82: LATBbits.LATB0 = 0;
  6883  1342  100D               	bcf	13,0	;volatile
  6884                           
  6885                           ;tactiles.c: 84: }
  6886                           
  6887                           ;tactiles.c: 83: break;
  6888  1343  2B50               	goto	l814
  6889  1344                     l3987:	
  6890  1344  0021               	movlb	1	; select bank1
  6891  1345  086B               	movf	_mode2_state^(0+128),w
  6892                           
  6893                           ; Switch size 1, requested type "space"
  6894                           ; Number of cases is 3, Range of values is 0 to 2
  6895                           ; switch strategies available:
  6896                           ; Name         Instructions Cycles
  6897                           ; simple_byte           10     6 (average)
  6898                           ; direct_byte           12     6 (fixed)
  6899                           ; jumptable            260     6 (fixed)
  6900                           ;	Chosen strategy is simple_byte
  6901  1346  3A00               	xorlw	0	; case 0
  6902  1347  1903               	skipnz
  6903  1348  2B39               	goto	l810
  6904  1349  3A01               	xorlw	1	; case 1
  6905  134A  1903               	skipnz
  6906  134B  2B3C               	goto	l812
  6907  134C  3A03               	xorlw	3	; case 2
  6908  134D  1903               	skipnz
  6909  134E  2B40               	goto	l813
  6910  134F  2B50               	goto	l814
  6911  1350                     l814:	
  6912                           ;tactiles.c: 85: while (PORTCbits.RC0 == 0) {
  6913                           
  6914  1350  0020               	movlb	0	; select bank0
  6915  1351  180E               	btfsc	14,0	;volatile
  6916  1352  0008               	return
  6917  1353  2B50               	goto	l814
  6918  1354                     l3989:	
  6919                           ;tactiles.c: 86: }
  6920                           ;tactiles.c: 87: }
  6921                           ;tactiles.c: 88: } else {
  6922                           
  6923                           
  6924                           ;tactiles.c: 89: debounce_mode2 = 0;
  6925  1354  0022               	movlb	2	; select bank2
  6926  1355  01C8               	clrf	_debounce_mode2^(0+256)
  6927  1356  01C9               	clrf	(_debounce_mode2+1)^(0+256)
  6928  1357  0008               	return
  6929  1358                     __end_of_update_mode:	
  6930                           
  6931                           	psect	text2
  6932  0BB9                     __ptext2:	
  6933 ;; *************** function _updateSwitchTap *****************
  6934 ;; Defined at:
  6935 ;;		line 48 in file "SwitchTap.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;		None
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;  tapCntDiviso    2   28[BANK0 ] int 
  6940 ;;  iCnt            1   30[BANK0 ] unsigned char 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6951 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6952 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6953 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6954 ;;Total ram usage:        9 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    5
  6957 ;; This function calls:
  6958 ;;		___aldiv
  6959 ;;		_setDoublePressState
  6960 ;;		_setLongTapState
  6961 ;; This function is called by:
  6962 ;;		_main
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           
  6967                           ;psect for function _updateSwitchTap
  6968  0BB9                     _updateSwitchTap:	
  6969                           
  6970                           ;SwitchTap.c: 49: uint8_t iCnt = 0;
  6971                           
  6972                           ;incstack = 0
  6973                           ; Regs used in _updateSwitchTap: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6974  0BB9  0020               	movlb	0	; select bank0
  6975  0BBA  01BE               	clrf	updateSwitchTap@iCnt
  6976                           
  6977                           ;SwitchTap.c: 57: if (PORTEbits.RE0 == 0) {
  6978  0BBB  1810               	btfsc	16,0	;volatile
  6979  0BBC  2BC4               	goto	l4117
  6980                           
  6981                           ;SwitchTap.c: 58: if (switchTap_pressed > 0) {
  6982  0BBD  0021               	movlb	1	; select bank1
  6983  0BBE  086F               	movf	_switchTap_pressed^(0+128),w
  6984  0BBF  1903               	btfsc	3,2
  6985  0BC0  2BCF               	goto	l1125
  6986                           
  6987                           ;SwitchTap.c: 59: switchTap_pressed--;
  6988  0BC1  3001               	movlw	1
  6989  0BC2  02EF               	subwf	_switchTap_pressed^(0+128),f
  6990                           
  6991                           ;SwitchTap.c: 60: }
  6992                           ;SwitchTap.c: 61: } else if (switchTap_pressed < 25) {
  6993  0BC3  2BCF               	goto	l1125
  6994  0BC4                     l4117:	
  6995  0BC4  3019               	movlw	25
  6996  0BC5  0021               	movlb	1	; select bank1
  6997  0BC6  026F               	subwf	_switchTap_pressed^(0+128),w
  6998  0BC7  1803               	skipnc
  6999  0BC8  2BCF               	goto	l1125
  7000                           
  7001                           ;SwitchTap.c: 62: switchTap_pressed++;
  7002  0BC9  3001               	movlw	1
  7003  0BCA  0020               	movlb	0	; select bank0
  7004  0BCB  00B6               	movwf	??_updateSwitchTap
  7005  0BCC  0836               	movf	??_updateSwitchTap,w
  7006  0BCD  0021               	movlb	1	; select bank1
  7007  0BCE  07EF               	addwf	_switchTap_pressed^(0+128),f
  7008  0BCF                     l1125:	
  7009                           
  7010                           ;SwitchTap.c: 63: }
  7011                           ;SwitchTap.c: 69: if (switchTap_pressed == 0) {
  7012  0BCF  086F               	movf	_switchTap_pressed^(0+128),w
  7013  0BD0  1D03               	btfss	3,2
  7014  0BD1  2D70               	goto	l4201
  7015                           
  7016                           ;SwitchTap.c: 73: if (tap_timer >= 1563) {
  7017  0BD2  1BFC               	btfsc	_tap_timer+3,7	;volatile
  7018  0BD3  2C54               	goto	l4161
  7019  0BD4  087C               	movf	_tap_timer+3,w	;volatile
  7020  0BD5  1D03               	btfss	3,2
  7021  0BD6  2BE0               	goto	l4123
  7022  0BD7  087B               	movf	_tap_timer+2,w	;volatile
  7023  0BD8  1D03               	btfss	3,2
  7024  0BD9  2BE0               	goto	l4123
  7025  0BDA  301B               	movlw	27
  7026  0BDB  0279               	subwf	_tap_timer,w	;volatile
  7027  0BDC  3006               	movlw	6
  7028  0BDD  3B7A               	subwfb	_tap_timer+1,w	;volatile
  7029  0BDE  1C03               	btfss	3,0
  7030  0BDF  2C54               	goto	l4161
  7031  0BE0                     l4123:	
  7032                           
  7033                           ;SwitchTap.c: 76: if (switchTap_down != 1) {
  7034  0BE0  036E               	decf	_switchTap_down^(0+128),w
  7035  0BE1  1903               	btfsc	3,2
  7036  0BE2  2C1D               	goto	l4141
  7037                           
  7038                           ;SwitchTap.c: 78: switchTap_down = 1;
  7039  0BE3  01EE               	clrf	_switchTap_down^(0+128)
  7040  0BE4  0AEE               	incf	_switchTap_down^(0+128),f
  7041                           
  7042                           ;SwitchTap.c: 79: tap_timer = 0;
  7043  0BE5  3000               	movlw	0
  7044  0BE6  00FC               	movwf	_tap_timer+3	;volatile
  7045  0BE7  3000               	movlw	0
  7046  0BE8  00FB               	movwf	_tap_timer+2	;volatile
  7047  0BE9  3000               	movlw	0
  7048  0BEA  00FA               	movwf	_tap_timer+1	;volatile
  7049  0BEB  3000               	movlw	0
  7050  0BEC  00F9               	movwf	_tap_timer	;volatile
  7051                           
  7052                           ;SwitchTap.c: 80: tap_iteration = 1;
  7053  0BED  3001               	movlw	1
  7054  0BEE  00B6               	movwf	_tap_iteration^(0+128)
  7055  0BEF  3000               	movlw	0
  7056  0BF0  00B7               	movwf	(_tap_iteration^(0+128)+1)
  7057                           
  7058                           ;SwitchTap.c: 81: tap_total = 0;
  7059  0BF1  3000               	movlw	0
  7060  0BF2  0022               	movlb	2	; select bank2
  7061  0BF3  00BF               	movwf	(_tap_total+3)^(0+256)
  7062  0BF4  3000               	movlw	0
  7063  0BF5  00BE               	movwf	(_tap_total+2)^(0+256)
  7064  0BF6  3000               	movlw	0
  7065  0BF7  00BD               	movwf	(_tap_total+1)^(0+256)
  7066  0BF8  3000               	movlw	0
  7067  0BF9  00BC               	movwf	_tap_total^(0+256)
  7068                           
  7069                           ;SwitchTap.c: 82: delay_time_changed = 0;
  7070  0BFA  01E7               	clrf	_delay_time_changed^(0+256)
  7071  0BFB  01E8               	clrf	(_delay_time_changed+1)^(0+256)
  7072                           
  7073                           ;SwitchTap.c: 83: LATDbits.LATD0 = 0;
  7074  0BFC  100F               	bcf	15,0	;volatile
  7075                           
  7076                           ;SwitchTap.c: 85: for (iCnt = 1; iCnt <= num_taps; iCnt++) {
  7077  0BFD  0020               	movlb	0	; select bank0
  7078  0BFE  01BE               	clrf	updateSwitchTap@iCnt
  7079  0BFF  0ABE               	incf	updateSwitchTap@iCnt,f
  7080  0C00                     l4139:	
  7081  0C00  083E               	movf	updateSwitchTap@iCnt,w
  7082  0C01  0021               	movlb	1	; select bank1
  7083  0C02  023C               	subwf	_num_taps^(0+128),w
  7084  0C03  1C03               	btfss	3,0
  7085  0C04  2C1D               	goto	l4141
  7086                           
  7087                           ;SwitchTap.c: 86: tap_history[iCnt] = 0;
  7088  0C05  0020               	movlb	0	; select bank0
  7089  0C06  083E               	movf	updateSwitchTap@iCnt,w
  7090  0C07  00B6               	movwf	??_updateSwitchTap
  7091  0C08  3001               	movlw	1
  7092  0C09                     u3925:	
  7093  0C09  35B6               	lslf	??_updateSwitchTap,f
  7094  0C0A  3EFF               	addlw	-1
  7095  0C0B  1D03               	skipz
  7096  0C0C  2C09               	goto	u3925
  7097  0C0D  3536               	lslf	??_updateSwitchTap,w
  7098  0C0E  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7099  0C0F  0086               	movwf	6
  7100  0C10  3001               	movlw	1	; select bank2/3
  7101  0C11  0087               	movwf	7
  7102  0C12  3000               	movlw	0
  7103  0C13  3FC0               	movwi [0]fsr1
  7104  0C14  3000               	movlw	0
  7105  0C15  3FC1               	movwi [1]fsr1
  7106  0C16  3FC2               	movwi [2]fsr1
  7107  0C17  3FC3               	movwi [3]fsr1
  7108  0C18  3001               	movlw	1
  7109  0C19  00B6               	movwf	??_updateSwitchTap
  7110  0C1A  0836               	movf	??_updateSwitchTap,w
  7111  0C1B  07BE               	addwf	updateSwitchTap@iCnt,f
  7112  0C1C  2C00               	goto	l4139
  7113  0C1D                     l4141:	
  7114                           
  7115                           ;SwitchTap.c: 87: }
  7116                           ;SwitchTap.c: 88: }
  7117                           ;SwitchTap.c: 91: if (longTap_start == 0) {
  7118  0C1D  086A               	movf	_longTap_start^(0+128),w
  7119  0C1E  1D03               	btfss	3,2
  7120  0C1F  2C27               	goto	l4147
  7121                           
  7122                           ;SwitchTap.c: 92: longTap_start = 1;
  7123  0C20  01EA               	clrf	_longTap_start^(0+128)
  7124  0C21  0AEA               	incf	_longTap_start^(0+128),f
  7125                           
  7126                           ;SwitchTap.c: 93: longTap_state = 0;
  7127  0C22  0020               	movlb	0	; select bank0
  7128  0C23  01EF               	clrf	_longTap_state	;volatile
  7129                           
  7130                           ;SwitchTap.c: 94: longTap_timer = 0;
  7131  0C24  0022               	movlb	2	; select bank2
  7132  0C25  01DA               	clrf	_longTap_timer^(0+256)	;volatile
  7133  0C26  01DB               	clrf	(_longTap_timer+1)^(0+256)	;volatile
  7134  0C27                     l4147:	
  7135                           
  7136                           ;SwitchTap.c: 95: }
  7137                           ;SwitchTap.c: 99: if (longTap_timer >= long_press_limit && longTap_state == 0) {
  7138  0C27  0021               	movlb	1	; select bank1
  7139  0C28  0835               	movf	(_long_press_limit+1)^(0+128),w
  7140  0C29  0022               	movlb	2	; select bank2
  7141  0C2A  025B               	subwf	(_longTap_timer+1)^(0+256),w	;volatile
  7142  0C2B  1D03               	skipz
  7143  0C2C  2C31               	goto	u3955
  7144  0C2D  0021               	movlb	1	; select bank1
  7145  0C2E  0834               	movf	_long_press_limit^(0+128),w
  7146  0C2F  0022               	movlb	2	; select bank2
  7147  0C30  025A               	subwf	_longTap_timer^(0+256),w	;volatile
  7148  0C31                     u3955:	
  7149  0C31  1C03               	skipc
  7150  0C32  0008               	return
  7151  0C33  0020               	movlb	0	; select bank0
  7152  0C34  086F               	movf	_longTap_state,w	;volatile
  7153  0C35  1D03               	btfss	3,2
  7154  0C36  0008               	return
  7155                           
  7156                           ;SwitchTap.c: 101: longTap_timer = long_press_limit;
  7157  0C37  0021               	movlb	1	; select bank1
  7158  0C38  0835               	movf	(_long_press_limit+1)^(0+128),w
  7159  0C39  0022               	movlb	2	; select bank2
  7160  0C3A  00DB               	movwf	(_longTap_timer+1)^(0+256)	;volatile
  7161  0C3B  0021               	movlb	1	; select bank1
  7162  0C3C  0834               	movf	_long_press_limit^(0+128),w
  7163  0C3D  0022               	movlb	2	; select bank2
  7164  0C3E  00DA               	movwf	_longTap_timer^(0+256)	;volatile
  7165                           
  7166                           ;SwitchTap.c: 102: LATBbits.LATB4 = 0;
  7167  0C3F  120D               	bcf	13,4	;volatile
  7168                           
  7169                           ;SwitchTap.c: 104: if (feedback_start != 1) {
  7170  0C40  0021               	movlb	1	; select bank1
  7171  0C41  0369               	decf	_feedback_start^(0+128),w
  7172  0C42  1903               	btfsc	3,2
  7173  0C43  2C4C               	goto	l4159
  7174                           
  7175                           ;SwitchTap.c: 105: setLongTapState(1);
  7176  0C44  3001               	movlw	1
  7177  0C45  0020               	movlb	0	; select bank0
  7178  0C46  00A0               	movwf	setLongTapState@f_state
  7179  0C47  3000               	movlw	0
  7180  0C48  00A1               	movwf	setLongTapState@f_state+1
  7181  0C49  319E  26E8         	fcall	_setLongTapState
  7182                           
  7183                           ;SwitchTap.c: 106: } else {
  7184  0C4B  0008               	return
  7185  0C4C                     l4159:	
  7186                           
  7187                           ;SwitchTap.c: 107: setDoublePressState(1);
  7188  0C4C  3001               	movlw	1
  7189  0C4D  0020               	movlb	0	; select bank0
  7190  0C4E  00B2               	movwf	setDoublePressState@f_state
  7191  0C4F  3000               	movlw	0
  7192  0C50  00B3               	movwf	setDoublePressState@f_state+1
  7193  0C51  3190  2007         	fcall	_setDoublePressState
  7194                           
  7195                           ;SwitchTap.c: 108: }
  7196                           ;SwitchTap.c: 109: }
  7197                           ;SwitchTap.c: 111: } else if (tap_timer < 1563 && longTap_state == 0 && switchTap_down !
      +                          = 1) {
  7198  0C53  0008               	return
  7199  0C54                     l4161:	
  7200  0C54  1BFC               	btfsc	_tap_timer+3,7	;volatile
  7201  0C55  2C62               	goto	l4163
  7202  0C56  087C               	movf	_tap_timer+3,w	;volatile
  7203  0C57  1D03               	btfss	3,2
  7204  0C58  0008               	return
  7205  0C59  087B               	movf	_tap_timer+2,w	;volatile
  7206  0C5A  1D03               	btfss	3,2
  7207  0C5B  0008               	return
  7208  0C5C  301B               	movlw	27
  7209  0C5D  0279               	subwf	_tap_timer,w	;volatile
  7210  0C5E  3006               	movlw	6
  7211  0C5F  3B7A               	subwfb	_tap_timer+1,w	;volatile
  7212  0C60  1803               	btfsc	3,0
  7213  0C61  0008               	return
  7214  0C62                     l4163:	
  7215  0C62  0020               	movlb	0	; select bank0
  7216  0C63  086F               	movf	_longTap_state,w	;volatile
  7217  0C64  1D03               	btfss	3,2
  7218  0C65  0008               	return
  7219  0C66  0021               	movlb	1	; select bank1
  7220  0C67  036E               	decf	_switchTap_down^(0+128),w
  7221  0C68  1903               	btfsc	3,2
  7222  0C69  0008               	return
  7223                           
  7224                           ;SwitchTap.c: 113: switchTap_down = 1;
  7225  0C6A  01EE               	clrf	_switchTap_down^(0+128)
  7226  0C6B  0AEE               	incf	_switchTap_down^(0+128),f
  7227                           
  7228                           ;SwitchTap.c: 114: if (tap_timer >= 1172) {
  7229  0C6C  1BFC               	btfsc	_tap_timer+3,7	;volatile
  7230  0C6D  2C82               	goto	l1139
  7231  0C6E  087C               	movf	_tap_timer+3,w	;volatile
  7232  0C6F  1D03               	btfss	3,2
  7233  0C70  2C7A               	goto	l4171
  7234  0C71  087B               	movf	_tap_timer+2,w	;volatile
  7235  0C72  1D03               	btfss	3,2
  7236  0C73  2C7A               	goto	l4171
  7237  0C74  3094               	movlw	148
  7238  0C75  0279               	subwf	_tap_timer,w	;volatile
  7239  0C76  3004               	movlw	4
  7240  0C77  3B7A               	subwfb	_tap_timer+1,w	;volatile
  7241  0C78  1C03               	btfss	3,0
  7242  0C79  2C82               	goto	l1139
  7243  0C7A                     l4171:	
  7244                           
  7245                           ;SwitchTap.c: 115: tap_timer = 1172;
  7246  0C7A  3000               	movlw	0
  7247  0C7B  00FC               	movwf	_tap_timer+3	;volatile
  7248  0C7C  3000               	movlw	0
  7249  0C7D  00FB               	movwf	_tap_timer+2	;volatile
  7250  0C7E  3004               	movlw	4
  7251  0C7F  00FA               	movwf	_tap_timer+1	;volatile
  7252  0C80  3094               	movlw	148
  7253  0C81  00F9               	movwf	_tap_timer	;volatile
  7254  0C82                     l1139:	
  7255                           
  7256                           ;SwitchTap.c: 116: }
  7257                           ;SwitchTap.c: 118: int tapCntDivisor = num_taps;
  7258  0C82  083C               	movf	_num_taps^(0+128),w
  7259  0C83  0020               	movlb	0	; select bank0
  7260  0C84  00B6               	movwf	??_updateSwitchTap
  7261  0C85  01B7               	clrf	??_updateSwitchTap+1
  7262  0C86  0836               	movf	??_updateSwitchTap,w
  7263  0C87  00BC               	movwf	updateSwitchTap@tapCntDivisor
  7264  0C88  0837               	movf	??_updateSwitchTap+1,w
  7265  0C89  00BD               	movwf	updateSwitchTap@tapCntDivisor+1
  7266                           
  7267                           ;SwitchTap.c: 119: if (tap_iteration <= num_taps) {
  7268  0C8A  0021               	movlb	1	; select bank1
  7269  0C8B  0837               	movf	(_tap_iteration+1)^(0+128),w
  7270  0C8C  3A80               	xorlw	128
  7271  0C8D  3C80               	sublw	128
  7272  0C8E  1D03               	skipz
  7273  0C8F  2C92               	goto	u4025
  7274  0C90  0836               	movf	_tap_iteration^(0+128),w
  7275  0C91  023C               	subwf	_num_taps^(0+128),w
  7276  0C92                     u4025:	
  7277  0C92  1C03               	skipc
  7278  0C93  2CBC               	goto	l4179
  7279                           
  7280                           ;SwitchTap.c: 120: tap_total += tap_timer;
  7281  0C94  0879               	movf	_tap_timer,w	;volatile
  7282  0C95  0022               	movlb	2	; select bank2
  7283  0C96  07BC               	addwf	_tap_total^(0+256),f
  7284  0C97  087A               	movf	_tap_timer+1,w	;volatile
  7285  0C98  3DBD               	addwfc	(_tap_total+1)^(0+256),f
  7286  0C99  087B               	movf	_tap_timer+2,w	;volatile
  7287  0C9A  3DBE               	addwfc	(_tap_total+2)^(0+256),f
  7288  0C9B  087C               	movf	_tap_timer+3,w	;volatile
  7289  0C9C  3DBF               	addwfc	(_tap_total+3)^(0+256),f
  7290                           
  7291                           ;SwitchTap.c: 121: tap_history[tap_iteration] = tap_timer;
  7292  0C9D  0021               	movlb	1	; select bank1
  7293  0C9E  0836               	movf	_tap_iteration^(0+128),w
  7294  0C9F  0020               	movlb	0	; select bank0
  7295  0CA0  00B6               	movwf	??_updateSwitchTap
  7296  0CA1  3001               	movlw	1
  7297  0CA2                     u4035:	
  7298  0CA2  35B6               	lslf	??_updateSwitchTap,f
  7299  0CA3  3EFF               	addlw	-1
  7300  0CA4  1D03               	skipz
  7301  0CA5  2CA2               	goto	u4035
  7302  0CA6  3536               	lslf	??_updateSwitchTap,w
  7303  0CA7  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7304  0CA8  0086               	movwf	6
  7305  0CA9  3001               	movlw	1	; select bank2/3
  7306  0CAA  0087               	movwf	7
  7307  0CAB  0879               	movf	_tap_timer,w	;volatile
  7308  0CAC  3FC0               	movwi [0]fsr1
  7309  0CAD  087A               	movf	_tap_timer+1,w	;volatile
  7310  0CAE  3FC1               	movwi [1]fsr1
  7311  0CAF  087B               	movf	_tap_timer+2,w	;volatile
  7312  0CB0  3FC2               	movwi [2]fsr1
  7313  0CB1  087C               	movf	_tap_timer+3,w	;volatile
  7314  0CB2  3FC3               	movwi [3]fsr1
  7315                           
  7316                           ;SwitchTap.c: 122: tapCntDivisor = tap_iteration;
  7317  0CB3  0021               	movlb	1	; select bank1
  7318  0CB4  0837               	movf	(_tap_iteration+1)^(0+128),w
  7319  0CB5  0020               	movlb	0	; select bank0
  7320  0CB6  00BD               	movwf	updateSwitchTap@tapCntDivisor+1
  7321  0CB7  0021               	movlb	1	; select bank1
  7322  0CB8  0836               	movf	_tap_iteration^(0+128),w
  7323  0CB9  0020               	movlb	0	; select bank0
  7324  0CBA  00BC               	movwf	updateSwitchTap@tapCntDivisor
  7325                           
  7326                           ;SwitchTap.c: 123: } else {
  7327  0CBB  2D31               	goto	l4193
  7328  0CBC                     l4179:	
  7329                           
  7330                           ;SwitchTap.c: 124: tap_total = 0;
  7331  0CBC  3000               	movlw	0
  7332  0CBD  0022               	movlb	2	; select bank2
  7333  0CBE  00BF               	movwf	(_tap_total+3)^(0+256)
  7334  0CBF  3000               	movlw	0
  7335  0CC0  00BE               	movwf	(_tap_total+2)^(0+256)
  7336  0CC1  3000               	movlw	0
  7337  0CC2  00BD               	movwf	(_tap_total+1)^(0+256)
  7338  0CC3  3000               	movlw	0
  7339  0CC4  00BC               	movwf	_tap_total^(0+256)
  7340                           
  7341                           ;SwitchTap.c: 125: for (iCnt = 1; iCnt < num_taps; iCnt++) {
  7342  0CC5  0020               	movlb	0	; select bank0
  7343  0CC6  01BE               	clrf	updateSwitchTap@iCnt
  7344  0CC7  0ABE               	incf	updateSwitchTap@iCnt,f
  7345  0CC8                     l4187:	
  7346  0CC8  0021               	movlb	1	; select bank1
  7347  0CC9  083C               	movf	_num_taps^(0+128),w
  7348  0CCA  0020               	movlb	0	; select bank0
  7349  0CCB  023E               	subwf	updateSwitchTap@iCnt,w
  7350  0CCC  1803               	btfsc	3,0
  7351  0CCD  2D12               	goto	l4189
  7352                           
  7353                           ;SwitchTap.c: 126: tap_history[iCnt] = tap_history[iCnt + 1];
  7354  0CCE  083E               	movf	updateSwitchTap@iCnt,w
  7355  0CCF  00B6               	movwf	??_updateSwitchTap
  7356  0CD0  3001               	movlw	1
  7357  0CD1                     u4045:	
  7358  0CD1  35B6               	lslf	??_updateSwitchTap,f
  7359  0CD2  3EFF               	addlw	-1
  7360  0CD3  1D03               	skipz
  7361  0CD4  2CD1               	goto	u4045
  7362  0CD5  3536               	lslf	??_updateSwitchTap,w
  7363  0CD6  3E04               	addlw	4
  7364  0CD7  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7365  0CD8  0086               	movwf	6
  7366  0CD9  3001               	movlw	1	; select bank2/3
  7367  0CDA  0087               	movwf	7
  7368  0CDB  3F40               	moviw [0]fsr1
  7369  0CDC  00B7               	movwf	??_updateSwitchTap+1
  7370  0CDD  3F41               	moviw [1]fsr1
  7371  0CDE  00B8               	movwf	??_updateSwitchTap+2
  7372  0CDF  3F42               	moviw [2]fsr1
  7373  0CE0  00B9               	movwf	??_updateSwitchTap+3
  7374  0CE1  3F43               	moviw [3]fsr1
  7375  0CE2  00BA               	movwf	??_updateSwitchTap+4
  7376  0CE3  083E               	movf	updateSwitchTap@iCnt,w
  7377  0CE4  00BB               	movwf	??_updateSwitchTap+5
  7378  0CE5  3001               	movlw	1
  7379  0CE6                     u4055:	
  7380  0CE6  35BB               	lslf	??_updateSwitchTap+5,f
  7381  0CE7  3EFF               	addlw	-1
  7382  0CE8  1D03               	skipz
  7383  0CE9  2CE6               	goto	u4055
  7384  0CEA  353B               	lslf	??_updateSwitchTap+5,w
  7385  0CEB  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7386  0CEC  0086               	movwf	6
  7387  0CED  3001               	movlw	1	; select bank2/3
  7388  0CEE  0087               	movwf	7
  7389  0CEF  0837               	movf	??_updateSwitchTap+1,w
  7390  0CF0  3FC0               	movwi [0]fsr1
  7391  0CF1  0838               	movf	??_updateSwitchTap+2,w
  7392  0CF2  3FC1               	movwi [1]fsr1
  7393  0CF3  0839               	movf	??_updateSwitchTap+3,w
  7394  0CF4  3FC2               	movwi [2]fsr1
  7395  0CF5  083A               	movf	??_updateSwitchTap+4,w
  7396  0CF6  3FC3               	movwi [3]fsr1
  7397                           
  7398                           ;SwitchTap.c: 127: tap_total += tap_history[iCnt];
  7399  0CF7  083E               	movf	updateSwitchTap@iCnt,w
  7400  0CF8  00B6               	movwf	??_updateSwitchTap
  7401  0CF9  3001               	movlw	1
  7402  0CFA                     u4065:	
  7403  0CFA  35B6               	lslf	??_updateSwitchTap,f
  7404  0CFB  3EFF               	addlw	-1
  7405  0CFC  1D03               	skipz
  7406  0CFD  2CFA               	goto	u4065
  7407  0CFE  3536               	lslf	??_updateSwitchTap,w
  7408  0CFF  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7409  0D00  0086               	movwf	6
  7410  0D01  3001               	movlw	1	; select bank2/3
  7411  0D02  0087               	movwf	7
  7412  0D03  3F40               	moviw [0]fsr1
  7413  0D04  0022               	movlb	2	; select bank2
  7414  0D05  07BC               	addwf	_tap_total^(0+256),f
  7415  0D06  3F41               	moviw [1]fsr1
  7416  0D07  3DBD               	addwfc	(_tap_total+1)^(0+256),f
  7417  0D08  3F42               	moviw [2]fsr1
  7418  0D09  3DBE               	addwfc	(_tap_total+2)^(0+256),f
  7419  0D0A  3F43               	moviw [3]fsr1
  7420  0D0B  3DBF               	addwfc	(_tap_total+3)^(0+256),f
  7421  0D0C  3001               	movlw	1
  7422  0D0D  0020               	movlb	0	; select bank0
  7423  0D0E  00B6               	movwf	??_updateSwitchTap
  7424  0D0F  0836               	movf	??_updateSwitchTap,w
  7425  0D10  07BE               	addwf	updateSwitchTap@iCnt,f
  7426  0D11  2CC8               	goto	l4187
  7427  0D12                     l4189:	
  7428                           
  7429                           ;SwitchTap.c: 128: }
  7430                           ;SwitchTap.c: 129: tap_history[num_taps] = tap_timer;
  7431  0D12  0021               	movlb	1	; select bank1
  7432  0D13  083C               	movf	_num_taps^(0+128),w
  7433  0D14  0020               	movlb	0	; select bank0
  7434  0D15  00B6               	movwf	??_updateSwitchTap
  7435  0D16  3001               	movlw	1
  7436  0D17                     u4085:	
  7437  0D17  35B6               	lslf	??_updateSwitchTap,f
  7438  0D18  3EFF               	addlw	-1
  7439  0D19  1D03               	skipz
  7440  0D1A  2D17               	goto	u4085
  7441  0D1B  3536               	lslf	??_updateSwitchTap,w
  7442  0D1C  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7443  0D1D  0086               	movwf	6
  7444  0D1E  3001               	movlw	1	; select bank2/3
  7445  0D1F  0087               	movwf	7
  7446  0D20  0879               	movf	_tap_timer,w	;volatile
  7447  0D21  3FC0               	movwi [0]fsr1
  7448  0D22  087A               	movf	_tap_timer+1,w	;volatile
  7449  0D23  3FC1               	movwi [1]fsr1
  7450  0D24  087B               	movf	_tap_timer+2,w	;volatile
  7451  0D25  3FC2               	movwi [2]fsr1
  7452  0D26  087C               	movf	_tap_timer+3,w	;volatile
  7453  0D27  3FC3               	movwi [3]fsr1
  7454                           
  7455                           ;SwitchTap.c: 130: tap_total += tap_timer;
  7456  0D28  0879               	movf	_tap_timer,w	;volatile
  7457  0D29  0022               	movlb	2	; select bank2
  7458  0D2A  07BC               	addwf	_tap_total^(0+256),f
  7459  0D2B  087A               	movf	_tap_timer+1,w	;volatile
  7460  0D2C  3DBD               	addwfc	(_tap_total+1)^(0+256),f
  7461  0D2D  087B               	movf	_tap_timer+2,w	;volatile
  7462  0D2E  3DBE               	addwfc	(_tap_total+2)^(0+256),f
  7463  0D2F  087C               	movf	_tap_timer+3,w	;volatile
  7464  0D30  3DBF               	addwfc	(_tap_total+3)^(0+256),f
  7465  0D31                     l4193:	
  7466                           
  7467                           ;SwitchTap.c: 131: }
  7468                           ;SwitchTap.c: 133: baseline_delay_time = tap_total / tapCntDivisor;
  7469  0D31  0020               	movlb	0	; select bank0
  7470  0D32  083C               	movf	updateSwitchTap@tapCntDivisor,w
  7471  0D33  00A6               	movwf	___aldiv@divisor
  7472  0D34  083D               	movf	updateSwitchTap@tapCntDivisor+1,w
  7473  0D35  00A7               	movwf	___aldiv@divisor+1
  7474  0D36  0D89               	rlf	9,f
  7475  0D37  3B89               	subwfb	9,f
  7476  0D38  0989               	comf	9,f
  7477  0D39  00A8               	movwf	___aldiv@divisor+2
  7478  0D3A  00A9               	movwf	___aldiv@divisor+3
  7479  0D3B  0022               	movlb	2	; select bank2
  7480  0D3C  083F               	movf	(_tap_total+3)^(0+256),w
  7481  0D3D  0020               	movlb	0	; select bank0
  7482  0D3E  00AD               	movwf	___aldiv@dividend+3
  7483  0D3F  0022               	movlb	2	; select bank2
  7484  0D40  083E               	movf	(_tap_total+2)^(0+256),w
  7485  0D41  0020               	movlb	0	; select bank0
  7486  0D42  00AC               	movwf	___aldiv@dividend+2
  7487  0D43  0022               	movlb	2	; select bank2
  7488  0D44  083D               	movf	(_tap_total+1)^(0+256),w
  7489  0D45  0020               	movlb	0	; select bank0
  7490  0D46  00AB               	movwf	___aldiv@dividend+1
  7491  0D47  0022               	movlb	2	; select bank2
  7492  0D48  083C               	movf	_tap_total^(0+256),w
  7493  0D49  0020               	movlb	0	; select bank0
  7494  0D4A  00AA               	movwf	___aldiv@dividend
  7495  0D4B  3196  2654         	fcall	___aldiv
  7496  0D4D  0020               	movlb	0	; select bank0
  7497  0D4E  0829               	movf	?___aldiv+3,w
  7498  0D4F  0021               	movlb	1	; select bank1
  7499  0D50  00A3               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  7500  0D51  0020               	movlb	0	; select bank0
  7501  0D52  0828               	movf	?___aldiv+2,w
  7502  0D53  0021               	movlb	1	; select bank1
  7503  0D54  00A2               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  7504  0D55  0020               	movlb	0	; select bank0
  7505  0D56  0827               	movf	?___aldiv+1,w
  7506  0D57  0021               	movlb	1	; select bank1
  7507  0D58  00A1               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  7508  0D59  0020               	movlb	0	; select bank0
  7509  0D5A  0826               	movf	?___aldiv,w
  7510  0D5B  0021               	movlb	1	; select bank1
  7511  0D5C  00A0               	movwf	_baseline_delay_time^(0+128)	;volatile
  7512                           
  7513                           ;SwitchTap.c: 134: delay_time_changed = 1;
  7514  0D5D  3001               	movlw	1
  7515  0D5E  0022               	movlb	2	; select bank2
  7516  0D5F  00E7               	movwf	_delay_time_changed^(0+256)
  7517  0D60  3000               	movlw	0
  7518  0D61  00E8               	movwf	(_delay_time_changed^(0+256)+1)
  7519                           
  7520                           ;SwitchTap.c: 135: tap_timer = 0;
  7521  0D62  3000               	movlw	0
  7522  0D63  00FC               	movwf	_tap_timer+3	;volatile
  7523  0D64  3000               	movlw	0
  7524  0D65  00FB               	movwf	_tap_timer+2	;volatile
  7525  0D66  3000               	movlw	0
  7526  0D67  00FA               	movwf	_tap_timer+1	;volatile
  7527  0D68  3000               	movlw	0
  7528  0D69  00F9               	movwf	_tap_timer	;volatile
  7529                           
  7530                           ;SwitchTap.c: 137: tap_iteration++;
  7531  0D6A  3001               	movlw	1
  7532  0D6B  0021               	movlb	1	; select bank1
  7533  0D6C  07B6               	addwf	_tap_iteration^(0+128),f
  7534  0D6D  3000               	movlw	0
  7535  0D6E  3DB7               	addwfc	(_tap_iteration+1)^(0+128),f
  7536                           
  7537                           ;SwitchTap.c: 138: }
  7538                           ;SwitchTap.c: 140: } else if (switchTap_pressed >= 25) {
  7539  0D6F  0008               	return
  7540  0D70                     l4201:	
  7541  0D70  3019               	movlw	25
  7542  0D71  026F               	subwf	_switchTap_pressed^(0+128),w
  7543  0D72  1C03               	skipc
  7544  0D73  0008               	return
  7545                           
  7546                           ;SwitchTap.c: 141: switchTap_down = 0;
  7547  0D74  01EE               	clrf	_switchTap_down^(0+128)
  7548                           
  7549                           ;SwitchTap.c: 142: switchTap_state = 0;
  7550  0D75  01BE               	clrf	_switchTap_state^(0+128)
  7551                           
  7552                           ;SwitchTap.c: 148: setLongTapState(0);
  7553  0D76  3000               	movlw	0
  7554  0D77  0020               	movlb	0	; select bank0
  7555  0D78  00A0               	movwf	setLongTapState@f_state
  7556  0D79  00A1               	movwf	setLongTapState@f_state+1
  7557  0D7A  319E  26E8         	fcall	_setLongTapState
  7558                           
  7559                           ;SwitchTap.c: 150: longTap_timer = 0;
  7560  0D7C  0022               	movlb	2	; select bank2
  7561  0D7D  01DA               	clrf	_longTap_timer^(0+256)	;volatile
  7562  0D7E  01DB               	clrf	(_longTap_timer+1)^(0+256)	;volatile
  7563                           
  7564                           ;SwitchTap.c: 151: longTap_start = 0;
  7565  0D7F  0021               	movlb	1	; select bank1
  7566  0D80  01EA               	clrf	_longTap_start^(0+128)
  7567                           
  7568                           ;SwitchTap.c: 153: switchTap_pressed = 25;
  7569  0D81  3019               	movlw	25
  7570  0D82  0020               	movlb	0	; select bank0
  7571  0D83  00B6               	movwf	??_updateSwitchTap
  7572  0D84  0836               	movf	??_updateSwitchTap,w
  7573  0D85  0021               	movlb	1	; select bank1
  7574  0D86  00EF               	movwf	_switchTap_pressed^(0+128)
  7575  0D87  0008               	return
  7576  0D88                     __end_of_updateSwitchTap:	
  7577                           
  7578                           	psect	text3
  7579  1EE8                     __ptext3:	
  7580 ;; *************** function _setLongTapState *****************
  7581 ;; Defined at:
  7582 ;;		line 168 in file "SwitchTap.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  f_state         2    0[BANK0 ] int 
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;		None
  7587 ;; Return value:  Size  Location     Type
  7588 ;;                  1    wreg      void 
  7589 ;; Registers used:
  7590 ;;		wreg, status,0
  7591 ;; Tracked objects:
  7592 ;;		On entry : 0/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7596 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7598 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7599 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7600 ;;Total ram usage:        4 bytes
  7601 ;; Hardware stack levels used:    1
  7602 ;; Hardware stack levels required when called:    2
  7603 ;; This function calls:
  7604 ;;		Nothing
  7605 ;; This function is called by:
  7606 ;;		_updateSwitchTap
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610                           
  7611                           ;psect for function _setLongTapState
  7612  1EE8                     _setLongTapState:	
  7613                           
  7614                           ;SwitchTap.c: 169: if (longTap_state == f_state) {return;}
  7615                           
  7616                           ;incstack = 0
  7617                           ; Regs used in _setLongTapState: [wreg+status,0]
  7618  1EE8  0020               	movlb	0	; select bank0
  7619  1EE9  086F               	movf	_longTap_state,w	;volatile
  7620  1EEA  00A2               	movwf	??_setLongTapState
  7621  1EEB  01A3               	clrf	??_setLongTapState+1
  7622  1EEC  0821               	movf	setLongTapState@f_state+1,w
  7623  1EED  0623               	xorwf	??_setLongTapState+1,w
  7624  1EEE  1D03               	skipz
  7625  1EEF  2EF2               	goto	u2805
  7626  1EF0  0820               	movf	setLongTapState@f_state,w
  7627  1EF1  0622               	xorwf	??_setLongTapState,w
  7628  1EF2                     u2805:	
  7629  1EF2  1903               	btfsc	3,2
  7630  1EF3  0008               	return
  7631                           
  7632                           ;SwitchTap.c: 170: longTap_state = f_state;
  7633  1EF4  0820               	movf	setLongTapState@f_state,w
  7634  1EF5  00A2               	movwf	??_setLongTapState
  7635  1EF6  0822               	movf	??_setLongTapState,w
  7636  1EF7  00EF               	movwf	_longTap_state	;volatile
  7637                           
  7638                           ;SwitchTap.c: 171: LATBbits.LATB5 = f_state;
  7639  1EF8  0C20               	rrf	setLongTapState@f_state,w
  7640  1EF9  0022               	movlb	2	; select bank2
  7641  1EFA  1C03               	skipc
  7642  1EFB  128D               	bcf	13,5	;volatile
  7643  1EFC  1803               	skipnc
  7644  1EFD  168D               	bsf	13,5	;volatile
  7645  1EFE  0008               	return
  7646  1EFF                     __end_of_setLongTapState:	
  7647                           
  7648                           	psect	text4
  7649  08E6                     __ptext4:	
  7650 ;; *************** function _updateSwitchBypass *****************
  7651 ;; Defined at:
  7652 ;;		line 34 in file "SwitchBypass.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;		None
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;		None
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  1    wreg      void 
  7659 ;; Registers used:
  7660 ;;		wreg, status,2, status,0, pclath, cstack
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7668 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7669 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7670 ;;Total ram usage:        2 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    5
  7673 ;; This function calls:
  7674 ;;		_setDoublePressState
  7675 ;;		_setFeedbackState
  7676 ;;		_setSwitchBypassState
  7677 ;; This function is called by:
  7678 ;;		_main
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           
  7683                           ;psect for function _updateSwitchBypass
  7684  08E6                     _updateSwitchBypass:	
  7685                           
  7686                           ;SwitchBypass.c: 41: if (PORTEbits.RE1 == 0) {
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in _updateSwitchBypass: [wreg+status,2+status,0+pclath+cstack]
  7690  08E6  0020               	movlb	0	; select bank0
  7691  08E7  1890               	btfsc	16,1	;volatile
  7692  08E8  28FC               	goto	l4029
  7693                           
  7694                           ;SwitchBypass.c: 42: if (switchBypass_pressed > 0) {
  7695  08E9  0022               	movlb	2	; select bank2
  7696  08EA  085F               	movf	(_switchBypass_pressed+1)^(0+256),w
  7697  08EB  3A80               	xorlw	128
  7698  08EC  0020               	movlb	0	; select bank0
  7699  08ED  00B6               	movwf	??_updateSwitchBypass
  7700  08EE  3080               	movlw	128
  7701  08EF  0236               	subwf	??_updateSwitchBypass,w
  7702  08F0  1D03               	skipz
  7703  08F1  28F5               	goto	u3665
  7704  08F2  3001               	movlw	1
  7705  08F3  0022               	movlb	2	; select bank2
  7706  08F4  025E               	subwf	_switchBypass_pressed^(0+256),w
  7707  08F5                     u3665:	
  7708  08F5  1C03               	skipc
  7709  08F6  290F               	goto	l4033
  7710                           
  7711                           ;SwitchBypass.c: 43: switchBypass_pressed--;
  7712  08F7  30FF               	movlw	255
  7713  08F8  0022               	movlb	2	; select bank2
  7714  08F9  07DE               	addwf	_switchBypass_pressed^(0+256),f
  7715  08FA  30FF               	movlw	255
  7716  08FB  290E               	goto	L6
  7717  08FC                     l4029:	
  7718                           ;SwitchBypass.c: 44: }
  7719                           ;SwitchBypass.c: 45: } else if (switchBypass_pressed < 25) {
  7720                           
  7721  08FC  0022               	movlb	2	; select bank2
  7722  08FD  085F               	movf	(_switchBypass_pressed+1)^(0+256),w
  7723  08FE  3A80               	xorlw	128
  7724  08FF  0020               	movlb	0	; select bank0
  7725  0900  00B6               	movwf	??_updateSwitchBypass
  7726  0901  3080               	movlw	128
  7727  0902  0236               	subwf	??_updateSwitchBypass,w
  7728  0903  1D03               	skipz
  7729  0904  2908               	goto	u3675
  7730  0905  3019               	movlw	25
  7731  0906  0022               	movlb	2	; select bank2
  7732  0907  025E               	subwf	_switchBypass_pressed^(0+256),w
  7733  0908                     u3675:	
  7734  0908  1803               	skipnc
  7735  0909  290F               	goto	l4033
  7736                           
  7737                           ;SwitchBypass.c: 46: switchBypass_pressed++;
  7738  090A  3001               	movlw	1
  7739  090B  0022               	movlb	2	; select bank2
  7740  090C  07DE               	addwf	_switchBypass_pressed^(0+256),f
  7741  090D  3000               	movlw	0
  7742  090E                     L6:	
  7743  090E  3DDF               	addwfc	(_switchBypass_pressed+1)^(0+256),f
  7744  090F                     l4033:	
  7745                           
  7746                           ;SwitchBypass.c: 47: }
  7747                           ;SwitchBypass.c: 53: if (switchBypass_pressed == 0) {
  7748  090F  0022               	movlb	2	; select bank2
  7749  0910  085E               	movf	_switchBypass_pressed^(0+256),w
  7750  0911  045F               	iorwf	(_switchBypass_pressed+1)^(0+256),w
  7751  0912  1D03               	btfss	3,2
  7752  0913  2970               	goto	l4073
  7753                           
  7754                           ;SwitchBypass.c: 56: if (feedback_start == 0) {
  7755  0914  0021               	movlb	1	; select bank1
  7756  0915  0869               	movf	_feedback_start^(0+128),w
  7757  0916  1D03               	btfss	3,2
  7758  0917  291D               	goto	l4041
  7759                           
  7760                           ;SwitchBypass.c: 57: feedback_start = 1;
  7761  0918  01E9               	clrf	_feedback_start^(0+128)
  7762  0919  0AE9               	incf	_feedback_start^(0+128),f
  7763                           
  7764                           ;SwitchBypass.c: 58: feedback_timer = 0;
  7765  091A  0022               	movlb	2	; select bank2
  7766  091B  01CE               	clrf	_feedback_timer^(0+256)	;volatile
  7767  091C  01CF               	clrf	(_feedback_timer+1)^(0+256)	;volatile
  7768  091D                     l4041:	
  7769                           
  7770                           ;SwitchBypass.c: 59: }
  7771                           ;SwitchBypass.c: 61: if (feedback_timer >= long_press_limit && feedback_state == 0 && do
      +                          ubleTap_state == 0) {
  7772  091D  0021               	movlb	1	; select bank1
  7773  091E  0835               	movf	(_long_press_limit+1)^(0+128),w
  7774  091F  0022               	movlb	2	; select bank2
  7775  0920  024F               	subwf	(_feedback_timer+1)^(0+256),w	;volatile
  7776  0921  1D03               	skipz
  7777  0922  2927               	goto	u3705
  7778  0923  0021               	movlb	1	; select bank1
  7779  0924  0834               	movf	_long_press_limit^(0+128),w
  7780  0925  0022               	movlb	2	; select bank2
  7781  0926  024E               	subwf	_feedback_timer^(0+256),w	;volatile
  7782  0927                     u3705:	
  7783  0927  1C03               	skipc
  7784  0928  2947               	goto	l4055
  7785  0929  0021               	movlb	1	; select bank1
  7786  092A  083B               	movf	_feedback_state^(0+128),w	;volatile
  7787  092B  1D03               	btfss	3,2
  7788  092C  2947               	goto	l4055
  7789  092D  087D               	movf	_doubleTap_state,w	;volatile
  7790  092E  1D03               	btfss	3,2
  7791  092F  2947               	goto	l4055
  7792                           
  7793                           ;SwitchBypass.c: 64: LATBbits.LATB2 = 0;
  7794  0930  0022               	movlb	2	; select bank2
  7795  0931  110D               	bcf	13,2	;volatile
  7796                           
  7797                           ;SwitchBypass.c: 65: if (longTap_start != 1) {
  7798  0932  0021               	movlb	1	; select bank1
  7799  0933  036A               	decf	_longTap_start^(0+128),w
  7800  0934  1903               	btfsc	3,2
  7801  0935  293F               	goto	l4053
  7802                           
  7803                           ;SwitchBypass.c: 66: setFeedbackState(1);
  7804  0936  3001               	movlw	1
  7805  0937  0020               	movlb	0	; select bank0
  7806  0938  00A0               	movwf	setFeedbackState@f_state
  7807  0939  3000               	movlw	0
  7808  093A  00A1               	movwf	setFeedbackState@f_state+1
  7809  093B  319F  2718  3188   	fcall	_setFeedbackState
  7810                           
  7811                           ;SwitchBypass.c: 67: } else {
  7812  093E  2947               	goto	l4055
  7813  093F                     l4053:	
  7814                           
  7815                           ;SwitchBypass.c: 68: setDoublePressState(1);
  7816  093F  3001               	movlw	1
  7817  0940  0020               	movlb	0	; select bank0
  7818  0941  00B2               	movwf	setDoublePressState@f_state
  7819  0942  3000               	movlw	0
  7820  0943  00B3               	movwf	setDoublePressState@f_state+1
  7821  0944  3190  2007  3188   	fcall	_setDoublePressState
  7822  0947                     l4055:	
  7823                           
  7824                           ;SwitchBypass.c: 69: }
  7825                           ;SwitchBypass.c: 70: }
  7826                           ;SwitchBypass.c: 72: if (doubleTap_state == 0 && feedback_state == 0) {
  7827  0947  087D               	movf	_doubleTap_state,w	;volatile
  7828  0948  1D03               	btfss	3,2
  7829  0949  296C               	goto	l1007
  7830  094A  0021               	movlb	1	; select bank1
  7831  094B  083B               	movf	_feedback_state^(0+128),w	;volatile
  7832  094C  1D03               	btfss	3,2
  7833  094D  296C               	goto	l1007
  7834                           
  7835                           ;SwitchBypass.c: 73: if (switchBypass_state == 1) {
  7836  094E  033D               	decf	_switchBypass_state^(0+128),w
  7837  094F  1D03               	btfss	3,2
  7838  0950  295D               	goto	l4067
  7839                           
  7840                           ;SwitchBypass.c: 75: if (switchBypass_up == 1) {
  7841  0951  0022               	movlb	2	; select bank2
  7842  0952  036B               	decf	_switchBypass_up^(0+256),w
  7843  0953  046C               	iorwf	(_switchBypass_up+1)^(0+256),w
  7844  0954  1D03               	btfss	3,2
  7845  0955  296C               	goto	l1007
  7846                           
  7847                           ;SwitchBypass.c: 76: currentBypassState = 1;
  7848  0956  01EE               	clrf	_currentBypassState^(0+256)
  7849  0957  0AEE               	incf	_currentBypassState^(0+256),f
  7850                           
  7851                           ;SwitchBypass.c: 77: switchBypass_toggle = 1;
  7852  0958  3001               	movlw	1
  7853  0959  00E0               	movwf	_switchBypass_toggle^(0+256)
  7854  095A  3000               	movlw	0
  7855  095B  00E1               	movwf	(_switchBypass_toggle^(0+256)+1)
  7856                           
  7857                           ;SwitchBypass.c: 78: }
  7858                           ;SwitchBypass.c: 93: } else {
  7859  095C  296C               	goto	l1007
  7860  095D                     l4067:	
  7861                           
  7862                           ;SwitchBypass.c: 94: if (bypass_turning_on != 1) {
  7863  095D  0021               	movlb	1	; select bank1
  7864  095E  0368               	decf	_bypass_turning_on^(0+128),w
  7865  095F  1903               	btfsc	3,2
  7866  0960  296C               	goto	l1007
  7867                           
  7868                           ;SwitchBypass.c: 96: currentBypassState = 0;
  7869  0961  0022               	movlb	2	; select bank2
  7870  0962  01EE               	clrf	_currentBypassState^(0+256)
  7871                           
  7872                           ;SwitchBypass.c: 98: bypass_turning_on = 1;
  7873  0963  0021               	movlb	1	; select bank1
  7874  0964  01E8               	clrf	_bypass_turning_on^(0+128)
  7875  0965  0AE8               	incf	_bypass_turning_on^(0+128),f
  7876                           
  7877                           ;SwitchBypass.c: 99: switchBypass_toggle = 0;
  7878  0966  0022               	movlb	2	; select bank2
  7879  0967  01E0               	clrf	_switchBypass_toggle^(0+256)
  7880  0968  01E1               	clrf	(_switchBypass_toggle+1)^(0+256)
  7881                           
  7882                           ;SwitchBypass.c: 101: feedback_state = 0;
  7883  0969  0021               	movlb	1	; select bank1
  7884  096A  01BB               	clrf	_feedback_state^(0+128)	;volatile
  7885                           
  7886                           ;SwitchBypass.c: 102: feedback_start = 0;
  7887  096B  01E9               	clrf	_feedback_start^(0+128)
  7888  096C                     l1007:	
  7889                           
  7890                           ;SwitchBypass.c: 103: }
  7891                           ;SwitchBypass.c: 104: }
  7892                           ;SwitchBypass.c: 106: }
  7893                           ;SwitchBypass.c: 107: switchBypass_up = 0;
  7894  096C  0022               	movlb	2	; select bank2
  7895  096D  01EB               	clrf	_switchBypass_up^(0+256)
  7896  096E  01EC               	clrf	(_switchBypass_up+1)^(0+256)
  7897                           
  7898                           ;SwitchBypass.c: 108: } else if (switchBypass_pressed >= 25) {
  7899  096F  0008               	return
  7900  0970                     l4073:	
  7901  0970  085F               	movf	(_switchBypass_pressed+1)^(0+256),w
  7902  0971  3A80               	xorlw	128
  7903  0972  0020               	movlb	0	; select bank0
  7904  0973  00B6               	movwf	??_updateSwitchBypass
  7905  0974  3080               	movlw	128
  7906  0975  0236               	subwf	??_updateSwitchBypass,w
  7907  0976  1D03               	skipz
  7908  0977  297B               	goto	u3795
  7909  0978  3019               	movlw	25
  7910  0979  0022               	movlb	2	; select bank2
  7911  097A  025E               	subwf	_switchBypass_pressed^(0+256),w
  7912  097B                     u3795:	
  7913  097B  1C03               	skipc
  7914  097C  0008               	return
  7915                           
  7916                           ;SwitchBypass.c: 109: if (doubleTap_state == 1) {
  7917  097D  037D               	decf	_doubleTap_state,w	;volatile
  7918  097E  1D03               	btfss	3,2
  7919  097F  2989               	goto	l4079
  7920                           
  7921                           ;SwitchBypass.c: 110: setSwitchBypassState(currentBypassState);
  7922  0980  0022               	movlb	2	; select bank2
  7923  0981  086E               	movf	_currentBypassState^(0+256),w
  7924  0982  0020               	movlb	0	; select bank0
  7925  0983  00B6               	movwf	??_updateSwitchBypass
  7926  0984  01B7               	clrf	??_updateSwitchBypass+1
  7927  0985  0836               	movf	??_updateSwitchBypass,w
  7928  0986  00B2               	movwf	setSwitchBypassState@f_state
  7929  0987  0837               	movf	??_updateSwitchBypass+1,w
  7930  0988  29A3               	goto	L7
  7931  0989                     l4079:	
  7932                           ;SwitchBypass.c: 111: } else if (bypass_turning_on == 1 || feedback_state == 1) {
  7933                           
  7934  0989  0021               	movlb	1	; select bank1
  7935  098A  0368               	decf	_bypass_turning_on^(0+128),w
  7936  098B  1D03               	btfss	3,2
  7937  098C  033B               	decf	_feedback_state^(0+128),w	;volatile
  7938  098D  1D03               	btfss	3,2
  7939  098E  2994               	goto	l4085
  7940                           
  7941                           ;SwitchBypass.c: 112: setSwitchBypassState(1);
  7942  098F  3001               	movlw	1
  7943  0990  0020               	movlb	0	; select bank0
  7944  0991  00B2               	movwf	setSwitchBypassState@f_state
  7945  0992  3000               	movlw	0
  7946  0993  29A3               	goto	L7
  7947  0994                     l4085:	
  7948                           ;SwitchBypass.c: 113: } else if (switchBypass_toggle == 1 && feedback_state == 0 && doub
      +                          leTap_state == 0) {
  7949                           
  7950  0994  0022               	movlb	2	; select bank2
  7951  0995  0360               	decf	_switchBypass_toggle^(0+256),w
  7952  0996  0461               	iorwf	(_switchBypass_toggle+1)^(0+256),w
  7953  0997  1D03               	btfss	3,2
  7954  0998  29A7               	goto	l4093
  7955  0999  0021               	movlb	1	; select bank1
  7956  099A  083B               	movf	_feedback_state^(0+128),w	;volatile
  7957  099B  1D03               	btfss	3,2
  7958  099C  29A7               	goto	l4093
  7959  099D  087D               	movf	_doubleTap_state,w	;volatile
  7960  099E  1D03               	btfss	3,2
  7961  099F  29A7               	goto	l4093
  7962                           
  7963                           ;SwitchBypass.c: 114: setSwitchBypassState(0);
  7964  09A0  3000               	movlw	0
  7965  09A1  0020               	movlb	0	; select bank0
  7966  09A2  00B2               	movwf	setSwitchBypassState@f_state
  7967  09A3                     L7:	
  7968  09A3  00B3               	movwf	setSwitchBypassState@f_state+1
  7969  09A4  3193  23A0  3188   	fcall	_setSwitchBypassState
  7970  09A7                     l4093:	
  7971                           
  7972                           ;SwitchBypass.c: 115: }
  7973                           ;SwitchBypass.c: 118: LATBbits.LATB2 = switchBypass_state;
  7974  09A7  0021               	movlb	1	; select bank1
  7975  09A8  0C3D               	rrf	_switchBypass_state^(0+128),w
  7976  09A9  0022               	movlb	2	; select bank2
  7977  09AA  1C03               	skipc
  7978  09AB  110D               	bcf	13,2	;volatile
  7979  09AC  1803               	skipnc
  7980  09AD  150D               	bsf	13,2	;volatile
  7981                           
  7982                           ;SwitchBypass.c: 120: setFeedbackState(0);
  7983  09AE  3000               	movlw	0
  7984  09AF  0020               	movlb	0	; select bank0
  7985  09B0  00A0               	movwf	setFeedbackState@f_state
  7986  09B1  00A1               	movwf	setFeedbackState@f_state+1
  7987  09B2  319F  2718  3188   	fcall	_setFeedbackState
  7988                           
  7989                           ;SwitchBypass.c: 121: setDoublePressState(0);
  7990  09B5  3000               	movlw	0
  7991  09B6  0020               	movlb	0	; select bank0
  7992  09B7  00B2               	movwf	setDoublePressState@f_state
  7993  09B8  00B3               	movwf	setDoublePressState@f_state+1
  7994  09B9  3190  2007         	fcall	_setDoublePressState
  7995                           
  7996                           ;SwitchBypass.c: 122: feedback_start = 0;
  7997  09BB  0021               	movlb	1	; select bank1
  7998  09BC  01E9               	clrf	_feedback_start^(0+128)
  7999                           
  8000                           ;SwitchBypass.c: 123: bypass_turning_on = 0;
  8001  09BD  01E8               	clrf	_bypass_turning_on^(0+128)
  8002                           
  8003                           ;SwitchBypass.c: 124: switchBypass_toggle = 0;
  8004  09BE  0022               	movlb	2	; select bank2
  8005  09BF  01E0               	clrf	_switchBypass_toggle^(0+256)
  8006  09C0  01E1               	clrf	(_switchBypass_toggle+1)^(0+256)
  8007                           
  8008                           ;SwitchBypass.c: 125: switchBypass_up = 1;
  8009  09C1  3001               	movlw	1
  8010  09C2  00EB               	movwf	_switchBypass_up^(0+256)
  8011  09C3  3000               	movlw	0
  8012  09C4  00EC               	movwf	(_switchBypass_up^(0+256)+1)
  8013                           
  8014                           ;SwitchBypass.c: 127: switchBypass_pressed = 25;
  8015  09C5  3019               	movlw	25
  8016  09C6  00DE               	movwf	_switchBypass_pressed^(0+256)
  8017  09C7  3000               	movlw	0
  8018  09C8  00DF               	movwf	(_switchBypass_pressed^(0+256)+1)
  8019  09C9  0008               	return
  8020  09CA                     __end_of_updateSwitchBypass:	
  8021                           
  8022                           	psect	text5
  8023  1F18                     __ptext5:	
  8024 ;; *************** function _setFeedbackState *****************
  8025 ;; Defined at:
  8026 ;;		line 151 in file "SwitchBypass.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;  f_state         2    0[BANK0 ] int 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;		None
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  1    wreg      void 
  8033 ;; Registers used:
  8034 ;;		wreg, status,0
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8042 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8043 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8044 ;;Total ram usage:        4 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    2
  8047 ;; This function calls:
  8048 ;;		Nothing
  8049 ;; This function is called by:
  8050 ;;		_updateSwitchBypass
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function _setFeedbackState
  8056  1F18                     _setFeedbackState:	
  8057                           
  8058                           ;SwitchBypass.c: 152: if (feedback_state == f_state) {return;}
  8059                           
  8060                           ;incstack = 0
  8061                           ; Regs used in _setFeedbackState: [wreg+status,0]
  8062  1F18  0021               	movlb	1	; select bank1
  8063  1F19  083B               	movf	_feedback_state^(0+128),w	;volatile
  8064  1F1A  0020               	movlb	0	; select bank0
  8065  1F1B  00A2               	movwf	??_setFeedbackState
  8066  1F1C  01A3               	clrf	??_setFeedbackState+1
  8067  1F1D  0821               	movf	setFeedbackState@f_state+1,w
  8068  1F1E  0623               	xorwf	??_setFeedbackState+1,w
  8069  1F1F  1D03               	skipz
  8070  1F20  2F23               	goto	u2775
  8071  1F21  0820               	movf	setFeedbackState@f_state,w
  8072  1F22  0622               	xorwf	??_setFeedbackState,w
  8073  1F23                     u2775:	
  8074  1F23  1903               	btfsc	3,2
  8075  1F24  0008               	return
  8076                           
  8077                           ;SwitchBypass.c: 153: feedback_state = f_state;
  8078  1F25  0820               	movf	setFeedbackState@f_state,w
  8079  1F26  00A2               	movwf	??_setFeedbackState
  8080  1F27  0822               	movf	??_setFeedbackState,w
  8081  1F28  0021               	movlb	1	; select bank1
  8082  1F29  00BB               	movwf	_feedback_state^(0+128)	;volatile
  8083                           
  8084                           ;SwitchBypass.c: 154: LATBbits.LATB3 = f_state;
  8085  1F2A  0020               	movlb	0	; select bank0
  8086  1F2B  0C20               	rrf	setFeedbackState@f_state,w
  8087  1F2C  0022               	movlb	2	; select bank2
  8088  1F2D  1C03               	skipc
  8089  1F2E  118D               	bcf	13,3	;volatile
  8090  1F2F  1803               	skipnc
  8091  1F30  158D               	bsf	13,3	;volatile
  8092  1F31  0008               	return
  8093  1F32                     __end_of_setFeedbackState:	
  8094                           
  8095                           	psect	text6
  8096  1007                     __ptext6:	
  8097 ;; *************** function _setDoublePressState *****************
  8098 ;; Defined at:
  8099 ;;		line 20 in file "preset_programming.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;  f_state         2   18[BANK0 ] int 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0, pclath, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8116 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8117 ;;Total ram usage:        4 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    4
  8120 ;; This function calls:
  8121 ;;		_wait_ms
  8122 ;; This function is called by:
  8123 ;;		_updateSwitchBypass
  8124 ;;		_updateSwitchTap
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           
  8129                           ;psect for function _setDoublePressState
  8130  1007                     _setDoublePressState:	
  8131                           
  8132                           ;preset_programming.c: 21: if (doubleTap_state == f_state) {return;}
  8133                           
  8134                           ;incstack = 0
  8135                           ; Regs used in _setDoublePressState: [wreg+status,2+status,0+pclath+cstack]
  8136  1007  087D               	movf	_doubleTap_state,w	;volatile
  8137  1008  0020               	movlb	0	; select bank0
  8138  1009  00B4               	movwf	??_setDoublePressState
  8139  100A  01B5               	clrf	??_setDoublePressState+1
  8140  100B  0833               	movf	setDoublePressState@f_state+1,w
  8141  100C  0635               	xorwf	??_setDoublePressState+1,w
  8142  100D  1D03               	skipz
  8143  100E  2811               	goto	u2785
  8144  100F  0832               	movf	setDoublePressState@f_state,w
  8145  1010  0634               	xorwf	??_setDoublePressState,w
  8146  1011                     u2785:	
  8147  1011  1903               	btfsc	3,2
  8148  1012  0008               	return
  8149                           
  8150                           ;preset_programming.c: 22: doubleTap_state = f_state;
  8151  1013  0832               	movf	setDoublePressState@f_state,w
  8152  1014  00B4               	movwf	??_setDoublePressState
  8153  1015  0834               	movf	??_setDoublePressState,w
  8154  1016  00FD               	movwf	_doubleTap_state	;volatile
  8155                           
  8156                           ;preset_programming.c: 23: if (f_state == 1) {
  8157  1017  0332               	decf	setDoublePressState@f_state,w
  8158  1018  0433               	iorwf	setDoublePressState@f_state+1,w
  8159  1019  1D03               	btfss	3,2
  8160  101A  281E               	goto	l3607
  8161                           
  8162                           ;preset_programming.c: 24: LATBbits.LATB4 = 0;
  8163  101B  0022               	movlb	2	; select bank2
  8164  101C  120D               	bcf	13,4	;volatile
  8165                           
  8166                           ;preset_programming.c: 25: LATBbits.LATB2 = 0;
  8167  101D  110D               	bcf	13,2	;volatile
  8168  101E                     l3607:	
  8169                           
  8170                           ;preset_programming.c: 26: }
  8171                           ;preset_programming.c: 28: LATBbits.LATB1 = f_state;
  8172  101E  0020               	movlb	0	; select bank0
  8173  101F  0C32               	rrf	setDoublePressState@f_state,w
  8174  1020  0022               	movlb	2	; select bank2
  8175  1021  1C03               	skipc
  8176  1022  108D               	bcf	13,1	;volatile
  8177  1023  1803               	skipnc
  8178  1024  148D               	bsf	13,1	;volatile
  8179                           
  8180                           ;preset_programming.c: 29: LATBbits.LATB0 = f_state;
  8181  1025  0020               	movlb	0	; select bank0
  8182  1026  0C32               	rrf	setDoublePressState@f_state,w
  8183  1027  0022               	movlb	2	; select bank2
  8184  1028  1C03               	skipc
  8185  1029  100D               	bcf	13,0	;volatile
  8186  102A  1803               	skipnc
  8187  102B  140D               	bsf	13,0	;volatile
  8188                           
  8189                           ;preset_programming.c: 31: wait_ms(20);
  8190  102C  3014               	movlw	20
  8191  102D  0020               	movlb	0	; select bank0
  8192  102E  00AC               	movwf	wait_ms@timeSec
  8193  102F  3000               	movlw	0
  8194  1030  00AD               	movwf	wait_ms@timeSec+1
  8195  1031  3190  20C5         	fcall	_wait_ms
  8196  1033  0008               	return
  8197  1034                     __end_of_setDoublePressState:	
  8198                           
  8199                           	psect	text7
  8200  1FD5                     __ptext7:	
  8201 ;; *************** function _showBootSequence *****************
  8202 ;; Defined at:
  8203 ;;		line 86 in file "LEDs.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;		None
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;		None
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  1    wreg      void 
  8210 ;; Registers used:
  8211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8220 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8221 ;;Total ram usage:        1 bytes
  8222 ;; Hardware stack levels used:    1
  8223 ;; Hardware stack levels required when called:    5
  8224 ;; This function calls:
  8225 ;;		_getCurrentLEDState
  8226 ;;		_restoreLEDState
  8227 ;;		_solidring_tactiles
  8228 ;;		_star_tactiles
  8229 ;; This function is called by:
  8230 ;;		_main
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           
  8235                           ;psect for function _showBootSequence
  8236  1FD5                     _showBootSequence:	
  8237                           
  8238                           ;LEDs.c: 87: getCurrentLEDState();
  8239                           
  8240                           ;incstack = 0
  8241                           ; Regs used in _showBootSequence: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8242  1FD5  3187  27EC  319F   	fcall	_getCurrentLEDState
  8243                           
  8244                           ;LEDs.c: 88: suspend_blink = 1;
  8245  1FD8  3001               	movlw	1
  8246  1FD9  0020               	movlb	0	; select bank0
  8247  1FDA  00B9               	movwf	??_showBootSequence
  8248  1FDB  0839               	movf	??_showBootSequence,w
  8249  1FDC  0021               	movlb	1	; select bank1
  8250  1FDD  00ED               	movwf	_suspend_blink^(0+128)	;volatile
  8251                           
  8252                           ;LEDs.c: 90: LATBbits.LATB4 = 0;
  8253  1FDE  0022               	movlb	2	; select bank2
  8254  1FDF  120D               	bcf	13,4	;volatile
  8255                           
  8256                           ;LEDs.c: 91: LATBbits.LATB2 = 0;
  8257  1FE0  110D               	bcf	13,2	;volatile
  8258                           
  8259                           ;LEDs.c: 92: LATBbits.LATB5 = 0;
  8260  1FE1  128D               	bcf	13,5	;volatile
  8261                           
  8262                           ;LEDs.c: 93: LATBbits.LATB3 = 0;
  8263  1FE2  118D               	bcf	13,3	;volatile
  8264                           
  8265                           ;LEDs.c: 94: LATBbits.LATB0 = 0;
  8266  1FE3  100D               	bcf	13,0	;volatile
  8267                           
  8268                           ;LEDs.c: 95: LATBbits.LATB1 = 0;
  8269  1FE4  108D               	bcf	13,1	;volatile
  8270                           
  8271                           ;LEDs.c: 113: star_tactiles(0);
  8272  1FE5  3000               	movlw	0
  8273  1FE6  3195  25E5  319F   	fcall	_star_tactiles
  8274                           
  8275                           ;LEDs.c: 114: star_tactiles(0);
  8276  1FE9  3000               	movlw	0
  8277  1FEA  3195  25E5  319F   	fcall	_star_tactiles
  8278                           
  8279                           ;LEDs.c: 115: star_tactiles(1);
  8280  1FED  3001               	movlw	1
  8281  1FEE  3195  25E5  319F   	fcall	_star_tactiles
  8282                           
  8283                           ;LEDs.c: 116: star_tactiles(1);
  8284  1FF1  3001               	movlw	1
  8285  1FF2  3195  25E5  319F   	fcall	_star_tactiles
  8286                           
  8287                           ;LEDs.c: 118: solidring_tactiles();
  8288  1FF5  3192  2292  319F   	fcall	_solidring_tactiles
  8289                           
  8290                           ;LEDs.c: 119: solidring_tactiles();
  8291  1FF8  3192  2292  319F   	fcall	_solidring_tactiles
  8292                           
  8293                           ;LEDs.c: 122: suspend_blink = 0;
  8294  1FFB  0021               	movlb	1	; select bank1
  8295  1FFC  01ED               	clrf	_suspend_blink^(0+128)	;volatile
  8296                           
  8297                           ;LEDs.c: 123: restoreLEDState();
  8298  1FFD  319E  26D2         	fcall	_restoreLEDState
  8299  1FFF  0008               	return
  8300  2000                     __end_of_showBootSequence:	
  8301                           
  8302                           	psect	text8
  8303  15E5                     __ptext8:	
  8304 ;; *************** function _star_tactiles *****************
  8305 ;; Defined at:
  8306 ;;		line 194 in file "LEDs.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;  reverse         1    wreg     unsigned char 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  reverse         1   20[BANK0 ] unsigned char 
  8311 ;;  iLed            2   23[BANK0 ] int 
  8312 ;;  iLed            2   21[BANK0 ] int 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8323 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8324 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8325 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8326 ;;Total ram usage:        7 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    4
  8329 ;; This function calls:
  8330 ;;		_set_leds_bottom
  8331 ;;		_set_leds_top
  8332 ;;		_wait_ms
  8333 ;; This function is called by:
  8334 ;;		_showBootSequence
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           
  8339                           ;psect for function _star_tactiles
  8340  15E5                     _star_tactiles:	
  8341                           
  8342                           ;incstack = 0
  8343                           ; Regs used in _star_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8344                           ;star_tactiles@reverse stored from wreg
  8345  15E5  0020               	movlb	0	; select bank0
  8346  15E6  00B4               	movwf	star_tactiles@reverse
  8347                           
  8348                           ;LEDs.c: 195: if (reverse == 1) {
  8349  15E7  0334               	decf	star_tactiles@reverse,w
  8350  15E8  1D03               	btfss	3,2
  8351  15E9  2E1A               	goto	l3533
  8352                           
  8353                           ;LEDs.c: 196: for (int iLed = 5; iLed > -1; iLed--) {
  8354  15EA  3005               	movlw	5
  8355  15EB  00B5               	movwf	star_tactiles@iLed
  8356  15EC  3000               	movlw	0
  8357  15ED  00B6               	movwf	star_tactiles@iLed+1
  8358  15EE                     L8:	
  8359  15EE  1BB6               	btfsc	star_tactiles@iLed+1,7
  8360  15EF  0008               	return
  8361                           
  8362                           ;LEDs.c: 197: set_leds_top(iLed, 1);
  8363  15F0  0836               	movf	star_tactiles@iLed+1,w
  8364  15F1  00A1               	movwf	set_leds_top@x+1
  8365  15F2  0835               	movf	star_tactiles@iLed,w
  8366  15F3  00A0               	movwf	set_leds_top@x
  8367  15F4  3001               	movlw	1
  8368  15F5  00A2               	movwf	set_leds_top@ledState
  8369  15F6  3000               	movlw	0
  8370  15F7  00A3               	movwf	set_leds_top@ledState+1
  8371  15F8  3195  252C  3195   	fcall	_set_leds_top
  8372                           
  8373                           ;LEDs.c: 198: set_leds_bottom(6 - iLed);
  8374  15FB  0020               	movlb	0	; select bank0
  8375  15FC  0935               	comf	star_tactiles@iLed,w
  8376  15FD  00B2               	movwf	??_star_tactiles
  8377  15FE  0936               	comf	star_tactiles@iLed+1,w
  8378  15FF  00B3               	movwf	??_star_tactiles+1
  8379  1600  0AB2               	incf	??_star_tactiles,f
  8380  1601  1903               	skipnz
  8381  1602  0AB3               	incf	??_star_tactiles+1,f
  8382  1603  0832               	movf	??_star_tactiles,w
  8383  1604  3E06               	addlw	6
  8384  1605  00A0               	movwf	set_leds_bottom@x
  8385  1606  3000               	movlw	0
  8386  1607  3D33               	addwfc	??_star_tactiles+1,w
  8387  1608  00A1               	movwf	set_leds_bottom@x+1
  8388  1609  3192  2219  3195   	fcall	_set_leds_bottom
  8389                           
  8390                           ;LEDs.c: 199: wait_ms(5);
  8391  160C  3005               	movlw	5
  8392  160D  0020               	movlb	0	; select bank0
  8393  160E  00AC               	movwf	wait_ms@timeSec
  8394  160F  3000               	movlw	0
  8395  1610  00AD               	movwf	wait_ms@timeSec+1
  8396  1611  3190  20C5  3195   	fcall	_wait_ms
  8397  1614  30FF               	movlw	255
  8398  1615  0020               	movlb	0	; select bank0
  8399  1616  07B5               	addwf	star_tactiles@iLed,f
  8400  1617  30FF               	movlw	255
  8401  1618  3DB6               	addwfc	star_tactiles@iLed+1,f
  8402  1619  2DEE               	goto	L8
  8403  161A                     l3533:	
  8404                           ;LEDs.c: 200: }
  8405                           ;LEDs.c: 201: } else {
  8406                           
  8407                           
  8408                           ;LEDs.c: 202: for (int iLed = 1; iLed < 7; iLed++) {
  8409  161A  3001               	movlw	1
  8410  161B  00B7               	movwf	star_tactiles@iLed_1411
  8411  161C  3000               	movlw	0
  8412  161D  00B8               	movwf	star_tactiles@iLed_1411+1
  8413  161E                     L9:	
  8414  161E  0838               	movf	star_tactiles@iLed_1411+1,w
  8415  161F  3A80               	xorlw	128
  8416  1620  00B2               	movwf	??_star_tactiles
  8417  1621  3080               	movlw	128
  8418  1622  0232               	subwf	??_star_tactiles,w
  8419  1623  1D03               	skipz
  8420  1624  2E27               	goto	u2725
  8421  1625  3007               	movlw	7
  8422  1626  0237               	subwf	star_tactiles@iLed_1411,w
  8423  1627                     u2725:	
  8424  1627  1803               	btfsc	3,0
  8425  1628  0008               	return
  8426                           
  8427                           ;LEDs.c: 203: set_leds_top(iLed, 1);
  8428  1629  0020               	movlb	0	; select bank0
  8429  162A  0838               	movf	star_tactiles@iLed_1411+1,w
  8430  162B  00A1               	movwf	set_leds_top@x+1
  8431  162C  0837               	movf	star_tactiles@iLed_1411,w
  8432  162D  00A0               	movwf	set_leds_top@x
  8433  162E  3001               	movlw	1
  8434  162F  00A2               	movwf	set_leds_top@ledState
  8435  1630  3000               	movlw	0
  8436  1631  00A3               	movwf	set_leds_top@ledState+1
  8437  1632  3195  252C  3195   	fcall	_set_leds_top
  8438                           
  8439                           ;LEDs.c: 204: set_leds_bottom(6 - iLed);
  8440  1635  0020               	movlb	0	; select bank0
  8441  1636  0937               	comf	star_tactiles@iLed_1411,w
  8442  1637  00B2               	movwf	??_star_tactiles
  8443  1638  0938               	comf	star_tactiles@iLed_1411+1,w
  8444  1639  00B3               	movwf	??_star_tactiles+1
  8445  163A  0AB2               	incf	??_star_tactiles,f
  8446  163B  1903               	skipnz
  8447  163C  0AB3               	incf	??_star_tactiles+1,f
  8448  163D  0832               	movf	??_star_tactiles,w
  8449  163E  3E06               	addlw	6
  8450  163F  00A0               	movwf	set_leds_bottom@x
  8451  1640  3000               	movlw	0
  8452  1641  3D33               	addwfc	??_star_tactiles+1,w
  8453  1642  00A1               	movwf	set_leds_bottom@x+1
  8454  1643  3192  2219  3195   	fcall	_set_leds_bottom
  8455                           
  8456                           ;LEDs.c: 205: wait_ms(5);
  8457  1646  3005               	movlw	5
  8458  1647  0020               	movlb	0	; select bank0
  8459  1648  00AC               	movwf	wait_ms@timeSec
  8460  1649  3000               	movlw	0
  8461  164A  00AD               	movwf	wait_ms@timeSec+1
  8462  164B  3190  20C5  3195   	fcall	_wait_ms
  8463  164E  3001               	movlw	1
  8464  164F  0020               	movlb	0	; select bank0
  8465  1650  07B7               	addwf	star_tactiles@iLed_1411,f
  8466  1651  3000               	movlw	0
  8467  1652  3DB8               	addwfc	star_tactiles@iLed_1411+1,f
  8468  1653  2E1E               	goto	L9
  8469  1654                     __end_of_star_tactiles:	
  8470                           
  8471                           	psect	text9
  8472  1292                     __ptext9:	
  8473 ;; *************** function _solidring_tactiles *****************
  8474 ;; Defined at:
  8475 ;;		line 223 in file "LEDs.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;		None
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;  ring_delay      1   20[BANK0 ] unsigned char 
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  1    wreg      void 
  8482 ;; Registers used:
  8483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8492 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8493 ;;Total ram usage:        3 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:    4
  8496 ;; This function calls:
  8497 ;;		_set_leds_bottom
  8498 ;;		_set_leds_top
  8499 ;;		_wait_ms
  8500 ;; This function is called by:
  8501 ;;		_showBootSequence
  8502 ;;		_showSave
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           
  8507                           ;psect for function _solidring_tactiles
  8508  1292                     _solidring_tactiles:	
  8509                           
  8510                           ;LEDs.c: 224: uint8_t ring_delay = 30;
  8511                           
  8512                           ;incstack = 0
  8513                           ; Regs used in _solidring_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8514  1292  301E               	movlw	30
  8515  1293  0020               	movlb	0	; select bank0
  8516  1294  00B2               	movwf	??_solidring_tactiles
  8517  1295  0832               	movf	??_solidring_tactiles,w
  8518  1296  00B4               	movwf	solidring_tactiles@ring_delay
  8519                           
  8520                           ;LEDs.c: 225: set_leds_top(100, 1);
  8521  1297  3064               	movlw	100
  8522  1298  00A0               	movwf	set_leds_top@x
  8523  1299  3000               	movlw	0
  8524  129A  00A1               	movwf	set_leds_top@x+1
  8525  129B  3001               	movlw	1
  8526  129C  00A2               	movwf	set_leds_top@ledState
  8527  129D  3000               	movlw	0
  8528  129E  00A3               	movwf	set_leds_top@ledState+1
  8529  129F  3195  252C  3192   	fcall	_set_leds_top
  8530                           
  8531                           ;LEDs.c: 226: set_leds_bottom(100);
  8532  12A2  3064               	movlw	100
  8533  12A3  0020               	movlb	0	; select bank0
  8534  12A4  00A0               	movwf	set_leds_bottom@x
  8535  12A5  3000               	movlw	0
  8536  12A6  00A1               	movwf	set_leds_bottom@x+1
  8537  12A7  3192  2219  3192   	fcall	_set_leds_bottom
  8538                           
  8539                           ;LEDs.c: 227: wait_ms(ring_delay);
  8540  12AA  0020               	movlb	0	; select bank0
  8541  12AB  0834               	movf	solidring_tactiles@ring_delay,w
  8542  12AC  00B2               	movwf	??_solidring_tactiles
  8543  12AD  01B3               	clrf	??_solidring_tactiles+1
  8544  12AE  0832               	movf	??_solidring_tactiles,w
  8545  12AF  00AC               	movwf	wait_ms@timeSec
  8546  12B0  0833               	movf	??_solidring_tactiles+1,w
  8547  12B1  00AD               	movwf	wait_ms@timeSec+1
  8548  12B2  3190  20C5  3192   	fcall	_wait_ms
  8549                           
  8550                           ;LEDs.c: 229: set_leds_top(0, 1);
  8551  12B5  3000               	movlw	0
  8552  12B6  0020               	movlb	0	; select bank0
  8553  12B7  00A0               	movwf	set_leds_top@x
  8554  12B8  00A1               	movwf	set_leds_top@x+1
  8555  12B9  3001               	movlw	1
  8556  12BA  00A2               	movwf	set_leds_top@ledState
  8557  12BB  3000               	movlw	0
  8558  12BC  00A3               	movwf	set_leds_top@ledState+1
  8559  12BD  3195  252C  3192   	fcall	_set_leds_top
  8560                           
  8561                           ;LEDs.c: 230: set_leds_bottom(0);
  8562  12C0  3000               	movlw	0
  8563  12C1  0020               	movlb	0	; select bank0
  8564  12C2  00A0               	movwf	set_leds_bottom@x
  8565  12C3  00A1               	movwf	set_leds_bottom@x+1
  8566  12C4  3192  2219  3192   	fcall	_set_leds_bottom
  8567                           
  8568                           ;LEDs.c: 231: wait_ms(ring_delay);
  8569  12C7  0020               	movlb	0	; select bank0
  8570  12C8  0834               	movf	solidring_tactiles@ring_delay,w
  8571  12C9  00B2               	movwf	??_solidring_tactiles
  8572  12CA  01B3               	clrf	??_solidring_tactiles+1
  8573  12CB  0832               	movf	??_solidring_tactiles,w
  8574  12CC  00AC               	movwf	wait_ms@timeSec
  8575  12CD  0833               	movf	??_solidring_tactiles+1,w
  8576  12CE  00AD               	movwf	wait_ms@timeSec+1
  8577  12CF  3190  20C5         	fcall	_wait_ms
  8578  12D1  0008               	return
  8579  12D2                     __end_of_solidring_tactiles:	
  8580                           
  8581                           	psect	text10
  8582  1ED2                     __ptext10:	
  8583 ;; *************** function _restoreLEDState *****************
  8584 ;; Defined at:
  8585 ;;		line 89 in file "state_manager.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;		None
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1    wreg      void 
  8592 ;; Registers used:
  8593 ;;		wreg, status,0
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8603 ;;Total ram usage:        0 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    2
  8606 ;; This function calls:
  8607 ;;		Nothing
  8608 ;; This function is called by:
  8609 ;;		_showBootSequence
  8610 ;;		_showError_Alternating
  8611 ;;		_show_error
  8612 ;;		_show_cancel
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           
  8617                           ;psect for function _restoreLEDState
  8618  1ED2                     _restoreLEDState:	
  8619                           
  8620                           ;state_manager.c: 90: LATBbits.LATB4 = ledState.tap_A;
  8621                           
  8622                           ;incstack = 0
  8623                           ; Regs used in _restoreLEDState: [wreg+status,0]
  8624  1ED2  0022               	movlb	2	; select bank2
  8625  1ED3  0C34               	rrf	_ledState^(0+256),w
  8626  1ED4  1C03               	skipc
  8627  1ED5  120D               	bcf	13,4	;volatile
  8628  1ED6  1803               	skipnc
  8629  1ED7  160D               	bsf	13,4	;volatile
  8630                           
  8631                           ;state_manager.c: 91: LATBbits.LATB2 = ledState.bypass_A;
  8632  1ED8  0C36               	rrf	(_ledState^(0+256)+2),w
  8633  1ED9  1C03               	skipc
  8634  1EDA  110D               	bcf	13,2	;volatile
  8635  1EDB  1803               	skipnc
  8636  1EDC  150D               	bsf	13,2	;volatile
  8637                           
  8638                           ;state_manager.c: 92: LATBbits.LATB5 = ledState.tap_B;
  8639  1EDD  0C35               	rrf	(_ledState^(0+256)+1),w
  8640  1EDE  1C03               	skipc
  8641  1EDF  128D               	bcf	13,5	;volatile
  8642  1EE0  1803               	skipnc
  8643  1EE1  168D               	bsf	13,5	;volatile
  8644                           
  8645                           ;state_manager.c: 93: LATBbits.LATB3 = ledState.bypass_B;
  8646  1EE2  0C37               	rrf	(_ledState^(0+256)+3),w
  8647  1EE3  1C03               	skipc
  8648  1EE4  118D               	bcf	13,3	;volatile
  8649  1EE5  1803               	skipnc
  8650  1EE6  158D               	bsf	13,3	;volatile
  8651  1EE7  0008               	return
  8652  1EE8                     __end_of_restoreLEDState:	
  8653                           
  8654                           	psect	text11
  8655  07EC                     __ptext11:	
  8656 ;; *************** function _getCurrentLEDState *****************
  8657 ;; Defined at:
  8658 ;;		line 83 in file "state_manager.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;		None
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;		None
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      void 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8676 ;;Total ram usage:        0 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    2
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_showBootSequence
  8683 ;;		_showError_Alternating
  8684 ;;		_show_error
  8685 ;;		_show_cancel
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           
  8690                           ;psect for function _getCurrentLEDState
  8691  07EC                     _getCurrentLEDState:	
  8692                           
  8693                           ;state_manager.c: 84: ledState.tap_A = LATBbits.LATB4;
  8694                           
  8695                           ;incstack = 0
  8696                           ; Regs used in _getCurrentLEDState: [wreg+status,2]
  8697  07EC  3000               	movlw	0
  8698  07ED  0022               	movlb	2	; select bank2
  8699  07EE  1A0D               	btfsc	13,4	;volatile
  8700  07EF  3001               	movlw	1
  8701  07F0  00B4               	movwf	_ledState^(0+256)
  8702                           
  8703                           ;state_manager.c: 85: ledState.bypass_A = LATBbits.LATB2 ;
  8704  07F1  3000               	movlw	0
  8705  07F2  190D               	btfsc	13,2	;volatile
  8706  07F3  3001               	movlw	1
  8707  07F4  00B6               	movwf	(_ledState^(0+256)+2)
  8708                           
  8709                           ;state_manager.c: 86: ledState.tap_B = LATBbits.LATB5 ;
  8710  07F5  3000               	movlw	0
  8711  07F6  1A8D               	btfsc	13,5	;volatile
  8712  07F7  3001               	movlw	1
  8713  07F8  00B5               	movwf	(_ledState^(0+256)+1)
  8714                           
  8715                           ;state_manager.c: 87: ledState.bypass_B = LATBbits.LATB3 ;
  8716  07F9  3000               	movlw	0
  8717  07FA  198D               	btfsc	13,3	;volatile
  8718  07FB  3001               	movlw	1
  8719  07FC  00B7               	movwf	(_ledState^(0+256)+3)
  8720  07FD  0008               	return
  8721  07FE                     __end_of_getCurrentLEDState:	
  8722                           
  8723                           	psect	text12
  8724  0AC0                     __ptext12:	
  8725 ;; *************** function _set_subdivision *****************
  8726 ;; Defined at:
  8727 ;;		line 77 in file "user.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  x               2    6[BANK1 ] int 
  8730 ;;  y               2    8[BANK1 ] int 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;		None
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  2    6[BANK1 ] int 
  8735 ;; Registers used:
  8736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8742 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8745 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8746 ;;Total ram usage:        4 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; Hardware stack levels required when called:    4
  8749 ;; This function calls:
  8750 ;;		___awtoft
  8751 ;;		___ftmul
  8752 ;;		___fttol
  8753 ;; This function is called by:
  8754 ;;		_main
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           
  8759                           ;psect for function _set_subdivision
  8760  0AC0                     _set_subdivision:	
  8761                           
  8762                           ;user.c: 80: switch (y) {
  8763                           
  8764                           ;incstack = 0
  8765                           ; Regs used in _set_subdivision: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8766  0AC0  2B9E               	goto	l4245
  8767  0AC1                     l4233:	
  8768                           ;user.c: 81: case 1:
  8769                           
  8770                           
  8771                           ;user.c: 82: x = x * .75;
  8772  0AC1  0021               	movlb	1	; select bank1
  8773  0AC2  0846               	movf	(set_subdivision@x+1)^(0+128),w
  8774  0AC3  0020               	movlb	0	; select bank0
  8775  0AC4  00A9               	movwf	___awtoft@c+1
  8776  0AC5  0021               	movlb	1	; select bank1
  8777  0AC6  0845               	movf	set_subdivision@x^(0+128),w
  8778  0AC7  0020               	movlb	0	; select bank0
  8779  0AC8  00A8               	movwf	___awtoft@c
  8780  0AC9  319F  278D  318A   	fcall	___awtoft
  8781  0ACC  0020               	movlb	0	; select bank0
  8782  0ACD  0828               	movf	?___awtoft,w
  8783  0ACE  00B8               	movwf	___ftmul@f2
  8784  0ACF  0829               	movf	?___awtoft+1,w
  8785  0AD0  00B9               	movwf	___ftmul@f2+1
  8786  0AD1  082A               	movf	?___awtoft+2,w
  8787  0AD2  00BA               	movwf	___ftmul@f2+2
  8788  0AD3  3000               	movlw	0
  8789  0AD4  00B5               	movwf	___ftmul@f1
  8790  0AD5  3040               	movlw	64
  8791  0AD6  00B6               	movwf	___ftmul@f1+1
  8792  0AD7  303F               	movlw	63
  8793  0AD8  00B7               	movwf	___ftmul@f1+2
  8794  0AD9  3187  2738  318A   	fcall	___ftmul
  8795  0ADC  0020               	movlb	0	; select bank0
  8796  0ADD  0835               	movf	?___ftmul,w
  8797  0ADE  00E7               	movwf	___fttol@f1
  8798  0ADF  0836               	movf	?___ftmul+1,w
  8799  0AE0  00E8               	movwf	___fttol@f1+1
  8800  0AE1  0837               	movf	?___ftmul+2,w
  8801  0AE2  00E9               	movwf	___fttol@f1+2
  8802  0AE3  3197  2761         	fcall	___fttol
  8803  0AE5  0020               	movlb	0	; select bank0
  8804  0AE6  0868               	movf	?___fttol+1,w
  8805  0AE7  0021               	movlb	1	; select bank1
  8806  0AE8  00C6               	movwf	(set_subdivision@x+1)^(0+128)
  8807  0AE9  0020               	movlb	0	; select bank0
  8808  0AEA  0867               	movf	?___fttol,w
  8809  0AEB  0021               	movlb	1	; select bank1
  8810  0AEC  00C5               	movwf	set_subdivision@x^(0+128)
  8811                           
  8812                           ;user.c: 83: break;
  8813  0AED  0008               	return
  8814  0AEE                     l4235:	
  8815                           ;user.c: 84: case 2:
  8816                           
  8817                           
  8818                           ;user.c: 85: x = x * .66666;
  8819  0AEE  0846               	movf	(set_subdivision@x+1)^(0+128),w
  8820  0AEF  0020               	movlb	0	; select bank0
  8821  0AF0  00A9               	movwf	___awtoft@c+1
  8822  0AF1  0021               	movlb	1	; select bank1
  8823  0AF2  0845               	movf	set_subdivision@x^(0+128),w
  8824  0AF3  0020               	movlb	0	; select bank0
  8825  0AF4  00A8               	movwf	___awtoft@c
  8826  0AF5  319F  278D  318A   	fcall	___awtoft
  8827  0AF8  0020               	movlb	0	; select bank0
  8828  0AF9  0828               	movf	?___awtoft,w
  8829  0AFA  00B8               	movwf	___ftmul@f2
  8830  0AFB  0829               	movf	?___awtoft+1,w
  8831  0AFC  00B9               	movwf	___ftmul@f2+1
  8832  0AFD  082A               	movf	?___awtoft+2,w
  8833  0AFE  00BA               	movwf	___ftmul@f2+2
  8834  0AFF  30AA               	movlw	170
  8835  0B00  00B5               	movwf	___ftmul@f1
  8836  0B01  302A               	movlw	42
  8837  0B02  00B6               	movwf	___ftmul@f1+1
  8838  0B03  303F               	movlw	63
  8839  0B04  00B7               	movwf	___ftmul@f1+2
  8840  0B05  3187  2738  318A   	fcall	___ftmul
  8841  0B08  0020               	movlb	0	; select bank0
  8842  0B09  0835               	movf	?___ftmul,w
  8843  0B0A  00E7               	movwf	___fttol@f1
  8844  0B0B  0836               	movf	?___ftmul+1,w
  8845  0B0C  00E8               	movwf	___fttol@f1+1
  8846  0B0D  0837               	movf	?___ftmul+2,w
  8847  0B0E  00E9               	movwf	___fttol@f1+2
  8848  0B0F  3197  2761         	fcall	___fttol
  8849  0B11  0020               	movlb	0	; select bank0
  8850  0B12  0868               	movf	?___fttol+1,w
  8851  0B13  0021               	movlb	1	; select bank1
  8852  0B14  00C6               	movwf	(set_subdivision@x+1)^(0+128)
  8853  0B15  0020               	movlb	0	; select bank0
  8854  0B16  0867               	movf	?___fttol,w
  8855  0B17  0021               	movlb	1	; select bank1
  8856  0B18  00C5               	movwf	set_subdivision@x^(0+128)
  8857                           
  8858                           ;user.c: 86: break;
  8859  0B19  0008               	return
  8860  0B1A                     l4237:	
  8861                           ;user.c: 87: case 3:
  8862                           
  8863                           
  8864                           ;user.c: 88: x = x * .5;
  8865  0B1A  0846               	movf	(set_subdivision@x+1)^(0+128),w
  8866  0B1B  0020               	movlb	0	; select bank0
  8867  0B1C  00A9               	movwf	___awtoft@c+1
  8868  0B1D  0021               	movlb	1	; select bank1
  8869  0B1E  0845               	movf	set_subdivision@x^(0+128),w
  8870  0B1F  0020               	movlb	0	; select bank0
  8871  0B20  00A8               	movwf	___awtoft@c
  8872  0B21  319F  278D  318A   	fcall	___awtoft
  8873  0B24  0020               	movlb	0	; select bank0
  8874  0B25  0828               	movf	?___awtoft,w
  8875  0B26  00B8               	movwf	___ftmul@f2
  8876  0B27  0829               	movf	?___awtoft+1,w
  8877  0B28  00B9               	movwf	___ftmul@f2+1
  8878  0B29  082A               	movf	?___awtoft+2,w
  8879  0B2A  00BA               	movwf	___ftmul@f2+2
  8880  0B2B  3000               	movlw	0
  8881  0B2C  00B5               	movwf	___ftmul@f1
  8882  0B2D  3000               	movlw	0
  8883  0B2E  00B6               	movwf	___ftmul@f1+1
  8884  0B2F  303F               	movlw	63
  8885  0B30  00B7               	movwf	___ftmul@f1+2
  8886  0B31  3187  2738  318A   	fcall	___ftmul
  8887  0B34  0020               	movlb	0	; select bank0
  8888  0B35  0835               	movf	?___ftmul,w
  8889  0B36  00E7               	movwf	___fttol@f1
  8890  0B37  0836               	movf	?___ftmul+1,w
  8891  0B38  00E8               	movwf	___fttol@f1+1
  8892  0B39  0837               	movf	?___ftmul+2,w
  8893  0B3A  00E9               	movwf	___fttol@f1+2
  8894  0B3B  3197  2761         	fcall	___fttol
  8895  0B3D  0020               	movlb	0	; select bank0
  8896  0B3E  0868               	movf	?___fttol+1,w
  8897  0B3F  0021               	movlb	1	; select bank1
  8898  0B40  00C6               	movwf	(set_subdivision@x+1)^(0+128)
  8899  0B41  0020               	movlb	0	; select bank0
  8900  0B42  0867               	movf	?___fttol,w
  8901  0B43  0021               	movlb	1	; select bank1
  8902  0B44  00C5               	movwf	set_subdivision@x^(0+128)
  8903                           
  8904                           ;user.c: 89: break;
  8905  0B45  0008               	return
  8906  0B46                     l4239:	
  8907                           ;user.c: 90: case 4:
  8908                           
  8909                           
  8910                           ;user.c: 91: x = x * .3333;
  8911  0B46  0846               	movf	(set_subdivision@x+1)^(0+128),w
  8912  0B47  0020               	movlb	0	; select bank0
  8913  0B48  00A9               	movwf	___awtoft@c+1
  8914  0B49  0021               	movlb	1	; select bank1
  8915  0B4A  0845               	movf	set_subdivision@x^(0+128),w
  8916  0B4B  0020               	movlb	0	; select bank0
  8917  0B4C  00A8               	movwf	___awtoft@c
  8918  0B4D  319F  278D  318A   	fcall	___awtoft
  8919  0B50  0020               	movlb	0	; select bank0
  8920  0B51  0828               	movf	?___awtoft,w
  8921  0B52  00B8               	movwf	___ftmul@f2
  8922  0B53  0829               	movf	?___awtoft+1,w
  8923  0B54  00B9               	movwf	___ftmul@f2+1
  8924  0B55  082A               	movf	?___awtoft+2,w
  8925  0B56  00BA               	movwf	___ftmul@f2+2
  8926  0B57  30A6               	movlw	166
  8927  0B58  00B5               	movwf	___ftmul@f1
  8928  0B59  30AA               	movlw	170
  8929  0B5A  00B6               	movwf	___ftmul@f1+1
  8930  0B5B  303E               	movlw	62
  8931  0B5C  00B7               	movwf	___ftmul@f1+2
  8932  0B5D  3187  2738  318A   	fcall	___ftmul
  8933  0B60  0020               	movlb	0	; select bank0
  8934  0B61  0835               	movf	?___ftmul,w
  8935  0B62  00E7               	movwf	___fttol@f1
  8936  0B63  0836               	movf	?___ftmul+1,w
  8937  0B64  00E8               	movwf	___fttol@f1+1
  8938  0B65  0837               	movf	?___ftmul+2,w
  8939  0B66  00E9               	movwf	___fttol@f1+2
  8940  0B67  3197  2761         	fcall	___fttol
  8941  0B69  0020               	movlb	0	; select bank0
  8942  0B6A  0868               	movf	?___fttol+1,w
  8943  0B6B  0021               	movlb	1	; select bank1
  8944  0B6C  00C6               	movwf	(set_subdivision@x+1)^(0+128)
  8945  0B6D  0020               	movlb	0	; select bank0
  8946  0B6E  0867               	movf	?___fttol,w
  8947  0B6F  0021               	movlb	1	; select bank1
  8948  0B70  00C5               	movwf	set_subdivision@x^(0+128)
  8949                           
  8950                           ;user.c: 92: break;
  8951  0B71  0008               	return
  8952  0B72                     l4241:	
  8953                           ;user.c: 93: case 5:
  8954                           
  8955                           
  8956                           ;user.c: 94: x = x * .25;
  8957  0B72  0846               	movf	(set_subdivision@x+1)^(0+128),w
  8958  0B73  0020               	movlb	0	; select bank0
  8959  0B74  00A9               	movwf	___awtoft@c+1
  8960  0B75  0021               	movlb	1	; select bank1
  8961  0B76  0845               	movf	set_subdivision@x^(0+128),w
  8962  0B77  0020               	movlb	0	; select bank0
  8963  0B78  00A8               	movwf	___awtoft@c
  8964  0B79  319F  278D  318A   	fcall	___awtoft
  8965  0B7C  0020               	movlb	0	; select bank0
  8966  0B7D  0828               	movf	?___awtoft,w
  8967  0B7E  00B8               	movwf	___ftmul@f2
  8968  0B7F  0829               	movf	?___awtoft+1,w
  8969  0B80  00B9               	movwf	___ftmul@f2+1
  8970  0B81  082A               	movf	?___awtoft+2,w
  8971  0B82  00BA               	movwf	___ftmul@f2+2
  8972  0B83  3000               	movlw	0
  8973  0B84  00B5               	movwf	___ftmul@f1
  8974  0B85  3080               	movlw	128
  8975  0B86  00B6               	movwf	___ftmul@f1+1
  8976  0B87  303E               	movlw	62
  8977  0B88  00B7               	movwf	___ftmul@f1+2
  8978  0B89  3187  2738  318A   	fcall	___ftmul
  8979  0B8C  0020               	movlb	0	; select bank0
  8980  0B8D  0835               	movf	?___ftmul,w
  8981  0B8E  00E7               	movwf	___fttol@f1
  8982  0B8F  0836               	movf	?___ftmul+1,w
  8983  0B90  00E8               	movwf	___fttol@f1+1
  8984  0B91  0837               	movf	?___ftmul+2,w
  8985  0B92  00E9               	movwf	___fttol@f1+2
  8986  0B93  3197  2761         	fcall	___fttol
  8987  0B95  0020               	movlb	0	; select bank0
  8988  0B96  0868               	movf	?___fttol+1,w
  8989  0B97  0021               	movlb	1	; select bank1
  8990  0B98  00C6               	movwf	(set_subdivision@x+1)^(0+128)
  8991  0B99  0020               	movlb	0	; select bank0
  8992  0B9A  0867               	movf	?___fttol,w
  8993  0B9B  0021               	movlb	1	; select bank1
  8994  0B9C  00C5               	movwf	set_subdivision@x^(0+128)
  8995                           
  8996                           ;user.c: 99: }
  8997                           
  8998                           ;user.c: 98: break;
  8999                           
  9000                           ;user.c: 96: case 6:
  9001                           
  9002                           ;user.c: 95: break;
  9003  0B9D  0008               	return
  9004  0B9E                     l4245:	
  9005                           
  9006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9007                           ; Switch size 1, requested type "space"
  9008                           ; Number of cases is 1, Range of values is 0 to 0
  9009                           ; switch strategies available:
  9010                           ; Name         Instructions Cycles
  9011                           ; simple_byte            4     3 (average)
  9012                           ; direct_byte            8     6 (fixed)
  9013                           ; jumptable            260     6 (fixed)
  9014                           ;	Chosen strategy is simple_byte
  9015  0B9E  0021               	movlb	1	; select bank1
  9016  0B9F  0848               	movf	(set_subdivision@y+1)^(0+128),w
  9017  0BA0  3A00               	xorlw	0	; case 0
  9018  0BA1  1903               	skipnz
  9019  0BA2  2BA4               	goto	l4933
  9020  0BA3  2BB8               	goto	l488
  9021  0BA4                     l4933:	
  9022                           
  9023                           ; Switch size 1, requested type "space"
  9024                           ; Number of cases is 6, Range of values is 1 to 6
  9025                           ; switch strategies available:
  9026                           ; Name         Instructions Cycles
  9027                           ; simple_byte           19    10 (average)
  9028                           ; direct_byte           21     9 (fixed)
  9029                           ; jumptable            263     9 (fixed)
  9030                           ;	Chosen strategy is simple_byte
  9031  0BA4  0847               	movf	set_subdivision@y^(0+128),w
  9032  0BA5  3A01               	xorlw	1	; case 1
  9033  0BA6  1903               	skipnz
  9034  0BA7  2AC1               	goto	l4233
  9035  0BA8  3A03               	xorlw	3	; case 2
  9036  0BA9  1903               	skipnz
  9037  0BAA  2AEE               	goto	l4235
  9038  0BAB  3A01               	xorlw	1	; case 3
  9039  0BAC  1903               	skipnz
  9040  0BAD  2B1A               	goto	l4237
  9041  0BAE  3A07               	xorlw	7	; case 4
  9042  0BAF  1903               	skipnz
  9043  0BB0  2B46               	goto	l4239
  9044  0BB1  3A01               	xorlw	1	; case 5
  9045  0BB2  1903               	skipnz
  9046  0BB3  2B72               	goto	l4241
  9047  0BB4  3A03               	xorlw	3	; case 6
  9048  0BB5  1903               	skipnz
  9049  0BB6  2BB8               	goto	l488
  9050  0BB7  2BB8               	goto	l488
  9051  0BB8                     l488:	
  9052                           
  9053                           ;user.c: 100: return x;
  9054  0BB8  0008               	return
  9055  0BB9                     __end_of_set_subdivision:	
  9056                           
  9057                           	psect	text13
  9058  1761                     __ptext13:	
  9059 ;; *************** function ___fttol *****************
  9060 ;; Defined at:
  9061 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  f1              3   71[BANK0 ] float 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  lval            4    1[BANK1 ] unsigned long 
  9066 ;;  exp1            1    5[BANK1 ] unsigned char 
  9067 ;;  sign1           1    0[BANK1 ] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  4   71[BANK0 ] long 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9077 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9078 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9079 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9080 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9081 ;;Total ram usage:       14 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    2
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_main
  9088 ;;		_set_subdivision
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           
  9093                           ;psect for function ___fttol
  9094  1761                     ___fttol:	
  9095                           
  9096                           ;incstack = 0
  9097                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9098  1761  0020               	movlb	0	; select bank0
  9099  1762  0867               	movf	___fttol@f1,w
  9100  1763  00EB               	movwf	??___fttol
  9101  1764  0868               	movf	___fttol@f1+1,w
  9102  1765  00EC               	movwf	??___fttol+1
  9103  1766  0869               	movf	___fttol@f1+2,w
  9104  1767  00ED               	movwf	??___fttol+2
  9105  1768  1003               	clrc
  9106  1769  0D6C               	rlf	??___fttol+1,w
  9107  176A  0D6D               	rlf	??___fttol+2,w
  9108  176B  00EE               	movwf	??___fttol+3
  9109  176C  086E               	movf	??___fttol+3,w
  9110  176D  0021               	movlb	1	; select bank1
  9111  176E  00C4               	movwf	___fttol@exp1^(0+128)
  9112  176F  0844               	movf	___fttol@exp1^(0+128),w
  9113  1770  1D03               	btfss	3,2
  9114  1771  2F7C               	goto	l3861
  9115  1772  3000               	movlw	0
  9116  1773  0020               	movlb	0	; select bank0
  9117  1774  00EA               	movwf	?___fttol+3
  9118  1775  3000               	movlw	0
  9119  1776  00E9               	movwf	?___fttol+2
  9120  1777  3000               	movlw	0
  9121  1778  00E8               	movwf	?___fttol+1
  9122  1779  3000               	movlw	0
  9123  177A  00E7               	movwf	?___fttol
  9124  177B  0008               	return
  9125  177C                     l3861:	
  9126  177C  0020               	movlb	0	; select bank0
  9127  177D  0867               	movf	___fttol@f1,w
  9128  177E  00EB               	movwf	??___fttol
  9129  177F  0868               	movf	___fttol@f1+1,w
  9130  1780  00EC               	movwf	??___fttol+1
  9131  1781  0869               	movf	___fttol@f1+2,w
  9132  1782  00ED               	movwf	??___fttol+2
  9133  1783  3017               	movlw	23
  9134  1784                     u3415:	
  9135  1784  36ED               	lsrf	??___fttol+2,f
  9136  1785  0CEC               	rrf	??___fttol+1,f
  9137  1786  0CEB               	rrf	??___fttol,f
  9138  1787  0B89               	decfsz	9,f
  9139  1788  2F84               	goto	u3415
  9140  1789  086B               	movf	??___fttol,w
  9141  178A  00EE               	movwf	??___fttol+3
  9142  178B  086E               	movf	??___fttol+3,w
  9143  178C  0021               	movlb	1	; select bank1
  9144  178D  00BF               	movwf	___fttol@sign1^(0+128)
  9145  178E  0020               	movlb	0	; select bank0
  9146  178F  17E8               	bsf	___fttol@f1+1,7
  9147  1790  30FF               	movlw	255
  9148  1791  05E7               	andwf	___fttol@f1,f
  9149  1792  30FF               	movlw	255
  9150  1793  05E8               	andwf	___fttol@f1+1,f
  9151  1794  3000               	movlw	0
  9152  1795  05E9               	andwf	___fttol@f1+2,f
  9153  1796  0867               	movf	___fttol@f1,w
  9154  1797  0021               	movlb	1	; select bank1
  9155  1798  00C0               	movwf	___fttol@lval^(0+128)
  9156  1799  0020               	movlb	0	; select bank0
  9157  179A  0868               	movf	___fttol@f1+1,w
  9158  179B  0021               	movlb	1	; select bank1
  9159  179C  00C1               	movwf	(___fttol@lval^(0+128)+1)
  9160  179D  0020               	movlb	0	; select bank0
  9161  179E  0869               	movf	___fttol@f1+2,w
  9162  179F  0021               	movlb	1	; select bank1
  9163  17A0  00C2               	movwf	(___fttol@lval^(0+128)+2)
  9164  17A1  01C3               	clrf	(___fttol@lval^(0+128)+3)
  9165  17A2  308E               	movlw	142
  9166  17A3  02C4               	subwf	___fttol@exp1^(0+128),f
  9167  17A4  1FC4               	btfss	___fttol@exp1^(0+128),7
  9168  17A5  2FC6               	goto	l3881
  9169  17A6  0844               	movf	___fttol@exp1^(0+128),w
  9170  17A7  3A80               	xorlw	128
  9171  17A8  3E8F               	addlw	143
  9172  17A9  1803               	skipnc
  9173  17AA  2FB5               	goto	l3879
  9174  17AB  3000               	movlw	0
  9175  17AC  0020               	movlb	0	; select bank0
  9176  17AD  00EA               	movwf	?___fttol+3
  9177  17AE  3000               	movlw	0
  9178  17AF  00E9               	movwf	?___fttol+2
  9179  17B0  3000               	movlw	0
  9180  17B1  00E8               	movwf	?___fttol+1
  9181  17B2  3000               	movlw	0
  9182  17B3  00E7               	movwf	?___fttol
  9183  17B4  0008               	return
  9184  17B5                     l3879:	
  9185  17B5  3001               	movlw	1
  9186  17B6                     u3445:	
  9187  17B6  0021               	movlb	1	; select bank1
  9188  17B7  36C3               	lsrf	(___fttol@lval+3)^(0+128),f
  9189  17B8  0CC2               	rrf	(___fttol@lval+2)^(0+128),f
  9190  17B9  0CC1               	rrf	(___fttol@lval+1)^(0+128),f
  9191  17BA  0CC0               	rrf	___fttol@lval^(0+128),f
  9192  17BB  0B89               	decfsz	9,f
  9193  17BC  2FB6               	goto	u3445
  9194  17BD  3001               	movlw	1
  9195  17BE  0020               	movlb	0	; select bank0
  9196  17BF  00EB               	movwf	??___fttol
  9197  17C0  086B               	movf	??___fttol,w
  9198  17C1  0021               	movlb	1	; select bank1
  9199  17C2  07C4               	addwf	___fttol@exp1^(0+128),f
  9200  17C3  1903               	btfsc	3,2
  9201  17C4  2FE2               	goto	l3889
  9202  17C5  2FB5               	goto	l3879
  9203  17C6                     l3881:	
  9204  17C6  3018               	movlw	24
  9205  17C7  0244               	subwf	___fttol@exp1^(0+128),w
  9206  17C8  1C03               	skipc
  9207  17C9  2FDE               	goto	l1597
  9208  17CA  3000               	movlw	0
  9209  17CB  0020               	movlb	0	; select bank0
  9210  17CC  00EA               	movwf	?___fttol+3
  9211  17CD  3000               	movlw	0
  9212  17CE  00E9               	movwf	?___fttol+2
  9213  17CF  3000               	movlw	0
  9214  17D0  00E8               	movwf	?___fttol+1
  9215  17D1  3000               	movlw	0
  9216  17D2  00E7               	movwf	?___fttol
  9217  17D3  0008               	return
  9218  17D4                     l3887:	
  9219  17D4  3001               	movlw	1
  9220  17D5                     u3475:	
  9221  17D5  0021               	movlb	1	; select bank1
  9222  17D6  35C0               	lslf	___fttol@lval^(0+128),f
  9223  17D7  0DC1               	rlf	(___fttol@lval+1)^(0+128),f
  9224  17D8  0DC2               	rlf	(___fttol@lval+2)^(0+128),f
  9225  17D9  0DC3               	rlf	(___fttol@lval+3)^(0+128),f
  9226  17DA  0B89               	decfsz	9,f
  9227  17DB  2FD5               	goto	u3475
  9228  17DC  3001               	movlw	1
  9229  17DD  02C4               	subwf	___fttol@exp1^(0+128),f
  9230  17DE                     l1597:	
  9231  17DE  0021               	movlb	1	; select bank1
  9232  17DF  0844               	movf	___fttol@exp1^(0+128),w
  9233  17E0  1D03               	btfss	3,2
  9234  17E1  2FD4               	goto	l3887
  9235  17E2                     l3889:	
  9236  17E2  083F               	movf	___fttol@sign1^(0+128),w
  9237  17E3  1903               	btfsc	3,2
  9238  17E4  2FF0               	goto	l3893
  9239  17E5  09C0               	comf	___fttol@lval^(0+128),f
  9240  17E6  09C1               	comf	(___fttol@lval+1)^(0+128),f
  9241  17E7  09C2               	comf	(___fttol@lval+2)^(0+128),f
  9242  17E8  09C3               	comf	(___fttol@lval+3)^(0+128),f
  9243  17E9  0AC0               	incf	___fttol@lval^(0+128),f
  9244  17EA  1903               	skipnz
  9245  17EB  0AC1               	incf	(___fttol@lval+1)^(0+128),f
  9246  17EC  1903               	skipnz
  9247  17ED  0AC2               	incf	(___fttol@lval+2)^(0+128),f
  9248  17EE  1903               	skipnz
  9249  17EF  0AC3               	incf	(___fttol@lval+3)^(0+128),f
  9250  17F0                     l3893:	
  9251  17F0  0843               	movf	(___fttol@lval+3)^(0+128),w
  9252  17F1  0020               	movlb	0	; select bank0
  9253  17F2  00EA               	movwf	?___fttol+3
  9254  17F3  0021               	movlb	1	; select bank1
  9255  17F4  0842               	movf	(___fttol@lval+2)^(0+128),w
  9256  17F5  0020               	movlb	0	; select bank0
  9257  17F6  00E9               	movwf	?___fttol+2
  9258  17F7  0021               	movlb	1	; select bank1
  9259  17F8  0841               	movf	(___fttol@lval+1)^(0+128),w
  9260  17F9  0020               	movlb	0	; select bank0
  9261  17FA  00E8               	movwf	?___fttol+1
  9262  17FB  0021               	movlb	1	; select bank1
  9263  17FC  0840               	movf	___fttol@lval^(0+128),w
  9264  17FD  0020               	movlb	0	; select bank0
  9265  17FE  00E7               	movwf	?___fttol
  9266  17FF  0008               	return
  9267  1800                     __end_of___fttol:	
  9268                           
  9269                           	psect	text14
  9270  1F8D                     __ptext14:	
  9271 ;; *************** function ___awtoft *****************
  9272 ;; Defined at:
  9273 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  c               2    8[BANK0 ] int 
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;  sign            1   13[BANK0 ] unsigned char 
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  3    8[BANK0 ] float 
  9280 ;; Registers used:
  9281 ;;		wreg, status,2, status,0, pclath, cstack
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9287 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9289 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9290 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9291 ;;Total ram usage:        6 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    3
  9294 ;; This function calls:
  9295 ;;		___ftpack
  9296 ;; This function is called by:
  9297 ;;		_main
  9298 ;;		_set_subdivision
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           
  9303                           ;psect for function ___awtoft
  9304  1F8D                     ___awtoft:	
  9305                           
  9306                           ;incstack = 0
  9307                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9308  1F8D  0020               	movlb	0	; select bank0
  9309  1F8E  01AD               	clrf	___awtoft@sign
  9310  1F8F  1FA9               	btfss	___awtoft@c+1,7
  9311  1F90  2F98               	goto	l3681
  9312  1F91  09A8               	comf	___awtoft@c,f
  9313  1F92  09A9               	comf	___awtoft@c+1,f
  9314  1F93  0AA8               	incf	___awtoft@c,f
  9315  1F94  1903               	skipnz
  9316  1F95  0AA9               	incf	___awtoft@c+1,f
  9317  1F96  01AD               	clrf	___awtoft@sign
  9318  1F97  0AAD               	incf	___awtoft@sign,f
  9319  1F98                     l3681:	
  9320  1F98  0828               	movf	___awtoft@c,w
  9321  1F99  00A0               	movwf	___ftpack@arg
  9322  1F9A  0829               	movf	___awtoft@c+1,w
  9323  1F9B  00A1               	movwf	___ftpack@arg+1
  9324  1F9C  01A2               	clrf	___ftpack@arg+2
  9325  1F9D  308E               	movlw	142
  9326  1F9E  00AB               	movwf	??___awtoft
  9327  1F9F  082B               	movf	??___awtoft,w
  9328  1FA0  00A3               	movwf	___ftpack@exp
  9329  1FA1  082D               	movf	___awtoft@sign,w
  9330  1FA2  00AC               	movwf	??___awtoft+1
  9331  1FA3  082C               	movf	??___awtoft+1,w
  9332  1FA4  00A4               	movwf	___ftpack@sign
  9333  1FA5  3195  2580         	fcall	___ftpack
  9334  1FA7  0020               	movlb	0	; select bank0
  9335  1FA8  0820               	movf	?___ftpack,w
  9336  1FA9  00A8               	movwf	?___awtoft
  9337  1FAA  0821               	movf	?___ftpack+1,w
  9338  1FAB  00A9               	movwf	?___awtoft+1
  9339  1FAC  0822               	movf	?___ftpack+2,w
  9340  1FAD  00AA               	movwf	?___awtoft+2
  9341  1FAE  0008               	return
  9342  1FAF                     __end_of___awtoft:	
  9343                           
  9344                           	psect	text15
  9345  10F7                     __ptext15:	
  9346 ;; *************** function _read_top_tactile *****************
  9347 ;; Defined at:
  9348 ;;		line 36 in file "tactiles.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;		None
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9364 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9365 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9366 ;;Total ram usage:        1 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:    4
  9369 ;; This function calls:
  9370 ;;		_set_leds_top
  9371 ;;		_wait_ms
  9372 ;; This function is called by:
  9373 ;;		_main
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           
  9378                           ;psect for function _read_top_tactile
  9379  10F7                     _read_top_tactile:	
  9380                           
  9381                           ;tactiles.c: 44: if (PORTDbits.RD5 == 0) {
  9382                           
  9383                           ;incstack = 0
  9384                           ; Regs used in _read_top_tactile: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9385  10F7  0020               	movlb	0	; select bank0
  9386  10F8  1A8F               	btfsc	15,5	;volatile
  9387  10F9  0008               	return
  9388                           
  9389                           ;tactiles.c: 45: top_push_state = top_push_state + 1;
  9390  10FA  0021               	movlb	1	; select bank1
  9391  10FB  0838               	movf	_top_push_state^(0+128),w
  9392  10FC  3E01               	addlw	1
  9393  10FD  00B8               	movwf	_top_push_state^(0+128)
  9394  10FE  3000               	movlw	0
  9395  10FF  3D39               	addwfc	(_top_push_state+1)^(0+128),w
  9396  1100  00B9               	movwf	(_top_push_state+1)^(0+128)
  9397                           
  9398                           ;tactiles.c: 46: if (top_push_state >= 7) {
  9399  1101  0839               	movf	(_top_push_state+1)^(0+128),w
  9400  1102  3A80               	xorlw	128
  9401  1103  0020               	movlb	0	; select bank0
  9402  1104  00B2               	movwf	??_read_top_tactile
  9403  1105  3080               	movlw	128
  9404  1106  0232               	subwf	??_read_top_tactile,w
  9405  1107  1D03               	skipz
  9406  1108  290C               	goto	u3595
  9407  1109  3007               	movlw	7
  9408  110A  0021               	movlb	1	; select bank1
  9409  110B  0238               	subwf	_top_push_state^(0+128),w
  9410  110C                     u3595:	
  9411  110C  1C03               	skipc
  9412  110D  2913               	goto	l3967
  9413                           
  9414                           ;tactiles.c: 47: top_push_state = 1;
  9415  110E  3001               	movlw	1
  9416  110F  0021               	movlb	1	; select bank1
  9417  1110  00B8               	movwf	_top_push_state^(0+128)
  9418  1111  3000               	movlw	0
  9419  1112  00B9               	movwf	(_top_push_state^(0+128)+1)
  9420  1113                     l3967:	
  9421                           
  9422                           ;tactiles.c: 48: }
  9423                           ;tactiles.c: 49: set_leds_top(top_push_state, 1);
  9424  1113  0021               	movlb	1	; select bank1
  9425  1114  0839               	movf	(_top_push_state+1)^(0+128),w
  9426  1115  0020               	movlb	0	; select bank0
  9427  1116  00A1               	movwf	set_leds_top@x+1
  9428  1117  0021               	movlb	1	; select bank1
  9429  1118  0838               	movf	_top_push_state^(0+128),w
  9430  1119  0020               	movlb	0	; select bank0
  9431  111A  00A0               	movwf	set_leds_top@x
  9432  111B  3001               	movlw	1
  9433  111C  00A2               	movwf	set_leds_top@ledState
  9434  111D  3000               	movlw	0
  9435  111E  00A3               	movwf	set_leds_top@ledState+1
  9436  111F  3195  252C  3190   	fcall	_set_leds_top
  9437                           
  9438                           ;tactiles.c: 50: delay_time_changed = 1;
  9439  1122  3001               	movlw	1
  9440  1123  0022               	movlb	2	; select bank2
  9441  1124  00E7               	movwf	_delay_time_changed^(0+256)
  9442  1125  3000               	movlw	0
  9443  1126  00E8               	movwf	(_delay_time_changed^(0+256)+1)
  9444  1127                     l800:	
  9445                           ;tactiles.c: 52: while (PORTDbits.RD5 == 0) {
  9446                           
  9447  1127  0020               	movlb	0	; select bank0
  9448  1128  1E8F               	btfss	15,5	;volatile
  9449  1129  2927               	goto	l800
  9450                           
  9451                           ;tactiles.c: 53: }
  9452                           ;tactiles.c: 54: wait_ms(20);
  9453  112A  3014               	movlw	20
  9454  112B  00AC               	movwf	wait_ms@timeSec
  9455  112C  3000               	movlw	0
  9456  112D  00AD               	movwf	wait_ms@timeSec+1
  9457  112E  3190  20C5         	fcall	_wait_ms
  9458  1130  0008               	return
  9459  1131                     __end_of_read_top_tactile:	
  9460                           
  9461                           	psect	text16
  9462  1094                     __ptext16:	
  9463 ;; *************** function _read_bottom_tactile *****************
  9464 ;; Defined at:
  9465 ;;		line 16 in file "tactiles.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;		None
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;		None
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  1    wreg      void 
  9472 ;; Registers used:
  9473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9481 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9482 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9483 ;;Total ram usage:        1 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; Hardware stack levels required when called:    4
  9486 ;; This function calls:
  9487 ;;		_set_leds_bottom
  9488 ;;		_wait_ms
  9489 ;; This function is called by:
  9490 ;;		_main
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           
  9495                           ;psect for function _read_bottom_tactile
  9496  1094                     _read_bottom_tactile:	
  9497                           
  9498                           ;tactiles.c: 23: if (PORTDbits.RD6 == 0) {
  9499                           
  9500                           ;incstack = 0
  9501                           ; Regs used in _read_bottom_tactile: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9502  1094  0020               	movlb	0	; select bank0
  9503  1095  1B0F               	btfsc	15,6	;volatile
  9504  1096  0008               	return
  9505                           
  9506                           ;tactiles.c: 24: bottom_push_state = bottom_push_state + 1;
  9507  1097  0021               	movlb	1	; select bank1
  9508  1098  0828               	movf	_bottom_push_state^(0+128),w
  9509  1099  3E01               	addlw	1
  9510  109A  00A8               	movwf	_bottom_push_state^(0+128)
  9511  109B  3000               	movlw	0
  9512  109C  3D29               	addwfc	(_bottom_push_state+1)^(0+128),w
  9513  109D  00A9               	movwf	(_bottom_push_state+1)^(0+128)
  9514                           
  9515                           ;tactiles.c: 25: if (bottom_push_state > 6) {
  9516  109E  0829               	movf	(_bottom_push_state+1)^(0+128),w
  9517  109F  3A80               	xorlw	128
  9518  10A0  0020               	movlb	0	; select bank0
  9519  10A1  00B2               	movwf	??_read_bottom_tactile
  9520  10A2  3080               	movlw	128
  9521  10A3  0232               	subwf	??_read_bottom_tactile,w
  9522  10A4  1D03               	skipz
  9523  10A5  28A9               	goto	u3565
  9524  10A6  3007               	movlw	7
  9525  10A7  0021               	movlb	1	; select bank1
  9526  10A8  0228               	subwf	_bottom_push_state^(0+128),w
  9527  10A9                     u3565:	
  9528  10A9  1C03               	skipc
  9529  10AA  28B0               	goto	l3955
  9530                           
  9531                           ;tactiles.c: 26: bottom_push_state = 1;
  9532  10AB  3001               	movlw	1
  9533  10AC  0021               	movlb	1	; select bank1
  9534  10AD  00A8               	movwf	_bottom_push_state^(0+128)
  9535  10AE  3000               	movlw	0
  9536  10AF  00A9               	movwf	(_bottom_push_state^(0+128)+1)
  9537  10B0                     l3955:	
  9538                           
  9539                           ;tactiles.c: 27: }
  9540                           ;tactiles.c: 28: set_leds_bottom(bottom_push_state);
  9541  10B0  0021               	movlb	1	; select bank1
  9542  10B1  0829               	movf	(_bottom_push_state+1)^(0+128),w
  9543  10B2  0020               	movlb	0	; select bank0
  9544  10B3  00A1               	movwf	set_leds_bottom@x+1
  9545  10B4  0021               	movlb	1	; select bank1
  9546  10B5  0828               	movf	_bottom_push_state^(0+128),w
  9547  10B6  0020               	movlb	0	; select bank0
  9548  10B7  00A0               	movwf	set_leds_bottom@x
  9549  10B8  3192  2219  3190   	fcall	_set_leds_bottom
  9550  10BB                     l792:	
  9551                           ;tactiles.c: 30: while (PORTDbits.RD6 == 0) {
  9552                           
  9553  10BB  0020               	movlb	0	; select bank0
  9554  10BC  1F0F               	btfss	15,6	;volatile
  9555  10BD  28BB               	goto	l792
  9556                           
  9557                           ;tactiles.c: 31: }
  9558                           ;tactiles.c: 32: wait_ms(20);
  9559  10BE  3014               	movlw	20
  9560  10BF  00AC               	movwf	wait_ms@timeSec
  9561  10C0  3000               	movlw	0
  9562  10C1  00AD               	movwf	wait_ms@timeSec+1
  9563  10C2  3190  20C5         	fcall	_wait_ms
  9564  10C4  0008               	return
  9565  10C5                     __end_of_read_bottom_tactile:	
  9566                           
  9567                           	psect	text17
  9568  1254                     __ptext17:	
  9569 ;; *************** function _modulation *****************
  9570 ;; Defined at:
  9571 ;;		line 175 in file "user.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;  x               2   21[BANK0 ] int 
  9574 ;;  y               2   23[BANK0 ] int 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;		None
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  2   21[BANK0 ] int 
  9579 ;; Registers used:
  9580 ;;		wreg, status,2, status,0, pclath, cstack
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9586 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9588 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9589 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9590 ;;Total ram usage:       12 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:    3
  9593 ;; This function calls:
  9594 ;;		___aldiv
  9595 ;;		___wmul
  9596 ;; This function is called by:
  9597 ;;		_main
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           
  9602                           ;psect for function _modulation
  9603  1254                     _modulation:	
  9604                           
  9605                           ;user.c: 177: x = (127500 + (y * x)) / 1000;
  9606                           
  9607                           ;incstack = 0
  9608                           ; Regs used in _modulation: [wreg+status,2+status,0+pclath+cstack]
  9609  1254  3000               	movlw	0
  9610  1255  0020               	movlb	0	; select bank0
  9611  1256  00A9               	movwf	___aldiv@divisor+3
  9612  1257  3000               	movlw	0
  9613  1258  00A8               	movwf	___aldiv@divisor+2
  9614  1259  3003               	movlw	3
  9615  125A  00A7               	movwf	___aldiv@divisor+1
  9616  125B  30E8               	movlw	232
  9617  125C  00A6               	movwf	___aldiv@divisor
  9618  125D  300C               	movlw	12
  9619  125E  00B9               	movwf	??_modulation
  9620  125F  30F2               	movlw	242
  9621  1260  00BA               	movwf	??_modulation+1
  9622  1261  3001               	movlw	1
  9623  1262  00BB               	movwf	??_modulation+2
  9624  1263  3000               	movlw	0
  9625  1264  00BC               	movwf	??_modulation+3
  9626  1265  0838               	movf	modulation@y+1,w
  9627  1266  00A1               	movwf	___wmul@multiplier+1
  9628  1267  0837               	movf	modulation@y,w
  9629  1268  00A0               	movwf	___wmul@multiplier
  9630  1269  0836               	movf	modulation@x+1,w
  9631  126A  00A3               	movwf	___wmul@multiplicand+1
  9632  126B  0835               	movf	modulation@x,w
  9633  126C  00A2               	movwf	___wmul@multiplicand
  9634  126D  319F  2732  3192   	fcall	___wmul
  9635  1270  0020               	movlb	0	; select bank0
  9636  1271  0820               	movf	?___wmul,w
  9637  1272  00BD               	movwf	??_modulation+4
  9638  1273  0821               	movf	?___wmul+1,w
  9639  1274  00BE               	movwf	??_modulation+5
  9640  1275  3000               	movlw	0
  9641  1276  1BBE               	btfsc	??_modulation+5,7
  9642  1277  30FF               	movlw	255
  9643  1278  00BF               	movwf	??_modulation+6
  9644  1279  00C0               	movwf	??_modulation+7
  9645  127A  083D               	movf	??_modulation+4,w
  9646  127B  07B9               	addwf	??_modulation,f
  9647  127C  083E               	movf	??_modulation+5,w
  9648  127D  3DBA               	addwfc	??_modulation+1,f
  9649  127E  083F               	movf	??_modulation+6,w
  9650  127F  3DBB               	addwfc	??_modulation+2,f
  9651  1280  0840               	movf	??_modulation+7,w
  9652  1281  3DBC               	addwfc	??_modulation+3,f
  9653  1282  083C               	movf	??_modulation+3,w
  9654  1283  00AD               	movwf	___aldiv@dividend+3
  9655  1284  083B               	movf	??_modulation+2,w
  9656  1285  00AC               	movwf	___aldiv@dividend+2
  9657  1286  083A               	movf	??_modulation+1,w
  9658  1287  00AB               	movwf	___aldiv@dividend+1
  9659  1288  0839               	movf	??_modulation,w
  9660  1289  00AA               	movwf	___aldiv@dividend
  9661  128A  3196  2654         	fcall	___aldiv
  9662  128C  0020               	movlb	0	; select bank0
  9663  128D  0827               	movf	?___aldiv+1,w
  9664  128E  00B6               	movwf	modulation@x+1
  9665  128F  0826               	movf	?___aldiv,w
  9666  1290  00B5               	movwf	modulation@x
  9667                           
  9668                           ;user.c: 178: return x;
  9669  1291  0008               	return
  9670  1292                     __end_of_modulation:	
  9671                           
  9672                           	psect	text18
  9673  1F32                     __ptext18:	
  9674 ;; *************** function ___wmul *****************
  9675 ;; Defined at:
  9676 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9679 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;  product         2    4[BANK0 ] unsigned int 
  9682 ;; Return value:  Size  Location     Type
  9683 ;;                  2    0[BANK0 ] unsigned int 
  9684 ;; Registers used:
  9685 ;;		wreg, status,2, status,0
  9686 ;; Tracked objects:
  9687 ;;		On entry : 0/0
  9688 ;;		On exit  : 0/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9691 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9692 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9694 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9695 ;;Total ram usage:        6 bytes
  9696 ;; Hardware stack levels used:    1
  9697 ;; Hardware stack levels required when called:    2
  9698 ;; This function calls:
  9699 ;;		Nothing
  9700 ;; This function is called by:
  9701 ;;		_modulation
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           
  9706                           ;psect for function ___wmul
  9707  1F32                     ___wmul:	
  9708                           
  9709                           ;incstack = 0
  9710                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9711  1F32  0020               	movlb	0	; select bank0
  9712  1F33  01A4               	clrf	___wmul@product
  9713  1F34  01A5               	clrf	___wmul@product+1
  9714  1F35                     l3621:	
  9715  1F35  1C20               	btfss	___wmul@multiplier,0
  9716  1F36  2F3B               	goto	l1345
  9717  1F37  0822               	movf	___wmul@multiplicand,w
  9718  1F38  07A4               	addwf	___wmul@product,f
  9719  1F39  0823               	movf	___wmul@multiplicand+1,w
  9720  1F3A  3DA5               	addwfc	___wmul@product+1,f
  9721  1F3B                     l1345:	
  9722  1F3B  3001               	movlw	1
  9723  1F3C                     u2825:	
  9724  1F3C  35A2               	lslf	___wmul@multiplicand,f
  9725  1F3D  0DA3               	rlf	___wmul@multiplicand+1,f
  9726  1F3E  0B89               	decfsz	9,f
  9727  1F3F  2F3C               	goto	u2825
  9728  1F40  3001               	movlw	1
  9729  1F41                     u2835:	
  9730  1F41  36A1               	lsrf	___wmul@multiplier+1,f
  9731  1F42  0CA0               	rrf	___wmul@multiplier,f
  9732  1F43  0B89               	decfsz	9,f
  9733  1F44  2F41               	goto	u2835
  9734  1F45  0820               	movf	___wmul@multiplier,w
  9735  1F46  0421               	iorwf	___wmul@multiplier+1,w
  9736  1F47  1D03               	btfss	3,2
  9737  1F48  2F35               	goto	l3621
  9738  1F49  0825               	movf	___wmul@product+1,w
  9739  1F4A  00A1               	movwf	?___wmul+1
  9740  1F4B  0824               	movf	___wmul@product,w
  9741  1F4C  00A0               	movwf	?___wmul
  9742  1F4D  0008               	return
  9743  1F4E                     __end_of___wmul:	
  9744                           
  9745                           	psect	text19
  9746  1654                     __ptext19:	
  9747 ;; *************** function ___aldiv *****************
  9748 ;; Defined at:
  9749 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  divisor         4    6[BANK0 ] long 
  9752 ;;  dividend        4   10[BANK0 ] long 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;  quotient        4   17[BANK0 ] long 
  9755 ;;  sign            1   16[BANK0 ] unsigned char 
  9756 ;;  counter         1   15[BANK0 ] unsigned char 
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  4    6[BANK0 ] long 
  9759 ;; Registers used:
  9760 ;;		wreg, status,2, status,0
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/0
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9766 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9767 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9769 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9770 ;;Total ram usage:       15 bytes
  9771 ;; Hardware stack levels used:    1
  9772 ;; Hardware stack levels required when called:    2
  9773 ;; This function calls:
  9774 ;;		Nothing
  9775 ;; This function is called by:
  9776 ;;		_modulation
  9777 ;;		_updateSwitchTap
  9778 ;;		_updateSwitch1
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           
  9783                           ;psect for function ___aldiv
  9784  1654                     ___aldiv:	
  9785                           
  9786                           ;incstack = 0
  9787                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9788  1654  0020               	movlb	0	; select bank0
  9789  1655  01B0               	clrf	___aldiv@sign
  9790  1656  1FA9               	btfss	___aldiv@divisor+3,7
  9791  1657  2E65               	goto	l1400
  9792  1658  09A6               	comf	___aldiv@divisor,f
  9793  1659  09A7               	comf	___aldiv@divisor+1,f
  9794  165A  09A8               	comf	___aldiv@divisor+2,f
  9795  165B  09A9               	comf	___aldiv@divisor+3,f
  9796  165C  0AA6               	incf	___aldiv@divisor,f
  9797  165D  1903               	skipnz
  9798  165E  0AA7               	incf	___aldiv@divisor+1,f
  9799  165F  1903               	skipnz
  9800  1660  0AA8               	incf	___aldiv@divisor+2,f
  9801  1661  1903               	skipnz
  9802  1662  0AA9               	incf	___aldiv@divisor+3,f
  9803  1663  01B0               	clrf	___aldiv@sign
  9804  1664  0AB0               	incf	___aldiv@sign,f
  9805  1665                     l1400:	
  9806  1665  1FAD               	btfss	___aldiv@dividend+3,7
  9807  1666  2E76               	goto	l3643
  9808  1667  09AA               	comf	___aldiv@dividend,f
  9809  1668  09AB               	comf	___aldiv@dividend+1,f
  9810  1669  09AC               	comf	___aldiv@dividend+2,f
  9811  166A  09AD               	comf	___aldiv@dividend+3,f
  9812  166B  0AAA               	incf	___aldiv@dividend,f
  9813  166C  1903               	skipnz
  9814  166D  0AAB               	incf	___aldiv@dividend+1,f
  9815  166E  1903               	skipnz
  9816  166F  0AAC               	incf	___aldiv@dividend+2,f
  9817  1670  1903               	skipnz
  9818  1671  0AAD               	incf	___aldiv@dividend+3,f
  9819  1672  3001               	movlw	1
  9820  1673  00AE               	movwf	??___aldiv
  9821  1674  082E               	movf	??___aldiv,w
  9822  1675  06B0               	xorwf	___aldiv@sign,f
  9823  1676                     l3643:	
  9824  1676  3000               	movlw	0
  9825  1677  00B4               	movwf	___aldiv@quotient+3
  9826  1678  3000               	movlw	0
  9827  1679  00B3               	movwf	___aldiv@quotient+2
  9828  167A  3000               	movlw	0
  9829  167B  00B2               	movwf	___aldiv@quotient+1
  9830  167C  3000               	movlw	0
  9831  167D  00B1               	movwf	___aldiv@quotient
  9832  167E  0829               	movf	___aldiv@divisor+3,w
  9833  167F  0428               	iorwf	___aldiv@divisor+2,w
  9834  1680  0427               	iorwf	___aldiv@divisor+1,w
  9835  1681  0426               	iorwf	___aldiv@divisor,w
  9836  1682  1903               	skipnz
  9837  1683  2EBF               	goto	l3665
  9838  1684  01AF               	clrf	___aldiv@counter
  9839  1685  0AAF               	incf	___aldiv@counter,f
  9840  1686                     l3651:	
  9841  1686  1BA9               	btfsc	___aldiv@divisor+3,7
  9842  1687  2E94               	goto	l3653
  9843  1688  3001               	movlw	1
  9844  1689                     u2885:	
  9845  1689  35A6               	lslf	___aldiv@divisor,f
  9846  168A  0DA7               	rlf	___aldiv@divisor+1,f
  9847  168B  0DA8               	rlf	___aldiv@divisor+2,f
  9848  168C  0DA9               	rlf	___aldiv@divisor+3,f
  9849  168D  0B89               	decfsz	9,f
  9850  168E  2E89               	goto	u2885
  9851  168F  3001               	movlw	1
  9852  1690  00AE               	movwf	??___aldiv
  9853  1691  082E               	movf	??___aldiv,w
  9854  1692  07AF               	addwf	___aldiv@counter,f
  9855  1693  2E86               	goto	l3651
  9856  1694                     l3653:	
  9857  1694  3001               	movlw	1
  9858  1695                     u2905:	
  9859  1695  35B1               	lslf	___aldiv@quotient,f
  9860  1696  0DB2               	rlf	___aldiv@quotient+1,f
  9861  1697  0DB3               	rlf	___aldiv@quotient+2,f
  9862  1698  0DB4               	rlf	___aldiv@quotient+3,f
  9863  1699  0B89               	decfsz	9,f
  9864  169A  2E95               	goto	u2905
  9865  169B  0829               	movf	___aldiv@divisor+3,w
  9866  169C  022D               	subwf	___aldiv@dividend+3,w
  9867  169D  1D03               	skipz
  9868  169E  2EA9               	goto	u2915
  9869  169F  0828               	movf	___aldiv@divisor+2,w
  9870  16A0  022C               	subwf	___aldiv@dividend+2,w
  9871  16A1  1D03               	skipz
  9872  16A2  2EA9               	goto	u2915
  9873  16A3  0827               	movf	___aldiv@divisor+1,w
  9874  16A4  022B               	subwf	___aldiv@dividend+1,w
  9875  16A5  1D03               	skipz
  9876  16A6  2EA9               	goto	u2915
  9877  16A7  0826               	movf	___aldiv@divisor,w
  9878  16A8  022A               	subwf	___aldiv@dividend,w
  9879  16A9                     u2915:	
  9880  16A9  1C03               	skipc
  9881  16AA  2EB4               	goto	l3661
  9882  16AB  0826               	movf	___aldiv@divisor,w
  9883  16AC  02AA               	subwf	___aldiv@dividend,f
  9884  16AD  0827               	movf	___aldiv@divisor+1,w
  9885  16AE  3BAB               	subwfb	___aldiv@dividend+1,f
  9886  16AF  0828               	movf	___aldiv@divisor+2,w
  9887  16B0  3BAC               	subwfb	___aldiv@dividend+2,f
  9888  16B1  0829               	movf	___aldiv@divisor+3,w
  9889  16B2  3BAD               	subwfb	___aldiv@dividend+3,f
  9890  16B3  1431               	bsf	___aldiv@quotient,0
  9891  16B4                     l3661:	
  9892  16B4  3001               	movlw	1
  9893  16B5                     u2925:	
  9894  16B5  36A9               	lsrf	___aldiv@divisor+3,f
  9895  16B6  0CA8               	rrf	___aldiv@divisor+2,f
  9896  16B7  0CA7               	rrf	___aldiv@divisor+1,f
  9897  16B8  0CA6               	rrf	___aldiv@divisor,f
  9898  16B9  0B89               	decfsz	9,f
  9899  16BA  2EB5               	goto	u2925
  9900  16BB  3001               	movlw	1
  9901  16BC  02AF               	subwf	___aldiv@counter,f
  9902  16BD  1D03               	btfss	3,2
  9903  16BE  2E94               	goto	l3653
  9904  16BF                     l3665:	
  9905  16BF  0830               	movf	___aldiv@sign,w
  9906  16C0  1903               	btfsc	3,2
  9907  16C1  2ECD               	goto	l3669
  9908  16C2  09B1               	comf	___aldiv@quotient,f
  9909  16C3  09B2               	comf	___aldiv@quotient+1,f
  9910  16C4  09B3               	comf	___aldiv@quotient+2,f
  9911  16C5  09B4               	comf	___aldiv@quotient+3,f
  9912  16C6  0AB1               	incf	___aldiv@quotient,f
  9913  16C7  1903               	skipnz
  9914  16C8  0AB2               	incf	___aldiv@quotient+1,f
  9915  16C9  1903               	skipnz
  9916  16CA  0AB3               	incf	___aldiv@quotient+2,f
  9917  16CB  1903               	skipnz
  9918  16CC  0AB4               	incf	___aldiv@quotient+3,f
  9919  16CD                     l3669:	
  9920  16CD  0834               	movf	___aldiv@quotient+3,w
  9921  16CE  00A9               	movwf	?___aldiv+3
  9922  16CF  0833               	movf	___aldiv@quotient+2,w
  9923  16D0  00A8               	movwf	?___aldiv+2
  9924  16D1  0832               	movf	___aldiv@quotient+1,w
  9925  16D2  00A7               	movwf	?___aldiv+1
  9926  16D3  0831               	movf	___aldiv@quotient,w
  9927  16D4  00A6               	movwf	?___aldiv
  9928  16D5  0008               	return
  9929  16D6                     __end_of___aldiv:	
  9930                           
  9931                           	psect	text20
  9932  16D6                     __ptext20:	
  9933 ;; *************** function _map *****************
  9934 ;; Defined at:
  9935 ;;		line 165 in file "user.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;  x               3   53[BANK0 ] float 
  9938 ;;  in_min          3   56[BANK0 ] float 
  9939 ;;  in_max          3   59[BANK0 ] float 
  9940 ;;  out_min         3   62[BANK0 ] float 
  9941 ;;  out_max         3   65[BANK0 ] float 
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;		None
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  3   53[BANK0 ] float 
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0, pclath, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9953 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9954 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9956 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9957 ;;Total ram usage:       18 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    4
  9960 ;; This function calls:
  9961 ;;		___ftadd
  9962 ;;		___ftdiv
  9963 ;;		___ftmul
  9964 ;;		___ftneg
  9965 ;; This function is called by:
  9966 ;;		_main
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           
  9971                           ;psect for function _map
  9972  16D6                     _map:	
  9973                           
  9974                           ;user.c: 166: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  9975                           
  9976                           ;incstack = 0
  9977                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  9978  16D6  0020               	movlb	0	; select bank0
  9979  16D7  085B               	movf	map@in_max,w
  9980  16D8  00A8               	movwf	___ftadd@f1
  9981  16D9  085C               	movf	map@in_max+1,w
  9982  16DA  00A9               	movwf	___ftadd@f1+1
  9983  16DB  085D               	movf	map@in_max+2,w
  9984  16DC  00AA               	movwf	___ftadd@f1+2
  9985  16DD  0858               	movf	map@in_min,w
  9986  16DE  00A0               	movwf	___ftneg@f1
  9987  16DF  0859               	movf	map@in_min+1,w
  9988  16E0  00A1               	movwf	___ftneg@f1+1
  9989  16E1  085A               	movf	map@in_min+2,w
  9990  16E2  00A2               	movwf	___ftneg@f1+2
  9991  16E3  319E  268E  3196   	fcall	___ftneg
  9992  16E6  0020               	movlb	0	; select bank0
  9993  16E7  0820               	movf	?___ftneg,w
  9994  16E8  00AB               	movwf	___ftadd@f2
  9995  16E9  0821               	movf	?___ftneg+1,w
  9996  16EA  00AC               	movwf	___ftadd@f2+1
  9997  16EB  0822               	movf	?___ftneg+2,w
  9998  16EC  00AD               	movwf	___ftadd@f2+2
  9999  16ED  3189  21CA  3196   	fcall	___ftadd
 10000  16F0  0020               	movlb	0	; select bank0
 10001  16F1  0828               	movf	?___ftadd,w
 10002  16F2  00C5               	movwf	___ftdiv@f2
 10003  16F3  0829               	movf	?___ftadd+1,w
 10004  16F4  00C6               	movwf	___ftdiv@f2+1
 10005  16F5  082A               	movf	?___ftadd+2,w
 10006  16F6  00C7               	movwf	___ftdiv@f2+2
 10007  16F7  0861               	movf	map@out_max,w
 10008  16F8  00A8               	movwf	___ftadd@f1
 10009  16F9  0862               	movf	map@out_max+1,w
 10010  16FA  00A9               	movwf	___ftadd@f1+1
 10011  16FB  0863               	movf	map@out_max+2,w
 10012  16FC  00AA               	movwf	___ftadd@f1+2
 10013  16FD  085E               	movf	map@out_min,w
 10014  16FE  00A0               	movwf	___ftneg@f1
 10015  16FF  085F               	movf	map@out_min+1,w
 10016  1700  00A1               	movwf	___ftneg@f1+1
 10017  1701  0860               	movf	map@out_min+2,w
 10018  1702  00A2               	movwf	___ftneg@f1+2
 10019  1703  319E  268E  3196   	fcall	___ftneg
 10020  1706  0020               	movlb	0	; select bank0
 10021  1707  0820               	movf	?___ftneg,w
 10022  1708  00AB               	movwf	___ftadd@f2
 10023  1709  0821               	movf	?___ftneg+1,w
 10024  170A  00AC               	movwf	___ftadd@f2+1
 10025  170B  0822               	movf	?___ftneg+2,w
 10026  170C  00AD               	movwf	___ftadd@f2+2
 10027  170D  3189  21CA  3196   	fcall	___ftadd
 10028  1710  0020               	movlb	0	; select bank0
 10029  1711  0828               	movf	?___ftadd,w
 10030  1712  00B5               	movwf	___ftmul@f1
 10031  1713  0829               	movf	?___ftadd+1,w
 10032  1714  00B6               	movwf	___ftmul@f1+1
 10033  1715  082A               	movf	?___ftadd+2,w
 10034  1716  00B7               	movwf	___ftmul@f1+2
 10035  1717  0855               	movf	map@x,w
 10036  1718  00A8               	movwf	___ftadd@f1
 10037  1719  0856               	movf	map@x+1,w
 10038  171A  00A9               	movwf	___ftadd@f1+1
 10039  171B  0857               	movf	map@x+2,w
 10040  171C  00AA               	movwf	___ftadd@f1+2
 10041  171D  0858               	movf	map@in_min,w
 10042  171E  00A0               	movwf	___ftneg@f1
 10043  171F  0859               	movf	map@in_min+1,w
 10044  1720  00A1               	movwf	___ftneg@f1+1
 10045  1721  085A               	movf	map@in_min+2,w
 10046  1722  00A2               	movwf	___ftneg@f1+2
 10047  1723  319E  268E  3196   	fcall	___ftneg
 10048  1726  0020               	movlb	0	; select bank0
 10049  1727  0820               	movf	?___ftneg,w
 10050  1728  00AB               	movwf	___ftadd@f2
 10051  1729  0821               	movf	?___ftneg+1,w
 10052  172A  00AC               	movwf	___ftadd@f2+1
 10053  172B  0822               	movf	?___ftneg+2,w
 10054  172C  00AD               	movwf	___ftadd@f2+2
 10055  172D  3189  21CA  3196   	fcall	___ftadd
 10056  1730  0020               	movlb	0	; select bank0
 10057  1731  0828               	movf	?___ftadd,w
 10058  1732  00B8               	movwf	___ftmul@f2
 10059  1733  0829               	movf	?___ftadd+1,w
 10060  1734  00B9               	movwf	___ftmul@f2+1
 10061  1735  082A               	movf	?___ftadd+2,w
 10062  1736  00BA               	movwf	___ftmul@f2+2
 10063  1737  3187  2738  3196   	fcall	___ftmul
 10064  173A  0020               	movlb	0	; select bank0
 10065  173B  0835               	movf	?___ftmul,w
 10066  173C  00C8               	movwf	___ftdiv@f1
 10067  173D  0836               	movf	?___ftmul+1,w
 10068  173E  00C9               	movwf	___ftdiv@f1+1
 10069  173F  0837               	movf	?___ftmul+2,w
 10070  1740  00CA               	movwf	___ftdiv@f1+2
 10071  1741  3188  203D  3196   	fcall	___ftdiv
 10072  1744  0020               	movlb	0	; select bank0
 10073  1745  0845               	movf	?___ftdiv,w
 10074  1746  00E4               	movwf	_map$2192
 10075  1747  0846               	movf	?___ftdiv+1,w
 10076  1748  00E5               	movwf	_map$2192+1
 10077  1749  0847               	movf	?___ftdiv+2,w
 10078  174A  00E6               	movwf	_map$2192+2
 10079                           
 10080                           ;user.c: 166: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 10081  174B  085E               	movf	map@out_min,w
 10082  174C  00A8               	movwf	___ftadd@f1
 10083  174D  085F               	movf	map@out_min+1,w
 10084  174E  00A9               	movwf	___ftadd@f1+1
 10085  174F  0860               	movf	map@out_min+2,w
 10086  1750  00AA               	movwf	___ftadd@f1+2
 10087  1751  0864               	movf	_map$2192,w
 10088  1752  00AB               	movwf	___ftadd@f2
 10089  1753  0865               	movf	_map$2192+1,w
 10090  1754  00AC               	movwf	___ftadd@f2+1
 10091  1755  0866               	movf	_map$2192+2,w
 10092  1756  00AD               	movwf	___ftadd@f2+2
 10093  1757  3189  21CA         	fcall	___ftadd
 10094  1759  0020               	movlb	0	; select bank0
 10095  175A  0828               	movf	?___ftadd,w
 10096  175B  00D5               	movwf	?_map
 10097  175C  0829               	movf	?___ftadd+1,w
 10098  175D  00D6               	movwf	?_map+1
 10099  175E  082A               	movf	?___ftadd+2,w
 10100  175F  00D7               	movwf	?_map+2
 10101  1760  0008               	return
 10102  1761                     __end_of_map:	
 10103                           
 10104                           	psect	text21
 10105  1E8E                     __ptext21:	
 10106 ;; *************** function ___ftneg *****************
 10107 ;; Defined at:
 10108 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  f1              3    0[BANK0 ] float 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;		None
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  3    0[BANK0 ] float 
 10115 ;; Registers used:
 10116 ;;		wreg
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10122 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10125 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10126 ;;Total ram usage:        3 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    2
 10129 ;; This function calls:
 10130 ;;		Nothing
 10131 ;; This function is called by:
 10132 ;;		_map
 10133 ;;		_scalePotValue
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           
 10138                           ;psect for function ___ftneg
 10139  1E8E                     ___ftneg:	
 10140                           
 10141                           ;incstack = 0
 10142                           ; Regs used in ___ftneg: [wreg]
 10143  1E8E  0020               	movlb	0	; select bank0
 10144  1E8F  0822               	movf	___ftneg@f1+2,w
 10145  1E90  0421               	iorwf	___ftneg@f1+1,w
 10146  1E91  0420               	iorwf	___ftneg@f1,w
 10147  1E92  1903               	skipnz
 10148  1E93  0008               	return
 10149  1E94  3080               	movlw	128
 10150  1E95  06A2               	xorwf	___ftneg@f1+2,f
 10151  1E96  0008               	return
 10152  1E97                     __end_of___ftneg:	
 10153                           
 10154                           	psect	text22
 10155  0738                     __ptext22:	
 10156 ;; *************** function ___ftmul *****************
 10157 ;; Defined at:
 10158 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  f1              3   21[BANK0 ] float 
 10161 ;;  f2              3   24[BANK0 ] float 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;  f3_as_produc    3   32[BANK0 ] unsigned um
 10164 ;;  sign            1   36[BANK0 ] unsigned char 
 10165 ;;  cntr            1   35[BANK0 ] unsigned char 
 10166 ;;  exp             1   31[BANK0 ] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  3   21[BANK0 ] float 
 10169 ;; Registers used:
 10170 ;;		wreg, status,2, status,0, pclath, cstack
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10176 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10177 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10178 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10179 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10180 ;;Total ram usage:       16 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:    3
 10183 ;; This function calls:
 10184 ;;		___ftpack
 10185 ;; This function is called by:
 10186 ;;		_set_subdivision
 10187 ;;		_map
 10188 ;;		_scalePotValue
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           
 10193                           ;psect for function ___ftmul
 10194  0738                     ___ftmul:	
 10195                           
 10196                           ;incstack = 0
 10197                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 10198  0738  0020               	movlb	0	; select bank0
 10199  0739  0835               	movf	___ftmul@f1,w
 10200  073A  00BB               	movwf	??___ftmul
 10201  073B  0836               	movf	___ftmul@f1+1,w
 10202  073C  00BC               	movwf	??___ftmul+1
 10203  073D  0837               	movf	___ftmul@f1+2,w
 10204  073E  00BD               	movwf	??___ftmul+2
 10205  073F  1003               	clrc
 10206  0740  0D3C               	rlf	??___ftmul+1,w
 10207  0741  0D3D               	rlf	??___ftmul+2,w
 10208  0742  00BE               	movwf	??___ftmul+3
 10209  0743  083E               	movf	??___ftmul+3,w
 10210  0744  00BF               	movwf	___ftmul@exp
 10211  0745  083F               	movf	___ftmul@exp,w
 10212  0746  1D03               	btfss	3,2
 10213  0747  2F4F               	goto	l3803
 10214  0748  3000               	movlw	0
 10215  0749  00B5               	movwf	?___ftmul
 10216  074A  3000               	movlw	0
 10217  074B  00B6               	movwf	?___ftmul+1
 10218  074C  3000               	movlw	0
 10219  074D  00B7               	movwf	?___ftmul+2
 10220  074E  0008               	return
 10221  074F                     l3803:	
 10222  074F  0838               	movf	___ftmul@f2,w
 10223  0750  00BB               	movwf	??___ftmul
 10224  0751  0839               	movf	___ftmul@f2+1,w
 10225  0752  00BC               	movwf	??___ftmul+1
 10226  0753  083A               	movf	___ftmul@f2+2,w
 10227  0754  00BD               	movwf	??___ftmul+2
 10228  0755  1003               	clrc
 10229  0756  0D3C               	rlf	??___ftmul+1,w
 10230  0757  0D3D               	rlf	??___ftmul+2,w
 10231  0758  00BE               	movwf	??___ftmul+3
 10232  0759  083E               	movf	??___ftmul+3,w
 10233  075A  00C4               	movwf	___ftmul@sign
 10234  075B  0844               	movf	___ftmul@sign,w
 10235  075C  1D03               	btfss	3,2
 10236  075D  2F65               	goto	l3809
 10237  075E  3000               	movlw	0
 10238  075F  00B5               	movwf	?___ftmul
 10239  0760  3000               	movlw	0
 10240  0761  00B6               	movwf	?___ftmul+1
 10241  0762  3000               	movlw	0
 10242  0763  00B7               	movwf	?___ftmul+2
 10243  0764  0008               	return
 10244  0765                     l3809:	
 10245  0765  0844               	movf	___ftmul@sign,w
 10246  0766  3E7B               	addlw	123
 10247  0767  00BB               	movwf	??___ftmul
 10248  0768  083B               	movf	??___ftmul,w
 10249  0769  07BF               	addwf	___ftmul@exp,f
 10250  076A  0835               	movf	___ftmul@f1,w
 10251  076B  00BB               	movwf	??___ftmul
 10252  076C  0836               	movf	___ftmul@f1+1,w
 10253  076D  00BC               	movwf	??___ftmul+1
 10254  076E  0837               	movf	___ftmul@f1+2,w
 10255  076F  00BD               	movwf	??___ftmul+2
 10256  0770  3010               	movlw	16
 10257  0771                     u3295:	
 10258  0771  36BD               	lsrf	??___ftmul+2,f
 10259  0772  0CBC               	rrf	??___ftmul+1,f
 10260  0773  0CBB               	rrf	??___ftmul,f
 10261  0774  0B89               	decfsz	9,f
 10262  0775  2F71               	goto	u3295
 10263  0776  083B               	movf	??___ftmul,w
 10264  0777  00BE               	movwf	??___ftmul+3
 10265  0778  083E               	movf	??___ftmul+3,w
 10266  0779  00C4               	movwf	___ftmul@sign
 10267  077A  0838               	movf	___ftmul@f2,w
 10268  077B  00BB               	movwf	??___ftmul
 10269  077C  0839               	movf	___ftmul@f2+1,w
 10270  077D  00BC               	movwf	??___ftmul+1
 10271  077E  083A               	movf	___ftmul@f2+2,w
 10272  077F  00BD               	movwf	??___ftmul+2
 10273  0780  3010               	movlw	16
 10274  0781                     u3305:	
 10275  0781  36BD               	lsrf	??___ftmul+2,f
 10276  0782  0CBC               	rrf	??___ftmul+1,f
 10277  0783  0CBB               	rrf	??___ftmul,f
 10278  0784  0B89               	decfsz	9,f
 10279  0785  2F81               	goto	u3305
 10280  0786  083B               	movf	??___ftmul,w
 10281  0787  00BE               	movwf	??___ftmul+3
 10282  0788  083E               	movf	??___ftmul+3,w
 10283  0789  06C4               	xorwf	___ftmul@sign,f
 10284  078A  3080               	movlw	128
 10285  078B  00BB               	movwf	??___ftmul
 10286  078C  083B               	movf	??___ftmul,w
 10287  078D  05C4               	andwf	___ftmul@sign,f
 10288  078E  17B6               	bsf	___ftmul@f1+1,7
 10289  078F  17B9               	bsf	___ftmul@f2+1,7
 10290  0790  30FF               	movlw	255
 10291  0791  05B8               	andwf	___ftmul@f2,f
 10292  0792  30FF               	movlw	255
 10293  0793  05B9               	andwf	___ftmul@f2+1,f
 10294  0794  3000               	movlw	0
 10295  0795  05BA               	andwf	___ftmul@f2+2,f
 10296  0796  3000               	movlw	0
 10297  0797  00C0               	movwf	___ftmul@f3_as_product
 10298  0798  3000               	movlw	0
 10299  0799  00C1               	movwf	___ftmul@f3_as_product+1
 10300  079A  3000               	movlw	0
 10301  079B  00C2               	movwf	___ftmul@f3_as_product+2
 10302  079C  3007               	movlw	7
 10303  079D  00BB               	movwf	??___ftmul
 10304  079E  083B               	movf	??___ftmul,w
 10305  079F  00C3               	movwf	___ftmul@cntr
 10306  07A0                     l3821:	
 10307  07A0  1C35               	btfss	___ftmul@f1,0
 10308  07A1  2FA8               	goto	l3825
 10309  07A2  0838               	movf	___ftmul@f2,w
 10310  07A3  07C0               	addwf	___ftmul@f3_as_product,f
 10311  07A4  0839               	movf	___ftmul@f2+1,w
 10312  07A5  3DC1               	addwfc	___ftmul@f3_as_product+1,f
 10313  07A6  083A               	movf	___ftmul@f2+2,w
 10314  07A7  3DC2               	addwfc	___ftmul@f3_as_product+2,f
 10315  07A8                     l3825:	
 10316  07A8  3001               	movlw	1
 10317  07A9                     u3325:	
 10318  07A9  36B7               	lsrf	___ftmul@f1+2,f
 10319  07AA  0CB6               	rrf	___ftmul@f1+1,f
 10320  07AB  0CB5               	rrf	___ftmul@f1,f
 10321  07AC  0B89               	decfsz	9,f
 10322  07AD  2FA9               	goto	u3325
 10323  07AE  3001               	movlw	1
 10324  07AF                     u3335:	
 10325  07AF  35B8               	lslf	___ftmul@f2,f
 10326  07B0  0DB9               	rlf	___ftmul@f2+1,f
 10327  07B1  0DBA               	rlf	___ftmul@f2+2,f
 10328  07B2  0B89               	decfsz	9,f
 10329  07B3  2FAF               	goto	u3335
 10330  07B4  3001               	movlw	1
 10331  07B5  02C3               	subwf	___ftmul@cntr,f
 10332  07B6  1D03               	btfss	3,2
 10333  07B7  2FA0               	goto	l3821
 10334  07B8  3009               	movlw	9
 10335  07B9  00BB               	movwf	??___ftmul
 10336  07BA  083B               	movf	??___ftmul,w
 10337  07BB  00C3               	movwf	___ftmul@cntr
 10338  07BC                     l3833:	
 10339  07BC  1C35               	btfss	___ftmul@f1,0
 10340  07BD  2FC4               	goto	l3837
 10341  07BE  0838               	movf	___ftmul@f2,w
 10342  07BF  07C0               	addwf	___ftmul@f3_as_product,f
 10343  07C0  0839               	movf	___ftmul@f2+1,w
 10344  07C1  3DC1               	addwfc	___ftmul@f3_as_product+1,f
 10345  07C2  083A               	movf	___ftmul@f2+2,w
 10346  07C3  3DC2               	addwfc	___ftmul@f3_as_product+2,f
 10347  07C4                     l3837:	
 10348  07C4  3001               	movlw	1
 10349  07C5                     u3365:	
 10350  07C5  36B7               	lsrf	___ftmul@f1+2,f
 10351  07C6  0CB6               	rrf	___ftmul@f1+1,f
 10352  07C7  0CB5               	rrf	___ftmul@f1,f
 10353  07C8  0B89               	decfsz	9,f
 10354  07C9  2FC5               	goto	u3365
 10355  07CA  3001               	movlw	1
 10356  07CB                     u3375:	
 10357  07CB  36C2               	lsrf	___ftmul@f3_as_product+2,f
 10358  07CC  0CC1               	rrf	___ftmul@f3_as_product+1,f
 10359  07CD  0CC0               	rrf	___ftmul@f3_as_product,f
 10360  07CE  0B89               	decfsz	9,f
 10361  07CF  2FCB               	goto	u3375
 10362  07D0  3001               	movlw	1
 10363  07D1  02C3               	subwf	___ftmul@cntr,f
 10364  07D2  1D03               	btfss	3,2
 10365  07D3  2FBC               	goto	l3833
 10366  07D4  0840               	movf	___ftmul@f3_as_product,w
 10367  07D5  00A0               	movwf	___ftpack@arg
 10368  07D6  0841               	movf	___ftmul@f3_as_product+1,w
 10369  07D7  00A1               	movwf	___ftpack@arg+1
 10370  07D8  0842               	movf	___ftmul@f3_as_product+2,w
 10371  07D9  00A2               	movwf	___ftpack@arg+2
 10372  07DA  083F               	movf	___ftmul@exp,w
 10373  07DB  00BB               	movwf	??___ftmul
 10374  07DC  083B               	movf	??___ftmul,w
 10375  07DD  00A3               	movwf	___ftpack@exp
 10376  07DE  0844               	movf	___ftmul@sign,w
 10377  07DF  00BC               	movwf	??___ftmul+1
 10378  07E0  083C               	movf	??___ftmul+1,w
 10379  07E1  00A4               	movwf	___ftpack@sign
 10380  07E2  3195  2580         	fcall	___ftpack
 10381  07E4  0020               	movlb	0	; select bank0
 10382  07E5  0820               	movf	?___ftpack,w
 10383  07E6  00B5               	movwf	?___ftmul
 10384  07E7  0821               	movf	?___ftpack+1,w
 10385  07E8  00B6               	movwf	?___ftmul+1
 10386  07E9  0822               	movf	?___ftpack+2,w
 10387  07EA  00B7               	movwf	?___ftmul+2
 10388  07EB  0008               	return
 10389  07EC                     __end_of___ftmul:	
 10390                           
 10391                           	psect	text23
 10392  083D                     __ptext23:	
 10393 ;; *************** function ___ftdiv *****************
 10394 ;; Defined at:
 10395 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  f2              3   37[BANK0 ] float 
 10398 ;;  f1              3   40[BANK0 ] float 
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;  f3              3   48[BANK0 ] float 
 10401 ;;  sign            1   52[BANK0 ] unsigned char 
 10402 ;;  exp             1   51[BANK0 ] unsigned char 
 10403 ;;  cntr            1   47[BANK0 ] unsigned char 
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  3   37[BANK0 ] float 
 10406 ;; Registers used:
 10407 ;;		wreg, status,2, status,0, pclath, cstack
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10413 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10414 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10415 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10416 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10417 ;;Total ram usage:       16 bytes
 10418 ;; Hardware stack levels used:    1
 10419 ;; Hardware stack levels required when called:    3
 10420 ;; This function calls:
 10421 ;;		___ftpack
 10422 ;; This function is called by:
 10423 ;;		_main
 10424 ;;		_map
 10425 ;;		_scalePotValue
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           
 10430                           ;psect for function ___ftdiv
 10431  083D                     ___ftdiv:	
 10432                           
 10433                           ;incstack = 0
 10434                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 10435  083D  0020               	movlb	0	; select bank0
 10436  083E  0848               	movf	___ftdiv@f1,w
 10437  083F  00CB               	movwf	??___ftdiv
 10438  0840  0849               	movf	___ftdiv@f1+1,w
 10439  0841  00CC               	movwf	??___ftdiv+1
 10440  0842  084A               	movf	___ftdiv@f1+2,w
 10441  0843  00CD               	movwf	??___ftdiv+2
 10442  0844  1003               	clrc
 10443  0845  0D4C               	rlf	??___ftdiv+1,w
 10444  0846  0D4D               	rlf	??___ftdiv+2,w
 10445  0847  00CE               	movwf	??___ftdiv+3
 10446  0848  084E               	movf	??___ftdiv+3,w
 10447  0849  00D3               	movwf	___ftdiv@exp
 10448  084A  0853               	movf	___ftdiv@exp,w
 10449  084B  1D03               	btfss	3,2
 10450  084C  2854               	goto	l3761
 10451  084D  3000               	movlw	0
 10452  084E  00C5               	movwf	?___ftdiv
 10453  084F  3000               	movlw	0
 10454  0850  00C6               	movwf	?___ftdiv+1
 10455  0851  3000               	movlw	0
 10456  0852  00C7               	movwf	?___ftdiv+2
 10457  0853  0008               	return
 10458  0854                     l3761:	
 10459  0854  0845               	movf	___ftdiv@f2,w
 10460  0855  00CB               	movwf	??___ftdiv
 10461  0856  0846               	movf	___ftdiv@f2+1,w
 10462  0857  00CC               	movwf	??___ftdiv+1
 10463  0858  0847               	movf	___ftdiv@f2+2,w
 10464  0859  00CD               	movwf	??___ftdiv+2
 10465  085A  1003               	clrc
 10466  085B  0D4C               	rlf	??___ftdiv+1,w
 10467  085C  0D4D               	rlf	??___ftdiv+2,w
 10468  085D  00CE               	movwf	??___ftdiv+3
 10469  085E  084E               	movf	??___ftdiv+3,w
 10470  085F  00D4               	movwf	___ftdiv@sign
 10471  0860  0854               	movf	___ftdiv@sign,w
 10472  0861  1D03               	btfss	3,2
 10473  0862  286A               	goto	l3767
 10474  0863  3000               	movlw	0
 10475  0864  00C5               	movwf	?___ftdiv
 10476  0865  3000               	movlw	0
 10477  0866  00C6               	movwf	?___ftdiv+1
 10478  0867  3000               	movlw	0
 10479  0868  00C7               	movwf	?___ftdiv+2
 10480  0869  0008               	return
 10481  086A                     l3767:	
 10482  086A  3000               	movlw	0
 10483  086B  00D0               	movwf	___ftdiv@f3
 10484  086C  3000               	movlw	0
 10485  086D  00D1               	movwf	___ftdiv@f3+1
 10486  086E  3000               	movlw	0
 10487  086F  00D2               	movwf	___ftdiv@f3+2
 10488  0870  3089               	movlw	137
 10489  0871  0754               	addwf	___ftdiv@sign,w
 10490  0872  00CB               	movwf	??___ftdiv
 10491  0873  084B               	movf	??___ftdiv,w
 10492  0874  02D3               	subwf	___ftdiv@exp,f
 10493  0875  0848               	movf	___ftdiv@f1,w
 10494  0876  00CB               	movwf	??___ftdiv
 10495  0877  0849               	movf	___ftdiv@f1+1,w
 10496  0878  00CC               	movwf	??___ftdiv+1
 10497  0879  084A               	movf	___ftdiv@f1+2,w
 10498  087A  00CD               	movwf	??___ftdiv+2
 10499  087B  3010               	movlw	16
 10500  087C                     u3215:	
 10501  087C  36CD               	lsrf	??___ftdiv+2,f
 10502  087D  0CCC               	rrf	??___ftdiv+1,f
 10503  087E  0CCB               	rrf	??___ftdiv,f
 10504  087F  0B89               	decfsz	9,f
 10505  0880  287C               	goto	u3215
 10506  0881  084B               	movf	??___ftdiv,w
 10507  0882  00CE               	movwf	??___ftdiv+3
 10508  0883  084E               	movf	??___ftdiv+3,w
 10509  0884  00D4               	movwf	___ftdiv@sign
 10510  0885  0845               	movf	___ftdiv@f2,w
 10511  0886  00CB               	movwf	??___ftdiv
 10512  0887  0846               	movf	___ftdiv@f2+1,w
 10513  0888  00CC               	movwf	??___ftdiv+1
 10514  0889  0847               	movf	___ftdiv@f2+2,w
 10515  088A  00CD               	movwf	??___ftdiv+2
 10516  088B  3010               	movlw	16
 10517  088C                     u3225:	
 10518  088C  36CD               	lsrf	??___ftdiv+2,f
 10519  088D  0CCC               	rrf	??___ftdiv+1,f
 10520  088E  0CCB               	rrf	??___ftdiv,f
 10521  088F  0B89               	decfsz	9,f
 10522  0890  288C               	goto	u3225
 10523  0891  084B               	movf	??___ftdiv,w
 10524  0892  00CE               	movwf	??___ftdiv+3
 10525  0893  084E               	movf	??___ftdiv+3,w
 10526  0894  06D4               	xorwf	___ftdiv@sign,f
 10527  0895  3080               	movlw	128
 10528  0896  00CB               	movwf	??___ftdiv
 10529  0897  084B               	movf	??___ftdiv,w
 10530  0898  05D4               	andwf	___ftdiv@sign,f
 10531  0899  17C9               	bsf	___ftdiv@f1+1,7
 10532  089A  30FF               	movlw	255
 10533  089B  05C8               	andwf	___ftdiv@f1,f
 10534  089C  30FF               	movlw	255
 10535  089D  05C9               	andwf	___ftdiv@f1+1,f
 10536  089E  3000               	movlw	0
 10537  089F  05CA               	andwf	___ftdiv@f1+2,f
 10538  08A0  17C6               	bsf	___ftdiv@f2+1,7
 10539  08A1  30FF               	movlw	255
 10540  08A2  05C5               	andwf	___ftdiv@f2,f
 10541  08A3  30FF               	movlw	255
 10542  08A4  05C6               	andwf	___ftdiv@f2+1,f
 10543  08A5  3000               	movlw	0
 10544  08A6  05C7               	andwf	___ftdiv@f2+2,f
 10545  08A7  3018               	movlw	24
 10546  08A8  00CB               	movwf	??___ftdiv
 10547  08A9  084B               	movf	??___ftdiv,w
 10548  08AA  00CF               	movwf	___ftdiv@cntr
 10549  08AB                     l3781:	
 10550  08AB  3001               	movlw	1
 10551  08AC                     u3235:	
 10552  08AC  35D0               	lslf	___ftdiv@f3,f
 10553  08AD  0DD1               	rlf	___ftdiv@f3+1,f
 10554  08AE  0DD2               	rlf	___ftdiv@f3+2,f
 10555  08AF  0B89               	decfsz	9,f
 10556  08B0  28AC               	goto	u3235
 10557  08B1  0847               	movf	___ftdiv@f2+2,w
 10558  08B2  024A               	subwf	___ftdiv@f1+2,w
 10559  08B3  1D03               	skipz
 10560  08B4  28BB               	goto	u3245
 10561  08B5  0846               	movf	___ftdiv@f2+1,w
 10562  08B6  0249               	subwf	___ftdiv@f1+1,w
 10563  08B7  1D03               	skipz
 10564  08B8  28BB               	goto	u3245
 10565  08B9  0845               	movf	___ftdiv@f2,w
 10566  08BA  0248               	subwf	___ftdiv@f1,w
 10567  08BB                     u3245:	
 10568  08BB  1C03               	skipc
 10569  08BC  28C4               	goto	l3789
 10570  08BD  0845               	movf	___ftdiv@f2,w
 10571  08BE  02C8               	subwf	___ftdiv@f1,f
 10572  08BF  0846               	movf	___ftdiv@f2+1,w
 10573  08C0  3BC9               	subwfb	___ftdiv@f1+1,f
 10574  08C1  0847               	movf	___ftdiv@f2+2,w
 10575  08C2  3BCA               	subwfb	___ftdiv@f1+2,f
 10576  08C3  1450               	bsf	___ftdiv@f3,0
 10577  08C4                     l3789:	
 10578  08C4  3001               	movlw	1
 10579  08C5                     u3255:	
 10580  08C5  35C8               	lslf	___ftdiv@f1,f
 10581  08C6  0DC9               	rlf	___ftdiv@f1+1,f
 10582  08C7  0DCA               	rlf	___ftdiv@f1+2,f
 10583  08C8  0B89               	decfsz	9,f
 10584  08C9  28C5               	goto	u3255
 10585  08CA  3001               	movlw	1
 10586  08CB  02CF               	subwf	___ftdiv@cntr,f
 10587  08CC  1D03               	btfss	3,2
 10588  08CD  28AB               	goto	l3781
 10589  08CE  0850               	movf	___ftdiv@f3,w
 10590  08CF  00A0               	movwf	___ftpack@arg
 10591  08D0  0851               	movf	___ftdiv@f3+1,w
 10592  08D1  00A1               	movwf	___ftpack@arg+1
 10593  08D2  0852               	movf	___ftdiv@f3+2,w
 10594  08D3  00A2               	movwf	___ftpack@arg+2
 10595  08D4  0853               	movf	___ftdiv@exp,w
 10596  08D5  00CB               	movwf	??___ftdiv
 10597  08D6  084B               	movf	??___ftdiv,w
 10598  08D7  00A3               	movwf	___ftpack@exp
 10599  08D8  0854               	movf	___ftdiv@sign,w
 10600  08D9  00CC               	movwf	??___ftdiv+1
 10601  08DA  084C               	movf	??___ftdiv+1,w
 10602  08DB  00A4               	movwf	___ftpack@sign
 10603  08DC  3195  2580         	fcall	___ftpack
 10604  08DE  0020               	movlb	0	; select bank0
 10605  08DF  0820               	movf	?___ftpack,w
 10606  08E0  00C5               	movwf	?___ftdiv
 10607  08E1  0821               	movf	?___ftpack+1,w
 10608  08E2  00C6               	movwf	?___ftdiv+1
 10609  08E3  0822               	movf	?___ftpack+2,w
 10610  08E4  00C7               	movwf	?___ftdiv+2
 10611  08E5  0008               	return
 10612  08E6                     __end_of___ftdiv:	
 10613                           
 10614                           	psect	text24
 10615  09CA                     __ptext24:	
 10616 ;; *************** function ___ftadd *****************
 10617 ;; Defined at:
 10618 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;  f1              3    8[BANK0 ] float 
 10621 ;;  f2              3   11[BANK0 ] float 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;  exp1            1   20[BANK0 ] unsigned char 
 10624 ;;  exp2            1   19[BANK0 ] unsigned char 
 10625 ;;  sign            1   18[BANK0 ] unsigned char 
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  3    8[BANK0 ] float 
 10628 ;; Registers used:
 10629 ;;		wreg, status,2, status,0, pclath, cstack
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/0
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10635 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10636 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10637 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10638 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10639 ;;Total ram usage:       13 bytes
 10640 ;; Hardware stack levels used:    1
 10641 ;; Hardware stack levels required when called:    3
 10642 ;; This function calls:
 10643 ;;		___ftpack
 10644 ;; This function is called by:
 10645 ;;		_map
 10646 ;;		_scalePotValue
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           
 10651                           ;psect for function ___ftadd
 10652  09CA                     ___ftadd:	
 10653                           
 10654                           ;incstack = 0
 10655                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 10656  09CA  0020               	movlb	0	; select bank0
 10657  09CB  0828               	movf	___ftadd@f1,w
 10658  09CC  00AE               	movwf	??___ftadd
 10659  09CD  0829               	movf	___ftadd@f1+1,w
 10660  09CE  00AF               	movwf	??___ftadd+1
 10661  09CF  082A               	movf	___ftadd@f1+2,w
 10662  09D0  00B0               	movwf	??___ftadd+2
 10663  09D1  1003               	clrc
 10664  09D2  0D2F               	rlf	??___ftadd+1,w
 10665  09D3  0D30               	rlf	??___ftadd+2,w
 10666  09D4  00B1               	movwf	??___ftadd+3
 10667  09D5  0831               	movf	??___ftadd+3,w
 10668  09D6  00B4               	movwf	___ftadd@exp1
 10669  09D7  082B               	movf	___ftadd@f2,w
 10670  09D8  00AE               	movwf	??___ftadd
 10671  09D9  082C               	movf	___ftadd@f2+1,w
 10672  09DA  00AF               	movwf	??___ftadd+1
 10673  09DB  082D               	movf	___ftadd@f2+2,w
 10674  09DC  00B0               	movwf	??___ftadd+2
 10675  09DD  1003               	clrc
 10676  09DE  0D2F               	rlf	??___ftadd+1,w
 10677  09DF  0D30               	rlf	??___ftadd+2,w
 10678  09E0  00B1               	movwf	??___ftadd+3
 10679  09E1  0831               	movf	??___ftadd+3,w
 10680  09E2  00B3               	movwf	___ftadd@exp2
 10681  09E3  0834               	movf	___ftadd@exp1,w
 10682  09E4  1903               	btfsc	3,2
 10683  09E5  29F2               	goto	l3691
 10684  09E6  0833               	movf	___ftadd@exp2,w
 10685  09E7  0234               	subwf	___ftadd@exp1,w
 10686  09E8  1803               	skipnc
 10687  09E9  29F9               	goto	l3695
 10688  09EA  0334               	decf	___ftadd@exp1,w
 10689  09EB  3AFF               	xorlw	255
 10690  09EC  0733               	addwf	___ftadd@exp2,w
 10691  09ED  00AE               	movwf	??___ftadd
 10692  09EE  3019               	movlw	25
 10693  09EF  022E               	subwf	??___ftadd,w
 10694  09F0  1C03               	skipc
 10695  09F1  29F9               	goto	l3695
 10696  09F2                     l3691:	
 10697  09F2  082B               	movf	___ftadd@f2,w
 10698  09F3  00A8               	movwf	?___ftadd
 10699  09F4  082C               	movf	___ftadd@f2+1,w
 10700  09F5  00A9               	movwf	?___ftadd+1
 10701  09F6  082D               	movf	___ftadd@f2+2,w
 10702  09F7  00AA               	movwf	?___ftadd+2
 10703  09F8  0008               	return
 10704  09F9                     l3695:	
 10705  09F9  0833               	movf	___ftadd@exp2,w
 10706  09FA  1903               	btfsc	3,2
 10707  09FB  0008               	return
 10708  09FC  0834               	movf	___ftadd@exp1,w
 10709  09FD  0233               	subwf	___ftadd@exp2,w
 10710  09FE  1803               	skipnc
 10711  09FF  2A08               	goto	l3701
 10712  0A00  0333               	decf	___ftadd@exp2,w
 10713  0A01  3AFF               	xorlw	255
 10714  0A02  0734               	addwf	___ftadd@exp1,w
 10715  0A03  00AE               	movwf	??___ftadd
 10716  0A04  3019               	movlw	25
 10717  0A05  022E               	subwf	??___ftadd,w
 10718  0A06  1803               	btfsc	3,0
 10719  0A07  0008               	return
 10720  0A08                     l3701:	
 10721  0A08  3006               	movlw	6
 10722  0A09  00AE               	movwf	??___ftadd
 10723  0A0A  082E               	movf	??___ftadd,w
 10724  0A0B  00B2               	movwf	___ftadd@sign
 10725  0A0C  1BAA               	btfsc	___ftadd@f1+2,7
 10726  0A0D  17B2               	bsf	___ftadd@sign,7
 10727  0A0E  1BAD               	btfsc	___ftadd@f2+2,7
 10728  0A0F  1732               	bsf	___ftadd@sign,6
 10729  0A10  17A9               	bsf	___ftadd@f1+1,7
 10730  0A11  30FF               	movlw	255
 10731  0A12  05A8               	andwf	___ftadd@f1,f
 10732  0A13  30FF               	movlw	255
 10733  0A14  05A9               	andwf	___ftadd@f1+1,f
 10734  0A15  3000               	movlw	0
 10735  0A16  05AA               	andwf	___ftadd@f1+2,f
 10736  0A17  17AC               	bsf	___ftadd@f2+1,7
 10737  0A18  30FF               	movlw	255
 10738  0A19  05AB               	andwf	___ftadd@f2,f
 10739  0A1A  30FF               	movlw	255
 10740  0A1B  05AC               	andwf	___ftadd@f2+1,f
 10741  0A1C  3000               	movlw	0
 10742  0A1D  05AD               	andwf	___ftadd@f2+2,f
 10743  0A1E  0833               	movf	___ftadd@exp2,w
 10744  0A1F  0234               	subwf	___ftadd@exp1,w
 10745  0A20  1803               	skipnc
 10746  0A21  2A44               	goto	l3723
 10747  0A22                     l3713:	
 10748  0A22  3001               	movlw	1
 10749  0A23                     u3055:	
 10750  0A23  35AB               	lslf	___ftadd@f2,f
 10751  0A24  0DAC               	rlf	___ftadd@f2+1,f
 10752  0A25  0DAD               	rlf	___ftadd@f2+2,f
 10753  0A26  0B89               	decfsz	9,f
 10754  0A27  2A23               	goto	u3055
 10755  0A28  3001               	movlw	1
 10756  0A29  02B3               	subwf	___ftadd@exp2,f
 10757  0A2A  0833               	movf	___ftadd@exp2,w
 10758  0A2B  0634               	xorwf	___ftadd@exp1,w
 10759  0A2C  1903               	skipnz
 10760  0A2D  2A3F               	goto	l3721
 10761  0A2E  3001               	movlw	1
 10762  0A2F  02B2               	subwf	___ftadd@sign,f
 10763  0A30  0832               	movf	___ftadd@sign,w
 10764  0A31  3907               	andlw	7
 10765  0A32  1903               	btfsc	3,2
 10766  0A33  2A3F               	goto	l3721
 10767  0A34  2A22               	goto	l3713
 10768  0A35                     l3719:	
 10769  0A35  3001               	movlw	1
 10770  0A36                     u3085:	
 10771  0A36  36AA               	lsrf	___ftadd@f1+2,f
 10772  0A37  0CA9               	rrf	___ftadd@f1+1,f
 10773  0A38  0CA8               	rrf	___ftadd@f1,f
 10774  0A39  0B89               	decfsz	9,f
 10775  0A3A  2A36               	goto	u3085
 10776  0A3B  3001               	movlw	1
 10777  0A3C  00AE               	movwf	??___ftadd
 10778  0A3D  082E               	movf	??___ftadd,w
 10779  0A3E  07B4               	addwf	___ftadd@exp1,f
 10780  0A3F                     l3721:	
 10781  0A3F  0834               	movf	___ftadd@exp1,w
 10782  0A40  0633               	xorwf	___ftadd@exp2,w
 10783  0A41  1903               	btfsc	3,2
 10784  0A42  2A69               	goto	l1537
 10785  0A43  2A35               	goto	l3719
 10786  0A44                     l3723:	
 10787  0A44  0834               	movf	___ftadd@exp1,w
 10788  0A45  0233               	subwf	___ftadd@exp2,w
 10789  0A46  1803               	skipnc
 10790  0A47  2A69               	goto	l1537
 10791  0A48                     l3725:	
 10792  0A48  3001               	movlw	1
 10793  0A49                     u3115:	
 10794  0A49  35A8               	lslf	___ftadd@f1,f
 10795  0A4A  0DA9               	rlf	___ftadd@f1+1,f
 10796  0A4B  0DAA               	rlf	___ftadd@f1+2,f
 10797  0A4C  0B89               	decfsz	9,f
 10798  0A4D  2A49               	goto	u3115
 10799  0A4E  3001               	movlw	1
 10800  0A4F  02B4               	subwf	___ftadd@exp1,f
 10801  0A50  0833               	movf	___ftadd@exp2,w
 10802  0A51  0634               	xorwf	___ftadd@exp1,w
 10803  0A52  1903               	skipnz
 10804  0A53  2A65               	goto	l3733
 10805  0A54  3001               	movlw	1
 10806  0A55  02B2               	subwf	___ftadd@sign,f
 10807  0A56  0832               	movf	___ftadd@sign,w
 10808  0A57  3907               	andlw	7
 10809  0A58  1903               	btfsc	3,2
 10810  0A59  2A65               	goto	l3733
 10811  0A5A  2A48               	goto	l3725
 10812  0A5B                     l3731:	
 10813  0A5B  3001               	movlw	1
 10814  0A5C                     u3145:	
 10815  0A5C  36AD               	lsrf	___ftadd@f2+2,f
 10816  0A5D  0CAC               	rrf	___ftadd@f2+1,f
 10817  0A5E  0CAB               	rrf	___ftadd@f2,f
 10818  0A5F  0B89               	decfsz	9,f
 10819  0A60  2A5C               	goto	u3145
 10820  0A61  3001               	movlw	1
 10821  0A62  00AE               	movwf	??___ftadd
 10822  0A63  082E               	movf	??___ftadd,w
 10823  0A64  07B3               	addwf	___ftadd@exp2,f
 10824  0A65                     l3733:	
 10825  0A65  0834               	movf	___ftadd@exp1,w
 10826  0A66  0633               	xorwf	___ftadd@exp2,w
 10827  0A67  1D03               	skipz
 10828  0A68  2A5B               	goto	l3731
 10829  0A69                     l1537:	
 10830  0A69  1FB2               	btfss	___ftadd@sign,7
 10831  0A6A  2A7B               	goto	l3737
 10832  0A6B  30FF               	movlw	255
 10833  0A6C  06A8               	xorwf	___ftadd@f1,f
 10834  0A6D  30FF               	movlw	255
 10835  0A6E  06A9               	xorwf	___ftadd@f1+1,f
 10836  0A6F  30FF               	movlw	255
 10837  0A70  06AA               	xorwf	___ftadd@f1+2,f
 10838  0A71  3001               	movlw	1
 10839  0A72  07A8               	addwf	___ftadd@f1,f
 10840  0A73  3000               	movlw	0
 10841  0A74  1803               	skipnc
 10842  0A75  3001               	movlw	1
 10843  0A76  07A9               	addwf	___ftadd@f1+1,f
 10844  0A77  3000               	movlw	0
 10845  0A78  1803               	skipnc
 10846  0A79  3001               	movlw	1
 10847  0A7A  07AA               	addwf	___ftadd@f1+2,f
 10848  0A7B                     l3737:	
 10849  0A7B  1F32               	btfss	___ftadd@sign,6
 10850  0A7C  2A8D               	goto	l3741
 10851  0A7D  30FF               	movlw	255
 10852  0A7E  06AB               	xorwf	___ftadd@f2,f
 10853  0A7F  30FF               	movlw	255
 10854  0A80  06AC               	xorwf	___ftadd@f2+1,f
 10855  0A81  30FF               	movlw	255
 10856  0A82  06AD               	xorwf	___ftadd@f2+2,f
 10857  0A83  3001               	movlw	1
 10858  0A84  07AB               	addwf	___ftadd@f2,f
 10859  0A85  3000               	movlw	0
 10860  0A86  1803               	skipnc
 10861  0A87  3001               	movlw	1
 10862  0A88  07AC               	addwf	___ftadd@f2+1,f
 10863  0A89  3000               	movlw	0
 10864  0A8A  1803               	skipnc
 10865  0A8B  3001               	movlw	1
 10866  0A8C  07AD               	addwf	___ftadd@f2+2,f
 10867  0A8D                     l3741:	
 10868  0A8D  01B2               	clrf	___ftadd@sign
 10869  0A8E  0828               	movf	___ftadd@f1,w
 10870  0A8F  07AB               	addwf	___ftadd@f2,f
 10871  0A90  0829               	movf	___ftadd@f1+1,w
 10872  0A91  3DAC               	addwfc	___ftadd@f2+1,f
 10873  0A92  082A               	movf	___ftadd@f1+2,w
 10874  0A93  3DAD               	addwfc	___ftadd@f2+2,f
 10875  0A94  1FAD               	btfss	___ftadd@f2+2,7
 10876  0A95  2AA8               	goto	l3751
 10877  0A96  30FF               	movlw	255
 10878  0A97  06AB               	xorwf	___ftadd@f2,f
 10879  0A98  30FF               	movlw	255
 10880  0A99  06AC               	xorwf	___ftadd@f2+1,f
 10881  0A9A  30FF               	movlw	255
 10882  0A9B  06AD               	xorwf	___ftadd@f2+2,f
 10883  0A9C  3001               	movlw	1
 10884  0A9D  07AB               	addwf	___ftadd@f2,f
 10885  0A9E  3000               	movlw	0
 10886  0A9F  1803               	skipnc
 10887  0AA0  3001               	movlw	1
 10888  0AA1  07AC               	addwf	___ftadd@f2+1,f
 10889  0AA2  3000               	movlw	0
 10890  0AA3  1803               	skipnc
 10891  0AA4  3001               	movlw	1
 10892  0AA5  07AD               	addwf	___ftadd@f2+2,f
 10893  0AA6  01B2               	clrf	___ftadd@sign
 10894  0AA7  0AB2               	incf	___ftadd@sign,f
 10895  0AA8                     l3751:	
 10896  0AA8  082B               	movf	___ftadd@f2,w
 10897  0AA9  00A0               	movwf	___ftpack@arg
 10898  0AAA  082C               	movf	___ftadd@f2+1,w
 10899  0AAB  00A1               	movwf	___ftpack@arg+1
 10900  0AAC  082D               	movf	___ftadd@f2+2,w
 10901  0AAD  00A2               	movwf	___ftpack@arg+2
 10902  0AAE  0834               	movf	___ftadd@exp1,w
 10903  0AAF  00AE               	movwf	??___ftadd
 10904  0AB0  082E               	movf	??___ftadd,w
 10905  0AB1  00A3               	movwf	___ftpack@exp
 10906  0AB2  0832               	movf	___ftadd@sign,w
 10907  0AB3  00AF               	movwf	??___ftadd+1
 10908  0AB4  082F               	movf	??___ftadd+1,w
 10909  0AB5  00A4               	movwf	___ftpack@sign
 10910  0AB6  3195  2580         	fcall	___ftpack
 10911  0AB8  0020               	movlb	0	; select bank0
 10912  0AB9  0820               	movf	?___ftpack,w
 10913  0ABA  00A8               	movwf	?___ftadd
 10914  0ABB  0821               	movf	?___ftpack+1,w
 10915  0ABC  00A9               	movwf	?___ftadd+1
 10916  0ABD  0822               	movf	?___ftpack+2,w
 10917  0ABE  00AA               	movwf	?___ftadd+2
 10918  0ABF  0008               	return
 10919  0AC0                     __end_of___ftadd:	
 10920                           
 10921                           	psect	text25
 10922  1EC3                     __ptext25:	
 10923 ;; *************** function _initSwitchBypass *****************
 10924 ;; Defined at:
 10925 ;;		line 29 in file "SwitchBypass.c"
 10926 ;; Parameters:    Size  Location     Type
 10927 ;;		None
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;  initState       2   22[BANK0 ] int 
 10930 ;; Return value:  Size  Location     Type
 10931 ;;                  1    wreg      void 
 10932 ;; Registers used:
 10933 ;;		wreg, status,2, status,0, pclath, cstack
 10934 ;; Tracked objects:
 10935 ;;		On entry : 0/0
 10936 ;;		On exit  : 0/0
 10937 ;;		Unchanged: 0/0
 10938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10940 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10942 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10943 ;;Total ram usage:        2 bytes
 10944 ;; Hardware stack levels used:    1
 10945 ;; Hardware stack levels required when called:    5
 10946 ;; This function calls:
 10947 ;;		_getSwitchBypassState
 10948 ;;		_setSwitchBypassState
 10949 ;; This function is called by:
 10950 ;;		_main
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954                           
 10955                           ;psect for function _initSwitchBypass
 10956  1EC3                     _initSwitchBypass:	
 10957                           
 10958                           ;SwitchBypass.c: 30: int initState = getSwitchBypassState();
 10959                           
 10960                           ;incstack = 0
 10961                           ; Regs used in _initSwitchBypass: [wreg+status,2+status,0+pclath+cstack]
 10962  1EC3  319E  2681  319E   	fcall	_getSwitchBypassState
 10963  1EC6  0020               	movlb	0	; select bank0
 10964  1EC7  0821               	movf	?_getSwitchBypassState+1,w
 10965  1EC8  00B7               	movwf	initSwitchBypass@initState+1
 10966  1EC9  0820               	movf	?_getSwitchBypassState,w
 10967  1ECA  00B6               	movwf	initSwitchBypass@initState
 10968                           
 10969                           ;SwitchBypass.c: 31: setSwitchBypassState(initState);
 10970  1ECB  0837               	movf	initSwitchBypass@initState+1,w
 10971  1ECC  00B3               	movwf	setSwitchBypassState@f_state+1
 10972  1ECD  0836               	movf	initSwitchBypass@initState,w
 10973  1ECE  00B2               	movwf	setSwitchBypassState@f_state
 10974  1ECF  3193  23A0         	fcall	_setSwitchBypassState
 10975  1ED1  0008               	return
 10976  1ED2                     __end_of_initSwitchBypass:	
 10977                           
 10978                           	psect	text26
 10979  13A0                     __ptext26:	
 10980 ;; *************** function _setSwitchBypassState *****************
 10981 ;; Defined at:
 10982 ;;		line 134 in file "SwitchBypass.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  f_state         2   18[BANK0 ] int 
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;		None
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1    wreg      void 
 10989 ;; Registers used:
 10990 ;;		wreg, status,2, status,0, pclath, cstack
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10998 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10999 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11000 ;;Total ram usage:        4 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    4
 11003 ;; This function calls:
 11004 ;;		_updateSwitchBypassState
 11005 ;;		_wait_ms
 11006 ;; This function is called by:
 11007 ;;		_initSwitchBypass
 11008 ;;		_updateSwitchBypass
 11009 ;; This function uses a non-reentrant model
 11010 ;;
 11011                           
 11012                           
 11013                           ;psect for function _setSwitchBypassState
 11014  13A0                     _setSwitchBypassState:	
 11015                           
 11016                           ;SwitchBypass.c: 135: if (switchBypass_state == f_state) {return;}
 11017                           
 11018                           ;incstack = 0
 11019                           ; Regs used in _setSwitchBypassState: [wreg+status,2+status,0+pclath+cstack]
 11020  13A0  0021               	movlb	1	; select bank1
 11021  13A1  083D               	movf	_switchBypass_state^(0+128),w
 11022  13A2  0020               	movlb	0	; select bank0
 11023  13A3  00B4               	movwf	??_setSwitchBypassState
 11024  13A4  01B5               	clrf	??_setSwitchBypassState+1
 11025  13A5  0833               	movf	setSwitchBypassState@f_state+1,w
 11026  13A6  0635               	xorwf	??_setSwitchBypassState+1,w
 11027  13A7  1D03               	skipz
 11028  13A8  2BAB               	goto	u2745
 11029  13A9  0832               	movf	setSwitchBypassState@f_state,w
 11030  13AA  0634               	xorwf	??_setSwitchBypassState,w
 11031  13AB                     u2745:	
 11032  13AB  1903               	btfsc	3,2
 11033  13AC  0008               	return
 11034                           
 11035                           ;SwitchBypass.c: 136: switchBypass_state = f_state;
 11036  13AD  0832               	movf	setSwitchBypassState@f_state,w
 11037  13AE  00B4               	movwf	??_setSwitchBypassState
 11038  13AF  0834               	movf	??_setSwitchBypassState,w
 11039  13B0  0021               	movlb	1	; select bank1
 11040  13B1  00BD               	movwf	_switchBypass_state^(0+128)
 11041                           
 11042                           ;SwitchBypass.c: 137: LATBbits.LATB2 = f_state;
 11043  13B2  0020               	movlb	0	; select bank0
 11044  13B3  0C32               	rrf	setSwitchBypassState@f_state,w
 11045  13B4  0022               	movlb	2	; select bank2
 11046  13B5  1C03               	skipc
 11047  13B6  110D               	bcf	13,2	;volatile
 11048  13B7  1803               	skipnc
 11049  13B8  150D               	bsf	13,2	;volatile
 11050                           
 11051                           ;SwitchBypass.c: 138: LATBbits.LATB3 = 0;
 11052  13B9  118D               	bcf	13,3	;volatile
 11053                           
 11054                           ;SwitchBypass.c: 139: LATGbits.LATG2 = f_state;
 11055  13BA  0020               	movlb	0	; select bank0
 11056  13BB  0C32               	rrf	setSwitchBypassState@f_state,w
 11057  13BC  0027               	movlb	7	; select bank7
 11058  13BD  1C03               	skipc
 11059  13BE  110D               	bcf	13,2	;volatile
 11060  13BF  1803               	skipnc
 11061  13C0  150D               	bsf	13,2	;volatile
 11062                           
 11063                           ;SwitchBypass.c: 140: LATGbits.LATG1 = !f_state;
 11064  13C1  0020               	movlb	0	; select bank0
 11065  13C2  0832               	movf	setSwitchBypassState@f_state,w
 11066  13C3  0433               	iorwf	setSwitchBypassState@f_state+1,w
 11067  13C4  1D03               	btfss	3,2
 11068  13C5  2BC9               	goto	u2750
 11069  13C6  0027               	movlb	7	; select bank7
 11070  13C7  148D               	bsf	13,1	;volatile
 11071  13C8  2BCB               	goto	l3579
 11072  13C9                     u2750:	
 11073  13C9  0027               	movlb	7	; select bank7
 11074  13CA  108D               	bcf	13,1	;volatile
 11075  13CB                     l3579:	
 11076                           
 11077                           ;SwitchBypass.c: 142: wait_ms(20);
 11078  13CB  3014               	movlw	20
 11079  13CC  0020               	movlb	0	; select bank0
 11080  13CD  00AC               	movwf	wait_ms@timeSec
 11081  13CE  3000               	movlw	0
 11082  13CF  00AD               	movwf	wait_ms@timeSec+1
 11083  13D0  3190  20C5  3193   	fcall	_wait_ms
 11084                           
 11085                           ;SwitchBypass.c: 144: LATGbits.LATG2 = 0;
 11086  13D3  0027               	movlb	7	; select bank7
 11087  13D4  110D               	bcf	13,2	;volatile
 11088                           
 11089                           ;SwitchBypass.c: 145: LATGbits.LATG1 = 0;
 11090  13D5  108D               	bcf	13,1	;volatile
 11091                           
 11092                           ;SwitchBypass.c: 147: updateSwitchBypassState(switchBypass_state);
 11093  13D6  0021               	movlb	1	; select bank1
 11094  13D7  083D               	movf	_switchBypass_state^(0+128),w
 11095  13D8  0020               	movlb	0	; select bank0
 11096  13D9  00B4               	movwf	??_setSwitchBypassState
 11097  13DA  01B5               	clrf	??_setSwitchBypassState+1
 11098  13DB  0834               	movf	??_setSwitchBypassState,w
 11099  13DC  00A0               	movwf	updateSwitchBypassState@state
 11100  13DD  0835               	movf	??_setSwitchBypassState+1,w
 11101  13DE  00A1               	movwf	updateSwitchBypassState@state+1
 11102  13DF  3187  27FF  3193   	fcall	_updateSwitchBypassState
 11103                           
 11104                           ;SwitchBypass.c: 148: wait_ms(20);
 11105  13E2  3014               	movlw	20
 11106  13E3  0020               	movlb	0	; select bank0
 11107  13E4  00AC               	movwf	wait_ms@timeSec
 11108  13E5  3000               	movlw	0
 11109  13E6  00AD               	movwf	wait_ms@timeSec+1
 11110  13E7  3190  20C5         	fcall	_wait_ms
 11111  13E9  0008               	return
 11112  13EA                     __end_of_setSwitchBypassState:	
 11113                           
 11114                           	psect	text27
 11115  10C5                     __ptext27:	
 11116 ;; *************** function _wait_ms *****************
 11117 ;; Defined at:
 11118 ;;		line 23 in file "system.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  timeSec         2   12[BANK0 ] unsigned int 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;  timemsl         4   14[BANK0 ] long 
 11123 ;; Return value:  Size  Location     Type
 11124 ;;                  1    wreg      void 
 11125 ;; Registers used:
 11126 ;;		wreg, status,2, status,0, pclath, cstack
 11127 ;; Tracked objects:
 11128 ;;		On entry : 0/0
 11129 ;;		On exit  : 0/0
 11130 ;;		Unchanged: 0/0
 11131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11133 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11135 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11136 ;;Total ram usage:        6 bytes
 11137 ;; Hardware stack levels used:    1
 11138 ;; Hardware stack levels required when called:    3
 11139 ;; This function calls:
 11140 ;;		___lmul
 11141 ;; This function is called by:
 11142 ;;		_star_tactiles
 11143 ;;		_solidring_tactiles
 11144 ;;		_read_bottom_tactile
 11145 ;;		_read_top_tactile
 11146 ;;		_setSwitchBypassState
 11147 ;;		_setDoublePressState
 11148 ;;		_showError_Alternating
 11149 ;;		_show_error
 11150 ;;		_show_cancel
 11151 ;;		_ring_tactiles
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155                           
 11156                           ;psect for function _wait_ms
 11157  10C5                     _wait_ms:	
 11158                           
 11159                           ;system.c: 25: long timemsl = 0;
 11160                           
 11161                           ;incstack = 0
 11162                           ; Regs used in _wait_ms: [wreg+status,2+status,0+pclath+cstack]
 11163  10C5  3000               	movlw	0
 11164  10C6  0020               	movlb	0	; select bank0
 11165  10C7  00B1               	movwf	wait_ms@timemsl+3
 11166  10C8  3000               	movlw	0
 11167  10C9  00B0               	movwf	wait_ms@timemsl+2
 11168  10CA  3000               	movlw	0
 11169  10CB  00AF               	movwf	wait_ms@timemsl+1
 11170  10CC  3000               	movlw	0
 11171  10CD  00AE               	movwf	wait_ms@timemsl
 11172                           
 11173                           ;system.c: 26: timemsl = timeSec * 1000l;
 11174  10CE  082C               	movf	wait_ms@timeSec,w
 11175  10CF  00A0               	movwf	___lmul@multiplier
 11176  10D0  082D               	movf	wait_ms@timeSec+1,w
 11177  10D1  00A1               	movwf	___lmul@multiplier+1
 11178  10D2  01A2               	clrf	___lmul@multiplier+2
 11179  10D3  01A3               	clrf	___lmul@multiplier+3
 11180  10D4  3000               	movlw	0
 11181  10D5  00A7               	movwf	___lmul@multiplicand+3
 11182  10D6  3000               	movlw	0
 11183  10D7  00A6               	movwf	___lmul@multiplicand+2
 11184  10D8  3003               	movlw	3
 11185  10D9  00A5               	movwf	___lmul@multiplicand+1
 11186  10DA  30E8               	movlw	232
 11187  10DB  00A4               	movwf	___lmul@multiplicand
 11188  10DC  3190  2064  3190   	fcall	___lmul
 11189  10DF  0020               	movlb	0	; select bank0
 11190  10E0  0823               	movf	?___lmul+3,w
 11191  10E1  00B1               	movwf	wait_ms@timemsl+3
 11192  10E2  0822               	movf	?___lmul+2,w
 11193  10E3  00B0               	movwf	wait_ms@timemsl+2
 11194  10E4  0821               	movf	?___lmul+1,w
 11195  10E5  00AF               	movwf	wait_ms@timemsl+1
 11196  10E6  0820               	movf	?___lmul,w
 11197  10E7  00AE               	movwf	wait_ms@timemsl
 11198  10E8                     l327:	
 11199                           ;system.c: 27: for( ; timemsl; timemsl--);
 11200                           
 11201  10E8  0831               	movf	wait_ms@timemsl+3,w
 11202  10E9  0430               	iorwf	wait_ms@timemsl+2,w
 11203  10EA  042F               	iorwf	wait_ms@timemsl+1,w
 11204  10EB  042E               	iorwf	wait_ms@timemsl,w
 11205  10EC  1903               	btfsc	3,2
 11206  10ED  0008               	return
 11207  10EE  30FF               	movlw	255
 11208  10EF  07AE               	addwf	wait_ms@timemsl,f
 11209  10F0  30FF               	movlw	255
 11210  10F1  3DAF               	addwfc	wait_ms@timemsl+1,f
 11211  10F2  30FF               	movlw	255
 11212  10F3  3DB0               	addwfc	wait_ms@timemsl+2,f
 11213  10F4  30FF               	movlw	255
 11214  10F5  3DB1               	addwfc	wait_ms@timemsl+3,f
 11215  10F6  28E8               	goto	l327
 11216  10F7                     __end_of_wait_ms:	
 11217                           
 11218                           	psect	text28
 11219  1064                     __ptext28:	
 11220 ;; *************** function ___lmul *****************
 11221 ;; Defined at:
 11222 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
 11223 ;; Parameters:    Size  Location     Type
 11224 ;;  multiplier      4    0[BANK0 ] unsigned long 
 11225 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 11226 ;; Auto vars:     Size  Location     Type
 11227 ;;  product         4    8[BANK0 ] unsigned long 
 11228 ;; Return value:  Size  Location     Type
 11229 ;;                  4    0[BANK0 ] unsigned long 
 11230 ;; Registers used:
 11231 ;;		wreg, status,2, status,0
 11232 ;; Tracked objects:
 11233 ;;		On entry : 0/0
 11234 ;;		On exit  : 0/0
 11235 ;;		Unchanged: 0/0
 11236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11237 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11238 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11240 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11241 ;;Total ram usage:       12 bytes
 11242 ;; Hardware stack levels used:    1
 11243 ;; Hardware stack levels required when called:    2
 11244 ;; This function calls:
 11245 ;;		Nothing
 11246 ;; This function is called by:
 11247 ;;		_wait_ms
 11248 ;; This function uses a non-reentrant model
 11249 ;;
 11250                           
 11251                           
 11252                           ;psect for function ___lmul
 11253  1064                     ___lmul:	
 11254                           
 11255                           ;incstack = 0
 11256                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11257  1064  3000               	movlw	0
 11258  1065  0020               	movlb	0	; select bank0
 11259  1066  00AB               	movwf	___lmul@product+3
 11260  1067  3000               	movlw	0
 11261  1068  00AA               	movwf	___lmul@product+2
 11262  1069  3000               	movlw	0
 11263  106A  00A9               	movwf	___lmul@product+1
 11264  106B  3000               	movlw	0
 11265  106C  00A8               	movwf	___lmul@product
 11266  106D                     l3377:	
 11267  106D  1C20               	btfss	___lmul@multiplier,0
 11268  106E  2877               	goto	l3381
 11269  106F  0824               	movf	___lmul@multiplicand,w
 11270  1070  07A8               	addwf	___lmul@product,f
 11271  1071  0825               	movf	___lmul@multiplicand+1,w
 11272  1072  3DA9               	addwfc	___lmul@product+1,f
 11273  1073  0826               	movf	___lmul@multiplicand+2,w
 11274  1074  3DAA               	addwfc	___lmul@product+2,f
 11275  1075  0827               	movf	___lmul@multiplicand+3,w
 11276  1076  3DAB               	addwfc	___lmul@product+3,f
 11277  1077                     l3381:	
 11278  1077  3001               	movlw	1
 11279  1078                     u2535:	
 11280  1078  35A4               	lslf	___lmul@multiplicand,f
 11281  1079  0DA5               	rlf	___lmul@multiplicand+1,f
 11282  107A  0DA6               	rlf	___lmul@multiplicand+2,f
 11283  107B  0DA7               	rlf	___lmul@multiplicand+3,f
 11284  107C  0B89               	decfsz	9,f
 11285  107D  2878               	goto	u2535
 11286  107E  3001               	movlw	1
 11287  107F                     u2545:	
 11288  107F  36A3               	lsrf	___lmul@multiplier+3,f
 11289  1080  0CA2               	rrf	___lmul@multiplier+2,f
 11290  1081  0CA1               	rrf	___lmul@multiplier+1,f
 11291  1082  0CA0               	rrf	___lmul@multiplier,f
 11292  1083  0B89               	decfsz	9,f
 11293  1084  287F               	goto	u2545
 11294  1085  0823               	movf	___lmul@multiplier+3,w
 11295  1086  0422               	iorwf	___lmul@multiplier+2,w
 11296  1087  0421               	iorwf	___lmul@multiplier+1,w
 11297  1088  0420               	iorwf	___lmul@multiplier,w
 11298  1089  1D03               	skipz
 11299  108A  286D               	goto	l3377
 11300  108B  082B               	movf	___lmul@product+3,w
 11301  108C  00A3               	movwf	?___lmul+3
 11302  108D  082A               	movf	___lmul@product+2,w
 11303  108E  00A2               	movwf	?___lmul+2
 11304  108F  0829               	movf	___lmul@product+1,w
 11305  1090  00A1               	movwf	?___lmul+1
 11306  1091  0828               	movf	___lmul@product,w
 11307  1092  00A0               	movwf	?___lmul
 11308  1093  0008               	return
 11309  1094                     __end_of___lmul:	
 11310                           
 11311                           	psect	text29
 11312  07FF                     __ptext29:	
 11313 ;; *************** function _updateSwitchBypassState *****************
 11314 ;; Defined at:
 11315 ;;		line 96 in file "state_manager.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  state           2    0[BANK0 ] int 
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;		None
 11320 ;; Return value:  Size  Location     Type
 11321 ;;                  1    wreg      void 
 11322 ;; Registers used:
 11323 ;;		None
 11324 ;; Tracked objects:
 11325 ;;		On entry : 0/0
 11326 ;;		On exit  : 0/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11332 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11333 ;;Total ram usage:        2 bytes
 11334 ;; Hardware stack levels used:    1
 11335 ;; Hardware stack levels required when called:    2
 11336 ;; This function calls:
 11337 ;;		Nothing
 11338 ;; This function is called by:
 11339 ;;		_setSwitchBypassState
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           
 11344                           ;psect for function _updateSwitchBypassState
 11345  07FF                     _updateSwitchBypassState:	
 11346                           
 11347                           ;incstack = 0
 11348                           ; Regs used in _updateSwitchBypassState: []
 11349  07FF  0008               	return
 11350  0800                     __end_of_updateSwitchBypassState:	
 11351                           
 11352                           	psect	text30
 11353  1E81                     __ptext30:	
 11354 ;; *************** function _getSwitchBypassState *****************
 11355 ;; Defined at:
 11356 ;;		line 103 in file "state_manager.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;		None
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;		None
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  2    0[BANK0 ] int 
 11363 ;; Registers used:
 11364 ;;		status,2
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11370 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11373 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11374 ;;Total ram usage:        2 bytes
 11375 ;; Hardware stack levels used:    1
 11376 ;; Hardware stack levels required when called:    2
 11377 ;; This function calls:
 11378 ;;		Nothing
 11379 ;; This function is called by:
 11380 ;;		_initSwitchBypass
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           
 11385                           ;psect for function _getSwitchBypassState
 11386  1E81                     _getSwitchBypassState:	
 11387                           
 11388                           ;state_manager.c: 108: return 0;
 11389                           
 11390                           ;incstack = 0
 11391                           ; Regs used in _getSwitchBypassState: [status,2]
 11392  1E81  0020               	movlb	0	; select bank0
 11393  1E82  01A0               	clrf	?_getSwitchBypassState
 11394  1E83  01A1               	clrf	?_getSwitchBypassState+1
 11395  1E84  0008               	return
 11396  1E85                     __end_of_getSwitchBypassState:	
 11397                           
 11398                           	psect	text31
 11399  1EFF                     __ptext31:	
 11400 ;; *************** function _adc_convert *****************
 11401 ;; Defined at:
 11402 ;;		line 110 in file "user.c"
 11403 ;; Parameters:    Size  Location     Type
 11404 ;;  channel         1    wreg     unsigned char 
 11405 ;; Auto vars:     Size  Location     Type
 11406 ;;  channel         1    3[BANK0 ] unsigned char 
 11407 ;; Return value:  Size  Location     Type
 11408 ;;                  2    0[BANK0 ] unsigned int 
 11409 ;; Registers used:
 11410 ;;		wreg, status,2, status,0
 11411 ;; Tracked objects:
 11412 ;;		On entry : 0/0
 11413 ;;		On exit  : 0/0
 11414 ;;		Unchanged: 0/0
 11415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11417 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11418 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11419 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11420 ;;Total ram usage:        4 bytes
 11421 ;; Hardware stack levels used:    1
 11422 ;; Hardware stack levels required when called:    2
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_main
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           
 11431                           ;psect for function _adc_convert
 11432  1EFF                     _adc_convert:	
 11433                           
 11434                           ;incstack = 0
 11435                           ; Regs used in _adc_convert: [wreg+status,2+status,0]
 11436                           ;adc_convert@channel stored from wreg
 11437  1EFF  0020               	movlb	0	; select bank0
 11438  1F00  00A3               	movwf	adc_convert@channel
 11439                           
 11440                           ;user.c: 111: ADCON0bits.CHS = channel;
 11441  1F01  0823               	movf	adc_convert@channel,w
 11442  1F02  00A2               	movwf	??_adc_convert
 11443  1F03  0DA2               	rlf	??_adc_convert,f
 11444  1F04  0DA2               	rlf	??_adc_convert,f
 11445  1F05  0021               	movlb	1	; select bank1
 11446  1F06  081D               	movf	29,w	;volatile
 11447  1F07  0020               	movlb	0	; select bank0
 11448  1F08  0622               	xorwf	??_adc_convert,w
 11449  1F09  3983               	andlw	-125
 11450  1F0A  0622               	xorwf	??_adc_convert,w
 11451  1F0B  0021               	movlb	1	; select bank1
 11452  1F0C  009D               	movwf	29	;volatile
 11453                           
 11454                           ;user.c: 112: ADCON0bits.GO = 0b1;
 11455  1F0D  149D               	bsf	29,1	;volatile
 11456  1F0E                     l500:	
 11457                           ;user.c: 113: while (ADCON0bits.GO_nDONE);
 11458                           
 11459  1F0E  189D               	btfsc	29,1	;volatile
 11460  1F0F  2F0E               	goto	l500
 11461                           
 11462                           ;user.c: 114: return (ADRESH << 8) | ADRESL;
 11463  1F10  081C               	movf	28,w	;volatile
 11464  1F11  0020               	movlb	0	; select bank0
 11465  1F12  00A1               	movwf	?_adc_convert+1
 11466  1F13  0021               	movlb	1	; select bank1
 11467  1F14  081B               	movf	27,w	;volatile
 11468  1F15  0020               	movlb	0	; select bank0
 11469  1F16  00A0               	movwf	?_adc_convert
 11470  1F17  0008               	return
 11471  1F18                     __end_of_adc_convert:	
 11472                           
 11473                           	psect	text32
 11474  14DA                     __ptext32:	
 11475 ;; *************** function ___awdiv *****************
 11476 ;; Defined at:
 11477 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  divisor         2    0[BANK0 ] int 
 11480 ;;  dividend        2    2[BANK0 ] int 
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;  quotient        2    7[BANK0 ] int 
 11483 ;;  sign            1    6[BANK0 ] unsigned char 
 11484 ;;  counter         1    5[BANK0 ] unsigned char 
 11485 ;; Return value:  Size  Location     Type
 11486 ;;                  2    0[BANK0 ] int 
 11487 ;; Registers used:
 11488 ;;		wreg, status,2, status,0
 11489 ;; Tracked objects:
 11490 ;;		On entry : 0/0
 11491 ;;		On exit  : 0/0
 11492 ;;		Unchanged: 0/0
 11493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11494 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11495 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11496 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11497 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11498 ;;Total ram usage:        9 bytes
 11499 ;; Hardware stack levels used:    1
 11500 ;; Hardware stack levels required when called:    2
 11501 ;; This function calls:
 11502 ;;		Nothing
 11503 ;; This function is called by:
 11504 ;;		_main
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           
 11509                           ;psect for function ___awdiv
 11510  14DA                     ___awdiv:	
 11511                           
 11512                           ;incstack = 0
 11513                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11514  14DA  0020               	movlb	0	; select bank0
 11515  14DB  01A6               	clrf	___awdiv@sign
 11516  14DC  1FA1               	btfss	___awdiv@divisor+1,7
 11517  14DD  2CE5               	goto	l4275
 11518  14DE  09A0               	comf	___awdiv@divisor,f
 11519  14DF  09A1               	comf	___awdiv@divisor+1,f
 11520  14E0  0AA0               	incf	___awdiv@divisor,f
 11521  14E1  1903               	skipnz
 11522  14E2  0AA1               	incf	___awdiv@divisor+1,f
 11523  14E3  01A6               	clrf	___awdiv@sign
 11524  14E4  0AA6               	incf	___awdiv@sign,f
 11525  14E5                     l4275:	
 11526  14E5  1FA3               	btfss	___awdiv@dividend+1,7
 11527  14E6  2CF0               	goto	l4281
 11528  14E7  09A2               	comf	___awdiv@dividend,f
 11529  14E8  09A3               	comf	___awdiv@dividend+1,f
 11530  14E9  0AA2               	incf	___awdiv@dividend,f
 11531  14EA  1903               	skipnz
 11532  14EB  0AA3               	incf	___awdiv@dividend+1,f
 11533  14EC  3001               	movlw	1
 11534  14ED  00A4               	movwf	??___awdiv
 11535  14EE  0824               	movf	??___awdiv,w
 11536  14EF  06A6               	xorwf	___awdiv@sign,f
 11537  14F0                     l4281:	
 11538  14F0  01A7               	clrf	___awdiv@quotient
 11539  14F1  01A8               	clrf	___awdiv@quotient+1
 11540  14F2  0820               	movf	___awdiv@divisor,w
 11541  14F3  0421               	iorwf	___awdiv@divisor+1,w
 11542  14F4  1903               	btfsc	3,2
 11543  14F5  2D1F               	goto	l4303
 11544  14F6  01A5               	clrf	___awdiv@counter
 11545  14F7  0AA5               	incf	___awdiv@counter,f
 11546  14F8                     l4291:	
 11547  14F8  1BA1               	btfsc	___awdiv@divisor+1,7
 11548  14F9  2D04               	goto	l4293
 11549  14FA  3001               	movlw	1
 11550  14FB                     u4175:	
 11551  14FB  35A0               	lslf	___awdiv@divisor,f
 11552  14FC  0DA1               	rlf	___awdiv@divisor+1,f
 11553  14FD  0B89               	decfsz	9,f
 11554  14FE  2CFB               	goto	u4175
 11555  14FF  3001               	movlw	1
 11556  1500  00A4               	movwf	??___awdiv
 11557  1501  0824               	movf	??___awdiv,w
 11558  1502  07A5               	addwf	___awdiv@counter,f
 11559  1503  2CF8               	goto	l4291
 11560  1504                     l4293:	
 11561  1504  3001               	movlw	1
 11562  1505                     u4195:	
 11563  1505  35A7               	lslf	___awdiv@quotient,f
 11564  1506  0DA8               	rlf	___awdiv@quotient+1,f
 11565  1507  0B89               	decfsz	9,f
 11566  1508  2D05               	goto	u4195
 11567  1509  0821               	movf	___awdiv@divisor+1,w
 11568  150A  0223               	subwf	___awdiv@dividend+1,w
 11569  150B  1D03               	skipz
 11570  150C  2D0F               	goto	u4205
 11571  150D  0820               	movf	___awdiv@divisor,w
 11572  150E  0222               	subwf	___awdiv@dividend,w
 11573  150F                     u4205:	
 11574  150F  1C03               	skipc
 11575  1510  2D16               	goto	l4299
 11576  1511  0820               	movf	___awdiv@divisor,w
 11577  1512  02A2               	subwf	___awdiv@dividend,f
 11578  1513  0821               	movf	___awdiv@divisor+1,w
 11579  1514  3BA3               	subwfb	___awdiv@dividend+1,f
 11580  1515  1427               	bsf	___awdiv@quotient,0
 11581  1516                     l4299:	
 11582  1516  3001               	movlw	1
 11583  1517                     u4215:	
 11584  1517  36A1               	lsrf	___awdiv@divisor+1,f
 11585  1518  0CA0               	rrf	___awdiv@divisor,f
 11586  1519  0B89               	decfsz	9,f
 11587  151A  2D17               	goto	u4215
 11588  151B  3001               	movlw	1
 11589  151C  02A5               	subwf	___awdiv@counter,f
 11590  151D  1D03               	btfss	3,2
 11591  151E  2D04               	goto	l4293
 11592  151F                     l4303:	
 11593  151F  0826               	movf	___awdiv@sign,w
 11594  1520  1903               	btfsc	3,2
 11595  1521  2D27               	goto	l4307
 11596  1522  09A7               	comf	___awdiv@quotient,f
 11597  1523  09A8               	comf	___awdiv@quotient+1,f
 11598  1524  0AA7               	incf	___awdiv@quotient,f
 11599  1525  1903               	skipnz
 11600  1526  0AA8               	incf	___awdiv@quotient+1,f
 11601  1527                     l4307:	
 11602  1527  0828               	movf	___awdiv@quotient+1,w
 11603  1528  00A1               	movwf	?___awdiv+1
 11604  1529  0827               	movf	___awdiv@quotient,w
 11605  152A  00A0               	movwf	?___awdiv
 11606  152B  0008               	return
 11607  152C                     __end_of___awdiv:	
 11608                           
 11609                           	psect	text33
 11610  0800                     __ptext33:	
 11611 ;; *************** function ___altoft *****************
 11612 ;; Defined at:
 11613 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;  c               4    8[BANK0 ] long 
 11616 ;; Auto vars:     Size  Location     Type
 11617 ;;  sign            1   15[BANK0 ] unsigned char 
 11618 ;;  exp             1   14[BANK0 ] unsigned char 
 11619 ;; Return value:  Size  Location     Type
 11620 ;;                  3    8[BANK0 ] float 
 11621 ;; Registers used:
 11622 ;;		wreg, status,2, status,0, pclath, cstack
 11623 ;; Tracked objects:
 11624 ;;		On entry : 0/0
 11625 ;;		On exit  : 0/0
 11626 ;;		Unchanged: 0/0
 11627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11628 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11629 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11631 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11632 ;;Total ram usage:        8 bytes
 11633 ;; Hardware stack levels used:    1
 11634 ;; Hardware stack levels required when called:    3
 11635 ;; This function calls:
 11636 ;;		___ftpack
 11637 ;; This function is called by:
 11638 ;;		_main
 11639 ;; This function uses a non-reentrant model
 11640 ;;
 11641                           
 11642                           
 11643                           ;psect for function ___altoft
 11644  0800                     ___altoft:	
 11645                           
 11646                           ;incstack = 0
 11647                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
 11648  0800  0020               	movlb	0	; select bank0
 11649  0801  01AF               	clrf	___altoft@sign
 11650  0802  308E               	movlw	142
 11651  0803  00AC               	movwf	??___altoft
 11652  0804  082C               	movf	??___altoft,w
 11653  0805  00AE               	movwf	___altoft@exp
 11654  0806  1FAB               	btfss	___altoft@c+3,7
 11655  0807  2815               	goto	l4261
 11656  0808  09A8               	comf	___altoft@c,f
 11657  0809  09A9               	comf	___altoft@c+1,f
 11658  080A  09AA               	comf	___altoft@c+2,f
 11659  080B  09AB               	comf	___altoft@c+3,f
 11660  080C  0AA8               	incf	___altoft@c,f
 11661  080D  1903               	skipnz
 11662  080E  0AA9               	incf	___altoft@c+1,f
 11663  080F  1903               	skipnz
 11664  0810  0AAA               	incf	___altoft@c+2,f
 11665  0811  1903               	skipnz
 11666  0812  0AAB               	incf	___altoft@c+3,f
 11667  0813  01AF               	clrf	___altoft@sign
 11668  0814  0AAF               	incf	___altoft@sign,f
 11669  0815                     l4261:	
 11670  0815  30FF               	movlw	255
 11671  0816  052B               	andwf	___altoft@c+3,w
 11672  0817  1903               	btfsc	3,2
 11673  0818  2825               	goto	l4263
 11674  0819  3001               	movlw	1
 11675  081A                     u4125:	
 11676  081A  36AB               	lsrf	___altoft@c+3,f
 11677  081B  0CAA               	rrf	___altoft@c+2,f
 11678  081C  0CA9               	rrf	___altoft@c+1,f
 11679  081D  0CA8               	rrf	___altoft@c,f
 11680  081E  0B89               	decfsz	9,f
 11681  081F  281A               	goto	u4125
 11682  0820  3001               	movlw	1
 11683  0821  00AC               	movwf	??___altoft
 11684  0822  082C               	movf	??___altoft,w
 11685  0823  07AE               	addwf	___altoft@exp,f
 11686  0824  2815               	goto	l4261
 11687  0825                     l4263:	
 11688  0825  0828               	movf	___altoft@c,w
 11689  0826  00A0               	movwf	___ftpack@arg
 11690  0827  0829               	movf	___altoft@c+1,w
 11691  0828  00A1               	movwf	___ftpack@arg+1
 11692  0829  082A               	movf	___altoft@c+2,w
 11693  082A  00A2               	movwf	___ftpack@arg+2
 11694  082B  082E               	movf	___altoft@exp,w
 11695  082C  00AC               	movwf	??___altoft
 11696  082D  082C               	movf	??___altoft,w
 11697  082E  00A3               	movwf	___ftpack@exp
 11698  082F  082F               	movf	___altoft@sign,w
 11699  0830  00AD               	movwf	??___altoft+1
 11700  0831  082D               	movf	??___altoft+1,w
 11701  0832  00A4               	movwf	___ftpack@sign
 11702  0833  3195  2580         	fcall	___ftpack
 11703  0835  0020               	movlb	0	; select bank0
 11704  0836  0820               	movf	?___ftpack,w
 11705  0837  00A8               	movwf	?___altoft
 11706  0838  0821               	movf	?___ftpack+1,w
 11707  0839  00A9               	movwf	?___altoft+1
 11708  083A  0822               	movf	?___ftpack+2,w
 11709  083B  00AA               	movwf	?___altoft+2
 11710  083C  0008               	return
 11711  083D                     __end_of___altoft:	
 11712                           
 11713                           	psect	text34
 11714  1580                     __ptext34:	
 11715 ;; *************** function ___ftpack *****************
 11716 ;; Defined at:
 11717 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 11718 ;; Parameters:    Size  Location     Type
 11719 ;;  arg             3    0[BANK0 ] unsigned um
 11720 ;;  exp             1    3[BANK0 ] unsigned char 
 11721 ;;  sign            1    4[BANK0 ] unsigned char 
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;		None
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  3    0[BANK0 ] float 
 11726 ;; Registers used:
 11727 ;;		wreg, status,2, status,0
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11733 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11735 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11736 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11737 ;;Total ram usage:        8 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; Hardware stack levels required when called:    2
 11740 ;; This function calls:
 11741 ;;		Nothing
 11742 ;; This function is called by:
 11743 ;;		___altoft
 11744 ;;		___awtoft
 11745 ;;		___ftadd
 11746 ;;		___ftdiv
 11747 ;;		___ftmul
 11748 ;; This function uses a non-reentrant model
 11749 ;;
 11750                           
 11751                           
 11752                           ;psect for function ___ftpack
 11753  1580                     ___ftpack:	
 11754                           
 11755                           ;incstack = 0
 11756                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11757  1580  0020               	movlb	0	; select bank0
 11758  1581  0823               	movf	___ftpack@exp,w
 11759  1582  1903               	btfsc	3,2
 11760  1583  2D89               	goto	l3437
 11761  1584  0822               	movf	___ftpack@arg+2,w
 11762  1585  0421               	iorwf	___ftpack@arg+1,w
 11763  1586  0420               	iorwf	___ftpack@arg,w
 11764  1587  1D03               	skipz
 11765  1588  2D9A               	goto	l3443
 11766  1589                     l3437:	
 11767  1589  3000               	movlw	0
 11768  158A  00A0               	movwf	?___ftpack
 11769  158B  3000               	movlw	0
 11770  158C  00A1               	movwf	?___ftpack+1
 11771  158D  3000               	movlw	0
 11772  158E  00A2               	movwf	?___ftpack+2
 11773  158F  0008               	return
 11774  1590                     l3441:	
 11775  1590  3001               	movlw	1
 11776  1591  00A5               	movwf	??___ftpack
 11777  1592  0825               	movf	??___ftpack,w
 11778  1593  07A3               	addwf	___ftpack@exp,f
 11779  1594  3001               	movlw	1
 11780  1595                     u2595:	
 11781  1595  36A2               	lsrf	___ftpack@arg+2,f
 11782  1596  0CA1               	rrf	___ftpack@arg+1,f
 11783  1597  0CA0               	rrf	___ftpack@arg,f
 11784  1598  0B89               	decfsz	9,f
 11785  1599  2D95               	goto	u2595
 11786  159A                     l3443:	
 11787  159A  30FE               	movlw	254
 11788  159B  0522               	andwf	___ftpack@arg+2,w
 11789  159C  1903               	btfsc	3,2
 11790  159D  2DB3               	goto	l1506
 11791  159E  2D90               	goto	l3441
 11792  159F                     l3445:	
 11793  159F  3001               	movlw	1
 11794  15A0  00A5               	movwf	??___ftpack
 11795  15A1  0825               	movf	??___ftpack,w
 11796  15A2  07A3               	addwf	___ftpack@exp,f
 11797  15A3  3001               	movlw	1
 11798  15A4  07A0               	addwf	___ftpack@arg,f
 11799  15A5  3000               	movlw	0
 11800  15A6  1803               	skipnc
 11801  15A7  3001               	movlw	1
 11802  15A8  07A1               	addwf	___ftpack@arg+1,f
 11803  15A9  3000               	movlw	0
 11804  15AA  1803               	skipnc
 11805  15AB  3001               	movlw	1
 11806  15AC  07A2               	addwf	___ftpack@arg+2,f
 11807  15AD  3001               	movlw	1
 11808  15AE                     u2615:	
 11809  15AE  36A2               	lsrf	___ftpack@arg+2,f
 11810  15AF  0CA1               	rrf	___ftpack@arg+1,f
 11811  15B0  0CA0               	rrf	___ftpack@arg,f
 11812  15B1  0B89               	decfsz	9,f
 11813  15B2  2DAE               	goto	u2615
 11814  15B3                     l1506:	
 11815  15B3  30FF               	movlw	255
 11816  15B4  0522               	andwf	___ftpack@arg+2,w
 11817  15B5  1903               	btfsc	3,2
 11818  15B6  2DC0               	goto	l3453
 11819  15B7  2D9F               	goto	l3445
 11820  15B8                     l3451:	
 11821  15B8  3001               	movlw	1
 11822  15B9  02A3               	subwf	___ftpack@exp,f
 11823  15BA  3001               	movlw	1
 11824  15BB                     u2635:	
 11825  15BB  35A0               	lslf	___ftpack@arg,f
 11826  15BC  0DA1               	rlf	___ftpack@arg+1,f
 11827  15BD  0DA2               	rlf	___ftpack@arg+2,f
 11828  15BE  0B89               	decfsz	9,f
 11829  15BF  2DBB               	goto	u2635
 11830  15C0                     l3453:	
 11831  15C0  1BA1               	btfsc	___ftpack@arg+1,7
 11832  15C1  2DC6               	goto	l1513
 11833  15C2  3002               	movlw	2
 11834  15C3  0223               	subwf	___ftpack@exp,w
 11835  15C4  1803               	skipnc
 11836  15C5  2DB8               	goto	l3451
 11837  15C6                     l1513:	
 11838  15C6  1823               	btfsc	___ftpack@exp,0
 11839  15C7  2DCE               	goto	l1514
 11840  15C8  30FF               	movlw	255
 11841  15C9  05A0               	andwf	___ftpack@arg,f
 11842  15CA  307F               	movlw	127
 11843  15CB  05A1               	andwf	___ftpack@arg+1,f
 11844  15CC  30FF               	movlw	255
 11845  15CD  05A2               	andwf	___ftpack@arg+2,f
 11846  15CE                     l1514:	
 11847  15CE  1003               	clrc
 11848  15CF  0CA3               	rrf	___ftpack@exp,f
 11849  15D0  0823               	movf	___ftpack@exp,w
 11850  15D1  00A5               	movwf	??___ftpack
 11851  15D2  01A6               	clrf	??___ftpack+1
 11852  15D3  01A7               	clrf	??___ftpack+2
 11853  15D4  3010               	movlw	16
 11854  15D5                     u2675:	
 11855  15D5  35A5               	lslf	??___ftpack,f
 11856  15D6  0DA6               	rlf	??___ftpack+1,f
 11857  15D7  0DA7               	rlf	??___ftpack+2,f
 11858  15D8  0B89               	decfsz	9,f
 11859  15D9  2DD5               	goto	u2675
 11860  15DA  0825               	movf	??___ftpack,w
 11861  15DB  04A0               	iorwf	___ftpack@arg,f
 11862  15DC  0826               	movf	??___ftpack+1,w
 11863  15DD  04A1               	iorwf	___ftpack@arg+1,f
 11864  15DE  0827               	movf	??___ftpack+2,w
 11865  15DF  04A2               	iorwf	___ftpack@arg+2,f
 11866  15E0  0824               	movf	___ftpack@sign,w
 11867  15E1  1903               	btfsc	3,2
 11868  15E2  0008               	return
 11869  15E3  17A2               	bsf	___ftpack@arg+2,7
 11870  15E4  0008               	return
 11871  15E5                     __end_of___ftpack:	
 11872                           
 11873                           	psect	text35
 11874  13EA                     __ptext35:	
 11875 ;; *************** function _ReadSavedSettings *****************
 11876 ;; Defined at:
 11877 ;;		line 187 in file "user.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;		None
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;		None
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  1    wreg      void 
 11884 ;; Registers used:
 11885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11895 ;;Total ram usage:        0 bytes
 11896 ;; Hardware stack levels used:    1
 11897 ;; Hardware stack levels required when called:    3
 11898 ;; This function calls:
 11899 ;;		_FLASH_ReadWord
 11900 ;;		_set_leds_bottom
 11901 ;;		_set_leds_top
 11902 ;; This function is called by:
 11903 ;;		_main
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           
 11908                           ;psect for function _ReadSavedSettings
 11909  13EA                     _ReadSavedSettings:	
 11910                           
 11911                           ;user.c: 189: top_push_state = FLASH_ReadWord(0x1F81);
 11912                           
 11913                           ;incstack = 0
 11914                           ; Regs used in _ReadSavedSettings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11915  13EA  3081               	movlw	129
 11916  13EB  0020               	movlb	0	; select bank0
 11917  13EC  00A0               	movwf	FLASH_ReadWord@flashAddr
 11918  13ED  301F               	movlw	31
 11919  13EE  00A1               	movwf	FLASH_ReadWord@flashAddr+1
 11920  13EF  319F  276D  3193   	fcall	_FLASH_ReadWord
 11921  13F2  0020               	movlb	0	; select bank0
 11922  13F3  0821               	movf	?_FLASH_ReadWord+1,w
 11923  13F4  0021               	movlb	1	; select bank1
 11924  13F5  00B9               	movwf	(_top_push_state+1)^(0+128)
 11925  13F6  0020               	movlb	0	; select bank0
 11926  13F7  0820               	movf	?_FLASH_ReadWord,w
 11927  13F8  0021               	movlb	1	; select bank1
 11928  13F9  00B8               	movwf	_top_push_state^(0+128)
 11929                           
 11930                           ;user.c: 190: bottom_push_state = FLASH_ReadWord(0x1F82);
 11931  13FA  3082               	movlw	130
 11932  13FB  0020               	movlb	0	; select bank0
 11933  13FC  00A0               	movwf	FLASH_ReadWord@flashAddr
 11934  13FD  301F               	movlw	31
 11935  13FE  00A1               	movwf	FLASH_ReadWord@flashAddr+1
 11936  13FF  319F  276D  3193   	fcall	_FLASH_ReadWord
 11937  1402  0020               	movlb	0	; select bank0
 11938  1403  0821               	movf	?_FLASH_ReadWord+1,w
 11939  1404  0021               	movlb	1	; select bank1
 11940  1405  00A9               	movwf	(_bottom_push_state+1)^(0+128)
 11941  1406  0020               	movlb	0	; select bank0
 11942  1407  0820               	movf	?_FLASH_ReadWord,w
 11943  1408  0021               	movlb	1	; select bank1
 11944  1409  00A8               	movwf	_bottom_push_state^(0+128)
 11945                           
 11946                           ;user.c: 193: LATGbits.LATG1 = !switchBypass_state;
 11947  140A  083D               	movf	_switchBypass_state^(0+128),w
 11948  140B  1D03               	btfss	3,2
 11949  140C  2C10               	goto	u3530
 11950  140D  0027               	movlb	7	; select bank7
 11951  140E  148D               	bsf	13,1	;volatile
 11952  140F  2C12               	goto	l3929
 11953  1410                     u3530:	
 11954  1410  0027               	movlb	7	; select bank7
 11955  1411  108D               	bcf	13,1	;volatile
 11956  1412                     l3929:	
 11957                           
 11958                           ;user.c: 194: LATGbits.LATG2 = switchBypass_state;
 11959  1412  0021               	movlb	1	; select bank1
 11960  1413  0C3D               	rrf	_switchBypass_state^(0+128),w
 11961  1414  0027               	movlb	7	; select bank7
 11962  1415  1C03               	skipc
 11963  1416  110D               	bcf	13,2	;volatile
 11964  1417  1803               	skipnc
 11965  1418  150D               	bsf	13,2	;volatile
 11966                           
 11967                           ;user.c: 195: LATBbits.LATB2 = 0;
 11968  1419  0022               	movlb	2	; select bank2
 11969  141A  110D               	bcf	13,2	;volatile
 11970                           
 11971                           ;user.c: 196: LATBbits.LATB3 = 0;
 11972  141B  118D               	bcf	13,3	;volatile
 11973                           
 11974                           ;user.c: 198: LATBbits.LATB4 = 0;
 11975  141C  120D               	bcf	13,4	;volatile
 11976                           
 11977                           ;user.c: 199: LATBbits.LATB5 = 0;
 11978  141D  128D               	bcf	13,5	;volatile
 11979                           
 11980                           ;user.c: 201: LATBbits.LATB1 = 0;
 11981  141E  108D               	bcf	13,1	;volatile
 11982                           
 11983                           ;user.c: 202: LATBbits.LATB0 = 0;
 11984  141F  100D               	bcf	13,0	;volatile
 11985                           
 11986                           ;user.c: 205: set_leds_top(top_push_state, 1);
 11987  1420  0021               	movlb	1	; select bank1
 11988  1421  0839               	movf	(_top_push_state+1)^(0+128),w
 11989  1422  0020               	movlb	0	; select bank0
 11990  1423  00A1               	movwf	set_leds_top@x+1
 11991  1424  0021               	movlb	1	; select bank1
 11992  1425  0838               	movf	_top_push_state^(0+128),w
 11993  1426  0020               	movlb	0	; select bank0
 11994  1427  00A0               	movwf	set_leds_top@x
 11995  1428  3001               	movlw	1
 11996  1429  00A2               	movwf	set_leds_top@ledState
 11997  142A  3000               	movlw	0
 11998  142B  00A3               	movwf	set_leds_top@ledState+1
 11999  142C  3195  252C  3193   	fcall	_set_leds_top
 12000                           
 12001                           ;user.c: 206: set_leds_bottom(bottom_push_state);
 12002  142F  0021               	movlb	1	; select bank1
 12003  1430  0829               	movf	(_bottom_push_state+1)^(0+128),w
 12004  1431  0020               	movlb	0	; select bank0
 12005  1432  00A1               	movwf	set_leds_bottom@x+1
 12006  1433  0021               	movlb	1	; select bank1
 12007  1434  0828               	movf	_bottom_push_state^(0+128),w
 12008  1435  0020               	movlb	0	; select bank0
 12009  1436  00A0               	movwf	set_leds_bottom@x
 12010  1437  3192  2219         	fcall	_set_leds_bottom
 12011  1439  0008               	return
 12012  143A                     __end_of_ReadSavedSettings:	
 12013                           
 12014                           	psect	text36
 12015  152C                     __ptext36:	
 12016 ;; *************** function _set_leds_top *****************
 12017 ;; Defined at:
 12018 ;;		line 16 in file "LEDs.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;  x               2    0[BANK0 ] int 
 12021 ;;  ledState        2    2[BANK0 ] int 
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;		None
 12024 ;; Return value:  Size  Location     Type
 12025 ;;                  1    wreg      void 
 12026 ;; Registers used:
 12027 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12036 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12037 ;;Total ram usage:        4 bytes
 12038 ;; Hardware stack levels used:    1
 12039 ;; Hardware stack levels required when called:    2
 12040 ;; This function calls:
 12041 ;;		Nothing
 12042 ;; This function is called by:
 12043 ;;		_ReadSavedSettings
 12044 ;;		_star_tactiles
 12045 ;;		_solidring_tactiles
 12046 ;;		_read_top_tactile
 12047 ;;		_ring_tactiles
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           
 12052                           ;psect for function _set_leds_top
 12053  152C                     _set_leds_top:	
 12054                           
 12055                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 12056                           
 12057                           ;incstack = 0
 12058                           ; Regs used in _set_leds_top: [wreg-fsr0h+status,2+status,0]
 12059  152C  0027               	movlb	7	; select bank7
 12060  152D  100C               	bcf	12,0	;volatile
 12061                           
 12062                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 12063  152E  108C               	bcf	12,1	;volatile
 12064                           
 12065                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 12066  152F  110C               	bcf	12,2	;volatile
 12067                           
 12068                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 12069  1530  118C               	bcf	12,3	;volatile
 12070                           
 12071                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 12072  1531  120C               	bcf	12,4	;volatile
 12073                           
 12074                           ;LEDs.c: 22: switch (x) {
 12075  1532  2D62               	goto	l3403
 12076  1533                     l3391:	
 12077                           ;LEDs.c: 23: case 1:
 12078                           
 12079                           
 12080                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 12081  1533  0020               	movlb	0	; select bank0
 12082  1534  0C22               	rrf	set_leds_top@ledState,w
 12083  1535  0027               	movlb	7	; select bank7
 12084  1536  1C03               	skipc
 12085  1537  100C               	bcf	12,0	;volatile
 12086  1538  1803               	skipnc
 12087  1539  140C               	bsf	12,0	;volatile
 12088                           
 12089                           ;LEDs.c: 25: break;
 12090  153A  0008               	return
 12091  153B                     l3393:	
 12092                           ;LEDs.c: 26: case 2:
 12093                           
 12094                           
 12095                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 12096  153B  0020               	movlb	0	; select bank0
 12097  153C  0C22               	rrf	set_leds_top@ledState,w
 12098  153D  0027               	movlb	7	; select bank7
 12099  153E  1C03               	skipc
 12100  153F  108C               	bcf	12,1	;volatile
 12101  1540  1803               	skipnc
 12102  1541  148C               	bsf	12,1	;volatile
 12103                           
 12104                           ;LEDs.c: 28: break;
 12105  1542  0008               	return
 12106  1543                     l3395:	
 12107                           ;LEDs.c: 29: case 3:
 12108                           
 12109                           
 12110                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 12111  1543  0020               	movlb	0	; select bank0
 12112  1544  0C22               	rrf	set_leds_top@ledState,w
 12113  1545  0027               	movlb	7	; select bank7
 12114  1546  1C03               	skipc
 12115  1547  110C               	bcf	12,2	;volatile
 12116  1548  1803               	skipnc
 12117  1549  150C               	bsf	12,2	;volatile
 12118                           
 12119                           ;LEDs.c: 31: break;
 12120  154A  0008               	return
 12121  154B                     l3397:	
 12122                           ;LEDs.c: 32: case 4:
 12123                           
 12124                           
 12125                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 12126  154B  0020               	movlb	0	; select bank0
 12127  154C  0C22               	rrf	set_leds_top@ledState,w
 12128  154D  0027               	movlb	7	; select bank7
 12129  154E  1C03               	skipc
 12130  154F  118C               	bcf	12,3	;volatile
 12131  1550  1803               	skipnc
 12132  1551  158C               	bsf	12,3	;volatile
 12133                           
 12134                           ;LEDs.c: 34: break;
 12135  1552  0008               	return
 12136  1553                     l3399:	
 12137                           ;LEDs.c: 35: case 5:
 12138                           
 12139                           
 12140                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 12141  1553  0020               	movlb	0	; select bank0
 12142  1554  0C22               	rrf	set_leds_top@ledState,w
 12143  1555  0027               	movlb	7	; select bank7
 12144  1556  1C03               	skipc
 12145  1557  120C               	bcf	12,4	;volatile
 12146  1558  1803               	skipnc
 12147  1559  160C               	bsf	12,4	;volatile
 12148                           
 12149                           ;LEDs.c: 39: break;
 12150                           
 12151                           ;LEDs.c: 38: case 6:
 12152                           
 12153                           ;LEDs.c: 37: break;
 12154  155A  0008               	return
 12155  155B                     l660:	
 12156                           ;LEDs.c: 40: case 100:
 12157                           
 12158                           
 12159                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 12160  155B  0027               	movlb	7	; select bank7
 12161  155C  140C               	bsf	12,0	;volatile
 12162                           
 12163                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 12164  155D  148C               	bsf	12,1	;volatile
 12165                           
 12166                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 12167  155E  150C               	bsf	12,2	;volatile
 12168                           
 12169                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 12170  155F  158C               	bsf	12,3	;volatile
 12171                           
 12172                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 12173  1560  160C               	bsf	12,4	;volatile
 12174                           
 12175                           ;LEDs.c: 47: }
 12176                           
 12177                           ;LEDs.c: 46: break;
 12178  1561  0008               	return
 12179  1562                     l3403:	
 12180                           
 12181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12182                           ; Switch size 1, requested type "space"
 12183                           ; Number of cases is 1, Range of values is 0 to 0
 12184                           ; switch strategies available:
 12185                           ; Name         Instructions Cycles
 12186                           ; simple_byte            4     3 (average)
 12187                           ; direct_byte            8     6 (fixed)
 12188                           ; jumptable            260     6 (fixed)
 12189                           ;	Chosen strategy is simple_byte
 12190  1562  0020               	movlb	0	; select bank0
 12191  1563  0821               	movf	set_leds_top@x+1,w
 12192  1564  3A00               	xorlw	0	; case 0
 12193  1565  1903               	skipnz
 12194  1566  2D68               	goto	l4935
 12195  1567  2D7F               	goto	l661
 12196  1568                     l4935:	
 12197                           
 12198                           ; Switch size 1, requested type "space"
 12199                           ; Number of cases is 7, Range of values is 1 to 100
 12200                           ; switch strategies available:
 12201                           ; Name         Instructions Cycles
 12202                           ; simple_byte           22    12 (average)
 12203                           ; direct_byte          209     9 (fixed)
 12204                           ; jumptable            263     9 (fixed)
 12205                           ;	Chosen strategy is simple_byte
 12206  1568  0820               	movf	set_leds_top@x,w
 12207  1569  3A01               	xorlw	1	; case 1
 12208  156A  1903               	skipnz
 12209  156B  2D33               	goto	l3391
 12210  156C  3A03               	xorlw	3	; case 2
 12211  156D  1903               	skipnz
 12212  156E  2D3B               	goto	l3393
 12213  156F  3A01               	xorlw	1	; case 3
 12214  1570  1903               	skipnz
 12215  1571  2D43               	goto	l3395
 12216  1572  3A07               	xorlw	7	; case 4
 12217  1573  1903               	skipnz
 12218  1574  2D4B               	goto	l3397
 12219  1575  3A01               	xorlw	1	; case 5
 12220  1576  1903               	skipnz
 12221  1577  2D53               	goto	l3399
 12222  1578  3A03               	xorlw	3	; case 6
 12223  1579  1903               	skipnz
 12224  157A  2D7F               	goto	l661
 12225  157B  3A62               	xorlw	98	; case 100
 12226  157C  1903               	skipnz
 12227  157D  2D5B               	goto	l660
 12228  157E  2D7F               	goto	l661
 12229  157F                     l661:	
 12230  157F  0008               	return
 12231  1580                     __end_of_set_leds_top:	
 12232                           
 12233                           	psect	text37
 12234  1219                     __ptext37:	
 12235 ;; *************** function _set_leds_bottom *****************
 12236 ;; Defined at:
 12237 ;;		line 51 in file "LEDs.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;  x               2    0[BANK0 ] int 
 12240 ;; Auto vars:     Size  Location     Type
 12241 ;;		None
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12254 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12255 ;;Total ram usage:        2 bytes
 12256 ;; Hardware stack levels used:    1
 12257 ;; Hardware stack levels required when called:    2
 12258 ;; This function calls:
 12259 ;;		Nothing
 12260 ;; This function is called by:
 12261 ;;		_ReadSavedSettings
 12262 ;;		_star_tactiles
 12263 ;;		_solidring_tactiles
 12264 ;;		_read_bottom_tactile
 12265 ;;		_ring_tactiles
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           
 12270                           ;psect for function _set_leds_bottom
 12271  1219                     _set_leds_bottom:	
 12272                           
 12273                           ;LEDs.c: 52: LATDbits.LATD0 = 0;
 12274                           
 12275                           ;incstack = 0
 12276                           ; Regs used in _set_leds_bottom: [wreg-fsr0h+status,2+status,0]
 12277  1219  0022               	movlb	2	; select bank2
 12278  121A  100F               	bcf	15,0	;volatile
 12279                           
 12280                           ;LEDs.c: 53: LATDbits.LATD1 = 0;
 12281  121B  108F               	bcf	15,1	;volatile
 12282                           
 12283                           ;LEDs.c: 54: LATDbits.LATD2 = 0;
 12284  121C  110F               	bcf	15,2	;volatile
 12285                           
 12286                           ;LEDs.c: 55: LATDbits.LATD3 = 0;
 12287  121D  118F               	bcf	15,3	;volatile
 12288                           
 12289                           ;LEDs.c: 56: LATDbits.LATD4 = 0;
 12290  121E  120F               	bcf	15,4	;volatile
 12291                           
 12292                           ;LEDs.c: 57: switch (x) {
 12293  121F  2A36               	goto	l3427
 12294  1220                     l665:	
 12295                           ;LEDs.c: 58: case 1:
 12296                           
 12297                           
 12298                           ;LEDs.c: 59: LATDbits.LATD0 = 1;
 12299  1220  0022               	movlb	2	; select bank2
 12300  1221  140F               	bsf	15,0	;volatile
 12301                           
 12302                           ;LEDs.c: 60: break;
 12303  1222  0008               	return
 12304  1223                     l667:	
 12305                           ;LEDs.c: 61: case 2:
 12306                           
 12307                           
 12308                           ;LEDs.c: 62: LATDbits.LATD1 = 1;
 12309  1223  0022               	movlb	2	; select bank2
 12310  1224  148F               	bsf	15,1	;volatile
 12311                           
 12312                           ;LEDs.c: 63: break;
 12313  1225  0008               	return
 12314  1226                     l668:	
 12315                           ;LEDs.c: 64: case 3:
 12316                           
 12317                           
 12318                           ;LEDs.c: 65: LATDbits.LATD2 = 1;
 12319  1226  0022               	movlb	2	; select bank2
 12320  1227  150F               	bsf	15,2	;volatile
 12321                           
 12322                           ;LEDs.c: 66: break;
 12323  1228  0008               	return
 12324  1229                     l669:	
 12325                           ;LEDs.c: 67: case 4:
 12326                           
 12327                           
 12328                           ;LEDs.c: 68: LATDbits.LATD3 = 1;
 12329  1229  0022               	movlb	2	; select bank2
 12330  122A  158F               	bsf	15,3	;volatile
 12331                           
 12332                           ;LEDs.c: 69: break;
 12333  122B  0008               	return
 12334  122C                     l670:	
 12335                           ;LEDs.c: 70: case 5:
 12336                           
 12337                           
 12338                           ;LEDs.c: 71: LATDbits.LATD4 = 1;
 12339  122C  0022               	movlb	2	; select bank2
 12340  122D  160F               	bsf	15,4	;volatile
 12341                           
 12342                           ;LEDs.c: 74: break;
 12343                           
 12344                           ;LEDs.c: 73: case 6:
 12345                           
 12346                           ;LEDs.c: 72: break;
 12347  122E  0008               	return
 12348  122F                     l672:	
 12349                           ;LEDs.c: 75: case 100:
 12350                           
 12351                           
 12352                           ;LEDs.c: 76: LATDbits.LATD0 = 1;
 12353  122F  0022               	movlb	2	; select bank2
 12354  1230  140F               	bsf	15,0	;volatile
 12355                           
 12356                           ;LEDs.c: 77: LATDbits.LATD1 = 1;
 12357  1231  148F               	bsf	15,1	;volatile
 12358                           
 12359                           ;LEDs.c: 78: LATDbits.LATD2 = 1;
 12360  1232  150F               	bsf	15,2	;volatile
 12361                           
 12362                           ;LEDs.c: 79: LATDbits.LATD3 = 1;
 12363  1233  158F               	bsf	15,3	;volatile
 12364                           
 12365                           ;LEDs.c: 80: LATDbits.LATD4 = 1;
 12366  1234  160F               	bsf	15,4	;volatile
 12367                           
 12368                           ;LEDs.c: 82: }
 12369                           
 12370                           ;LEDs.c: 81: break;
 12371  1235  0008               	return
 12372  1236                     l3427:	
 12373                           
 12374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12375                           ; Switch size 1, requested type "space"
 12376                           ; Number of cases is 1, Range of values is 0 to 0
 12377                           ; switch strategies available:
 12378                           ; Name         Instructions Cycles
 12379                           ; simple_byte            4     3 (average)
 12380                           ; direct_byte            8     6 (fixed)
 12381                           ; jumptable            260     6 (fixed)
 12382                           ;	Chosen strategy is simple_byte
 12383  1236  0020               	movlb	0	; select bank0
 12384  1237  0821               	movf	set_leds_bottom@x+1,w
 12385  1238  3A00               	xorlw	0	; case 0
 12386  1239  1903               	skipnz
 12387  123A  2A3C               	goto	l4937
 12388  123B  2A53               	goto	l673
 12389  123C                     l4937:	
 12390                           
 12391                           ; Switch size 1, requested type "space"
 12392                           ; Number of cases is 7, Range of values is 1 to 100
 12393                           ; switch strategies available:
 12394                           ; Name         Instructions Cycles
 12395                           ; simple_byte           22    12 (average)
 12396                           ; direct_byte          209     9 (fixed)
 12397                           ; jumptable            263     9 (fixed)
 12398                           ;	Chosen strategy is simple_byte
 12399  123C  0820               	movf	set_leds_bottom@x,w
 12400  123D  3A01               	xorlw	1	; case 1
 12401  123E  1903               	skipnz
 12402  123F  2A20               	goto	l665
 12403  1240  3A03               	xorlw	3	; case 2
 12404  1241  1903               	skipnz
 12405  1242  2A23               	goto	l667
 12406  1243  3A01               	xorlw	1	; case 3
 12407  1244  1903               	skipnz
 12408  1245  2A26               	goto	l668
 12409  1246  3A07               	xorlw	7	; case 4
 12410  1247  1903               	skipnz
 12411  1248  2A29               	goto	l669
 12412  1249  3A01               	xorlw	1	; case 5
 12413  124A  1903               	skipnz
 12414  124B  2A2C               	goto	l670
 12415  124C  3A03               	xorlw	3	; case 6
 12416  124D  1903               	skipnz
 12417  124E  2A53               	goto	l673
 12418  124F  3A62               	xorlw	98	; case 100
 12419  1250  1903               	skipnz
 12420  1251  2A2F               	goto	l672
 12421  1252  2A53               	goto	l673
 12422  1253                     l673:	
 12423  1253  0008               	return
 12424  1254                     __end_of_set_leds_bottom:	
 12425                           
 12426                           	psect	text38
 12427  1F6D                     __ptext38:	
 12428 ;; *************** function _FLASH_ReadWord *****************
 12429 ;; Defined at:
 12430 ;;		line 58 in file "memory.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;  flashAddr       2    0[BANK0 ] unsigned int 
 12433 ;; Auto vars:     Size  Location     Type
 12434 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  2    0[BANK0 ] unsigned int 
 12437 ;; Registers used:
 12438 ;;		wreg, status,2, status,0
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12447 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12448 ;;Total ram usage:        3 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:    2
 12451 ;; This function calls:
 12452 ;;		Nothing
 12453 ;; This function is called by:
 12454 ;;		_ReadSavedSettings
 12455 ;;		_FLASH_WriteWord
 12456 ;; This function uses a non-reentrant model
 12457 ;;
 12458                           
 12459                           
 12460                           ;psect for function _FLASH_ReadWord
 12461  1F6D                     _FLASH_ReadWord:	
 12462                           
 12463                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
 12464                           
 12465                           ;incstack = 0
 12466                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
 12467  1F6D  3000               	movlw	0
 12468  1F6E  1B8B               	btfsc	11,7	;volatile
 12469  1F6F  3001               	movlw	1
 12470  1F70  0020               	movlb	0	; select bank0
 12471  1F71  00A2               	movwf	FLASH_ReadWord@GIEBitValue
 12472                           
 12473                           ;memory.c: 61: INTCONbits.GIE = 0;
 12474  1F72  138B               	bcf	11,7	;volatile
 12475                           
 12476                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
 12477  1F73  0820               	movf	FLASH_ReadWord@flashAddr,w
 12478  1F74  0023               	movlb	3	; select bank3
 12479  1F75  0091               	movwf	17	;volatile
 12480                           
 12481                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
 12482  1F76  0020               	movlb	0	; select bank0
 12483  1F77  0821               	movf	FLASH_ReadWord@flashAddr+1,w
 12484  1F78  0023               	movlb	3	; select bank3
 12485  1F79  0092               	movwf	18	;volatile
 12486                           
 12487                           ;memory.c: 65: PMCON1bits.CFGS = 0;
 12488  1F7A  1315               	bcf	21,6	;volatile
 12489                           
 12490                           ;memory.c: 66: PMCON1bits.RD = 1;
 12491  1F7B  1415               	bsf	21,0	;volatile
 12492                           
 12493                           ;memory.c: 67: __nop();
 12494  1F7C  0000               	nop
 12495                           
 12496                           ;memory.c: 68: __nop();
 12497  1F7D  0000               	nop
 12498                           
 12499                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
 12500  1F7E  0020               	movlb	0	; select bank0
 12501  1F7F  0C22               	rrf	FLASH_ReadWord@GIEBitValue,w
 12502  1F80  1C03               	skipc
 12503  1F81  138B               	bcf	11,7	;volatile
 12504  1F82  1803               	skipnc
 12505  1F83  178B               	bsf	11,7	;volatile
 12506                           
 12507                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
 12508  1F84  0023               	movlb	3	; select bank3
 12509  1F85  0814               	movf	20,w	;volatile
 12510  1F86  0020               	movlb	0	; select bank0
 12511  1F87  00A1               	movwf	?_FLASH_ReadWord+1
 12512  1F88  0023               	movlb	3	; select bank3
 12513  1F89  0813               	movf	19,w	;volatile
 12514  1F8A  0020               	movlb	0	; select bank0
 12515  1F8B  00A0               	movwf	?_FLASH_ReadWord
 12516  1F8C  0008               	return
 12517  1F8D                     __end_of_FLASH_ReadWord:	
 12518                           
 12519                           	psect	text39
 12520  1FAF                     __ptext39:	
 12521 ;; *************** function _InitializeTaps *****************
 12522 ;; Defined at:
 12523 ;;		line 181 in file "user.c"
 12524 ;; Parameters:    Size  Location     Type
 12525 ;;		None
 12526 ;; Auto vars:     Size  Location     Type
 12527 ;;  itap            2    1[BANK0 ] int 
 12528 ;; Return value:  Size  Location     Type
 12529 ;;                  1    wreg      void 
 12530 ;; Registers used:
 12531 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12532 ;; Tracked objects:
 12533 ;;		On entry : 0/0
 12534 ;;		On exit  : 0/0
 12535 ;;		Unchanged: 0/0
 12536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12538 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12539 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12540 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12541 ;;Total ram usage:        3 bytes
 12542 ;; Hardware stack levels used:    1
 12543 ;; Hardware stack levels required when called:    2
 12544 ;; This function calls:
 12545 ;;		Nothing
 12546 ;; This function is called by:
 12547 ;;		_main
 12548 ;; This function uses a non-reentrant model
 12549 ;;
 12550                           
 12551                           
 12552                           ;psect for function _InitializeTaps
 12553  1FAF                     _InitializeTaps:	
 12554                           
 12555                           ;user.c: 182: for (int itap = 0; itap < 12; itap++) {
 12556                           
 12557                           ;incstack = 0
 12558                           ; Regs used in _InitializeTaps: [wreg+fsr1l+fsr1h+status,2+status,0]
 12559  1FAF  0020               	movlb	0	; select bank0
 12560  1FB0  01A1               	clrf	InitializeTaps@itap
 12561  1FB1  01A2               	clrf	InitializeTaps@itap+1
 12562  1FB2                     L10:	
 12563  1FB2  0822               	movf	InitializeTaps@itap+1,w
 12564  1FB3  3A80               	xorlw	128
 12565  1FB4  00A0               	movwf	??_InitializeTaps
 12566  1FB5  3080               	movlw	128
 12567  1FB6  0220               	subwf	??_InitializeTaps,w
 12568  1FB7  1D03               	skipz
 12569  1FB8  2FBB               	goto	u3505
 12570  1FB9  300C               	movlw	12
 12571  1FBA  0221               	subwf	InitializeTaps@itap,w
 12572  1FBB                     u3505:	
 12573  1FBB  1803               	btfsc	3,0
 12574  1FBC  0008               	return
 12575                           
 12576                           ;user.c: 183: tap[itap] = 0;
 12577  1FBD  0020               	movlb	0	; select bank0
 12578  1FBE  0821               	movf	InitializeTaps@itap,w
 12579  1FBF  00A0               	movwf	??_InitializeTaps
 12580  1FC0  3001               	movlw	1
 12581  1FC1                     u3515:	
 12582  1FC1  35A0               	lslf	??_InitializeTaps,f
 12583  1FC2  3EFF               	addlw	-1
 12584  1FC3  1D03               	skipz
 12585  1FC4  2FC1               	goto	u3515
 12586  1FC5  3520               	lslf	??_InitializeTaps,w
 12587  1FC6  3EA0               	addlw	(low (_tap| (0+256)))& (0+255)
 12588  1FC7  0086               	movwf	6
 12589  1FC8  3001               	movlw	1	; select bank3/4
 12590  1FC9  0087               	movwf	7
 12591  1FCA  3000               	movlw	0
 12592  1FCB  3FC0               	movwi [0]fsr1
 12593  1FCC  3000               	movlw	0
 12594  1FCD  3FC1               	movwi [1]fsr1
 12595  1FCE  3FC2               	movwi [2]fsr1
 12596  1FCF  3FC3               	movwi [3]fsr1
 12597  1FD0  3001               	movlw	1
 12598  1FD1  07A1               	addwf	InitializeTaps@itap,f
 12599  1FD2  3000               	movlw	0
 12600  1FD3  3DA2               	addwfc	InitializeTaps@itap+1,f
 12601  1FD4  2FB2               	goto	L10
 12602  1FD5                     __end_of_InitializeTaps:	
 12603                           
 12604                           	psect	text40
 12605  1034                     __ptext40:	
 12606 ;; *************** function _InitApp *****************
 12607 ;; Defined at:
 12608 ;;		line 23 in file "user.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;		None
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;		None
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  1    wreg      void 
 12615 ;; Registers used:
 12616 ;;		wreg, status,2, status,0, pclath, cstack
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12626 ;;Total ram usage:        0 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:    4
 12629 ;; This function calls:
 12630 ;;		_init_adc
 12631 ;;		_init_pwm
 12632 ;; This function is called by:
 12633 ;;		_main
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           
 12638                           ;psect for function _InitApp
 12639  1034                     _InitApp:	
 12640                           
 12641                           ;user.c: 24: TRISBbits.TRISB0 = 0;
 12642                           
 12643                           ;incstack = 0
 12644                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
 12645  1034  0021               	movlb	1	; select bank1
 12646  1035  100D               	bcf	13,0	;volatile
 12647                           
 12648                           ;user.c: 25: TRISBbits.TRISB1 = 0;
 12649  1036  108D               	bcf	13,1	;volatile
 12650                           
 12651                           ;user.c: 26: TRISBbits.TRISB2 = 0;
 12652  1037  110D               	bcf	13,2	;volatile
 12653                           
 12654                           ;user.c: 27: TRISBbits.TRISB3 = 0;
 12655  1038  118D               	bcf	13,3	;volatile
 12656                           
 12657                           ;user.c: 28: TRISBbits.TRISB4 = 0;
 12658  1039  120D               	bcf	13,4	;volatile
 12659                           
 12660                           ;user.c: 29: TRISBbits.TRISB5 = 0;
 12661  103A  128D               	bcf	13,5	;volatile
 12662                           
 12663                           ;user.c: 31: TRISCbits.TRISC0 = 1;
 12664  103B  140E               	bsf	14,0	;volatile
 12665                           
 12666                           ;user.c: 32: TRISCbits.TRISC4 = 0;
 12667  103C  120E               	bcf	14,4	;volatile
 12668                           
 12669                           ;user.c: 33: TRISCbits.TRISC5 = 0;
 12670  103D  128E               	bcf	14,5	;volatile
 12671                           
 12672                           ;user.c: 36: TRISDbits.TRISD0 = 0;
 12673  103E  100F               	bcf	15,0	;volatile
 12674                           
 12675                           ;user.c: 37: TRISDbits.TRISD1 = 0;
 12676  103F  108F               	bcf	15,1	;volatile
 12677                           
 12678                           ;user.c: 38: TRISDbits.TRISD2 = 0;
 12679  1040  110F               	bcf	15,2	;volatile
 12680                           
 12681                           ;user.c: 39: TRISDbits.TRISD3 = 0;
 12682  1041  118F               	bcf	15,3	;volatile
 12683                           
 12684                           ;user.c: 40: TRISDbits.TRISD4 = 0;
 12685  1042  120F               	bcf	15,4	;volatile
 12686                           
 12687                           ;user.c: 41: TRISDbits.TRISD5 = 1;
 12688  1043  168F               	bsf	15,5	;volatile
 12689                           
 12690                           ;user.c: 42: TRISDbits.TRISD6 = 1;
 12691  1044  170F               	bsf	15,6	;volatile
 12692                           
 12693                           ;user.c: 43: TRISDbits.TRISD7 = 1;
 12694  1045  178F               	bsf	15,7	;volatile
 12695                           
 12696                           ;user.c: 49: TRISEbits.TRISE0 = 1;
 12697  1046  1410               	bsf	16,0	;volatile
 12698                           
 12699                           ;user.c: 50: TRISEbits.TRISE1 = 1;
 12700  1047  1490               	bsf	16,1	;volatile
 12701                           
 12702                           ;user.c: 51: ANSELEbits.ANSE0 = 0;
 12703  1048  0023               	movlb	3	; select bank3
 12704  1049  1010               	bcf	16,0	;volatile
 12705                           
 12706                           ;user.c: 52: ANSELEbits.ANSE1 = 0;
 12707  104A  1090               	bcf	16,1	;volatile
 12708                           
 12709                           ;user.c: 53: PORTEbits.RE0 = 0;
 12710  104B  0020               	movlb	0	; select bank0
 12711  104C  1010               	bcf	16,0	;volatile
 12712                           
 12713                           ;user.c: 54: PORTEbits.RE1 = 0;
 12714  104D  1090               	bcf	16,1	;volatile
 12715                           
 12716                           ;user.c: 56: TRISFbits.TRISF0 = 0;
 12717  104E  0026               	movlb	6	; select bank6
 12718  104F  100C               	bcf	12,0	;volatile
 12719                           
 12720                           ;user.c: 57: TRISFbits.TRISF1 = 0;
 12721  1050  108C               	bcf	12,1	;volatile
 12722                           
 12723                           ;user.c: 58: TRISFbits.TRISF2 = 0;
 12724  1051  110C               	bcf	12,2	;volatile
 12725                           
 12726                           ;user.c: 59: TRISFbits.TRISF3 = 0;
 12727  1052  118C               	bcf	12,3	;volatile
 12728                           
 12729                           ;user.c: 60: TRISFbits.TRISF4 = 0;
 12730  1053  120C               	bcf	12,4	;volatile
 12731                           
 12732                           ;user.c: 61: TRISFbits.TRISF5 = 0;
 12733  1054  128C               	bcf	12,5	;volatile
 12734                           
 12735                           ;user.c: 62: TRISFbits.TRISF6 = 1;
 12736  1055  170C               	bsf	12,6	;volatile
 12737                           
 12738                           ;user.c: 63: ANSELFbits.ANSF6 = 0;
 12739  1056  0028               	movlb	8	; select bank8
 12740  1057  130C               	bcf	12,6	;volatile
 12741                           
 12742                           ;user.c: 65: TRISGbits.TRISG1 = 0;
 12743  1058  0026               	movlb	6	; select bank6
 12744  1059  108D               	bcf	13,1	;volatile
 12745                           
 12746                           ;user.c: 66: TRISGbits.TRISG2 = 0;
 12747  105A  110D               	bcf	13,2	;volatile
 12748                           
 12749                           ;user.c: 68: init_adc();
 12750  105B  319E  2697  3190   	fcall	_init_adc
 12751                           
 12752                           ;user.c: 69: init_pwm();
 12753  105E  3192  22D2         	fcall	_init_pwm
 12754                           
 12755                           ;user.c: 71: INTCONbits.GIE = 0b1;
 12756  1060  178B               	bsf	11,7	;volatile
 12757                           
 12758                           ;user.c: 72: INTCONbits.TMR0IE = 0b1;
 12759  1061  168B               	bsf	11,5	;volatile
 12760                           
 12761                           ;user.c: 73: INTCONbits.TMR0IF = 0b0;
 12762  1062  110B               	bcf	11,2	;volatile
 12763  1063  0008               	return
 12764  1064                     __end_of_InitApp:	
 12765                           
 12766                           	psect	text41
 12767  12D2                     __ptext41:	
 12768 ;; *************** function _init_pwm *****************
 12769 ;; Defined at:
 12770 ;;		line 117 in file "user.c"
 12771 ;; Parameters:    Size  Location     Type
 12772 ;;		None
 12773 ;; Auto vars:     Size  Location     Type
 12774 ;;		None
 12775 ;; Return value:  Size  Location     Type
 12776 ;;                  1    wreg      void 
 12777 ;; Registers used:
 12778 ;;		wreg, status,2, status,0, pclath, cstack
 12779 ;; Tracked objects:
 12780 ;;		On entry : 0/0
 12781 ;;		On exit  : 0/0
 12782 ;;		Unchanged: 0/0
 12783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12788 ;;Total ram usage:        0 bytes
 12789 ;; Hardware stack levels used:    1
 12790 ;; Hardware stack levels required when called:    3
 12791 ;; This function calls:
 12792 ;;		_init_timer0
 12793 ;;		_init_timer2
 12794 ;; This function is called by:
 12795 ;;		_InitApp
 12796 ;; This function uses a non-reentrant model
 12797 ;;
 12798                           
 12799                           
 12800                           ;psect for function _init_pwm
 12801  12D2                     _init_pwm:	
 12802                           
 12803                           ;user.c: 118: APFCONbits.CCP2SEL = 0;
 12804                           
 12805                           ;incstack = 0
 12806                           ; Regs used in _init_pwm: [wreg+status,2+status,0+pclath+cstack]
 12807  12D2  0022               	movlb	2	; select bank2
 12808  12D3  101D               	bcf	29,0	;volatile
 12809                           
 12810                           ;user.c: 119: TRISCbits.TRISC2 = 0;
 12811  12D4  0021               	movlb	1	; select bank1
 12812  12D5  110E               	bcf	14,2	;volatile
 12813                           
 12814                           ;user.c: 120: TRISCbits.TRISC1 = 0;
 12815  12D6  108E               	bcf	14,1	;volatile
 12816                           
 12817                           ;user.c: 121: TRISGbits.TRISG0 = 0;
 12818  12D7  0026               	movlb	6	; select bank6
 12819  12D8  100D               	bcf	13,0	;volatile
 12820                           
 12821                           ;user.c: 122: TRISGbits.TRISG3 = 0;
 12822  12D9  118D               	bcf	13,3	;volatile
 12823                           
 12824                           ;user.c: 123: TRISGbits.TRISG4 = 0;
 12825  12DA  120D               	bcf	13,4	;volatile
 12826                           
 12827                           ;user.c: 124: TRISEbits.TRISE6 = 0;
 12828  12DB  0021               	movlb	1	; select bank1
 12829  12DC  1310               	bcf	16,6	;volatile
 12830                           
 12831                           ;user.c: 125: TRISEbits.TRISE5 = 0;
 12832  12DD  1290               	bcf	16,5	;volatile
 12833                           
 12834                           ;user.c: 126: TRISEbits.TRISE4 = 0;
 12835  12DE  1210               	bcf	16,4	;volatile
 12836                           
 12837                           ;user.c: 127: TRISEbits.TRISE3 = 0;
 12838  12DF  1190               	bcf	16,3	;volatile
 12839                           
 12840                           ;user.c: 128: TRISEbits.TRISE2 = 0;
 12841  12E0  1110               	bcf	16,2	;volatile
 12842                           
 12843                           ;user.c: 129: CCP1CONbits.CCP1M = 0b1111;
 12844  12E1  300F               	movlw	15
 12845  12E2  0025               	movlb	5	; select bank5
 12846  12E3  0493               	iorwf	19,f	;volatile
 12847                           
 12848                           ;user.c: 130: CCP2CONbits.CCP2M = 0b1111;
 12849  12E4  300F               	movlw	15
 12850  12E5  049A               	iorwf	26,f	;volatile
 12851                           
 12852                           ;user.c: 131: CCP3CONbits.CCP3M = 0b1111;
 12853  12E6  300F               	movlw	15
 12854  12E7  0026               	movlb	6	; select bank6
 12855  12E8  0493               	iorwf	19,f	;volatile
 12856                           
 12857                           ;user.c: 132: CCP4CONbits.CCP4M = 0b1111;
 12858  12E9  300F               	movlw	15
 12859  12EA  049A               	iorwf	26,f	;volatile
 12860                           
 12861                           ;user.c: 133: CCP5CONbits.CCP5M = 0b1111;
 12862  12EB  300F               	movlw	15
 12863  12EC  049E               	iorwf	30,f	;volatile
 12864                           
 12865                           ;user.c: 134: CCP6CONbits.CCP6M = 0b1111;
 12866  12ED  300F               	movlw	15
 12867  12EE  002C               	movlb	12	; select bank12
 12868  12EF  0493               	iorwf	19,f	;volatile
 12869                           
 12870                           ;user.c: 135: CCP7CONbits.CCP7M = 0b1111;
 12871  12F0  300F               	movlw	15
 12872  12F1  0496               	iorwf	22,f	;volatile
 12873                           
 12874                           ;user.c: 136: CCP8CONbits.CCP8M = 0b1111;
 12875  12F2  300F               	movlw	15
 12876  12F3  0499               	iorwf	25,f	;volatile
 12877                           
 12878                           ;user.c: 137: CCP9CONbits.CCP9M = 0b1111;
 12879  12F4  300F               	movlw	15
 12880  12F5  049C               	iorwf	28,f	;volatile
 12881                           
 12882                           ;user.c: 138: CCP10CONbits.CCP10M = 0b1111;
 12883  12F6  300F               	movlw	15
 12884  12F7  049F               	iorwf	31,f	;volatile
 12885                           
 12886                           ;user.c: 139: CCPTMRS0 = 0b00000000;
 12887  12F8  0025               	movlb	5	; select bank5
 12888  12F9  019D               	clrf	29	;volatile
 12889                           
 12890                           ;user.c: 140: CCPTMRS1 = 0b00000000;
 12891  12FA  019E               	clrf	30	;volatile
 12892                           
 12893                           ;user.c: 141: CCPTMRS2 = 0b00000000;
 12894  12FB  019F               	clrf	31	;volatile
 12895                           
 12896                           ;user.c: 142: CCPR1 = 50;
 12897  12FC  3000               	movlw	0
 12898  12FD  0092               	movwf	18	;volatile
 12899  12FE  3032               	movlw	50
 12900  12FF  0091               	movwf	17	;volatile
 12901                           
 12902                           ;user.c: 143: CCPR2 = 100;
 12903  1300  3000               	movlw	0
 12904  1301  0099               	movwf	25	;volatile
 12905  1302  3064               	movlw	100
 12906  1303  0098               	movwf	24	;volatile
 12907                           
 12908                           ;user.c: 144: CCPR3 = 150;
 12909  1304  3000               	movlw	0
 12910  1305  0026               	movlb	6	; select bank6
 12911  1306  0092               	movwf	18	;volatile
 12912  1307  3096               	movlw	150
 12913  1308  0091               	movwf	17	;volatile
 12914                           
 12915                           ;user.c: 145: CCPR4 = 200;
 12916  1309  3000               	movlw	0
 12917  130A  0099               	movwf	25	;volatile
 12918  130B  30C8               	movlw	200
 12919  130C  0098               	movwf	24	;volatile
 12920                           
 12921                           ;user.c: 146: init_timer2();
 12922  130D  319E  2685  3192   	fcall	_init_timer2
 12923                           
 12924                           ;user.c: 147: init_timer0();
 12925  1310  3190  2000         	fcall	_init_timer0
 12926  1312  0008               	return
 12927  1313                     __end_of_init_pwm:	
 12928                           
 12929                           	psect	text42
 12930  1E85                     __ptext42:	
 12931 ;; *************** function _init_timer2 *****************
 12932 ;; Defined at:
 12933 ;;		line 150 in file "user.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;		None
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;                  1    wreg      void 
 12940 ;; Registers used:
 12941 ;;		wreg, status,2, status,0
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12951 ;;Total ram usage:        0 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:    2
 12954 ;; This function calls:
 12955 ;;		Nothing
 12956 ;; This function is called by:
 12957 ;;		_init_pwm
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           
 12962                           ;psect for function _init_timer2
 12963  1E85                     _init_timer2:	
 12964                           
 12965                           ;user.c: 151: T2CONbits.T2OUTPS = 0b0000;
 12966                           
 12967                           ;incstack = 0
 12968                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
 12969  1E85  3087               	movlw	-121
 12970  1E86  0020               	movlb	0	; select bank0
 12971  1E87  059C               	andwf	28,f	;volatile
 12972                           
 12973                           ;user.c: 152: T2CONbits.T2CKPS = 0b00;
 12974  1E88  30FC               	movlw	-4
 12975  1E89  059C               	andwf	28,f	;volatile
 12976                           
 12977                           ;user.c: 153: PR2 = 0xFF;
 12978  1E8A  30FF               	movlw	255
 12979  1E8B  009B               	movwf	27	;volatile
 12980                           
 12981                           ;user.c: 154: T2CONbits.TMR2ON = 1;
 12982  1E8C  151C               	bsf	28,2	;volatile
 12983  1E8D  0008               	return
 12984  1E8E                     __end_of_init_timer2:	
 12985                           
 12986                           	psect	text43
 12987  1000                     __ptext43:	
 12988 ;; *************** function _init_timer0 *****************
 12989 ;; Defined at:
 12990 ;;		line 157 in file "user.c"
 12991 ;; Parameters:    Size  Location     Type
 12992 ;;		None
 12993 ;; Auto vars:     Size  Location     Type
 12994 ;;		None
 12995 ;; Return value:  Size  Location     Type
 12996 ;;                  1    wreg      void 
 12997 ;; Registers used:
 12998 ;;		None
 12999 ;; Tracked objects:
 13000 ;;		On entry : 0/0
 13001 ;;		On exit  : 0/0
 13002 ;;		Unchanged: 0/0
 13003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13008 ;;Total ram usage:        0 bytes
 13009 ;; Hardware stack levels used:    1
 13010 ;; Hardware stack levels required when called:    2
 13011 ;; This function calls:
 13012 ;;		Nothing
 13013 ;; This function is called by:
 13014 ;;		_init_pwm
 13015 ;; This function uses a non-reentrant model
 13016 ;;
 13017                           
 13018                           
 13019                           ;psect for function _init_timer0
 13020  1000                     _init_timer0:	
 13021                           
 13022                           ;user.c: 158: OPTION_REGbits.TMR0CS = 0b0;
 13023                           
 13024                           ;incstack = 0
 13025                           ; Regs used in _init_timer0: []
 13026  1000  0021               	movlb	1	; select bank1
 13027  1001  1295               	bcf	21,5	;volatile
 13028                           
 13029                           ;user.c: 159: OPTION_REGbits.PSA = 0b0;
 13030  1002  1195               	bcf	21,3	;volatile
 13031                           
 13032                           ;user.c: 160: OPTION_REGbits.PS0 = 0b0;
 13033  1003  1015               	bcf	21,0	;volatile
 13034                           
 13035                           ;user.c: 161: OPTION_REGbits.PS1 = 0b1;
 13036  1004  1495               	bsf	21,1	;volatile
 13037                           
 13038                           ;user.c: 162: OPTION_REGbits.PS2 = 0b0;
 13039  1005  1115               	bcf	21,2	;volatile
 13040  1006  0008               	return
 13041  1007                     __end_of_init_timer0:	
 13042                           
 13043                           	psect	text44
 13044  1E97                     __ptext44:	
 13045 ;; *************** function _init_adc *****************
 13046 ;; Defined at:
 13047 ;;		line 103 in file "user.c"
 13048 ;; Parameters:    Size  Location     Type
 13049 ;;		None
 13050 ;; Auto vars:     Size  Location     Type
 13051 ;;		None
 13052 ;; Return value:  Size  Location     Type
 13053 ;;                  1    wreg      void 
 13054 ;; Registers used:
 13055 ;;		wreg, status,2, status,0
 13056 ;; Tracked objects:
 13057 ;;		On entry : 0/0
 13058 ;;		On exit  : 0/0
 13059 ;;		Unchanged: 0/0
 13060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13065 ;;Total ram usage:        0 bytes
 13066 ;; Hardware stack levels used:    1
 13067 ;; Hardware stack levels required when called:    2
 13068 ;; This function calls:
 13069 ;;		Nothing
 13070 ;; This function is called by:
 13071 ;;		_InitApp
 13072 ;; This function uses a non-reentrant model
 13073 ;;
 13074                           
 13075                           
 13076                           ;psect for function _init_adc
 13077  1E97                     _init_adc:	
 13078                           
 13079                           ;user.c: 104: ADCON1bits.ADFM = 0b1;
 13080                           
 13081                           ;incstack = 0
 13082                           ; Regs used in _init_adc: [wreg+status,2+status,0]
 13083  1E97  0021               	movlb	1	; select bank1
 13084  1E98  179E               	bsf	30,7	;volatile
 13085                           
 13086                           ;user.c: 105: ADCON1bits.ADCS = 0b110;
 13087  1E99  081E               	movf	30,w	;volatile
 13088  1E9A  398F               	andlw	-113
 13089  1E9B  3860               	iorlw	96
 13090  1E9C  009E               	movwf	30	;volatile
 13091                           
 13092                           ;user.c: 106: ADCON1bits.ADPREF = 0b00;
 13093  1E9D  30FC               	movlw	-4
 13094  1E9E  059E               	andwf	30,f	;volatile
 13095                           
 13096                           ;user.c: 107: ADCON0bits.ADON = 0b1;
 13097  1E9F  141D               	bsf	29,0	;volatile
 13098  1EA0  0008               	return
 13099  1EA1                     __end_of_init_adc:	
 13100                           
 13101                           	psect	text45
 13102  1E7D                     __ptext45:	
 13103 ;; *************** function _ConfigureOscillator *****************
 13104 ;; Defined at:
 13105 ;;		line 18 in file "system.c"
 13106 ;; Parameters:    Size  Location     Type
 13107 ;;		None
 13108 ;; Auto vars:     Size  Location     Type
 13109 ;;		None
 13110 ;; Return value:  Size  Location     Type
 13111 ;;                  1    wreg      void 
 13112 ;; Registers used:
 13113 ;;		wreg, status,2, status,0
 13114 ;; Tracked objects:
 13115 ;;		On entry : 0/0
 13116 ;;		On exit  : 0/0
 13117 ;;		Unchanged: 0/0
 13118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13123 ;;Total ram usage:        0 bytes
 13124 ;; Hardware stack levels used:    1
 13125 ;; Hardware stack levels required when called:    2
 13126 ;; This function calls:
 13127 ;;		Nothing
 13128 ;; This function is called by:
 13129 ;;		_main
 13130 ;; This function uses a non-reentrant model
 13131 ;;
 13132                           
 13133                           
 13134                           ;psect for function _ConfigureOscillator
 13135  1E7D                     _ConfigureOscillator:	
 13136                           
 13137                           ;system.c: 20: OSCCONbits.SCS = 0b00;
 13138                           
 13139                           ;incstack = 0
 13140                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
 13141  1E7D  30FC               	movlw	-4
 13142  1E7E  0021               	movlb	1	; select bank1
 13143  1E7F  0599               	andwf	25,f	;volatile
 13144  1E80  0008               	return
 13145  1E81                     __end_of_ConfigureOscillator:	
 13146                           
 13147                           	psect	intentry
 13148  0004                     __pintentry:	
 13149 ;; *************** function _isr *****************
 13150 ;; Defined at:
 13151 ;;		line 23 in file "interrupts.c"
 13152 ;; Parameters:    Size  Location     Type
 13153 ;;		None
 13154 ;; Auto vars:     Size  Location     Type
 13155 ;;		None
 13156 ;; Return value:  Size  Location     Type
 13157 ;;                  1    wreg      void 
 13158 ;; Registers used:
 13159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13160 ;; Tracked objects:
 13161 ;;		On entry : 0/0
 13162 ;;		On exit  : 0/0
 13163 ;;		Unchanged: 0/0
 13164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13167 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13168 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13169 ;;Total ram usage:        5 bytes
 13170 ;; Hardware stack levels used:    1
 13171 ;; Hardware stack levels required when called:    1
 13172 ;; This function calls:
 13173 ;;		i1_set_leds_top
 13174 ;; This function is called by:
 13175 ;;		Interrupt level 1
 13176 ;; This function uses a non-reentrant model
 13177 ;;
 13178                           
 13179  0004                     _isr:	
 13180                           
 13181                           ;incstack = 0
 13182                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13183  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13184  0005  3180               	pagesel	$
 13185  0006  0020               	movlb	0	; select bank0
 13186  0007  087F               	movf	127,w
 13187  0008  00F8               	movwf	??_isr+4
 13188                           
 13189                           ;interrupts.c: 24: extern volatile long timer;
 13190                           ;interrupts.c: 25: extern volatile long sub_timer;
 13191                           ;interrupts.c: 26: extern volatile long tap_timer;
 13192                           ;interrupts.c: 28: extern volatile long baseline_delay_time;
 13193                           ;interrupts.c: 30: extern int top_push_state;
 13194                           ;interrupts.c: 31: extern uint8_t feedback_start;
 13195                           ;interrupts.c: 32: extern volatile long mod_timer;
 13196                           ;interrupts.c: 33: extern volatile long delay_time;
 13197                           ;interrupts.c: 34: if (INTCONbits.TMR0IF == 1) {
 13198  0009  1D0B               	btfss	11,2	;volatile
 13199  000A  28AD               	goto	i1l4349
 13200                           
 13201                           ;interrupts.c: 36: timer = timer + 1;
 13202  000B  3001               	movlw	1
 13203  000C  00F4               	movwf	??_isr
 13204  000D  3000               	movlw	0
 13205  000E  00F5               	movwf	??_isr+1
 13206  000F  3000               	movlw	0
 13207  0010  00F6               	movwf	??_isr+2
 13208  0011  3000               	movlw	0
 13209  0012  00F7               	movwf	??_isr+3
 13210  0013  0021               	movlb	1	; select bank1
 13211  0014  0862               	movf	_timer^(0+128),w	;volatile
 13212  0015  07F4               	addwf	??_isr,f
 13213  0016  0863               	movf	(_timer+1)^(0+128),w	;volatile
 13214  0017  3DF5               	addwfc	??_isr+1,f
 13215  0018  0864               	movf	(_timer+2)^(0+128),w	;volatile
 13216  0019  3DF6               	addwfc	??_isr+2,f
 13217  001A  0865               	movf	(_timer+3)^(0+128),w	;volatile
 13218  001B  3DF7               	addwfc	??_isr+3,f
 13219  001C  0877               	movf	??_isr+3,w
 13220  001D  00E5               	movwf	(_timer+3)^(0+128)	;volatile
 13221  001E  0876               	movf	??_isr+2,w
 13222  001F  00E4               	movwf	(_timer+2)^(0+128)	;volatile
 13223  0020  0875               	movf	??_isr+1,w
 13224  0021  00E3               	movwf	(_timer+1)^(0+128)	;volatile
 13225  0022  0874               	movf	??_isr,w
 13226  0023  00E2               	movwf	_timer^(0+128)	;volatile
 13227                           
 13228                           ;interrupts.c: 37: sub_timer = sub_timer + 1;
 13229  0024  3001               	movlw	1
 13230  0025  00F4               	movwf	??_isr
 13231  0026  3000               	movlw	0
 13232  0027  00F5               	movwf	??_isr+1
 13233  0028  3000               	movlw	0
 13234  0029  00F6               	movwf	??_isr+2
 13235  002A  3000               	movlw	0
 13236  002B  00F7               	movwf	??_isr+3
 13237  002C  085E               	movf	_sub_timer^(0+128),w	;volatile
 13238  002D  07F4               	addwf	??_isr,f
 13239  002E  085F               	movf	(_sub_timer+1)^(0+128),w	;volatile
 13240  002F  3DF5               	addwfc	??_isr+1,f
 13241  0030  0860               	movf	(_sub_timer+2)^(0+128),w	;volatile
 13242  0031  3DF6               	addwfc	??_isr+2,f
 13243  0032  0861               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13244  0033  3DF7               	addwfc	??_isr+3,f
 13245  0034  0877               	movf	??_isr+3,w
 13246  0035  00E1               	movwf	(_sub_timer+3)^(0+128)	;volatile
 13247  0036  0876               	movf	??_isr+2,w
 13248  0037  00E0               	movwf	(_sub_timer+2)^(0+128)	;volatile
 13249  0038  0875               	movf	??_isr+1,w
 13250  0039  00DF               	movwf	(_sub_timer+1)^(0+128)	;volatile
 13251  003A  0874               	movf	??_isr,w
 13252  003B  00DE               	movwf	_sub_timer^(0+128)	;volatile
 13253                           
 13254                           ;interrupts.c: 38: tap_timer = tap_timer + 1;
 13255  003C  3001               	movlw	1
 13256  003D  00F4               	movwf	??_isr
 13257  003E  3000               	movlw	0
 13258  003F  00F5               	movwf	??_isr+1
 13259  0040  3000               	movlw	0
 13260  0041  00F6               	movwf	??_isr+2
 13261  0042  3000               	movlw	0
 13262  0043  00F7               	movwf	??_isr+3
 13263  0044  0879               	movf	_tap_timer,w	;volatile
 13264  0045  07F4               	addwf	??_isr,f
 13265  0046  087A               	movf	_tap_timer+1,w	;volatile
 13266  0047  3DF5               	addwfc	??_isr+1,f
 13267  0048  087B               	movf	_tap_timer+2,w	;volatile
 13268  0049  3DF6               	addwfc	??_isr+2,f
 13269  004A  087C               	movf	_tap_timer+3,w	;volatile
 13270  004B  3DF7               	addwfc	??_isr+3,f
 13271  004C  0877               	movf	??_isr+3,w
 13272  004D  00FC               	movwf	_tap_timer+3	;volatile
 13273  004E  0876               	movf	??_isr+2,w
 13274  004F  00FB               	movwf	_tap_timer+2	;volatile
 13275  0050  0875               	movf	??_isr+1,w
 13276  0051  00FA               	movwf	_tap_timer+1	;volatile
 13277  0052  0874               	movf	??_isr,w
 13278  0053  00F9               	movwf	_tap_timer	;volatile
 13279                           
 13280                           ;interrupts.c: 39: mod_timer = mod_timer + 1;
 13281  0054  3001               	movlw	1
 13282  0055  00F4               	movwf	??_isr
 13283  0056  3000               	movlw	0
 13284  0057  00F5               	movwf	??_isr+1
 13285  0058  3000               	movlw	0
 13286  0059  00F6               	movwf	??_isr+2
 13287  005A  3000               	movlw	0
 13288  005B  00F7               	movwf	??_isr+3
 13289  005C  0022               	movlb	2	; select bank2
 13290  005D  0838               	movf	_mod_timer^(0+256),w	;volatile
 13291  005E  07F4               	addwf	??_isr,f
 13292  005F  0839               	movf	(_mod_timer+1)^(0+256),w	;volatile
 13293  0060  3DF5               	addwfc	??_isr+1,f
 13294  0061  083A               	movf	(_mod_timer+2)^(0+256),w	;volatile
 13295  0062  3DF6               	addwfc	??_isr+2,f
 13296  0063  083B               	movf	(_mod_timer+3)^(0+256),w	;volatile
 13297  0064  3DF7               	addwfc	??_isr+3,f
 13298  0065  0877               	movf	??_isr+3,w
 13299  0066  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
 13300  0067  0876               	movf	??_isr+2,w
 13301  0068  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
 13302  0069  0875               	movf	??_isr+1,w
 13303  006A  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
 13304  006B  0874               	movf	??_isr,w
 13305  006C  00B8               	movwf	_mod_timer^(0+256)	;volatile
 13306                           
 13307                           ;interrupts.c: 40: test_timer++;
 13308  006D  3001               	movlw	1
 13309  006E  0023               	movlb	3	; select bank3
 13310  006F  07CC               	addwf	_test_timer^(0+384),f	;volatile
 13311  0070  3000               	movlw	0
 13312  0071  3DCD               	addwfc	(_test_timer+1)^(0+384),f	;volatile
 13313  0072  3000               	movlw	0
 13314  0073  3DCE               	addwfc	(_test_timer+2)^(0+384),f	;volatile
 13315  0074  3000               	movlw	0
 13316  0075  3DCF               	addwfc	(_test_timer+3)^(0+384),f	;volatile
 13317                           
 13318                           ;interrupts.c: 41: if (feedback_start == 1) {
 13319  0076  0021               	movlb	1	; select bank1
 13320  0077  0369               	decf	_feedback_start^(0+128),w
 13321  0078  1D03               	btfss	3,2
 13322  0079  2891               	goto	i1l4341
 13323                           
 13324                           ;interrupts.c: 42: feedback_timer++;
 13325  007A  3001               	movlw	1
 13326  007B  0022               	movlb	2	; select bank2
 13327  007C  07CE               	addwf	_feedback_timer^(0+256),f	;volatile
 13328  007D  3000               	movlw	0
 13329  007E  3DCF               	addwfc	(_feedback_timer+1)^(0+256),f	;volatile
 13330                           
 13331                           ;interrupts.c: 43: if (feedback_timer > long_press_limit) {feedback_timer = long_press_l
      +                          imit;}
 13332  007F  084F               	movf	(_feedback_timer+1)^(0+256),w	;volatile
 13333  0080  0021               	movlb	1	; select bank1
 13334  0081  0235               	subwf	(_long_press_limit+1)^(0+128),w
 13335  0082  1D03               	skipz
 13336  0083  2888               	goto	u426_25
 13337  0084  0022               	movlb	2	; select bank2
 13338  0085  084E               	movf	_feedback_timer^(0+256),w	;volatile
 13339  0086  0021               	movlb	1	; select bank1
 13340  0087  0234               	subwf	_long_press_limit^(0+128),w
 13341  0088                     u426_25:	
 13342  0088  1803               	skipnc
 13343  0089  2891               	goto	i1l4341
 13344  008A  0835               	movf	(_long_press_limit+1)^(0+128),w
 13345  008B  0022               	movlb	2	; select bank2
 13346  008C  00CF               	movwf	(_feedback_timer+1)^(0+256)	;volatile
 13347  008D  0021               	movlb	1	; select bank1
 13348  008E  0834               	movf	_long_press_limit^(0+128),w
 13349  008F  0022               	movlb	2	; select bank2
 13350  0090  00CE               	movwf	_feedback_timer^(0+256)	;volatile
 13351  0091                     i1l4341:	
 13352                           
 13353                           ;interrupts.c: 44: }
 13354                           ;interrupts.c: 45: if (longTap_start == 1) {
 13355  0091  0021               	movlb	1	; select bank1
 13356  0092  036A               	decf	_longTap_start^(0+128),w
 13357  0093  1D03               	btfss	3,2
 13358  0094  28AC               	goto	i1l4347
 13359                           
 13360                           ;interrupts.c: 46: longTap_timer++;
 13361  0095  3001               	movlw	1
 13362  0096  0022               	movlb	2	; select bank2
 13363  0097  07DA               	addwf	_longTap_timer^(0+256),f	;volatile
 13364  0098  3000               	movlw	0
 13365  0099  3DDB               	addwfc	(_longTap_timer+1)^(0+256),f	;volatile
 13366                           
 13367                           ;interrupts.c: 47: if (longTap_timer > long_press_limit) {
 13368  009A  085B               	movf	(_longTap_timer+1)^(0+256),w	;volatile
 13369  009B  0021               	movlb	1	; select bank1
 13370  009C  0235               	subwf	(_long_press_limit+1)^(0+128),w
 13371  009D  1D03               	skipz
 13372  009E  28A3               	goto	u428_25
 13373  009F  0022               	movlb	2	; select bank2
 13374  00A0  085A               	movf	_longTap_timer^(0+256),w	;volatile
 13375  00A1  0021               	movlb	1	; select bank1
 13376  00A2  0234               	subwf	_long_press_limit^(0+128),w
 13377  00A3                     u428_25:	
 13378  00A3  1803               	skipnc
 13379  00A4  28AC               	goto	i1l4347
 13380                           
 13381                           ;interrupts.c: 48: longTap_timer = long_press_limit;
 13382  00A5  0835               	movf	(_long_press_limit+1)^(0+128),w
 13383  00A6  0022               	movlb	2	; select bank2
 13384  00A7  00DB               	movwf	(_longTap_timer+1)^(0+256)	;volatile
 13385  00A8  0021               	movlb	1	; select bank1
 13386  00A9  0834               	movf	_long_press_limit^(0+128),w
 13387  00AA  0022               	movlb	2	; select bank2
 13388  00AB  00DA               	movwf	_longTap_timer^(0+256)	;volatile
 13389  00AC                     i1l4347:	
 13390                           
 13391                           ;interrupts.c: 49: }
 13392                           ;interrupts.c: 50: }
 13393                           ;interrupts.c: 51: INTCONbits.TMR0IF = 0;
 13394  00AC  110B               	bcf	11,2	;volatile
 13395  00AD                     i1l4349:	
 13396                           
 13397                           ;interrupts.c: 52: }
 13398                           ;interrupts.c: 65: if (longTap_state < 1 && doubleTap_state < 1) {
 13399  00AD  0020               	movlb	0	; select bank0
 13400  00AE  086F               	movf	_longTap_state,w	;volatile
 13401  00AF  1D03               	btfss	3,2
 13402  00B0  28F4               	goto	i1l4367
 13403  00B1  087D               	movf	_doubleTap_state,w	;volatile
 13404  00B2  1D03               	btfss	3,2
 13405  00B3  28F4               	goto	i1l4367
 13406                           
 13407                           ;interrupts.c: 67: if (baseline_delay_time == 750) {
 13408  00B4  30EE               	movlw	238
 13409  00B5  0021               	movlb	1	; select bank1
 13410  00B6  0620               	xorwf	_baseline_delay_time^(0+128),w	;volatile
 13411  00B7  3002               	movlw	2
 13412  00B8  1903               	skipnz
 13413  00B9  0621               	xorwf	(_baseline_delay_time+1)^(0+128),w	;volatile
 13414  00BA  0422               	iorwf	(_baseline_delay_time+2)^(0+128),w	;volatile
 13415  00BB  0423               	iorwf	(_baseline_delay_time+3)^(0+128),w	;volatile
 13416  00BC  1D03               	btfss	3,2
 13417  00BD  28C1               	goto	i1l93
 13418                           
 13419                           ;interrupts.c: 68: LATBbits.LATB1 = 1;
 13420  00BE  0022               	movlb	2	; select bank2
 13421  00BF  148D               	bsf	13,1	;volatile
 13422                           
 13423                           ;interrupts.c: 69: } else {
 13424  00C0  28C3               	goto	i1l4357
 13425  00C1                     i1l93:	
 13426                           
 13427                           ;interrupts.c: 70: LATBbits.LATB1 = 0;
 13428  00C1  0022               	movlb	2	; select bank2
 13429  00C2  108D               	bcf	13,1	;volatile
 13430  00C3                     i1l4357:	
 13431                           
 13432                           ;interrupts.c: 71: }
 13433                           ;interrupts.c: 74: if (timer >= baseline_delay_time) {
 13434  00C3  0021               	movlb	1	; select bank1
 13435  00C4  0865               	movf	(_timer+3)^(0+128),w	;volatile
 13436  00C5  3A80               	xorlw	128
 13437  00C6  00F4               	movwf	??_isr
 13438  00C7  0823               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
 13439  00C8  3A80               	xorlw	128
 13440  00C9  0274               	subwf	??_isr,w
 13441  00CA  1D03               	skipz
 13442  00CB  28D6               	goto	u432_23
 13443  00CC  0822               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
 13444  00CD  0264               	subwf	(_timer+2)^(0+128),w	;volatile
 13445  00CE  1D03               	skipz
 13446  00CF  28D6               	goto	u432_23
 13447  00D0  0821               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 13448  00D1  0263               	subwf	(_timer+1)^(0+128),w	;volatile
 13449  00D2  1D03               	skipz
 13450  00D3  28D6               	goto	u432_23
 13451  00D4  0820               	movf	_baseline_delay_time^(0+128),w	;volatile
 13452  00D5  0262               	subwf	_timer^(0+128),w	;volatile
 13453  00D6                     u432_23:	
 13454  00D6  1C03               	skipc
 13455  00D7  28E3               	goto	i1l4363
 13456                           
 13457                           ;interrupts.c: 77: LATBbits.LATB4 = 1;
 13458  00D8  0022               	movlb	2	; select bank2
 13459  00D9  160D               	bsf	13,4	;volatile
 13460                           
 13461                           ;interrupts.c: 79: timer = 0;
 13462  00DA  3000               	movlw	0
 13463  00DB  0021               	movlb	1	; select bank1
 13464  00DC  00E5               	movwf	(_timer+3)^(0+128)	;volatile
 13465  00DD  3000               	movlw	0
 13466  00DE  00E4               	movwf	(_timer+2)^(0+128)	;volatile
 13467  00DF  3000               	movlw	0
 13468  00E0  00E3               	movwf	(_timer+1)^(0+128)	;volatile
 13469  00E1  3000               	movlw	0
 13470  00E2  00E2               	movwf	_timer^(0+128)	;volatile
 13471  00E3                     i1l4363:	
 13472                           
 13473                           ;interrupts.c: 80: }
 13474                           ;interrupts.c: 82: if (timer >= 20) {
 13475  00E3  1BE5               	btfsc	(_timer+3)^(0+128),7	;volatile
 13476  00E4  28F4               	goto	i1l4367
 13477  00E5  0865               	movf	(_timer+3)^(0+128),w	;volatile
 13478  00E6  1D03               	btfss	3,2
 13479  00E7  28F2               	goto	i1l4365
 13480  00E8  0864               	movf	(_timer+2)^(0+128),w	;volatile
 13481  00E9  1D03               	btfss	3,2
 13482  00EA  28F2               	goto	i1l4365
 13483  00EB  0863               	movf	(_timer+1)^(0+128),w	;volatile
 13484  00EC  1D03               	btfss	3,2
 13485  00ED  28F2               	goto	i1l4365
 13486  00EE  3014               	movlw	20
 13487  00EF  0262               	subwf	_timer^(0+128),w	;volatile
 13488  00F0  1C03               	btfss	3,0
 13489  00F1  28F4               	goto	i1l4367
 13490  00F2                     i1l4365:	
 13491                           
 13492                           ;interrupts.c: 84: LATBbits.LATB4 = 0;
 13493  00F2  0022               	movlb	2	; select bank2
 13494  00F3  120D               	bcf	13,4	;volatile
 13495  00F4                     i1l4367:	
 13496                           
 13497                           ;interrupts.c: 86: }
 13498                           ;interrupts.c: 87: }
 13499                           ;interrupts.c: 90: if (sub_timer >= delay_time) {
 13500  00F4  0021               	movlb	1	; select bank1
 13501  00F5  0861               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13502  00F6  3A80               	xorlw	128
 13503  00F7  00F4               	movwf	??_isr
 13504  00F8  0827               	movf	(_delay_time+3)^(0+128),w	;volatile
 13505  00F9  3A80               	xorlw	128
 13506  00FA  0274               	subwf	??_isr,w
 13507  00FB  1D03               	skipz
 13508  00FC  2907               	goto	u434_23
 13509  00FD  0826               	movf	(_delay_time+2)^(0+128),w	;volatile
 13510  00FE  0260               	subwf	(_sub_timer+2)^(0+128),w	;volatile
 13511  00FF  1D03               	skipz
 13512  0100  2907               	goto	u434_23
 13513  0101  0825               	movf	(_delay_time+1)^(0+128),w	;volatile
 13514  0102  025F               	subwf	(_sub_timer+1)^(0+128),w	;volatile
 13515  0103  1D03               	skipz
 13516  0104  2907               	goto	u434_23
 13517  0105  0824               	movf	_delay_time^(0+128),w	;volatile
 13518  0106  025E               	subwf	_sub_timer^(0+128),w	;volatile
 13519  0107                     u434_23:	
 13520  0107  1C03               	skipc
 13521  0108  2920               	goto	i1l4375
 13522                           
 13523                           ;interrupts.c: 91: if (suspend_blink == 0) {
 13524  0109  086D               	movf	_suspend_blink^(0+128),w	;volatile
 13525  010A  1D03               	btfss	3,2
 13526  010B  2917               	goto	i1l4373
 13527                           
 13528                           ;interrupts.c: 92: set_leds_top(top_push_state, 1);
 13529  010C  0839               	movf	(_top_push_state+1)^(0+128),w
 13530  010D  00F1               	movwf	i1set_leds_top@x+1
 13531  010E  0838               	movf	_top_push_state^(0+128),w
 13532  010F  00F0               	movwf	i1set_leds_top@x
 13533  0110  3001               	movlw	1
 13534  0111  00F2               	movwf	i1set_leds_top@ledState
 13535  0112  3000               	movlw	0
 13536  0113  00F3               	movwf	i1set_leds_top@ledState+1
 13537  0114  3193  2358  3180   	fcall	i1_set_leds_top
 13538  0117                     i1l4373:	
 13539                           
 13540                           ;interrupts.c: 93: }
 13541                           ;interrupts.c: 94: sub_timer = 0;
 13542  0117  3000               	movlw	0
 13543  0118  0021               	movlb	1	; select bank1
 13544  0119  00E1               	movwf	(_sub_timer+3)^(0+128)	;volatile
 13545  011A  3000               	movlw	0
 13546  011B  00E0               	movwf	(_sub_timer+2)^(0+128)	;volatile
 13547  011C  3000               	movlw	0
 13548  011D  00DF               	movwf	(_sub_timer+1)^(0+128)	;volatile
 13549  011E  3000               	movlw	0
 13550  011F  00DE               	movwf	_sub_timer^(0+128)	;volatile
 13551  0120                     i1l4375:	
 13552                           
 13553                           ;interrupts.c: 95: }
 13554                           ;interrupts.c: 97: if (sub_timer >= 20) {
 13555  0120  1BE1               	btfsc	(_sub_timer+3)^(0+128),7	;volatile
 13556  0121  293C               	goto	i1l4381
 13557  0122  0861               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13558  0123  1D03               	btfss	3,2
 13559  0124  292F               	goto	i1l4377
 13560  0125  0860               	movf	(_sub_timer+2)^(0+128),w	;volatile
 13561  0126  1D03               	btfss	3,2
 13562  0127  292F               	goto	i1l4377
 13563  0128  085F               	movf	(_sub_timer+1)^(0+128),w	;volatile
 13564  0129  1D03               	btfss	3,2
 13565  012A  292F               	goto	i1l4377
 13566  012B  3014               	movlw	20
 13567  012C  025E               	subwf	_sub_timer^(0+128),w	;volatile
 13568  012D  1C03               	btfss	3,0
 13569  012E  293C               	goto	i1l4381
 13570  012F                     i1l4377:	
 13571                           
 13572                           ;interrupts.c: 98: if (suspend_blink == 0) {
 13573  012F  086D               	movf	_suspend_blink^(0+128),w	;volatile
 13574  0130  1D03               	btfss	3,2
 13575  0131  293C               	goto	i1l4381
 13576                           
 13577                           ;interrupts.c: 99: set_leds_top(top_push_state, 0);
 13578  0132  0839               	movf	(_top_push_state+1)^(0+128),w
 13579  0133  00F1               	movwf	i1set_leds_top@x+1
 13580  0134  0838               	movf	_top_push_state^(0+128),w
 13581  0135  00F0               	movwf	i1set_leds_top@x
 13582  0136  3000               	movlw	0
 13583  0137  00F2               	movwf	i1set_leds_top@ledState
 13584  0138  00F3               	movwf	i1set_leds_top@ledState+1
 13585  0139  3193  2358  3180   	fcall	i1_set_leds_top
 13586  013C                     i1l4381:	
 13587                           
 13588                           ;interrupts.c: 100: }
 13589                           ;interrupts.c: 101: }
 13590                           ;interrupts.c: 104: if (preset_programmning_on == 1) {
 13591  013C  0022               	movlb	2	; select bank2
 13592  013D  0364               	decf	_preset_programmning_on^(0+256),w
 13593  013E  1D03               	btfss	3,2
 13594  013F  2967               	goto	i1l4393
 13595                           
 13596                           ;interrupts.c: 105: preset_blink++;
 13597  0140  3001               	movlw	1
 13598  0141  00F4               	movwf	??_isr
 13599  0142  0874               	movf	??_isr,w
 13600  0143  0021               	movlb	1	; select bank1
 13601  0144  07EC               	addwf	_preset_blink^(0+128),f
 13602                           
 13603                           ;interrupts.c: 107: if (preset_blink >= blink_delay) {
 13604  0145  0022               	movlb	2	; select bank2
 13605  0146  0866               	movf	(_blink_delay+1)^(0+256),w
 13606  0147  3A80               	xorlw	128
 13607  0148  3C80               	sublw	128
 13608  0149  1D03               	skipz
 13609  014A  294E               	goto	u439_25
 13610  014B  0865               	movf	_blink_delay^(0+256),w
 13611  014C  0021               	movlb	1	; select bank1
 13612  014D  026C               	subwf	_preset_blink^(0+128),w
 13613  014E                     u439_25:	
 13614  014E  1C03               	skipc
 13615  014F  296C               	goto	i1l4397
 13616                           
 13617                           ;interrupts.c: 108: LATBbits.LATB1 = 1;
 13618  0150  0022               	movlb	2	; select bank2
 13619  0151  148D               	bsf	13,1	;volatile
 13620                           
 13621                           ;interrupts.c: 109: if (preset_blink > blink_delay*2) {
 13622  0152  0866               	movf	(_blink_delay+1)^(0+256),w
 13623  0153  00F5               	movwf	??_isr+1
 13624  0154  0865               	movf	_blink_delay^(0+256),w
 13625  0155  00F4               	movwf	??_isr
 13626  0156  35F4               	lslf	??_isr,f
 13627  0157  0DF5               	rlf	??_isr+1,f
 13628  0158  0875               	movf	??_isr+1,w
 13629  0159  3A80               	xorlw	128
 13630  015A  00F6               	movwf	??_isr+2
 13631  015B  3080               	movlw	128
 13632  015C  0276               	subwf	??_isr+2,w
 13633  015D  1D03               	skipz
 13634  015E  2962               	goto	u440_25
 13635  015F  0021               	movlb	1	; select bank1
 13636  0160  086C               	movf	_preset_blink^(0+128),w
 13637  0161  0274               	subwf	??_isr,w
 13638  0162                     u440_25:	
 13639  0162  1803               	skipnc
 13640  0163  296E               	goto	i1l107
 13641                           
 13642                           ;interrupts.c: 110: preset_blink = 0;
 13643  0164  0021               	movlb	1	; select bank1
 13644  0165  01EC               	clrf	_preset_blink^(0+128)
 13645                           
 13646                           ;interrupts.c: 111: }
 13647                           ;interrupts.c: 113: } else {
 13648  0166  296E               	goto	i1l107
 13649  0167                     i1l4393:	
 13650                           ;interrupts.c: 115: }
 13651                           ;interrupts.c: 117: } else {
 13652                           
 13653                           ;interrupts.c: 114: LATBbits.LATB1 = 0;
 13654                           
 13655                           
 13656                           ;interrupts.c: 118: if (preset_blink > 0) {
 13657  0167  0021               	movlb	1	; select bank1
 13658  0168  086C               	movf	_preset_blink^(0+128),w
 13659  0169  1903               	btfsc	3,2
 13660  016A  296E               	goto	i1l107
 13661                           
 13662                           ;interrupts.c: 119: preset_blink = 0;
 13663  016B  01EC               	clrf	_preset_blink^(0+128)
 13664  016C                     i1l4397:	
 13665                           
 13666                           ;interrupts.c: 120: LATBbits.LATB1 = 0;
 13667  016C  0022               	movlb	2	; select bank2
 13668  016D  108D               	bcf	13,1	;volatile
 13669  016E                     i1l107:	
 13670  016E  0878               	movf	??_isr+4,w
 13671  016F  0020               	movlb	0	; select bank0
 13672  0170  00FF               	movwf	127
 13673  0171  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13674  0172  0009               	retfie
 13675  0173                     __end_of_isr:	
 13676                           
 13677                           	psect	text47
 13678  1358                     __ptext47:	
 13679 ;; *************** function i1_set_leds_top *****************
 13680 ;; Defined at:
 13681 ;;		line 16 in file "LEDs.c"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;  x               2    0[COMMON] int 
 13684 ;;  ledState        2    2[COMMON] int 
 13685 ;; Auto vars:     Size  Location     Type
 13686 ;;		None
 13687 ;; Return value:  Size  Location     Type
 13688 ;;                  1    wreg      void 
 13689 ;; Registers used:
 13690 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13691 ;; Tracked objects:
 13692 ;;		On entry : 0/0
 13693 ;;		On exit  : 0/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13699 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13700 ;;Total ram usage:        4 bytes
 13701 ;; Hardware stack levels used:    1
 13702 ;; This function calls:
 13703 ;;		Nothing
 13704 ;; This function is called by:
 13705 ;;		_isr
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           
 13710                           ;psect for function i1_set_leds_top
 13711  1358                     i1_set_leds_top:	
 13712                           
 13713                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 13714                           
 13715                           ;incstack = 0
 13716                           ; Regs used in i1_set_leds_top: [wreg-fsr0h+status,2+status,0]
 13717  1358  0027               	movlb	7	; select bank7
 13718  1359  100C               	bcf	12,0	;volatile
 13719                           
 13720                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 13721  135A  108C               	bcf	12,1	;volatile
 13722                           
 13723                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 13724  135B  110C               	bcf	12,2	;volatile
 13725                           
 13726                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 13727  135C  118C               	bcf	12,3	;volatile
 13728                           
 13729                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 13730  135D  120C               	bcf	12,4	;volatile
 13731                           
 13732                           ;LEDs.c: 22: switch (x) {
 13733  135E  2B83               	goto	i1l4325
 13734  135F                     i1l4313:	
 13735                           ;LEDs.c: 23: case 1:
 13736                           
 13737                           
 13738                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 13739  135F  0C72               	rrf	i1set_leds_top@ledState,w
 13740  1360  1C03               	skipc
 13741  1361  100C               	bcf	12,0	;volatile
 13742  1362  1803               	skipnc
 13743  1363  140C               	bsf	12,0	;volatile
 13744                           
 13745                           ;LEDs.c: 25: break;
 13746  1364  0008               	return
 13747  1365                     i1l4315:	
 13748                           ;LEDs.c: 26: case 2:
 13749                           
 13750                           
 13751                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 13752  1365  0C72               	rrf	i1set_leds_top@ledState,w
 13753  1366  1C03               	skipc
 13754  1367  108C               	bcf	12,1	;volatile
 13755  1368  1803               	skipnc
 13756  1369  148C               	bsf	12,1	;volatile
 13757                           
 13758                           ;LEDs.c: 28: break;
 13759  136A  0008               	return
 13760  136B                     i1l4317:	
 13761                           ;LEDs.c: 29: case 3:
 13762                           
 13763                           
 13764                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 13765  136B  0C72               	rrf	i1set_leds_top@ledState,w
 13766  136C  1C03               	skipc
 13767  136D  110C               	bcf	12,2	;volatile
 13768  136E  1803               	skipnc
 13769  136F  150C               	bsf	12,2	;volatile
 13770                           
 13771                           ;LEDs.c: 31: break;
 13772  1370  0008               	return
 13773  1371                     i1l4319:	
 13774                           ;LEDs.c: 32: case 4:
 13775                           
 13776                           
 13777                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 13778  1371  0C72               	rrf	i1set_leds_top@ledState,w
 13779  1372  1C03               	skipc
 13780  1373  118C               	bcf	12,3	;volatile
 13781  1374  1803               	skipnc
 13782  1375  158C               	bsf	12,3	;volatile
 13783                           
 13784                           ;LEDs.c: 34: break;
 13785  1376  0008               	return
 13786  1377                     i1l4321:	
 13787                           ;LEDs.c: 35: case 5:
 13788                           
 13789                           
 13790                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 13791  1377  0C72               	rrf	i1set_leds_top@ledState,w
 13792  1378  1C03               	skipc
 13793  1379  120C               	bcf	12,4	;volatile
 13794  137A  1803               	skipnc
 13795  137B  160C               	bsf	12,4	;volatile
 13796                           
 13797                           ;LEDs.c: 39: break;
 13798                           
 13799                           ;LEDs.c: 38: case 6:
 13800                           
 13801                           ;LEDs.c: 37: break;
 13802  137C  0008               	return
 13803  137D                     i1l660:	
 13804                           ;LEDs.c: 40: case 100:
 13805                           
 13806                           
 13807                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 13808  137D  140C               	bsf	12,0	;volatile
 13809                           
 13810                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 13811  137E  148C               	bsf	12,1	;volatile
 13812                           
 13813                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 13814  137F  150C               	bsf	12,2	;volatile
 13815                           
 13816                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 13817  1380  158C               	bsf	12,3	;volatile
 13818                           
 13819                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 13820  1381  160C               	bsf	12,4	;volatile
 13821                           
 13822                           ;LEDs.c: 47: }
 13823                           
 13824                           ;LEDs.c: 46: break;
 13825  1382  0008               	return
 13826  1383                     i1l4325:	
 13827                           
 13828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13829                           ; Switch size 1, requested type "space"
 13830                           ; Number of cases is 1, Range of values is 0 to 0
 13831                           ; switch strategies available:
 13832                           ; Name         Instructions Cycles
 13833                           ; simple_byte            4     3 (average)
 13834                           ; direct_byte            8     6 (fixed)
 13835                           ; jumptable            260     6 (fixed)
 13836                           ;	Chosen strategy is simple_byte
 13837  1383  0871               	movf	i1set_leds_top@x+1,w
 13838  1384  3A00               	xorlw	0	; case 0
 13839  1385  1903               	skipnz
 13840  1386  2B88               	goto	i1l4939
 13841  1387  2B9F               	goto	i1l661
 13842  1388                     i1l4939:	
 13843                           
 13844                           ; Switch size 1, requested type "space"
 13845                           ; Number of cases is 7, Range of values is 1 to 100
 13846                           ; switch strategies available:
 13847                           ; Name         Instructions Cycles
 13848                           ; simple_byte           22    12 (average)
 13849                           ; direct_byte          209     9 (fixed)
 13850                           ; jumptable            263     9 (fixed)
 13851                           ;	Chosen strategy is simple_byte
 13852  1388  0870               	movf	i1set_leds_top@x,w
 13853  1389  3A01               	xorlw	1	; case 1
 13854  138A  1903               	skipnz
 13855  138B  2B5F               	goto	i1l4313
 13856  138C  3A03               	xorlw	3	; case 2
 13857  138D  1903               	skipnz
 13858  138E  2B65               	goto	i1l4315
 13859  138F  3A01               	xorlw	1	; case 3
 13860  1390  1903               	skipnz
 13861  1391  2B6B               	goto	i1l4317
 13862  1392  3A07               	xorlw	7	; case 4
 13863  1393  1903               	skipnz
 13864  1394  2B71               	goto	i1l4319
 13865  1395  3A01               	xorlw	1	; case 5
 13866  1396  1903               	skipnz
 13867  1397  2B77               	goto	i1l4321
 13868  1398  3A03               	xorlw	3	; case 6
 13869  1399  1903               	skipnz
 13870  139A  2B9F               	goto	i1l661
 13871  139B  3A62               	xorlw	98	; case 100
 13872  139C  1903               	skipnz
 13873  139D  2B7D               	goto	i1l660
 13874  139E  2B9F               	goto	i1l661
 13875  139F                     i1l661:	
 13876  139F  0008               	return
 13877  13A0                     __end_ofi1_set_leds_top:	
 13878  007E                     btemp	set	126	;btemp
 13879  007E                     int$flags	set	126
 13880  007E                     wtemp	set	126
 13881  007E                     wtemp0	set	126
 13882  0080                     wtemp1	set	128
 13883  0082                     wtemp2	set	130
 13884  0084                     wtemp3	set	132
 13885  0086                     wtemp4	set	134
 13886  0088                     wtemp5	set	136
 13887  007F                     wtemp6	set	127
 13888  007E                     ttemp	set	126
 13889  007E                     ttemp0	set	126
 13890  0081                     ttemp1	set	129
 13891  0084                     ttemp2	set	132
 13892  0087                     ttemp3	set	135
 13893  007F                     ttemp4	set	127
 13894  007E                     ltemp	set	126
 13895  007E                     ltemp0	set	126
 13896  0082                     ltemp1	set	130
 13897  0086                     ltemp2	set	134
 13898  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1066
    BSS         204
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     79      80
    BANK1            80     31      80
    BANK2            80      0      79
    BANK3            80      0      48
    BANK4            80      0      58
    BANK5            80      0      58
    BANK6            80      0      58
    BANK7            80      0      80
    BANK8            80      0      80
    BANK9            80      0      58
    BANK10           80      0      64
    BANK11            8      0       0
    BANK12            0      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_set_leds_top

Critical Paths under _main in BANK0

    _main->___fttol
    _updateSwitchTap->_setDoublePressState
    _updateSwitchBypass->_setDoublePressState
    _updateSwitchBypass->_setSwitchBypassState
    _setDoublePressState->_wait_ms
    _showBootSequence->_star_tactiles
    _star_tactiles->_wait_ms
    _solidring_tactiles->_wait_ms
    _set_subdivision->___fttol
    ___fttol->_map
    ___awtoft->___ftpack
    _read_top_tactile->_wait_ms
    _read_bottom_tactile->_wait_ms
    _modulation->___aldiv
    ___aldiv->___wmul
    _map->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___ftadd->___ftpack
    _initSwitchBypass->_setSwitchBypassState
    _setSwitchBypassState->_wait_ms
    _wait_ms->___lmul
    ___altoft->___ftpack
    _ReadSavedSettings->_set_leds_top

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_set_subdivision
    _set_subdivision->___fttol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   50692
                                             10 BANK1     21    21      0
                _ConfigureOscillator
                            _InitApp
                     _InitializeTaps
                  _ReadSavedSettings
                           ___altoft
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                        _adc_convert
                   _initSwitchBypass
                                _map
                         _modulation
                _read_bottom_tactile
                   _read_top_tactile
                    _set_subdivision
                   _showBootSequence
                 _updateSwitchBypass
                    _updateSwitchTap
                        _update_mode
 ---------------------------------------------------------------------------------
 (1) _update_mode                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _updateSwitchTap                                      9     9      0    2696
                                             22 BANK0      9     9      0
                            ___aldiv
                _setDoublePressState
                    _setLongTapState
 ---------------------------------------------------------------------------------
 (2) _setLongTapState                                      4     2      2     194
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _updateSwitchBypass                                   2     2      0    3636
                                             22 BANK0      2     2      0
                _setDoublePressState
                   _setFeedbackState
               _setSwitchBypassState
 ---------------------------------------------------------------------------------
 (2) _setFeedbackState                                     4     2      2     194
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _setDoublePressState                                  4     2      2    1657
                                             18 BANK0      4     2      2
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _showBootSequence                                     1     1      0    6257
                                             25 BANK0      1     1      0
                 _getCurrentLEDState
                    _restoreLEDState
                 _solidring_tactiles
                      _star_tactiles
 ---------------------------------------------------------------------------------
 (2) _star_tactiles                                        7     7      0    3207
                                             18 BANK0      7     7      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _solidring_tactiles                                   3     3      0    3050
                                             18 BANK0      3     3      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _restoreLEDState                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurrentLEDState                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_subdivision                                      4     0      4    7414
                                              6 BANK1      4     0      4
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     956
                                             71 BANK0      8     4      4
                                              0 BANK1      6     6      0
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2840
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _read_top_tactile                                     1     1      0    2535
                                             18 BANK0      1     1      0
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _read_bottom_tactile                                  1     1      0    1825
                                             18 BANK0      1     1      0
                    _set_leds_bottom
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _modulation                                          12     8      4    1099
                                             21 BANK0     12     8      4
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     684
                                              6 BANK0     15     7      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _map                                                 18     3     15   12001
                                             53 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     301
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3331
                                             21 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2773
                                             37 BANK0     16    10      6
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3819
                                              8 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _initSwitchBypass                                     2     2      0    1808
                                             22 BANK0      2     2      0
               _getSwitchBypassState
               _setSwitchBypassState
 ---------------------------------------------------------------------------------
 (2) _setSwitchBypassState                                 4     2      2    1785
                                             18 BANK0      4     2      2
            _updateSwitchBypassState
                            _wait_ms
 ---------------------------------------------------------------------------------
 (3) _wait_ms                                              6     4      2    1355
                                             12 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     220
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _updateSwitchBypassState                              2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getSwitchBypassState                                 2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_convert                                          4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___altoft                                             8     4      4    2311
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2109
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReadSavedSettings                                    0     0      0    1909
                     _FLASH_ReadWord
                    _set_leds_bottom
                       _set_leds_top
 ---------------------------------------------------------------------------------
 (3) _set_leds_top                                         4     0      4    1180
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _set_leds_bottom                                      2     0      2     470
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     259
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitializeTaps                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
                           _init_pwm
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
                        _init_timer0
                        _init_timer2
 ---------------------------------------------------------------------------------
 (3) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0     236
                                              4 COMMON     5     5      0
                     i1_set_leds_top
 ---------------------------------------------------------------------------------
 (6) i1_set_leds_top                                       4     0      4     236
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_adc
     _init_pwm
       _init_timer0
       _init_timer2
   _InitializeTaps
   _ReadSavedSettings
     _FLASH_ReadWord
     _set_leds_bottom
     _set_leds_top
   ___altoft
     ___ftpack
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___altoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___fttol
     ___altoft (ARG)
       ___ftpack
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     _map (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _adc_convert
   _initSwitchBypass
     _getSwitchBypassState
     _setSwitchBypassState
       _updateSwitchBypassState
       _wait_ms
         ___lmul
   _map
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   _modulation
     ___aldiv
       ___wmul (ARG)
     ___wmul
   _read_bottom_tactile
     _set_leds_bottom
     _wait_ms
       ___lmul
   _read_top_tactile
     _set_leds_top
     _wait_ms
       ___lmul
   _set_subdivision
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       _map (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
   _showBootSequence
     _getCurrentLEDState
     _restoreLEDState
     _solidring_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
     _star_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
   _updateSwitchBypass
     _setDoublePressState
       _wait_ms
         ___lmul
     _setFeedbackState
     _setSwitchBypassState
       _updateSwitchBypassState
       _wait_ms
         ___lmul
   _updateSwitchTap
     ___aldiv
       ___wmul (ARG)
     _setDoublePressState
       _wait_ms
         ___lmul
     _setLongTapState
   _update_mode

 _isr (ROOT)
   i1_set_leds_top

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      3A      13       72.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3A      15       72.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0     2F5      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      3A      18       72.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      3A      24       72.5%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0      40      26       80.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     2F5      28        0.0%
BANK11               8      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12               0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Dec 20 08:15:16 2016

                     _update_mode 1313                      ___altoft@exp 002E                       __CFG_CP$OFF 0000  
                   ___altoft@sign 002F                      ___awdiv@sign 0026        setDoublePressState@f_state 0032  
             ___wmul@multiplicand 0022                   _updateSwitchTap 0BB9                      ___ftadd@exp1 0034  
                    ___ftadd@exp2 0033                      ___ftadd@sign 0032                               l500 1F0E  
                             l327 10E8                               l293 0531                               l277 0267  
                             l800 1127                               l810 1339              __size_of_adc_convert 0019  
                             l660 155B                               l812 133C                               l661 157F  
                             l813 1340                               l670 122C                               l814 1350  
                             l672 122F                               l488 0BB8                               l673 1253  
                             l665 1220                               l667 1223                               l668 1226  
                             l669 1229                               l792 10BB                               _PR2 001B  
    solidring_tactiles@ring_delay 0034                               _map 16D6                               _isr 0004  
                             _tap 01A0                      __CFG_BORV$LO 0000                               wreg 0009  
                    __CFG_IESO$ON 0000                      __CFG_FOSC$HS 0000           __end_of_set_leds_bottom 1254  
                    __CFG_LVP$OFF 0000                      ___ftdiv@cntr 004F                      ___ftdiv@sign 0054  
                            _B25k 03A0                              l1007 096C                              l1125 0BCF  
                            l1400 1665                              l1139 0C82                              l1513 15C6  
                            l1345 1F3B                              l1514 15CE                              l1506 15B3  
                            l1537 0A69                              l4041 091D                              l4033 090F  
                            l4201 0D70                              l3403 1562                              l4123 0BE0  
                            l4053 093F                              l4029 08FC                              l4141 0C1D  
                            l4117 0BC4                              l4303 151F                              l4055 0947  
                            l3441 1590                              l4241 0B72                              l4233 0AC1  
                            l4073 0970                              l4161 0C54                              l3427 1236  
                            l3451 15B8                              l3443 159A                              l4307 1527  
                            l4235 0AEE                              l4067 095D                              l4171 0C7A  
                            l4163 0C62                              l4147 0C27                              l4139 0C00  
                            l3453 15C0                              l3445 159F                              l3437 1589  
                            l4261 0815                              l3381 1077                              l3701 0A08  
                            l3621 1F35                              l1597 17DE                              l4237 0B1A  
                            l4245 0B9E                              l3533 161A                              l4085 0994  
                            l4093 09A7                              l3391 1533                              l4263 0825  
                            l4239 0B46                              l3607 101E                              l4079 0989  
                            l4159 0C4C                              l3393 153B                              l4281 14F0  
                            l3377 106D                              l3721 0A3F                              l3713 0A22  
                            l4193 0D31                              l4513 058C                              l4505 0575  
                            l4433 026B                              l3395 1543                              l4291 14F8  
                            l4275 14E5                              l3731 0A5B                              l3723 0A44  
                            l3803 074F                              l3651 1686                              l3643 1676  
                            l4187 0CC8                              l4179 0CBC                              l4531 0604  
                            l4523 05ED                              l4515 05CD                              l4435 026E  
                            l4419 0241                              l3397 154B                              l4293 1504  
                            l3741 0A8D                              l3733 0A65                              l3725 0A48  
                            l3821 07A0                              l3661 16B4                              l3653 1694  
                            l4189 0D12                              l4509 057E                              l4453 02EA  
                            ?_map 0055                              l3399 1553                              l3751 0AA8  
                            l3719 0A35                              l4527 05F8                              l4519 05E2  
                            l4543 0628                              l4471 03D6                              l4463 0379  
                            l3737 0A7B                              l3761 0854                              l3833 07BC  
                            l3825 07A8                              l3809 0765                              l3665 16BF  
                            l3681 1F98                              l4537 0622                              l4545 0642  
                            l4299 1516                              l3579 13CB                              l3691 09F2  
                            l4563 06FA                              l4539 0625                              l4491 04EF  
                            l4483 046D                              l4475 0410                              l4459 033F  
                            l3781 08AB                              l3837 07C4                              l3669 16CD  
                            l3861 177C                              l4565 06A5                              l4549 067E  
                            l3695 09F9                              l3767 086A                              l4567 0700  
                            l4495 0529                              l4487 04A7                              l3929 1412  
                            l3881 17C6                              l3955 10B0                              l4931 062E  
                            l3789 08C4                              l3893 17F0                              l4933 0BA4  
                            l4935 1568                              l3967 1113                              l3887 17D4  
                            l3879 17B5                              l4937 123C                              l3889 17E2  
                            l3987 1344                              ?_isr 0070                              l3989 1354  
                            u3115 0A49                              u3055 0A23                              u3215 087C  
                            u3145 0A5C                              u3225 088C                              u3305 0781  
                            u4025 0C92                              u3235 08AC                              u4035 0CA2  
                            u4125 081A                              u4205 150F                              u3085 0A36  
                            u3245 08BB                              u3325 07A9                              u4045 0CD1  
                            u2615 15AE                              u4215 1517                              u2535 1078  
                            u3255 08C5                              u3335 07AF                              u3415 1784  
                            u4055 0CE6                              u3505 1FBB                              u2545 107F  
                            u4065 0CFA                              u3530 1410                              u3515 1FC1  
                            u2635 15BB                              u3365 07C5                              u3445 17B6  
                            u2725 1627                              u2805 1EF2                              u4085 0D17  
                            u2750 13C9                              u4175 14FB                              u3375 07CB  
                            u3295 0771                              u2745 13AB                              u2905 1695  
                            u2825 1F3C                              u3705 0927                              u3625 1326  
                            u4505 040E                              u2675 15D5                              u2595 1595  
                            u4195 1505                              u2915 16A9                              u2835 1F41  
                            u3475 17D5                              u4515 0488                              u4435 025D  
                            u2925 16B5                              u3565 10A9                              u4525 04A5  
                            u2775 1F23                              u4623 06EB                              u4615 06D3  
                            u4535 050A                              u4455 02CB                              u2785 1011  
                            u3665 08F5                              u4553 0559                              u4545 0527  
                            u4465 02E8                              u3595 110C                              u3675 0908  
                            u4475 035A                              u2885 1689                              u3925 0C09  
                            u4485 0377                              u4495 03F1                              u3795 097B  
                            u3955 0C31                              u4595 0587                              i1l93 00C1  
                   _star_tactiles 15E5                      __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000  
                            _iCnt 0162                              _mod1 04A0                              _mod2 0220  
                            _mod3 02A0                              _mod4 0320                              _mod5 2378  
                            _main 022B                      ___ftpack@arg 0020                      ___ftpack@exp 0023  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              fsr1l 0006                              map@x 0055  
                            btemp 007E                     __CFG_BOREN$ON 0000                              ltemp 007E  
        __end_of_setFeedbackState 1F32                              start 0173                              ttemp 007E  
                            wtemp 007E      __end_of_getSwitchBypassState 1E85      updateSwitchTap@tapCntDivisor 003C  
    __end_of_setSwitchBypassState 13EA                   ?i1_set_leds_top 0070                     __CFG_MCLRE$ON 0000  
                    ___ftmul@cntr 0043                      ___ftmul@sign 0044                   __end_of_InitApp 1064  
               ??_restoreLEDState 0020                      ___fttol@exp1 00C4                             ??_map 0064  
                    ___fttol@lval 00C0                             ??_isr 0074                   _switchBypass_up 016B  
       __size_of_initSwitchBypass 000F                   __end_of___aldiv 16D6                             ?_main 0070  
                 __end_of___awdiv 152C                   __end_of___ftadd 0AC0                             _CCPR1 0291  
                           _CCPR2 0298                             _CCPR3 0311                             _CCPR4 0318  
                           _CCPR5 031C                             _CCPR9 061A                     __CFG_WDTE$OFF 0000  
                 __end_of___ftdiv 08E6                   __end_of___ftneg 1E97                   __end_of___ftmul 07EC  
                 ___awdiv@divisor 0020                   __end_of___fttol 1800                             i1l107 016E  
                           i1l660 137D                             i1l661 139F                   ___awdiv@counter 0025  
                           _iB25k 0420               _ConfigureOscillator 1E7D                      ?_init_timer0 0070  
                    ?_init_timer2 0070               ___lmul@multiplicand 0024                   _switchTap_state 00BE  
               ??_setLongTapState 0022                     ___awtoft@sign 002D                             _delay 23F2  
                           _myBuf 0520                     ___ftpack@sign 0024                             _timer 00E2  
                  ?_star_tactiles 0070                             main@i 00DA                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                 __end_of_wait_ms 10F7                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003       __end_of_read_bottom_tactile 10C5                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
            ?_ConfigureOscillator 0070                _getCurrentLEDState 07EC                _updateSwitchBypass 08E6  
         __end_of_updateSwitchTap 0D88                   __initialization 0175           _updateSwitchBypassState 07FF  
                    __end_of_main 0738           __size_of_InitializeTaps 0026               ?_getCurrentLEDState 0070  
             ?_updateSwitchBypass 0070                    __CFG_LPBOR$OFF 0000                   _set_subdivision 0AC0  
                          ??_main 00C9                     ___fttol@sign1 00BF           __size_of_FLASH_ReadWord 0020  
      __end_of_solidring_tactiles 12D2                    _feedback_timer 014E                    _feedback_state 00BB  
                  _feedback_start 00E9                  ?_set_leds_bottom 0020                  __end_of___altoft 083D  
                          _ADRESH 009C                            _ADRESL 009B                  ___awdiv@dividend 0022  
             _baseline_delay_time 00A0              ??_getCurrentLEDState 0020                  __end_of___awtoft 1FAF  
                __end_of___ftpack 15E5              ??_updateSwitchBypass 0036                            i1l4321 1377  
                          i1l4313 135F                            i1l4315 1365                            i1l4317 136B  
                          i1l4325 1383                            i1l4341 0091                            i1l4319 1371  
                          i1l4363 00E3                            i1l4347 00AC                            i1l4381 013C  
                          i1l4373 0117                            i1l4365 00F2                            i1l4357 00C3  
                          i1l4349 00AD                            i1l4375 0120                            i1l4367 00F4  
                          i1l4393 0167                            i1l4377 012F                            i1l4397 016C  
                          i1l4939 1388                            u432_23 00D6                            _PMADRH 0192  
                          u440_25 0162                            _PMADRL 0191                            u434_23 0107  
                          _PMDATH 0194                            u426_25 0088                            _PMDATL 0193  
                          _PMCON2 0196                            u428_25 00A3                            u439_25 014E  
                  _debounce_count 0144                    _debounce_mode1 0146                    _debounce_mode2 0148  
                       ??_InitApp 0020             ??_ConfigureOscillator 0020          __end_of_read_top_tactile 1131  
                  __CFG_PWRTE$OFF 0000                            ___lmul 1064                         ??___aldiv 002E  
                          ___wmul 1F32                         ??___awdiv 0024                         ??___ftadd 002E  
                  __CFG_STVREN$ON 0000                         ??___ftdiv 004B                         ??___ftneg 0023  
                       ??___ftmul 003B                         ??___fttol 006B                  __end_of_init_adc 1EA1  
                __end_of_init_pwm 1313         __size_of_showBootSequence 002B                  ___awdiv@quotient 0027  
           ___ftmul@f3_as_product 0040                      __pdataBIGRAM 2378           FLASH_ReadWord@flashAddr 0020  
            _getSwitchBypassState 1E81                         ??_wait_ms 002E              _setSwitchBypassState 13A0  
                 ??_star_tactiles 0032            setLongTapState@f_state 0020           __end_of__initialization 0227  
                      ___altoft@c 0028                        ___ftadd@f1 0028                        ___ftadd@f2 002B  
               _bypass_turning_on 00E8                        ___ftdiv@f1 0048                        ___ftdiv@f2 0045  
                      ___ftdiv@f3 0050                    _top_push_state 00B8         ??_updateSwitchBypassState 0022  
                      ___ftneg@f1 0020               _switchBypass_toggle 0160                        ___awtoft@c 0028  
         __end_of_set_subdivision 0BB9                        ___ftmul@f1 0035                        ___ftmul@f2 0038  
                      ___fttol@f1 0067                  ?_updateSwitchTap 0070                      ?_update_mode 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 07FE                      __pidataBANK1 1F4E  
                    __pidataBANK2 1EA1                      __pidataBANK4 11DF                      __pidataBANK5 11A5  
                    __pidataBANK6 116B                      __pidataBANK7 148A                      __pidataBANK8 143A  
                    __pidataBANK9 1131                  _initSwitchBypass 1EC3                   _doubleTap_state 007D  
                  _OPTION_REGbits 0095             ?_getSwitchBypassState 0020             ?_setSwitchBypassState 0032  
            __size_of_init_timer0 0007              __size_of_init_timer2 0009                        __pbssBANK1 00DE  
                      __pbssBANK2 0120                        __pbssBANK3 01A0                  ??i1_set_leds_top 0074  
                 _restoreLEDState 1ED2                   __CFG_VCAPEN$OFF 0000                 ?_setFeedbackState 0020  
                      _delay_time 00A4                  _long_press_limit 00B4      __size_of_setDoublePressState 002D  
                      _delayfound 014C                        __pmaintext 022B                ??_setFeedbackState 0022  
                  _InitializeTaps 1FAF                           ?___lmul 0020                           ?___wmul 0020  
                      __pintentry 0004                        _blink_rate 00BA                     ??_adc_convert 0022  
                       ?___altoft 0028                    ___lmul@product 0028                   _setLongTapState 1EE8  
                       ?___awtoft 0028                         ?___ftpack 0020                    _FLASH_ReadWord 1F6D  
 __end_of_updateSwitchBypassState 0800                       modulation@x 0035                       modulation@y 0037  
                 _debounce_bypass 0142                     _suspend_blink 00ED                         ?_init_adc 0070  
                       ?_init_pwm 0070                           _InitApp 1034            __end_of_InitializeTaps 1FD5  
                   ?_set_leds_top 0020                        _knob1_prev 00AA                        _knob2_prev 00AC  
                      _knob3_prev 00AE                        _knob4_prev 00B0                        _knob5_prev 00B2  
                ?_set_subdivision 00C5                           ___aldiv 1654                           ___awdiv 14DA  
                 __size_of___lmul 0030                           ___ftadd 09CA                           ___ftdiv 083D  
                         ___ftneg 1E8E                        _knob_1_pos 0150                        _knob_2_pos 0152  
                 __size_of___wmul 001C                           ___ftmul 0738                        _knob_3_pos 0154  
                         ___fttol 1761                        _knob_4_pos 0156                        _knob_5_pos 0158  
               _switchTap_pressed 00EF                        ??___altoft 002C                  _showBootSequence 1FD5  
          __end_of_FLASH_ReadWord 1F8D                        ??___awtoft 002B                        ??___ftpack 0025  
              InitializeTaps@itap 0021                           __ptext1 1313                           __ptext2 0BB9  
                         __ptext3 1EE8                           __ptext4 08E6                           __ptext5 1F18  
                         __ptext6 1007                           __ptext7 1FD5                           __ptext8 15E5  
                         __ptext9 1292            ??_getSwitchBypassState 0022                         _T2CONbits 001C  
                    __size_of_map 008B                      __size_of_isr 016F            ??_setSwitchBypassState 0034  
             __end_of_adc_convert 1F18                  ___aldiv@dividend 002A                           _wait_ms 10C5  
         __end_of_restoreLEDState 1EE8                           clrloop0 1EB8              end_of_initialization 0227  
                      _modulation 1254                           init_ram 1EAB                        ??_init_adc 0020  
                         initloop 1EAC                        ??_init_pwm 0020      updateSwitchBypassState@state 0020  
              _solidring_tactiles 1292                     _longTap_timer 015A                     _longTap_state 006F  
                   _longTap_start 00EA                    ??_set_leds_top 0024                 ?_read_top_tactile 0070  
                 ?_InitializeTaps 0070           __end_of_setLongTapState 1EFF            i1set_leds_top@ledState 0072  
              ??_read_top_tactile 0032                  ___aldiv@quotient 0031      __size_of_read_bottom_tactile 0031  
             ?_solidring_tactiles 0070         FLASH_ReadWord@GIEBitValue 0022              __size_of_update_mode 0045  
                 ?_FLASH_ReadWord 0020                         _PORTCbits 000E                         _PORTDbits 000F  
                       _PORTEbits 0010              star_tactiles@reverse 0034                        _test_timer 01CC  
                       _TRISBbits 008D                         _TRISCbits 008E                         _TRISDbits 008F  
                       _TRISEbits 0090                         _TRISFbits 030C                         _TRISGbits 030D  
                       _SPI_Value 0140           setFeedbackState@f_state 0020              ??_solidring_tactiles 0032  
     __end_of_ConfigureOscillator 1E81       __size_of_getCurrentLEDState 0012                        map@out_max 0061  
                      map@out_min 005E       __size_of_updateSwitchBypass 00E4          __end_of_initSwitchBypass 1ED2  
                     _CCP1CONbits 0293                       ___ftdiv@exp 0053          __size_of_set_leds_bottom 003B  
                     _CCP2CONbits 029A              _switchBypass_pressed 015E                       _CCP3CONbits 0313  
                     _CCP4CONbits 031A                       _CCP5CONbits 031E                       _CCP6CONbits 0613  
                     _CCP7CONbits 0616                       ___ftmul@exp 003F                adc_convert@channel 0023  
                     _CCP8CONbits 0619                       _CCP9CONbits 061C              set_leds_top@ledState 0022  
                  __end_of___lmul 1094                     __pidataBIGRAM 0D88                    __end_of___wmul 1F4E  
                     _adc_convert 1EFF                    _switchTap_down 00EE               start_initialization 0175  
             _setDoublePressState 1007                       __end_of_map 1761                       __end_of_isr 0173  
                ?_restoreLEDState 0070             __end_of_star_tactiles 1654                       ?_modulation 0035  
            ?_setDoublePressState 0032                  ?_setLongTapState 0020                          ??___lmul 0028  
                        ??___wmul 0024                       __pdataBANK0 006F                       __pdataBANK1 00A0  
                     __pdataBANK2 0165                       __pdataBANK4 0220                       __pdataBANK5 02A0  
                     __pdataBANK6 0320                       __pdataBANK7 03A0                       __pdataBANK8 0420  
                     __pdataBANK9 04A0                     _tap_iteration 00B6          __size_of_updateSwitchTap 01CF  
               __size_of___altoft 003D                       __pbssBANK10 0520         __size_of_setFeedbackState 001A  
               __size_of___awtoft 0022                 __size_of___ftpack 0065                     ??_init_timer0 0020  
                   ??_init_timer2 0020                       __pbssCOMMON 0079              __end_of_set_leds_top 1580  
                       ___latbits 0003                _switchBypass_state 00BD                     __pcstackBANK0 0020  
                   __pcstackBANK1 00BF                     _delay_counter 014A          __end_of_showBootSequence 2000  
        ?_updateSwitchBypassState 0020                          ?_InitApp 0070             ??_setDoublePressState 0034  
               __size_of_init_adc 000A                 __size_of_init_pwm 0041                          ?___aldiv 0026  
               ??_set_leds_bottom 0022                _currentBypassState 016E                          ?___awdiv 0020  
                        ?___ftadd 0028                          ?___ftdiv 0045                          ?___ftneg 0020  
                        ?___ftmul 0035                          ?___fttol 0067                       _blink_delay 0165  
             __size_of_modulation 003E                       _blink_state 016D                          _CCPTMRS0 029D  
                        _CCPTMRS1 029E                          _CCPTMRS2 029F                          ?_wait_ms 002C  
             _read_bottom_tactile 1094               __end_of_init_timer0 1007               __end_of_init_timer2 1E8E  
                       _mod_value 015C                         _mod_timer 0138                  ??_InitializeTaps 0020  
                 ___aldiv@divisor 0026                   ___aldiv@counter 002F                    ___wmul@product 0024  
                        _LATBbits 010D                          _LATDbits 010F                          _LATFbits 038C  
                        _LATGbits 038D                    _mod_delay_time 0169                         clear_ram0 1EB7  
                       _tap_timer 0079                         _tap_total 013C                     set_leds_top@x 0020  
                ??_FLASH_ReadWord 0022              ?_read_bottom_tactile 0070           __size_ofi1_set_leds_top 0048  
       initSwitchBypass@initState 0036                         map@in_max 005B                         map@in_min 0058  
                       _sub_timer 00DE                        _ADCON0bits 009D                        _ADCON1bits 009E  
                       main@i_358 00DC          __size_of_set_subdivision 00F9                 ___wmul@multiplier 0020  
                set_subdivision@x 00C5                  set_subdivision@y 00C7         __size_of_read_top_tactile 003A  
   __size_of_getSwitchBypassState 0004     __size_of_setSwitchBypassState 004A                 ??_updateSwitchTap 0036  
               ___lmul@multiplier 0020                 _ReadSavedSettings 13EA                 ?_initSwitchBypass 0070  
                  wait_ms@timeSec 002C                ?_ReadSavedSettings 0070                    wait_ms@timemsl 002E  
     setSwitchBypassState@f_state 0032                ??_initSwitchBypass 0036                  __size_of_InitApp 0030  
                     _mode1_state 0163                     ??_update_mode 0020                       _mode2_state 00EB  
           ??_read_bottom_tactile 0032               updateSwitchTap@iCnt 003E               ??_ReadSavedSettings 0024  
                      _APFCONbits 011D                 star_tactiles@iLed 0035                  __size_of___aldiv 0082  
                __size_of___awdiv 0052                  __size_of___ftadd 00F6                  __size_of___ftdiv 00A9  
                    ?_adc_convert 0020                  __size_of___ftneg 0009                          ___altoft 0800  
                __size_of___ftmul 00B4                  __size_of___fttol 009F                          ___awtoft 1F8D  
           __size_of_set_leds_top 0054                          ___ftpack 1580                          _map$2192 0064  
          _preset_programmning_on 0164            star_tactiles@iLed_1411 0037                        _ANSELEbits 0190  
                      _ANSELFbits 040C                  set_leds_bottom@x 0020                  _setFeedbackState 1F18  
                     _init_timer0 1000                       _init_timer2 1E85                _delay_time_changed 0167  
      __end_of_getCurrentLEDState 07FE        __end_of_updateSwitchBypass 09CA                          __ptext10 1ED2  
                        __ptext11 07EC                          __ptext20 16D6                          __ptext12 0AC0  
                        __ptext21 1E8E                          __ptext13 1761                          __ptext30 1E81  
                        __ptext22 0738                          __ptext14 1F8D                          __ptext31 1EFF  
                        __ptext23 083D                          __ptext15 10F7                          __ptext40 1034  
                        __ptext32 14DA                          __ptext24 09CA                          __ptext16 1094  
                        __ptext41 12D2                          __ptext33 0800                          __ptext25 1EC3  
                        __ptext17 1254                          __ptext42 1E85                          __ptext34 1580  
                        __ptext26 13A0                          __ptext18 1F32                          __ptext43 1000  
                        __ptext35 13EA                          __ptext27 10C5                          __ptext19 1654  
                        __ptext44 1E97                          __ptext36 152C                          __ptext28 1064  
                        __ptext45 1E7D                          __ptext37 1219                          __ptext29 07FF  
                        __ptext38 1F6D                          __ptext47 1358                          __ptext39 1FAF  
       __end_of_ReadSavedSettings 143A                  __size_of_wait_ms 0032       __size_of_solidring_tactiles 0040  
                        _ledState 0134                      ??_modulation 0039                       _mod_counter 00E6  
                        _init_adc 1E97                     __size_of_main 050D                          _init_pwm 12D2  
    __size_of_ConfigureOscillator 0004                      _set_leds_top 152C                          _num_taps 00BC  
                        int$flags 007E                   i1set_leds_top@x 0070               __end_of_update_mode 1358  
              __end_of_modulation 1292                        _INTCONbits 000B                       _tap_history 0120  
               ??_set_subdivision 006F                          intlevel1 0000                   _set_leds_bottom 1219  
                      _PMCON1bits 0195                 ?_showBootSequence 0070                 __CFG_CLKOUTEN$OFF 0000  
        __size_of_restoreLEDState 0016                ??_showBootSequence 0039                        _OSCCONbits 0099  
                    _preset_blink 00EC                    i1_set_leds_top 1358  __size_of_updateSwitchBypassState 0001  
          __size_of_star_tactiles 006F          __size_of_setLongTapState 0017                  _read_top_tactile 10F7  
                    ___aldiv@sign 0030        __size_of_ReadSavedSettings 0050            main@adjusted_pot_value 00D8  
     __end_of_setDoublePressState 1034                      _CCP10CONbits 061F                 _bottom_push_state 00A8  
          __end_ofi1_set_leds_top 13A0  
