

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Oct 10 23:59:42 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	idataBANK2,global,class=CODE,delta=2
     8                           	psect	idataBANK5,global,class=CODE,delta=2
     9                           	psect	idataBANK6,global,class=CODE,delta=2
    10                           	psect	idataBANK7,global,class=CODE,delta=2
    11                           	psect	idataBANK8,global,class=CODE,delta=2
    12                           	psect	idataBANK9,global,class=CODE,delta=2
    13                           	psect	idataBANK10,global,class=CODE,delta=2
    14                           	psect	idataBIGRAM,global,class=CODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	dataBIGRAM,global,delta=1
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    25                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    27                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    28                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    29                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1
    30                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1
    31                           	psect	dataBANK10,global,class=BANK10,space=1,delta=1
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	inittext,global,class=CODE,delta=2
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	intentry,global,class=CODE,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	dabs	1,0x920,80
    80                           	dabs	1,0x8A0,80
    81                           	dabs	1,0x820,80
    82                           	dabs	1,0x7A0,80
    83                           	dabs	1,0x720,80
    84                           	dabs	1,0x6A0,80
    85                           	dabs	1,0x652,30
    86                           	dabs	1,0x620,50
    87                           	dabs	1,0x5A8,72
    88                           	dabs	1,0x23F2,0,_delay
    89                           	dabs	1,0x2378,0,_mod5
    90                           	dabs	1,0x7E,2
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0110                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  011D                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018F                     	;# 
   151  0190                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  020D                     	;# 
   185  020F                     	;# 
   186  0210                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  0219                     	;# 
   203  021A                     	;# 
   204  021B                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021E                     	;# 
   208  021F                     	;# 
   209  028C                     	;# 
   210  028D                     	;# 
   211  0291                     	;# 
   212  0291                     	;# 
   213  0292                     	;# 
   214  0293                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029D                     	;# 
   220  029E                     	;# 
   221  029F                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  0311                     	;# 
   225  0311                     	;# 
   226  0312                     	;# 
   227  0313                     	;# 
   228  0318                     	;# 
   229  0318                     	;# 
   230  0319                     	;# 
   231  031A                     	;# 
   232  031C                     	;# 
   233  031C                     	;# 
   234  031D                     	;# 
   235  031E                     	;# 
   236  038C                     	;# 
   237  038D                     	;# 
   238  0394                     	;# 
   239  0395                     	;# 
   240  0396                     	;# 
   241  040C                     	;# 
   242  040D                     	;# 
   243  0411                     	;# 
   244  0411                     	;# 
   245  0412                     	;# 
   246  0413                     	;# 
   247  0414                     	;# 
   248  0415                     	;# 
   249  0416                     	;# 
   250  0417                     	;# 
   251  0418                     	;# 
   252  0418                     	;# 
   253  0419                     	;# 
   254  041A                     	;# 
   255  041B                     	;# 
   256  041C                     	;# 
   257  041D                     	;# 
   258  041E                     	;# 
   259  048D                     	;# 
   260  0491                     	;# 
   261  0491                     	;# 
   262  0492                     	;# 
   263  0492                     	;# 
   264  0493                     	;# 
   265  0493                     	;# 
   266  0493                     	;# 
   267  0494                     	;# 
   268  0494                     	;# 
   269  0495                     	;# 
   270  0495                     	;# 
   271  0496                     	;# 
   272  0496                     	;# 
   273  0497                     	;# 
   274  0497                     	;# 
   275  0595                     	;# 
   276  0596                     	;# 
   277  0597                     	;# 
   278  059C                     	;# 
   279  059D                     	;# 
   280  059E                     	;# 
   281  0611                     	;# 
   282  0611                     	;# 
   283  0612                     	;# 
   284  0613                     	;# 
   285  0614                     	;# 
   286  0614                     	;# 
   287  0615                     	;# 
   288  0616                     	;# 
   289  0617                     	;# 
   290  0617                     	;# 
   291  0618                     	;# 
   292  0619                     	;# 
   293  061A                     	;# 
   294  061A                     	;# 
   295  061B                     	;# 
   296  061C                     	;# 
   297  061D                     	;# 
   298  061D                     	;# 
   299  061E                     	;# 
   300  061F                     	;# 
   301  0FE4                     	;# 
   302  0FE5                     	;# 
   303  0FE6                     	;# 
   304  0FE7                     	;# 
   305  0FE8                     	;# 
   306  0FE9                     	;# 
   307  0FEA                     	;# 
   308  0FEB                     	;# 
   309  0FED                     	;# 
   310  0FEE                     	;# 
   311  0FEF                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0110                     	;# 
   366  0116                     	;# 
   367  0117                     	;# 
   368  011D                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  018F                     	;# 
   372  0190                     	;# 
   373  0191                     	;# 
   374  0191                     	;# 
   375  0192                     	;# 
   376  0193                     	;# 
   377  0193                     	;# 
   378  0194                     	;# 
   379  0195                     	;# 
   380  0196                     	;# 
   381  0197                     	;# 
   382  0199                     	;# 
   383  0199                     	;# 
   384  0199                     	;# 
   385  019A                     	;# 
   386  019A                     	;# 
   387  019A                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019C                     	;# 
   394  019C                     	;# 
   395  019C                     	;# 
   396  019D                     	;# 
   397  019D                     	;# 
   398  019D                     	;# 
   399  019E                     	;# 
   400  019E                     	;# 
   401  019E                     	;# 
   402  019F                     	;# 
   403  019F                     	;# 
   404  019F                     	;# 
   405  020D                     	;# 
   406  020F                     	;# 
   407  0210                     	;# 
   408  0211                     	;# 
   409  0211                     	;# 
   410  0212                     	;# 
   411  0212                     	;# 
   412  0213                     	;# 
   413  0213                     	;# 
   414  0214                     	;# 
   415  0214                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  0219                     	;# 
   424  021A                     	;# 
   425  021B                     	;# 
   426  021C                     	;# 
   427  021D                     	;# 
   428  021E                     	;# 
   429  021F                     	;# 
   430  028C                     	;# 
   431  028D                     	;# 
   432  0291                     	;# 
   433  0291                     	;# 
   434  0292                     	;# 
   435  0293                     	;# 
   436  0298                     	;# 
   437  0298                     	;# 
   438  0299                     	;# 
   439  029A                     	;# 
   440  029D                     	;# 
   441  029E                     	;# 
   442  029F                     	;# 
   443  030C                     	;# 
   444  030D                     	;# 
   445  0311                     	;# 
   446  0311                     	;# 
   447  0312                     	;# 
   448  0313                     	;# 
   449  0318                     	;# 
   450  0318                     	;# 
   451  0319                     	;# 
   452  031A                     	;# 
   453  031C                     	;# 
   454  031C                     	;# 
   455  031D                     	;# 
   456  031E                     	;# 
   457  038C                     	;# 
   458  038D                     	;# 
   459  0394                     	;# 
   460  0395                     	;# 
   461  0396                     	;# 
   462  040C                     	;# 
   463  040D                     	;# 
   464  0411                     	;# 
   465  0411                     	;# 
   466  0412                     	;# 
   467  0413                     	;# 
   468  0414                     	;# 
   469  0415                     	;# 
   470  0416                     	;# 
   471  0417                     	;# 
   472  0418                     	;# 
   473  0418                     	;# 
   474  0419                     	;# 
   475  041A                     	;# 
   476  041B                     	;# 
   477  041C                     	;# 
   478  041D                     	;# 
   479  041E                     	;# 
   480  048D                     	;# 
   481  0491                     	;# 
   482  0491                     	;# 
   483  0492                     	;# 
   484  0492                     	;# 
   485  0493                     	;# 
   486  0493                     	;# 
   487  0493                     	;# 
   488  0494                     	;# 
   489  0494                     	;# 
   490  0495                     	;# 
   491  0495                     	;# 
   492  0496                     	;# 
   493  0496                     	;# 
   494  0497                     	;# 
   495  0497                     	;# 
   496  0595                     	;# 
   497  0596                     	;# 
   498  0597                     	;# 
   499  059C                     	;# 
   500  059D                     	;# 
   501  059E                     	;# 
   502  0611                     	;# 
   503  0611                     	;# 
   504  0612                     	;# 
   505  0613                     	;# 
   506  0614                     	;# 
   507  0614                     	;# 
   508  0615                     	;# 
   509  0616                     	;# 
   510  0617                     	;# 
   511  0617                     	;# 
   512  0618                     	;# 
   513  0619                     	;# 
   514  061A                     	;# 
   515  061A                     	;# 
   516  061B                     	;# 
   517  061C                     	;# 
   518  061D                     	;# 
   519  061D                     	;# 
   520  061E                     	;# 
   521  061F                     	;# 
   522  0FE4                     	;# 
   523  0FE5                     	;# 
   524  0FE6                     	;# 
   525  0FE7                     	;# 
   526  0FE8                     	;# 
   527  0FE9                     	;# 
   528  0FEA                     	;# 
   529  0FEB                     	;# 
   530  0FED                     	;# 
   531  0FEE                     	;# 
   532  0FEF                     	;# 
   533  0000                     	;# 
   534  0001                     	;# 
   535  0002                     	;# 
   536  0003                     	;# 
   537  0004                     	;# 
   538  0005                     	;# 
   539  0006                     	;# 
   540  0007                     	;# 
   541  0008                     	;# 
   542  0009                     	;# 
   543  000A                     	;# 
   544  000B                     	;# 
   545  000C                     	;# 
   546  000D                     	;# 
   547  000E                     	;# 
   548  000F                     	;# 
   549  0010                     	;# 
   550  0011                     	;# 
   551  0012                     	;# 
   552  0013                     	;# 
   553  0014                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  008D                     	;# 
   565  008E                     	;# 
   566  008F                     	;# 
   567  0090                     	;# 
   568  0091                     	;# 
   569  0092                     	;# 
   570  0093                     	;# 
   571  0094                     	;# 
   572  0095                     	;# 
   573  0096                     	;# 
   574  0097                     	;# 
   575  0099                     	;# 
   576  009A                     	;# 
   577  009B                     	;# 
   578  009B                     	;# 
   579  009C                     	;# 
   580  009D                     	;# 
   581  009E                     	;# 
   582  010C                     	;# 
   583  010D                     	;# 
   584  010E                     	;# 
   585  010F                     	;# 
   586  0110                     	;# 
   587  0116                     	;# 
   588  0117                     	;# 
   589  011D                     	;# 
   590  018C                     	;# 
   591  018D                     	;# 
   592  018F                     	;# 
   593  0190                     	;# 
   594  0191                     	;# 
   595  0191                     	;# 
   596  0192                     	;# 
   597  0193                     	;# 
   598  0193                     	;# 
   599  0194                     	;# 
   600  0195                     	;# 
   601  0196                     	;# 
   602  0197                     	;# 
   603  0199                     	;# 
   604  0199                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019A                     	;# 
   608  019A                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019C                     	;# 
   615  019C                     	;# 
   616  019C                     	;# 
   617  019D                     	;# 
   618  019D                     	;# 
   619  019D                     	;# 
   620  019E                     	;# 
   621  019E                     	;# 
   622  019E                     	;# 
   623  019F                     	;# 
   624  019F                     	;# 
   625  019F                     	;# 
   626  020D                     	;# 
   627  020F                     	;# 
   628  0210                     	;# 
   629  0211                     	;# 
   630  0211                     	;# 
   631  0212                     	;# 
   632  0212                     	;# 
   633  0213                     	;# 
   634  0213                     	;# 
   635  0214                     	;# 
   636  0214                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0216                     	;# 
   641  0216                     	;# 
   642  0217                     	;# 
   643  0217                     	;# 
   644  0219                     	;# 
   645  021A                     	;# 
   646  021B                     	;# 
   647  021C                     	;# 
   648  021D                     	;# 
   649  021E                     	;# 
   650  021F                     	;# 
   651  028C                     	;# 
   652  028D                     	;# 
   653  0291                     	;# 
   654  0291                     	;# 
   655  0292                     	;# 
   656  0293                     	;# 
   657  0298                     	;# 
   658  0298                     	;# 
   659  0299                     	;# 
   660  029A                     	;# 
   661  029D                     	;# 
   662  029E                     	;# 
   663  029F                     	;# 
   664  030C                     	;# 
   665  030D                     	;# 
   666  0311                     	;# 
   667  0311                     	;# 
   668  0312                     	;# 
   669  0313                     	;# 
   670  0318                     	;# 
   671  0318                     	;# 
   672  0319                     	;# 
   673  031A                     	;# 
   674  031C                     	;# 
   675  031C                     	;# 
   676  031D                     	;# 
   677  031E                     	;# 
   678  038C                     	;# 
   679  038D                     	;# 
   680  0394                     	;# 
   681  0395                     	;# 
   682  0396                     	;# 
   683  040C                     	;# 
   684  040D                     	;# 
   685  0411                     	;# 
   686  0411                     	;# 
   687  0412                     	;# 
   688  0413                     	;# 
   689  0414                     	;# 
   690  0415                     	;# 
   691  0416                     	;# 
   692  0417                     	;# 
   693  0418                     	;# 
   694  0418                     	;# 
   695  0419                     	;# 
   696  041A                     	;# 
   697  041B                     	;# 
   698  041C                     	;# 
   699  041D                     	;# 
   700  041E                     	;# 
   701  048D                     	;# 
   702  0491                     	;# 
   703  0491                     	;# 
   704  0492                     	;# 
   705  0492                     	;# 
   706  0493                     	;# 
   707  0493                     	;# 
   708  0493                     	;# 
   709  0494                     	;# 
   710  0494                     	;# 
   711  0495                     	;# 
   712  0495                     	;# 
   713  0496                     	;# 
   714  0496                     	;# 
   715  0497                     	;# 
   716  0497                     	;# 
   717  0595                     	;# 
   718  0596                     	;# 
   719  0597                     	;# 
   720  059C                     	;# 
   721  059D                     	;# 
   722  059E                     	;# 
   723  0611                     	;# 
   724  0611                     	;# 
   725  0612                     	;# 
   726  0613                     	;# 
   727  0614                     	;# 
   728  0614                     	;# 
   729  0615                     	;# 
   730  0616                     	;# 
   731  0617                     	;# 
   732  0617                     	;# 
   733  0618                     	;# 
   734  0619                     	;# 
   735  061A                     	;# 
   736  061A                     	;# 
   737  061B                     	;# 
   738  061C                     	;# 
   739  061D                     	;# 
   740  061D                     	;# 
   741  061E                     	;# 
   742  061F                     	;# 
   743  0FE4                     	;# 
   744  0FE5                     	;# 
   745  0FE6                     	;# 
   746  0FE7                     	;# 
   747  0FE8                     	;# 
   748  0FE9                     	;# 
   749  0FEA                     	;# 
   750  0FEB                     	;# 
   751  0FED                     	;# 
   752  0FEE                     	;# 
   753  0FEF                     	;# 
   754  0000                     	;# 
   755  0001                     	;# 
   756  0002                     	;# 
   757  0003                     	;# 
   758  0004                     	;# 
   759  0005                     	;# 
   760  0006                     	;# 
   761  0007                     	;# 
   762  0008                     	;# 
   763  0009                     	;# 
   764  000A                     	;# 
   765  000B                     	;# 
   766  000C                     	;# 
   767  000D                     	;# 
   768  000E                     	;# 
   769  000F                     	;# 
   770  0010                     	;# 
   771  0011                     	;# 
   772  0012                     	;# 
   773  0013                     	;# 
   774  0014                     	;# 
   775  0015                     	;# 
   776  0016                     	;# 
   777  0016                     	;# 
   778  0017                     	;# 
   779  0018                     	;# 
   780  0019                     	;# 
   781  001A                     	;# 
   782  001B                     	;# 
   783  001C                     	;# 
   784  008C                     	;# 
   785  008D                     	;# 
   786  008E                     	;# 
   787  008F                     	;# 
   788  0090                     	;# 
   789  0091                     	;# 
   790  0092                     	;# 
   791  0093                     	;# 
   792  0094                     	;# 
   793  0095                     	;# 
   794  0096                     	;# 
   795  0097                     	;# 
   796  0099                     	;# 
   797  009A                     	;# 
   798  009B                     	;# 
   799  009B                     	;# 
   800  009C                     	;# 
   801  009D                     	;# 
   802  009E                     	;# 
   803  010C                     	;# 
   804  010D                     	;# 
   805  010E                     	;# 
   806  010F                     	;# 
   807  0110                     	;# 
   808  0116                     	;# 
   809  0117                     	;# 
   810  011D                     	;# 
   811  018C                     	;# 
   812  018D                     	;# 
   813  018F                     	;# 
   814  0190                     	;# 
   815  0191                     	;# 
   816  0191                     	;# 
   817  0192                     	;# 
   818  0193                     	;# 
   819  0193                     	;# 
   820  0194                     	;# 
   821  0195                     	;# 
   822  0196                     	;# 
   823  0197                     	;# 
   824  0199                     	;# 
   825  0199                     	;# 
   826  0199                     	;# 
   827  019A                     	;# 
   828  019A                     	;# 
   829  019A                     	;# 
   830  019B                     	;# 
   831  019B                     	;# 
   832  019B                     	;# 
   833  019B                     	;# 
   834  019B                     	;# 
   835  019C                     	;# 
   836  019C                     	;# 
   837  019C                     	;# 
   838  019D                     	;# 
   839  019D                     	;# 
   840  019D                     	;# 
   841  019E                     	;# 
   842  019E                     	;# 
   843  019E                     	;# 
   844  019F                     	;# 
   845  019F                     	;# 
   846  019F                     	;# 
   847  020D                     	;# 
   848  020F                     	;# 
   849  0210                     	;# 
   850  0211                     	;# 
   851  0211                     	;# 
   852  0212                     	;# 
   853  0212                     	;# 
   854  0213                     	;# 
   855  0213                     	;# 
   856  0214                     	;# 
   857  0214                     	;# 
   858  0215                     	;# 
   859  0215                     	;# 
   860  0215                     	;# 
   861  0216                     	;# 
   862  0216                     	;# 
   863  0217                     	;# 
   864  0217                     	;# 
   865  0219                     	;# 
   866  021A                     	;# 
   867  021B                     	;# 
   868  021C                     	;# 
   869  021D                     	;# 
   870  021E                     	;# 
   871  021F                     	;# 
   872  028C                     	;# 
   873  028D                     	;# 
   874  0291                     	;# 
   875  0291                     	;# 
   876  0292                     	;# 
   877  0293                     	;# 
   878  0298                     	;# 
   879  0298                     	;# 
   880  0299                     	;# 
   881  029A                     	;# 
   882  029D                     	;# 
   883  029E                     	;# 
   884  029F                     	;# 
   885  030C                     	;# 
   886  030D                     	;# 
   887  0311                     	;# 
   888  0311                     	;# 
   889  0312                     	;# 
   890  0313                     	;# 
   891  0318                     	;# 
   892  0318                     	;# 
   893  0319                     	;# 
   894  031A                     	;# 
   895  031C                     	;# 
   896  031C                     	;# 
   897  031D                     	;# 
   898  031E                     	;# 
   899  038C                     	;# 
   900  038D                     	;# 
   901  0394                     	;# 
   902  0395                     	;# 
   903  0396                     	;# 
   904  040C                     	;# 
   905  040D                     	;# 
   906  0411                     	;# 
   907  0411                     	;# 
   908  0412                     	;# 
   909  0413                     	;# 
   910  0414                     	;# 
   911  0415                     	;# 
   912  0416                     	;# 
   913  0417                     	;# 
   914  0418                     	;# 
   915  0418                     	;# 
   916  0419                     	;# 
   917  041A                     	;# 
   918  041B                     	;# 
   919  041C                     	;# 
   920  041D                     	;# 
   921  041E                     	;# 
   922  048D                     	;# 
   923  0491                     	;# 
   924  0491                     	;# 
   925  0492                     	;# 
   926  0492                     	;# 
   927  0493                     	;# 
   928  0493                     	;# 
   929  0493                     	;# 
   930  0494                     	;# 
   931  0494                     	;# 
   932  0495                     	;# 
   933  0495                     	;# 
   934  0496                     	;# 
   935  0496                     	;# 
   936  0497                     	;# 
   937  0497                     	;# 
   938  0595                     	;# 
   939  0596                     	;# 
   940  0597                     	;# 
   941  059C                     	;# 
   942  059D                     	;# 
   943  059E                     	;# 
   944  0611                     	;# 
   945  0611                     	;# 
   946  0612                     	;# 
   947  0613                     	;# 
   948  0614                     	;# 
   949  0614                     	;# 
   950  0615                     	;# 
   951  0616                     	;# 
   952  0617                     	;# 
   953  0617                     	;# 
   954  0618                     	;# 
   955  0619                     	;# 
   956  061A                     	;# 
   957  061A                     	;# 
   958  061B                     	;# 
   959  061C                     	;# 
   960  061D                     	;# 
   961  061D                     	;# 
   962  061E                     	;# 
   963  061F                     	;# 
   964  0FE4                     	;# 
   965  0FE5                     	;# 
   966  0FE6                     	;# 
   967  0FE7                     	;# 
   968  0FE8                     	;# 
   969  0FE9                     	;# 
   970  0FEA                     	;# 
   971  0FEB                     	;# 
   972  0FED                     	;# 
   973  0FEE                     	;# 
   974  0FEF                     	;# 
   975  0000                     	;# 
   976  0001                     	;# 
   977  0002                     	;# 
   978  0003                     	;# 
   979  0004                     	;# 
   980  0005                     	;# 
   981  0006                     	;# 
   982  0007                     	;# 
   983  0008                     	;# 
   984  0009                     	;# 
   985  000A                     	;# 
   986  000B                     	;# 
   987  000C                     	;# 
   988  000D                     	;# 
   989  000E                     	;# 
   990  000F                     	;# 
   991  0010                     	;# 
   992  0011                     	;# 
   993  0012                     	;# 
   994  0013                     	;# 
   995  0014                     	;# 
   996  0015                     	;# 
   997  0016                     	;# 
   998  0016                     	;# 
   999  0017                     	;# 
  1000  0018                     	;# 
  1001  0019                     	;# 
  1002  001A                     	;# 
  1003  001B                     	;# 
  1004  001C                     	;# 
  1005  008C                     	;# 
  1006  008D                     	;# 
  1007  008E                     	;# 
  1008  008F                     	;# 
  1009  0090                     	;# 
  1010  0091                     	;# 
  1011  0092                     	;# 
  1012  0093                     	;# 
  1013  0094                     	;# 
  1014  0095                     	;# 
  1015  0096                     	;# 
  1016  0097                     	;# 
  1017  0099                     	;# 
  1018  009A                     	;# 
  1019  009B                     	;# 
  1020  009B                     	;# 
  1021  009C                     	;# 
  1022  009D                     	;# 
  1023  009E                     	;# 
  1024  010C                     	;# 
  1025  010D                     	;# 
  1026  010E                     	;# 
  1027  010F                     	;# 
  1028  0110                     	;# 
  1029  0116                     	;# 
  1030  0117                     	;# 
  1031  011D                     	;# 
  1032  018C                     	;# 
  1033  018D                     	;# 
  1034  018F                     	;# 
  1035  0190                     	;# 
  1036  0191                     	;# 
  1037  0191                     	;# 
  1038  0192                     	;# 
  1039  0193                     	;# 
  1040  0193                     	;# 
  1041  0194                     	;# 
  1042  0195                     	;# 
  1043  0196                     	;# 
  1044  0197                     	;# 
  1045  0199                     	;# 
  1046  0199                     	;# 
  1047  0199                     	;# 
  1048  019A                     	;# 
  1049  019A                     	;# 
  1050  019A                     	;# 
  1051  019B                     	;# 
  1052  019B                     	;# 
  1053  019B                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019C                     	;# 
  1057  019C                     	;# 
  1058  019C                     	;# 
  1059  019D                     	;# 
  1060  019D                     	;# 
  1061  019D                     	;# 
  1062  019E                     	;# 
  1063  019E                     	;# 
  1064  019E                     	;# 
  1065  019F                     	;# 
  1066  019F                     	;# 
  1067  019F                     	;# 
  1068  020D                     	;# 
  1069  020F                     	;# 
  1070  0210                     	;# 
  1071  0211                     	;# 
  1072  0211                     	;# 
  1073  0212                     	;# 
  1074  0212                     	;# 
  1075  0213                     	;# 
  1076  0213                     	;# 
  1077  0214                     	;# 
  1078  0214                     	;# 
  1079  0215                     	;# 
  1080  0215                     	;# 
  1081  0215                     	;# 
  1082  0216                     	;# 
  1083  0216                     	;# 
  1084  0217                     	;# 
  1085  0217                     	;# 
  1086  0219                     	;# 
  1087  021A                     	;# 
  1088  021B                     	;# 
  1089  021C                     	;# 
  1090  021D                     	;# 
  1091  021E                     	;# 
  1092  021F                     	;# 
  1093  028C                     	;# 
  1094  028D                     	;# 
  1095  0291                     	;# 
  1096  0291                     	;# 
  1097  0292                     	;# 
  1098  0293                     	;# 
  1099  0298                     	;# 
  1100  0298                     	;# 
  1101  0299                     	;# 
  1102  029A                     	;# 
  1103  029D                     	;# 
  1104  029E                     	;# 
  1105  029F                     	;# 
  1106  030C                     	;# 
  1107  030D                     	;# 
  1108  0311                     	;# 
  1109  0311                     	;# 
  1110  0312                     	;# 
  1111  0313                     	;# 
  1112  0318                     	;# 
  1113  0318                     	;# 
  1114  0319                     	;# 
  1115  031A                     	;# 
  1116  031C                     	;# 
  1117  031C                     	;# 
  1118  031D                     	;# 
  1119  031E                     	;# 
  1120  038C                     	;# 
  1121  038D                     	;# 
  1122  0394                     	;# 
  1123  0395                     	;# 
  1124  0396                     	;# 
  1125  040C                     	;# 
  1126  040D                     	;# 
  1127  0411                     	;# 
  1128  0411                     	;# 
  1129  0412                     	;# 
  1130  0413                     	;# 
  1131  0414                     	;# 
  1132  0415                     	;# 
  1133  0416                     	;# 
  1134  0417                     	;# 
  1135  0418                     	;# 
  1136  0418                     	;# 
  1137  0419                     	;# 
  1138  041A                     	;# 
  1139  041B                     	;# 
  1140  041C                     	;# 
  1141  041D                     	;# 
  1142  041E                     	;# 
  1143  048D                     	;# 
  1144  0491                     	;# 
  1145  0491                     	;# 
  1146  0492                     	;# 
  1147  0492                     	;# 
  1148  0493                     	;# 
  1149  0493                     	;# 
  1150  0493                     	;# 
  1151  0494                     	;# 
  1152  0494                     	;# 
  1153  0495                     	;# 
  1154  0495                     	;# 
  1155  0496                     	;# 
  1156  0496                     	;# 
  1157  0497                     	;# 
  1158  0497                     	;# 
  1159  0595                     	;# 
  1160  0596                     	;# 
  1161  0597                     	;# 
  1162  059C                     	;# 
  1163  059D                     	;# 
  1164  059E                     	;# 
  1165  0611                     	;# 
  1166  0611                     	;# 
  1167  0612                     	;# 
  1168  0613                     	;# 
  1169  0614                     	;# 
  1170  0614                     	;# 
  1171  0615                     	;# 
  1172  0616                     	;# 
  1173  0617                     	;# 
  1174  0617                     	;# 
  1175  0618                     	;# 
  1176  0619                     	;# 
  1177  061A                     	;# 
  1178  061A                     	;# 
  1179  061B                     	;# 
  1180  061C                     	;# 
  1181  061D                     	;# 
  1182  061D                     	;# 
  1183  061E                     	;# 
  1184  061F                     	;# 
  1185  0FE4                     	;# 
  1186  0FE5                     	;# 
  1187  0FE6                     	;# 
  1188  0FE7                     	;# 
  1189  0FE8                     	;# 
  1190  0FE9                     	;# 
  1191  0FEA                     	;# 
  1192  0FEB                     	;# 
  1193  0FED                     	;# 
  1194  0FEE                     	;# 
  1195  0FEF                     	;# 
  1196  0000                     	;# 
  1197  0001                     	;# 
  1198  0002                     	;# 
  1199  0003                     	;# 
  1200  0004                     	;# 
  1201  0005                     	;# 
  1202  0006                     	;# 
  1203  0007                     	;# 
  1204  0008                     	;# 
  1205  0009                     	;# 
  1206  000A                     	;# 
  1207  000B                     	;# 
  1208  000C                     	;# 
  1209  000D                     	;# 
  1210  000E                     	;# 
  1211  000F                     	;# 
  1212  0010                     	;# 
  1213  0011                     	;# 
  1214  0012                     	;# 
  1215  0013                     	;# 
  1216  0014                     	;# 
  1217  0015                     	;# 
  1218  0016                     	;# 
  1219  0016                     	;# 
  1220  0017                     	;# 
  1221  0018                     	;# 
  1222  0019                     	;# 
  1223  001A                     	;# 
  1224  001B                     	;# 
  1225  001C                     	;# 
  1226  008C                     	;# 
  1227  008D                     	;# 
  1228  008E                     	;# 
  1229  008F                     	;# 
  1230  0090                     	;# 
  1231  0091                     	;# 
  1232  0092                     	;# 
  1233  0093                     	;# 
  1234  0094                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0097                     	;# 
  1238  0099                     	;# 
  1239  009A                     	;# 
  1240  009B                     	;# 
  1241  009B                     	;# 
  1242  009C                     	;# 
  1243  009D                     	;# 
  1244  009E                     	;# 
  1245  010C                     	;# 
  1246  010D                     	;# 
  1247  010E                     	;# 
  1248  010F                     	;# 
  1249  0110                     	;# 
  1250  0116                     	;# 
  1251  0117                     	;# 
  1252  011D                     	;# 
  1253  018C                     	;# 
  1254  018D                     	;# 
  1255  018F                     	;# 
  1256  0190                     	;# 
  1257  0191                     	;# 
  1258  0191                     	;# 
  1259  0192                     	;# 
  1260  0193                     	;# 
  1261  0193                     	;# 
  1262  0194                     	;# 
  1263  0195                     	;# 
  1264  0196                     	;# 
  1265  0197                     	;# 
  1266  0199                     	;# 
  1267  0199                     	;# 
  1268  0199                     	;# 
  1269  019A                     	;# 
  1270  019A                     	;# 
  1271  019A                     	;# 
  1272  019B                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019C                     	;# 
  1278  019C                     	;# 
  1279  019C                     	;# 
  1280  019D                     	;# 
  1281  019D                     	;# 
  1282  019D                     	;# 
  1283  019E                     	;# 
  1284  019E                     	;# 
  1285  019E                     	;# 
  1286  019F                     	;# 
  1287  019F                     	;# 
  1288  019F                     	;# 
  1289  020D                     	;# 
  1290  020F                     	;# 
  1291  0210                     	;# 
  1292  0211                     	;# 
  1293  0211                     	;# 
  1294  0212                     	;# 
  1295  0212                     	;# 
  1296  0213                     	;# 
  1297  0213                     	;# 
  1298  0214                     	;# 
  1299  0214                     	;# 
  1300  0215                     	;# 
  1301  0215                     	;# 
  1302  0215                     	;# 
  1303  0216                     	;# 
  1304  0216                     	;# 
  1305  0217                     	;# 
  1306  0217                     	;# 
  1307  0219                     	;# 
  1308  021A                     	;# 
  1309  021B                     	;# 
  1310  021C                     	;# 
  1311  021D                     	;# 
  1312  021E                     	;# 
  1313  021F                     	;# 
  1314  028C                     	;# 
  1315  028D                     	;# 
  1316  0291                     	;# 
  1317  0291                     	;# 
  1318  0292                     	;# 
  1319  0293                     	;# 
  1320  0298                     	;# 
  1321  0298                     	;# 
  1322  0299                     	;# 
  1323  029A                     	;# 
  1324  029D                     	;# 
  1325  029E                     	;# 
  1326  029F                     	;# 
  1327  030C                     	;# 
  1328  030D                     	;# 
  1329  0311                     	;# 
  1330  0311                     	;# 
  1331  0312                     	;# 
  1332  0313                     	;# 
  1333  0318                     	;# 
  1334  0318                     	;# 
  1335  0319                     	;# 
  1336  031A                     	;# 
  1337  031C                     	;# 
  1338  031C                     	;# 
  1339  031D                     	;# 
  1340  031E                     	;# 
  1341  038C                     	;# 
  1342  038D                     	;# 
  1343  0394                     	;# 
  1344  0395                     	;# 
  1345  0396                     	;# 
  1346  040C                     	;# 
  1347  040D                     	;# 
  1348  0411                     	;# 
  1349  0411                     	;# 
  1350  0412                     	;# 
  1351  0413                     	;# 
  1352  0414                     	;# 
  1353  0415                     	;# 
  1354  0416                     	;# 
  1355  0417                     	;# 
  1356  0418                     	;# 
  1357  0418                     	;# 
  1358  0419                     	;# 
  1359  041A                     	;# 
  1360  041B                     	;# 
  1361  041C                     	;# 
  1362  041D                     	;# 
  1363  041E                     	;# 
  1364  048D                     	;# 
  1365  0491                     	;# 
  1366  0491                     	;# 
  1367  0492                     	;# 
  1368  0492                     	;# 
  1369  0493                     	;# 
  1370  0493                     	;# 
  1371  0493                     	;# 
  1372  0494                     	;# 
  1373  0494                     	;# 
  1374  0495                     	;# 
  1375  0495                     	;# 
  1376  0496                     	;# 
  1377  0496                     	;# 
  1378  0497                     	;# 
  1379  0497                     	;# 
  1380  0595                     	;# 
  1381  0596                     	;# 
  1382  0597                     	;# 
  1383  059C                     	;# 
  1384  059D                     	;# 
  1385  059E                     	;# 
  1386  0611                     	;# 
  1387  0611                     	;# 
  1388  0612                     	;# 
  1389  0613                     	;# 
  1390  0614                     	;# 
  1391  0614                     	;# 
  1392  0615                     	;# 
  1393  0616                     	;# 
  1394  0617                     	;# 
  1395  0617                     	;# 
  1396  0618                     	;# 
  1397  0619                     	;# 
  1398  061A                     	;# 
  1399  061A                     	;# 
  1400  061B                     	;# 
  1401  061C                     	;# 
  1402  061D                     	;# 
  1403  061D                     	;# 
  1404  061E                     	;# 
  1405  061F                     	;# 
  1406  0FE4                     	;# 
  1407  0FE5                     	;# 
  1408  0FE6                     	;# 
  1409  0FE7                     	;# 
  1410  0FE8                     	;# 
  1411  0FE9                     	;# 
  1412  0FEA                     	;# 
  1413  0FEB                     	;# 
  1414  0FED                     	;# 
  1415  0FEE                     	;# 
  1416  0FEF                     	;# 
  1417  0000                     	;# 
  1418  0001                     	;# 
  1419  0002                     	;# 
  1420  0003                     	;# 
  1421  0004                     	;# 
  1422  0005                     	;# 
  1423  0006                     	;# 
  1424  0007                     	;# 
  1425  0008                     	;# 
  1426  0009                     	;# 
  1427  000A                     	;# 
  1428  000B                     	;# 
  1429  000C                     	;# 
  1430  000D                     	;# 
  1431  000E                     	;# 
  1432  000F                     	;# 
  1433  0010                     	;# 
  1434  0011                     	;# 
  1435  0012                     	;# 
  1436  0013                     	;# 
  1437  0014                     	;# 
  1438  0015                     	;# 
  1439  0016                     	;# 
  1440  0016                     	;# 
  1441  0017                     	;# 
  1442  0018                     	;# 
  1443  0019                     	;# 
  1444  001A                     	;# 
  1445  001B                     	;# 
  1446  001C                     	;# 
  1447  008C                     	;# 
  1448  008D                     	;# 
  1449  008E                     	;# 
  1450  008F                     	;# 
  1451  0090                     	;# 
  1452  0091                     	;# 
  1453  0092                     	;# 
  1454  0093                     	;# 
  1455  0094                     	;# 
  1456  0095                     	;# 
  1457  0096                     	;# 
  1458  0097                     	;# 
  1459  0099                     	;# 
  1460  009A                     	;# 
  1461  009B                     	;# 
  1462  009B                     	;# 
  1463  009C                     	;# 
  1464  009D                     	;# 
  1465  009E                     	;# 
  1466  010C                     	;# 
  1467  010D                     	;# 
  1468  010E                     	;# 
  1469  010F                     	;# 
  1470  0110                     	;# 
  1471  0116                     	;# 
  1472  0117                     	;# 
  1473  011D                     	;# 
  1474  018C                     	;# 
  1475  018D                     	;# 
  1476  018F                     	;# 
  1477  0190                     	;# 
  1478  0191                     	;# 
  1479  0191                     	;# 
  1480  0192                     	;# 
  1481  0193                     	;# 
  1482  0193                     	;# 
  1483  0194                     	;# 
  1484  0195                     	;# 
  1485  0196                     	;# 
  1486  0197                     	;# 
  1487  0199                     	;# 
  1488  0199                     	;# 
  1489  0199                     	;# 
  1490  019A                     	;# 
  1491  019A                     	;# 
  1492  019A                     	;# 
  1493  019B                     	;# 
  1494  019B                     	;# 
  1495  019B                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019C                     	;# 
  1499  019C                     	;# 
  1500  019C                     	;# 
  1501  019D                     	;# 
  1502  019D                     	;# 
  1503  019D                     	;# 
  1504  019E                     	;# 
  1505  019E                     	;# 
  1506  019E                     	;# 
  1507  019F                     	;# 
  1508  019F                     	;# 
  1509  019F                     	;# 
  1510  020D                     	;# 
  1511  020F                     	;# 
  1512  0210                     	;# 
  1513  0211                     	;# 
  1514  0211                     	;# 
  1515  0212                     	;# 
  1516  0212                     	;# 
  1517  0213                     	;# 
  1518  0213                     	;# 
  1519  0214                     	;# 
  1520  0214                     	;# 
  1521  0215                     	;# 
  1522  0215                     	;# 
  1523  0215                     	;# 
  1524  0216                     	;# 
  1525  0216                     	;# 
  1526  0217                     	;# 
  1527  0217                     	;# 
  1528  0219                     	;# 
  1529  021A                     	;# 
  1530  021B                     	;# 
  1531  021C                     	;# 
  1532  021D                     	;# 
  1533  021E                     	;# 
  1534  021F                     	;# 
  1535  028C                     	;# 
  1536  028D                     	;# 
  1537  0291                     	;# 
  1538  0291                     	;# 
  1539  0292                     	;# 
  1540  0293                     	;# 
  1541  0298                     	;# 
  1542  0298                     	;# 
  1543  0299                     	;# 
  1544  029A                     	;# 
  1545  029D                     	;# 
  1546  029E                     	;# 
  1547  029F                     	;# 
  1548  030C                     	;# 
  1549  030D                     	;# 
  1550  0311                     	;# 
  1551  0311                     	;# 
  1552  0312                     	;# 
  1553  0313                     	;# 
  1554  0318                     	;# 
  1555  0318                     	;# 
  1556  0319                     	;# 
  1557  031A                     	;# 
  1558  031C                     	;# 
  1559  031C                     	;# 
  1560  031D                     	;# 
  1561  031E                     	;# 
  1562  038C                     	;# 
  1563  038D                     	;# 
  1564  0394                     	;# 
  1565  0395                     	;# 
  1566  0396                     	;# 
  1567  040C                     	;# 
  1568  040D                     	;# 
  1569  0411                     	;# 
  1570  0411                     	;# 
  1571  0412                     	;# 
  1572  0413                     	;# 
  1573  0414                     	;# 
  1574  0415                     	;# 
  1575  0416                     	;# 
  1576  0417                     	;# 
  1577  0418                     	;# 
  1578  0418                     	;# 
  1579  0419                     	;# 
  1580  041A                     	;# 
  1581  041B                     	;# 
  1582  041C                     	;# 
  1583  041D                     	;# 
  1584  041E                     	;# 
  1585  048D                     	;# 
  1586  0491                     	;# 
  1587  0491                     	;# 
  1588  0492                     	;# 
  1589  0492                     	;# 
  1590  0493                     	;# 
  1591  0493                     	;# 
  1592  0493                     	;# 
  1593  0494                     	;# 
  1594  0494                     	;# 
  1595  0495                     	;# 
  1596  0495                     	;# 
  1597  0496                     	;# 
  1598  0496                     	;# 
  1599  0497                     	;# 
  1600  0497                     	;# 
  1601  0595                     	;# 
  1602  0596                     	;# 
  1603  0597                     	;# 
  1604  059C                     	;# 
  1605  059D                     	;# 
  1606  059E                     	;# 
  1607  0611                     	;# 
  1608  0611                     	;# 
  1609  0612                     	;# 
  1610  0613                     	;# 
  1611  0614                     	;# 
  1612  0614                     	;# 
  1613  0615                     	;# 
  1614  0616                     	;# 
  1615  0617                     	;# 
  1616  0617                     	;# 
  1617  0618                     	;# 
  1618  0619                     	;# 
  1619  061A                     	;# 
  1620  061A                     	;# 
  1621  061B                     	;# 
  1622  061C                     	;# 
  1623  061D                     	;# 
  1624  061D                     	;# 
  1625  061E                     	;# 
  1626  061F                     	;# 
  1627  0FE4                     	;# 
  1628  0FE5                     	;# 
  1629  0FE6                     	;# 
  1630  0FE7                     	;# 
  1631  0FE8                     	;# 
  1632  0FE9                     	;# 
  1633  0FEA                     	;# 
  1634  0FEB                     	;# 
  1635  0FED                     	;# 
  1636  0FEE                     	;# 
  1637  0FEF                     	;# 
  1638  0000                     	;# 
  1639  0001                     	;# 
  1640  0002                     	;# 
  1641  0003                     	;# 
  1642  0004                     	;# 
  1643  0005                     	;# 
  1644  0006                     	;# 
  1645  0007                     	;# 
  1646  0008                     	;# 
  1647  0009                     	;# 
  1648  000A                     	;# 
  1649  000B                     	;# 
  1650  000C                     	;# 
  1651  000D                     	;# 
  1652  000E                     	;# 
  1653  000F                     	;# 
  1654  0010                     	;# 
  1655  0011                     	;# 
  1656  0012                     	;# 
  1657  0013                     	;# 
  1658  0014                     	;# 
  1659  0015                     	;# 
  1660  0016                     	;# 
  1661  0016                     	;# 
  1662  0017                     	;# 
  1663  0018                     	;# 
  1664  0019                     	;# 
  1665  001A                     	;# 
  1666  001B                     	;# 
  1667  001C                     	;# 
  1668  008C                     	;# 
  1669  008D                     	;# 
  1670  008E                     	;# 
  1671  008F                     	;# 
  1672  0090                     	;# 
  1673  0091                     	;# 
  1674  0092                     	;# 
  1675  0093                     	;# 
  1676  0094                     	;# 
  1677  0095                     	;# 
  1678  0096                     	;# 
  1679  0097                     	;# 
  1680  0099                     	;# 
  1681  009A                     	;# 
  1682  009B                     	;# 
  1683  009B                     	;# 
  1684  009C                     	;# 
  1685  009D                     	;# 
  1686  009E                     	;# 
  1687  010C                     	;# 
  1688  010D                     	;# 
  1689  010E                     	;# 
  1690  010F                     	;# 
  1691  0110                     	;# 
  1692  0116                     	;# 
  1693  0117                     	;# 
  1694  011D                     	;# 
  1695  018C                     	;# 
  1696  018D                     	;# 
  1697  018F                     	;# 
  1698  0190                     	;# 
  1699  0191                     	;# 
  1700  0191                     	;# 
  1701  0192                     	;# 
  1702  0193                     	;# 
  1703  0193                     	;# 
  1704  0194                     	;# 
  1705  0195                     	;# 
  1706  0196                     	;# 
  1707  0197                     	;# 
  1708  0199                     	;# 
  1709  0199                     	;# 
  1710  0199                     	;# 
  1711  019A                     	;# 
  1712  019A                     	;# 
  1713  019A                     	;# 
  1714  019B                     	;# 
  1715  019B                     	;# 
  1716  019B                     	;# 
  1717  019B                     	;# 
  1718  019B                     	;# 
  1719  019C                     	;# 
  1720  019C                     	;# 
  1721  019C                     	;# 
  1722  019D                     	;# 
  1723  019D                     	;# 
  1724  019D                     	;# 
  1725  019E                     	;# 
  1726  019E                     	;# 
  1727  019E                     	;# 
  1728  019F                     	;# 
  1729  019F                     	;# 
  1730  019F                     	;# 
  1731  020D                     	;# 
  1732  020F                     	;# 
  1733  0210                     	;# 
  1734  0211                     	;# 
  1735  0211                     	;# 
  1736  0212                     	;# 
  1737  0212                     	;# 
  1738  0213                     	;# 
  1739  0213                     	;# 
  1740  0214                     	;# 
  1741  0214                     	;# 
  1742  0215                     	;# 
  1743  0215                     	;# 
  1744  0215                     	;# 
  1745  0216                     	;# 
  1746  0216                     	;# 
  1747  0217                     	;# 
  1748  0217                     	;# 
  1749  0219                     	;# 
  1750  021A                     	;# 
  1751  021B                     	;# 
  1752  021C                     	;# 
  1753  021D                     	;# 
  1754  021E                     	;# 
  1755  021F                     	;# 
  1756  028C                     	;# 
  1757  028D                     	;# 
  1758  0291                     	;# 
  1759  0291                     	;# 
  1760  0292                     	;# 
  1761  0293                     	;# 
  1762  0298                     	;# 
  1763  0298                     	;# 
  1764  0299                     	;# 
  1765  029A                     	;# 
  1766  029D                     	;# 
  1767  029E                     	;# 
  1768  029F                     	;# 
  1769  030C                     	;# 
  1770  030D                     	;# 
  1771  0311                     	;# 
  1772  0311                     	;# 
  1773  0312                     	;# 
  1774  0313                     	;# 
  1775  0318                     	;# 
  1776  0318                     	;# 
  1777  0319                     	;# 
  1778  031A                     	;# 
  1779  031C                     	;# 
  1780  031C                     	;# 
  1781  031D                     	;# 
  1782  031E                     	;# 
  1783  038C                     	;# 
  1784  038D                     	;# 
  1785  0394                     	;# 
  1786  0395                     	;# 
  1787  0396                     	;# 
  1788  040C                     	;# 
  1789  040D                     	;# 
  1790  0411                     	;# 
  1791  0411                     	;# 
  1792  0412                     	;# 
  1793  0413                     	;# 
  1794  0414                     	;# 
  1795  0415                     	;# 
  1796  0416                     	;# 
  1797  0417                     	;# 
  1798  0418                     	;# 
  1799  0418                     	;# 
  1800  0419                     	;# 
  1801  041A                     	;# 
  1802  041B                     	;# 
  1803  041C                     	;# 
  1804  041D                     	;# 
  1805  041E                     	;# 
  1806  048D                     	;# 
  1807  0491                     	;# 
  1808  0491                     	;# 
  1809  0492                     	;# 
  1810  0492                     	;# 
  1811  0493                     	;# 
  1812  0493                     	;# 
  1813  0493                     	;# 
  1814  0494                     	;# 
  1815  0494                     	;# 
  1816  0495                     	;# 
  1817  0495                     	;# 
  1818  0496                     	;# 
  1819  0496                     	;# 
  1820  0497                     	;# 
  1821  0497                     	;# 
  1822  0595                     	;# 
  1823  0596                     	;# 
  1824  0597                     	;# 
  1825  059C                     	;# 
  1826  059D                     	;# 
  1827  059E                     	;# 
  1828  0611                     	;# 
  1829  0611                     	;# 
  1830  0612                     	;# 
  1831  0613                     	;# 
  1832  0614                     	;# 
  1833  0614                     	;# 
  1834  0615                     	;# 
  1835  0616                     	;# 
  1836  0617                     	;# 
  1837  0617                     	;# 
  1838  0618                     	;# 
  1839  0619                     	;# 
  1840  061A                     	;# 
  1841  061A                     	;# 
  1842  061B                     	;# 
  1843  061C                     	;# 
  1844  061D                     	;# 
  1845  061D                     	;# 
  1846  061E                     	;# 
  1847  061F                     	;# 
  1848  0FE4                     	;# 
  1849  0FE5                     	;# 
  1850  0FE6                     	;# 
  1851  0FE7                     	;# 
  1852  0FE8                     	;# 
  1853  0FE9                     	;# 
  1854  0FEA                     	;# 
  1855  0FEB                     	;# 
  1856  0FED                     	;# 
  1857  0FEE                     	;# 
  1858  0FEF                     	;# 
  1859  0000                     	;# 
  1860  0001                     	;# 
  1861  0002                     	;# 
  1862  0003                     	;# 
  1863  0004                     	;# 
  1864  0005                     	;# 
  1865  0006                     	;# 
  1866  0007                     	;# 
  1867  0008                     	;# 
  1868  0009                     	;# 
  1869  000A                     	;# 
  1870  000B                     	;# 
  1871  000C                     	;# 
  1872  000D                     	;# 
  1873  000E                     	;# 
  1874  000F                     	;# 
  1875  0010                     	;# 
  1876  0011                     	;# 
  1877  0012                     	;# 
  1878  0013                     	;# 
  1879  0014                     	;# 
  1880  0015                     	;# 
  1881  0016                     	;# 
  1882  0016                     	;# 
  1883  0017                     	;# 
  1884  0018                     	;# 
  1885  0019                     	;# 
  1886  001A                     	;# 
  1887  001B                     	;# 
  1888  001C                     	;# 
  1889  008C                     	;# 
  1890  008D                     	;# 
  1891  008E                     	;# 
  1892  008F                     	;# 
  1893  0090                     	;# 
  1894  0091                     	;# 
  1895  0092                     	;# 
  1896  0093                     	;# 
  1897  0094                     	;# 
  1898  0095                     	;# 
  1899  0096                     	;# 
  1900  0097                     	;# 
  1901  0099                     	;# 
  1902  009A                     	;# 
  1903  009B                     	;# 
  1904  009B                     	;# 
  1905  009C                     	;# 
  1906  009D                     	;# 
  1907  009E                     	;# 
  1908  010C                     	;# 
  1909  010D                     	;# 
  1910  010E                     	;# 
  1911  010F                     	;# 
  1912  0110                     	;# 
  1913  0116                     	;# 
  1914  0117                     	;# 
  1915  011D                     	;# 
  1916  018C                     	;# 
  1917  018D                     	;# 
  1918  018F                     	;# 
  1919  0190                     	;# 
  1920  0191                     	;# 
  1921  0191                     	;# 
  1922  0192                     	;# 
  1923  0193                     	;# 
  1924  0193                     	;# 
  1925  0194                     	;# 
  1926  0195                     	;# 
  1927  0196                     	;# 
  1928  0197                     	;# 
  1929  0199                     	;# 
  1930  0199                     	;# 
  1931  0199                     	;# 
  1932  019A                     	;# 
  1933  019A                     	;# 
  1934  019A                     	;# 
  1935  019B                     	;# 
  1936  019B                     	;# 
  1937  019B                     	;# 
  1938  019B                     	;# 
  1939  019B                     	;# 
  1940  019C                     	;# 
  1941  019C                     	;# 
  1942  019C                     	;# 
  1943  019D                     	;# 
  1944  019D                     	;# 
  1945  019D                     	;# 
  1946  019E                     	;# 
  1947  019E                     	;# 
  1948  019E                     	;# 
  1949  019F                     	;# 
  1950  019F                     	;# 
  1951  019F                     	;# 
  1952  020D                     	;# 
  1953  020F                     	;# 
  1954  0210                     	;# 
  1955  0211                     	;# 
  1956  0211                     	;# 
  1957  0212                     	;# 
  1958  0212                     	;# 
  1959  0213                     	;# 
  1960  0213                     	;# 
  1961  0214                     	;# 
  1962  0214                     	;# 
  1963  0215                     	;# 
  1964  0215                     	;# 
  1965  0215                     	;# 
  1966  0216                     	;# 
  1967  0216                     	;# 
  1968  0217                     	;# 
  1969  0217                     	;# 
  1970  0219                     	;# 
  1971  021A                     	;# 
  1972  021B                     	;# 
  1973  021C                     	;# 
  1974  021D                     	;# 
  1975  021E                     	;# 
  1976  021F                     	;# 
  1977  028C                     	;# 
  1978  028D                     	;# 
  1979  0291                     	;# 
  1980  0291                     	;# 
  1981  0292                     	;# 
  1982  0293                     	;# 
  1983  0298                     	;# 
  1984  0298                     	;# 
  1985  0299                     	;# 
  1986  029A                     	;# 
  1987  029D                     	;# 
  1988  029E                     	;# 
  1989  029F                     	;# 
  1990  030C                     	;# 
  1991  030D                     	;# 
  1992  0311                     	;# 
  1993  0311                     	;# 
  1994  0312                     	;# 
  1995  0313                     	;# 
  1996  0318                     	;# 
  1997  0318                     	;# 
  1998  0319                     	;# 
  1999  031A                     	;# 
  2000  031C                     	;# 
  2001  031C                     	;# 
  2002  031D                     	;# 
  2003  031E                     	;# 
  2004  038C                     	;# 
  2005  038D                     	;# 
  2006  0394                     	;# 
  2007  0395                     	;# 
  2008  0396                     	;# 
  2009  040C                     	;# 
  2010  040D                     	;# 
  2011  0411                     	;# 
  2012  0411                     	;# 
  2013  0412                     	;# 
  2014  0413                     	;# 
  2015  0414                     	;# 
  2016  0415                     	;# 
  2017  0416                     	;# 
  2018  0417                     	;# 
  2019  0418                     	;# 
  2020  0418                     	;# 
  2021  0419                     	;# 
  2022  041A                     	;# 
  2023  041B                     	;# 
  2024  041C                     	;# 
  2025  041D                     	;# 
  2026  041E                     	;# 
  2027  048D                     	;# 
  2028  0491                     	;# 
  2029  0491                     	;# 
  2030  0492                     	;# 
  2031  0492                     	;# 
  2032  0493                     	;# 
  2033  0493                     	;# 
  2034  0493                     	;# 
  2035  0494                     	;# 
  2036  0494                     	;# 
  2037  0495                     	;# 
  2038  0495                     	;# 
  2039  0496                     	;# 
  2040  0496                     	;# 
  2041  0497                     	;# 
  2042  0497                     	;# 
  2043  0595                     	;# 
  2044  0596                     	;# 
  2045  0597                     	;# 
  2046  059C                     	;# 
  2047  059D                     	;# 
  2048  059E                     	;# 
  2049  0611                     	;# 
  2050  0611                     	;# 
  2051  0612                     	;# 
  2052  0613                     	;# 
  2053  0614                     	;# 
  2054  0614                     	;# 
  2055  0615                     	;# 
  2056  0616                     	;# 
  2057  0617                     	;# 
  2058  0617                     	;# 
  2059  0618                     	;# 
  2060  0619                     	;# 
  2061  061A                     	;# 
  2062  061A                     	;# 
  2063  061B                     	;# 
  2064  061C                     	;# 
  2065  061D                     	;# 
  2066  061D                     	;# 
  2067  061E                     	;# 
  2068  061F                     	;# 
  2069  0FE4                     	;# 
  2070  0FE5                     	;# 
  2071  0FE6                     	;# 
  2072  0FE7                     	;# 
  2073  0FE8                     	;# 
  2074  0FE9                     	;# 
  2075  0FEA                     	;# 
  2076  0FEB                     	;# 
  2077  0FED                     	;# 
  2078  0FEE                     	;# 
  2079  0FEF                     	;_mod5
  2080                           
  2081                           	psect	idataCOMMON
  2082  0003                     __pidataCOMMON:	
  2083                           
  2084                           ;initializer for _top_push_state
  2085  0003  3406               	retlw	6
  2086                           
  2087                           	psect	idataBANK0
  2088  0002                     __pidataBANK0:	
  2089                           
  2090                           ;initializer for _blink_rate
  2091  0002  3414               	retlw	20
  2092                           
  2093                           	psect	idataBANK1
  2094  1FD8                     __pidataBANK1:	
  2095                           
  2096                           ;initializer for _baseline_delay_time
  2097  1FD8  34D0               	retlw	208
  2098  1FD9  3407               	retlw	7
  2099  1FDA  3400               	retlw	0
  2100  1FDB  3400               	retlw	0
  2101                           
  2102                           ;initializer for _delay_time
  2103  1FDC  34D0               	retlw	208
  2104  1FDD  3407               	retlw	7
  2105  1FDE  3400               	retlw	0
  2106  1FDF  3400               	retlw	0
  2107                           
  2108                           ;initializer for _knob1_prev
  2109  1FE0  34D0               	retlw	208
  2110  1FE1  3407               	retlw	7
  2111                           
  2112                           ;initializer for _knob2_prev
  2113  1FE2  34D0               	retlw	208
  2114  1FE3  3407               	retlw	7
  2115                           
  2116                           ;initializer for _num_taps
  2117  1FE4  3404               	retlw	4
  2118  1FE5  3400               	retlw	0
  2119                           
  2120                           ;initializer for _tap_iteration
  2121  1FE6  3401               	retlw	1
  2122  1FE7  3400               	retlw	0
  2123                           
  2124                           ;initializer for _bottom_push_state
  2125  1FE8  3406               	retlw	6
  2126                           
  2127                           ;initializer for _suspend_blink
  2128  1FE9  3401               	retlw	1
  2129                           
  2130                           	psect	idataBANK2
  2131  1FB7                     __pidataBANK2:	
  2132                           
  2133                           ;initializer for _blink_delay
  2134  1FB7  3464               	retlw	100
  2135  1FB8  3400               	retlw	0
  2136                           
  2137                           ;initializer for _delay_time_changed
  2138  1FB9  3401               	retlw	1
  2139  1FBA  3400               	retlw	0
  2140                           
  2141                           ;initializer for _incoming_data
  2142  1FBB  3401               	retlw	1
  2143  1FBC  3400               	retlw	0
  2144                           
  2145                           ;initializer for _knob3_prev
  2146  1FBD  34D0               	retlw	208
  2147  1FBE  3407               	retlw	7
  2148                           
  2149                           ;initializer for _knob4_prev
  2150  1FBF  34D0               	retlw	208
  2151  1FC0  3407               	retlw	7
  2152                           
  2153                           ;initializer for _knob5_prev
  2154  1FC1  34D0               	retlw	208
  2155  1FC2  3407               	retlw	7
  2156                           
  2157                           ;initializer for _mod_delay_time
  2158  1FC3  34D0               	retlw	208
  2159  1FC4  3407               	retlw	7
  2160                           
  2161                           ;initializer for _blink_state
  2162  1FC5  3401               	retlw	1
  2163                           
  2164                           	psect	idataBANK5
  2165  125F                     __pidataBANK5:	
  2166                           
  2167                           ;initializer for _mod2
  2168  125F  3400               	retlw	0
  2169  1260  3400               	retlw	0
  2170  1261  340D               	retlw	13
  2171  1262  3400               	retlw	0
  2172  1263  341B               	retlw	27
  2173  1264  3400               	retlw	0
  2174  1265  3428               	retlw	40
  2175  1266  3400               	retlw	0
  2176  1267  3435               	retlw	53
  2177  1268  3400               	retlw	0
  2178  1269  3443               	retlw	67
  2179  126A  3400               	retlw	0
  2180  126B  3450               	retlw	80
  2181  126C  3400               	retlw	0
  2182  126D  345D               	retlw	93
  2183  126E  3400               	retlw	0
  2184  126F  345D               	retlw	93
  2185  1270  3400               	retlw	0
  2186  1271  3450               	retlw	80
  2187  1272  3400               	retlw	0
  2188  1273  3443               	retlw	67
  2189  1274  3400               	retlw	0
  2190  1275  3435               	retlw	53
  2191  1276  3400               	retlw	0
  2192  1277  3428               	retlw	40
  2193  1278  3400               	retlw	0
  2194  1279  341B               	retlw	27
  2195  127A  3400               	retlw	0
  2196  127B  340D               	retlw	13
  2197  127C  3400               	retlw	0
  2198  127D  3400               	retlw	0
  2199  127E  3400               	retlw	0
  2200  127F  34F3               	retlw	243
  2201  1280  34FF               	retlw	255
  2202  1281  34E5               	retlw	229
  2203  1282  34FF               	retlw	255
  2204  1283  34D8               	retlw	216
  2205  1284  34FF               	retlw	255
  2206  1285  34CB               	retlw	203
  2207  1286  34FF               	retlw	255
  2208  1287  34BD               	retlw	189
  2209  1288  34FF               	retlw	255
  2210  1289  34B0               	retlw	176
  2211  128A  34FF               	retlw	255
  2212  128B  34A3               	retlw	163
  2213  128C  34FF               	retlw	255
  2214  128D  34A3               	retlw	163
  2215  128E  34FF               	retlw	255
  2216  128F  34B0               	retlw	176
  2217  1290  34FF               	retlw	255
  2218  1291  34BD               	retlw	189
  2219  1292  34FF               	retlw	255
  2220  1293  34CB               	retlw	203
  2221  1294  34FF               	retlw	255
  2222  1295  34D8               	retlw	216
  2223  1296  34FF               	retlw	255
  2224  1297  34E5               	retlw	229
  2225  1298  34FF               	retlw	255
  2226                           
  2227                           	psect	idataBANK6
  2228  1225                     __pidataBANK6:	
  2229                           
  2230                           ;initializer for _mod3
  2231  1225  3400               	retlw	0
  2232  1226  3400               	retlw	0
  2233  1227  3407               	retlw	7
  2234  1228  3400               	retlw	0
  2235  1229  340D               	retlw	13
  2236  122A  3400               	retlw	0
  2237  122B  3414               	retlw	20
  2238  122C  3400               	retlw	0
  2239  122D  341B               	retlw	27
  2240  122E  3400               	retlw	0
  2241  122F  3421               	retlw	33
  2242  1230  3400               	retlw	0
  2243  1231  3428               	retlw	40
  2244  1232  3400               	retlw	0
  2245  1233  342F               	retlw	47
  2246  1234  3400               	retlw	0
  2247  1235  3435               	retlw	53
  2248  1236  3400               	retlw	0
  2249  1237  343C               	retlw	60
  2250  1238  3400               	retlw	0
  2251  1239  3443               	retlw	67
  2252  123A  3400               	retlw	0
  2253  123B  3449               	retlw	73
  2254  123C  3400               	retlw	0
  2255  123D  3450               	retlw	80
  2256  123E  3400               	retlw	0
  2257  123F  3457               	retlw	87
  2258  1240  3400               	retlw	0
  2259  1241  345D               	retlw	93
  2260  1242  3400               	retlw	0
  2261  1243  349C               	retlw	156
  2262  1244  34FF               	retlw	255
  2263  1245  34A3               	retlw	163
  2264  1246  34FF               	retlw	255
  2265  1247  34A9               	retlw	169
  2266  1248  34FF               	retlw	255
  2267  1249  34B0               	retlw	176
  2268  124A  34FF               	retlw	255
  2269  124B  34B7               	retlw	183
  2270  124C  34FF               	retlw	255
  2271  124D  34BD               	retlw	189
  2272  124E  34FF               	retlw	255
  2273  124F  34C4               	retlw	196
  2274  1250  34FF               	retlw	255
  2275  1251  34CB               	retlw	203
  2276  1252  34FF               	retlw	255
  2277  1253  34D1               	retlw	209
  2278  1254  34FF               	retlw	255
  2279  1255  34D8               	retlw	216
  2280  1256  34FF               	retlw	255
  2281  1257  34DF               	retlw	223
  2282  1258  34FF               	retlw	255
  2283  1259  34E5               	retlw	229
  2284  125A  34FF               	retlw	255
  2285  125B  34EC               	retlw	236
  2286  125C  34FF               	retlw	255
  2287  125D  34F3               	retlw	243
  2288  125E  34FF               	retlw	255
  2289                           
  2290                           	psect	idataBANK7
  2291  11EB                     __pidataBANK7:	
  2292                           
  2293                           ;initializer for _mod4
  2294  11EB  3464               	retlw	100
  2295  11EC  3400               	retlw	0
  2296  11ED  3464               	retlw	100
  2297  11EE  3400               	retlw	0
  2298  11EF  3464               	retlw	100
  2299  11F0  3400               	retlw	0
  2300  11F1  3464               	retlw	100
  2301  11F2  3400               	retlw	0
  2302  11F3  3464               	retlw	100
  2303  11F4  3400               	retlw	0
  2304  11F5  3464               	retlw	100
  2305  11F6  3400               	retlw	0
  2306  11F7  3464               	retlw	100
  2307  11F8  3400               	retlw	0
  2308  11F9  3464               	retlw	100
  2309  11FA  3400               	retlw	0
  2310  11FB  3464               	retlw	100
  2311  11FC  3400               	retlw	0
  2312  11FD  3464               	retlw	100
  2313  11FE  3400               	retlw	0
  2314  11FF  3464               	retlw	100
  2315  1200  3400               	retlw	0
  2316  1201  3464               	retlw	100
  2317  1202  3400               	retlw	0
  2318  1203  3464               	retlw	100
  2319  1204  3400               	retlw	0
  2320  1205  3464               	retlw	100
  2321  1206  3400               	retlw	0
  2322  1207  3464               	retlw	100
  2323  1208  3400               	retlw	0
  2324  1209  349C               	retlw	156
  2325  120A  34FF               	retlw	255
  2326  120B  349C               	retlw	156
  2327  120C  34FF               	retlw	255
  2328  120D  349C               	retlw	156
  2329  120E  34FF               	retlw	255
  2330  120F  349C               	retlw	156
  2331  1210  34FF               	retlw	255
  2332  1211  349C               	retlw	156
  2333  1212  34FF               	retlw	255
  2334  1213  349C               	retlw	156
  2335  1214  34FF               	retlw	255
  2336  1215  349C               	retlw	156
  2337  1216  34FF               	retlw	255
  2338  1217  349C               	retlw	156
  2339  1218  34FF               	retlw	255
  2340  1219  349C               	retlw	156
  2341  121A  34FF               	retlw	255
  2342  121B  349C               	retlw	156
  2343  121C  34FF               	retlw	255
  2344  121D  349C               	retlw	156
  2345  121E  34FF               	retlw	255
  2346  121F  349C               	retlw	156
  2347  1220  34FF               	retlw	255
  2348  1221  349C               	retlw	156
  2349  1222  34FF               	retlw	255
  2350  1223  349C               	retlw	156
  2351  1224  34FF               	retlw	255
  2352                           
  2353                           	psect	idataBANK8
  2354  157D                     __pidataBANK8:	
  2355                           
  2356                           ;initializer for _B25k
  2357  157D  34FF               	retlw	255
  2358  157E  3400               	retlw	0
  2359  157F  34FF               	retlw	255
  2360  1580  3400               	retlw	0
  2361  1581  34FF               	retlw	255
  2362  1582  3400               	retlw	0
  2363  1583  34DF               	retlw	223
  2364  1584  3400               	retlw	0
  2365  1585  34AE               	retlw	174
  2366  1586  3400               	retlw	0
  2367  1587  348E               	retlw	142
  2368  1588  3400               	retlw	0
  2369  1589  3478               	retlw	120
  2370  158A  3400               	retlw	0
  2371  158B  3467               	retlw	103
  2372  158C  3400               	retlw	0
  2373  158D  345B               	retlw	91
  2374  158E  3400               	retlw	0
  2375  158F  3450               	retlw	80
  2376  1590  3400               	retlw	0
  2377  1591  3448               	retlw	72
  2378  1592  3400               	retlw	0
  2379  1593  3442               	retlw	66
  2380  1594  3400               	retlw	0
  2381  1595  343C               	retlw	60
  2382  1596  3400               	retlw	0
  2383  1597  3437               	retlw	55
  2384  1598  3400               	retlw	0
  2385  1599  3433               	retlw	51
  2386  159A  3400               	retlw	0
  2387  159B  3430               	retlw	48
  2388  159C  3400               	retlw	0
  2389  159D  342D               	retlw	45
  2390  159E  3400               	retlw	0
  2391  159F  342A               	retlw	42
  2392  15A0  3400               	retlw	0
  2393  15A1  3427               	retlw	39
  2394  15A2  3400               	retlw	0
  2395  15A3  3425               	retlw	37
  2396  15A4  3400               	retlw	0
  2397  15A5  3423               	retlw	35
  2398  15A6  3400               	retlw	0
  2399  15A7  3421               	retlw	33
  2400  15A8  3400               	retlw	0
  2401  15A9  3420               	retlw	32
  2402  15AA  3400               	retlw	0
  2403  15AB  341E               	retlw	30
  2404  15AC  3400               	retlw	0
  2405  15AD  341D               	retlw	29
  2406  15AE  3400               	retlw	0
  2407  15AF  341C               	retlw	28
  2408  15B0  3400               	retlw	0
  2409  15B1  341B               	retlw	27
  2410  15B2  3400               	retlw	0
  2411  15B3  341A               	retlw	26
  2412  15B4  3400               	retlw	0
  2413  15B5  3419               	retlw	25
  2414  15B6  3400               	retlw	0
  2415  15B7  3418               	retlw	24
  2416  15B8  3400               	retlw	0
  2417  15B9  3417               	retlw	23
  2418  15BA  3400               	retlw	0
  2419  15BB  3416               	retlw	22
  2420  15BC  3400               	retlw	0
  2421  15BD  3415               	retlw	21
  2422  15BE  3400               	retlw	0
  2423  15BF  3415               	retlw	21
  2424  15C0  3400               	retlw	0
  2425  15C1  3414               	retlw	20
  2426  15C2  3400               	retlw	0
  2427  15C3  3413               	retlw	19
  2428  15C4  3400               	retlw	0
  2429  15C5  340F               	retlw	15
  2430  15C6  3400               	retlw	0
  2431  15C7  340B               	retlw	11
  2432  15C8  3400               	retlw	0
  2433  15C9  3407               	retlw	7
  2434  15CA  3400               	retlw	0
  2435  15CB  3407               	retlw	7
  2436  15CC  3400               	retlw	0
  2437                           
  2438                           	psect	idataBANK9
  2439  152D                     __pidataBANK9:	
  2440                           
  2441                           ;initializer for _iB25k
  2442  152D  3407               	retlw	7
  2443  152E  3400               	retlw	0
  2444  152F  3407               	retlw	7
  2445  1530  3400               	retlw	0
  2446  1531  340B               	retlw	11
  2447  1532  3400               	retlw	0
  2448  1533  340F               	retlw	15
  2449  1534  3400               	retlw	0
  2450  1535  3413               	retlw	19
  2451  1536  3400               	retlw	0
  2452  1537  3414               	retlw	20
  2453  1538  3400               	retlw	0
  2454  1539  3415               	retlw	21
  2455  153A  3400               	retlw	0
  2456  153B  3415               	retlw	21
  2457  153C  3400               	retlw	0
  2458  153D  3416               	retlw	22
  2459  153E  3400               	retlw	0
  2460  153F  3417               	retlw	23
  2461  1540  3400               	retlw	0
  2462  1541  3418               	retlw	24
  2463  1542  3400               	retlw	0
  2464  1543  3419               	retlw	25
  2465  1544  3400               	retlw	0
  2466  1545  341A               	retlw	26
  2467  1546  3400               	retlw	0
  2468  1547  341B               	retlw	27
  2469  1548  3400               	retlw	0
  2470  1549  341C               	retlw	28
  2471  154A  3400               	retlw	0
  2472  154B  341D               	retlw	29
  2473  154C  3400               	retlw	0
  2474  154D  341E               	retlw	30
  2475  154E  3400               	retlw	0
  2476  154F  3420               	retlw	32
  2477  1550  3400               	retlw	0
  2478  1551  3421               	retlw	33
  2479  1552  3400               	retlw	0
  2480  1553  3423               	retlw	35
  2481  1554  3400               	retlw	0
  2482  1555  3425               	retlw	37
  2483  1556  3400               	retlw	0
  2484  1557  3427               	retlw	39
  2485  1558  3400               	retlw	0
  2486  1559  342A               	retlw	42
  2487  155A  3400               	retlw	0
  2488  155B  342D               	retlw	45
  2489  155C  3400               	retlw	0
  2490  155D  3430               	retlw	48
  2491  155E  3400               	retlw	0
  2492  155F  3433               	retlw	51
  2493  1560  3400               	retlw	0
  2494  1561  3437               	retlw	55
  2495  1562  3400               	retlw	0
  2496  1563  343C               	retlw	60
  2497  1564  3400               	retlw	0
  2498  1565  3442               	retlw	66
  2499  1566  3400               	retlw	0
  2500  1567  3448               	retlw	72
  2501  1568  3400               	retlw	0
  2502  1569  3450               	retlw	80
  2503  156A  3400               	retlw	0
  2504  156B  345B               	retlw	91
  2505  156C  3400               	retlw	0
  2506  156D  3467               	retlw	103
  2507  156E  3400               	retlw	0
  2508  156F  3478               	retlw	120
  2509  1570  3400               	retlw	0
  2510  1571  348E               	retlw	142
  2511  1572  3400               	retlw	0
  2512  1573  34AE               	retlw	174
  2513  1574  3400               	retlw	0
  2514  1575  34DF               	retlw	223
  2515  1576  3400               	retlw	0
  2516  1577  34FF               	retlw	255
  2517  1578  3400               	retlw	0
  2518  1579  34FF               	retlw	255
  2519  157A  3400               	retlw	0
  2520  157B  34FF               	retlw	255
  2521  157C  3400               	retlw	0
  2522                           
  2523                           	psect	idataBANK10
  2524  11B1                     __pidataBANK10:	
  2525                           
  2526                           ;initializer for _mod1
  2527  11B1  3400               	retlw	0
  2528  11B2  3400               	retlw	0
  2529  11B3  3415               	retlw	21
  2530  11B4  3400               	retlw	0
  2531  11B5  3428               	retlw	40
  2532  11B6  3400               	retlw	0
  2533  11B7  343B               	retlw	59
  2534  11B8  3400               	retlw	0
  2535  11B9  344A               	retlw	74
  2536  11BA  3400               	retlw	0
  2537  11BB  3456               	retlw	86
  2538  11BC  3400               	retlw	0
  2539  11BD  345F               	retlw	95
  2540  11BE  3400               	retlw	0
  2541  11BF  3463               	retlw	99
  2542  11C0  3400               	retlw	0
  2543  11C1  3464               	retlw	100
  2544  11C2  3400               	retlw	0
  2545  11C3  345F               	retlw	95
  2546  11C4  3400               	retlw	0
  2547  11C5  3457               	retlw	87
  2548  11C6  3400               	retlw	0
  2549  11C7  344B               	retlw	75
  2550  11C8  3400               	retlw	0
  2551  11C9  343C               	retlw	60
  2552  11CA  3400               	retlw	0
  2553  11CB  342A               	retlw	42
  2554  11CC  3400               	retlw	0
  2555  11CD  3416               	retlw	22
  2556  11CE  3400               	retlw	0
  2557  11CF  3402               	retlw	2
  2558  11D0  3400               	retlw	0
  2559  11D1  34ED               	retlw	237
  2560  11D2  34FF               	retlw	255
  2561  11D3  34D9               	retlw	217
  2562  11D4  34FF               	retlw	255
  2563  11D5  34C7               	retlw	199
  2564  11D6  34FF               	retlw	255
  2565  11D7  34B7               	retlw	183
  2566  11D8  34FF               	retlw	255
  2567  11D9  34AB               	retlw	171
  2568  11DA  34FF               	retlw	255
  2569  11DB  34A2               	retlw	162
  2570  11DC  34FF               	retlw	255
  2571  11DD  349D               	retlw	157
  2572  11DE  34FF               	retlw	255
  2573  11DF  349C               	retlw	156
  2574  11E0  34FF               	retlw	255
  2575  11E1  34A8               	retlw	168
  2576  11E2  34FF               	retlw	255
  2577  11E3  34B4               	retlw	180
  2578  11E4  34FF               	retlw	255
  2579  11E5  34C3               	retlw	195
  2580  11E6  34FF               	retlw	255
  2581  11E7  34D5               	retlw	213
  2582  11E8  34FF               	retlw	255
  2583  11E9  34E8               	retlw	232
  2584  11EA  34FF               	retlw	255
  2585                           
  2586                           	psect	idataBIGRAM
  2587  01E4                     __pidataBIGRAM:	
  2588                           
  2589                           ;initializer for _delay
  2590  01E4  3422               	retlw	34
  2591  01E5  3408               	retlw	8
  2592  01E6  34FC               	retlw	252
  2593  01E7  3407               	retlw	7
  2594  01E8  34D8               	retlw	216
  2595  01E9  3407               	retlw	7
  2596  01EA  34B5               	retlw	181
  2597  01EB  3407               	retlw	7
  2598  01EC  3493               	retlw	147
  2599  01ED  3407               	retlw	7
  2600  01EE  3472               	retlw	114
  2601  01EF  3407               	retlw	7
  2602  01F0  3452               	retlw	82
  2603  01F1  3407               	retlw	7
  2604  01F2  3434               	retlw	52
  2605  01F3  3407               	retlw	7
  2606  01F4  3416               	retlw	22
  2607  01F5  3407               	retlw	7
  2608  01F6  34F9               	retlw	249
  2609  01F7  3406               	retlw	6
  2610  01F8  34DD               	retlw	221
  2611  01F9  3406               	retlw	6
  2612  01FA  34C2               	retlw	194
  2613  01FB  3406               	retlw	6
  2614  01FC  34A8               	retlw	168
  2615  01FD  3406               	retlw	6
  2616  01FE  348F               	retlw	143
  2617  01FF  3406               	retlw	6
  2618  0200  3476               	retlw	118
  2619  0201  3406               	retlw	6
  2620  0202  345E               	retlw	94
  2621  0203  3406               	retlw	6
  2622  0204  3447               	retlw	71
  2623  0205  3406               	retlw	6
  2624  0206  3430               	retlw	48
  2625  0207  3406               	retlw	6
  2626  0208  341A               	retlw	26
  2627  0209  3406               	retlw	6
  2628  020A  3405               	retlw	5
  2629  020B  3406               	retlw	6
  2630  020C  34F0               	retlw	240
  2631  020D  3405               	retlw	5
  2632  020E  34DC               	retlw	220
  2633  020F  3405               	retlw	5
  2634  0210  34C8               	retlw	200
  2635  0211  3405               	retlw	5
  2636  0212  34B5               	retlw	181
  2637  0213  3405               	retlw	5
  2638  0214  34A3               	retlw	163
  2639  0215  3405               	retlw	5
  2640  0216  3490               	retlw	144
  2641  0217  3405               	retlw	5
  2642  0218  347F               	retlw	127
  2643  0219  3405               	retlw	5
  2644  021A  346D               	retlw	109
  2645  021B  3405               	retlw	5
  2646  021C  345C               	retlw	92
  2647  021D  3405               	retlw	5
  2648  021E  344C               	retlw	76
  2649  021F  3405               	retlw	5
  2650  0220  343C               	retlw	60
  2651  0221  3405               	retlw	5
  2652  0222  342C               	retlw	44
  2653  0223  3405               	retlw	5
  2654  0224  341D               	retlw	29
  2655  0225  3405               	retlw	5
  2656  0226  340E               	retlw	14
  2657  0227  3405               	retlw	5
  2658  0228  34FF               	retlw	255
  2659  0229  3404               	retlw	4
  2660  022A  34F1               	retlw	241
  2661  022B  3404               	retlw	4
  2662  022C  34E2               	retlw	226
  2663  022D  3404               	retlw	4
  2664  022E  34D5               	retlw	213
  2665  022F  3404               	retlw	4
  2666  0230  34C7               	retlw	199
  2667  0231  3404               	retlw	4
  2668  0232  34BA               	retlw	186
  2669  0233  3404               	retlw	4
  2670  0234  34AD               	retlw	173
  2671  0235  3404               	retlw	4
  2672  0236  34A1               	retlw	161
  2673  0237  3404               	retlw	4
  2674  0238  3494               	retlw	148
  2675  0239  3404               	retlw	4
  2676  023A  3488               	retlw	136
  2677  023B  3404               	retlw	4
  2678  023C  347D               	retlw	125
  2679  023D  3404               	retlw	4
  2680  023E  3471               	retlw	113
  2681  023F  3404               	retlw	4
  2682  0240  3466               	retlw	102
  2683  0241  3404               	retlw	4
  2684  0242  345A               	retlw	90
  2685  0243  3404               	retlw	4
  2686  0244  3450               	retlw	80
  2687  0245  3404               	retlw	4
  2688  0246  3445               	retlw	69
  2689  0247  3404               	retlw	4
  2690  0248  343A               	retlw	58
  2691  0249  3404               	retlw	4
  2692  024A  3430               	retlw	48
  2693  024B  3404               	retlw	4
  2694  024C  3426               	retlw	38
  2695  024D  3404               	retlw	4
  2696  024E  341C               	retlw	28
  2697  024F  3404               	retlw	4
  2698  0250  3412               	retlw	18
  2699  0251  3404               	retlw	4
  2700  0252  3409               	retlw	9
  2701  0253  3404               	retlw	4
  2702  0254  34FF               	retlw	255
  2703  0255  3403               	retlw	3
  2704  0256  34F6               	retlw	246
  2705  0257  3403               	retlw	3
  2706  0258  34ED               	retlw	237
  2707  0259  3403               	retlw	3
  2708  025A  34E4               	retlw	228
  2709  025B  3403               	retlw	3
  2710  025C  34DC               	retlw	220
  2711  025D  3403               	retlw	3
  2712  025E  34D3               	retlw	211
  2713  025F  3403               	retlw	3
  2714  0260  34CB               	retlw	203
  2715  0261  3403               	retlw	3
  2716  0262  34C2               	retlw	194
  2717  0263  3403               	retlw	3
  2718  0264  34BA               	retlw	186
  2719  0265  3403               	retlw	3
  2720  0266  34B2               	retlw	178
  2721  0267  3403               	retlw	3
  2722  0268  34AA               	retlw	170
  2723  0269  3403               	retlw	3
  2724  026A  34A2               	retlw	162
  2725  026B  3403               	retlw	3
  2726  026C  349B               	retlw	155
  2727  026D  3403               	retlw	3
  2728  026E  3493               	retlw	147
  2729  026F  3403               	retlw	3
  2730  0270  348C               	retlw	140
  2731  0271  3403               	retlw	3
  2732  0272  3485               	retlw	133
  2733  0273  3403               	retlw	3
  2734  0274  347E               	retlw	126
  2735  0275  3403               	retlw	3
  2736  0276  3477               	retlw	119
  2737  0277  3403               	retlw	3
  2738  0278  3470               	retlw	112
  2739  0279  3403               	retlw	3
  2740  027A  3469               	retlw	105
  2741  027B  3403               	retlw	3
  2742  027C  3462               	retlw	98
  2743  027D  3403               	retlw	3
  2744  027E  345C               	retlw	92
  2745  027F  3403               	retlw	3
  2746  0280  3455               	retlw	85
  2747  0281  3403               	retlw	3
  2748  0282  344F               	retlw	79
  2749  0283  3403               	retlw	3
  2750  0284  3448               	retlw	72
  2751  0285  3403               	retlw	3
  2752  0286  3442               	retlw	66
  2753  0287  3403               	retlw	3
  2754  0288  343C               	retlw	60
  2755  0289  3403               	retlw	3
  2756  028A  3436               	retlw	54
  2757  028B  3403               	retlw	3
  2758  028C  3430               	retlw	48
  2759  028D  3403               	retlw	3
  2760  028E  342A               	retlw	42
  2761  028F  3403               	retlw	3
  2762  0290  3424               	retlw	36
  2763  0291  3403               	retlw	3
  2764  0292  341F               	retlw	31
  2765  0293  3403               	retlw	3
  2766  0294  3419               	retlw	25
  2767  0295  3403               	retlw	3
  2768  0296  3413               	retlw	19
  2769  0297  3403               	retlw	3
  2770  0298  340E               	retlw	14
  2771  0299  3403               	retlw	3
  2772  029A  3409               	retlw	9
  2773  029B  3403               	retlw	3
  2774  029C  3403               	retlw	3
  2775  029D  3403               	retlw	3
  2776  029E  34FE               	retlw	254
  2777  029F  3402               	retlw	2
  2778  02A0  34F9               	retlw	249
  2779  02A1  3402               	retlw	2
  2780  02A2  34F4               	retlw	244
  2781  02A3  3402               	retlw	2
  2782  02A4  34EF               	retlw	239
  2783  02A5  3402               	retlw	2
  2784  02A6  34EA               	retlw	234
  2785  02A7  3402               	retlw	2
  2786  02A8  34E5               	retlw	229
  2787  02A9  3402               	retlw	2
  2788  02AA  34E0               	retlw	224
  2789  02AB  3402               	retlw	2
  2790  02AC  34DB               	retlw	219
  2791  02AD  3402               	retlw	2
  2792  02AE  34D7               	retlw	215
  2793  02AF  3402               	retlw	2
  2794  02B0  34D2               	retlw	210
  2795  02B1  3402               	retlw	2
  2796  02B2  34CD               	retlw	205
  2797  02B3  3402               	retlw	2
  2798  02B4  34C9               	retlw	201
  2799  02B5  3402               	retlw	2
  2800  02B6  34C4               	retlw	196
  2801  02B7  3402               	retlw	2
  2802  02B8  34C0               	retlw	192
  2803  02B9  3402               	retlw	2
  2804  02BA  34BC               	retlw	188
  2805  02BB  3402               	retlw	2
  2806  02BC  34B7               	retlw	183
  2807  02BD  3402               	retlw	2
  2808  02BE  34B3               	retlw	179
  2809  02BF  3402               	retlw	2
  2810  02C0  34AF               	retlw	175
  2811  02C1  3402               	retlw	2
  2812  02C2  34AB               	retlw	171
  2813  02C3  3402               	retlw	2
  2814  02C4  34A6               	retlw	166
  2815  02C5  3402               	retlw	2
  2816  02C6  34A2               	retlw	162
  2817  02C7  3402               	retlw	2
  2818  02C8  349E               	retlw	158
  2819  02C9  3402               	retlw	2
  2820  02CA  349A               	retlw	154
  2821  02CB  3402               	retlw	2
  2822  02CC  3497               	retlw	151
  2823  02CD  3402               	retlw	2
  2824  02CE  3493               	retlw	147
  2825  02CF  3402               	retlw	2
  2826  02D0  348F               	retlw	143
  2827  02D1  3402               	retlw	2
  2828  02D2  348B               	retlw	139
  2829  02D3  3402               	retlw	2
  2830  02D4  3487               	retlw	135
  2831  02D5  3402               	retlw	2
  2832  02D6  3484               	retlw	132
  2833  02D7  3402               	retlw	2
  2834  02D8  3480               	retlw	128
  2835  02D9  3402               	retlw	2
  2836  02DA  347C               	retlw	124
  2837  02DB  3402               	retlw	2
  2838  02DC  3479               	retlw	121
  2839  02DD  3402               	retlw	2
  2840  02DE  3475               	retlw	117
  2841  02DF  3402               	retlw	2
  2842  02E0  3472               	retlw	114
  2843  02E1  3402               	retlw	2
  2844  02E2  346E               	retlw	110
  2845  02E3  3402               	retlw	2
  2846  02E4  346B               	retlw	107
  2847  02E5  3402               	retlw	2
  2848  02E6  3467               	retlw	103
  2849  02E7  3402               	retlw	2
  2850  02E8  3464               	retlw	100
  2851  02E9  3402               	retlw	2
  2852  02EA  3461               	retlw	97
  2853  02EB  3402               	retlw	2
  2854  02EC  345E               	retlw	94
  2855  02ED  3402               	retlw	2
  2856  02EE  345A               	retlw	90
  2857  02EF  3402               	retlw	2
  2858  02F0  3457               	retlw	87
  2859  02F1  3402               	retlw	2
  2860  02F2  3454               	retlw	84
  2861  02F3  3402               	retlw	2
  2862  02F4  3451               	retlw	81
  2863  02F5  3402               	retlw	2
  2864  02F6  344E               	retlw	78
  2865  02F7  3402               	retlw	2
  2866  02F8  344B               	retlw	75
  2867  02F9  3402               	retlw	2
  2868  02FA  3448               	retlw	72
  2869  02FB  3402               	retlw	2
  2870  02FC  3445               	retlw	69
  2871  02FD  3402               	retlw	2
  2872  02FE  3442               	retlw	66
  2873  02FF  3402               	retlw	2
  2874  0300  343F               	retlw	63
  2875  0301  3402               	retlw	2
  2876  0302  343C               	retlw	60
  2877  0303  3402               	retlw	2
  2878  0304  3439               	retlw	57
  2879  0305  3402               	retlw	2
  2880  0306  3436               	retlw	54
  2881  0307  3402               	retlw	2
  2882  0308  3433               	retlw	51
  2883  0309  3402               	retlw	2
  2884  030A  3430               	retlw	48
  2885  030B  3402               	retlw	2
  2886  030C  342E               	retlw	46
  2887  030D  3402               	retlw	2
  2888  030E  342B               	retlw	43
  2889  030F  3402               	retlw	2
  2890  0310  3428               	retlw	40
  2891  0311  3402               	retlw	2
  2892  0312  3425               	retlw	37
  2893  0313  3402               	retlw	2
  2894  0314  3423               	retlw	35
  2895  0315  3402               	retlw	2
  2896  0316  3420               	retlw	32
  2897  0317  3402               	retlw	2
  2898  0318  341E               	retlw	30
  2899  0319  3402               	retlw	2
  2900  031A  341B               	retlw	27
  2901  031B  3402               	retlw	2
  2902  031C  3418               	retlw	24
  2903  031D  3402               	retlw	2
  2904  031E  3416               	retlw	22
  2905  031F  3402               	retlw	2
  2906  0320  3413               	retlw	19
  2907  0321  3402               	retlw	2
  2908  0322  3411               	retlw	17
  2909  0323  3402               	retlw	2
  2910  0324  340E               	retlw	14
  2911  0325  3402               	retlw	2
  2912  0326  340C               	retlw	12
  2913  0327  3402               	retlw	2
  2914  0328  340A               	retlw	10
  2915  0329  3402               	retlw	2
  2916  032A  3407               	retlw	7
  2917  032B  3402               	retlw	2
  2918  032C  3405               	retlw	5
  2919  032D  3402               	retlw	2
  2920  032E  3402               	retlw	2
  2921  032F  3402               	retlw	2
  2922  0330  3400               	retlw	0
  2923  0331  3402               	retlw	2
  2924  0332  34FE               	retlw	254
  2925  0333  3401               	retlw	1
  2926  0334  34FB               	retlw	251
  2927  0335  3401               	retlw	1
  2928  0336  34F9               	retlw	249
  2929  0337  3401               	retlw	1
  2930  0338  34F7               	retlw	247
  2931  0339  3401               	retlw	1
  2932  033A  34F5               	retlw	245
  2933  033B  3401               	retlw	1
  2934  033C  34F2               	retlw	242
  2935  033D  3401               	retlw	1
  2936  033E  34F0               	retlw	240
  2937  033F  3401               	retlw	1
  2938  0340  34EE               	retlw	238
  2939  0341  3401               	retlw	1
  2940  0342  34EC               	retlw	236
  2941  0343  3401               	retlw	1
  2942  0344  34EA               	retlw	234
  2943  0345  3401               	retlw	1
  2944  0346  34E8               	retlw	232
  2945  0347  3401               	retlw	1
  2946  0348  34E6               	retlw	230
  2947  0349  3401               	retlw	1
  2948  034A  34E3               	retlw	227
  2949  034B  3401               	retlw	1
  2950  034C  34E1               	retlw	225
  2951  034D  3401               	retlw	1
  2952  034E  34DF               	retlw	223
  2953  034F  3401               	retlw	1
  2954  0350  34DD               	retlw	221
  2955  0351  3401               	retlw	1
  2956  0352  34DB               	retlw	219
  2957  0353  3401               	retlw	1
  2958  0354  34D9               	retlw	217
  2959  0355  3401               	retlw	1
  2960  0356  34D7               	retlw	215
  2961  0357  3401               	retlw	1
  2962  0358  34D5               	retlw	213
  2963  0359  3401               	retlw	1
  2964  035A  34D3               	retlw	211
  2965  035B  3401               	retlw	1
  2966  035C  34D2               	retlw	210
  2967  035D  3401               	retlw	1
  2968  035E  34D0               	retlw	208
  2969  035F  3401               	retlw	1
  2970  0360  34CE               	retlw	206
  2971  0361  3401               	retlw	1
  2972  0362  34CC               	retlw	204
  2973  0363  3401               	retlw	1
  2974  0364  34CA               	retlw	202
  2975  0365  3401               	retlw	1
  2976  0366  34C8               	retlw	200
  2977  0367  3401               	retlw	1
  2978  0368  34C6               	retlw	198
  2979  0369  3401               	retlw	1
  2980  036A  34C4               	retlw	196
  2981  036B  3401               	retlw	1
  2982  036C  34C3               	retlw	195
  2983  036D  3401               	retlw	1
  2984  036E  34C1               	retlw	193
  2985  036F  3401               	retlw	1
  2986  0370  34BF               	retlw	191
  2987  0371  3401               	retlw	1
  2988  0372  34BD               	retlw	189
  2989  0373  3401               	retlw	1
  2990  0374  34BC               	retlw	188
  2991  0375  3401               	retlw	1
  2992  0376  34BA               	retlw	186
  2993  0377  3401               	retlw	1
  2994  0378  34B8               	retlw	184
  2995  0379  3401               	retlw	1
  2996  037A  34B6               	retlw	182
  2997  037B  3401               	retlw	1
  2998  037C  34B5               	retlw	181
  2999  037D  3401               	retlw	1
  3000  037E  34B3               	retlw	179
  3001  037F  3401               	retlw	1
  3002  0380  34B1               	retlw	177
  3003  0381  3401               	retlw	1
  3004  0382  34B0               	retlw	176
  3005  0383  3401               	retlw	1
  3006  0384  34AE               	retlw	174
  3007  0385  3401               	retlw	1
  3008  0386  34AC               	retlw	172
  3009  0387  3401               	retlw	1
  3010  0388  34AB               	retlw	171
  3011  0389  3401               	retlw	1
  3012  038A  34A9               	retlw	169
  3013  038B  3401               	retlw	1
  3014  038C  34A8               	retlw	168
  3015  038D  3401               	retlw	1
  3016  038E  34A6               	retlw	166
  3017  038F  3401               	retlw	1
  3018  0390  34A4               	retlw	164
  3019  0391  3401               	retlw	1
  3020  0392  34A3               	retlw	163
  3021  0393  3401               	retlw	1
  3022  0394  34A1               	retlw	161
  3023  0395  3401               	retlw	1
  3024  0396  34A0               	retlw	160
  3025  0397  3401               	retlw	1
  3026  0398  349E               	retlw	158
  3027  0399  3401               	retlw	1
  3028  039A  349D               	retlw	157
  3029  039B  3401               	retlw	1
  3030  039C  349B               	retlw	155
  3031  039D  3401               	retlw	1
  3032  039E  349A               	retlw	154
  3033  039F  3401               	retlw	1
  3034  03A0  3498               	retlw	152
  3035  03A1  3401               	retlw	1
  3036  03A2  3497               	retlw	151
  3037  03A3  3401               	retlw	1
  3038  03A4  3495               	retlw	149
  3039  03A5  3401               	retlw	1
  3040  03A6  3494               	retlw	148
  3041  03A7  3401               	retlw	1
  3042  03A8  3492               	retlw	146
  3043  03A9  3401               	retlw	1
  3044  03AA  3491               	retlw	145
  3045  03AB  3401               	retlw	1
  3046  03AC  3490               	retlw	144
  3047  03AD  3401               	retlw	1
  3048  03AE  348E               	retlw	142
  3049  03AF  3401               	retlw	1
  3050  03B0  348D               	retlw	141
  3051  03B1  3401               	retlw	1
  3052  03B2  348B               	retlw	139
  3053  03B3  3401               	retlw	1
  3054  03B4  348A               	retlw	138
  3055  03B5  3401               	retlw	1
  3056  03B6  3489               	retlw	137
  3057  03B7  3401               	retlw	1
  3058  03B8  3487               	retlw	135
  3059  03B9  3401               	retlw	1
  3060  03BA  3486               	retlw	134
  3061  03BB  3401               	retlw	1
  3062  03BC  3485               	retlw	133
  3063  03BD  3401               	retlw	1
  3064  03BE  3483               	retlw	131
  3065  03BF  3401               	retlw	1
  3066  03C0  3482               	retlw	130
  3067  03C1  3401               	retlw	1
  3068  03C2  3481               	retlw	129
  3069  03C3  3401               	retlw	1
  3070  03C4  347F               	retlw	127
  3071  03C5  3401               	retlw	1
  3072  03C6  347E               	retlw	126
  3073  03C7  3401               	retlw	1
  3074  03C8  347D               	retlw	125
  3075  03C9  3401               	retlw	1
  3076  03CA  347B               	retlw	123
  3077  03CB  3401               	retlw	1
  3078  03CC  347A               	retlw	122
  3079  03CD  3401               	retlw	1
  3080  03CE  3479               	retlw	121
  3081  03CF  3401               	retlw	1
  3082  03D0  3478               	retlw	120
  3083  03D1  3401               	retlw	1
  3084  03D2  3476               	retlw	118
  3085  03D3  3401               	retlw	1
  3086  03D4  3475               	retlw	117
  3087  03D5  3401               	retlw	1
  3088  03D6  3474               	retlw	116
  3089  03D7  3401               	retlw	1
  3090  03D8  3473               	retlw	115
  3091  03D9  3401               	retlw	1
  3092  03DA  3471               	retlw	113
  3093  03DB  3401               	retlw	1
  3094  03DC  3470               	retlw	112
  3095  03DD  3401               	retlw	1
  3096  03DE  346F               	retlw	111
  3097  03DF  3401               	retlw	1
  3098  03E0  346E               	retlw	110
  3099  03E1  3401               	retlw	1
  3100                           
  3101                           ;initializer for _mod5
  3102  03E2  3400               	retlw	0
  3103  03E3  3400               	retlw	0
  3104  03E4  340A               	retlw	10
  3105  03E5  3400               	retlw	0
  3106  03E6  3414               	retlw	20
  3107  03E7  3400               	retlw	0
  3108  03E8  341E               	retlw	30
  3109  03E9  3400               	retlw	0
  3110  03EA  3428               	retlw	40
  3111  03EB  3400               	retlw	0
  3112  03EC  3432               	retlw	50
  3113  03ED  3400               	retlw	0
  3114  03EE  343A               	retlw	58
  3115  03EF  3400               	retlw	0
  3116  03F0  3442               	retlw	66
  3117  03F1  3400               	retlw	0
  3118  03F2  344A               	retlw	74
  3119  03F3  3400               	retlw	0
  3120  03F4  3450               	retlw	80
  3121  03F5  3400               	retlw	0
  3122  03F6  3456               	retlw	86
  3123  03F7  3400               	retlw	0
  3124  03F8  345B               	retlw	91
  3125  03F9  3400               	retlw	0
  3126  03FA  345F               	retlw	95
  3127  03FB  3400               	retlw	0
  3128  03FC  3461               	retlw	97
  3129  03FD  3400               	retlw	0
  3130  03FE  3463               	retlw	99
  3131  03FF  3400               	retlw	0
  3132  0400  3464               	retlw	100
  3133  0401  3400               	retlw	0
  3134  0402  3463               	retlw	99
  3135  0403  3400               	retlw	0
  3136  0404  3461               	retlw	97
  3137  0405  3400               	retlw	0
  3138  0406  345F               	retlw	95
  3139  0407  3400               	retlw	0
  3140  0408  345B               	retlw	91
  3141  0409  3400               	retlw	0
  3142  040A  3456               	retlw	86
  3143  040B  3400               	retlw	0
  3144  040C  3450               	retlw	80
  3145  040D  3400               	retlw	0
  3146  040E  344A               	retlw	74
  3147  040F  3400               	retlw	0
  3148  0410  3442               	retlw	66
  3149  0411  3400               	retlw	0
  3150  0412  343A               	retlw	58
  3151  0413  3400               	retlw	0
  3152  0414  3432               	retlw	50
  3153  0415  3400               	retlw	0
  3154  0416  3428               	retlw	40
  3155  0417  3400               	retlw	0
  3156  0418  341E               	retlw	30
  3157  0419  3400               	retlw	0
  3158  041A  3414               	retlw	20
  3159  041B  3400               	retlw	0
  3160  041C  340A               	retlw	10
  3161  041D  3400               	retlw	0
  3162  041E  3400               	retlw	0
  3163  041F  3400               	retlw	0
  3164  0420  34F6               	retlw	246
  3165  0421  34FF               	retlw	255
  3166  0422  34EC               	retlw	236
  3167  0423  34FF               	retlw	255
  3168  0424  34E2               	retlw	226
  3169  0425  34FF               	retlw	255
  3170  0426  34D8               	retlw	216
  3171  0427  34FF               	retlw	255
  3172  0428  34CE               	retlw	206
  3173  0429  34FF               	retlw	255
  3174  042A  34C6               	retlw	198
  3175  042B  34FF               	retlw	255
  3176  042C  34BE               	retlw	190
  3177  042D  34FF               	retlw	255
  3178  042E  34B6               	retlw	182
  3179  042F  34FF               	retlw	255
  3180  0430  34B0               	retlw	176
  3181  0431  34FF               	retlw	255
  3182  0432  34AA               	retlw	170
  3183  0433  34FF               	retlw	255
  3184  0434  34A5               	retlw	165
  3185  0435  34FF               	retlw	255
  3186  0436  34A1               	retlw	161
  3187  0437  34FF               	retlw	255
  3188  0438  349F               	retlw	159
  3189  0439  34FF               	retlw	255
  3190  043A  349D               	retlw	157
  3191  043B  34FF               	retlw	255
  3192  043C  349C               	retlw	156
  3193  043D  34FF               	retlw	255
  3194  043E  349D               	retlw	157
  3195  043F  34FF               	retlw	255
  3196  0440  349F               	retlw	159
  3197  0441  34FF               	retlw	255
  3198  0442  34A1               	retlw	161
  3199  0443  34FF               	retlw	255
  3200  0444  34A5               	retlw	165
  3201  0445  34FF               	retlw	255
  3202  0446  34AA               	retlw	170
  3203  0447  34FF               	retlw	255
  3204  0448  34B0               	retlw	176
  3205  0449  34FF               	retlw	255
  3206  044A  34B6               	retlw	182
  3207  044B  34FF               	retlw	255
  3208  044C  34BE               	retlw	190
  3209  044D  34FF               	retlw	255
  3210  044E  34C6               	retlw	198
  3211  044F  34FF               	retlw	255
  3212  0450  34CE               	retlw	206
  3213  0451  34FF               	retlw	255
  3214  0452  34D8               	retlw	216
  3215  0453  34FF               	retlw	255
  3216  0454  34E2               	retlw	226
  3217  0455  34FF               	retlw	255
  3218  0456  34EC               	retlw	236
  3219  0457  34FF               	retlw	255
  3220  0458  34F6               	retlw	246
  3221  0459  34FF               	retlw	255
  3222  045A  3400               	retlw	0
  3223  045B  3400               	retlw	0
  3224  000B                     _INTCONbits	set	11
  3225  000E                     _PORTCbits	set	14
  3226  000F                     _PORTDbits	set	15
  3227  0010                     _PORTEbits	set	16
  3228  001B                     _PR2	set	27
  3229  001C                     _T2CONbits	set	28
  3230  009D                     _ADCON0bits	set	157
  3231  009E                     _ADCON1bits	set	158
  3232  009C                     _ADRESH	set	156
  3233  009B                     _ADRESL	set	155
  3234  0095                     _OPTION_REGbits	set	149
  3235  0099                     _OSCCONbits	set	153
  3236  008D                     _TRISBbits	set	141
  3237  008E                     _TRISCbits	set	142
  3238  008F                     _TRISDbits	set	143
  3239  0090                     _TRISEbits	set	144
  3240  011D                     _APFCONbits	set	285
  3241  010D                     _LATBbits	set	269
  3242  010F                     _LATDbits	set	271
  3243  0190                     _ANSELEbits	set	400
  3244  0192                     _PMADRH	set	402
  3245  0191                     _PMADRL	set	401
  3246  0195                     _PMCON1bits	set	405
  3247  0196                     _PMCON2	set	406
  3248  0194                     _PMDATH	set	404
  3249  0193                     _PMDATL	set	403
  3250  0291                     _CCPR1	set	657
  3251  0298                     _CCPR2	set	664
  3252  0293                     _CCP1CONbits	set	659
  3253  029A                     _CCP2CONbits	set	666
  3254  029D                     _CCPTMRS0	set	669
  3255  029E                     _CCPTMRS1	set	670
  3256  029F                     _CCPTMRS2	set	671
  3257  0311                     _CCPR3	set	785
  3258  0318                     _CCPR4	set	792
  3259  031C                     _CCPR5	set	796
  3260  0313                     _CCP3CONbits	set	787
  3261  031A                     _CCP4CONbits	set	794
  3262  031E                     _CCP5CONbits	set	798
  3263  030C                     _TRISFbits	set	780
  3264  030D                     _TRISGbits	set	781
  3265  038C                     _LATFbits	set	908
  3266  038D                     _LATGbits	set	909
  3267  040C                     _ANSELFbits	set	1036
  3268  061A                     _CCPR9	set	1562
  3269  061F                     _CCP10CONbits	set	1567
  3270  0613                     _CCP6CONbits	set	1555
  3271  0616                     _CCP7CONbits	set	1558
  3272  0619                     _CCP8CONbits	set	1561
  3273  061C                     _CCP9CONbits	set	1564
  3274                           
  3275                           ; #config settings
  3276  0000                     
  3277                           	psect	cinit
  3278  012B                     start_initialization:	
  3279  012B                     __initialization:		;BIGRAM
  3280                           
  3281                           ; Clear objects allocated to COMMON
  3282  012B  01F9               	clrf	__pbssCOMMON& (0+127)
  3283  012C  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  3284  012D  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  3285  012E  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  3286                           
  3287                           ; Clear objects allocated to BANK1
  3288  012F  30C3               	movlw	low __pbssBANK1
  3289  0130  0084               	movwf	4
  3290  0131  3000               	movlw	high __pbssBANK1
  3291  0132  0085               	movwf	5
  3292  0133  301B               	movlw	27
  3293  0134  00FE               	movwf	btemp
  3294  0135  3000               	movlw	0
  3295  0136  00FF               	movwf	btemp+1
  3296  0137  319F  27AB  3181   	fcall	clear_ram0
  3297                           
  3298                           ; Clear objects allocated to BANK2
  3299  013A  3020               	movlw	low __pbssBANK2
  3300  013B  0084               	movwf	4
  3301  013C  3001               	movlw	high __pbssBANK2
  3302  013D  0085               	movwf	5
  3303  013E  303E               	movlw	62
  3304  013F  00FE               	movwf	btemp
  3305  0140  3000               	movlw	0
  3306  0141  00FF               	movwf	btemp+1
  3307  0142  319F  27AB  3181   	fcall	clear_ram0
  3308                           
  3309                           ; Clear objects allocated to BANK3
  3310  0145  30A0               	movlw	low __pbssBANK3
  3311  0146  0084               	movwf	4
  3312  0147  3001               	movlw	high __pbssBANK3
  3313  0148  0085               	movwf	5
  3314  0149  304C               	movlw	76
  3315  014A  00FE               	movwf	btemp
  3316  014B  3000               	movlw	0
  3317  014C  00FF               	movwf	btemp+1
  3318  014D  319F  27AB  3181   	fcall	clear_ram0
  3319                           
  3320                           ; Clear objects allocated to BANK4
  3321  0150  3020               	movlw	low __pbssBANK4
  3322  0151  0084               	movwf	4
  3323  0152  3002               	movlw	high __pbssBANK4
  3324  0153  0085               	movwf	5
  3325  0154  3040               	movlw	64
  3326  0155  00FE               	movwf	btemp
  3327  0156  3000               	movlw	0
  3328  0157  00FF               	movwf	btemp+1
  3329  0158  319F  27AB  3181   	fcall	clear_ram0
  3330                           
  3331                           ; Initialize objects allocated to BIGRAM
  3332  015B  30E4               	movlw	low __pidataBIGRAM
  3333  015C  0084               	movwf	4
  3334  015D  3081               	movlw	(high __pidataBIGRAM)| (0+128)
  3335  015E  0085               	movwf	5
  3336  015F  3078               	movlw	low (0+9080)
  3337  0160  0086               	movwf	6
  3338  0161  3023               	movlw	high (0+9080)
  3339  0162  0087               	movwf	7
  3340  0163  3002               	movlw	2
  3341  0164  00FF               	movwf	btemp+1
  3342  0165  3078               	movlw	120
  3343  0166  319F  279F  3181   	fcall	init_ram
  3344                           
  3345                           ; Initialize objects allocated to COMMON
  3346  0169  3180  2003  3181   	fcall	__pidataCOMMON	;fetch initializer
  3347  016C  00FD               	movwf	__pdataCOMMON& (0+127)
  3348                           
  3349                           ; Initialize objects allocated to BANK0
  3350  016D  3180  2002  3181   	fcall	__pidataBANK0	;fetch initializer
  3351  0170  00EF               	movwf	__pdataBANK0& (0+127)
  3352                           
  3353                           ; Initialize objects allocated to BANK1
  3354  0171  30D8               	movlw	low __pidataBANK1
  3355  0172  0084               	movwf	4
  3356  0173  309F               	movlw	(high __pidataBANK1)| (0+128)
  3357  0174  0085               	movwf	5
  3358  0175  30DE               	movlw	low __pdataBANK1
  3359  0176  0086               	movwf	6
  3360  0177  3000               	movlw	high __pdataBANK1
  3361  0178  0087               	movwf	7
  3362  0179  3000               	movlw	0
  3363  017A  00FF               	movwf	btemp+1
  3364  017B  3012               	movlw	18
  3365  017C  319F  279F  3181   	fcall	init_ram
  3366                           
  3367                           ; Initialize objects allocated to BANK2
  3368  017F  30B7               	movlw	low __pidataBANK2
  3369  0180  0084               	movwf	4
  3370  0181  309F               	movlw	(high __pidataBANK2)| (0+128)
  3371  0182  0085               	movwf	5
  3372  0183  305E               	movlw	low __pdataBANK2
  3373  0184  0086               	movwf	6
  3374  0185  3001               	movlw	high __pdataBANK2
  3375  0186  0087               	movwf	7
  3376  0187  3000               	movlw	0
  3377  0188  00FF               	movwf	btemp+1
  3378  0189  300F               	movlw	15
  3379  018A  319F  279F  3181   	fcall	init_ram
  3380                           
  3381                           ; Initialize objects allocated to BANK5
  3382  018D  305F               	movlw	low __pidataBANK5
  3383  018E  0084               	movwf	4
  3384  018F  3092               	movlw	(high __pidataBANK5)| (0+128)
  3385  0190  0085               	movwf	5
  3386  0191  30A0               	movlw	low __pdataBANK5
  3387  0192  0086               	movwf	6
  3388  0193  3002               	movlw	high __pdataBANK5
  3389  0194  0087               	movwf	7
  3390  0195  3000               	movlw	0
  3391  0196  00FF               	movwf	btemp+1
  3392  0197  303A               	movlw	58
  3393  0198  319F  279F  3181   	fcall	init_ram
  3394                           
  3395                           ; Initialize objects allocated to BANK6
  3396  019B  3025               	movlw	low __pidataBANK6
  3397  019C  0084               	movwf	4
  3398  019D  3092               	movlw	(high __pidataBANK6)| (0+128)
  3399  019E  0085               	movwf	5
  3400  019F  3020               	movlw	low __pdataBANK6
  3401  01A0  0086               	movwf	6
  3402  01A1  3003               	movlw	high __pdataBANK6
  3403  01A2  0087               	movwf	7
  3404  01A3  3000               	movlw	0
  3405  01A4  00FF               	movwf	btemp+1
  3406  01A5  303A               	movlw	58
  3407  01A6  319F  279F  3181   	fcall	init_ram
  3408                           
  3409                           ; Initialize objects allocated to BANK7
  3410  01A9  30EB               	movlw	low __pidataBANK7
  3411  01AA  0084               	movwf	4
  3412  01AB  3091               	movlw	(high __pidataBANK7)| (0+128)
  3413  01AC  0085               	movwf	5
  3414  01AD  30A0               	movlw	low __pdataBANK7
  3415  01AE  0086               	movwf	6
  3416  01AF  3003               	movlw	high __pdataBANK7
  3417  01B0  0087               	movwf	7
  3418  01B1  3000               	movlw	0
  3419  01B2  00FF               	movwf	btemp+1
  3420  01B3  303A               	movlw	58
  3421  01B4  319F  279F  3181   	fcall	init_ram
  3422                           
  3423                           ; Initialize objects allocated to BANK8
  3424  01B7  307D               	movlw	low __pidataBANK8
  3425  01B8  0084               	movwf	4
  3426  01B9  3095               	movlw	(high __pidataBANK8)| (0+128)
  3427  01BA  0085               	movwf	5
  3428  01BB  3020               	movlw	low __pdataBANK8
  3429  01BC  0086               	movwf	6
  3430  01BD  3004               	movlw	high __pdataBANK8
  3431  01BE  0087               	movwf	7
  3432  01BF  3000               	movlw	0
  3433  01C0  00FF               	movwf	btemp+1
  3434  01C1  3050               	movlw	80
  3435  01C2  319F  279F  3181   	fcall	init_ram
  3436                           
  3437                           ; Initialize objects allocated to BANK9
  3438  01C5  302D               	movlw	low __pidataBANK9
  3439  01C6  0084               	movwf	4
  3440  01C7  3095               	movlw	(high __pidataBANK9)| (0+128)
  3441  01C8  0085               	movwf	5
  3442  01C9  30A0               	movlw	low __pdataBANK9
  3443  01CA  0086               	movwf	6
  3444  01CB  3004               	movlw	high __pdataBANK9
  3445  01CC  0087               	movwf	7
  3446  01CD  3000               	movlw	0
  3447  01CE  00FF               	movwf	btemp+1
  3448  01CF  3050               	movlw	80
  3449  01D0  319F  279F  3181   	fcall	init_ram
  3450                           
  3451                           ; Initialize objects allocated to BANK10
  3452  01D3  30B1               	movlw	low __pidataBANK10
  3453  01D4  0084               	movwf	4
  3454  01D5  3091               	movlw	(high __pidataBANK10)| (0+128)
  3455  01D6  0085               	movwf	5
  3456  01D7  3020               	movlw	low __pdataBANK10
  3457  01D8  0086               	movwf	6
  3458  01D9  3005               	movlw	high __pdataBANK10
  3459  01DA  0087               	movwf	7
  3460  01DB  3000               	movlw	0
  3461  01DC  00FF               	movwf	btemp+1
  3462  01DD  303A               	movlw	58
  3463  01DE  319F  279F         	fcall	init_ram
  3464  01E0                     end_of_initialization:	
  3465                           ;End of C runtime variable initialization code
  3466                           
  3467  01E0                     __end_of__initialization:	
  3468  01E0  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3469  01E1  0020               	movlb	0
  3470  01E2  3189  290D         	ljmp	_main	;jump to C main() function
  3471                           
  3472                           	psect	bssCOMMON
  3473  0079                     __pbssCOMMON:	
  3474  0079                     _tap_timer:	
  3475  0079                     	ds	4
  3476                           
  3477                           	psect	dataCOMMON
  3478  007D                     __pdataCOMMON:	
  3479  007D                     _top_push_state:	
  3480  007D                     	ds	1
  3481                           
  3482                           	psect	dataBANK0
  3483  006F                     __pdataBANK0:	
  3484  006F                     _blink_rate:	
  3485  006F                     	ds	1
  3486                           
  3487                           	psect	bssBANK1
  3488  00C3                     __pbssBANK1:	
  3489  00C3                     _sub_timer:	
  3490  00C3                     	ds	4
  3491  00C7                     _timer:	
  3492  00C7                     	ds	4
  3493  00CB                     _iCnt:	
  3494  00CB                     	ds	2
  3495  00CD                     _knob_1_pos:	
  3496  00CD                     	ds	2
  3497  00CF                     _knob_2_pos:	
  3498  00CF                     	ds	2
  3499  00D1                     _knob_3_pos:	
  3500  00D1                     	ds	2
  3501  00D3                     _knob_4_pos:	
  3502  00D3                     	ds	2
  3503  00D5                     _knob_5_pos:	
  3504  00D5                     	ds	2
  3505  00D7                     _mod_counter:	
  3506  00D7                     	ds	2
  3507  00D9                     _bypass_state:	
  3508  00D9                     	ds	1
  3509  00DA                     _mode1_state:	
  3510  00DA                     	ds	1
  3511  00DB                     _mode2_state:	
  3512  00DB                     	ds	1
  3513  00DC                     _preset_blink:	
  3514  00DC                     	ds	1
  3515  00DD                     _preset_programmning_on:	
  3516  00DD                     	ds	1
  3517                           
  3518                           	psect	dataBANK1
  3519  00DE                     __pdataBANK1:	
  3520  00DE                     _baseline_delay_time:	
  3521  00DE                     	ds	4
  3522  00E2                     _delay_time:	
  3523  00E2                     	ds	4
  3524  00E6                     _knob1_prev:	
  3525  00E6                     	ds	2
  3526  00E8                     _knob2_prev:	
  3527  00E8                     	ds	2
  3528  00EA                     _num_taps:	
  3529  00EA                     	ds	2
  3530  00EC                     _tap_iteration:	
  3531  00EC                     	ds	2
  3532  00EE                     _bottom_push_state:	
  3533  00EE                     	ds	1
  3534  00EF                     _suspend_blink:	
  3535  00EF                     	ds	1
  3536                           
  3537                           	psect	bssBANK2
  3538  0120                     __pbssBANK2:	
  3539  0120                     _tap_history:	
  3540  0120                     	ds	20
  3541  0134                     _ledState:	
  3542  0134                     	ds	4
  3543  0138                     _mod_timer:	
  3544  0138                     	ds	4
  3545  013C                     _tap1:	
  3546  013C                     	ds	4
  3547  0140                     _tap2:	
  3548  0140                     	ds	4
  3549  0144                     _tap_total:	
  3550  0144                     	ds	4
  3551  0148                     wait_ms@timel:	
  3552  0148                     	ds	4
  3553  014C                     _SPI_Value:	
  3554  014C                     	ds	2
  3555  014E                     _debounce_bypass:	
  3556  014E                     	ds	2
  3557  0150                     _debounce_count:	
  3558  0150                     	ds	2
  3559  0152                     _debounce_mode1:	
  3560  0152                     	ds	2
  3561  0154                     _debounce_mode2:	
  3562  0154                     	ds	2
  3563  0156                     _delay_counter:	
  3564  0156                     	ds	2
  3565  0158                     _delayfound:	
  3566  0158                     	ds	2
  3567  015A                     _mod_value:	
  3568  015A                     	ds	2
  3569  015C                     _preset:	
  3570  015C                     	ds	2
  3571                           
  3572                           	psect	dataBANK2
  3573  015E                     __pdataBANK2:	
  3574  015E                     _blink_delay:	
  3575  015E                     	ds	2
  3576  0160                     _delay_time_changed:	
  3577  0160                     	ds	2
  3578  0162                     _incoming_data:	
  3579  0162                     	ds	2
  3580  0164                     _knob3_prev:	
  3581  0164                     	ds	2
  3582  0166                     _knob4_prev:	
  3583  0166                     	ds	2
  3584  0168                     _knob5_prev:	
  3585  0168                     	ds	2
  3586  016A                     _mod_delay_time:	
  3587  016A                     	ds	2
  3588  016C                     _blink_state:	
  3589  016C                     	ds	1
  3590                           
  3591                           	psect	bssBANK3
  3592  01A0                     __pbssBANK3:	
  3593  01A0                     _tap:	
  3594  01A0                     	ds	44
  3595  01CC                     _tap10:	
  3596  01CC                     	ds	4
  3597  01D0                     _tap3:	
  3598  01D0                     	ds	4
  3599  01D4                     _tap4:	
  3600  01D4                     	ds	4
  3601  01D8                     _tap5:	
  3602  01D8                     	ds	4
  3603  01DC                     _tap6:	
  3604  01DC                     	ds	4
  3605  01E0                     _tap7:	
  3606  01E0                     	ds	4
  3607  01E4                     _tap8:	
  3608  01E4                     	ds	4
  3609  01E8                     _tap9:	
  3610  01E8                     	ds	4
  3611                           
  3612                           	psect	bssBANK4
  3613  0220                     __pbssBANK4:	
  3614  0220                     _myBuf:	
  3615  0220                     	ds	64
  3616                           
  3617                           	psect	dataBANK5
  3618  02A0                     __pdataBANK5:	
  3619  02A0                     _mod2:	
  3620  02A0                     	ds	58
  3621                           
  3622                           	psect	dataBANK6
  3623  0320                     __pdataBANK6:	
  3624  0320                     _mod3:	
  3625  0320                     	ds	58
  3626                           
  3627                           	psect	dataBANK7
  3628  03A0                     __pdataBANK7:	
  3629  03A0                     _mod4:	
  3630  03A0                     	ds	58
  3631                           
  3632                           	psect	dataBANK8
  3633  0420                     __pdataBANK8:	
  3634  0420                     _B25k:	
  3635  0420                     	ds	80
  3636                           
  3637                           	psect	dataBANK9
  3638  04A0                     __pdataBANK9:	
  3639  04A0                     _iB25k:	
  3640  04A0                     	ds	80
  3641                           
  3642                           	psect	dataBANK10
  3643  0520                     __pdataBANK10:	
  3644  0520                     _mod1:	
  3645  0520                     	ds	58
  3646                           
  3647                           	psect	clrtext
  3648  1FAB                     clear_ram0:	
  3649                           ;	Called with FSR0 containing the base address, and
  3650                           ;	btemp/btemp+1 has the size to clear
  3651                           
  3652  1FAB  0064               	clrwdt	;clear the watchdog before getting into this loop
  3653  1FAC                     clrloop0:	
  3654  1FAC  0180               	clrf	0	;clear RAM location pointed to by FSR
  3655  1FAD  3101               	addfsr 0,1
  3656  1FAE  3001               	movlw	1
  3657  1FAF  02FE               	subwf	126,f
  3658  1FB0  3000               	movlw	0
  3659  1FB1  3BFF               	subwfb	127,f
  3660  1FB2  087F               	movf	127,w
  3661  1FB3  047E               	iorwf	126,w
  3662  1FB4  1903               	btfsc	3,2
  3663  1FB5  3400               	retlw	0	;all done for this memory range, return
  3664  1FB6  2FAC               	goto	clrloop0	;have we reached the end yet?
  3665                           
  3666                           	psect	inittext
  3667  1F9F                     init_ram:	
  3668  1F9F  00FE               	movwf	126
  3669  1FA0                     initloop:	
  3670  1FA0  0012               	moviw fsr0++
  3671  1FA1  001E               	movwi fsr1++
  3672  1FA2  3001               	movlw	1
  3673  1FA3  02FE               	subwf	126,f
  3674  1FA4  3000               	movlw	0
  3675  1FA5  3BFF               	subwfb	127,f
  3676  1FA6  087F               	movf	127,w
  3677  1FA7  047E               	iorwf	126,w
  3678  1FA8  1903               	btfsc	3,2
  3679  1FA9  3400               	retlw	0
  3680  1FAA  2FA0               	goto	initloop
  3681                           
  3682                           	psect	cstackBANK1
  3683  00A0                     __pcstackBANK1:	
  3684  00A0                     ___fttol@sign1:	
  3685                           
  3686                           ; 1 bytes @ 0x0
  3687  00A0                     	ds	1
  3688  00A1                     ___fttol@lval:	
  3689                           
  3690                           ; 4 bytes @ 0x1
  3691  00A1                     	ds	4
  3692  00A5                     ___fttol@exp1:	
  3693                           
  3694                           ; 1 bytes @ 0x5
  3695  00A5                     	ds	1
  3696  00A6                     ?_set_subdivision:	
  3697  00A6                     set_subdivision@x:	
  3698                           ; 2 bytes @ 0x6
  3699                           
  3700                           
  3701                           ; 2 bytes @ 0x6
  3702  00A6                     	ds	2
  3703  00A8                     set_subdivision@y:	
  3704                           
  3705                           ; 2 bytes @ 0x8
  3706  00A8                     	ds	2
  3707  00AA                     ??_main:	
  3708                           
  3709                           ; 1 bytes @ 0xA
  3710  00AA                     	ds	15
  3711  00B9                     main@i:	
  3712                           
  3713                           ; 2 bytes @ 0x19
  3714  00B9                     	ds	2
  3715  00BB                     main@tapCntDivisor:	
  3716                           
  3717                           ; 2 bytes @ 0x1B
  3718  00BB                     	ds	2
  3719  00BD                     main@adjusted_pot_value:	
  3720                           
  3721                           ; 2 bytes @ 0x1D
  3722  00BD                     	ds	2
  3723  00BF                     main@i_362:	
  3724                           
  3725                           ; 2 bytes @ 0x1F
  3726  00BF                     	ds	2
  3727  00C1                     main@i_363:	
  3728                           
  3729                           ; 2 bytes @ 0x21
  3730  00C1                     	ds	2
  3731                           
  3732                           	psect	cstackCOMMON
  3733  0070                     __pcstackCOMMON:	
  3734  0070                     ?_ConfigureOscillator:	
  3735  0070                     ?_InitApp:	
  3736                           ; 1 bytes @ 0x0
  3737                           
  3738  0070                     ?_InitializeTaps:	
  3739                           ; 1 bytes @ 0x0
  3740                           
  3741  0070                     ?_ReadSavedSettings:	
  3742                           ; 1 bytes @ 0x0
  3743                           
  3744  0070                     ?_read_bottom_tactile:	
  3745                           ; 1 bytes @ 0x0
  3746                           
  3747  0070                     ?_read_top_tactile:	
  3748                           ; 1 bytes @ 0x0
  3749                           
  3750  0070                     ?_update_mode:	
  3751                           ; 1 bytes @ 0x0
  3752                           
  3753  0070                     ?_showBootSequence:	
  3754                           ; 1 bytes @ 0x0
  3755                           
  3756  0070                     ?_init_adc:	
  3757                           ; 1 bytes @ 0x0
  3758                           
  3759  0070                     ?_init_pwm:	
  3760                           ; 1 bytes @ 0x0
  3761                           
  3762  0070                     ?_init_timer2:	
  3763                           ; 1 bytes @ 0x0
  3764                           
  3765  0070                     ?_init_timer0:	
  3766                           ; 1 bytes @ 0x0
  3767                           
  3768  0070                     ?_getCurrentLEDState:	
  3769                           ; 1 bytes @ 0x0
  3770                           
  3771  0070                     ?_star_tactiles:	
  3772                           ; 1 bytes @ 0x0
  3773                           
  3774  0070                     ?_solidring_tactiles:	
  3775                           ; 1 bytes @ 0x0
  3776                           
  3777  0070                     ?_restoreLEDState:	
  3778                           ; 1 bytes @ 0x0
  3779                           
  3780  0070                     ?_isr:	
  3781                           ; 1 bytes @ 0x0
  3782                           
  3783  0070                     ?_main:	
  3784                           ; 1 bytes @ 0x0
  3785                           
  3786  0070                     ?i1_set_leds_top:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0070                     i1set_leds_top@x:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792                           
  3793                           ; 2 bytes @ 0x0
  3794  0070                     	ds	2
  3795  0072                     i1set_leds_top@ledState:	
  3796                           
  3797                           ; 2 bytes @ 0x2
  3798  0072                     	ds	2
  3799  0074                     ??_isr:	
  3800  0074                     ??i1_set_leds_top:	
  3801                           ; 1 bytes @ 0x4
  3802                           
  3803                           
  3804                           ; 1 bytes @ 0x4
  3805  0074                     	ds	5
  3806                           
  3807                           	psect	cstackBANK0
  3808  0020                     __pcstackBANK0:	
  3809  0020                     ?_set_leds_top:	
  3810  0020                     ??_ConfigureOscillator:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813  0020                     ??_InitApp:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816  0020                     ??_InitializeTaps:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819  0020                     ??_update_mode:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0020                     ??_init_adc:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0020                     ??_init_pwm:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828  0020                     ??_init_timer2:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831  0020                     ??_init_timer0:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0020                     ?_set_leds_bottom:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0020                     ?_FLASH_EraseBlock:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840  0020                     ??_getCurrentLEDState:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843  0020                     ??_restoreLEDState:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0020                     ?_adc_convert:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0020                     ?_FLASH_ReadWord:	
  3850                           ; 2 bytes @ 0x0
  3851                           
  3852  0020                     ?___wmul:	
  3853                           ; 2 bytes @ 0x0
  3854                           
  3855  0020                     ?___awdiv:	
  3856                           ; 2 bytes @ 0x0
  3857                           
  3858  0020                     ?___ftpack:	
  3859                           ; 2 bytes @ 0x0
  3860                           
  3861  0020                     ?___ftneg:	
  3862                           ; 3 bytes @ 0x0
  3863                           
  3864  0020                     ?___lmul:	
  3865                           ; 3 bytes @ 0x0
  3866                           
  3867  0020                     FLASH_ReadWord@flashAddr:	
  3868                           ; 4 bytes @ 0x0
  3869                           
  3870  0020                     FLASH_EraseBlock@startAddr:	
  3871                           ; 2 bytes @ 0x0
  3872                           
  3873  0020                     set_leds_top@x:	
  3874                           ; 2 bytes @ 0x0
  3875                           
  3876  0020                     set_leds_bottom@x:	
  3877                           ; 2 bytes @ 0x0
  3878                           
  3879  0020                     ___wmul@multiplier:	
  3880                           ; 2 bytes @ 0x0
  3881                           
  3882  0020                     ___awdiv@divisor:	
  3883                           ; 2 bytes @ 0x0
  3884                           
  3885  0020                     ___ftpack@arg:	
  3886                           ; 2 bytes @ 0x0
  3887                           
  3888  0020                     ___ftneg@f1:	
  3889                           ; 3 bytes @ 0x0
  3890                           
  3891  0020                     ___lmul@multiplier:	
  3892                           ; 3 bytes @ 0x0
  3893                           
  3894                           
  3895                           ; 4 bytes @ 0x0
  3896  0020                     	ds	1
  3897  0021                     InitializeTaps@itap:	
  3898                           
  3899                           ; 2 bytes @ 0x1
  3900  0021                     	ds	1
  3901  0022                     ??_adc_convert:	
  3902  0022                     ??_FLASH_ReadWord:	
  3903                           ; 1 bytes @ 0x2
  3904                           
  3905  0022                     ??_set_leds_bottom:	
  3906                           ; 1 bytes @ 0x2
  3907                           
  3908  0022                     ??_FLASH_EraseBlock:	
  3909                           ; 1 bytes @ 0x2
  3910                           
  3911  0022                     FLASH_ReadWord@GIEBitValue:	
  3912                           ; 1 bytes @ 0x2
  3913                           
  3914  0022                     FLASH_EraseBlock@GIEBitValue:	
  3915                           ; 1 bytes @ 0x2
  3916                           
  3917  0022                     set_leds_top@ledState:	
  3918                           ; 1 bytes @ 0x2
  3919                           
  3920  0022                     ___wmul@multiplicand:	
  3921                           ; 2 bytes @ 0x2
  3922                           
  3923  0022                     ___awdiv@dividend:	
  3924                           ; 2 bytes @ 0x2
  3925                           
  3926                           
  3927                           ; 2 bytes @ 0x2
  3928  0022                     	ds	1
  3929  0023                     ?_FLASH_WriteBlock:	
  3930  0023                     ??___ftneg:	
  3931                           ; 1 bytes @ 0x3
  3932                           
  3933  0023                     adc_convert@channel:	
  3934                           ; 1 bytes @ 0x3
  3935                           
  3936  0023                     ___ftpack@exp:	
  3937                           ; 1 bytes @ 0x3
  3938                           
  3939  0023                     FLASH_WriteBlock@writeAddr:	
  3940                           ; 1 bytes @ 0x3
  3941                           
  3942                           
  3943                           ; 2 bytes @ 0x3
  3944  0023                     	ds	1
  3945  0024                     ??_set_leds_top:	
  3946  0024                     ??_ReadSavedSettings:	
  3947                           ; 1 bytes @ 0x4
  3948                           
  3949  0024                     ??___wmul:	
  3950                           ; 1 bytes @ 0x4
  3951                           
  3952  0024                     ??___awdiv:	
  3953                           ; 1 bytes @ 0x4
  3954                           
  3955  0024                     ___ftpack@sign:	
  3956                           ; 1 bytes @ 0x4
  3957                           
  3958  0024                     ___wmul@product:	
  3959                           ; 1 bytes @ 0x4
  3960                           
  3961  0024                     ___lmul@multiplicand:	
  3962                           ; 2 bytes @ 0x4
  3963                           
  3964                           
  3965                           ; 4 bytes @ 0x4
  3966  0024                     	ds	1
  3967  0025                     ??___ftpack:	
  3968  0025                     FLASH_WriteBlock@flashWordArray:	
  3969                           ; 1 bytes @ 0x5
  3970                           
  3971  0025                     ___awdiv@counter:	
  3972                           ; 1 bytes @ 0x5
  3973                           
  3974                           
  3975                           ; 1 bytes @ 0x5
  3976  0025                     	ds	1
  3977  0026                     ??_FLASH_WriteBlock:	
  3978  0026                     ?___aldiv:	
  3979                           ; 1 bytes @ 0x6
  3980                           
  3981  0026                     ___awdiv@sign:	
  3982                           ; 4 bytes @ 0x6
  3983                           
  3984  0026                     ___aldiv@divisor:	
  3985                           ; 1 bytes @ 0x6
  3986                           
  3987                           
  3988                           ; 4 bytes @ 0x6
  3989  0026                     	ds	1
  3990  0027                     ___awdiv@quotient:	
  3991                           
  3992                           ; 2 bytes @ 0x7
  3993  0027                     	ds	1
  3994  0028                     ??___lmul:	
  3995  0028                     ?___altoft:	
  3996                           ; 1 bytes @ 0x8
  3997                           
  3998  0028                     ?___awtoft:	
  3999                           ; 3 bytes @ 0x8
  4000                           
  4001  0028                     ?___ftadd:	
  4002                           ; 3 bytes @ 0x8
  4003                           
  4004  0028                     ___awtoft@c:	
  4005                           ; 3 bytes @ 0x8
  4006                           
  4007  0028                     ___ftadd@f1:	
  4008                           ; 2 bytes @ 0x8
  4009                           
  4010  0028                     ___lmul@product:	
  4011                           ; 3 bytes @ 0x8
  4012                           
  4013  0028                     ___altoft@c:	
  4014                           ; 4 bytes @ 0x8
  4015                           
  4016                           
  4017                           ; 4 bytes @ 0x8
  4018  0028                     	ds	1
  4019  0029                     FLASH_WriteBlock@blockStartAddr:	
  4020                           
  4021                           ; 2 bytes @ 0x9
  4022  0029                     	ds	1
  4023  002A                     ___aldiv@dividend:	
  4024                           
  4025                           ; 4 bytes @ 0xA
  4026  002A                     	ds	1
  4027  002B                     ??___awtoft:	
  4028  002B                     FLASH_WriteBlock@GIEBitValue:	
  4029                           ; 1 bytes @ 0xB
  4030                           
  4031  002B                     ___ftadd@f2:	
  4032                           ; 1 bytes @ 0xB
  4033                           
  4034                           
  4035                           ; 3 bytes @ 0xB
  4036  002B                     	ds	1
  4037  002C                     ?_wait_ms:	
  4038  002C                     ??___altoft:	
  4039                           ; 1 bytes @ 0xC
  4040                           
  4041  002C                     FLASH_WriteBlock@i:	
  4042                           ; 1 bytes @ 0xC
  4043                           
  4044  002C                     wait_ms@time:	
  4045                           ; 1 bytes @ 0xC
  4046                           
  4047                           
  4048                           ; 2 bytes @ 0xC
  4049  002C                     	ds	1
  4050  002D                     ?_FLASH_WriteWord:	
  4051  002D                     ___awtoft@sign:	
  4052                           ; 1 bytes @ 0xD
  4053                           
  4054  002D                     FLASH_WriteWord@flashAddr:	
  4055                           ; 1 bytes @ 0xD
  4056                           
  4057                           
  4058                           ; 2 bytes @ 0xD
  4059  002D                     	ds	1
  4060  002E                     ??_star_tactiles:	
  4061  002E                     ??_solidring_tactiles:	
  4062                           ; 1 bytes @ 0xE
  4063                           
  4064  002E                     ??_wait_ms:	
  4065                           ; 1 bytes @ 0xE
  4066                           
  4067  002E                     ??___aldiv:	
  4068                           ; 1 bytes @ 0xE
  4069                           
  4070  002E                     ??___ftadd:	
  4071                           ; 1 bytes @ 0xE
  4072                           
  4073  002E                     ___altoft@exp:	
  4074                           ; 1 bytes @ 0xE
  4075                           
  4076                           
  4077                           ; 1 bytes @ 0xE
  4078  002E                     	ds	1
  4079  002F                     FLASH_WriteWord@ramBuf:	
  4080  002F                     ___aldiv@counter:	
  4081                           ; 1 bytes @ 0xF
  4082                           
  4083  002F                     ___altoft@sign:	
  4084                           ; 1 bytes @ 0xF
  4085                           
  4086                           
  4087                           ; 1 bytes @ 0xF
  4088  002F                     	ds	1
  4089  0030                     star_tactiles@reverse:	
  4090  0030                     solidring_tactiles@ring_delay:	
  4091                           ; 1 bytes @ 0x10
  4092                           
  4093  0030                     ___aldiv@sign:	
  4094                           ; 1 bytes @ 0x10
  4095                           
  4096  0030                     FLASH_WriteWord@word:	
  4097                           ; 1 bytes @ 0x10
  4098                           
  4099                           
  4100                           ; 2 bytes @ 0x10
  4101  0030                     	ds	1
  4102  0031                     star_tactiles@iLed:	
  4103  0031                     ___aldiv@quotient:	
  4104                           ; 2 bytes @ 0x11
  4105                           
  4106                           
  4107                           ; 4 bytes @ 0x11
  4108  0031                     	ds	1
  4109  0032                     ??_FLASH_WriteWord:	
  4110  0032                     ___ftadd@sign:	
  4111                           ; 1 bytes @ 0x12
  4112                           
  4113                           
  4114                           ; 1 bytes @ 0x12
  4115  0032                     	ds	1
  4116  0033                     FLASH_WriteWord@offset:	
  4117  0033                     ___ftadd@exp2:	
  4118                           ; 1 bytes @ 0x13
  4119                           
  4120  0033                     star_tactiles@iLed_1381:	
  4121                           ; 1 bytes @ 0x13
  4122                           
  4123                           
  4124                           ; 2 bytes @ 0x13
  4125  0033                     	ds	1
  4126  0034                     ___ftadd@exp1:	
  4127  0034                     FLASH_WriteWord@blockStartAddr:	
  4128                           ; 1 bytes @ 0x14
  4129                           
  4130                           
  4131                           ; 2 bytes @ 0x14
  4132  0034                     	ds	1
  4133  0035                     ??_showBootSequence:	
  4134  0035                     ?_modulation:	
  4135                           ; 1 bytes @ 0x15
  4136                           
  4137  0035                     ?___ftmul:	
  4138                           ; 2 bytes @ 0x15
  4139                           
  4140  0035                     modulation@x:	
  4141                           ; 3 bytes @ 0x15
  4142                           
  4143  0035                     ___ftmul@f1:	
  4144                           ; 2 bytes @ 0x15
  4145                           
  4146                           
  4147                           ; 3 bytes @ 0x15
  4148  0035                     	ds	1
  4149  0036                     FLASH_WriteWord@i:	
  4150                           
  4151                           ; 1 bytes @ 0x16
  4152  0036                     	ds	1
  4153  0037                     ??_read_bottom_tactile:	
  4154  0037                     ??_read_top_tactile:	
  4155                           ; 1 bytes @ 0x17
  4156                           
  4157  0037                     modulation@y:	
  4158                           ; 1 bytes @ 0x17
  4159                           
  4160                           
  4161                           ; 2 bytes @ 0x17
  4162  0037                     	ds	1
  4163  0038                     ___ftmul@f2:	
  4164                           
  4165                           ; 3 bytes @ 0x18
  4166  0038                     	ds	1
  4167  0039                     ??_modulation:	
  4168                           
  4169                           ; 1 bytes @ 0x19
  4170  0039                     	ds	2
  4171  003B                     ??___ftmul:	
  4172                           
  4173                           ; 1 bytes @ 0x1B
  4174  003B                     	ds	4
  4175  003F                     ___ftmul@exp:	
  4176                           
  4177                           ; 1 bytes @ 0x1F
  4178  003F                     	ds	1
  4179  0040                     ___ftmul@f3_as_product:	
  4180                           
  4181                           ; 3 bytes @ 0x20
  4182  0040                     	ds	3
  4183  0043                     ___ftmul@cntr:	
  4184                           
  4185                           ; 1 bytes @ 0x23
  4186  0043                     	ds	1
  4187  0044                     ___ftmul@sign:	
  4188                           
  4189                           ; 1 bytes @ 0x24
  4190  0044                     	ds	1
  4191  0045                     ?___ftdiv:	
  4192  0045                     ___ftdiv@f2:	
  4193                           ; 3 bytes @ 0x25
  4194                           
  4195                           
  4196                           ; 3 bytes @ 0x25
  4197  0045                     	ds	3
  4198  0048                     ___ftdiv@f1:	
  4199                           
  4200                           ; 3 bytes @ 0x28
  4201  0048                     	ds	3
  4202  004B                     ??___ftdiv:	
  4203                           
  4204                           ; 1 bytes @ 0x2B
  4205  004B                     	ds	4
  4206  004F                     ___ftdiv@cntr:	
  4207                           
  4208                           ; 1 bytes @ 0x2F
  4209  004F                     	ds	1
  4210  0050                     ___ftdiv@f3:	
  4211                           
  4212                           ; 3 bytes @ 0x30
  4213  0050                     	ds	3
  4214  0053                     ___ftdiv@exp:	
  4215                           
  4216                           ; 1 bytes @ 0x33
  4217  0053                     	ds	1
  4218  0054                     ___ftdiv@sign:	
  4219                           
  4220                           ; 1 bytes @ 0x34
  4221  0054                     	ds	1
  4222  0055                     ?_map:	
  4223  0055                     map@x:	
  4224                           ; 3 bytes @ 0x35
  4225                           
  4226                           
  4227                           ; 3 bytes @ 0x35
  4228  0055                     	ds	3
  4229  0058                     map@in_min:	
  4230                           
  4231                           ; 3 bytes @ 0x38
  4232  0058                     	ds	3
  4233  005B                     map@in_max:	
  4234                           
  4235                           ; 3 bytes @ 0x3B
  4236  005B                     	ds	3
  4237  005E                     map@out_min:	
  4238                           
  4239                           ; 3 bytes @ 0x3E
  4240  005E                     	ds	3
  4241  0061                     map@out_max:	
  4242                           
  4243                           ; 3 bytes @ 0x41
  4244  0061                     	ds	3
  4245  0064                     ??_map:	
  4246  0064                     _map$1791:	
  4247                           ; 1 bytes @ 0x44
  4248                           
  4249                           
  4250                           ; 3 bytes @ 0x44
  4251  0064                     	ds	3
  4252  0067                     ?___fttol:	
  4253  0067                     ___fttol@f1:	
  4254                           ; 4 bytes @ 0x47
  4255                           
  4256                           
  4257                           ; 3 bytes @ 0x47
  4258  0067                     	ds	4
  4259  006B                     ??___fttol:	
  4260                           
  4261                           ; 1 bytes @ 0x4B
  4262  006B                     	ds	4
  4263  006F                     ??_set_subdivision:	
  4264                           
  4265                           	psect	maintext
  4266  090D                     __pmaintext:	
  4267                           ; 1 bytes @ 0x4F
  4268 ;;
  4269 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
  4270 ;;
  4271 ;; *************** function _main *****************
  4272 ;; Defined at:
  4273 ;;		line 91 in file "main.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  tapCntDiviso    2   27[BANK1 ] int 
  4278 ;;  adjusted_pot    2   29[BANK1 ] int 
  4279 ;;  i               2   33[BANK1 ] int 
  4280 ;;  i               2   31[BANK1 ] int 
  4281 ;;  i               2   25[BANK1 ] int 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : B1F/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4292 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4293 ;;      Temps:          0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4294 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4295 ;;Total ram usage:       25 bytes
  4296 ;; Hardware stack levels required when called:    6
  4297 ;; This function calls:
  4298 ;;		_ConfigureOscillator
  4299 ;;		_InitApp
  4300 ;;		_InitializeTaps
  4301 ;;		_ReadSavedSettings
  4302 ;;		___aldiv
  4303 ;;		___altoft
  4304 ;;		___awdiv
  4305 ;;		___awtoft
  4306 ;;		___ftdiv
  4307 ;;		___fttol
  4308 ;;		_adc_convert
  4309 ;;		_map
  4310 ;;		_modulation
  4311 ;;		_read_bottom_tactile
  4312 ;;		_read_top_tactile
  4313 ;;		_set_subdivision
  4314 ;;		_showBootSequence
  4315 ;;		_update_mode
  4316 ;; This function is called by:
  4317 ;;		Startup code after reset
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           
  4322                           ;psect for function _main
  4323  090D                     _main:	
  4324                           
  4325                           ;main.c: 92: ConfigureOscillator();
  4326                           
  4327                           ;incstack = 0
  4328                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4329  090D  3187  27FC  3189   	fcall	_ConfigureOscillator
  4330                           
  4331                           ;main.c: 93: InitApp();
  4332  0910  3190  20E8  3189   	fcall	_InitApp
  4333                           
  4334                           ;main.c: 96: InitializeTaps();
  4335  0913  3190  209C  3189   	fcall	_InitializeTaps
  4336                           
  4337                           ;main.c: 100: ReadSavedSettings();
  4338  0916  3194  24E2  3189   	fcall	_ReadSavedSettings
  4339  0919                     l249:	
  4340                           ;main.c: 102: while (1) {
  4341                           
  4342                           
  4343                           ;main.c: 104: read_bottom_tactile();
  4344  0919  3191  2179  3189   	fcall	_read_bottom_tactile
  4345                           
  4346                           ;main.c: 105: read_top_tactile();
  4347  091C  3193  234F  3189   	fcall	_read_top_tactile
  4348                           
  4349                           ;main.c: 108: update_mode();
  4350  091F  3194  2455  3189   	fcall	_update_mode
  4351                           
  4352                           ;main.c: 110: if (PORTDbits.RD7 == 0) {
  4353  0922  0020               	movlb	0	; select bank0
  4354  0923  1B8F               	btfsc	15,7	;volatile
  4355  0924  2943               	goto	l3278
  4356                           
  4357                           ;main.c: 111: debounce_mode1++;
  4358  0925  3001               	movlw	1
  4359  0926  0022               	movlb	2	; select bank2
  4360  0927  07D2               	addwf	_debounce_mode1^(0+256),f
  4361  0928  3000               	movlw	0
  4362  0929  3DD3               	addwfc	(_debounce_mode1+1)^(0+256),f
  4363                           
  4364                           ;main.c: 112: if (debounce_mode1 > 25) {
  4365  092A  0853               	movf	(_debounce_mode1+1)^(0+256),w
  4366  092B  3A80               	xorlw	128
  4367  092C  0021               	movlb	1	; select bank1
  4368  092D  00AA               	movwf	??_main^(0+128)
  4369  092E  3080               	movlw	128
  4370  092F  022A               	subwf	??_main^(0+128),w
  4371  0930  1D03               	skipz
  4372  0931  2935               	goto	u3385
  4373  0932  301A               	movlw	26
  4374  0933  0022               	movlb	2	; select bank2
  4375  0934  0252               	subwf	_debounce_mode1^(0+256),w
  4376  0935                     u3385:	
  4377  0935  1C03               	skipc
  4378  0936  2946               	goto	l3280
  4379                           
  4380                           ;main.c: 113: debounce_mode1 = 25;
  4381  0937  3019               	movlw	25
  4382  0938  0022               	movlb	2	; select bank2
  4383  0939  00D2               	movwf	_debounce_mode1^(0+256)
  4384  093A  3000               	movlw	0
  4385  093B  00D3               	movwf	(_debounce_mode1^(0+256)+1)
  4386                           
  4387                           ;main.c: 117: showBootSequence();
  4388  093C  3190  20C2  3189   	fcall	_showBootSequence
  4389  093F                     l252:	
  4390                           ;main.c: 120: while (PORTDbits.RD7 == 0) {
  4391                           
  4392  093F  0020               	movlb	0	; select bank0
  4393  0940  1B8F               	btfsc	15,7	;volatile
  4394  0941  2946               	goto	l3280
  4395  0942  293F               	goto	l252
  4396  0943                     l3278:	
  4397                           ;main.c: 121: }
  4398                           ;main.c: 122: }
  4399                           ;main.c: 123: } else {
  4400                           
  4401                           
  4402                           ;main.c: 124: debounce_mode1 = 0;
  4403  0943  0022               	movlb	2	; select bank2
  4404  0944  01D2               	clrf	_debounce_mode1^(0+256)
  4405  0945  01D3               	clrf	(_debounce_mode1+1)^(0+256)
  4406  0946                     l3280:	
  4407                           
  4408                           ;main.c: 125: }
  4409                           ;main.c: 134: if (PORTEbits.RE1 == 0) {
  4410  0946  0020               	movlb	0	; select bank0
  4411  0947  1890               	btfsc	16,1	;volatile
  4412  0948  2988               	goto	l3290
  4413                           
  4414                           ;main.c: 135: debounce_bypass++;
  4415  0949  3001               	movlw	1
  4416  094A  0022               	movlb	2	; select bank2
  4417  094B  07CE               	addwf	_debounce_bypass^(0+256),f
  4418  094C  3000               	movlw	0
  4419  094D  3DCF               	addwfc	(_debounce_bypass+1)^(0+256),f
  4420                           
  4421                           ;main.c: 136: if (debounce_bypass > 25) {
  4422  094E  084F               	movf	(_debounce_bypass+1)^(0+256),w
  4423  094F  3A80               	xorlw	128
  4424  0950  0021               	movlb	1	; select bank1
  4425  0951  00AA               	movwf	??_main^(0+128)
  4426  0952  3080               	movlw	128
  4427  0953  022A               	subwf	??_main^(0+128),w
  4428  0954  1D03               	skipz
  4429  0955  2959               	goto	u3415
  4430  0956  301A               	movlw	26
  4431  0957  0022               	movlb	2	; select bank2
  4432  0958  024E               	subwf	_debounce_bypass^(0+256),w
  4433  0959                     u3415:	
  4434  0959  1C03               	skipc
  4435  095A  298B               	goto	l3292
  4436                           
  4437                           ;main.c: 137: bypass_state = !bypass_state;
  4438  095B  0021               	movlb	1	; select bank1
  4439  095C  0859               	movf	_bypass_state^(0+128),w
  4440  095D  1D03               	btfss	3,2
  4441  095E  2961               	goto	u3420
  4442  095F  3001               	movlw	1
  4443  0960  2962               	goto	u3430
  4444  0961                     u3420:	
  4445  0961  3000               	movlw	0
  4446  0962                     u3430:	
  4447  0962  00AA               	movwf	??_main^(0+128)
  4448  0963  082A               	movf	??_main^(0+128),w
  4449  0964  00D9               	movwf	_bypass_state^(0+128)
  4450                           
  4451                           ;main.c: 138: LATGbits.LATG1 = !bypass_state;
  4452  0965  0859               	movf	_bypass_state^(0+128),w
  4453  0966  1D03               	btfss	3,2
  4454  0967  296B               	goto	u3440
  4455  0968  0027               	movlb	7	; select bank7
  4456  0969  148D               	bsf	13,1	;volatile
  4457  096A  296D               	goto	l3286
  4458  096B                     u3440:	
  4459  096B  0027               	movlb	7	; select bank7
  4460  096C  108D               	bcf	13,1	;volatile
  4461  096D                     l3286:	
  4462                           
  4463                           ;main.c: 139: LATGbits.LATG2 = bypass_state;
  4464  096D  0021               	movlb	1	; select bank1
  4465  096E  0C59               	rrf	_bypass_state^(0+128),w
  4466  096F  0027               	movlb	7	; select bank7
  4467  0970  1C03               	skipc
  4468  0971  110D               	bcf	13,2	;volatile
  4469  0972  1803               	skipnc
  4470  0973  150D               	bsf	13,2	;volatile
  4471                           
  4472                           ;main.c: 140: LATBbits.LATB2 = bypass_state;
  4473  0974  0021               	movlb	1	; select bank1
  4474  0975  0C59               	rrf	_bypass_state^(0+128),w
  4475  0976  0022               	movlb	2	; select bank2
  4476  0977  1C03               	skipc
  4477  0978  110D               	bcf	13,2	;volatile
  4478  0979  1803               	skipnc
  4479  097A  150D               	bsf	13,2	;volatile
  4480                           
  4481                           ;main.c: 141: LATBbits.LATB3 = !bypass_state;
  4482  097B  0021               	movlb	1	; select bank1
  4483  097C  0859               	movf	_bypass_state^(0+128),w
  4484  097D  1D03               	btfss	3,2
  4485  097E  2982               	goto	u3460
  4486  097F  0022               	movlb	2	; select bank2
  4487  0980  158D               	bsf	13,3	;volatile
  4488  0981  2984               	goto	l258
  4489  0982                     u3460:	
  4490  0982  0022               	movlb	2	; select bank2
  4491  0983  118D               	bcf	13,3	;volatile
  4492  0984                     l258:	
  4493                           ;main.c: 142: while (PORTEbits.RE1 == 0) {
  4494                           
  4495  0984  0020               	movlb	0	; select bank0
  4496  0985  1890               	btfsc	16,1	;volatile
  4497  0986  298B               	goto	l3292
  4498  0987  2984               	goto	l258
  4499  0988                     l3290:	
  4500                           ;main.c: 143: }
  4501                           ;main.c: 144: }
  4502                           ;main.c: 145: } else {
  4503                           
  4504                           
  4505                           ;main.c: 146: debounce_bypass = 0;
  4506  0988  0022               	movlb	2	; select bank2
  4507  0989  01CE               	clrf	_debounce_bypass^(0+256)
  4508  098A  01CF               	clrf	(_debounce_bypass+1)^(0+256)
  4509  098B                     l3292:	
  4510                           
  4511                           ;main.c: 147: }
  4512                           ;main.c: 165: if (PORTEbits.RE0 == 0) {
  4513  098B  0020               	movlb	0	; select bank0
  4514  098C  1810               	btfsc	16,0	;volatile
  4515  098D  2B1A               	goto	l3344
  4516                           
  4517                           ;main.c: 166: debounce_count++;
  4518  098E  3001               	movlw	1
  4519  098F  0022               	movlb	2	; select bank2
  4520  0990  07D0               	addwf	_debounce_count^(0+256),f
  4521  0991  3000               	movlw	0
  4522  0992  3DD1               	addwfc	(_debounce_count+1)^(0+256),f
  4523                           
  4524                           ;main.c: 167: if (debounce_count > 25) {
  4525  0993  0851               	movf	(_debounce_count+1)^(0+256),w
  4526  0994  3A80               	xorlw	128
  4527  0995  0021               	movlb	1	; select bank1
  4528  0996  00AA               	movwf	??_main^(0+128)
  4529  0997  3080               	movlw	128
  4530  0998  022A               	subwf	??_main^(0+128),w
  4531  0999  1D03               	skipz
  4532  099A  299E               	goto	u3505
  4533  099B  301A               	movlw	26
  4534  099C  0022               	movlb	2	; select bank2
  4535  099D  0250               	subwf	_debounce_count^(0+256),w
  4536  099E                     u3505:	
  4537  099E  1C03               	skipc
  4538  099F  2B1D               	goto	l3346
  4539                           
  4540                           ;main.c: 168: if (tap_timer >= 1563) {
  4541  09A0  1BFC               	btfsc	_tap_timer+3,7	;volatile
  4542  09A1  29F3               	goto	l3310
  4543  09A2  087C               	movf	_tap_timer+3,w	;volatile
  4544  09A3  1D03               	btfss	3,2
  4545  09A4  29AE               	goto	l3298
  4546  09A5  087B               	movf	_tap_timer+2,w	;volatile
  4547  09A6  1D03               	btfss	3,2
  4548  09A7  29AE               	goto	l3298
  4549  09A8  301B               	movlw	27
  4550  09A9  0279               	subwf	_tap_timer,w	;volatile
  4551  09AA  3006               	movlw	6
  4552  09AB  3B7A               	subwfb	_tap_timer+1,w	;volatile
  4553  09AC  1C03               	btfss	3,0
  4554  09AD  29F3               	goto	l3310
  4555  09AE                     l3298:	
  4556                           
  4557                           ;main.c: 169: tap_timer = 0;
  4558  09AE  3000               	movlw	0
  4559  09AF  00FC               	movwf	_tap_timer+3	;volatile
  4560  09B0  3000               	movlw	0
  4561  09B1  00FB               	movwf	_tap_timer+2	;volatile
  4562  09B2  3000               	movlw	0
  4563  09B3  00FA               	movwf	_tap_timer+1	;volatile
  4564  09B4  3000               	movlw	0
  4565  09B5  00F9               	movwf	_tap_timer	;volatile
  4566                           
  4567                           ;main.c: 170: tap_iteration = 1;
  4568  09B6  3001               	movlw	1
  4569  09B7  0021               	movlb	1	; select bank1
  4570  09B8  00EC               	movwf	_tap_iteration^(0+128)
  4571  09B9  3000               	movlw	0
  4572  09BA  00ED               	movwf	(_tap_iteration^(0+128)+1)
  4573                           
  4574                           ;main.c: 171: tap_total = 0;
  4575  09BB  3000               	movlw	0
  4576  09BC  0022               	movlb	2	; select bank2
  4577  09BD  00C7               	movwf	(_tap_total+3)^(0+256)
  4578  09BE  3000               	movlw	0
  4579  09BF  00C6               	movwf	(_tap_total+2)^(0+256)
  4580  09C0  3000               	movlw	0
  4581  09C1  00C5               	movwf	(_tap_total+1)^(0+256)
  4582  09C2  3000               	movlw	0
  4583  09C3  00C4               	movwf	_tap_total^(0+256)
  4584                           
  4585                           ;main.c: 172: delay_time_changed = 0;
  4586  09C4  01E0               	clrf	_delay_time_changed^(0+256)
  4587  09C5  01E1               	clrf	(_delay_time_changed+1)^(0+256)
  4588                           
  4589                           ;main.c: 175: for (iCnt = 1; iCnt <= num_taps; iCnt++) {
  4590  09C6  3001               	movlw	1
  4591  09C7  0021               	movlb	1	; select bank1
  4592  09C8  00CB               	movwf	_iCnt^(0+128)
  4593  09C9  3000               	movlw	0
  4594  09CA  00CC               	movwf	(_iCnt^(0+128)+1)
  4595  09CB                     l3308:	
  4596  09CB  086B               	movf	(_num_taps+1)^(0+128),w
  4597  09CC  3A80               	xorlw	128
  4598  09CD  00AA               	movwf	??_main^(0+128)
  4599  09CE  084C               	movf	(_iCnt+1)^(0+128),w
  4600  09CF  3A80               	xorlw	128
  4601  09D0  022A               	subwf	??_main^(0+128),w
  4602  09D1  1D03               	skipz
  4603  09D2  29D5               	goto	u3535
  4604  09D3  084B               	movf	_iCnt^(0+128),w
  4605  09D4  026A               	subwf	_num_taps^(0+128),w
  4606  09D5                     u3535:	
  4607  09D5  1C03               	btfss	3,0
  4608  09D6  29EF               	goto	l268
  4609                           
  4610                           ;main.c: 176: tap_history[iCnt] = 0;
  4611  09D7  0021               	movlb	1	; select bank1
  4612  09D8  084B               	movf	_iCnt^(0+128),w
  4613  09D9  00AA               	movwf	??_main^(0+128)
  4614  09DA  3001               	movlw	1
  4615  09DB                     u3525:	
  4616  09DB  35AA               	lslf	??_main^(0+128),f
  4617  09DC  3EFF               	addlw	-1
  4618  09DD  1D03               	skipz
  4619  09DE  29DB               	goto	u3525
  4620  09DF  352A               	lslf	??_main^(0+128),w
  4621  09E0  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4622  09E1  0086               	movwf	6
  4623  09E2  3001               	movlw	1	; select bank2/3
  4624  09E3  0087               	movwf	7
  4625  09E4  3000               	movlw	0
  4626  09E5  3FC0               	movwi [0]fsr1
  4627  09E6  3000               	movlw	0
  4628  09E7  3FC1               	movwi [1]fsr1
  4629  09E8  3FC2               	movwi [2]fsr1
  4630  09E9  3FC3               	movwi [3]fsr1
  4631  09EA  3001               	movlw	1
  4632  09EB  07CB               	addwf	_iCnt^(0+128),f
  4633  09EC  3000               	movlw	0
  4634  09ED  3DCC               	addwfc	(_iCnt+1)^(0+128),f
  4635  09EE  29CB               	goto	l3308
  4636  09EF                     l268:	
  4637                           ;main.c: 177: }
  4638                           ;main.c: 178: while (PORTEbits.RE0 == 0) {
  4639                           
  4640  09EF  0020               	movlb	0	; select bank0
  4641  09F0  1810               	btfsc	16,0	;volatile
  4642  09F1  2B1D               	goto	l3346
  4643  09F2  29EF               	goto	l268
  4644  09F3                     l3310:	
  4645                           ;main.c: 179: }
  4646                           ;main.c: 180: } else if (tap_timer < 1563) {
  4647                           
  4648  09F3  1BFC               	btfsc	_tap_timer+3,7	;volatile
  4649  09F4  2A01               	goto	l3312
  4650  09F5  087C               	movf	_tap_timer+3,w	;volatile
  4651  09F6  1D03               	btfss	3,2
  4652  09F7  2B1D               	goto	l3346
  4653  09F8  087B               	movf	_tap_timer+2,w	;volatile
  4654  09F9  1D03               	btfss	3,2
  4655  09FA  2B1D               	goto	l3346
  4656  09FB  301B               	movlw	27
  4657  09FC  0279               	subwf	_tap_timer,w	;volatile
  4658  09FD  3006               	movlw	6
  4659  09FE  3B7A               	subwfb	_tap_timer+1,w	;volatile
  4660  09FF  1803               	btfsc	3,0
  4661  0A00  2B1D               	goto	l3346
  4662  0A01                     l3312:	
  4663                           
  4664                           ;main.c: 181: if (tap_iteration <= 4) {
  4665  0A01  0021               	movlb	1	; select bank1
  4666  0A02  086D               	movf	(_tap_iteration+1)^(0+128),w
  4667  0A03  3A80               	xorlw	128
  4668  0A04  00AA               	movwf	??_main^(0+128)
  4669  0A05  3080               	movlw	128
  4670  0A06  022A               	subwf	??_main^(0+128),w
  4671  0A07  1D03               	skipz
  4672  0A08  2A0B               	goto	u3565
  4673  0A09  3005               	movlw	5
  4674  0A0A  026C               	subwf	_tap_iteration^(0+128),w
  4675  0A0B                     u3565:	
  4676  0A0B  1803               	skipnc
  4677  0A0C  2B16               	goto	l280
  4678                           
  4679                           ;main.c: 182: if (tap_timer >= 1172) {
  4680  0A0D  1BFC               	btfsc	_tap_timer+3,7	;volatile
  4681  0A0E  2A23               	goto	l274
  4682  0A0F  087C               	movf	_tap_timer+3,w	;volatile
  4683  0A10  1D03               	btfss	3,2
  4684  0A11  2A1B               	goto	l3316
  4685  0A12  087B               	movf	_tap_timer+2,w	;volatile
  4686  0A13  1D03               	btfss	3,2
  4687  0A14  2A1B               	goto	l3316
  4688  0A15  3094               	movlw	148
  4689  0A16  0279               	subwf	_tap_timer,w	;volatile
  4690  0A17  3004               	movlw	4
  4691  0A18  3B7A               	subwfb	_tap_timer+1,w	;volatile
  4692  0A19  1C03               	btfss	3,0
  4693  0A1A  2A23               	goto	l274
  4694  0A1B                     l3316:	
  4695                           
  4696                           ;main.c: 183: tap_timer = 1172;
  4697  0A1B  3000               	movlw	0
  4698  0A1C  00FC               	movwf	_tap_timer+3	;volatile
  4699  0A1D  3000               	movlw	0
  4700  0A1E  00FB               	movwf	_tap_timer+2	;volatile
  4701  0A1F  3004               	movlw	4
  4702  0A20  00FA               	movwf	_tap_timer+1	;volatile
  4703  0A21  3094               	movlw	148
  4704  0A22  00F9               	movwf	_tap_timer	;volatile
  4705  0A23                     l274:	
  4706                           
  4707                           ;main.c: 184: }
  4708                           ;main.c: 185: int tapCntDivisor = num_taps;
  4709  0A23  0021               	movlb	1	; select bank1
  4710  0A24  086B               	movf	(_num_taps+1)^(0+128),w
  4711  0A25  00BC               	movwf	(main@tapCntDivisor+1)^(0+128)
  4712  0A26  086A               	movf	_num_taps^(0+128),w
  4713  0A27  00BB               	movwf	main@tapCntDivisor^(0+128)
  4714                           
  4715                           ;main.c: 186: if (tap_iteration <= num_taps) {
  4716  0A28  086B               	movf	(_num_taps+1)^(0+128),w
  4717  0A29  3A80               	xorlw	128
  4718  0A2A  00AA               	movwf	??_main^(0+128)
  4719  0A2B  086D               	movf	(_tap_iteration+1)^(0+128),w
  4720  0A2C  3A80               	xorlw	128
  4721  0A2D  022A               	subwf	??_main^(0+128),w
  4722  0A2E  1D03               	skipz
  4723  0A2F  2A32               	goto	u3585
  4724  0A30  086C               	movf	_tap_iteration^(0+128),w
  4725  0A31  026A               	subwf	_num_taps^(0+128),w
  4726  0A32                     u3585:	
  4727  0A32  1C03               	skipc
  4728  0A33  2A57               	goto	l3324
  4729                           
  4730                           ;main.c: 187: tap_total += tap_timer;
  4731  0A34  0879               	movf	_tap_timer,w	;volatile
  4732  0A35  0022               	movlb	2	; select bank2
  4733  0A36  07C4               	addwf	_tap_total^(0+256),f
  4734  0A37  087A               	movf	_tap_timer+1,w	;volatile
  4735  0A38  3DC5               	addwfc	(_tap_total+1)^(0+256),f
  4736  0A39  087B               	movf	_tap_timer+2,w	;volatile
  4737  0A3A  3DC6               	addwfc	(_tap_total+2)^(0+256),f
  4738  0A3B  087C               	movf	_tap_timer+3,w	;volatile
  4739  0A3C  3DC7               	addwfc	(_tap_total+3)^(0+256),f
  4740                           
  4741                           ;main.c: 188: tap_history[tap_iteration] = tap_timer;
  4742  0A3D  0021               	movlb	1	; select bank1
  4743  0A3E  086C               	movf	_tap_iteration^(0+128),w
  4744  0A3F  00AA               	movwf	??_main^(0+128)
  4745  0A40  3001               	movlw	1
  4746  0A41                     u3595:	
  4747  0A41  35AA               	lslf	??_main^(0+128),f
  4748  0A42  3EFF               	addlw	-1
  4749  0A43  1D03               	skipz
  4750  0A44  2A41               	goto	u3595
  4751  0A45  352A               	lslf	??_main^(0+128),w
  4752  0A46  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4753  0A47  0086               	movwf	6
  4754  0A48  3001               	movlw	1	; select bank2/3
  4755  0A49  0087               	movwf	7
  4756  0A4A  0879               	movf	_tap_timer,w	;volatile
  4757  0A4B  3FC0               	movwi [0]fsr1
  4758  0A4C  087A               	movf	_tap_timer+1,w	;volatile
  4759  0A4D  3FC1               	movwi [1]fsr1
  4760  0A4E  087B               	movf	_tap_timer+2,w	;volatile
  4761  0A4F  3FC2               	movwi [2]fsr1
  4762  0A50  087C               	movf	_tap_timer+3,w	;volatile
  4763  0A51  3FC3               	movwi [3]fsr1
  4764                           
  4765                           ;main.c: 189: tapCntDivisor = tap_iteration;
  4766  0A52  086D               	movf	(_tap_iteration+1)^(0+128),w
  4767  0A53  00BC               	movwf	(main@tapCntDivisor+1)^(0+128)
  4768  0A54  086C               	movf	_tap_iteration^(0+128),w
  4769  0A55  00BB               	movwf	main@tapCntDivisor^(0+128)
  4770                           
  4771                           ;main.c: 190: } else {
  4772  0A56  2AD4               	goto	l3336
  4773  0A57                     l3324:	
  4774                           
  4775                           ;main.c: 191: tap_total = 0;
  4776  0A57  3000               	movlw	0
  4777  0A58  0022               	movlb	2	; select bank2
  4778  0A59  00C7               	movwf	(_tap_total+3)^(0+256)
  4779  0A5A  3000               	movlw	0
  4780  0A5B  00C6               	movwf	(_tap_total+2)^(0+256)
  4781  0A5C  3000               	movlw	0
  4782  0A5D  00C5               	movwf	(_tap_total+1)^(0+256)
  4783  0A5E  3000               	movlw	0
  4784  0A5F  00C4               	movwf	_tap_total^(0+256)
  4785                           
  4786                           ;main.c: 192: for (iCnt = 1; iCnt < num_taps; iCnt++) {
  4787  0A60  3001               	movlw	1
  4788  0A61  0021               	movlb	1	; select bank1
  4789  0A62  00CB               	movwf	_iCnt^(0+128)
  4790  0A63  3000               	movlw	0
  4791  0A64  00CC               	movwf	(_iCnt^(0+128)+1)
  4792  0A65                     l3330:	
  4793  0A65  084C               	movf	(_iCnt+1)^(0+128),w
  4794  0A66  3A80               	xorlw	128
  4795  0A67  00AA               	movwf	??_main^(0+128)
  4796  0A68  086B               	movf	(_num_taps+1)^(0+128),w
  4797  0A69  3A80               	xorlw	128
  4798  0A6A  022A               	subwf	??_main^(0+128),w
  4799  0A6B  1D03               	skipz
  4800  0A6C  2A6F               	goto	u3635
  4801  0A6D  086A               	movf	_num_taps^(0+128),w
  4802  0A6E  024B               	subwf	_iCnt^(0+128),w
  4803  0A6F                     u3635:	
  4804  0A6F  1803               	btfsc	3,0
  4805  0A70  2AB6               	goto	l3332
  4806                           
  4807                           ;main.c: 193: tap_history[iCnt] = tap_history[iCnt + 1];
  4808  0A71  0021               	movlb	1	; select bank1
  4809  0A72  084B               	movf	_iCnt^(0+128),w
  4810  0A73  00AA               	movwf	??_main^(0+128)
  4811  0A74  3001               	movlw	1
  4812  0A75                     u3605:	
  4813  0A75  35AA               	lslf	??_main^(0+128),f
  4814  0A76  3EFF               	addlw	-1
  4815  0A77  1D03               	skipz
  4816  0A78  2A75               	goto	u3605
  4817  0A79  352A               	lslf	??_main^(0+128),w
  4818  0A7A  3E04               	addlw	4
  4819  0A7B  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4820  0A7C  0086               	movwf	6
  4821  0A7D  3001               	movlw	1	; select bank2/3
  4822  0A7E  0087               	movwf	7
  4823  0A7F  3F40               	moviw [0]fsr1
  4824  0A80  00AB               	movwf	(??_main+1)^(0+128)
  4825  0A81  3F41               	moviw [1]fsr1
  4826  0A82  00AC               	movwf	((??_main+1)^(0+128)+1)
  4827  0A83  3F42               	moviw [2]fsr1
  4828  0A84  00AD               	movwf	((??_main+1)^(0+128)+2)
  4829  0A85  3F43               	moviw [3]fsr1
  4830  0A86  00AE               	movwf	((??_main+1)^(0+128)+3)
  4831  0A87  084B               	movf	_iCnt^(0+128),w
  4832  0A88  00AF               	movwf	(??_main+5)^(0+128)
  4833  0A89  3001               	movlw	1
  4834  0A8A                     u3615:	
  4835  0A8A  35AF               	lslf	(??_main+5)^(0+128),f
  4836  0A8B  3EFF               	addlw	-1
  4837  0A8C  1D03               	skipz
  4838  0A8D  2A8A               	goto	u3615
  4839  0A8E  352F               	lslf	(??_main+5)^(0+128),w
  4840  0A8F  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4841  0A90  0086               	movwf	6
  4842  0A91  3001               	movlw	1	; select bank2/3
  4843  0A92  0087               	movwf	7
  4844  0A93  082B               	movf	(??_main+1)^(0+128),w
  4845  0A94  3FC0               	movwi [0]fsr1
  4846  0A95  082C               	movf	(??_main+2)^(0+128),w
  4847  0A96  3FC1               	movwi [1]fsr1
  4848  0A97  082D               	movf	(??_main+3)^(0+128),w
  4849  0A98  3FC2               	movwi [2]fsr1
  4850  0A99  082E               	movf	(??_main+4)^(0+128),w
  4851  0A9A  3FC3               	movwi [3]fsr1
  4852                           
  4853                           ;main.c: 194: tap_total += tap_history[iCnt];
  4854  0A9B  084B               	movf	_iCnt^(0+128),w
  4855  0A9C  00AA               	movwf	??_main^(0+128)
  4856  0A9D  3001               	movlw	1
  4857  0A9E                     u3625:	
  4858  0A9E  35AA               	lslf	??_main^(0+128),f
  4859  0A9F  3EFF               	addlw	-1
  4860  0AA0  1D03               	skipz
  4861  0AA1  2A9E               	goto	u3625
  4862  0AA2  352A               	lslf	??_main^(0+128),w
  4863  0AA3  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4864  0AA4  0086               	movwf	6
  4865  0AA5  3001               	movlw	1	; select bank2/3
  4866  0AA6  0087               	movwf	7
  4867  0AA7  3F40               	moviw [0]fsr1
  4868  0AA8  0022               	movlb	2	; select bank2
  4869  0AA9  07C4               	addwf	_tap_total^(0+256),f
  4870  0AAA  3F41               	moviw [1]fsr1
  4871  0AAB  3DC5               	addwfc	(_tap_total+1)^(0+256),f
  4872  0AAC  3F42               	moviw [2]fsr1
  4873  0AAD  3DC6               	addwfc	(_tap_total+2)^(0+256),f
  4874  0AAE  3F43               	moviw [3]fsr1
  4875  0AAF  3DC7               	addwfc	(_tap_total+3)^(0+256),f
  4876  0AB0  3001               	movlw	1
  4877  0AB1  0021               	movlb	1	; select bank1
  4878  0AB2  07CB               	addwf	_iCnt^(0+128),f
  4879  0AB3  3000               	movlw	0
  4880  0AB4  3DCC               	addwfc	(_iCnt+1)^(0+128),f
  4881  0AB5  2A65               	goto	l3330
  4882  0AB6                     l3332:	
  4883                           
  4884                           ;main.c: 195: }
  4885                           ;main.c: 196: tap_history[num_taps] = tap_timer;
  4886  0AB6  0021               	movlb	1	; select bank1
  4887  0AB7  086A               	movf	_num_taps^(0+128),w
  4888  0AB8  00AA               	movwf	??_main^(0+128)
  4889  0AB9  3001               	movlw	1
  4890  0ABA                     u3645:	
  4891  0ABA  35AA               	lslf	??_main^(0+128),f
  4892  0ABB  3EFF               	addlw	-1
  4893  0ABC  1D03               	skipz
  4894  0ABD  2ABA               	goto	u3645
  4895  0ABE  352A               	lslf	??_main^(0+128),w
  4896  0ABF  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4897  0AC0  0086               	movwf	6
  4898  0AC1  3001               	movlw	1	; select bank2/3
  4899  0AC2  0087               	movwf	7
  4900  0AC3  0879               	movf	_tap_timer,w	;volatile
  4901  0AC4  3FC0               	movwi [0]fsr1
  4902  0AC5  087A               	movf	_tap_timer+1,w	;volatile
  4903  0AC6  3FC1               	movwi [1]fsr1
  4904  0AC7  087B               	movf	_tap_timer+2,w	;volatile
  4905  0AC8  3FC2               	movwi [2]fsr1
  4906  0AC9  087C               	movf	_tap_timer+3,w	;volatile
  4907  0ACA  3FC3               	movwi [3]fsr1
  4908                           
  4909                           ;main.c: 197: tap_total += tap_timer;
  4910  0ACB  0879               	movf	_tap_timer,w	;volatile
  4911  0ACC  0022               	movlb	2	; select bank2
  4912  0ACD  07C4               	addwf	_tap_total^(0+256),f
  4913  0ACE  087A               	movf	_tap_timer+1,w	;volatile
  4914  0ACF  3DC5               	addwfc	(_tap_total+1)^(0+256),f
  4915  0AD0  087B               	movf	_tap_timer+2,w	;volatile
  4916  0AD1  3DC6               	addwfc	(_tap_total+2)^(0+256),f
  4917  0AD2  087C               	movf	_tap_timer+3,w	;volatile
  4918  0AD3  3DC7               	addwfc	(_tap_total+3)^(0+256),f
  4919  0AD4                     l3336:	
  4920                           
  4921                           ;main.c: 198: }
  4922                           ;main.c: 201: baseline_delay_time = tap_total / tapCntDivisor;
  4923  0AD4  0021               	movlb	1	; select bank1
  4924  0AD5  083B               	movf	main@tapCntDivisor^(0+128),w
  4925  0AD6  0020               	movlb	0	; select bank0
  4926  0AD7  00A6               	movwf	___aldiv@divisor
  4927  0AD8  0021               	movlb	1	; select bank1
  4928  0AD9  083C               	movf	(main@tapCntDivisor+1)^(0+128),w
  4929  0ADA  0020               	movlb	0	; select bank0
  4930  0ADB  00A7               	movwf	___aldiv@divisor+1
  4931  0ADC  0D89               	rlf	9,f
  4932  0ADD  3B89               	subwfb	9,f
  4933  0ADE  0989               	comf	9,f
  4934  0ADF  00A8               	movwf	___aldiv@divisor+2
  4935  0AE0  00A9               	movwf	___aldiv@divisor+3
  4936  0AE1  0022               	movlb	2	; select bank2
  4937  0AE2  0847               	movf	(_tap_total+3)^(0+256),w
  4938  0AE3  0020               	movlb	0	; select bank0
  4939  0AE4  00AD               	movwf	___aldiv@dividend+3
  4940  0AE5  0022               	movlb	2	; select bank2
  4941  0AE6  0846               	movf	(_tap_total+2)^(0+256),w
  4942  0AE7  0020               	movlb	0	; select bank0
  4943  0AE8  00AC               	movwf	___aldiv@dividend+2
  4944  0AE9  0022               	movlb	2	; select bank2
  4945  0AEA  0845               	movf	(_tap_total+1)^(0+256),w
  4946  0AEB  0020               	movlb	0	; select bank0
  4947  0AEC  00AB               	movwf	___aldiv@dividend+1
  4948  0AED  0022               	movlb	2	; select bank2
  4949  0AEE  0844               	movf	_tap_total^(0+256),w
  4950  0AEF  0020               	movlb	0	; select bank0
  4951  0AF0  00AA               	movwf	___aldiv@dividend
  4952  0AF1  3196  26F3  3189   	fcall	___aldiv
  4953  0AF4  0020               	movlb	0	; select bank0
  4954  0AF5  0829               	movf	?___aldiv+3,w
  4955  0AF6  0021               	movlb	1	; select bank1
  4956  0AF7  00E1               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  4957  0AF8  0020               	movlb	0	; select bank0
  4958  0AF9  0828               	movf	?___aldiv+2,w
  4959  0AFA  0021               	movlb	1	; select bank1
  4960  0AFB  00E0               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  4961  0AFC  0020               	movlb	0	; select bank0
  4962  0AFD  0827               	movf	?___aldiv+1,w
  4963  0AFE  0021               	movlb	1	; select bank1
  4964  0AFF  00DF               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  4965  0B00  0020               	movlb	0	; select bank0
  4966  0B01  0826               	movf	?___aldiv,w
  4967  0B02  0021               	movlb	1	; select bank1
  4968  0B03  00DE               	movwf	_baseline_delay_time^(0+128)	;volatile
  4969                           
  4970                           ;main.c: 202: delay_time_changed = 1;
  4971  0B04  3001               	movlw	1
  4972  0B05  0022               	movlb	2	; select bank2
  4973  0B06  00E0               	movwf	_delay_time_changed^(0+256)
  4974  0B07  3000               	movlw	0
  4975  0B08  00E1               	movwf	(_delay_time_changed^(0+256)+1)
  4976                           
  4977                           ;main.c: 203: tap_timer = 0;
  4978  0B09  3000               	movlw	0
  4979  0B0A  00FC               	movwf	_tap_timer+3	;volatile
  4980  0B0B  3000               	movlw	0
  4981  0B0C  00FB               	movwf	_tap_timer+2	;volatile
  4982  0B0D  3000               	movlw	0
  4983  0B0E  00FA               	movwf	_tap_timer+1	;volatile
  4984  0B0F  3000               	movlw	0
  4985  0B10  00F9               	movwf	_tap_timer	;volatile
  4986                           
  4987                           ;main.c: 212: tap_iteration++;
  4988  0B11  3001               	movlw	1
  4989  0B12  0021               	movlb	1	; select bank1
  4990  0B13  07EC               	addwf	_tap_iteration^(0+128),f
  4991  0B14  3000               	movlw	0
  4992  0B15  3DED               	addwfc	(_tap_iteration+1)^(0+128),f
  4993  0B16                     l280:	
  4994                           ;main.c: 213: }
  4995                           ;main.c: 214: while (PORTEbits.RE0 == 0) {
  4996                           
  4997  0B16  0020               	movlb	0	; select bank0
  4998  0B17  1810               	btfsc	16,0	;volatile
  4999  0B18  2B1D               	goto	l3346
  5000  0B19  2B16               	goto	l280
  5001  0B1A                     l3344:	
  5002                           ;main.c: 215: }
  5003                           ;main.c: 216: }
  5004                           ;main.c: 217: }
  5005                           ;main.c: 218: } else {
  5006                           
  5007                           
  5008                           ;main.c: 219: debounce_count = 0;
  5009  0B1A  0022               	movlb	2	; select bank2
  5010  0B1B  01D0               	clrf	_debounce_count^(0+256)
  5011  0B1C  01D1               	clrf	(_debounce_count+1)^(0+256)
  5012  0B1D                     l3346:	
  5013                           
  5014                           ;main.c: 220: }
  5015                           ;main.c: 225: knob_1_pos = adc_convert(0);
  5016  0B1D  3000               	movlw	0
  5017  0B1E  3190  2005  3189   	fcall	_adc_convert
  5018  0B21  0020               	movlb	0	; select bank0
  5019  0B22  0821               	movf	?_adc_convert+1,w
  5020  0B23  0021               	movlb	1	; select bank1
  5021  0B24  00CE               	movwf	(_knob_1_pos+1)^(0+128)
  5022  0B25  0020               	movlb	0	; select bank0
  5023  0B26  0820               	movf	?_adc_convert,w
  5024  0B27  0021               	movlb	1	; select bank1
  5025  0B28  00CD               	movwf	_knob_1_pos^(0+128)
  5026                           
  5027                           ;main.c: 226: knob_2_pos = adc_convert(1);
  5028  0B29  3001               	movlw	1
  5029  0B2A  3190  2005  3189   	fcall	_adc_convert
  5030  0B2D  0020               	movlb	0	; select bank0
  5031  0B2E  0821               	movf	?_adc_convert+1,w
  5032  0B2F  0021               	movlb	1	; select bank1
  5033  0B30  00D0               	movwf	(_knob_2_pos+1)^(0+128)
  5034  0B31  0020               	movlb	0	; select bank0
  5035  0B32  0820               	movf	?_adc_convert,w
  5036  0B33  0021               	movlb	1	; select bank1
  5037  0B34  00CF               	movwf	_knob_2_pos^(0+128)
  5038                           
  5039                           ;main.c: 227: knob_3_pos = adc_convert(2);
  5040  0B35  3002               	movlw	2
  5041  0B36  3190  2005  3189   	fcall	_adc_convert
  5042  0B39  0020               	movlb	0	; select bank0
  5043  0B3A  0821               	movf	?_adc_convert+1,w
  5044  0B3B  0021               	movlb	1	; select bank1
  5045  0B3C  00D2               	movwf	(_knob_3_pos+1)^(0+128)
  5046  0B3D  0020               	movlb	0	; select bank0
  5047  0B3E  0820               	movf	?_adc_convert,w
  5048  0B3F  0021               	movlb	1	; select bank1
  5049  0B40  00D1               	movwf	_knob_3_pos^(0+128)
  5050                           
  5051                           ;main.c: 228: knob_4_pos = adc_convert(3);
  5052  0B41  3003               	movlw	3
  5053  0B42  3190  2005  3189   	fcall	_adc_convert
  5054  0B45  0020               	movlb	0	; select bank0
  5055  0B46  0821               	movf	?_adc_convert+1,w
  5056  0B47  0021               	movlb	1	; select bank1
  5057  0B48  00D4               	movwf	(_knob_4_pos+1)^(0+128)
  5058  0B49  0020               	movlb	0	; select bank0
  5059  0B4A  0820               	movf	?_adc_convert,w
  5060  0B4B  0021               	movlb	1	; select bank1
  5061  0B4C  00D3               	movwf	_knob_4_pos^(0+128)
  5062                           
  5063                           ;main.c: 229: knob_5_pos = adc_convert(4);
  5064  0B4D  3004               	movlw	4
  5065  0B4E  3190  2005  3189   	fcall	_adc_convert
  5066  0B51  0020               	movlb	0	; select bank0
  5067  0B52  0821               	movf	?_adc_convert+1,w
  5068  0B53  0021               	movlb	1	; select bank1
  5069  0B54  00D6               	movwf	(_knob_5_pos+1)^(0+128)
  5070  0B55  0020               	movlb	0	; select bank0
  5071  0B56  0820               	movf	?_adc_convert,w
  5072  0B57  0021               	movlb	1	; select bank1
  5073  0B58  00D5               	movwf	_knob_5_pos^(0+128)
  5074                           
  5075                           ;main.c: 242: if (knob_1_pos - knob1_prev >= 4 || knob_1_pos - knob1_prev <= -4) {
  5076  0B59  0966               	comf	_knob1_prev^(0+128),w
  5077  0B5A  00AA               	movwf	??_main^(0+128)
  5078  0B5B  0967               	comf	(_knob1_prev+1)^(0+128),w
  5079  0B5C  00AB               	movwf	(??_main^(0+128)+1)
  5080  0B5D  0AAA               	incf	??_main^(0+128),f
  5081  0B5E  1903               	skipnz
  5082  0B5F  0AAB               	incf	(??_main^(0+128)+1),f
  5083  0B60  084D               	movf	_knob_1_pos^(0+128),w
  5084  0B61  072A               	addwf	??_main^(0+128),w
  5085  0B62  00AC               	movwf	(??_main+2)^(0+128)
  5086  0B63  084E               	movf	(_knob_1_pos+1)^(0+128),w
  5087  0B64  3D2B               	addwfc	(??_main+1)^(0+128),w
  5088  0B65  00AD               	movwf	(??_main+3)^(0+128)
  5089  0B66  082D               	movf	(??_main+3)^(0+128),w
  5090  0B67  3A80               	xorlw	128
  5091  0B68  00AE               	movwf	(??_main+4)^(0+128)
  5092  0B69  3080               	movlw	128
  5093  0B6A  022E               	subwf	(??_main+4)^(0+128),w
  5094  0B6B  1D03               	skipz
  5095  0B6C  2B6F               	goto	u3665
  5096  0B6D  3004               	movlw	4
  5097  0B6E  022C               	subwf	(??_main+2)^(0+128),w
  5098  0B6F                     u3665:	
  5099  0B6F  1803               	skipnc
  5100  0B70  2B8A               	goto	l3360
  5101  0B71  0021               	movlb	1	; select bank1
  5102  0B72  0966               	comf	_knob1_prev^(0+128),w
  5103  0B73  00AA               	movwf	??_main^(0+128)
  5104  0B74  0967               	comf	(_knob1_prev+1)^(0+128),w
  5105  0B75  00AB               	movwf	(??_main^(0+128)+1)
  5106  0B76  0AAA               	incf	??_main^(0+128),f
  5107  0B77  1903               	skipnz
  5108  0B78  0AAB               	incf	(??_main^(0+128)+1),f
  5109  0B79  084D               	movf	_knob_1_pos^(0+128),w
  5110  0B7A  072A               	addwf	??_main^(0+128),w
  5111  0B7B  00AC               	movwf	(??_main+2)^(0+128)
  5112  0B7C  084E               	movf	(_knob_1_pos+1)^(0+128),w
  5113  0B7D  3D2B               	addwfc	(??_main+1)^(0+128),w
  5114  0B7E  00AD               	movwf	(??_main+3)^(0+128)
  5115  0B7F  082D               	movf	(??_main+3)^(0+128),w
  5116  0B80  3A80               	xorlw	128
  5117  0B81  00AE               	movwf	(??_main+4)^(0+128)
  5118  0B82  307F               	movlw	127
  5119  0B83  022E               	subwf	(??_main+4)^(0+128),w
  5120  0B84  1D03               	skipz
  5121  0B85  2B88               	goto	u3675
  5122  0B86  30FD               	movlw	253
  5123  0B87  022C               	subwf	(??_main+2)^(0+128),w
  5124  0B88                     u3675:	
  5125  0B88  1803               	skipnc
  5126  0B89  2C1C               	goto	l3366
  5127  0B8A                     l3360:	
  5128                           
  5129                           ;main.c: 243: knob1_prev = knob_1_pos;
  5130  0B8A  0021               	movlb	1	; select bank1
  5131  0B8B  084E               	movf	(_knob_1_pos+1)^(0+128),w
  5132  0B8C  00E7               	movwf	(_knob1_prev+1)^(0+128)
  5133  0B8D  084D               	movf	_knob_1_pos^(0+128),w
  5134  0B8E  00E6               	movwf	_knob1_prev^(0+128)
  5135                           
  5136                           ;main.c: 244: int i = map(knob1_prev, 0, 1023, 0, 255);
  5137  0B8F  3000               	movlw	0
  5138  0B90  0020               	movlb	0	; select bank0
  5139  0B91  00E1               	movwf	map@out_max
  5140  0B92  307F               	movlw	127
  5141  0B93  00E2               	movwf	map@out_max+1
  5142  0B94  3043               	movlw	67
  5143  0B95  00E3               	movwf	map@out_max+2
  5144  0B96  3000               	movlw	0
  5145  0B97  00DE               	movwf	map@out_min
  5146  0B98  3000               	movlw	0
  5147  0B99  00DF               	movwf	map@out_min+1
  5148  0B9A  3000               	movlw	0
  5149  0B9B  00E0               	movwf	map@out_min+2
  5150  0B9C  30C0               	movlw	192
  5151  0B9D  00DB               	movwf	map@in_max
  5152  0B9E  307F               	movlw	127
  5153  0B9F  00DC               	movwf	map@in_max+1
  5154  0BA0  3044               	movlw	68
  5155  0BA1  00DD               	movwf	map@in_max+2
  5156  0BA2  3000               	movlw	0
  5157  0BA3  00D8               	movwf	map@in_min
  5158  0BA4  3000               	movlw	0
  5159  0BA5  00D9               	movwf	map@in_min+1
  5160  0BA6  3000               	movlw	0
  5161  0BA7  00DA               	movwf	map@in_min+2
  5162  0BA8  0021               	movlb	1	; select bank1
  5163  0BA9  0867               	movf	(_knob1_prev+1)^(0+128),w
  5164  0BAA  0020               	movlb	0	; select bank0
  5165  0BAB  00A9               	movwf	___awtoft@c+1
  5166  0BAC  0021               	movlb	1	; select bank1
  5167  0BAD  0866               	movf	_knob1_prev^(0+128),w
  5168  0BAE  0020               	movlb	0	; select bank0
  5169  0BAF  00A8               	movwf	___awtoft@c
  5170  0BB0  3190  207A  3189   	fcall	___awtoft
  5171  0BB3  0020               	movlb	0	; select bank0
  5172  0BB4  0828               	movf	?___awtoft,w
  5173  0BB5  00D5               	movwf	map@x
  5174  0BB6  0829               	movf	?___awtoft+1,w
  5175  0BB7  00D6               	movwf	map@x+1
  5176  0BB8  082A               	movf	?___awtoft+2,w
  5177  0BB9  00D7               	movwf	map@x+2
  5178  0BBA  3197  2775  3189   	fcall	_map
  5179  0BBD  0020               	movlb	0	; select bank0
  5180  0BBE  0855               	movf	?_map,w
  5181  0BBF  00E7               	movwf	___fttol@f1
  5182  0BC0  0856               	movf	?_map+1,w
  5183  0BC1  00E8               	movwf	___fttol@f1+1
  5184  0BC2  0857               	movf	?_map+2,w
  5185  0BC3  00E9               	movwf	___fttol@f1+2
  5186  0BC4  3188  206E  3189   	fcall	___fttol
  5187  0BC7  0020               	movlb	0	; select bank0
  5188  0BC8  0868               	movf	?___fttol+1,w
  5189  0BC9  0021               	movlb	1	; select bank1
  5190  0BCA  00BA               	movwf	(main@i+1)^(0+128)
  5191  0BCB  0020               	movlb	0	; select bank0
  5192  0BCC  0867               	movf	?___fttol,w
  5193  0BCD  0021               	movlb	1	; select bank1
  5194  0BCE  00B9               	movwf	main@i^(0+128)
  5195                           
  5196                           ;main.c: 245: baseline_delay_time = map(knob1_prev, 0, 1023, 1172, 200);
  5197  0BCF  3000               	movlw	0
  5198  0BD0  0020               	movlb	0	; select bank0
  5199  0BD1  00E1               	movwf	map@out_max
  5200  0BD2  3048               	movlw	72
  5201  0BD3  00E2               	movwf	map@out_max+1
  5202  0BD4  3043               	movlw	67
  5203  0BD5  00E3               	movwf	map@out_max+2
  5204  0BD6  3080               	movlw	128
  5205  0BD7  00DE               	movwf	map@out_min
  5206  0BD8  3092               	movlw	146
  5207  0BD9  00DF               	movwf	map@out_min+1
  5208  0BDA  3044               	movlw	68
  5209  0BDB  00E0               	movwf	map@out_min+2
  5210  0BDC  30C0               	movlw	192
  5211  0BDD  00DB               	movwf	map@in_max
  5212  0BDE  307F               	movlw	127
  5213  0BDF  00DC               	movwf	map@in_max+1
  5214  0BE0  3044               	movlw	68
  5215  0BE1  00DD               	movwf	map@in_max+2
  5216  0BE2  3000               	movlw	0
  5217  0BE3  00D8               	movwf	map@in_min
  5218  0BE4  3000               	movlw	0
  5219  0BE5  00D9               	movwf	map@in_min+1
  5220  0BE6  3000               	movlw	0
  5221  0BE7  00DA               	movwf	map@in_min+2
  5222  0BE8  0021               	movlb	1	; select bank1
  5223  0BE9  0867               	movf	(_knob1_prev+1)^(0+128),w
  5224  0BEA  0020               	movlb	0	; select bank0
  5225  0BEB  00A9               	movwf	___awtoft@c+1
  5226  0BEC  0021               	movlb	1	; select bank1
  5227  0BED  0866               	movf	_knob1_prev^(0+128),w
  5228  0BEE  0020               	movlb	0	; select bank0
  5229  0BEF  00A8               	movwf	___awtoft@c
  5230  0BF0  3190  207A  3189   	fcall	___awtoft
  5231  0BF3  0020               	movlb	0	; select bank0
  5232  0BF4  0828               	movf	?___awtoft,w
  5233  0BF5  00D5               	movwf	map@x
  5234  0BF6  0829               	movf	?___awtoft+1,w
  5235  0BF7  00D6               	movwf	map@x+1
  5236  0BF8  082A               	movf	?___awtoft+2,w
  5237  0BF9  00D7               	movwf	map@x+2
  5238  0BFA  3197  2775  3189   	fcall	_map
  5239  0BFD  0020               	movlb	0	; select bank0
  5240  0BFE  0855               	movf	?_map,w
  5241  0BFF  00E7               	movwf	___fttol@f1
  5242  0C00  0856               	movf	?_map+1,w
  5243  0C01  00E8               	movwf	___fttol@f1+1
  5244  0C02  0857               	movf	?_map+2,w
  5245  0C03  00E9               	movwf	___fttol@f1+2
  5246  0C04  3188  206E  3189   	fcall	___fttol
  5247  0C07  0020               	movlb	0	; select bank0
  5248  0C08  086A               	movf	?___fttol+3,w
  5249  0C09  0021               	movlb	1	; select bank1
  5250  0C0A  00E1               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  5251  0C0B  0020               	movlb	0	; select bank0
  5252  0C0C  0869               	movf	?___fttol+2,w
  5253  0C0D  0021               	movlb	1	; select bank1
  5254  0C0E  00E0               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  5255  0C0F  0020               	movlb	0	; select bank0
  5256  0C10  0868               	movf	?___fttol+1,w
  5257  0C11  0021               	movlb	1	; select bank1
  5258  0C12  00DF               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  5259  0C13  0020               	movlb	0	; select bank0
  5260  0C14  0867               	movf	?___fttol,w
  5261  0C15  0021               	movlb	1	; select bank1
  5262  0C16  00DE               	movwf	_baseline_delay_time^(0+128)	;volatile
  5263                           
  5264                           ;main.c: 246: delay_time_changed = 1;
  5265  0C17  3001               	movlw	1
  5266  0C18  0022               	movlb	2	; select bank2
  5267  0C19  00E0               	movwf	_delay_time_changed^(0+256)
  5268  0C1A  3000               	movlw	0
  5269  0C1B  00E1               	movwf	(_delay_time_changed^(0+256)+1)
  5270  0C1C                     l3366:	
  5271                           
  5272                           ;main.c: 247: }
  5273                           ;main.c: 256: if (knob_2_pos - knob2_prev >= 4 || knob_2_pos - knob2_prev <= -4) {
  5274  0C1C  0021               	movlb	1	; select bank1
  5275  0C1D  0968               	comf	_knob2_prev^(0+128),w
  5276  0C1E  00AA               	movwf	??_main^(0+128)
  5277  0C1F  0969               	comf	(_knob2_prev+1)^(0+128),w
  5278  0C20  00AB               	movwf	(??_main^(0+128)+1)
  5279  0C21  0AAA               	incf	??_main^(0+128),f
  5280  0C22  1903               	skipnz
  5281  0C23  0AAB               	incf	(??_main^(0+128)+1),f
  5282  0C24  084F               	movf	_knob_2_pos^(0+128),w
  5283  0C25  072A               	addwf	??_main^(0+128),w
  5284  0C26  00AC               	movwf	(??_main+2)^(0+128)
  5285  0C27  0850               	movf	(_knob_2_pos+1)^(0+128),w
  5286  0C28  3D2B               	addwfc	(??_main+1)^(0+128),w
  5287  0C29  00AD               	movwf	(??_main+3)^(0+128)
  5288  0C2A  082D               	movf	(??_main+3)^(0+128),w
  5289  0C2B  3A80               	xorlw	128
  5290  0C2C  00AE               	movwf	(??_main+4)^(0+128)
  5291  0C2D  3080               	movlw	128
  5292  0C2E  022E               	subwf	(??_main+4)^(0+128),w
  5293  0C2F  1D03               	skipz
  5294  0C30  2C33               	goto	u3685
  5295  0C31  3004               	movlw	4
  5296  0C32  022C               	subwf	(??_main+2)^(0+128),w
  5297  0C33                     u3685:	
  5298  0C33  1803               	skipnc
  5299  0C34  2C4E               	goto	l3370
  5300  0C35  0021               	movlb	1	; select bank1
  5301  0C36  0968               	comf	_knob2_prev^(0+128),w
  5302  0C37  00AA               	movwf	??_main^(0+128)
  5303  0C38  0969               	comf	(_knob2_prev+1)^(0+128),w
  5304  0C39  00AB               	movwf	(??_main^(0+128)+1)
  5305  0C3A  0AAA               	incf	??_main^(0+128),f
  5306  0C3B  1903               	skipnz
  5307  0C3C  0AAB               	incf	(??_main^(0+128)+1),f
  5308  0C3D  084F               	movf	_knob_2_pos^(0+128),w
  5309  0C3E  072A               	addwf	??_main^(0+128),w
  5310  0C3F  00AC               	movwf	(??_main+2)^(0+128)
  5311  0C40  0850               	movf	(_knob_2_pos+1)^(0+128),w
  5312  0C41  3D2B               	addwfc	(??_main+1)^(0+128),w
  5313  0C42  00AD               	movwf	(??_main+3)^(0+128)
  5314  0C43  082D               	movf	(??_main+3)^(0+128),w
  5315  0C44  3A80               	xorlw	128
  5316  0C45  00AE               	movwf	(??_main+4)^(0+128)
  5317  0C46  307F               	movlw	127
  5318  0C47  022E               	subwf	(??_main+4)^(0+128),w
  5319  0C48  1D03               	skipz
  5320  0C49  2C4C               	goto	u3695
  5321  0C4A  30FD               	movlw	253
  5322  0C4B  022C               	subwf	(??_main+2)^(0+128),w
  5323  0C4C                     u3695:	
  5324  0C4C  1803               	skipnc
  5325  0C4D  2CA8               	goto	l3378
  5326  0C4E                     l3370:	
  5327                           
  5328                           ;main.c: 257: knob2_prev = knob_2_pos;
  5329  0C4E  0021               	movlb	1	; select bank1
  5330  0C4F  0850               	movf	(_knob_2_pos+1)^(0+128),w
  5331  0C50  00E9               	movwf	(_knob2_prev+1)^(0+128)
  5332  0C51  084F               	movf	_knob_2_pos^(0+128),w
  5333  0C52  00E8               	movwf	_knob2_prev^(0+128)
  5334                           
  5335                           ;main.c: 258: int i = map(knob2_prev, 0, 1023, 0, 39);
  5336  0C53  3000               	movlw	0
  5337  0C54  0020               	movlb	0	; select bank0
  5338  0C55  00E1               	movwf	map@out_max
  5339  0C56  301C               	movlw	28
  5340  0C57  00E2               	movwf	map@out_max+1
  5341  0C58  3042               	movlw	66
  5342  0C59  00E3               	movwf	map@out_max+2
  5343  0C5A  3000               	movlw	0
  5344  0C5B  00DE               	movwf	map@out_min
  5345  0C5C  3000               	movlw	0
  5346  0C5D  00DF               	movwf	map@out_min+1
  5347  0C5E  3000               	movlw	0
  5348  0C5F  00E0               	movwf	map@out_min+2
  5349  0C60  30C0               	movlw	192
  5350  0C61  00DB               	movwf	map@in_max
  5351  0C62  307F               	movlw	127
  5352  0C63  00DC               	movwf	map@in_max+1
  5353  0C64  3044               	movlw	68
  5354  0C65  00DD               	movwf	map@in_max+2
  5355  0C66  3000               	movlw	0
  5356  0C67  00D8               	movwf	map@in_min
  5357  0C68  3000               	movlw	0
  5358  0C69  00D9               	movwf	map@in_min+1
  5359  0C6A  3000               	movlw	0
  5360  0C6B  00DA               	movwf	map@in_min+2
  5361  0C6C  0021               	movlb	1	; select bank1
  5362  0C6D  0869               	movf	(_knob2_prev+1)^(0+128),w
  5363  0C6E  0020               	movlb	0	; select bank0
  5364  0C6F  00A9               	movwf	___awtoft@c+1
  5365  0C70  0021               	movlb	1	; select bank1
  5366  0C71  0868               	movf	_knob2_prev^(0+128),w
  5367  0C72  0020               	movlb	0	; select bank0
  5368  0C73  00A8               	movwf	___awtoft@c
  5369  0C74  3190  207A  3189   	fcall	___awtoft
  5370  0C77  0020               	movlb	0	; select bank0
  5371  0C78  0828               	movf	?___awtoft,w
  5372  0C79  00D5               	movwf	map@x
  5373  0C7A  0829               	movf	?___awtoft+1,w
  5374  0C7B  00D6               	movwf	map@x+1
  5375  0C7C  082A               	movf	?___awtoft+2,w
  5376  0C7D  00D7               	movwf	map@x+2
  5377  0C7E  3197  2775  3189   	fcall	_map
  5378  0C81  0020               	movlb	0	; select bank0
  5379  0C82  0855               	movf	?_map,w
  5380  0C83  00E7               	movwf	___fttol@f1
  5381  0C84  0856               	movf	?_map+1,w
  5382  0C85  00E8               	movwf	___fttol@f1+1
  5383  0C86  0857               	movf	?_map+2,w
  5384  0C87  00E9               	movwf	___fttol@f1+2
  5385  0C88  3188  206E  3189   	fcall	___fttol
  5386  0C8B  0020               	movlb	0	; select bank0
  5387  0C8C  0868               	movf	?___fttol+1,w
  5388  0C8D  0021               	movlb	1	; select bank1
  5389  0C8E  00C0               	movwf	(main@i_362+1)^(0+128)
  5390  0C8F  0020               	movlb	0	; select bank0
  5391  0C90  0867               	movf	?___fttol,w
  5392  0C91  0021               	movlb	1	; select bank1
  5393  0C92  00BF               	movwf	main@i_362^(0+128)
  5394                           
  5395                           ;main.c: 259: CCPR2 = iB25k[i];
  5396  0C93  353F               	lslf	main@i_362^(0+128),w
  5397  0C94  3EA0               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5398  0C95  0086               	movwf	6
  5399  0C96  3004               	movlw	4	; select bank9/10
  5400  0C97  0087               	movwf	7
  5401  0C98  3F40               	moviw [0]fsr1
  5402  0C99  0025               	movlb	5	; select bank5
  5403  0C9A  0098               	movwf	24	;volatile
  5404  0C9B  3F41               	moviw [1]fsr1
  5405  0C9C  0099               	movwf	25	;volatile
  5406                           
  5407                           ;main.c: 260: CCPR3 = B25k[i];
  5408  0C9D  0021               	movlb	1	; select bank1
  5409  0C9E  353F               	lslf	main@i_362^(0+128),w
  5410  0C9F  3E20               	addlw	(low (_B25k| (0+1024)))& (0+255)
  5411  0CA0  0086               	movwf	6
  5412  0CA1  3004               	movlw	4	; select bank8/9
  5413  0CA2  0087               	movwf	7
  5414  0CA3  3F40               	moviw [0]fsr1
  5415  0CA4  0026               	movlb	6	; select bank6
  5416  0CA5  0091               	movwf	17	;volatile
  5417  0CA6  3F41               	moviw [1]fsr1
  5418  0CA7  0092               	movwf	18	;volatile
  5419  0CA8                     l3378:	
  5420                           
  5421                           ;main.c: 261: }
  5422                           ;main.c: 271: if (knob_3_pos - knob3_prev >= 4 || knob_3_pos - knob3_prev <= -4) {
  5423  0CA8  0022               	movlb	2	; select bank2
  5424  0CA9  0964               	comf	_knob3_prev^(0+256),w
  5425  0CAA  0021               	movlb	1	; select bank1
  5426  0CAB  00AA               	movwf	??_main^(0+128)
  5427  0CAC  0022               	movlb	2	; select bank2
  5428  0CAD  0965               	comf	(_knob3_prev+1)^(0+256),w
  5429  0CAE  0021               	movlb	1	; select bank1
  5430  0CAF  00AB               	movwf	(??_main^(0+128)+1)
  5431  0CB0  0AAA               	incf	??_main^(0+128),f
  5432  0CB1  1903               	skipnz
  5433  0CB2  0AAB               	incf	(??_main^(0+128)+1),f
  5434  0CB3  0851               	movf	_knob_3_pos^(0+128),w
  5435  0CB4  072A               	addwf	??_main^(0+128),w
  5436  0CB5  00AC               	movwf	(??_main+2)^(0+128)
  5437  0CB6  0852               	movf	(_knob_3_pos+1)^(0+128),w
  5438  0CB7  3D2B               	addwfc	(??_main+1)^(0+128),w
  5439  0CB8  00AD               	movwf	(??_main+3)^(0+128)
  5440  0CB9  082D               	movf	(??_main+3)^(0+128),w
  5441  0CBA  3A80               	xorlw	128
  5442  0CBB  00AE               	movwf	(??_main+4)^(0+128)
  5443  0CBC  3080               	movlw	128
  5444  0CBD  022E               	subwf	(??_main+4)^(0+128),w
  5445  0CBE  1D03               	skipz
  5446  0CBF  2CC2               	goto	u3705
  5447  0CC0  3004               	movlw	4
  5448  0CC1  022C               	subwf	(??_main+2)^(0+128),w
  5449  0CC2                     u3705:	
  5450  0CC2  1803               	skipnc
  5451  0CC3  2CE0               	goto	l3382
  5452  0CC4  0022               	movlb	2	; select bank2
  5453  0CC5  0964               	comf	_knob3_prev^(0+256),w
  5454  0CC6  0021               	movlb	1	; select bank1
  5455  0CC7  00AA               	movwf	??_main^(0+128)
  5456  0CC8  0022               	movlb	2	; select bank2
  5457  0CC9  0965               	comf	(_knob3_prev+1)^(0+256),w
  5458  0CCA  0021               	movlb	1	; select bank1
  5459  0CCB  00AB               	movwf	(??_main^(0+128)+1)
  5460  0CCC  0AAA               	incf	??_main^(0+128),f
  5461  0CCD  1903               	skipnz
  5462  0CCE  0AAB               	incf	(??_main^(0+128)+1),f
  5463  0CCF  0851               	movf	_knob_3_pos^(0+128),w
  5464  0CD0  072A               	addwf	??_main^(0+128),w
  5465  0CD1  00AC               	movwf	(??_main+2)^(0+128)
  5466  0CD2  0852               	movf	(_knob_3_pos+1)^(0+128),w
  5467  0CD3  3D2B               	addwfc	(??_main+1)^(0+128),w
  5468  0CD4  00AD               	movwf	(??_main+3)^(0+128)
  5469  0CD5  082D               	movf	(??_main+3)^(0+128),w
  5470  0CD6  3A80               	xorlw	128
  5471  0CD7  00AE               	movwf	(??_main+4)^(0+128)
  5472  0CD8  307F               	movlw	127
  5473  0CD9  022E               	subwf	(??_main+4)^(0+128),w
  5474  0CDA  1D03               	skipz
  5475  0CDB  2CDE               	goto	u3715
  5476  0CDC  30FD               	movlw	253
  5477  0CDD  022C               	subwf	(??_main+2)^(0+128),w
  5478  0CDE                     u3715:	
  5479  0CDE  1803               	skipnc
  5480  0CDF  2D3D               	goto	l3390
  5481  0CE0                     l3382:	
  5482                           
  5483                           ;main.c: 272: knob3_prev = knob_3_pos;
  5484  0CE0  0021               	movlb	1	; select bank1
  5485  0CE1  0852               	movf	(_knob_3_pos+1)^(0+128),w
  5486  0CE2  0022               	movlb	2	; select bank2
  5487  0CE3  00E5               	movwf	(_knob3_prev+1)^(0+256)
  5488  0CE4  0021               	movlb	1	; select bank1
  5489  0CE5  0851               	movf	_knob_3_pos^(0+128),w
  5490  0CE6  0022               	movlb	2	; select bank2
  5491  0CE7  00E4               	movwf	_knob3_prev^(0+256)
  5492                           
  5493                           ;main.c: 273: int i = map(knob3_prev, 0, 1023, 16, 0);
  5494  0CE8  3000               	movlw	0
  5495  0CE9  0020               	movlb	0	; select bank0
  5496  0CEA  00E1               	movwf	map@out_max
  5497  0CEB  3000               	movlw	0
  5498  0CEC  00E2               	movwf	map@out_max+1
  5499  0CED  3000               	movlw	0
  5500  0CEE  00E3               	movwf	map@out_max+2
  5501  0CEF  3000               	movlw	0
  5502  0CF0  00DE               	movwf	map@out_min
  5503  0CF1  3080               	movlw	128
  5504  0CF2  00DF               	movwf	map@out_min+1
  5505  0CF3  3041               	movlw	65
  5506  0CF4  00E0               	movwf	map@out_min+2
  5507  0CF5  30C0               	movlw	192
  5508  0CF6  00DB               	movwf	map@in_max
  5509  0CF7  307F               	movlw	127
  5510  0CF8  00DC               	movwf	map@in_max+1
  5511  0CF9  3044               	movlw	68
  5512  0CFA  00DD               	movwf	map@in_max+2
  5513  0CFB  3000               	movlw	0
  5514  0CFC  00D8               	movwf	map@in_min
  5515  0CFD  3000               	movlw	0
  5516  0CFE  00D9               	movwf	map@in_min+1
  5517  0CFF  3000               	movlw	0
  5518  0D00  00DA               	movwf	map@in_min+2
  5519  0D01  0022               	movlb	2	; select bank2
  5520  0D02  0865               	movf	(_knob3_prev+1)^(0+256),w
  5521  0D03  0020               	movlb	0	; select bank0
  5522  0D04  00A9               	movwf	___awtoft@c+1
  5523  0D05  0022               	movlb	2	; select bank2
  5524  0D06  0864               	movf	_knob3_prev^(0+256),w
  5525  0D07  0020               	movlb	0	; select bank0
  5526  0D08  00A8               	movwf	___awtoft@c
  5527  0D09  3190  207A  3189   	fcall	___awtoft
  5528  0D0C  0020               	movlb	0	; select bank0
  5529  0D0D  0828               	movf	?___awtoft,w
  5530  0D0E  00D5               	movwf	map@x
  5531  0D0F  0829               	movf	?___awtoft+1,w
  5532  0D10  00D6               	movwf	map@x+1
  5533  0D11  082A               	movf	?___awtoft+2,w
  5534  0D12  00D7               	movwf	map@x+2
  5535  0D13  3197  2775  3189   	fcall	_map
  5536  0D16  0020               	movlb	0	; select bank0
  5537  0D17  0855               	movf	?_map,w
  5538  0D18  00E7               	movwf	___fttol@f1
  5539  0D19  0856               	movf	?_map+1,w
  5540  0D1A  00E8               	movwf	___fttol@f1+1
  5541  0D1B  0857               	movf	?_map+2,w
  5542  0D1C  00E9               	movwf	___fttol@f1+2
  5543  0D1D  3188  206E  3189   	fcall	___fttol
  5544  0D20  0020               	movlb	0	; select bank0
  5545  0D21  0868               	movf	?___fttol+1,w
  5546  0D22  0021               	movlb	1	; select bank1
  5547  0D23  00C2               	movwf	(main@i_363+1)^(0+128)
  5548  0D24  0020               	movlb	0	; select bank0
  5549  0D25  0867               	movf	?___fttol,w
  5550  0D26  0021               	movlb	1	; select bank1
  5551  0D27  00C1               	movwf	main@i_363^(0+128)
  5552                           
  5553                           ;main.c: 274: CCPR4 = iB25k[i];
  5554  0D28  3541               	lslf	main@i_363^(0+128),w
  5555  0D29  3EA0               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5556  0D2A  0086               	movwf	6
  5557  0D2B  3004               	movlw	4	; select bank9/10
  5558  0D2C  0087               	movwf	7
  5559  0D2D  3F40               	moviw [0]fsr1
  5560  0D2E  0026               	movlb	6	; select bank6
  5561  0D2F  0098               	movwf	24	;volatile
  5562  0D30  3F41               	moviw [1]fsr1
  5563  0D31  0099               	movwf	25	;volatile
  5564                           
  5565                           ;main.c: 275: CCPR5 = B25k[i];
  5566  0D32  0021               	movlb	1	; select bank1
  5567  0D33  3541               	lslf	main@i_363^(0+128),w
  5568  0D34  3E20               	addlw	(low (_B25k| (0+1024)))& (0+255)
  5569  0D35  0086               	movwf	6
  5570  0D36  3004               	movlw	4	; select bank8/9
  5571  0D37  0087               	movwf	7
  5572  0D38  3F40               	moviw [0]fsr1
  5573  0D39  0026               	movlb	6	; select bank6
  5574  0D3A  009C               	movwf	28	;volatile
  5575  0D3B  3F41               	moviw [1]fsr1
  5576  0D3C  009D               	movwf	29	;volatile
  5577  0D3D                     l3390:	
  5578                           
  5579                           ;main.c: 276: }
  5580                           ;main.c: 286: if (knob_4_pos - knob4_prev >= 4 || knob_4_pos - knob4_prev <= -4) {
  5581  0D3D  0022               	movlb	2	; select bank2
  5582  0D3E  0966               	comf	_knob4_prev^(0+256),w
  5583  0D3F  0021               	movlb	1	; select bank1
  5584  0D40  00AA               	movwf	??_main^(0+128)
  5585  0D41  0022               	movlb	2	; select bank2
  5586  0D42  0967               	comf	(_knob4_prev+1)^(0+256),w
  5587  0D43  0021               	movlb	1	; select bank1
  5588  0D44  00AB               	movwf	(??_main^(0+128)+1)
  5589  0D45  0AAA               	incf	??_main^(0+128),f
  5590  0D46  1903               	skipnz
  5591  0D47  0AAB               	incf	(??_main^(0+128)+1),f
  5592  0D48  0853               	movf	_knob_4_pos^(0+128),w
  5593  0D49  072A               	addwf	??_main^(0+128),w
  5594  0D4A  00AC               	movwf	(??_main+2)^(0+128)
  5595  0D4B  0854               	movf	(_knob_4_pos+1)^(0+128),w
  5596  0D4C  3D2B               	addwfc	(??_main+1)^(0+128),w
  5597  0D4D  00AD               	movwf	(??_main+3)^(0+128)
  5598  0D4E  082D               	movf	(??_main+3)^(0+128),w
  5599  0D4F  3A80               	xorlw	128
  5600  0D50  00AE               	movwf	(??_main+4)^(0+128)
  5601  0D51  3080               	movlw	128
  5602  0D52  022E               	subwf	(??_main+4)^(0+128),w
  5603  0D53  1D03               	skipz
  5604  0D54  2D57               	goto	u3725
  5605  0D55  3004               	movlw	4
  5606  0D56  022C               	subwf	(??_main+2)^(0+128),w
  5607  0D57                     u3725:	
  5608  0D57  1803               	skipnc
  5609  0D58  2D75               	goto	l3394
  5610  0D59  0022               	movlb	2	; select bank2
  5611  0D5A  0966               	comf	_knob4_prev^(0+256),w
  5612  0D5B  0021               	movlb	1	; select bank1
  5613  0D5C  00AA               	movwf	??_main^(0+128)
  5614  0D5D  0022               	movlb	2	; select bank2
  5615  0D5E  0967               	comf	(_knob4_prev+1)^(0+256),w
  5616  0D5F  0021               	movlb	1	; select bank1
  5617  0D60  00AB               	movwf	(??_main^(0+128)+1)
  5618  0D61  0AAA               	incf	??_main^(0+128),f
  5619  0D62  1903               	skipnz
  5620  0D63  0AAB               	incf	(??_main^(0+128)+1),f
  5621  0D64  0853               	movf	_knob_4_pos^(0+128),w
  5622  0D65  072A               	addwf	??_main^(0+128),w
  5623  0D66  00AC               	movwf	(??_main+2)^(0+128)
  5624  0D67  0854               	movf	(_knob_4_pos+1)^(0+128),w
  5625  0D68  3D2B               	addwfc	(??_main+1)^(0+128),w
  5626  0D69  00AD               	movwf	(??_main+3)^(0+128)
  5627  0D6A  082D               	movf	(??_main+3)^(0+128),w
  5628  0D6B  3A80               	xorlw	128
  5629  0D6C  00AE               	movwf	(??_main+4)^(0+128)
  5630  0D6D  307F               	movlw	127
  5631  0D6E  022E               	subwf	(??_main+4)^(0+128),w
  5632  0D6F  1D03               	skipz
  5633  0D70  2D73               	goto	u3735
  5634  0D71  30FD               	movlw	253
  5635  0D72  022C               	subwf	(??_main+2)^(0+128),w
  5636  0D73                     u3735:	
  5637  0D73  1803               	skipnc
  5638  0D74  2DBD               	goto	l3398
  5639  0D75                     l3394:	
  5640                           
  5641                           ;main.c: 287: knob4_prev = knob_4_pos;
  5642  0D75  0021               	movlb	1	; select bank1
  5643  0D76  0854               	movf	(_knob_4_pos+1)^(0+128),w
  5644  0D77  0022               	movlb	2	; select bank2
  5645  0D78  00E7               	movwf	(_knob4_prev+1)^(0+256)
  5646  0D79  0021               	movlb	1	; select bank1
  5647  0D7A  0853               	movf	_knob_4_pos^(0+128),w
  5648  0D7B  0022               	movlb	2	; select bank2
  5649  0D7C  00E6               	movwf	_knob4_prev^(0+256)
  5650                           
  5651                           ;main.c: 288: mod_delay_time = map(knob4_prev, 0, 1023, 60, 1000);
  5652  0D7D  3000               	movlw	0
  5653  0D7E  0020               	movlb	0	; select bank0
  5654  0D7F  00E1               	movwf	map@out_max
  5655  0D80  307A               	movlw	122
  5656  0D81  00E2               	movwf	map@out_max+1
  5657  0D82  3044               	movlw	68
  5658  0D83  00E3               	movwf	map@out_max+2
  5659  0D84  3000               	movlw	0
  5660  0D85  00DE               	movwf	map@out_min
  5661  0D86  3070               	movlw	112
  5662  0D87  00DF               	movwf	map@out_min+1
  5663  0D88  3042               	movlw	66
  5664  0D89  00E0               	movwf	map@out_min+2
  5665  0D8A  30C0               	movlw	192
  5666  0D8B  00DB               	movwf	map@in_max
  5667  0D8C  307F               	movlw	127
  5668  0D8D  00DC               	movwf	map@in_max+1
  5669  0D8E  3044               	movlw	68
  5670  0D8F  00DD               	movwf	map@in_max+2
  5671  0D90  3000               	movlw	0
  5672  0D91  00D8               	movwf	map@in_min
  5673  0D92  3000               	movlw	0
  5674  0D93  00D9               	movwf	map@in_min+1
  5675  0D94  3000               	movlw	0
  5676  0D95  00DA               	movwf	map@in_min+2
  5677  0D96  0022               	movlb	2	; select bank2
  5678  0D97  0867               	movf	(_knob4_prev+1)^(0+256),w
  5679  0D98  0020               	movlb	0	; select bank0
  5680  0D99  00A9               	movwf	___awtoft@c+1
  5681  0D9A  0022               	movlb	2	; select bank2
  5682  0D9B  0866               	movf	_knob4_prev^(0+256),w
  5683  0D9C  0020               	movlb	0	; select bank0
  5684  0D9D  00A8               	movwf	___awtoft@c
  5685  0D9E  3190  207A  3189   	fcall	___awtoft
  5686  0DA1  0020               	movlb	0	; select bank0
  5687  0DA2  0828               	movf	?___awtoft,w
  5688  0DA3  00D5               	movwf	map@x
  5689  0DA4  0829               	movf	?___awtoft+1,w
  5690  0DA5  00D6               	movwf	map@x+1
  5691  0DA6  082A               	movf	?___awtoft+2,w
  5692  0DA7  00D7               	movwf	map@x+2
  5693  0DA8  3197  2775  3189   	fcall	_map
  5694  0DAB  0020               	movlb	0	; select bank0
  5695  0DAC  0855               	movf	?_map,w
  5696  0DAD  00E7               	movwf	___fttol@f1
  5697  0DAE  0856               	movf	?_map+1,w
  5698  0DAF  00E8               	movwf	___fttol@f1+1
  5699  0DB0  0857               	movf	?_map+2,w
  5700  0DB1  00E9               	movwf	___fttol@f1+2
  5701  0DB2  3188  206E  3189   	fcall	___fttol
  5702  0DB5  0020               	movlb	0	; select bank0
  5703  0DB6  0868               	movf	?___fttol+1,w
  5704  0DB7  0022               	movlb	2	; select bank2
  5705  0DB8  00EB               	movwf	(_mod_delay_time+1)^(0+256)
  5706  0DB9  0020               	movlb	0	; select bank0
  5707  0DBA  0867               	movf	?___fttol,w
  5708  0DBB  0022               	movlb	2	; select bank2
  5709  0DBC  00EA               	movwf	_mod_delay_time^(0+256)
  5710  0DBD                     l3398:	
  5711                           
  5712                           ;main.c: 289: }
  5713                           ;main.c: 297: if (knob_5_pos - knob5_prev >= 4 || knob_5_pos - knob5_prev <= -4) {
  5714  0DBD  0022               	movlb	2	; select bank2
  5715  0DBE  0968               	comf	_knob5_prev^(0+256),w
  5716  0DBF  0021               	movlb	1	; select bank1
  5717  0DC0  00AA               	movwf	??_main^(0+128)
  5718  0DC1  0022               	movlb	2	; select bank2
  5719  0DC2  0969               	comf	(_knob5_prev+1)^(0+256),w
  5720  0DC3  0021               	movlb	1	; select bank1
  5721  0DC4  00AB               	movwf	(??_main^(0+128)+1)
  5722  0DC5  0AAA               	incf	??_main^(0+128),f
  5723  0DC6  1903               	skipnz
  5724  0DC7  0AAB               	incf	(??_main^(0+128)+1),f
  5725  0DC8  0855               	movf	_knob_5_pos^(0+128),w
  5726  0DC9  072A               	addwf	??_main^(0+128),w
  5727  0DCA  00AC               	movwf	(??_main+2)^(0+128)
  5728  0DCB  0856               	movf	(_knob_5_pos+1)^(0+128),w
  5729  0DCC  3D2B               	addwfc	(??_main+1)^(0+128),w
  5730  0DCD  00AD               	movwf	(??_main+3)^(0+128)
  5731  0DCE  082D               	movf	(??_main+3)^(0+128),w
  5732  0DCF  3A80               	xorlw	128
  5733  0DD0  00AE               	movwf	(??_main+4)^(0+128)
  5734  0DD1  3080               	movlw	128
  5735  0DD2  022E               	subwf	(??_main+4)^(0+128),w
  5736  0DD3  1D03               	skipz
  5737  0DD4  2DD7               	goto	u3745
  5738  0DD5  3004               	movlw	4
  5739  0DD6  022C               	subwf	(??_main+2)^(0+128),w
  5740  0DD7                     u3745:	
  5741  0DD7  1803               	skipnc
  5742  0DD8  2DF5               	goto	l3402
  5743  0DD9  0022               	movlb	2	; select bank2
  5744  0DDA  0968               	comf	_knob5_prev^(0+256),w
  5745  0DDB  0021               	movlb	1	; select bank1
  5746  0DDC  00AA               	movwf	??_main^(0+128)
  5747  0DDD  0022               	movlb	2	; select bank2
  5748  0DDE  0969               	comf	(_knob5_prev+1)^(0+256),w
  5749  0DDF  0021               	movlb	1	; select bank1
  5750  0DE0  00AB               	movwf	(??_main^(0+128)+1)
  5751  0DE1  0AAA               	incf	??_main^(0+128),f
  5752  0DE2  1903               	skipnz
  5753  0DE3  0AAB               	incf	(??_main^(0+128)+1),f
  5754  0DE4  0855               	movf	_knob_5_pos^(0+128),w
  5755  0DE5  072A               	addwf	??_main^(0+128),w
  5756  0DE6  00AC               	movwf	(??_main+2)^(0+128)
  5757  0DE7  0856               	movf	(_knob_5_pos+1)^(0+128),w
  5758  0DE8  3D2B               	addwfc	(??_main+1)^(0+128),w
  5759  0DE9  00AD               	movwf	(??_main+3)^(0+128)
  5760  0DEA  082D               	movf	(??_main+3)^(0+128),w
  5761  0DEB  3A80               	xorlw	128
  5762  0DEC  00AE               	movwf	(??_main+4)^(0+128)
  5763  0DED  307F               	movlw	127
  5764  0DEE  022E               	subwf	(??_main+4)^(0+128),w
  5765  0DEF  1D03               	skipz
  5766  0DF0  2DF3               	goto	u3755
  5767  0DF1  30FD               	movlw	253
  5768  0DF2  022C               	subwf	(??_main+2)^(0+128),w
  5769  0DF3                     u3755:	
  5770  0DF3  1803               	skipnc
  5771  0DF4  2DFD               	goto	l296
  5772  0DF5                     l3402:	
  5773                           
  5774                           ;main.c: 298: knob5_prev = knob_5_pos;
  5775  0DF5  0021               	movlb	1	; select bank1
  5776  0DF6  0856               	movf	(_knob_5_pos+1)^(0+128),w
  5777  0DF7  0022               	movlb	2	; select bank2
  5778  0DF8  00E9               	movwf	(_knob5_prev+1)^(0+256)
  5779  0DF9  0021               	movlb	1	; select bank1
  5780  0DFA  0855               	movf	_knob_5_pos^(0+128),w
  5781  0DFB  0022               	movlb	2	; select bank2
  5782  0DFC  00E8               	movwf	_knob5_prev^(0+256)
  5783  0DFD                     l296:	
  5784                           
  5785                           ;main.c: 299: }
  5786                           ;main.c: 312: if (mod_timer >= mod_delay_time) {
  5787  0DFD  0022               	movlb	2	; select bank2
  5788  0DFE  086A               	movf	_mod_delay_time^(0+256),w
  5789  0DFF  0021               	movlb	1	; select bank1
  5790  0E00  00AA               	movwf	??_main^(0+128)
  5791  0E01  0022               	movlb	2	; select bank2
  5792  0E02  086B               	movf	(_mod_delay_time+1)^(0+256),w
  5793  0E03  0021               	movlb	1	; select bank1
  5794  0E04  00AB               	movwf	(??_main^(0+128)+1)
  5795  0E05  3000               	movlw	0
  5796  0E06  1BAB               	btfsc	(??_main^(0+128)+1),7
  5797  0E07  30FF               	movlw	255
  5798  0E08  00AC               	movwf	(??_main^(0+128)+2)
  5799  0E09  00AD               	movwf	(??_main^(0+128)+3)
  5800  0E0A  0022               	movlb	2	; select bank2
  5801  0E0B  083B               	movf	(_mod_timer+3)^(0+256),w	;volatile
  5802  0E0C  3A80               	xorlw	128
  5803  0E0D  0021               	movlb	1	; select bank1
  5804  0E0E  00AE               	movwf	(??_main+4)^(0+128)
  5805  0E0F  082D               	movf	(??_main+3)^(0+128),w
  5806  0E10  3A80               	xorlw	128
  5807  0E11  022E               	subwf	(??_main+4)^(0+128),w
  5808  0E12  0022               	movlb	2	; select bank2
  5809  0E13  1D03               	skipz
  5810  0E14  2E25               	goto	u3763
  5811  0E15  0021               	movlb	1	; select bank1
  5812  0E16  082C               	movf	(??_main+2)^(0+128),w
  5813  0E17  0022               	movlb	2	; select bank2
  5814  0E18  023A               	subwf	(_mod_timer+2)^(0+256),w	;volatile
  5815  0E19  1D03               	skipz
  5816  0E1A  2E25               	goto	u3763
  5817  0E1B  0021               	movlb	1	; select bank1
  5818  0E1C  082B               	movf	(??_main+1)^(0+128),w
  5819  0E1D  0022               	movlb	2	; select bank2
  5820  0E1E  0239               	subwf	(_mod_timer+1)^(0+256),w	;volatile
  5821  0E1F  1D03               	skipz
  5822  0E20  2E25               	goto	u3763
  5823  0E21  0021               	movlb	1	; select bank1
  5824  0E22  082A               	movf	??_main^(0+128),w
  5825  0E23  0022               	movlb	2	; select bank2
  5826  0E24  0238               	subwf	_mod_timer^(0+256),w	;volatile
  5827  0E25                     u3763:	
  5828  0E25  1C03               	skipc
  5829  0E26  2F43               	goto	l3456
  5830                           
  5831                           ;main.c: 314: mod_counter = mod_counter + 1;
  5832  0E27  0021               	movlb	1	; select bank1
  5833  0E28  0857               	movf	_mod_counter^(0+128),w
  5834  0E29  3E01               	addlw	1
  5835  0E2A  00D7               	movwf	_mod_counter^(0+128)
  5836  0E2B  3000               	movlw	0
  5837  0E2C  3D58               	addwfc	(_mod_counter+1)^(0+128),w
  5838  0E2D  00D8               	movwf	(_mod_counter+1)^(0+128)
  5839                           
  5840                           ;main.c: 315: mod_timer = 0;
  5841  0E2E  3000               	movlw	0
  5842  0E2F  0022               	movlb	2	; select bank2
  5843  0E30  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
  5844  0E31  3000               	movlw	0
  5845  0E32  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
  5846  0E33  3000               	movlw	0
  5847  0E34  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
  5848  0E35  3000               	movlw	0
  5849  0E36  00B8               	movwf	_mod_timer^(0+256)	;volatile
  5850                           
  5851                           ;main.c: 317: if (bottom_push_state == 1 || bottom_push_state == 5) {
  5852  0E37  0021               	movlb	1	; select bank1
  5853  0E38  036E               	decf	_bottom_push_state^(0+128),w
  5854  0E39  1903               	btfsc	3,2
  5855  0E3A  2E3F               	goto	l3412
  5856  0E3B  3005               	movlw	5
  5857  0E3C  066E               	xorwf	_bottom_push_state^(0+128),w
  5858  0E3D  1D03               	btfss	3,2
  5859  0E3E  2E48               	goto	l3416
  5860  0E3F                     l3412:	
  5861                           
  5862                           ;main.c: 318: if (mod_counter >= 61) {
  5863  0E3F  0858               	movf	(_mod_counter+1)^(0+128),w
  5864  0E40  3A80               	xorlw	128
  5865  0E41  00AA               	movwf	??_main^(0+128)
  5866  0E42  3080               	movlw	128
  5867  0E43  022A               	subwf	??_main^(0+128),w
  5868  0E44  1D03               	skipz
  5869  0E45  2E51               	goto	u3805
  5870  0E46  303D               	movlw	61
  5871  0E47  2E50               	goto	L1
  5872  0E48                     l3416:	
  5873                           ;main.c: 320: }
  5874                           ;main.c: 321: } else {
  5875                           
  5876                           ;main.c: 319: mod_counter = 0;
  5877                           
  5878                           
  5879                           ;main.c: 322: if (mod_counter > 31) {
  5880  0E48  0858               	movf	(_mod_counter+1)^(0+128),w
  5881  0E49  3A80               	xorlw	128
  5882  0E4A  00AA               	movwf	??_main^(0+128)
  5883  0E4B  3080               	movlw	128
  5884  0E4C  022A               	subwf	??_main^(0+128),w
  5885  0E4D  1D03               	skipz
  5886  0E4E  2E51               	goto	u3805
  5887  0E4F  3020               	movlw	32
  5888  0E50                     L1:	
  5889  0E50  0257               	subwf	_mod_counter^(0+128),w
  5890  0E51                     u3805:	
  5891  0E51  1C03               	skipc
  5892  0E52  2E56               	goto	l3420
  5893                           
  5894                           ;main.c: 323: mod_counter = 0;
  5895  0E53  0021               	movlb	1	; select bank1
  5896  0E54  01D7               	clrf	_mod_counter^(0+128)
  5897  0E55  01D8               	clrf	(_mod_counter+1)^(0+128)
  5898  0E56                     l3420:	
  5899                           
  5900                           ;main.c: 324: }
  5901                           ;main.c: 325: }
  5902                           ;main.c: 328: signed int adjusted_pot_value = map(knob5_prev, 0, 1023, 1275, 0);
  5903  0E56  3000               	movlw	0
  5904  0E57  0020               	movlb	0	; select bank0
  5905  0E58  00E1               	movwf	map@out_max
  5906  0E59  3000               	movlw	0
  5907  0E5A  00E2               	movwf	map@out_max+1
  5908  0E5B  3000               	movlw	0
  5909  0E5C  00E3               	movwf	map@out_max+2
  5910  0E5D  3060               	movlw	96
  5911  0E5E  00DE               	movwf	map@out_min
  5912  0E5F  309F               	movlw	159
  5913  0E60  00DF               	movwf	map@out_min+1
  5914  0E61  3044               	movlw	68
  5915  0E62  00E0               	movwf	map@out_min+2
  5916  0E63  30C0               	movlw	192
  5917  0E64  00DB               	movwf	map@in_max
  5918  0E65  307F               	movlw	127
  5919  0E66  00DC               	movwf	map@in_max+1
  5920  0E67  3044               	movlw	68
  5921  0E68  00DD               	movwf	map@in_max+2
  5922  0E69  3000               	movlw	0
  5923  0E6A  00D8               	movwf	map@in_min
  5924  0E6B  3000               	movlw	0
  5925  0E6C  00D9               	movwf	map@in_min+1
  5926  0E6D  3000               	movlw	0
  5927  0E6E  00DA               	movwf	map@in_min+2
  5928  0E6F  0022               	movlb	2	; select bank2
  5929  0E70  0869               	movf	(_knob5_prev+1)^(0+256),w
  5930  0E71  0020               	movlb	0	; select bank0
  5931  0E72  00A9               	movwf	___awtoft@c+1
  5932  0E73  0022               	movlb	2	; select bank2
  5933  0E74  0868               	movf	_knob5_prev^(0+256),w
  5934  0E75  0020               	movlb	0	; select bank0
  5935  0E76  00A8               	movwf	___awtoft@c
  5936  0E77  3190  207A  3189   	fcall	___awtoft
  5937  0E7A  0020               	movlb	0	; select bank0
  5938  0E7B  0828               	movf	?___awtoft,w
  5939  0E7C  00D5               	movwf	map@x
  5940  0E7D  0829               	movf	?___awtoft+1,w
  5941  0E7E  00D6               	movwf	map@x+1
  5942  0E7F  082A               	movf	?___awtoft+2,w
  5943  0E80  00D7               	movwf	map@x+2
  5944  0E81  3197  2775  3189   	fcall	_map
  5945  0E84  0020               	movlb	0	; select bank0
  5946  0E85  0855               	movf	?_map,w
  5947  0E86  00E7               	movwf	___fttol@f1
  5948  0E87  0856               	movf	?_map+1,w
  5949  0E88  00E8               	movwf	___fttol@f1+1
  5950  0E89  0857               	movf	?_map+2,w
  5951  0E8A  00E9               	movwf	___fttol@f1+2
  5952  0E8B  3188  206E  3189   	fcall	___fttol
  5953  0E8E  0020               	movlb	0	; select bank0
  5954  0E8F  0868               	movf	?___fttol+1,w
  5955  0E90  0021               	movlb	1	; select bank1
  5956  0E91  00BE               	movwf	(main@adjusted_pot_value+1)^(0+128)
  5957  0E92  0020               	movlb	0	; select bank0
  5958  0E93  0867               	movf	?___fttol,w
  5959  0E94  0021               	movlb	1	; select bank1
  5960  0E95  00BD               	movwf	main@adjusted_pot_value^(0+128)
  5961                           
  5962                           ;main.c: 329: switch (bottom_push_state) {
  5963  0E96  2EF2               	goto	l3450
  5964  0E97                     l3422:	
  5965                           ;main.c: 330: case 1:
  5966                           
  5967                           
  5968                           ;main.c: 331: mod_value = mod5[mod_counter];
  5969  0E97  0858               	movf	(_mod_counter+1)^(0+128),w
  5970  0E98  00AB               	movwf	(??_main^(0+128)+1)
  5971  0E99  0857               	movf	_mod_counter^(0+128),w
  5972  0E9A  00AA               	movwf	??_main^(0+128)
  5973  0E9B  35AA               	lslf	??_main^(0+128),f
  5974  0E9C  0DAB               	rlf	(??_main^(0+128)+1),f
  5975  0E9D  3078               	movlw	120
  5976  0E9E  00AC               	movwf	(??_main+2)^(0+128)
  5977  0E9F  3023               	movlw	35
  5978  0EA0  00AD               	movwf	((??_main+2)^(0+128)+1)
  5979  0EA1  082A               	movf	??_main^(0+128),w
  5980  0EA2  072C               	addwf	(??_main+2)^(0+128),w
  5981  0EA3  0086               	movwf	6
  5982  0EA4  082B               	movf	(??_main+1)^(0+128),w
  5983  0EA5  3D2D               	addwfc	(??_main+3)^(0+128),w
  5984  0EA6  0087               	movwf	7
  5985  0EA7  3F40               	moviw [0]fsr1
  5986  0EA8  0022               	movlb	2	; select bank2
  5987  0EA9  00DA               	movwf	_mod_value^(0+256)
  5988  0EAA  3F41               	moviw [1]fsr1
  5989  0EAB  2ECC               	goto	L4
  5990  0EAC                     l3426:	
  5991                           ;main.c: 334: case 2:
  5992                           
  5993                           ;main.c: 333: break;
  5994                           
  5995                           ;main.c: 332: PORTCbits.RC4 = 0;
  5996                           
  5997                           
  5998                           ;main.c: 335: mod_value = mod2[mod_counter];
  5999  0EAC  0021               	movlb	1	; select bank1
  6000  0EAD  3557               	lslf	_mod_counter^(0+128),w
  6001  0EAE  3EA0               	addlw	(low (_mod2| (0+512)))& (0+255)
  6002  0EAF  0086               	movwf	6
  6003  0EB0  3002               	movlw	2	; select bank5/6
  6004  0EB1  0087               	movwf	7
  6005  0EB2  3F40               	moviw [0]fsr1
  6006  0EB3  0022               	movlb	2	; select bank2
  6007  0EB4  00DA               	movwf	_mod_value^(0+256)
  6008  0EB5  3F41               	moviw [1]fsr1
  6009  0EB6  2ECC               	goto	L4
  6010  0EB7                     l3430:	
  6011                           ;main.c: 338: case 3:
  6012                           
  6013                           ;main.c: 337: break;
  6014                           
  6015                           ;main.c: 336: PORTCbits.RC4 = 0;
  6016                           
  6017                           
  6018                           ;main.c: 339: mod_value = mod3[mod_counter];
  6019  0EB7  0021               	movlb	1	; select bank1
  6020  0EB8  3557               	lslf	_mod_counter^(0+128),w
  6021  0EB9  3E20               	addlw	(low (_mod3| (0+768)))& (0+255)
  6022  0EBA  0086               	movwf	6
  6023  0EBB  3003               	movlw	3	; select bank6/7
  6024  0EBC  0087               	movwf	7
  6025  0EBD  3F40               	moviw [0]fsr1
  6026  0EBE  0022               	movlb	2	; select bank2
  6027  0EBF  00DA               	movwf	_mod_value^(0+256)
  6028  0EC0  3F41               	moviw [1]fsr1
  6029  0EC1  2ECC               	goto	L4
  6030  0EC2                     l3434:	
  6031                           ;main.c: 342: case 4:
  6032                           
  6033                           ;main.c: 341: break;
  6034                           
  6035                           ;main.c: 340: PORTCbits.RC4 = 0;
  6036                           
  6037                           
  6038                           ;main.c: 343: mod_value = mod4[mod_counter];
  6039  0EC2  0021               	movlb	1	; select bank1
  6040  0EC3  3557               	lslf	_mod_counter^(0+128),w
  6041  0EC4  3EA0               	addlw	(low (_mod4| (0+768)))& (0+255)
  6042  0EC5  0086               	movwf	6
  6043  0EC6  3003               	movlw	3	; select bank7/8
  6044  0EC7  0087               	movwf	7
  6045  0EC8  3F40               	moviw [0]fsr1
  6046  0EC9  0022               	movlb	2	; select bank2
  6047  0ECA  00DA               	movwf	_mod_value^(0+256)
  6048  0ECB  3F41               	moviw [1]fsr1
  6049  0ECC                     L4:	
  6050  0ECC  00DB               	movwf	(_mod_value+1)^(0+256)
  6051  0ECD  2EEF               	goto	l3446
  6052  0ECE                     l3438:	
  6053                           ;main.c: 346: case 5:
  6054                           
  6055                           ;main.c: 345: break;
  6056                           
  6057                           ;main.c: 344: PORTCbits.RC4 = 0;
  6058                           
  6059                           
  6060                           ;main.c: 347: mod_value = mod5[mod_counter];
  6061  0ECE  0021               	movlb	1	; select bank1
  6062  0ECF  0858               	movf	(_mod_counter+1)^(0+128),w
  6063  0ED0  00AB               	movwf	(??_main^(0+128)+1)
  6064  0ED1  0857               	movf	_mod_counter^(0+128),w
  6065  0ED2  00AA               	movwf	??_main^(0+128)
  6066  0ED3  35AA               	lslf	??_main^(0+128),f
  6067  0ED4  0DAB               	rlf	(??_main^(0+128)+1),f
  6068  0ED5  3078               	movlw	120
  6069  0ED6  00AC               	movwf	(??_main+2)^(0+128)
  6070  0ED7  3023               	movlw	35
  6071  0ED8  00AD               	movwf	((??_main+2)^(0+128)+1)
  6072  0ED9  082A               	movf	??_main^(0+128),w
  6073  0EDA  072C               	addwf	(??_main+2)^(0+128),w
  6074  0EDB  0086               	movwf	6
  6075  0EDC  082B               	movf	(??_main+1)^(0+128),w
  6076  0EDD  3D2D               	addwfc	(??_main+3)^(0+128),w
  6077  0EDE  0087               	movwf	7
  6078  0EDF  3F40               	moviw [0]fsr1
  6079  0EE0  0022               	movlb	2	; select bank2
  6080  0EE1  00DA               	movwf	_mod_value^(0+256)
  6081  0EE2  3F41               	moviw [1]fsr1
  6082  0EE3  00DB               	movwf	(_mod_value+1)^(0+256)
  6083                           
  6084                           ;main.c: 348: adjusted_pot_value = 1275;
  6085  0EE4  30FB               	movlw	251
  6086  0EE5  0021               	movlb	1	; select bank1
  6087  0EE6  00BD               	movwf	main@adjusted_pot_value^(0+128)
  6088  0EE7  3004               	movlw	4
  6089  0EE8  00BE               	movwf	(main@adjusted_pot_value^(0+128)+1)
  6090                           
  6091                           ;main.c: 349: PORTCbits.RC4 = 1;
  6092  0EE9  0020               	movlb	0	; select bank0
  6093  0EEA  160E               	bsf	14,4	;volatile
  6094                           
  6095                           ;main.c: 350: break;
  6096  0EEB  2F07               	goto	l3452
  6097  0EEC                     l3444:	
  6098                           ;main.c: 351: case 6:
  6099                           
  6100                           
  6101                           ;main.c: 352: mod_value = 0;
  6102  0EEC  0022               	movlb	2	; select bank2
  6103  0EED  01DA               	clrf	_mod_value^(0+256)
  6104  0EEE  01DB               	clrf	(_mod_value+1)^(0+256)
  6105  0EEF                     l3446:	
  6106                           
  6107                           ;main.c: 353: PORTCbits.RC4 = 0;
  6108  0EEF  0020               	movlb	0	; select bank0
  6109  0EF0  120E               	bcf	14,4	;volatile
  6110                           
  6111                           ;main.c: 355: }
  6112                           
  6113                           ;main.c: 354: break;
  6114  0EF1  2F07               	goto	l3452
  6115  0EF2                     l3450:	
  6116  0EF2  0021               	movlb	1	; select bank1
  6117  0EF3  086E               	movf	_bottom_push_state^(0+128),w
  6118                           
  6119                           ; Switch size 1, requested type "space"
  6120                           ; Number of cases is 6, Range of values is 1 to 6
  6121                           ; switch strategies available:
  6122                           ; Name         Instructions Cycles
  6123                           ; simple_byte           19    10 (average)
  6124                           ; direct_byte           21     9 (fixed)
  6125                           ; jumptable            263     9 (fixed)
  6126                           ;	Chosen strategy is simple_byte
  6127  0EF4  3A01               	xorlw	1	; case 1
  6128  0EF5  1903               	skipnz
  6129  0EF6  2E97               	goto	l3422
  6130  0EF7  3A03               	xorlw	3	; case 2
  6131  0EF8  1903               	skipnz
  6132  0EF9  2EAC               	goto	l3426
  6133  0EFA  3A01               	xorlw	1	; case 3
  6134  0EFB  1903               	skipnz
  6135  0EFC  2EB7               	goto	l3430
  6136  0EFD  3A07               	xorlw	7	; case 4
  6137  0EFE  1903               	skipnz
  6138  0EFF  2EC2               	goto	l3434
  6139  0F00  3A01               	xorlw	1	; case 5
  6140  0F01  1903               	skipnz
  6141  0F02  2ECE               	goto	l3438
  6142  0F03  3A03               	xorlw	3	; case 6
  6143  0F04  1903               	skipnz
  6144  0F05  2EEC               	goto	l3444
  6145  0F06  2F07               	goto	l3452
  6146  0F07                     l3452:	
  6147                           
  6148                           ;main.c: 356: mod_value = modulation(mod_value, adjusted_pot_value);
  6149  0F07  0022               	movlb	2	; select bank2
  6150  0F08  085B               	movf	(_mod_value+1)^(0+256),w
  6151  0F09  0020               	movlb	0	; select bank0
  6152  0F0A  00B6               	movwf	modulation@x+1
  6153  0F0B  0022               	movlb	2	; select bank2
  6154  0F0C  085A               	movf	_mod_value^(0+256),w
  6155  0F0D  0020               	movlb	0	; select bank0
  6156  0F0E  00B5               	movwf	modulation@x
  6157  0F0F  0021               	movlb	1	; select bank1
  6158  0F10  083E               	movf	(main@adjusted_pot_value+1)^(0+128),w
  6159  0F11  0020               	movlb	0	; select bank0
  6160  0F12  00B8               	movwf	modulation@y+1
  6161  0F13  0021               	movlb	1	; select bank1
  6162  0F14  083D               	movf	main@adjusted_pot_value^(0+128),w
  6163  0F15  0020               	movlb	0	; select bank0
  6164  0F16  00B7               	movwf	modulation@y
  6165  0F17  3193  2311  3189   	fcall	_modulation
  6166  0F1A  0020               	movlb	0	; select bank0
  6167  0F1B  0836               	movf	?_modulation+1,w
  6168  0F1C  0022               	movlb	2	; select bank2
  6169  0F1D  00DB               	movwf	(_mod_value+1)^(0+256)
  6170  0F1E  0020               	movlb	0	; select bank0
  6171  0F1F  0835               	movf	?_modulation,w
  6172  0F20  0022               	movlb	2	; select bank2
  6173  0F21  00DA               	movwf	_mod_value^(0+256)
  6174                           
  6175                           ;main.c: 357: CCPR9 = mod_value / 2;
  6176  0F22  3002               	movlw	2
  6177  0F23  0020               	movlb	0	; select bank0
  6178  0F24  00A0               	movwf	___awdiv@divisor
  6179  0F25  3000               	movlw	0
  6180  0F26  00A1               	movwf	___awdiv@divisor+1
  6181  0F27  0022               	movlb	2	; select bank2
  6182  0F28  085B               	movf	(_mod_value+1)^(0+256),w
  6183  0F29  0020               	movlb	0	; select bank0
  6184  0F2A  00A3               	movwf	___awdiv@dividend+1
  6185  0F2B  0022               	movlb	2	; select bank2
  6186  0F2C  085A               	movf	_mod_value^(0+256),w
  6187  0F2D  0020               	movlb	0	; select bank0
  6188  0F2E  00A2               	movwf	___awdiv@dividend
  6189  0F2F  3195  25CD  3189   	fcall	___awdiv
  6190  0F32  0020               	movlb	0	; select bank0
  6191  0F33  0821               	movf	?___awdiv+1,w
  6192  0F34  002C               	movlb	12	; select bank12
  6193  0F35  009B               	movwf	27	;volatile
  6194  0F36  0020               	movlb	0	; select bank0
  6195  0F37  0820               	movf	?___awdiv,w
  6196  0F38  002C               	movlb	12	; select bank12
  6197  0F39  009A               	movwf	26	;volatile
  6198                           
  6199                           ;main.c: 358: mod_timer = 0;
  6200  0F3A  3000               	movlw	0
  6201  0F3B  0022               	movlb	2	; select bank2
  6202  0F3C  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
  6203  0F3D  3000               	movlw	0
  6204  0F3E  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
  6205  0F3F  3000               	movlw	0
  6206  0F40  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
  6207  0F41  3000               	movlw	0
  6208  0F42  00B8               	movwf	_mod_timer^(0+256)	;volatile
  6209  0F43                     l3456:	
  6210                           
  6211                           ;main.c: 359: }
  6212                           ;main.c: 364: if (delay_time_changed == 1) {
  6213  0F43  0360               	decf	_delay_time_changed^(0+256),w
  6214  0F44  0461               	iorwf	(_delay_time_changed+1)^(0+256),w
  6215  0F45  1D03               	btfss	3,2
  6216  0F46  2919               	goto	l249
  6217                           
  6218                           ;main.c: 365: delay_time = baseline_delay_time;
  6219  0F47  0021               	movlb	1	; select bank1
  6220  0F48  0861               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
  6221  0F49  00E5               	movwf	(_delay_time+3)^(0+128)	;volatile
  6222  0F4A  0860               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
  6223  0F4B  00E4               	movwf	(_delay_time+2)^(0+128)	;volatile
  6224  0F4C  085F               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6225  0F4D  00E3               	movwf	(_delay_time+1)^(0+128)	;volatile
  6226  0F4E  085E               	movf	_baseline_delay_time^(0+128),w	;volatile
  6227  0F4F  00E2               	movwf	_delay_time^(0+128)	;volatile
  6228                           
  6229                           ;main.c: 366: delay_time = set_subdivision(baseline_delay_time, top_push_state);
  6230  0F50  085F               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6231  0F51  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  6232  0F52  085E               	movf	_baseline_delay_time^(0+128),w	;volatile
  6233  0F53  00A6               	movwf	set_subdivision@x^(0+128)
  6234  0F54  087D               	movf	_top_push_state,w	;volatile
  6235  0F55  00AA               	movwf	??_main^(0+128)
  6236  0F56  01AB               	clrf	(??_main^(0+128)+1)
  6237  0F57  082A               	movf	??_main^(0+128),w
  6238  0F58  00A8               	movwf	set_subdivision@y^(0+128)
  6239  0F59  082B               	movf	(??_main+1)^(0+128),w
  6240  0F5A  00A9               	movwf	(set_subdivision@y+1)^(0+128)
  6241  0F5B  3184  245C  3189   	fcall	_set_subdivision
  6242  0F5E  0021               	movlb	1	; select bank1
  6243  0F5F  0826               	movf	?_set_subdivision^(0+128),w
  6244  0F60  00E2               	movwf	_delay_time^(0+128)	;volatile
  6245  0F61  0827               	movf	(?_set_subdivision+1)^(0+128),w
  6246  0F62  00E3               	movwf	(_delay_time+1)^(0+128)	;volatile
  6247  0F63  0D89               	rlf	9,f
  6248  0F64  3B89               	subwfb	9,f
  6249  0F65  0989               	comf	9,f
  6250  0F66  00E4               	movwf	(_delay_time+2)^(0+128)	;volatile
  6251  0F67  00E5               	movwf	(_delay_time+3)^(0+128)	;volatile
  6252                           
  6253                           ;main.c: 367: delayfound = 0;
  6254  0F68  0022               	movlb	2	; select bank2
  6255  0F69  01D8               	clrf	_delayfound^(0+256)
  6256  0F6A  01D9               	clrf	(_delayfound+1)^(0+256)
  6257                           
  6258                           ;main.c: 368: delay_counter = 0;
  6259  0F6B  01D6               	clrf	_delay_counter^(0+256)
  6260  0F6C  01D7               	clrf	(_delay_counter+1)^(0+256)
  6261  0F6D                     l3472:	
  6262                           ;main.c: 369: while (delayfound == 0) {
  6263                           
  6264  0F6D  0022               	movlb	2	; select bank2
  6265  0F6E  0858               	movf	_delayfound^(0+256),w
  6266  0F6F  0459               	iorwf	(_delayfound+1)^(0+256),w
  6267  0F70  1D03               	btfss	3,2
  6268  0F71  2FC8               	goto	l3474
  6269                           
  6270                           ;main.c: 370: if (delay[delay_counter] <= delay_time * 2) {
  6271  0F72  0857               	movf	(_delay_counter+1)^(0+256),w
  6272  0F73  0021               	movlb	1	; select bank1
  6273  0F74  00AB               	movwf	(??_main^(0+128)+1)
  6274  0F75  0022               	movlb	2	; select bank2
  6275  0F76  0856               	movf	_delay_counter^(0+256),w
  6276  0F77  0021               	movlb	1	; select bank1
  6277  0F78  00AA               	movwf	??_main^(0+128)
  6278  0F79  35AA               	lslf	??_main^(0+128),f
  6279  0F7A  0DAB               	rlf	(??_main^(0+128)+1),f
  6280  0F7B  30F2               	movlw	242
  6281  0F7C  00AC               	movwf	(??_main+2)^(0+128)
  6282  0F7D  3023               	movlw	35
  6283  0F7E  00AD               	movwf	((??_main+2)^(0+128)+1)
  6284  0F7F  082A               	movf	??_main^(0+128),w
  6285  0F80  072C               	addwf	(??_main+2)^(0+128),w
  6286  0F81  0086               	movwf	6
  6287  0F82  082B               	movf	(??_main+1)^(0+128),w
  6288  0F83  3D2D               	addwfc	(??_main+3)^(0+128),w
  6289  0F84  0087               	movwf	7
  6290  0F85  3F40               	moviw [0]fsr1
  6291  0F86  00AE               	movwf	(??_main+4)^(0+128)
  6292  0F87  3F41               	moviw [1]fsr1
  6293  0F88  00AF               	movwf	((??_main+4)^(0+128)+1)
  6294  0F89  082E               	movf	(??_main+4)^(0+128),w
  6295  0F8A  00B0               	movwf	(??_main+6)^(0+128)
  6296  0F8B  082F               	movf	(??_main+5)^(0+128),w
  6297  0F8C  00B1               	movwf	((??_main+6)^(0+128)+1)
  6298  0F8D  3000               	movlw	0
  6299  0F8E  1BB1               	btfsc	((??_main+6)^(0+128)+1),7
  6300  0F8F  30FF               	movlw	255
  6301  0F90  00B2               	movwf	((??_main+6)^(0+128)+2)
  6302  0F91  00B3               	movwf	((??_main+6)^(0+128)+3)
  6303  0F92  0862               	movf	_delay_time^(0+128),w	;volatile
  6304  0F93  00B4               	movwf	(??_main+10)^(0+128)
  6305  0F94  0863               	movf	(_delay_time+1)^(0+128),w	;volatile
  6306  0F95  00B5               	movwf	((??_main+10)^(0+128)+1)
  6307  0F96  0864               	movf	(_delay_time+2)^(0+128),w	;volatile
  6308  0F97  00B6               	movwf	((??_main+10)^(0+128)+2)
  6309  0F98  0865               	movf	(_delay_time+3)^(0+128),w	;volatile
  6310  0F99  00B7               	movwf	((??_main+10)^(0+128)+3)
  6311  0F9A  3001               	movlw	1
  6312  0F9B                     u3825:	
  6313  0F9B  35B4               	lslf	(??_main+10)^(0+128),f
  6314  0F9C  0DB5               	rlf	((??_main+10)^(0+128)+1),f
  6315  0F9D  0DB6               	rlf	((??_main+10)^(0+128)+2),f
  6316  0F9E  0DB7               	rlf	((??_main+10)^(0+128)+3),f
  6317  0F9F  0B89               	decfsz	9,f
  6318  0FA0  2F9B               	goto	u3825
  6319  0FA1  0837               	movf	(??_main+13)^(0+128),w
  6320  0FA2  3A80               	xorlw	128
  6321  0FA3  00B8               	movwf	(??_main+14)^(0+128)
  6322  0FA4  0833               	movf	(??_main+9)^(0+128),w
  6323  0FA5  3A80               	xorlw	128
  6324  0FA6  0238               	subwf	(??_main+14)^(0+128),w
  6325  0FA7  1D03               	skipz
  6326  0FA8  2FB3               	goto	u3833
  6327  0FA9  0832               	movf	(??_main+8)^(0+128),w
  6328  0FAA  0236               	subwf	(??_main+12)^(0+128),w
  6329  0FAB  1D03               	skipz
  6330  0FAC  2FB3               	goto	u3833
  6331  0FAD  0831               	movf	(??_main+7)^(0+128),w
  6332  0FAE  0235               	subwf	(??_main+11)^(0+128),w
  6333  0FAF  1D03               	skipz
  6334  0FB0  2FB3               	goto	u3833
  6335  0FB1  0830               	movf	(??_main+6)^(0+128),w
  6336  0FB2  0234               	subwf	(??_main+10)^(0+128),w
  6337  0FB3                     u3833:	
  6338  0FB3  1C03               	skipc
  6339  0FB4  2FC2               	goto	l3470
  6340                           
  6341                           ;main.c: 371: delayfound = 1;
  6342  0FB5  3001               	movlw	1
  6343  0FB6  0022               	movlb	2	; select bank2
  6344  0FB7  00D8               	movwf	_delayfound^(0+256)
  6345  0FB8  3000               	movlw	0
  6346  0FB9  00D9               	movwf	(_delayfound^(0+256)+1)
  6347                           
  6348                           ;main.c: 372: CCPR1 = delay_counter;
  6349  0FBA  0857               	movf	(_delay_counter+1)^(0+256),w
  6350  0FBB  0025               	movlb	5	; select bank5
  6351  0FBC  0092               	movwf	18	;volatile
  6352  0FBD  0022               	movlb	2	; select bank2
  6353  0FBE  0856               	movf	_delay_counter^(0+256),w
  6354  0FBF  0025               	movlb	5	; select bank5
  6355  0FC0  0091               	movwf	17	;volatile
  6356                           
  6357                           ;main.c: 373: } else {
  6358  0FC1  2F6D               	goto	l3472
  6359  0FC2                     l3470:	
  6360                           
  6361                           ;main.c: 374: delay_counter++;
  6362  0FC2  3001               	movlw	1
  6363  0FC3  0022               	movlb	2	; select bank2
  6364  0FC4  07D6               	addwf	_delay_counter^(0+256),f
  6365  0FC5  3000               	movlw	0
  6366  0FC6  3DD7               	addwfc	(_delay_counter+1)^(0+256),f
  6367  0FC7  2F6D               	goto	l3472
  6368  0FC8                     l3474:	
  6369                           
  6370                           ;main.c: 375: }
  6371                           ;main.c: 376: }
  6372                           ;main.c: 377: mod_delay_time = delay_time / 7.5;
  6373  0FC8  0021               	movlb	1	; select bank1
  6374  0FC9  0865               	movf	(_delay_time+3)^(0+128),w	;volatile
  6375  0FCA  0020               	movlb	0	; select bank0
  6376  0FCB  00AB               	movwf	___altoft@c+3
  6377  0FCC  0021               	movlb	1	; select bank1
  6378  0FCD  0864               	movf	(_delay_time+2)^(0+128),w	;volatile
  6379  0FCE  0020               	movlb	0	; select bank0
  6380  0FCF  00AA               	movwf	___altoft@c+2
  6381  0FD0  0021               	movlb	1	; select bank1
  6382  0FD1  0863               	movf	(_delay_time+1)^(0+128),w	;volatile
  6383  0FD2  0020               	movlb	0	; select bank0
  6384  0FD3  00A9               	movwf	___altoft@c+1
  6385  0FD4  0021               	movlb	1	; select bank1
  6386  0FD5  0862               	movf	_delay_time^(0+128),w	;volatile
  6387  0FD6  0020               	movlb	0	; select bank0
  6388  0FD7  00A8               	movwf	___altoft@c
  6389  0FD8  3192  22D4  3189   	fcall	___altoft
  6390  0FDB  0020               	movlb	0	; select bank0
  6391  0FDC  0828               	movf	?___altoft,w
  6392  0FDD  00C8               	movwf	___ftdiv@f1
  6393  0FDE  0829               	movf	?___altoft+1,w
  6394  0FDF  00C9               	movwf	___ftdiv@f1+1
  6395  0FE0  082A               	movf	?___altoft+2,w
  6396  0FE1  00CA               	movwf	___ftdiv@f1+2
  6397  0FE2  3000               	movlw	0
  6398  0FE3  00C5               	movwf	___ftdiv@f2
  6399  0FE4  30F0               	movlw	240
  6400  0FE5  00C6               	movwf	___ftdiv@f2+1
  6401  0FE6  3040               	movlw	64
  6402  0FE7  00C7               	movwf	___ftdiv@f2+2
  6403  0FE8  3186  26FF  3189   	fcall	___ftdiv
  6404  0FEB  0020               	movlb	0	; select bank0
  6405  0FEC  0845               	movf	?___ftdiv,w
  6406  0FED  00E7               	movwf	___fttol@f1
  6407  0FEE  0846               	movf	?___ftdiv+1,w
  6408  0FEF  00E8               	movwf	___fttol@f1+1
  6409  0FF0  0847               	movf	?___ftdiv+2,w
  6410  0FF1  00E9               	movwf	___fttol@f1+2
  6411  0FF2  3188  206E  3189   	fcall	___fttol
  6412  0FF5  0020               	movlb	0	; select bank0
  6413  0FF6  0868               	movf	?___fttol+1,w
  6414  0FF7  0022               	movlb	2	; select bank2
  6415  0FF8  00EB               	movwf	(_mod_delay_time+1)^(0+256)
  6416  0FF9  0020               	movlb	0	; select bank0
  6417  0FFA  0867               	movf	?___fttol,w
  6418  0FFB  0022               	movlb	2	; select bank2
  6419  0FFC  00EA               	movwf	_mod_delay_time^(0+256)
  6420                           
  6421                           ;main.c: 379: delay_time_changed = 0;
  6422  0FFD  01E0               	clrf	_delay_time_changed^(0+256)
  6423  0FFE  01E1               	clrf	(_delay_time_changed+1)^(0+256)
  6424  0FFF  2919               	goto	l249
  6425  1000                     __end_of_main:	
  6426                           
  6427                           	psect	text1
  6428  1455                     __ptext1:	
  6429 ;; *************** function _update_mode *****************
  6430 ;; Defined at:
  6431 ;;		line 60 in file "tactiles.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6448 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6449 ;;Total ram usage:        1 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    2
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_main
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function _update_mode
  6461  1455                     _update_mode:	
  6462                           
  6463                           ;tactiles.c: 65: if (PORTCbits.RC0 == 0) {
  6464                           
  6465                           ;incstack = 0
  6466                           ; Regs used in _update_mode: [wreg-fsr0h+status,2+status,0]
  6467  1455  0020               	movlb	0	; select bank0
  6468  1456  180E               	btfsc	14,0	;volatile
  6469  1457  2C96               	goto	l3064
  6470                           
  6471                           ;tactiles.c: 66: debounce_mode2++;
  6472  1458  3001               	movlw	1
  6473  1459  0022               	movlb	2	; select bank2
  6474  145A  07D4               	addwf	_debounce_mode2^(0+256),f
  6475  145B  3000               	movlw	0
  6476  145C  3DD5               	addwfc	(_debounce_mode2+1)^(0+256),f
  6477                           
  6478                           ;tactiles.c: 67: if (debounce_mode2 > 25) {
  6479  145D  0855               	movf	(_debounce_mode2+1)^(0+256),w
  6480  145E  3A80               	xorlw	128
  6481  145F  0020               	movlb	0	; select bank0
  6482  1460  00A0               	movwf	??_update_mode
  6483  1461  3080               	movlw	128
  6484  1462  0220               	subwf	??_update_mode,w
  6485  1463  1D03               	skipz
  6486  1464  2C68               	goto	u3075
  6487  1465  301A               	movlw	26
  6488  1466  0022               	movlb	2	; select bank2
  6489  1467  0254               	subwf	_debounce_mode2^(0+256),w
  6490  1468                     u3075:	
  6491  1468  1C03               	skipc
  6492  1469  0008               	return
  6493                           
  6494                           ;tactiles.c: 68: debounce_mode2 = 25;
  6495  146A  3019               	movlw	25
  6496  146B  0022               	movlb	2	; select bank2
  6497  146C  00D4               	movwf	_debounce_mode2^(0+256)
  6498  146D  3000               	movlw	0
  6499  146E  00D5               	movwf	(_debounce_mode2^(0+256)+1)
  6500                           
  6501                           ;tactiles.c: 69: mode2_state++;
  6502  146F  3001               	movlw	1
  6503  1470  0020               	movlb	0	; select bank0
  6504  1471  00A0               	movwf	??_update_mode
  6505  1472  0820               	movf	??_update_mode,w
  6506  1473  0021               	movlb	1	; select bank1
  6507  1474  07DB               	addwf	_mode2_state^(0+128),f
  6508                           
  6509                           ;tactiles.c: 70: if (mode2_state > 2) {
  6510  1475  3003               	movlw	3
  6511  1476  025B               	subwf	_mode2_state^(0+128),w
  6512  1477  1C03               	skipc
  6513  1478  2C86               	goto	l3062
  6514                           
  6515                           ;tactiles.c: 71: mode2_state = 0;
  6516  1479  01DB               	clrf	_mode2_state^(0+128)
  6517                           
  6518                           ;tactiles.c: 72: }
  6519                           ;tactiles.c: 73: switch(mode2_state) {
  6520  147A  2C86               	goto	l3062
  6521  147B                     l730:	
  6522                           ;tactiles.c: 74: case 0:
  6523                           
  6524                           
  6525                           ;tactiles.c: 75: LATBbits.LATB1 = 0;
  6526  147B  0022               	movlb	2	; select bank2
  6527  147C  108D               	bcf	13,1	;volatile
  6528  147D  2C80               	goto	L5
  6529  147E                     l732:	
  6530                           ;tactiles.c: 78: case 1:
  6531                           
  6532                           ;tactiles.c: 77: break;
  6533                           
  6534                           ;tactiles.c: 76: LATBbits.LATB0 = 0;
  6535                           
  6536                           
  6537                           ;tactiles.c: 79: LATBbits.LATB1 = 1;
  6538  147E  0022               	movlb	2	; select bank2
  6539  147F  148D               	bsf	13,1	;volatile
  6540  1480                     L5:	
  6541                           
  6542                           ;tactiles.c: 80: LATBbits.LATB0 = 0;
  6543  1480  100D               	bcf	13,0	;volatile
  6544                           
  6545                           ;tactiles.c: 81: break;
  6546  1481  2C92               	goto	l734
  6547  1482                     l733:	
  6548                           ;tactiles.c: 82: case 2:
  6549                           
  6550                           
  6551                           ;tactiles.c: 83: LATBbits.LATB1 = 0;
  6552  1482  0022               	movlb	2	; select bank2
  6553  1483  108D               	bcf	13,1	;volatile
  6554                           
  6555                           ;tactiles.c: 84: LATBbits.LATB0 = 1;
  6556  1484  140D               	bsf	13,0	;volatile
  6557                           
  6558                           ;tactiles.c: 86: }
  6559                           
  6560                           ;tactiles.c: 85: break;
  6561  1485  2C92               	goto	l734
  6562  1486                     l3062:	
  6563  1486  0021               	movlb	1	; select bank1
  6564  1487  085B               	movf	_mode2_state^(0+128),w
  6565                           
  6566                           ; Switch size 1, requested type "space"
  6567                           ; Number of cases is 3, Range of values is 0 to 2
  6568                           ; switch strategies available:
  6569                           ; Name         Instructions Cycles
  6570                           ; simple_byte           10     6 (average)
  6571                           ; direct_byte           12     6 (fixed)
  6572                           ; jumptable            260     6 (fixed)
  6573                           ;	Chosen strategy is simple_byte
  6574  1488  3A00               	xorlw	0	; case 0
  6575  1489  1903               	skipnz
  6576  148A  2C7B               	goto	l730
  6577  148B  3A01               	xorlw	1	; case 1
  6578  148C  1903               	skipnz
  6579  148D  2C7E               	goto	l732
  6580  148E  3A03               	xorlw	3	; case 2
  6581  148F  1903               	skipnz
  6582  1490  2C82               	goto	l733
  6583  1491  2C92               	goto	l734
  6584  1492                     l734:	
  6585                           ;tactiles.c: 87: while (PORTCbits.RC0 == 0) {
  6586                           
  6587  1492  0020               	movlb	0	; select bank0
  6588  1493  180E               	btfsc	14,0	;volatile
  6589  1494  0008               	return
  6590  1495  2C92               	goto	l734
  6591  1496                     l3064:	
  6592                           ;tactiles.c: 88: }
  6593                           ;tactiles.c: 89: }
  6594                           ;tactiles.c: 90: } else {
  6595                           
  6596                           
  6597                           ;tactiles.c: 91: debounce_mode2 = 0;
  6598  1496  0022               	movlb	2	; select bank2
  6599  1497  01D4               	clrf	_debounce_mode2^(0+256)
  6600  1498  01D5               	clrf	(_debounce_mode2+1)^(0+256)
  6601  1499  0008               	return
  6602  149A                     __end_of_update_mode:	
  6603                           
  6604                           	psect	text2
  6605  10C2                     __ptext2:	
  6606 ;; *************** function _showBootSequence *****************
  6607 ;; Defined at:
  6608 ;;		line 86 in file "LEDs.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;		None
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6626 ;;Total ram usage:        0 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    5
  6629 ;; This function calls:
  6630 ;;		_getCurrentLEDState
  6631 ;;		_restoreLEDState
  6632 ;;		_solidring_tactiles
  6633 ;;		_star_tactiles
  6634 ;; This function is called by:
  6635 ;;		_main
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           
  6640                           ;psect for function _showBootSequence
  6641  10C2                     _showBootSequence:	
  6642                           
  6643                           ;LEDs.c: 87: getCurrentLEDState();
  6644                           
  6645                           ;incstack = 0
  6646                           ; Regs used in _showBootSequence: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6647  10C2  319F  27C6  3190   	fcall	_getCurrentLEDState
  6648                           
  6649                           ;LEDs.c: 88: suspend_blink = 1;
  6650  10C5  0021               	movlb	1	; select bank1
  6651  10C6  01EF               	clrf	_suspend_blink^(0+128)
  6652  10C7  0AEF               	incf	_suspend_blink^(0+128),f
  6653                           
  6654                           ;LEDs.c: 90: LATBbits.LATB4 = 0;
  6655  10C8  0022               	movlb	2	; select bank2
  6656  10C9  120D               	bcf	13,4	;volatile
  6657                           
  6658                           ;LEDs.c: 91: LATBbits.LATB2 = 0;
  6659  10CA  110D               	bcf	13,2	;volatile
  6660                           
  6661                           ;LEDs.c: 92: LATBbits.LATB5 = 0;
  6662  10CB  128D               	bcf	13,5	;volatile
  6663                           
  6664                           ;LEDs.c: 93: LATBbits.LATB3 = 0;
  6665  10CC  118D               	bcf	13,3	;volatile
  6666                           
  6667                           ;LEDs.c: 94: LATBbits.LATB0 = 0;
  6668  10CD  100D               	bcf	13,0	;volatile
  6669                           
  6670                           ;LEDs.c: 95: LATBbits.LATB1 = 0;
  6671  10CE  108D               	bcf	13,1	;volatile
  6672                           
  6673                           ;LEDs.c: 113: star_tactiles(0);
  6674  10CF  3000               	movlw	0
  6675  10D0  3196  2684  3190   	fcall	_star_tactiles
  6676                           
  6677                           ;LEDs.c: 114: star_tactiles(0);
  6678  10D3  3000               	movlw	0
  6679  10D4  3196  2684  3190   	fcall	_star_tactiles
  6680                           
  6681                           ;LEDs.c: 115: star_tactiles(1);
  6682  10D7  3001               	movlw	1
  6683  10D8  3196  2684  3190   	fcall	_star_tactiles
  6684                           
  6685                           ;LEDs.c: 116: star_tactiles(1);
  6686  10DB  3001               	movlw	1
  6687  10DC  3196  2684  3190   	fcall	_star_tactiles
  6688                           
  6689                           ;LEDs.c: 118: solidring_tactiles();
  6690  10DF  3193  238F  3190   	fcall	_solidring_tactiles
  6691                           
  6692                           ;LEDs.c: 119: solidring_tactiles();
  6693  10E2  3193  238F  3190   	fcall	_solidring_tactiles
  6694                           
  6695                           ;LEDs.c: 123: restoreLEDState();
  6696  10E5  319F  27EA         	fcall	_restoreLEDState
  6697  10E7  0008               	return
  6698  10E8                     __end_of_showBootSequence:	
  6699                           
  6700                           	psect	text3
  6701  1684                     __ptext3:	
  6702 ;; *************** function _star_tactiles *****************
  6703 ;; Defined at:
  6704 ;;		line 194 in file "LEDs.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  reverse         1    wreg     unsigned char 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  reverse         1   16[BANK0 ] unsigned char 
  6709 ;;  iLed            2   19[BANK0 ] int 
  6710 ;;  iLed            2   17[BANK0 ] int 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      void 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6721 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6722 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6723 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6724 ;;Total ram usage:        7 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    4
  6727 ;; This function calls:
  6728 ;;		_set_leds_bottom
  6729 ;;		_set_leds_top
  6730 ;;		_wait_ms
  6731 ;; This function is called by:
  6732 ;;		_showBootSequence
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           
  6737                           ;psect for function _star_tactiles
  6738  1684                     _star_tactiles:	
  6739                           
  6740                           ;incstack = 0
  6741                           ; Regs used in _star_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6742                           ;star_tactiles@reverse stored from wreg
  6743  1684  0020               	movlb	0	; select bank0
  6744  1685  00B0               	movwf	star_tactiles@reverse
  6745                           
  6746                           ;LEDs.c: 195: if (reverse == 1) {
  6747  1686  0330               	decf	star_tactiles@reverse,w
  6748  1687  1D03               	btfss	3,2
  6749  1688  2EB9               	goto	l2666
  6750                           
  6751                           ;LEDs.c: 196: for (int iLed = 5; iLed > -1; iLed--) {
  6752  1689  3005               	movlw	5
  6753  168A  00B1               	movwf	star_tactiles@iLed
  6754  168B  3000               	movlw	0
  6755  168C  00B2               	movwf	star_tactiles@iLed+1
  6756  168D                     L6:	
  6757  168D  1BB2               	btfsc	star_tactiles@iLed+1,7
  6758  168E  0008               	return
  6759                           
  6760                           ;LEDs.c: 197: set_leds_top(iLed, 1);
  6761  168F  0832               	movf	star_tactiles@iLed+1,w
  6762  1690  00A1               	movwf	set_leds_top@x+1
  6763  1691  0831               	movf	star_tactiles@iLed,w
  6764  1692  00A0               	movwf	set_leds_top@x
  6765  1693  3001               	movlw	1
  6766  1694  00A2               	movwf	set_leds_top@ledState
  6767  1695  3000               	movlw	0
  6768  1696  00A3               	movwf	set_leds_top@ledState+1
  6769  1697  3187  27A8  3196   	fcall	_set_leds_top
  6770                           
  6771                           ;LEDs.c: 198: set_leds_bottom(6 - iLed);
  6772  169A  0020               	movlb	0	; select bank0
  6773  169B  0931               	comf	star_tactiles@iLed,w
  6774  169C  00AE               	movwf	??_star_tactiles
  6775  169D  0932               	comf	star_tactiles@iLed+1,w
  6776  169E  00AF               	movwf	??_star_tactiles+1
  6777  169F  0AAE               	incf	??_star_tactiles,f
  6778  16A0  1903               	skipnz
  6779  16A1  0AAF               	incf	??_star_tactiles+1,f
  6780  16A2  082E               	movf	??_star_tactiles,w
  6781  16A3  3E06               	addlw	6
  6782  16A4  00A0               	movwf	set_leds_bottom@x
  6783  16A5  3000               	movlw	0
  6784  16A6  3D2F               	addwfc	??_star_tactiles+1,w
  6785  16A7  00A1               	movwf	set_leds_bottom@x+1
  6786  16A8  3192  2299  3196   	fcall	_set_leds_bottom
  6787                           
  6788                           ;LEDs.c: 199: wait_ms(5);
  6789  16AB  3005               	movlw	5
  6790  16AC  0020               	movlb	0	; select bank0
  6791  16AD  00AC               	movwf	wait_ms@time
  6792  16AE  3000               	movlw	0
  6793  16AF  00AD               	movwf	wait_ms@time+1
  6794  16B0  3191  2148  3196   	fcall	_wait_ms
  6795  16B3  30FF               	movlw	255
  6796  16B4  0020               	movlb	0	; select bank0
  6797  16B5  07B1               	addwf	star_tactiles@iLed,f
  6798  16B6  30FF               	movlw	255
  6799  16B7  3DB2               	addwfc	star_tactiles@iLed+1,f
  6800  16B8  2E8D               	goto	L6
  6801  16B9                     l2666:	
  6802                           ;LEDs.c: 200: }
  6803                           ;LEDs.c: 201: } else {
  6804                           
  6805                           
  6806                           ;LEDs.c: 202: for (int iLed = 1; iLed < 7; iLed++) {
  6807  16B9  3001               	movlw	1
  6808  16BA  00B3               	movwf	star_tactiles@iLed_1381
  6809  16BB  3000               	movlw	0
  6810  16BC  00B4               	movwf	star_tactiles@iLed_1381+1
  6811  16BD                     L7:	
  6812  16BD  0834               	movf	star_tactiles@iLed_1381+1,w
  6813  16BE  3A80               	xorlw	128
  6814  16BF  00AE               	movwf	??_star_tactiles
  6815  16C0  3080               	movlw	128
  6816  16C1  022E               	subwf	??_star_tactiles,w
  6817  16C2  1D03               	skipz
  6818  16C3  2EC6               	goto	u2245
  6819  16C4  3007               	movlw	7
  6820  16C5  0233               	subwf	star_tactiles@iLed_1381,w
  6821  16C6                     u2245:	
  6822  16C6  1803               	btfsc	3,0
  6823  16C7  0008               	return
  6824                           
  6825                           ;LEDs.c: 203: set_leds_top(iLed, 1);
  6826  16C8  0020               	movlb	0	; select bank0
  6827  16C9  0834               	movf	star_tactiles@iLed_1381+1,w
  6828  16CA  00A1               	movwf	set_leds_top@x+1
  6829  16CB  0833               	movf	star_tactiles@iLed_1381,w
  6830  16CC  00A0               	movwf	set_leds_top@x
  6831  16CD  3001               	movlw	1
  6832  16CE  00A2               	movwf	set_leds_top@ledState
  6833  16CF  3000               	movlw	0
  6834  16D0  00A3               	movwf	set_leds_top@ledState+1
  6835  16D1  3187  27A8  3196   	fcall	_set_leds_top
  6836                           
  6837                           ;LEDs.c: 204: set_leds_bottom(6 - iLed);
  6838  16D4  0020               	movlb	0	; select bank0
  6839  16D5  0933               	comf	star_tactiles@iLed_1381,w
  6840  16D6  00AE               	movwf	??_star_tactiles
  6841  16D7  0934               	comf	star_tactiles@iLed_1381+1,w
  6842  16D8  00AF               	movwf	??_star_tactiles+1
  6843  16D9  0AAE               	incf	??_star_tactiles,f
  6844  16DA  1903               	skipnz
  6845  16DB  0AAF               	incf	??_star_tactiles+1,f
  6846  16DC  082E               	movf	??_star_tactiles,w
  6847  16DD  3E06               	addlw	6
  6848  16DE  00A0               	movwf	set_leds_bottom@x
  6849  16DF  3000               	movlw	0
  6850  16E0  3D2F               	addwfc	??_star_tactiles+1,w
  6851  16E1  00A1               	movwf	set_leds_bottom@x+1
  6852  16E2  3192  2299  3196   	fcall	_set_leds_bottom
  6853                           
  6854                           ;LEDs.c: 205: wait_ms(5);
  6855  16E5  3005               	movlw	5
  6856  16E6  0020               	movlb	0	; select bank0
  6857  16E7  00AC               	movwf	wait_ms@time
  6858  16E8  3000               	movlw	0
  6859  16E9  00AD               	movwf	wait_ms@time+1
  6860  16EA  3191  2148  3196   	fcall	_wait_ms
  6861  16ED  3001               	movlw	1
  6862  16EE  0020               	movlb	0	; select bank0
  6863  16EF  07B3               	addwf	star_tactiles@iLed_1381,f
  6864  16F0  3000               	movlw	0
  6865  16F1  3DB4               	addwfc	star_tactiles@iLed_1381+1,f
  6866  16F2  2EBD               	goto	L7
  6867  16F3                     __end_of_star_tactiles:	
  6868                           
  6869                           	psect	text4
  6870  138F                     __ptext4:	
  6871 ;; *************** function _solidring_tactiles *****************
  6872 ;; Defined at:
  6873 ;;		line 223 in file "LEDs.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;		None
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;  ring_delay      1   16[BANK0 ] unsigned char 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      void 
  6880 ;; Registers used:
  6881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6889 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6890 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6891 ;;Total ram usage:        3 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:    4
  6894 ;; This function calls:
  6895 ;;		_set_leds_bottom
  6896 ;;		_set_leds_top
  6897 ;;		_wait_ms
  6898 ;; This function is called by:
  6899 ;;		_showBootSequence
  6900 ;;		_showSave
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           
  6905                           ;psect for function _solidring_tactiles
  6906  138F                     _solidring_tactiles:	
  6907                           
  6908                           ;LEDs.c: 224: uint8_t ring_delay = 30;
  6909                           
  6910                           ;incstack = 0
  6911                           ; Regs used in _solidring_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6912  138F  301E               	movlw	30
  6913  1390  0020               	movlb	0	; select bank0
  6914  1391  00AE               	movwf	??_solidring_tactiles
  6915  1392  082E               	movf	??_solidring_tactiles,w
  6916  1393  00B0               	movwf	solidring_tactiles@ring_delay
  6917                           
  6918                           ;LEDs.c: 225: set_leds_top(100, 1);
  6919  1394  3064               	movlw	100
  6920  1395  00A0               	movwf	set_leds_top@x
  6921  1396  3000               	movlw	0
  6922  1397  00A1               	movwf	set_leds_top@x+1
  6923  1398  3001               	movlw	1
  6924  1399  00A2               	movwf	set_leds_top@ledState
  6925  139A  3000               	movlw	0
  6926  139B  00A3               	movwf	set_leds_top@ledState+1
  6927  139C  3187  27A8  3193   	fcall	_set_leds_top
  6928                           
  6929                           ;LEDs.c: 226: set_leds_bottom(100);
  6930  139F  3064               	movlw	100
  6931  13A0  0020               	movlb	0	; select bank0
  6932  13A1  00A0               	movwf	set_leds_bottom@x
  6933  13A2  3000               	movlw	0
  6934  13A3  00A1               	movwf	set_leds_bottom@x+1
  6935  13A4  3192  2299  3193   	fcall	_set_leds_bottom
  6936                           
  6937                           ;LEDs.c: 227: wait_ms(ring_delay);
  6938  13A7  0020               	movlb	0	; select bank0
  6939  13A8  0830               	movf	solidring_tactiles@ring_delay,w
  6940  13A9  00AE               	movwf	??_solidring_tactiles
  6941  13AA  01AF               	clrf	??_solidring_tactiles+1
  6942  13AB  082E               	movf	??_solidring_tactiles,w
  6943  13AC  00AC               	movwf	wait_ms@time
  6944  13AD  082F               	movf	??_solidring_tactiles+1,w
  6945  13AE  00AD               	movwf	wait_ms@time+1
  6946  13AF  3191  2148  3193   	fcall	_wait_ms
  6947                           
  6948                           ;LEDs.c: 229: set_leds_top(0, 1);
  6949  13B2  3000               	movlw	0
  6950  13B3  0020               	movlb	0	; select bank0
  6951  13B4  00A0               	movwf	set_leds_top@x
  6952  13B5  00A1               	movwf	set_leds_top@x+1
  6953  13B6  3001               	movlw	1
  6954  13B7  00A2               	movwf	set_leds_top@ledState
  6955  13B8  3000               	movlw	0
  6956  13B9  00A3               	movwf	set_leds_top@ledState+1
  6957  13BA  3187  27A8  3193   	fcall	_set_leds_top
  6958                           
  6959                           ;LEDs.c: 230: set_leds_bottom(0);
  6960  13BD  3000               	movlw	0
  6961  13BE  0020               	movlb	0	; select bank0
  6962  13BF  00A0               	movwf	set_leds_bottom@x
  6963  13C0  00A1               	movwf	set_leds_bottom@x+1
  6964  13C1  3192  2299  3193   	fcall	_set_leds_bottom
  6965                           
  6966                           ;LEDs.c: 231: wait_ms(ring_delay);
  6967  13C4  0020               	movlb	0	; select bank0
  6968  13C5  0830               	movf	solidring_tactiles@ring_delay,w
  6969  13C6  00AE               	movwf	??_solidring_tactiles
  6970  13C7  01AF               	clrf	??_solidring_tactiles+1
  6971  13C8  082E               	movf	??_solidring_tactiles,w
  6972  13C9  00AC               	movwf	wait_ms@time
  6973  13CA  082F               	movf	??_solidring_tactiles+1,w
  6974  13CB  00AD               	movwf	wait_ms@time+1
  6975  13CC  3191  2148         	fcall	_wait_ms
  6976  13CE  0008               	return
  6977  13CF                     __end_of_solidring_tactiles:	
  6978                           
  6979                           	psect	text5
  6980  1FEA                     __ptext5:	
  6981 ;; *************** function _restoreLEDState *****************
  6982 ;; Defined at:
  6983 ;;		line 89 in file "state_manager.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;		None
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, status,0
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7001 ;;Total ram usage:        0 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:    2
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_showBootSequence
  7008 ;;		_showError_Alternating
  7009 ;;		_show_error
  7010 ;;		_show_cancel
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function _restoreLEDState
  7016  1FEA                     _restoreLEDState:	
  7017                           
  7018                           ;state_manager.c: 90: LATBbits.LATB4 = ledState.tap_A;
  7019                           
  7020                           ;incstack = 0
  7021                           ; Regs used in _restoreLEDState: [wreg+status,0]
  7022  1FEA  0022               	movlb	2	; select bank2
  7023  1FEB  0C34               	rrf	_ledState^(0+256),w
  7024  1FEC  1C03               	skipc
  7025  1FED  120D               	bcf	13,4	;volatile
  7026  1FEE  1803               	skipnc
  7027  1FEF  160D               	bsf	13,4	;volatile
  7028                           
  7029                           ;state_manager.c: 91: LATBbits.LATB2 = ledState.bypass_A;
  7030  1FF0  0C36               	rrf	(_ledState^(0+256)+2),w
  7031  1FF1  1C03               	skipc
  7032  1FF2  110D               	bcf	13,2	;volatile
  7033  1FF3  1803               	skipnc
  7034  1FF4  150D               	bsf	13,2	;volatile
  7035                           
  7036                           ;state_manager.c: 92: LATBbits.LATB5 = ledState.tap_B;
  7037  1FF5  0C35               	rrf	(_ledState^(0+256)+1),w
  7038  1FF6  1C03               	skipc
  7039  1FF7  128D               	bcf	13,5	;volatile
  7040  1FF8  1803               	skipnc
  7041  1FF9  168D               	bsf	13,5	;volatile
  7042                           
  7043                           ;state_manager.c: 93: LATBbits.LATB3 = ledState.bypass_B;
  7044  1FFA  0C37               	rrf	(_ledState^(0+256)+3),w
  7045  1FFB  1C03               	skipc
  7046  1FFC  118D               	bcf	13,3	;volatile
  7047  1FFD  1803               	skipnc
  7048  1FFE  158D               	bsf	13,3	;volatile
  7049  1FFF  0008               	return
  7050  2000                     __end_of_restoreLEDState:	
  7051                           
  7052                           	psect	text6
  7053  1FC6                     __ptext6:	
  7054 ;; *************** function _getCurrentLEDState *****************
  7055 ;; Defined at:
  7056 ;;		line 83 in file "state_manager.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7074 ;;Total ram usage:        0 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    2
  7077 ;; This function calls:
  7078 ;;		Nothing
  7079 ;; This function is called by:
  7080 ;;		_showBootSequence
  7081 ;;		_showError_Alternating
  7082 ;;		_show_error
  7083 ;;		_show_cancel
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           
  7088                           ;psect for function _getCurrentLEDState
  7089  1FC6                     _getCurrentLEDState:	
  7090                           
  7091                           ;state_manager.c: 84: ledState.tap_A = LATBbits.LATB4;
  7092                           
  7093                           ;incstack = 0
  7094                           ; Regs used in _getCurrentLEDState: [wreg+status,2]
  7095  1FC6  3000               	movlw	0
  7096  1FC7  0022               	movlb	2	; select bank2
  7097  1FC8  1A0D               	btfsc	13,4	;volatile
  7098  1FC9  3001               	movlw	1
  7099  1FCA  00B4               	movwf	_ledState^(0+256)
  7100                           
  7101                           ;state_manager.c: 85: ledState.bypass_A = LATBbits.LATB2 ;
  7102  1FCB  3000               	movlw	0
  7103  1FCC  190D               	btfsc	13,2	;volatile
  7104  1FCD  3001               	movlw	1
  7105  1FCE  00B6               	movwf	(_ledState^(0+256)+2)
  7106                           
  7107                           ;state_manager.c: 86: ledState.tap_B = LATBbits.LATB5 ;
  7108  1FCF  3000               	movlw	0
  7109  1FD0  1A8D               	btfsc	13,5	;volatile
  7110  1FD1  3001               	movlw	1
  7111  1FD2  00B5               	movwf	(_ledState^(0+256)+1)
  7112                           
  7113                           ;state_manager.c: 87: ledState.bypass_B = LATBbits.LATB3 ;
  7114  1FD3  3000               	movlw	0
  7115  1FD4  198D               	btfsc	13,3	;volatile
  7116  1FD5  3001               	movlw	1
  7117  1FD6  00B7               	movwf	(_ledState^(0+256)+3)
  7118  1FD7  0008               	return
  7119  1FD8                     __end_of_getCurrentLEDState:	
  7120                           
  7121                           	psect	text7
  7122  045C                     __ptext7:	
  7123 ;; *************** function _set_subdivision *****************
  7124 ;; Defined at:
  7125 ;;		line 77 in file "user.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  x               2    6[BANK1 ] int 
  7128 ;;  y               2    8[BANK1 ] int 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;		None
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  2    6[BANK1 ] int 
  7133 ;; Registers used:
  7134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7140 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7143 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7144 ;;Total ram usage:        4 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    4
  7147 ;; This function calls:
  7148 ;;		___awtoft
  7149 ;;		___ftmul
  7150 ;;		___fttol
  7151 ;; This function is called by:
  7152 ;;		_main
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           
  7157                           ;psect for function _set_subdivision
  7158  045C                     _set_subdivision:	
  7159                           
  7160                           ;user.c: 80: switch (y) {
  7161                           
  7162                           ;incstack = 0
  7163                           ; Regs used in _set_subdivision: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7164  045C  2D3A               	goto	l3126
  7165  045D                     l3114:	
  7166                           ;user.c: 81: case 1:
  7167                           
  7168                           
  7169                           ;user.c: 82: x = x * .75;
  7170  045D  0021               	movlb	1	; select bank1
  7171  045E  0827               	movf	(set_subdivision@x+1)^(0+128),w
  7172  045F  0020               	movlb	0	; select bank0
  7173  0460  00A9               	movwf	___awtoft@c+1
  7174  0461  0021               	movlb	1	; select bank1
  7175  0462  0826               	movf	set_subdivision@x^(0+128),w
  7176  0463  0020               	movlb	0	; select bank0
  7177  0464  00A8               	movwf	___awtoft@c
  7178  0465  3190  207A  3184   	fcall	___awtoft
  7179  0468  0020               	movlb	0	; select bank0
  7180  0469  0828               	movf	?___awtoft,w
  7181  046A  00B8               	movwf	___ftmul@f2
  7182  046B  0829               	movf	?___awtoft+1,w
  7183  046C  00B9               	movwf	___ftmul@f2+1
  7184  046D  082A               	movf	?___awtoft+2,w
  7185  046E  00BA               	movwf	___ftmul@f2+2
  7186  046F  3000               	movlw	0
  7187  0470  00B5               	movwf	___ftmul@f1
  7188  0471  3040               	movlw	64
  7189  0472  00B6               	movwf	___ftmul@f1+1
  7190  0473  303F               	movlw	63
  7191  0474  00B7               	movwf	___ftmul@f1+2
  7192  0475  3186  264B  3184   	fcall	___ftmul
  7193  0478  0020               	movlb	0	; select bank0
  7194  0479  0835               	movf	?___ftmul,w
  7195  047A  00E7               	movwf	___fttol@f1
  7196  047B  0836               	movf	?___ftmul+1,w
  7197  047C  00E8               	movwf	___fttol@f1+1
  7198  047D  0837               	movf	?___ftmul+2,w
  7199  047E  00E9               	movwf	___fttol@f1+2
  7200  047F  3188  206E         	fcall	___fttol
  7201  0481  0020               	movlb	0	; select bank0
  7202  0482  0868               	movf	?___fttol+1,w
  7203  0483  0021               	movlb	1	; select bank1
  7204  0484  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  7205  0485  0020               	movlb	0	; select bank0
  7206  0486  0867               	movf	?___fttol,w
  7207  0487  0021               	movlb	1	; select bank1
  7208  0488  00A6               	movwf	set_subdivision@x^(0+128)
  7209                           
  7210                           ;user.c: 83: break;
  7211  0489  0008               	return
  7212  048A                     l3116:	
  7213                           ;user.c: 84: case 2:
  7214                           
  7215                           
  7216                           ;user.c: 85: x = x * .66666;
  7217  048A  0827               	movf	(set_subdivision@x+1)^(0+128),w
  7218  048B  0020               	movlb	0	; select bank0
  7219  048C  00A9               	movwf	___awtoft@c+1
  7220  048D  0021               	movlb	1	; select bank1
  7221  048E  0826               	movf	set_subdivision@x^(0+128),w
  7222  048F  0020               	movlb	0	; select bank0
  7223  0490  00A8               	movwf	___awtoft@c
  7224  0491  3190  207A  3184   	fcall	___awtoft
  7225  0494  0020               	movlb	0	; select bank0
  7226  0495  0828               	movf	?___awtoft,w
  7227  0496  00B8               	movwf	___ftmul@f2
  7228  0497  0829               	movf	?___awtoft+1,w
  7229  0498  00B9               	movwf	___ftmul@f2+1
  7230  0499  082A               	movf	?___awtoft+2,w
  7231  049A  00BA               	movwf	___ftmul@f2+2
  7232  049B  30AA               	movlw	170
  7233  049C  00B5               	movwf	___ftmul@f1
  7234  049D  302A               	movlw	42
  7235  049E  00B6               	movwf	___ftmul@f1+1
  7236  049F  303F               	movlw	63
  7237  04A0  00B7               	movwf	___ftmul@f1+2
  7238  04A1  3186  264B  3184   	fcall	___ftmul
  7239  04A4  0020               	movlb	0	; select bank0
  7240  04A5  0835               	movf	?___ftmul,w
  7241  04A6  00E7               	movwf	___fttol@f1
  7242  04A7  0836               	movf	?___ftmul+1,w
  7243  04A8  00E8               	movwf	___fttol@f1+1
  7244  04A9  0837               	movf	?___ftmul+2,w
  7245  04AA  00E9               	movwf	___fttol@f1+2
  7246  04AB  3188  206E         	fcall	___fttol
  7247  04AD  0020               	movlb	0	; select bank0
  7248  04AE  0868               	movf	?___fttol+1,w
  7249  04AF  0021               	movlb	1	; select bank1
  7250  04B0  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  7251  04B1  0020               	movlb	0	; select bank0
  7252  04B2  0867               	movf	?___fttol,w
  7253  04B3  0021               	movlb	1	; select bank1
  7254  04B4  00A6               	movwf	set_subdivision@x^(0+128)
  7255                           
  7256                           ;user.c: 86: break;
  7257  04B5  0008               	return
  7258  04B6                     l3118:	
  7259                           ;user.c: 87: case 3:
  7260                           
  7261                           
  7262                           ;user.c: 88: x = x * .5;
  7263  04B6  0827               	movf	(set_subdivision@x+1)^(0+128),w
  7264  04B7  0020               	movlb	0	; select bank0
  7265  04B8  00A9               	movwf	___awtoft@c+1
  7266  04B9  0021               	movlb	1	; select bank1
  7267  04BA  0826               	movf	set_subdivision@x^(0+128),w
  7268  04BB  0020               	movlb	0	; select bank0
  7269  04BC  00A8               	movwf	___awtoft@c
  7270  04BD  3190  207A  3184   	fcall	___awtoft
  7271  04C0  0020               	movlb	0	; select bank0
  7272  04C1  0828               	movf	?___awtoft,w
  7273  04C2  00B8               	movwf	___ftmul@f2
  7274  04C3  0829               	movf	?___awtoft+1,w
  7275  04C4  00B9               	movwf	___ftmul@f2+1
  7276  04C5  082A               	movf	?___awtoft+2,w
  7277  04C6  00BA               	movwf	___ftmul@f2+2
  7278  04C7  3000               	movlw	0
  7279  04C8  00B5               	movwf	___ftmul@f1
  7280  04C9  3000               	movlw	0
  7281  04CA  00B6               	movwf	___ftmul@f1+1
  7282  04CB  303F               	movlw	63
  7283  04CC  00B7               	movwf	___ftmul@f1+2
  7284  04CD  3186  264B  3184   	fcall	___ftmul
  7285  04D0  0020               	movlb	0	; select bank0
  7286  04D1  0835               	movf	?___ftmul,w
  7287  04D2  00E7               	movwf	___fttol@f1
  7288  04D3  0836               	movf	?___ftmul+1,w
  7289  04D4  00E8               	movwf	___fttol@f1+1
  7290  04D5  0837               	movf	?___ftmul+2,w
  7291  04D6  00E9               	movwf	___fttol@f1+2
  7292  04D7  3188  206E         	fcall	___fttol
  7293  04D9  0020               	movlb	0	; select bank0
  7294  04DA  0868               	movf	?___fttol+1,w
  7295  04DB  0021               	movlb	1	; select bank1
  7296  04DC  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  7297  04DD  0020               	movlb	0	; select bank0
  7298  04DE  0867               	movf	?___fttol,w
  7299  04DF  0021               	movlb	1	; select bank1
  7300  04E0  00A6               	movwf	set_subdivision@x^(0+128)
  7301                           
  7302                           ;user.c: 89: break;
  7303  04E1  0008               	return
  7304  04E2                     l3120:	
  7305                           ;user.c: 90: case 4:
  7306                           
  7307                           
  7308                           ;user.c: 91: x = x * .3333;
  7309  04E2  0827               	movf	(set_subdivision@x+1)^(0+128),w
  7310  04E3  0020               	movlb	0	; select bank0
  7311  04E4  00A9               	movwf	___awtoft@c+1
  7312  04E5  0021               	movlb	1	; select bank1
  7313  04E6  0826               	movf	set_subdivision@x^(0+128),w
  7314  04E7  0020               	movlb	0	; select bank0
  7315  04E8  00A8               	movwf	___awtoft@c
  7316  04E9  3190  207A  3184   	fcall	___awtoft
  7317  04EC  0020               	movlb	0	; select bank0
  7318  04ED  0828               	movf	?___awtoft,w
  7319  04EE  00B8               	movwf	___ftmul@f2
  7320  04EF  0829               	movf	?___awtoft+1,w
  7321  04F0  00B9               	movwf	___ftmul@f2+1
  7322  04F1  082A               	movf	?___awtoft+2,w
  7323  04F2  00BA               	movwf	___ftmul@f2+2
  7324  04F3  30A6               	movlw	166
  7325  04F4  00B5               	movwf	___ftmul@f1
  7326  04F5  30AA               	movlw	170
  7327  04F6  00B6               	movwf	___ftmul@f1+1
  7328  04F7  303E               	movlw	62
  7329  04F8  00B7               	movwf	___ftmul@f1+2
  7330  04F9  3186  264B  3184   	fcall	___ftmul
  7331  04FC  0020               	movlb	0	; select bank0
  7332  04FD  0835               	movf	?___ftmul,w
  7333  04FE  00E7               	movwf	___fttol@f1
  7334  04FF  0836               	movf	?___ftmul+1,w
  7335  0500  00E8               	movwf	___fttol@f1+1
  7336  0501  0837               	movf	?___ftmul+2,w
  7337  0502  00E9               	movwf	___fttol@f1+2
  7338  0503  3188  206E         	fcall	___fttol
  7339  0505  0020               	movlb	0	; select bank0
  7340  0506  0868               	movf	?___fttol+1,w
  7341  0507  0021               	movlb	1	; select bank1
  7342  0508  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  7343  0509  0020               	movlb	0	; select bank0
  7344  050A  0867               	movf	?___fttol,w
  7345  050B  0021               	movlb	1	; select bank1
  7346  050C  00A6               	movwf	set_subdivision@x^(0+128)
  7347                           
  7348                           ;user.c: 92: break;
  7349  050D  0008               	return
  7350  050E                     l3122:	
  7351                           ;user.c: 93: case 5:
  7352                           
  7353                           
  7354                           ;user.c: 94: x = x * .25;
  7355  050E  0827               	movf	(set_subdivision@x+1)^(0+128),w
  7356  050F  0020               	movlb	0	; select bank0
  7357  0510  00A9               	movwf	___awtoft@c+1
  7358  0511  0021               	movlb	1	; select bank1
  7359  0512  0826               	movf	set_subdivision@x^(0+128),w
  7360  0513  0020               	movlb	0	; select bank0
  7361  0514  00A8               	movwf	___awtoft@c
  7362  0515  3190  207A  3184   	fcall	___awtoft
  7363  0518  0020               	movlb	0	; select bank0
  7364  0519  0828               	movf	?___awtoft,w
  7365  051A  00B8               	movwf	___ftmul@f2
  7366  051B  0829               	movf	?___awtoft+1,w
  7367  051C  00B9               	movwf	___ftmul@f2+1
  7368  051D  082A               	movf	?___awtoft+2,w
  7369  051E  00BA               	movwf	___ftmul@f2+2
  7370  051F  3000               	movlw	0
  7371  0520  00B5               	movwf	___ftmul@f1
  7372  0521  3080               	movlw	128
  7373  0522  00B6               	movwf	___ftmul@f1+1
  7374  0523  303E               	movlw	62
  7375  0524  00B7               	movwf	___ftmul@f1+2
  7376  0525  3186  264B  3184   	fcall	___ftmul
  7377  0528  0020               	movlb	0	; select bank0
  7378  0529  0835               	movf	?___ftmul,w
  7379  052A  00E7               	movwf	___fttol@f1
  7380  052B  0836               	movf	?___ftmul+1,w
  7381  052C  00E8               	movwf	___fttol@f1+1
  7382  052D  0837               	movf	?___ftmul+2,w
  7383  052E  00E9               	movwf	___fttol@f1+2
  7384  052F  3188  206E         	fcall	___fttol
  7385  0531  0020               	movlb	0	; select bank0
  7386  0532  0868               	movf	?___fttol+1,w
  7387  0533  0021               	movlb	1	; select bank1
  7388  0534  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  7389  0535  0020               	movlb	0	; select bank0
  7390  0536  0867               	movf	?___fttol,w
  7391  0537  0021               	movlb	1	; select bank1
  7392  0538  00A6               	movwf	set_subdivision@x^(0+128)
  7393                           
  7394                           ;user.c: 99: }
  7395                           
  7396                           ;user.c: 98: break;
  7397                           
  7398                           ;user.c: 96: case 6:
  7399                           
  7400                           ;user.c: 95: break;
  7401  0539  0008               	return
  7402  053A                     l3126:	
  7403                           
  7404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7405                           ; Switch size 1, requested type "space"
  7406                           ; Number of cases is 1, Range of values is 0 to 0
  7407                           ; switch strategies available:
  7408                           ; Name         Instructions Cycles
  7409                           ; simple_byte            4     3 (average)
  7410                           ; direct_byte            8     6 (fixed)
  7411                           ; jumptable            260     6 (fixed)
  7412                           ;	Chosen strategy is simple_byte
  7413  053A  0021               	movlb	1	; select bank1
  7414  053B  0829               	movf	(set_subdivision@y+1)^(0+128),w
  7415  053C  3A00               	xorlw	0	; case 0
  7416  053D  1903               	skipnz
  7417  053E  2D40               	goto	l3666
  7418  053F  2D54               	goto	l465
  7419  0540                     l3666:	
  7420                           
  7421                           ; Switch size 1, requested type "space"
  7422                           ; Number of cases is 6, Range of values is 1 to 6
  7423                           ; switch strategies available:
  7424                           ; Name         Instructions Cycles
  7425                           ; simple_byte           19    10 (average)
  7426                           ; direct_byte           21     9 (fixed)
  7427                           ; jumptable            263     9 (fixed)
  7428                           ;	Chosen strategy is simple_byte
  7429  0540  0828               	movf	set_subdivision@y^(0+128),w
  7430  0541  3A01               	xorlw	1	; case 1
  7431  0542  1903               	skipnz
  7432  0543  2C5D               	goto	l3114
  7433  0544  3A03               	xorlw	3	; case 2
  7434  0545  1903               	skipnz
  7435  0546  2C8A               	goto	l3116
  7436  0547  3A01               	xorlw	1	; case 3
  7437  0548  1903               	skipnz
  7438  0549  2CB6               	goto	l3118
  7439  054A  3A07               	xorlw	7	; case 4
  7440  054B  1903               	skipnz
  7441  054C  2CE2               	goto	l3120
  7442  054D  3A01               	xorlw	1	; case 5
  7443  054E  1903               	skipnz
  7444  054F  2D0E               	goto	l3122
  7445  0550  3A03               	xorlw	3	; case 6
  7446  0551  1903               	skipnz
  7447  0552  2D54               	goto	l465
  7448  0553  2D54               	goto	l465
  7449  0554                     l465:	
  7450                           
  7451                           ;user.c: 100: return x;
  7452  0554  0008               	return
  7453  0555                     __end_of_set_subdivision:	
  7454                           
  7455                           	psect	text8
  7456  086E                     __ptext8:	
  7457 ;; *************** function ___fttol *****************
  7458 ;; Defined at:
  7459 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;  f1              3   71[BANK0 ] float 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  lval            4    1[BANK1 ] unsigned long 
  7464 ;;  exp1            1    5[BANK1 ] unsigned char 
  7465 ;;  sign1           1    0[BANK1 ] unsigned char 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  4   71[BANK0 ] long 
  7468 ;; Registers used:
  7469 ;;		wreg, status,2, status,0
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7475 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7476 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7477 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7478 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7479 ;;Total ram usage:       14 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    2
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_main
  7486 ;;		_set_subdivision
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function ___fttol
  7492  086E                     ___fttol:	
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7496  086E  0020               	movlb	0	; select bank0
  7497  086F  0867               	movf	___fttol@f1,w
  7498  0870  00EB               	movwf	??___fttol
  7499  0871  0868               	movf	___fttol@f1+1,w
  7500  0872  00EC               	movwf	??___fttol+1
  7501  0873  0869               	movf	___fttol@f1+2,w
  7502  0874  00ED               	movwf	??___fttol+2
  7503  0875  1003               	clrc
  7504  0876  0D6C               	rlf	??___fttol+1,w
  7505  0877  0D6D               	rlf	??___fttol+2,w
  7506  0878  00EE               	movwf	??___fttol+3
  7507  0879  086E               	movf	??___fttol+3,w
  7508  087A  0021               	movlb	1	; select bank1
  7509  087B  00A5               	movwf	___fttol@exp1^(0+128)
  7510  087C  0825               	movf	___fttol@exp1^(0+128),w
  7511  087D  1D03               	btfss	3,2
  7512  087E  2889               	goto	l2936
  7513  087F  3000               	movlw	0
  7514  0880  0020               	movlb	0	; select bank0
  7515  0881  00EA               	movwf	?___fttol+3
  7516  0882  3000               	movlw	0
  7517  0883  00E9               	movwf	?___fttol+2
  7518  0884  3000               	movlw	0
  7519  0885  00E8               	movwf	?___fttol+1
  7520  0886  3000               	movlw	0
  7521  0887  00E7               	movwf	?___fttol
  7522  0888  0008               	return
  7523  0889                     l2936:	
  7524  0889  0020               	movlb	0	; select bank0
  7525  088A  0867               	movf	___fttol@f1,w
  7526  088B  00EB               	movwf	??___fttol
  7527  088C  0868               	movf	___fttol@f1+1,w
  7528  088D  00EC               	movwf	??___fttol+1
  7529  088E  0869               	movf	___fttol@f1+2,w
  7530  088F  00ED               	movwf	??___fttol+2
  7531  0890  3017               	movlw	23
  7532  0891                     u2865:	
  7533  0891  36ED               	lsrf	??___fttol+2,f
  7534  0892  0CEC               	rrf	??___fttol+1,f
  7535  0893  0CEB               	rrf	??___fttol,f
  7536  0894  0B89               	decfsz	9,f
  7537  0895  2891               	goto	u2865
  7538  0896  086B               	movf	??___fttol,w
  7539  0897  00EE               	movwf	??___fttol+3
  7540  0898  086E               	movf	??___fttol+3,w
  7541  0899  0021               	movlb	1	; select bank1
  7542  089A  00A0               	movwf	___fttol@sign1^(0+128)
  7543  089B  0020               	movlb	0	; select bank0
  7544  089C  17E8               	bsf	___fttol@f1+1,7
  7545  089D  30FF               	movlw	255
  7546  089E  05E7               	andwf	___fttol@f1,f
  7547  089F  30FF               	movlw	255
  7548  08A0  05E8               	andwf	___fttol@f1+1,f
  7549  08A1  3000               	movlw	0
  7550  08A2  05E9               	andwf	___fttol@f1+2,f
  7551  08A3  0867               	movf	___fttol@f1,w
  7552  08A4  0021               	movlb	1	; select bank1
  7553  08A5  00A1               	movwf	___fttol@lval^(0+128)
  7554  08A6  0020               	movlb	0	; select bank0
  7555  08A7  0868               	movf	___fttol@f1+1,w
  7556  08A8  0021               	movlb	1	; select bank1
  7557  08A9  00A2               	movwf	(___fttol@lval^(0+128)+1)
  7558  08AA  0020               	movlb	0	; select bank0
  7559  08AB  0869               	movf	___fttol@f1+2,w
  7560  08AC  0021               	movlb	1	; select bank1
  7561  08AD  00A3               	movwf	(___fttol@lval^(0+128)+2)
  7562  08AE  01A4               	clrf	(___fttol@lval^(0+128)+3)
  7563  08AF  308E               	movlw	142
  7564  08B0  02A5               	subwf	___fttol@exp1^(0+128),f
  7565  08B1  1FA5               	btfss	___fttol@exp1^(0+128),7
  7566  08B2  28D3               	goto	l2956
  7567  08B3  0825               	movf	___fttol@exp1^(0+128),w
  7568  08B4  3A80               	xorlw	128
  7569  08B5  3E8F               	addlw	143
  7570  08B6  1803               	skipnc
  7571  08B7  28C2               	goto	l2954
  7572  08B8  3000               	movlw	0
  7573  08B9  0020               	movlb	0	; select bank0
  7574  08BA  00EA               	movwf	?___fttol+3
  7575  08BB  3000               	movlw	0
  7576  08BC  00E9               	movwf	?___fttol+2
  7577  08BD  3000               	movlw	0
  7578  08BE  00E8               	movwf	?___fttol+1
  7579  08BF  3000               	movlw	0
  7580  08C0  00E7               	movwf	?___fttol
  7581  08C1  0008               	return
  7582  08C2                     l2954:	
  7583  08C2  3001               	movlw	1
  7584  08C3                     u2895:	
  7585  08C3  0021               	movlb	1	; select bank1
  7586  08C4  36A4               	lsrf	(___fttol@lval+3)^(0+128),f
  7587  08C5  0CA3               	rrf	(___fttol@lval+2)^(0+128),f
  7588  08C6  0CA2               	rrf	(___fttol@lval+1)^(0+128),f
  7589  08C7  0CA1               	rrf	___fttol@lval^(0+128),f
  7590  08C8  0B89               	decfsz	9,f
  7591  08C9  28C3               	goto	u2895
  7592  08CA  3001               	movlw	1
  7593  08CB  0020               	movlb	0	; select bank0
  7594  08CC  00EB               	movwf	??___fttol
  7595  08CD  086B               	movf	??___fttol,w
  7596  08CE  0021               	movlb	1	; select bank1
  7597  08CF  07A5               	addwf	___fttol@exp1^(0+128),f
  7598  08D0  1903               	btfsc	3,2
  7599  08D1  28EF               	goto	l2964
  7600  08D2  28C2               	goto	l2954
  7601  08D3                     l2956:	
  7602  08D3  3018               	movlw	24
  7603  08D4  0225               	subwf	___fttol@exp1^(0+128),w
  7604  08D5  1C03               	skipc
  7605  08D6  28EB               	goto	l1038
  7606  08D7  3000               	movlw	0
  7607  08D8  0020               	movlb	0	; select bank0
  7608  08D9  00EA               	movwf	?___fttol+3
  7609  08DA  3000               	movlw	0
  7610  08DB  00E9               	movwf	?___fttol+2
  7611  08DC  3000               	movlw	0
  7612  08DD  00E8               	movwf	?___fttol+1
  7613  08DE  3000               	movlw	0
  7614  08DF  00E7               	movwf	?___fttol
  7615  08E0  0008               	return
  7616  08E1                     l2962:	
  7617  08E1  3001               	movlw	1
  7618  08E2                     u2925:	
  7619  08E2  0021               	movlb	1	; select bank1
  7620  08E3  35A1               	lslf	___fttol@lval^(0+128),f
  7621  08E4  0DA2               	rlf	(___fttol@lval+1)^(0+128),f
  7622  08E5  0DA3               	rlf	(___fttol@lval+2)^(0+128),f
  7623  08E6  0DA4               	rlf	(___fttol@lval+3)^(0+128),f
  7624  08E7  0B89               	decfsz	9,f
  7625  08E8  28E2               	goto	u2925
  7626  08E9  3001               	movlw	1
  7627  08EA  02A5               	subwf	___fttol@exp1^(0+128),f
  7628  08EB                     l1038:	
  7629  08EB  0021               	movlb	1	; select bank1
  7630  08EC  0825               	movf	___fttol@exp1^(0+128),w
  7631  08ED  1D03               	btfss	3,2
  7632  08EE  28E1               	goto	l2962
  7633  08EF                     l2964:	
  7634  08EF  0820               	movf	___fttol@sign1^(0+128),w
  7635  08F0  1903               	btfsc	3,2
  7636  08F1  28FD               	goto	l2968
  7637  08F2  09A1               	comf	___fttol@lval^(0+128),f
  7638  08F3  09A2               	comf	(___fttol@lval+1)^(0+128),f
  7639  08F4  09A3               	comf	(___fttol@lval+2)^(0+128),f
  7640  08F5  09A4               	comf	(___fttol@lval+3)^(0+128),f
  7641  08F6  0AA1               	incf	___fttol@lval^(0+128),f
  7642  08F7  1903               	skipnz
  7643  08F8  0AA2               	incf	(___fttol@lval+1)^(0+128),f
  7644  08F9  1903               	skipnz
  7645  08FA  0AA3               	incf	(___fttol@lval+2)^(0+128),f
  7646  08FB  1903               	skipnz
  7647  08FC  0AA4               	incf	(___fttol@lval+3)^(0+128),f
  7648  08FD                     l2968:	
  7649  08FD  0824               	movf	(___fttol@lval+3)^(0+128),w
  7650  08FE  0020               	movlb	0	; select bank0
  7651  08FF  00EA               	movwf	?___fttol+3
  7652  0900  0021               	movlb	1	; select bank1
  7653  0901  0823               	movf	(___fttol@lval+2)^(0+128),w
  7654  0902  0020               	movlb	0	; select bank0
  7655  0903  00E9               	movwf	?___fttol+2
  7656  0904  0021               	movlb	1	; select bank1
  7657  0905  0822               	movf	(___fttol@lval+1)^(0+128),w
  7658  0906  0020               	movlb	0	; select bank0
  7659  0907  00E8               	movwf	?___fttol+1
  7660  0908  0021               	movlb	1	; select bank1
  7661  0909  0821               	movf	___fttol@lval^(0+128),w
  7662  090A  0020               	movlb	0	; select bank0
  7663  090B  00E7               	movwf	?___fttol
  7664  090C  0008               	return
  7665  090D                     __end_of___fttol:	
  7666                           
  7667                           	psect	text9
  7668  107A                     __ptext9:	
  7669 ;; *************** function ___awtoft *****************
  7670 ;; Defined at:
  7671 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  c               2    8[BANK0 ] int 
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;  sign            1   13[BANK0 ] unsigned char 
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  3    8[BANK0 ] float 
  7678 ;; Registers used:
  7679 ;;		wreg, status,2, status,0, pclath, cstack
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7685 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7687 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7688 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7689 ;;Total ram usage:        6 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:    3
  7692 ;; This function calls:
  7693 ;;		___ftpack
  7694 ;; This function is called by:
  7695 ;;		_main
  7696 ;;		_set_subdivision
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           
  7701                           ;psect for function ___awtoft
  7702  107A                     ___awtoft:	
  7703                           
  7704                           ;incstack = 0
  7705                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7706  107A  0020               	movlb	0	; select bank0
  7707  107B  01AD               	clrf	___awtoft@sign
  7708  107C  1FA9               	btfss	___awtoft@c+1,7
  7709  107D  2885               	goto	l2756
  7710  107E  09A8               	comf	___awtoft@c,f
  7711  107F  09A9               	comf	___awtoft@c+1,f
  7712  1080  0AA8               	incf	___awtoft@c,f
  7713  1081  1903               	skipnz
  7714  1082  0AA9               	incf	___awtoft@c+1,f
  7715  1083  01AD               	clrf	___awtoft@sign
  7716  1084  0AAD               	incf	___awtoft@sign,f
  7717  1085                     l2756:	
  7718  1085  0828               	movf	___awtoft@c,w
  7719  1086  00A0               	movwf	___ftpack@arg
  7720  1087  0829               	movf	___awtoft@c+1,w
  7721  1088  00A1               	movwf	___ftpack@arg+1
  7722  1089  01A2               	clrf	___ftpack@arg+2
  7723  108A  308E               	movlw	142
  7724  108B  00AB               	movwf	??___awtoft
  7725  108C  082B               	movf	??___awtoft,w
  7726  108D  00A3               	movwf	___ftpack@exp
  7727  108E  082D               	movf	___awtoft@sign,w
  7728  108F  00AC               	movwf	??___awtoft+1
  7729  1090  082C               	movf	??___awtoft+1,w
  7730  1091  00A4               	movwf	___ftpack@sign
  7731  1092  3196  261F         	fcall	___ftpack
  7732  1094  0020               	movlb	0	; select bank0
  7733  1095  0820               	movf	?___ftpack,w
  7734  1096  00A8               	movwf	?___awtoft
  7735  1097  0821               	movf	?___ftpack+1,w
  7736  1098  00A9               	movwf	?___awtoft+1
  7737  1099  0822               	movf	?___ftpack+2,w
  7738  109A  00AA               	movwf	?___awtoft+2
  7739  109B  0008               	return
  7740  109C                     __end_of___awtoft:	
  7741                           
  7742                           	psect	text10
  7743  134F                     __ptext10:	
  7744 ;; *************** function _read_top_tactile *****************
  7745 ;; Defined at:
  7746 ;;		line 38 in file "tactiles.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;		None
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;		None
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  1    wreg      void 
  7753 ;; Registers used:
  7754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7762 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7763 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7764 ;;Total ram usage:        3 bytes
  7765 ;; Hardware stack levels used:    1
  7766 ;; Hardware stack levels required when called:    5
  7767 ;; This function calls:
  7768 ;;		_FLASH_WriteWord
  7769 ;;		_set_leds_top
  7770 ;;		_wait_ms
  7771 ;; This function is called by:
  7772 ;;		_main
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           
  7777                           ;psect for function _read_top_tactile
  7778  134F                     _read_top_tactile:	
  7779                           
  7780                           ;tactiles.c: 46: if (PORTDbits.RD5 == 0) {
  7781                           
  7782                           ;incstack = 0
  7783                           ; Regs used in _read_top_tactile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7784  134F  0020               	movlb	0	; select bank0
  7785  1350  1A8F               	btfsc	15,5	;volatile
  7786  1351  0008               	return
  7787                           
  7788                           ;tactiles.c: 47: top_push_state = top_push_state + 1;
  7789  1352  087D               	movf	_top_push_state,w	;volatile
  7790  1353  3E01               	addlw	1
  7791  1354  00B7               	movwf	??_read_top_tactile
  7792  1355  0837               	movf	??_read_top_tactile,w
  7793  1356  00FD               	movwf	_top_push_state	;volatile
  7794                           
  7795                           ;tactiles.c: 48: if (top_push_state >= 7) {
  7796  1357  3007               	movlw	7
  7797  1358  027D               	subwf	_top_push_state,w	;volatile
  7798  1359  1C03               	skipc
  7799  135A  2B5F               	goto	l3040
  7800                           
  7801                           ;tactiles.c: 49: top_push_state = 1;
  7802  135B  3001               	movlw	1
  7803  135C  00B7               	movwf	??_read_top_tactile
  7804  135D  0837               	movf	??_read_top_tactile,w
  7805  135E  00FD               	movwf	_top_push_state	;volatile
  7806  135F                     l3040:	
  7807                           
  7808                           ;tactiles.c: 50: }
  7809                           ;tactiles.c: 51: set_leds_top(top_push_state, 1);
  7810  135F  087D               	movf	_top_push_state,w	;volatile
  7811  1360  00B7               	movwf	??_read_top_tactile
  7812  1361  01B8               	clrf	??_read_top_tactile+1
  7813  1362  0837               	movf	??_read_top_tactile,w
  7814  1363  00A0               	movwf	set_leds_top@x
  7815  1364  0838               	movf	??_read_top_tactile+1,w
  7816  1365  00A1               	movwf	set_leds_top@x+1
  7817  1366  3001               	movlw	1
  7818  1367  00A2               	movwf	set_leds_top@ledState
  7819  1368  3000               	movlw	0
  7820  1369  00A3               	movwf	set_leds_top@ledState+1
  7821  136A  3187  27A8  3193   	fcall	_set_leds_top
  7822                           
  7823                           ;tactiles.c: 52: delay_time_changed = 1;
  7824  136D  3001               	movlw	1
  7825  136E  0022               	movlb	2	; select bank2
  7826  136F  00E0               	movwf	_delay_time_changed^(0+256)
  7827  1370  3000               	movlw	0
  7828  1371  00E1               	movwf	(_delay_time_changed^(0+256)+1)
  7829                           
  7830                           ;tactiles.c: 53: FLASH_WriteWord(0x1F81, myBuf, top_push_state);
  7831  1372  3081               	movlw	129
  7832  1373  0020               	movlb	0	; select bank0
  7833  1374  00AD               	movwf	FLASH_WriteWord@flashAddr
  7834  1375  301F               	movlw	31
  7835  1376  00AE               	movwf	FLASH_WriteWord@flashAddr+1
  7836  1377  3020               	movlw	(low (_myBuf| (0+512)))& (0+255)
  7837  1378  00B7               	movwf	??_read_top_tactile
  7838  1379  0837               	movf	??_read_top_tactile,w
  7839  137A  00AF               	movwf	FLASH_WriteWord@ramBuf
  7840  137B  087D               	movf	_top_push_state,w	;volatile
  7841  137C  00B8               	movwf	??_read_top_tactile+1
  7842  137D  01B9               	clrf	??_read_top_tactile+2
  7843  137E  0838               	movf	??_read_top_tactile+1,w
  7844  137F  00B0               	movwf	FLASH_WriteWord@word
  7845  1380  0839               	movf	??_read_top_tactile+2,w
  7846  1381  00B1               	movwf	FLASH_WriteWord@word+1
  7847  1382  3194  2410  3193   	fcall	_FLASH_WriteWord
  7848  1385                     l720:	
  7849                           ;tactiles.c: 54: while (PORTDbits.RD5 == 0) {
  7850                           
  7851  1385  0020               	movlb	0	; select bank0
  7852  1386  1E8F               	btfss	15,5	;volatile
  7853  1387  2B85               	goto	l720
  7854                           
  7855                           ;tactiles.c: 55: }
  7856                           ;tactiles.c: 56: wait_ms(20);
  7857  1388  3014               	movlw	20
  7858  1389  00AC               	movwf	wait_ms@time
  7859  138A  3000               	movlw	0
  7860  138B  00AD               	movwf	wait_ms@time+1
  7861  138C  3191  2148         	fcall	_wait_ms
  7862  138E  0008               	return
  7863  138F                     __end_of_read_top_tactile:	
  7864                           
  7865                           	psect	text11
  7866  1179                     __ptext11:	
  7867 ;; *************** function _read_bottom_tactile *****************
  7868 ;; Defined at:
  7869 ;;		line 18 in file "tactiles.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;		None
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  1    wreg      void 
  7876 ;; Registers used:
  7877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7885 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7886 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7887 ;;Total ram usage:        3 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    5
  7890 ;; This function calls:
  7891 ;;		_FLASH_WriteWord
  7892 ;;		_set_leds_bottom
  7893 ;;		_wait_ms
  7894 ;; This function is called by:
  7895 ;;		_main
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           
  7900                           ;psect for function _read_bottom_tactile
  7901  1179                     _read_bottom_tactile:	
  7902                           
  7903                           ;tactiles.c: 25: if (PORTDbits.RD6 == 0) {
  7904                           
  7905                           ;incstack = 0
  7906                           ; Regs used in _read_bottom_tactile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7907  1179  0020               	movlb	0	; select bank0
  7908  117A  1B0F               	btfsc	15,6	;volatile
  7909  117B  0008               	return
  7910                           
  7911                           ;tactiles.c: 26: bottom_push_state++;
  7912  117C  3001               	movlw	1
  7913  117D  00B7               	movwf	??_read_bottom_tactile
  7914  117E  0837               	movf	??_read_bottom_tactile,w
  7915  117F  0021               	movlb	1	; select bank1
  7916  1180  07EE               	addwf	_bottom_push_state^(0+128),f
  7917                           
  7918                           ;tactiles.c: 27: if (bottom_push_state >= 7) {
  7919  1181  3007               	movlw	7
  7920  1182  026E               	subwf	_bottom_push_state^(0+128),w
  7921  1183  1C03               	skipc
  7922  1184  2987               	goto	l3026
  7923                           
  7924                           ;tactiles.c: 28: bottom_push_state = 1;
  7925  1185  01EE               	clrf	_bottom_push_state^(0+128)
  7926  1186  0AEE               	incf	_bottom_push_state^(0+128),f
  7927  1187                     l3026:	
  7928                           
  7929                           ;tactiles.c: 29: }
  7930                           ;tactiles.c: 30: set_leds_bottom(bottom_push_state);
  7931  1187  086E               	movf	_bottom_push_state^(0+128),w
  7932  1188  0020               	movlb	0	; select bank0
  7933  1189  00B7               	movwf	??_read_bottom_tactile
  7934  118A  01B8               	clrf	??_read_bottom_tactile+1
  7935  118B  0837               	movf	??_read_bottom_tactile,w
  7936  118C  00A0               	movwf	set_leds_bottom@x
  7937  118D  0838               	movf	??_read_bottom_tactile+1,w
  7938  118E  00A1               	movwf	set_leds_bottom@x+1
  7939  118F  3192  2299  3191   	fcall	_set_leds_bottom
  7940                           
  7941                           ;tactiles.c: 31: FLASH_WriteWord(0x1F82, myBuf, bottom_push_state);
  7942  1192  3082               	movlw	130
  7943  1193  0020               	movlb	0	; select bank0
  7944  1194  00AD               	movwf	FLASH_WriteWord@flashAddr
  7945  1195  301F               	movlw	31
  7946  1196  00AE               	movwf	FLASH_WriteWord@flashAddr+1
  7947  1197  3020               	movlw	(low (_myBuf| (0+512)))& (0+255)
  7948  1198  00B7               	movwf	??_read_bottom_tactile
  7949  1199  0837               	movf	??_read_bottom_tactile,w
  7950  119A  00AF               	movwf	FLASH_WriteWord@ramBuf
  7951  119B  0021               	movlb	1	; select bank1
  7952  119C  086E               	movf	_bottom_push_state^(0+128),w
  7953  119D  0020               	movlb	0	; select bank0
  7954  119E  00B8               	movwf	??_read_bottom_tactile+1
  7955  119F  01B9               	clrf	??_read_bottom_tactile+2
  7956  11A0  0838               	movf	??_read_bottom_tactile+1,w
  7957  11A1  00B0               	movwf	FLASH_WriteWord@word
  7958  11A2  0839               	movf	??_read_bottom_tactile+2,w
  7959  11A3  00B1               	movwf	FLASH_WriteWord@word+1
  7960  11A4  3194  2410  3191   	fcall	_FLASH_WriteWord
  7961  11A7                     l712:	
  7962                           ;tactiles.c: 32: while (PORTDbits.RD6 == 0) {
  7963                           
  7964  11A7  0020               	movlb	0	; select bank0
  7965  11A8  1F0F               	btfss	15,6	;volatile
  7966  11A9  29A7               	goto	l712
  7967                           
  7968                           ;tactiles.c: 33: }
  7969                           ;tactiles.c: 34: wait_ms(20);
  7970  11AA  3014               	movlw	20
  7971  11AB  00AC               	movwf	wait_ms@time
  7972  11AC  3000               	movlw	0
  7973  11AD  00AD               	movwf	wait_ms@time+1
  7974  11AE  3191  2148         	fcall	_wait_ms
  7975  11B0  0008               	return
  7976  11B1                     __end_of_read_bottom_tactile:	
  7977                           
  7978                           	psect	text12
  7979  1148                     __ptext12:	
  7980 ;; *************** function _wait_ms *****************
  7981 ;; Defined at:
  7982 ;;		line 23 in file "system.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  time            2   12[BANK0 ] unsigned int 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;		None
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      void 
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0, pclath, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8000 ;;Total ram usage:        2 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    3
  8003 ;; This function calls:
  8004 ;;		___lmul
  8005 ;; This function is called by:
  8006 ;;		_star_tactiles
  8007 ;;		_solidring_tactiles
  8008 ;;		_read_bottom_tactile
  8009 ;;		_read_top_tactile
  8010 ;;		_showError_Alternating
  8011 ;;		_show_error
  8012 ;;		_show_cancel
  8013 ;;		_ring_tactiles
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           
  8018                           ;psect for function _wait_ms
  8019  1148                     _wait_ms:	
  8020                           
  8021                           ;system.c: 25: static long timel = 0;
  8022                           ;system.c: 26: timel = time * 1000l;
  8023                           
  8024                           ;incstack = 0
  8025                           ; Regs used in _wait_ms: [wreg+status,2+status,0+pclath+cstack]
  8026  1148  0020               	movlb	0	; select bank0
  8027  1149  082C               	movf	wait_ms@time,w
  8028  114A  00A0               	movwf	___lmul@multiplier
  8029  114B  082D               	movf	wait_ms@time+1,w
  8030  114C  00A1               	movwf	___lmul@multiplier+1
  8031  114D  01A2               	clrf	___lmul@multiplier+2
  8032  114E  01A3               	clrf	___lmul@multiplier+3
  8033  114F  3000               	movlw	0
  8034  1150  00A7               	movwf	___lmul@multiplicand+3
  8035  1151  3000               	movlw	0
  8036  1152  00A6               	movwf	___lmul@multiplicand+2
  8037  1153  3003               	movlw	3
  8038  1154  00A5               	movwf	___lmul@multiplicand+1
  8039  1155  30E8               	movlw	232
  8040  1156  00A4               	movwf	___lmul@multiplicand
  8041  1157  3191  2118  3191   	fcall	___lmul
  8042  115A  0020               	movlb	0	; select bank0
  8043  115B  0823               	movf	?___lmul+3,w
  8044  115C  0022               	movlb	2	; select bank2
  8045  115D  00CB               	movwf	(wait_ms@timel+3)^(0+256)
  8046  115E  0020               	movlb	0	; select bank0
  8047  115F  0822               	movf	?___lmul+2,w
  8048  1160  0022               	movlb	2	; select bank2
  8049  1161  00CA               	movwf	(wait_ms@timel+2)^(0+256)
  8050  1162  0020               	movlb	0	; select bank0
  8051  1163  0821               	movf	?___lmul+1,w
  8052  1164  0022               	movlb	2	; select bank2
  8053  1165  00C9               	movwf	(wait_ms@timel+1)^(0+256)
  8054  1166  0020               	movlb	0	; select bank0
  8055  1167  0820               	movf	?___lmul,w
  8056  1168  0022               	movlb	2	; select bank2
  8057  1169  00C8               	movwf	wait_ms@timel^(0+256)
  8058  116A                     l332:	
  8059                           ;system.c: 27: for( ; timel; timel--);
  8060                           
  8061  116A  084B               	movf	(wait_ms@timel+3)^(0+256),w
  8062  116B  044A               	iorwf	(wait_ms@timel+2)^(0+256),w
  8063  116C  0449               	iorwf	(wait_ms@timel+1)^(0+256),w
  8064  116D  0448               	iorwf	wait_ms@timel^(0+256),w
  8065  116E  1903               	btfsc	3,2
  8066  116F  0008               	return
  8067  1170  30FF               	movlw	255
  8068  1171  07C8               	addwf	wait_ms@timel^(0+256),f
  8069  1172  30FF               	movlw	255
  8070  1173  3DC9               	addwfc	(wait_ms@timel+1)^(0+256),f
  8071  1174  30FF               	movlw	255
  8072  1175  3DCA               	addwfc	(wait_ms@timel+2)^(0+256),f
  8073  1176  30FF               	movlw	255
  8074  1177  3DCB               	addwfc	(wait_ms@timel+3)^(0+256),f
  8075  1178  296A               	goto	l332
  8076  1179                     __end_of_wait_ms:	
  8077                           
  8078                           	psect	text13
  8079  1118                     __ptext13:	
  8080 ;; *************** function ___lmul *****************
  8081 ;; Defined at:
  8082 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8085 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  product         4    8[BANK0 ] unsigned long 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  4    0[BANK0 ] unsigned long 
  8090 ;; Registers used:
  8091 ;;		wreg, status,2, status,0
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8097 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8098 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8100 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8101 ;;Total ram usage:       12 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:    2
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_wait_ms
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           
  8112                           ;psect for function ___lmul
  8113  1118                     ___lmul:	
  8114                           
  8115                           ;incstack = 0
  8116                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8117  1118  3000               	movlw	0
  8118  1119  0020               	movlb	0	; select bank0
  8119  111A  00AB               	movwf	___lmul@product+3
  8120  111B  3000               	movlw	0
  8121  111C  00AA               	movwf	___lmul@product+2
  8122  111D  3000               	movlw	0
  8123  111E  00A9               	movwf	___lmul@product+1
  8124  111F  3000               	movlw	0
  8125  1120  00A8               	movwf	___lmul@product
  8126  1121                     l2444:	
  8127  1121  1C20               	btfss	___lmul@multiplier,0
  8128  1122  292B               	goto	l2448
  8129  1123  0824               	movf	___lmul@multiplicand,w
  8130  1124  07A8               	addwf	___lmul@product,f
  8131  1125  0825               	movf	___lmul@multiplicand+1,w
  8132  1126  3DA9               	addwfc	___lmul@product+1,f
  8133  1127  0826               	movf	___lmul@multiplicand+2,w
  8134  1128  3DAA               	addwfc	___lmul@product+2,f
  8135  1129  0827               	movf	___lmul@multiplicand+3,w
  8136  112A  3DAB               	addwfc	___lmul@product+3,f
  8137  112B                     l2448:	
  8138  112B  3001               	movlw	1
  8139  112C                     u1995:	
  8140  112C  35A4               	lslf	___lmul@multiplicand,f
  8141  112D  0DA5               	rlf	___lmul@multiplicand+1,f
  8142  112E  0DA6               	rlf	___lmul@multiplicand+2,f
  8143  112F  0DA7               	rlf	___lmul@multiplicand+3,f
  8144  1130  0B89               	decfsz	9,f
  8145  1131  292C               	goto	u1995
  8146  1132  3001               	movlw	1
  8147  1133                     u2005:	
  8148  1133  36A3               	lsrf	___lmul@multiplier+3,f
  8149  1134  0CA2               	rrf	___lmul@multiplier+2,f
  8150  1135  0CA1               	rrf	___lmul@multiplier+1,f
  8151  1136  0CA0               	rrf	___lmul@multiplier,f
  8152  1137  0B89               	decfsz	9,f
  8153  1138  2933               	goto	u2005
  8154  1139  0823               	movf	___lmul@multiplier+3,w
  8155  113A  0422               	iorwf	___lmul@multiplier+2,w
  8156  113B  0421               	iorwf	___lmul@multiplier+1,w
  8157  113C  0420               	iorwf	___lmul@multiplier,w
  8158  113D  1D03               	skipz
  8159  113E  2921               	goto	l2444
  8160  113F  082B               	movf	___lmul@product+3,w
  8161  1140  00A3               	movwf	?___lmul+3
  8162  1141  082A               	movf	___lmul@product+2,w
  8163  1142  00A2               	movwf	?___lmul+2
  8164  1143  0829               	movf	___lmul@product+1,w
  8165  1144  00A1               	movwf	?___lmul+1
  8166  1145  0828               	movf	___lmul@product,w
  8167  1146  00A0               	movwf	?___lmul
  8168  1147  0008               	return
  8169  1148                     __end_of___lmul:	
  8170                           
  8171                           	psect	text14
  8172  1410                     __ptext14:	
  8173 ;; *************** function _FLASH_WriteWord *****************
  8174 ;; Defined at:
  8175 ;;		line 74 in file "memory.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  flashAddr       2   13[BANK0 ] unsigned int 
  8178 ;;  ramBuf          1   15[BANK0 ] PTR unsigned int 
  8179 ;;		 -> myBuf(64), 
  8180 ;;  word            2   16[BANK0 ] unsigned int 
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;  blockStartAd    2   20[BANK0 ] unsigned int 
  8183 ;;  i               1   22[BANK0 ] unsigned char 
  8184 ;;  offset          1   19[BANK0 ] unsigned char 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  1    wreg      void 
  8187 ;; Registers used:
  8188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8194 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8195 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8196 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8197 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8198 ;;Total ram usage:       10 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:    4
  8201 ;; This function calls:
  8202 ;;		_FLASH_ReadWord
  8203 ;;		_FLASH_WriteBlock
  8204 ;; This function is called by:
  8205 ;;		_read_bottom_tactile
  8206 ;;		_read_top_tactile
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           
  8211                           ;psect for function _FLASH_WriteWord
  8212  1410                     _FLASH_WriteWord:	
  8213                           
  8214                           ;memory.c: 75: uint16_t blockStartAddr = (uint16_t) (flashAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  8215                           
  8216                           ;incstack = 0
  8217                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8218  1410  30E0               	movlw	224
  8219  1411  0020               	movlb	0	; select bank0
  8220  1412  052D               	andwf	FLASH_WriteWord@flashAddr,w
  8221  1413  00B4               	movwf	FLASH_WriteWord@blockStartAddr
  8222  1414  303F               	movlw	63
  8223  1415  052E               	andwf	FLASH_WriteWord@flashAddr+1,w
  8224  1416  00B5               	movwf	FLASH_WriteWord@blockStartAddr+1
  8225                           
  8226                           ;memory.c: 76: uint8_t offset = (uint8_t) (flashAddr & (32 - 1));
  8227  1417  082D               	movf	FLASH_WriteWord@flashAddr,w
  8228  1418  391F               	andlw	31
  8229  1419  00B2               	movwf	??_FLASH_WriteWord
  8230  141A  0832               	movf	??_FLASH_WriteWord,w
  8231  141B  00B3               	movwf	FLASH_WriteWord@offset
  8232                           
  8233                           ;memory.c: 77: uint8_t i;
  8234                           ;memory.c: 80: for (i = 0; i < 32; i++) {
  8235  141C  01B6               	clrf	FLASH_WriteWord@i
  8236  141D  3020               	movlw	32
  8237  141E  0236               	subwf	FLASH_WriteWord@i,w
  8238  141F  1803               	btfsc	3,0
  8239  1420  2C3F               	goto	l2644
  8240  1421                     l2638:	
  8241                           
  8242                           ;memory.c: 81: ramBuf[i] = FLASH_ReadWord((blockStartAddr + i));
  8243  1421  0836               	movf	FLASH_WriteWord@i,w
  8244  1422  0734               	addwf	FLASH_WriteWord@blockStartAddr,w
  8245  1423  00A0               	movwf	FLASH_ReadWord@flashAddr
  8246  1424  0835               	movf	FLASH_WriteWord@blockStartAddr+1,w
  8247  1425  1803               	skipnc
  8248  1426  0A35               	incf	FLASH_WriteWord@blockStartAddr+1,w
  8249  1427  00A1               	movwf	FLASH_ReadWord@flashAddr+1
  8250  1428  3190  203A  3194   	fcall	_FLASH_ReadWord
  8251  142B  0020               	movlb	0	; select bank0
  8252  142C  3536               	lslf	FLASH_WriteWord@i,w
  8253  142D  072F               	addwf	FLASH_WriteWord@ramBuf,w
  8254  142E  00B2               	movwf	??_FLASH_WriteWord
  8255  142F  0832               	movf	??_FLASH_WriteWord,w
  8256  1430  0086               	movwf	6
  8257  1431  3002               	movlw	2	; select bank4/5
  8258  1432  0087               	movwf	7
  8259  1433  0820               	movf	?_FLASH_ReadWord,w
  8260  1434  3FC0               	movwi [0]fsr1
  8261  1435  0821               	movf	?_FLASH_ReadWord+1,w
  8262  1436  3FC1               	movwi [1]fsr1
  8263  1437  3001               	movlw	1
  8264  1438  00B2               	movwf	??_FLASH_WriteWord
  8265  1439  0832               	movf	??_FLASH_WriteWord,w
  8266  143A  07B6               	addwf	FLASH_WriteWord@i,f
  8267  143B  3020               	movlw	32
  8268  143C  0236               	subwf	FLASH_WriteWord@i,w
  8269  143D  1C03               	skipc
  8270  143E  2C21               	goto	l2638
  8271  143F                     l2644:	
  8272                           
  8273                           ;memory.c: 82: }
  8274                           ;memory.c: 85: ramBuf[offset] = word;
  8275  143F  3533               	lslf	FLASH_WriteWord@offset,w
  8276  1440  072F               	addwf	FLASH_WriteWord@ramBuf,w
  8277  1441  00B2               	movwf	??_FLASH_WriteWord
  8278  1442  0832               	movf	??_FLASH_WriteWord,w
  8279  1443  0086               	movwf	6
  8280  1444  3002               	movlw	2	; select bank4/5
  8281  1445  0087               	movwf	7
  8282  1446  0830               	movf	FLASH_WriteWord@word,w
  8283  1447  3FC0               	movwi [0]fsr1
  8284  1448  0831               	movf	FLASH_WriteWord@word+1,w
  8285  1449  3FC1               	movwi [1]fsr1
  8286                           
  8287                           ;memory.c: 88: FLASH_WriteBlock(blockStartAddr, ramBuf);
  8288  144A  0835               	movf	FLASH_WriteWord@blockStartAddr+1,w
  8289  144B  00A4               	movwf	FLASH_WriteBlock@writeAddr+1
  8290  144C  0834               	movf	FLASH_WriteWord@blockStartAddr,w
  8291  144D  00A3               	movwf	FLASH_WriteBlock@writeAddr
  8292  144E  082F               	movf	FLASH_WriteWord@ramBuf,w
  8293  144F  00B2               	movwf	??_FLASH_WriteWord
  8294  1450  0832               	movf	??_FLASH_WriteWord,w
  8295  1451  00A5               	movwf	FLASH_WriteBlock@flashWordArray
  8296  1452  3188  2003         	fcall	_FLASH_WriteBlock
  8297  1454  0008               	return
  8298  1455                     __end_of_FLASH_WriteWord:	
  8299                           
  8300                           	psect	text15
  8301  0803                     __ptext15:	
  8302 ;; *************** function _FLASH_WriteBlock *****************
  8303 ;; Defined at:
  8304 ;;		line 91 in file "memory.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;  writeAddr       2    3[BANK0 ] unsigned int 
  8307 ;;  flashWordArr    1    5[BANK0 ] PTR unsigned int 
  8308 ;;		 -> myBuf(64), 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  blockStartAd    2    9[BANK0 ] unsigned int 
  8311 ;;  i               1   12[BANK0 ] unsigned char 
  8312 ;;  GIEBitValue     1   11[BANK0 ] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      char 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8322 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8323 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8324 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8325 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8326 ;;Total ram usage:       10 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    3
  8329 ;; This function calls:
  8330 ;;		_FLASH_EraseBlock
  8331 ;; This function is called by:
  8332 ;;		_FLASH_WriteWord
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           
  8337                           ;psect for function _FLASH_WriteBlock
  8338  0803                     _FLASH_WriteBlock:	
  8339                           
  8340                           ;memory.c: 92: uint16_t blockStartAddr = (uint16_t) (writeAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  8341                           
  8342                           ;incstack = 0
  8343                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8344  0803  30E0               	movlw	224
  8345  0804  0020               	movlb	0	; select bank0
  8346  0805  0523               	andwf	FLASH_WriteBlock@writeAddr,w
  8347  0806  00A9               	movwf	FLASH_WriteBlock@blockStartAddr
  8348  0807  303F               	movlw	63
  8349  0808  0524               	andwf	FLASH_WriteBlock@writeAddr+1,w
  8350  0809  00AA               	movwf	FLASH_WriteBlock@blockStartAddr+1
  8351                           
  8352                           ;memory.c: 93: uint8_t GIEBitValue = INTCONbits.GIE;
  8353  080A  3000               	movlw	0
  8354  080B  1B8B               	btfsc	11,7	;volatile
  8355  080C  3001               	movlw	1
  8356  080D  00AB               	movwf	FLASH_WriteBlock@GIEBitValue
  8357                           
  8358                           ;memory.c: 94: uint8_t i;
  8359                           ;memory.c: 97: if (writeAddr != blockStartAddr) {
  8360  080E  082A               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  8361  080F  0624               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  8362  0810  1D03               	skipz
  8363  0811  2814               	goto	u2035
  8364  0812  0829               	movf	FLASH_WriteBlock@blockStartAddr,w
  8365  0813  0623               	xorwf	FLASH_WriteBlock@writeAddr,w
  8366  0814                     u2035:	
  8367  0814  1D03               	btfss	3,2
  8368  0815  0008               	return
  8369                           
  8370                           ;memory.c: 99: }
  8371                           ;memory.c: 101: INTCONbits.GIE = 0;
  8372                           
  8373                           ;memory.c: 98: return -1;
  8374                           ;	Return value of _FLASH_WriteBlock is never used
  8375  0816  138B               	bcf	11,7	;volatile
  8376                           
  8377                           ;memory.c: 104: FLASH_EraseBlock(writeAddr);
  8378  0817  0824               	movf	FLASH_WriteBlock@writeAddr+1,w
  8379  0818  00A1               	movwf	FLASH_EraseBlock@startAddr+1
  8380  0819  0823               	movf	FLASH_WriteBlock@writeAddr,w
  8381  081A  00A0               	movwf	FLASH_EraseBlock@startAddr
  8382  081B  3190  205A  3188   	fcall	_FLASH_EraseBlock
  8383                           
  8384                           ;memory.c: 107: PMCON1bits.CFGS = 0;
  8385  081E  0023               	movlb	3	; select bank3
  8386  081F  1315               	bcf	21,6	;volatile
  8387                           
  8388                           ;memory.c: 108: PMCON1bits.WREN = 1;
  8389  0820  1515               	bsf	21,2	;volatile
  8390                           
  8391                           ;memory.c: 109: PMCON1bits.LWLO = 1;
  8392  0821  1695               	bsf	21,5	;volatile
  8393                           
  8394                           ;memory.c: 111: for (i = 0; i < 32; i++) {
  8395  0822  0020               	movlb	0	; select bank0
  8396  0823  01AC               	clrf	FLASH_WriteBlock@i
  8397  0824  3020               	movlw	32
  8398  0825  022C               	subwf	FLASH_WriteBlock@i,w
  8399  0826  1803               	btfsc	3,0
  8400  0827  2865               	goto	l537
  8401  0828                     l2542:	
  8402                           
  8403                           ;memory.c: 113: PMADRL = (writeAddr & 0xFF);
  8404  0828  0823               	movf	FLASH_WriteBlock@writeAddr,w
  8405  0829  0023               	movlb	3	; select bank3
  8406  082A  0091               	movwf	17	;volatile
  8407                           
  8408                           ;memory.c: 115: PMADRH = ((writeAddr & 0xFF00) >> 8);
  8409  082B  0020               	movlb	0	; select bank0
  8410  082C  0824               	movf	FLASH_WriteBlock@writeAddr+1,w
  8411  082D  0023               	movlb	3	; select bank3
  8412  082E  0092               	movwf	18	;volatile
  8413                           
  8414                           ;memory.c: 118: PMDATL = flashWordArray[i];
  8415  082F  0020               	movlb	0	; select bank0
  8416  0830  352C               	lslf	FLASH_WriteBlock@i,w
  8417  0831  0725               	addwf	FLASH_WriteBlock@flashWordArray,w
  8418  0832  00A6               	movwf	??_FLASH_WriteBlock
  8419  0833  0826               	movf	??_FLASH_WriteBlock,w
  8420  0834  0086               	movwf	6
  8421  0835  3002               	movlw	2	; select bank4/5
  8422  0836  0087               	movwf	7
  8423  0837  0801               	movf	1,w
  8424  0838  0023               	movlb	3	; select bank3
  8425  0839  0093               	movwf	19	;volatile
  8426                           
  8427                           ;memory.c: 119: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  8428  083A  0020               	movlb	0	; select bank0
  8429  083B  352C               	lslf	FLASH_WriteBlock@i,w
  8430  083C  0725               	addwf	FLASH_WriteBlock@flashWordArray,w
  8431  083D  00A6               	movwf	??_FLASH_WriteBlock
  8432  083E  0826               	movf	??_FLASH_WriteBlock,w
  8433  083F  0086               	movwf	6
  8434  0840  3002               	movlw	2	; select bank4/5
  8435  0841  0087               	movwf	7
  8436  0842  3F40               	moviw [0]fsr1
  8437  0843  00A7               	movwf	??_FLASH_WriteBlock+1
  8438  0844  3F41               	moviw [1]fsr1
  8439  0845  00A8               	movwf	??_FLASH_WriteBlock+2
  8440  0846  0828               	movf	??_FLASH_WriteBlock+2,w
  8441  0847  0023               	movlb	3	; select bank3
  8442  0848  0094               	movwf	20	;volatile
  8443                           
  8444                           ;memory.c: 121: if (i == (32 - 1)) {
  8445  0849  301F               	movlw	31
  8446  084A  0020               	movlb	0	; select bank0
  8447  084B  062C               	xorwf	FLASH_WriteBlock@i,w
  8448  084C  1D03               	btfss	3,2
  8449  084D  2850               	goto	l2554
  8450                           
  8451                           ;memory.c: 123: PMCON1bits.LWLO = 0;
  8452  084E  0023               	movlb	3	; select bank3
  8453  084F  1295               	bcf	21,5	;volatile
  8454  0850                     l2554:	
  8455                           
  8456                           ;memory.c: 124: }
  8457                           ;memory.c: 126: PMCON2 = 0x55;
  8458  0850  3055               	movlw	85
  8459  0851  0023               	movlb	3	; select bank3
  8460  0852  0096               	movwf	22	;volsfr
  8461                           
  8462                           ;memory.c: 127: PMCON2 = 0xAA;
  8463  0853  30AA               	movlw	170
  8464  0854  0096               	movwf	22	;volsfr
  8465                           
  8466                           ;memory.c: 128: PMCON1bits.WR = 1;
  8467  0855  1495               	bsf	21,1	;volatile
  8468                           
  8469                           ;memory.c: 129: __nop();
  8470  0856  0000               	nop
  8471                           
  8472                           ;memory.c: 130: __nop();
  8473  0857  0000               	nop
  8474                           
  8475                           ;memory.c: 132: writeAddr++;
  8476  0858  3001               	movlw	1
  8477  0859  0020               	movlb	0	; select bank0
  8478  085A  07A3               	addwf	FLASH_WriteBlock@writeAddr,f
  8479  085B  3000               	movlw	0
  8480  085C  3DA4               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  8481  085D  3001               	movlw	1
  8482  085E  00A6               	movwf	??_FLASH_WriteBlock
  8483  085F  0826               	movf	??_FLASH_WriteBlock,w
  8484  0860  07AC               	addwf	FLASH_WriteBlock@i,f
  8485  0861  3020               	movlw	32
  8486  0862  022C               	subwf	FLASH_WriteBlock@i,w
  8487  0863  1C03               	skipc
  8488  0864  2828               	goto	l2542
  8489  0865                     l537:	
  8490                           
  8491                           ;memory.c: 133: }
  8492                           ;memory.c: 135: PMCON1bits.WREN = 0;
  8493  0865  0023               	movlb	3	; select bank3
  8494  0866  1115               	bcf	21,2	;volatile
  8495                           
  8496                           ;memory.c: 136: INTCONbits.GIE = GIEBitValue;
  8497  0867  0020               	movlb	0	; select bank0
  8498  0868  0C2B               	rrf	FLASH_WriteBlock@GIEBitValue,w
  8499  0869  1C03               	skipc
  8500  086A  138B               	bcf	11,7	;volatile
  8501  086B  1803               	skipnc
  8502  086C  178B               	bsf	11,7	;volatile
  8503  086D  0008               	return
  8504  086E                     __end_of_FLASH_WriteBlock:	
  8505                           ;memory.c: 138: return 0;
  8506                           ;	Return value of _FLASH_WriteBlock is never used
  8507                           
  8508                           
  8509                           	psect	text16
  8510  105A                     __ptext16:	
  8511 ;; *************** function _FLASH_EraseBlock *****************
  8512 ;; Defined at:
  8513 ;;		line 141 in file "memory.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  startAddr       2    0[BANK0 ] unsigned int 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      void 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8528 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8530 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8531 ;;Total ram usage:        3 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:    2
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_FLASH_WriteBlock
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           
  8542                           ;psect for function _FLASH_EraseBlock
  8543  105A                     _FLASH_EraseBlock:	
  8544                           
  8545                           ;memory.c: 142: uint8_t GIEBitValue = INTCONbits.GIE;
  8546                           
  8547                           ;incstack = 0
  8548                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  8549  105A  3000               	movlw	0
  8550  105B  1B8B               	btfsc	11,7	;volatile
  8551  105C  3001               	movlw	1
  8552  105D  0020               	movlb	0	; select bank0
  8553  105E  00A2               	movwf	FLASH_EraseBlock@GIEBitValue
  8554                           
  8555                           ;memory.c: 145: INTCONbits.GIE = 0;
  8556  105F  138B               	bcf	11,7	;volatile
  8557                           
  8558                           ;memory.c: 147: PMADRL = (startAddr & 0xFF);
  8559  1060  0820               	movf	FLASH_EraseBlock@startAddr,w
  8560  1061  0023               	movlb	3	; select bank3
  8561  1062  0091               	movwf	17	;volatile
  8562                           
  8563                           ;memory.c: 149: PMADRH = ((startAddr & 0xFF00) >> 8);
  8564  1063  0020               	movlb	0	; select bank0
  8565  1064  0821               	movf	FLASH_EraseBlock@startAddr+1,w
  8566  1065  0023               	movlb	3	; select bank3
  8567  1066  0092               	movwf	18	;volatile
  8568                           
  8569                           ;memory.c: 152: PMCON1bits.CFGS = 0;
  8570  1067  1315               	bcf	21,6	;volatile
  8571                           
  8572                           ;memory.c: 153: PMCON1bits.FREE = 1;
  8573  1068  1615               	bsf	21,4	;volatile
  8574                           
  8575                           ;memory.c: 154: PMCON1bits.WREN = 1;
  8576  1069  1515               	bsf	21,2	;volatile
  8577                           
  8578                           ;memory.c: 157: PMCON2 = 0x55;
  8579  106A  3055               	movlw	85
  8580  106B  0096               	movwf	22	;volsfr
  8581                           
  8582                           ;memory.c: 158: PMCON2 = 0xAA;
  8583  106C  30AA               	movlw	170
  8584  106D  0096               	movwf	22	;volsfr
  8585                           
  8586                           ;memory.c: 159: PMCON1bits.WR = 1;
  8587  106E  1495               	bsf	21,1	;volatile
  8588                           
  8589                           ;memory.c: 160: __nop();
  8590  106F  0000               	nop
  8591                           
  8592                           ;memory.c: 161: __nop();
  8593  1070  0000               	nop
  8594                           
  8595                           ;memory.c: 163: PMCON1bits.WREN = 0;
  8596  1071  0023               	movlb	3	; select bank3
  8597  1072  1115               	bcf	21,2	;volatile
  8598                           
  8599                           ;memory.c: 164: INTCONbits.GIE = GIEBitValue;
  8600  1073  0020               	movlb	0	; select bank0
  8601  1074  0C22               	rrf	FLASH_EraseBlock@GIEBitValue,w
  8602  1075  1C03               	skipc
  8603  1076  138B               	bcf	11,7	;volatile
  8604  1077  1803               	skipnc
  8605  1078  178B               	bsf	11,7	;volatile
  8606  1079  0008               	return
  8607  107A                     __end_of_FLASH_EraseBlock:	
  8608                           
  8609                           	psect	text17
  8610  1311                     __ptext17:	
  8611 ;; *************** function _modulation *****************
  8612 ;; Defined at:
  8613 ;;		line 169 in file "user.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;  x               2   21[BANK0 ] int 
  8616 ;;  y               2   23[BANK0 ] int 
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  2   21[BANK0 ] int 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2, status,0, pclath, cstack
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8628 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8630 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8631 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8632 ;;Total ram usage:       12 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:    3
  8635 ;; This function calls:
  8636 ;;		___aldiv
  8637 ;;		___wmul
  8638 ;; This function is called by:
  8639 ;;		_main
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           
  8644                           ;psect for function _modulation
  8645  1311                     _modulation:	
  8646                           
  8647                           ;user.c: 171: x = (127500 + (y * x)) / 1000;
  8648                           
  8649                           ;incstack = 0
  8650                           ; Regs used in _modulation: [wreg+status,2+status,0+pclath+cstack]
  8651  1311  3000               	movlw	0
  8652  1312  0020               	movlb	0	; select bank0
  8653  1313  00A9               	movwf	___aldiv@divisor+3
  8654  1314  3000               	movlw	0
  8655  1315  00A8               	movwf	___aldiv@divisor+2
  8656  1316  3003               	movlw	3
  8657  1317  00A7               	movwf	___aldiv@divisor+1
  8658  1318  30E8               	movlw	232
  8659  1319  00A6               	movwf	___aldiv@divisor
  8660  131A  300C               	movlw	12
  8661  131B  00B9               	movwf	??_modulation
  8662  131C  30F2               	movlw	242
  8663  131D  00BA               	movwf	??_modulation+1
  8664  131E  3001               	movlw	1
  8665  131F  00BB               	movwf	??_modulation+2
  8666  1320  3000               	movlw	0
  8667  1321  00BC               	movwf	??_modulation+3
  8668  1322  0838               	movf	modulation@y+1,w
  8669  1323  00A1               	movwf	___wmul@multiplier+1
  8670  1324  0837               	movf	modulation@y,w
  8671  1325  00A0               	movwf	___wmul@multiplier
  8672  1326  0836               	movf	modulation@x+1,w
  8673  1327  00A3               	movwf	___wmul@multiplicand+1
  8674  1328  0835               	movf	modulation@x,w
  8675  1329  00A2               	movwf	___wmul@multiplicand
  8676  132A  3190  201E  3193   	fcall	___wmul
  8677  132D  0020               	movlb	0	; select bank0
  8678  132E  0820               	movf	?___wmul,w
  8679  132F  00BD               	movwf	??_modulation+4
  8680  1330  0821               	movf	?___wmul+1,w
  8681  1331  00BE               	movwf	??_modulation+5
  8682  1332  3000               	movlw	0
  8683  1333  1BBE               	btfsc	??_modulation+5,7
  8684  1334  30FF               	movlw	255
  8685  1335  00BF               	movwf	??_modulation+6
  8686  1336  00C0               	movwf	??_modulation+7
  8687  1337  083D               	movf	??_modulation+4,w
  8688  1338  07B9               	addwf	??_modulation,f
  8689  1339  083E               	movf	??_modulation+5,w
  8690  133A  3DBA               	addwfc	??_modulation+1,f
  8691  133B  083F               	movf	??_modulation+6,w
  8692  133C  3DBB               	addwfc	??_modulation+2,f
  8693  133D  0840               	movf	??_modulation+7,w
  8694  133E  3DBC               	addwfc	??_modulation+3,f
  8695  133F  083C               	movf	??_modulation+3,w
  8696  1340  00AD               	movwf	___aldiv@dividend+3
  8697  1341  083B               	movf	??_modulation+2,w
  8698  1342  00AC               	movwf	___aldiv@dividend+2
  8699  1343  083A               	movf	??_modulation+1,w
  8700  1344  00AB               	movwf	___aldiv@dividend+1
  8701  1345  0839               	movf	??_modulation,w
  8702  1346  00AA               	movwf	___aldiv@dividend
  8703  1347  3196  26F3         	fcall	___aldiv
  8704  1349  0020               	movlb	0	; select bank0
  8705  134A  0827               	movf	?___aldiv+1,w
  8706  134B  00B6               	movwf	modulation@x+1
  8707  134C  0826               	movf	?___aldiv,w
  8708  134D  00B5               	movwf	modulation@x
  8709                           
  8710                           ;user.c: 172: return x;
  8711  134E  0008               	return
  8712  134F                     __end_of_modulation:	
  8713                           
  8714                           	psect	text18
  8715  101E                     __ptext18:	
  8716 ;; *************** function ___wmul *****************
  8717 ;; Defined at:
  8718 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8721 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;  product         2    4[BANK0 ] unsigned int 
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  2    0[BANK0 ] unsigned int 
  8726 ;; Registers used:
  8727 ;;		wreg, status,2, status,0
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8734 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8736 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8737 ;;Total ram usage:        6 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; Hardware stack levels required when called:    2
  8740 ;; This function calls:
  8741 ;;		Nothing
  8742 ;; This function is called by:
  8743 ;;		_modulation
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           
  8748                           ;psect for function ___wmul
  8749  101E                     ___wmul:	
  8750                           
  8751                           ;incstack = 0
  8752                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8753  101E  0020               	movlb	0	; select bank0
  8754  101F  01A4               	clrf	___wmul@product
  8755  1020  01A5               	clrf	___wmul@product+1
  8756  1021                     l2696:	
  8757  1021  1C20               	btfss	___wmul@multiplier,0
  8758  1022  2827               	goto	l786
  8759  1023  0822               	movf	___wmul@multiplicand,w
  8760  1024  07A4               	addwf	___wmul@product,f
  8761  1025  0823               	movf	___wmul@multiplicand+1,w
  8762  1026  3DA5               	addwfc	___wmul@product+1,f
  8763  1027                     l786:	
  8764  1027  3001               	movlw	1
  8765  1028                     u2275:	
  8766  1028  35A2               	lslf	___wmul@multiplicand,f
  8767  1029  0DA3               	rlf	___wmul@multiplicand+1,f
  8768  102A  0B89               	decfsz	9,f
  8769  102B  2828               	goto	u2275
  8770  102C  3001               	movlw	1
  8771  102D                     u2285:	
  8772  102D  36A1               	lsrf	___wmul@multiplier+1,f
  8773  102E  0CA0               	rrf	___wmul@multiplier,f
  8774  102F  0B89               	decfsz	9,f
  8775  1030  282D               	goto	u2285
  8776  1031  0820               	movf	___wmul@multiplier,w
  8777  1032  0421               	iorwf	___wmul@multiplier+1,w
  8778  1033  1D03               	btfss	3,2
  8779  1034  2821               	goto	l2696
  8780  1035  0825               	movf	___wmul@product+1,w
  8781  1036  00A1               	movwf	?___wmul+1
  8782  1037  0824               	movf	___wmul@product,w
  8783  1038  00A0               	movwf	?___wmul
  8784  1039  0008               	return
  8785  103A                     __end_of___wmul:	
  8786                           
  8787                           	psect	text19
  8788  16F3                     __ptext19:	
  8789 ;; *************** function ___aldiv *****************
  8790 ;; Defined at:
  8791 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  divisor         4    6[BANK0 ] long 
  8794 ;;  dividend        4   10[BANK0 ] long 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  quotient        4   17[BANK0 ] long 
  8797 ;;  sign            1   16[BANK0 ] unsigned char 
  8798 ;;  counter         1   15[BANK0 ] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  4    6[BANK0 ] long 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8808 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8809 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8810 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8811 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8812 ;;Total ram usage:       15 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    2
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_main
  8819 ;;		_modulation
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           
  8824                           ;psect for function ___aldiv
  8825  16F3                     ___aldiv:	
  8826                           
  8827                           ;incstack = 0
  8828                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8829  16F3  0020               	movlb	0	; select bank0
  8830  16F4  01B0               	clrf	___aldiv@sign
  8831  16F5  1FA9               	btfss	___aldiv@divisor+3,7
  8832  16F6  2F04               	goto	l841
  8833  16F7  09A6               	comf	___aldiv@divisor,f
  8834  16F8  09A7               	comf	___aldiv@divisor+1,f
  8835  16F9  09A8               	comf	___aldiv@divisor+2,f
  8836  16FA  09A9               	comf	___aldiv@divisor+3,f
  8837  16FB  0AA6               	incf	___aldiv@divisor,f
  8838  16FC  1903               	skipnz
  8839  16FD  0AA7               	incf	___aldiv@divisor+1,f
  8840  16FE  1903               	skipnz
  8841  16FF  0AA8               	incf	___aldiv@divisor+2,f
  8842  1700  1903               	skipnz
  8843  1701  0AA9               	incf	___aldiv@divisor+3,f
  8844  1702  01B0               	clrf	___aldiv@sign
  8845  1703  0AB0               	incf	___aldiv@sign,f
  8846  1704                     l841:	
  8847  1704  1FAD               	btfss	___aldiv@dividend+3,7
  8848  1705  2F15               	goto	l2718
  8849  1706  09AA               	comf	___aldiv@dividend,f
  8850  1707  09AB               	comf	___aldiv@dividend+1,f
  8851  1708  09AC               	comf	___aldiv@dividend+2,f
  8852  1709  09AD               	comf	___aldiv@dividend+3,f
  8853  170A  0AAA               	incf	___aldiv@dividend,f
  8854  170B  1903               	skipnz
  8855  170C  0AAB               	incf	___aldiv@dividend+1,f
  8856  170D  1903               	skipnz
  8857  170E  0AAC               	incf	___aldiv@dividend+2,f
  8858  170F  1903               	skipnz
  8859  1710  0AAD               	incf	___aldiv@dividend+3,f
  8860  1711  3001               	movlw	1
  8861  1712  00AE               	movwf	??___aldiv
  8862  1713  082E               	movf	??___aldiv,w
  8863  1714  06B0               	xorwf	___aldiv@sign,f
  8864  1715                     l2718:	
  8865  1715  3000               	movlw	0
  8866  1716  00B4               	movwf	___aldiv@quotient+3
  8867  1717  3000               	movlw	0
  8868  1718  00B3               	movwf	___aldiv@quotient+2
  8869  1719  3000               	movlw	0
  8870  171A  00B2               	movwf	___aldiv@quotient+1
  8871  171B  3000               	movlw	0
  8872  171C  00B1               	movwf	___aldiv@quotient
  8873  171D  0829               	movf	___aldiv@divisor+3,w
  8874  171E  0428               	iorwf	___aldiv@divisor+2,w
  8875  171F  0427               	iorwf	___aldiv@divisor+1,w
  8876  1720  0426               	iorwf	___aldiv@divisor,w
  8877  1721  1903               	skipnz
  8878  1722  2F5E               	goto	l2740
  8879  1723  01AF               	clrf	___aldiv@counter
  8880  1724  0AAF               	incf	___aldiv@counter,f
  8881  1725                     l2726:	
  8882  1725  1BA9               	btfsc	___aldiv@divisor+3,7
  8883  1726  2F33               	goto	l2728
  8884  1727  3001               	movlw	1
  8885  1728                     u2335:	
  8886  1728  35A6               	lslf	___aldiv@divisor,f
  8887  1729  0DA7               	rlf	___aldiv@divisor+1,f
  8888  172A  0DA8               	rlf	___aldiv@divisor+2,f
  8889  172B  0DA9               	rlf	___aldiv@divisor+3,f
  8890  172C  0B89               	decfsz	9,f
  8891  172D  2F28               	goto	u2335
  8892  172E  3001               	movlw	1
  8893  172F  00AE               	movwf	??___aldiv
  8894  1730  082E               	movf	??___aldiv,w
  8895  1731  07AF               	addwf	___aldiv@counter,f
  8896  1732  2F25               	goto	l2726
  8897  1733                     l2728:	
  8898  1733  3001               	movlw	1
  8899  1734                     u2355:	
  8900  1734  35B1               	lslf	___aldiv@quotient,f
  8901  1735  0DB2               	rlf	___aldiv@quotient+1,f
  8902  1736  0DB3               	rlf	___aldiv@quotient+2,f
  8903  1737  0DB4               	rlf	___aldiv@quotient+3,f
  8904  1738  0B89               	decfsz	9,f
  8905  1739  2F34               	goto	u2355
  8906  173A  0829               	movf	___aldiv@divisor+3,w
  8907  173B  022D               	subwf	___aldiv@dividend+3,w
  8908  173C  1D03               	skipz
  8909  173D  2F48               	goto	u2365
  8910  173E  0828               	movf	___aldiv@divisor+2,w
  8911  173F  022C               	subwf	___aldiv@dividend+2,w
  8912  1740  1D03               	skipz
  8913  1741  2F48               	goto	u2365
  8914  1742  0827               	movf	___aldiv@divisor+1,w
  8915  1743  022B               	subwf	___aldiv@dividend+1,w
  8916  1744  1D03               	skipz
  8917  1745  2F48               	goto	u2365
  8918  1746  0826               	movf	___aldiv@divisor,w
  8919  1747  022A               	subwf	___aldiv@dividend,w
  8920  1748                     u2365:	
  8921  1748  1C03               	skipc
  8922  1749  2F53               	goto	l2736
  8923  174A  0826               	movf	___aldiv@divisor,w
  8924  174B  02AA               	subwf	___aldiv@dividend,f
  8925  174C  0827               	movf	___aldiv@divisor+1,w
  8926  174D  3BAB               	subwfb	___aldiv@dividend+1,f
  8927  174E  0828               	movf	___aldiv@divisor+2,w
  8928  174F  3BAC               	subwfb	___aldiv@dividend+2,f
  8929  1750  0829               	movf	___aldiv@divisor+3,w
  8930  1751  3BAD               	subwfb	___aldiv@dividend+3,f
  8931  1752  1431               	bsf	___aldiv@quotient,0
  8932  1753                     l2736:	
  8933  1753  3001               	movlw	1
  8934  1754                     u2375:	
  8935  1754  36A9               	lsrf	___aldiv@divisor+3,f
  8936  1755  0CA8               	rrf	___aldiv@divisor+2,f
  8937  1756  0CA7               	rrf	___aldiv@divisor+1,f
  8938  1757  0CA6               	rrf	___aldiv@divisor,f
  8939  1758  0B89               	decfsz	9,f
  8940  1759  2F54               	goto	u2375
  8941  175A  3001               	movlw	1
  8942  175B  02AF               	subwf	___aldiv@counter,f
  8943  175C  1D03               	btfss	3,2
  8944  175D  2F33               	goto	l2728
  8945  175E                     l2740:	
  8946  175E  0830               	movf	___aldiv@sign,w
  8947  175F  1903               	btfsc	3,2
  8948  1760  2F6C               	goto	l2744
  8949  1761  09B1               	comf	___aldiv@quotient,f
  8950  1762  09B2               	comf	___aldiv@quotient+1,f
  8951  1763  09B3               	comf	___aldiv@quotient+2,f
  8952  1764  09B4               	comf	___aldiv@quotient+3,f
  8953  1765  0AB1               	incf	___aldiv@quotient,f
  8954  1766  1903               	skipnz
  8955  1767  0AB2               	incf	___aldiv@quotient+1,f
  8956  1768  1903               	skipnz
  8957  1769  0AB3               	incf	___aldiv@quotient+2,f
  8958  176A  1903               	skipnz
  8959  176B  0AB4               	incf	___aldiv@quotient+3,f
  8960  176C                     l2744:	
  8961  176C  0834               	movf	___aldiv@quotient+3,w
  8962  176D  00A9               	movwf	?___aldiv+3
  8963  176E  0833               	movf	___aldiv@quotient+2,w
  8964  176F  00A8               	movwf	?___aldiv+2
  8965  1770  0832               	movf	___aldiv@quotient+1,w
  8966  1771  00A7               	movwf	?___aldiv+1
  8967  1772  0831               	movf	___aldiv@quotient,w
  8968  1773  00A6               	movwf	?___aldiv
  8969  1774  0008               	return
  8970  1775                     __end_of___aldiv:	
  8971                           
  8972                           	psect	text20
  8973  1775                     __ptext20:	
  8974 ;; *************** function _map *****************
  8975 ;; Defined at:
  8976 ;;		line 165 in file "user.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  x               3   53[BANK0 ] float 
  8979 ;;  in_min          3   56[BANK0 ] float 
  8980 ;;  in_max          3   59[BANK0 ] float 
  8981 ;;  out_min         3   62[BANK0 ] float 
  8982 ;;  out_max         3   65[BANK0 ] float 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  3   53[BANK0 ] float 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2, status,0, pclath, cstack
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8994 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8995 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8997 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8998 ;;Total ram usage:       18 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    4
  9001 ;; This function calls:
  9002 ;;		___ftadd
  9003 ;;		___ftdiv
  9004 ;;		___ftmul
  9005 ;;		___ftneg
  9006 ;; This function is called by:
  9007 ;;		_main
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           
  9012                           ;psect for function _map
  9013  1775                     _map:	
  9014                           
  9015                           ;user.c: 166: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  9016                           
  9017                           ;incstack = 0
  9018                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  9019  1775  0020               	movlb	0	; select bank0
  9020  1776  085B               	movf	map@in_max,w
  9021  1777  00A8               	movwf	___ftadd@f1
  9022  1778  085C               	movf	map@in_max+1,w
  9023  1779  00A9               	movwf	___ftadd@f1+1
  9024  177A  085D               	movf	map@in_max+2,w
  9025  177B  00AA               	movwf	___ftadd@f1+2
  9026  177C  0858               	movf	map@in_min,w
  9027  177D  00A0               	movwf	___ftneg@f1
  9028  177E  0859               	movf	map@in_min+1,w
  9029  177F  00A1               	movwf	___ftneg@f1+1
  9030  1780  085A               	movf	map@in_min+2,w
  9031  1781  00A2               	movwf	___ftneg@f1+2
  9032  1782  319F  278C  3197   	fcall	___ftneg
  9033  1785  0020               	movlb	0	; select bank0
  9034  1786  0820               	movf	?___ftneg,w
  9035  1787  00AB               	movwf	___ftadd@f2
  9036  1788  0821               	movf	?___ftneg+1,w
  9037  1789  00AC               	movwf	___ftadd@f2+1
  9038  178A  0822               	movf	?___ftneg+2,w
  9039  178B  00AD               	movwf	___ftadd@f2+2
  9040  178C  3185  2555  3197   	fcall	___ftadd
  9041  178F  0020               	movlb	0	; select bank0
  9042  1790  0828               	movf	?___ftadd,w
  9043  1791  00C5               	movwf	___ftdiv@f2
  9044  1792  0829               	movf	?___ftadd+1,w
  9045  1793  00C6               	movwf	___ftdiv@f2+1
  9046  1794  082A               	movf	?___ftadd+2,w
  9047  1795  00C7               	movwf	___ftdiv@f2+2
  9048  1796  0861               	movf	map@out_max,w
  9049  1797  00A8               	movwf	___ftadd@f1
  9050  1798  0862               	movf	map@out_max+1,w
  9051  1799  00A9               	movwf	___ftadd@f1+1
  9052  179A  0863               	movf	map@out_max+2,w
  9053  179B  00AA               	movwf	___ftadd@f1+2
  9054  179C  085E               	movf	map@out_min,w
  9055  179D  00A0               	movwf	___ftneg@f1
  9056  179E  085F               	movf	map@out_min+1,w
  9057  179F  00A1               	movwf	___ftneg@f1+1
  9058  17A0  0860               	movf	map@out_min+2,w
  9059  17A1  00A2               	movwf	___ftneg@f1+2
  9060  17A2  319F  278C  3197   	fcall	___ftneg
  9061  17A5  0020               	movlb	0	; select bank0
  9062  17A6  0820               	movf	?___ftneg,w
  9063  17A7  00AB               	movwf	___ftadd@f2
  9064  17A8  0821               	movf	?___ftneg+1,w
  9065  17A9  00AC               	movwf	___ftadd@f2+1
  9066  17AA  0822               	movf	?___ftneg+2,w
  9067  17AB  00AD               	movwf	___ftadd@f2+2
  9068  17AC  3185  2555  3197   	fcall	___ftadd
  9069  17AF  0020               	movlb	0	; select bank0
  9070  17B0  0828               	movf	?___ftadd,w
  9071  17B1  00B5               	movwf	___ftmul@f1
  9072  17B2  0829               	movf	?___ftadd+1,w
  9073  17B3  00B6               	movwf	___ftmul@f1+1
  9074  17B4  082A               	movf	?___ftadd+2,w
  9075  17B5  00B7               	movwf	___ftmul@f1+2
  9076  17B6  0855               	movf	map@x,w
  9077  17B7  00A8               	movwf	___ftadd@f1
  9078  17B8  0856               	movf	map@x+1,w
  9079  17B9  00A9               	movwf	___ftadd@f1+1
  9080  17BA  0857               	movf	map@x+2,w
  9081  17BB  00AA               	movwf	___ftadd@f1+2
  9082  17BC  0858               	movf	map@in_min,w
  9083  17BD  00A0               	movwf	___ftneg@f1
  9084  17BE  0859               	movf	map@in_min+1,w
  9085  17BF  00A1               	movwf	___ftneg@f1+1
  9086  17C0  085A               	movf	map@in_min+2,w
  9087  17C1  00A2               	movwf	___ftneg@f1+2
  9088  17C2  319F  278C  3197   	fcall	___ftneg
  9089  17C5  0020               	movlb	0	; select bank0
  9090  17C6  0820               	movf	?___ftneg,w
  9091  17C7  00AB               	movwf	___ftadd@f2
  9092  17C8  0821               	movf	?___ftneg+1,w
  9093  17C9  00AC               	movwf	___ftadd@f2+1
  9094  17CA  0822               	movf	?___ftneg+2,w
  9095  17CB  00AD               	movwf	___ftadd@f2+2
  9096  17CC  3185  2555  3197   	fcall	___ftadd
  9097  17CF  0020               	movlb	0	; select bank0
  9098  17D0  0828               	movf	?___ftadd,w
  9099  17D1  00B8               	movwf	___ftmul@f2
  9100  17D2  0829               	movf	?___ftadd+1,w
  9101  17D3  00B9               	movwf	___ftmul@f2+1
  9102  17D4  082A               	movf	?___ftadd+2,w
  9103  17D5  00BA               	movwf	___ftmul@f2+2
  9104  17D6  3186  264B  3197   	fcall	___ftmul
  9105  17D9  0020               	movlb	0	; select bank0
  9106  17DA  0835               	movf	?___ftmul,w
  9107  17DB  00C8               	movwf	___ftdiv@f1
  9108  17DC  0836               	movf	?___ftmul+1,w
  9109  17DD  00C9               	movwf	___ftdiv@f1+1
  9110  17DE  0837               	movf	?___ftmul+2,w
  9111  17DF  00CA               	movwf	___ftdiv@f1+2
  9112  17E0  3186  26FF  3197   	fcall	___ftdiv
  9113  17E3  0020               	movlb	0	; select bank0
  9114  17E4  0845               	movf	?___ftdiv,w
  9115  17E5  00E4               	movwf	_map$1791
  9116  17E6  0846               	movf	?___ftdiv+1,w
  9117  17E7  00E5               	movwf	_map$1791+1
  9118  17E8  0847               	movf	?___ftdiv+2,w
  9119  17E9  00E6               	movwf	_map$1791+2
  9120                           
  9121                           ;user.c: 166: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  9122  17EA  085E               	movf	map@out_min,w
  9123  17EB  00A8               	movwf	___ftadd@f1
  9124  17EC  085F               	movf	map@out_min+1,w
  9125  17ED  00A9               	movwf	___ftadd@f1+1
  9126  17EE  0860               	movf	map@out_min+2,w
  9127  17EF  00AA               	movwf	___ftadd@f1+2
  9128  17F0  0864               	movf	_map$1791,w
  9129  17F1  00AB               	movwf	___ftadd@f2
  9130  17F2  0865               	movf	_map$1791+1,w
  9131  17F3  00AC               	movwf	___ftadd@f2+1
  9132  17F4  0866               	movf	_map$1791+2,w
  9133  17F5  00AD               	movwf	___ftadd@f2+2
  9134  17F6  3185  2555         	fcall	___ftadd
  9135  17F8  0020               	movlb	0	; select bank0
  9136  17F9  0828               	movf	?___ftadd,w
  9137  17FA  00D5               	movwf	?_map
  9138  17FB  0829               	movf	?___ftadd+1,w
  9139  17FC  00D6               	movwf	?_map+1
  9140  17FD  082A               	movf	?___ftadd+2,w
  9141  17FE  00D7               	movwf	?_map+2
  9142  17FF  0008               	return
  9143  1800                     __end_of_map:	
  9144                           
  9145                           	psect	text21
  9146  1F8C                     __ptext21:	
  9147 ;; *************** function ___ftneg *****************
  9148 ;; Defined at:
  9149 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;  f1              3    0[BANK0 ] float 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  3    0[BANK0 ] float 
  9156 ;; Registers used:
  9157 ;;		wreg
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9163 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9166 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9167 ;;Total ram usage:        3 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    2
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_map
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function ___ftneg
  9179  1F8C                     ___ftneg:	
  9180                           
  9181                           ;incstack = 0
  9182                           ; Regs used in ___ftneg: [wreg]
  9183  1F8C  0020               	movlb	0	; select bank0
  9184  1F8D  0822               	movf	___ftneg@f1+2,w
  9185  1F8E  0421               	iorwf	___ftneg@f1+1,w
  9186  1F8F  0420               	iorwf	___ftneg@f1,w
  9187  1F90  1903               	skipnz
  9188  1F91  0008               	return
  9189  1F92  3080               	movlw	128
  9190  1F93  06A2               	xorwf	___ftneg@f1+2,f
  9191  1F94  0008               	return
  9192  1F95                     __end_of___ftneg:	
  9193                           
  9194                           	psect	text22
  9195  064B                     __ptext22:	
  9196 ;; *************** function ___ftmul *****************
  9197 ;; Defined at:
  9198 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;  f1              3   21[BANK0 ] float 
  9201 ;;  f2              3   24[BANK0 ] float 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;  f3_as_produc    3   32[BANK0 ] unsigned um
  9204 ;;  sign            1   36[BANK0 ] unsigned char 
  9205 ;;  cntr            1   35[BANK0 ] unsigned char 
  9206 ;;  exp             1   31[BANK0 ] unsigned char 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  3   21[BANK0 ] float 
  9209 ;; Registers used:
  9210 ;;		wreg, status,2, status,0, pclath, cstack
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9216 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9217 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9218 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9219 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9220 ;;Total ram usage:       16 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:    3
  9223 ;; This function calls:
  9224 ;;		___ftpack
  9225 ;; This function is called by:
  9226 ;;		_set_subdivision
  9227 ;;		_map
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           
  9232                           ;psect for function ___ftmul
  9233  064B                     ___ftmul:	
  9234                           
  9235                           ;incstack = 0
  9236                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9237  064B  0020               	movlb	0	; select bank0
  9238  064C  0835               	movf	___ftmul@f1,w
  9239  064D  00BB               	movwf	??___ftmul
  9240  064E  0836               	movf	___ftmul@f1+1,w
  9241  064F  00BC               	movwf	??___ftmul+1
  9242  0650  0837               	movf	___ftmul@f1+2,w
  9243  0651  00BD               	movwf	??___ftmul+2
  9244  0652  1003               	clrc
  9245  0653  0D3C               	rlf	??___ftmul+1,w
  9246  0654  0D3D               	rlf	??___ftmul+2,w
  9247  0655  00BE               	movwf	??___ftmul+3
  9248  0656  083E               	movf	??___ftmul+3,w
  9249  0657  00BF               	movwf	___ftmul@exp
  9250  0658  083F               	movf	___ftmul@exp,w
  9251  0659  1D03               	btfss	3,2
  9252  065A  2E62               	goto	l2878
  9253  065B  3000               	movlw	0
  9254  065C  00B5               	movwf	?___ftmul
  9255  065D  3000               	movlw	0
  9256  065E  00B6               	movwf	?___ftmul+1
  9257  065F  3000               	movlw	0
  9258  0660  00B7               	movwf	?___ftmul+2
  9259  0661  0008               	return
  9260  0662                     l2878:	
  9261  0662  0838               	movf	___ftmul@f2,w
  9262  0663  00BB               	movwf	??___ftmul
  9263  0664  0839               	movf	___ftmul@f2+1,w
  9264  0665  00BC               	movwf	??___ftmul+1
  9265  0666  083A               	movf	___ftmul@f2+2,w
  9266  0667  00BD               	movwf	??___ftmul+2
  9267  0668  1003               	clrc
  9268  0669  0D3C               	rlf	??___ftmul+1,w
  9269  066A  0D3D               	rlf	??___ftmul+2,w
  9270  066B  00BE               	movwf	??___ftmul+3
  9271  066C  083E               	movf	??___ftmul+3,w
  9272  066D  00C4               	movwf	___ftmul@sign
  9273  066E  0844               	movf	___ftmul@sign,w
  9274  066F  1D03               	btfss	3,2
  9275  0670  2E78               	goto	l2884
  9276  0671  3000               	movlw	0
  9277  0672  00B5               	movwf	?___ftmul
  9278  0673  3000               	movlw	0
  9279  0674  00B6               	movwf	?___ftmul+1
  9280  0675  3000               	movlw	0
  9281  0676  00B7               	movwf	?___ftmul+2
  9282  0677  0008               	return
  9283  0678                     l2884:	
  9284  0678  0844               	movf	___ftmul@sign,w
  9285  0679  3E7B               	addlw	123
  9286  067A  00BB               	movwf	??___ftmul
  9287  067B  083B               	movf	??___ftmul,w
  9288  067C  07BF               	addwf	___ftmul@exp,f
  9289  067D  0835               	movf	___ftmul@f1,w
  9290  067E  00BB               	movwf	??___ftmul
  9291  067F  0836               	movf	___ftmul@f1+1,w
  9292  0680  00BC               	movwf	??___ftmul+1
  9293  0681  0837               	movf	___ftmul@f1+2,w
  9294  0682  00BD               	movwf	??___ftmul+2
  9295  0683  3010               	movlw	16
  9296  0684                     u2745:	
  9297  0684  36BD               	lsrf	??___ftmul+2,f
  9298  0685  0CBC               	rrf	??___ftmul+1,f
  9299  0686  0CBB               	rrf	??___ftmul,f
  9300  0687  0B89               	decfsz	9,f
  9301  0688  2E84               	goto	u2745
  9302  0689  083B               	movf	??___ftmul,w
  9303  068A  00BE               	movwf	??___ftmul+3
  9304  068B  083E               	movf	??___ftmul+3,w
  9305  068C  00C4               	movwf	___ftmul@sign
  9306  068D  0838               	movf	___ftmul@f2,w
  9307  068E  00BB               	movwf	??___ftmul
  9308  068F  0839               	movf	___ftmul@f2+1,w
  9309  0690  00BC               	movwf	??___ftmul+1
  9310  0691  083A               	movf	___ftmul@f2+2,w
  9311  0692  00BD               	movwf	??___ftmul+2
  9312  0693  3010               	movlw	16
  9313  0694                     u2755:	
  9314  0694  36BD               	lsrf	??___ftmul+2,f
  9315  0695  0CBC               	rrf	??___ftmul+1,f
  9316  0696  0CBB               	rrf	??___ftmul,f
  9317  0697  0B89               	decfsz	9,f
  9318  0698  2E94               	goto	u2755
  9319  0699  083B               	movf	??___ftmul,w
  9320  069A  00BE               	movwf	??___ftmul+3
  9321  069B  083E               	movf	??___ftmul+3,w
  9322  069C  06C4               	xorwf	___ftmul@sign,f
  9323  069D  3080               	movlw	128
  9324  069E  00BB               	movwf	??___ftmul
  9325  069F  083B               	movf	??___ftmul,w
  9326  06A0  05C4               	andwf	___ftmul@sign,f
  9327  06A1  17B6               	bsf	___ftmul@f1+1,7
  9328  06A2  17B9               	bsf	___ftmul@f2+1,7
  9329  06A3  30FF               	movlw	255
  9330  06A4  05B8               	andwf	___ftmul@f2,f
  9331  06A5  30FF               	movlw	255
  9332  06A6  05B9               	andwf	___ftmul@f2+1,f
  9333  06A7  3000               	movlw	0
  9334  06A8  05BA               	andwf	___ftmul@f2+2,f
  9335  06A9  3000               	movlw	0
  9336  06AA  00C0               	movwf	___ftmul@f3_as_product
  9337  06AB  3000               	movlw	0
  9338  06AC  00C1               	movwf	___ftmul@f3_as_product+1
  9339  06AD  3000               	movlw	0
  9340  06AE  00C2               	movwf	___ftmul@f3_as_product+2
  9341  06AF  3007               	movlw	7
  9342  06B0  00BB               	movwf	??___ftmul
  9343  06B1  083B               	movf	??___ftmul,w
  9344  06B2  00C3               	movwf	___ftmul@cntr
  9345  06B3                     l2896:	
  9346  06B3  1C35               	btfss	___ftmul@f1,0
  9347  06B4  2EBB               	goto	l2900
  9348  06B5  0838               	movf	___ftmul@f2,w
  9349  06B6  07C0               	addwf	___ftmul@f3_as_product,f
  9350  06B7  0839               	movf	___ftmul@f2+1,w
  9351  06B8  3DC1               	addwfc	___ftmul@f3_as_product+1,f
  9352  06B9  083A               	movf	___ftmul@f2+2,w
  9353  06BA  3DC2               	addwfc	___ftmul@f3_as_product+2,f
  9354  06BB                     l2900:	
  9355  06BB  3001               	movlw	1
  9356  06BC                     u2775:	
  9357  06BC  36B7               	lsrf	___ftmul@f1+2,f
  9358  06BD  0CB6               	rrf	___ftmul@f1+1,f
  9359  06BE  0CB5               	rrf	___ftmul@f1,f
  9360  06BF  0B89               	decfsz	9,f
  9361  06C0  2EBC               	goto	u2775
  9362  06C1  3001               	movlw	1
  9363  06C2                     u2785:	
  9364  06C2  35B8               	lslf	___ftmul@f2,f
  9365  06C3  0DB9               	rlf	___ftmul@f2+1,f
  9366  06C4  0DBA               	rlf	___ftmul@f2+2,f
  9367  06C5  0B89               	decfsz	9,f
  9368  06C6  2EC2               	goto	u2785
  9369  06C7  3001               	movlw	1
  9370  06C8  02C3               	subwf	___ftmul@cntr,f
  9371  06C9  1D03               	btfss	3,2
  9372  06CA  2EB3               	goto	l2896
  9373  06CB  3009               	movlw	9
  9374  06CC  00BB               	movwf	??___ftmul
  9375  06CD  083B               	movf	??___ftmul,w
  9376  06CE  00C3               	movwf	___ftmul@cntr
  9377  06CF                     l2908:	
  9378  06CF  1C35               	btfss	___ftmul@f1,0
  9379  06D0  2ED7               	goto	l2912
  9380  06D1  0838               	movf	___ftmul@f2,w
  9381  06D2  07C0               	addwf	___ftmul@f3_as_product,f
  9382  06D3  0839               	movf	___ftmul@f2+1,w
  9383  06D4  3DC1               	addwfc	___ftmul@f3_as_product+1,f
  9384  06D5  083A               	movf	___ftmul@f2+2,w
  9385  06D6  3DC2               	addwfc	___ftmul@f3_as_product+2,f
  9386  06D7                     l2912:	
  9387  06D7  3001               	movlw	1
  9388  06D8                     u2815:	
  9389  06D8  36B7               	lsrf	___ftmul@f1+2,f
  9390  06D9  0CB6               	rrf	___ftmul@f1+1,f
  9391  06DA  0CB5               	rrf	___ftmul@f1,f
  9392  06DB  0B89               	decfsz	9,f
  9393  06DC  2ED8               	goto	u2815
  9394  06DD  3001               	movlw	1
  9395  06DE                     u2825:	
  9396  06DE  36C2               	lsrf	___ftmul@f3_as_product+2,f
  9397  06DF  0CC1               	rrf	___ftmul@f3_as_product+1,f
  9398  06E0  0CC0               	rrf	___ftmul@f3_as_product,f
  9399  06E1  0B89               	decfsz	9,f
  9400  06E2  2EDE               	goto	u2825
  9401  06E3  3001               	movlw	1
  9402  06E4  02C3               	subwf	___ftmul@cntr,f
  9403  06E5  1D03               	btfss	3,2
  9404  06E6  2ECF               	goto	l2908
  9405  06E7  0840               	movf	___ftmul@f3_as_product,w
  9406  06E8  00A0               	movwf	___ftpack@arg
  9407  06E9  0841               	movf	___ftmul@f3_as_product+1,w
  9408  06EA  00A1               	movwf	___ftpack@arg+1
  9409  06EB  0842               	movf	___ftmul@f3_as_product+2,w
  9410  06EC  00A2               	movwf	___ftpack@arg+2
  9411  06ED  083F               	movf	___ftmul@exp,w
  9412  06EE  00BB               	movwf	??___ftmul
  9413  06EF  083B               	movf	??___ftmul,w
  9414  06F0  00A3               	movwf	___ftpack@exp
  9415  06F1  0844               	movf	___ftmul@sign,w
  9416  06F2  00BC               	movwf	??___ftmul+1
  9417  06F3  083C               	movf	??___ftmul+1,w
  9418  06F4  00A4               	movwf	___ftpack@sign
  9419  06F5  3196  261F         	fcall	___ftpack
  9420  06F7  0020               	movlb	0	; select bank0
  9421  06F8  0820               	movf	?___ftpack,w
  9422  06F9  00B5               	movwf	?___ftmul
  9423  06FA  0821               	movf	?___ftpack+1,w
  9424  06FB  00B6               	movwf	?___ftmul+1
  9425  06FC  0822               	movf	?___ftpack+2,w
  9426  06FD  00B7               	movwf	?___ftmul+2
  9427  06FE  0008               	return
  9428  06FF                     __end_of___ftmul:	
  9429                           
  9430                           	psect	text23
  9431  06FF                     __ptext23:	
  9432 ;; *************** function ___ftdiv *****************
  9433 ;; Defined at:
  9434 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;  f2              3   37[BANK0 ] float 
  9437 ;;  f1              3   40[BANK0 ] float 
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;  f3              3   48[BANK0 ] float 
  9440 ;;  sign            1   52[BANK0 ] unsigned char 
  9441 ;;  exp             1   51[BANK0 ] unsigned char 
  9442 ;;  cntr            1   47[BANK0 ] unsigned char 
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  3   37[BANK0 ] float 
  9445 ;; Registers used:
  9446 ;;		wreg, status,2, status,0, pclath, cstack
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9452 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9453 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9454 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9455 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9456 ;;Total ram usage:       16 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:    3
  9459 ;; This function calls:
  9460 ;;		___ftpack
  9461 ;; This function is called by:
  9462 ;;		_main
  9463 ;;		_map
  9464 ;; This function uses a non-reentrant model
  9465 ;;
  9466                           
  9467                           
  9468                           ;psect for function ___ftdiv
  9469  06FF                     ___ftdiv:	
  9470                           
  9471                           ;incstack = 0
  9472                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9473  06FF  0020               	movlb	0	; select bank0
  9474  0700  0848               	movf	___ftdiv@f1,w
  9475  0701  00CB               	movwf	??___ftdiv
  9476  0702  0849               	movf	___ftdiv@f1+1,w
  9477  0703  00CC               	movwf	??___ftdiv+1
  9478  0704  084A               	movf	___ftdiv@f1+2,w
  9479  0705  00CD               	movwf	??___ftdiv+2
  9480  0706  1003               	clrc
  9481  0707  0D4C               	rlf	??___ftdiv+1,w
  9482  0708  0D4D               	rlf	??___ftdiv+2,w
  9483  0709  00CE               	movwf	??___ftdiv+3
  9484  070A  084E               	movf	??___ftdiv+3,w
  9485  070B  00D3               	movwf	___ftdiv@exp
  9486  070C  0853               	movf	___ftdiv@exp,w
  9487  070D  1D03               	btfss	3,2
  9488  070E  2F16               	goto	l2836
  9489  070F  3000               	movlw	0
  9490  0710  00C5               	movwf	?___ftdiv
  9491  0711  3000               	movlw	0
  9492  0712  00C6               	movwf	?___ftdiv+1
  9493  0713  3000               	movlw	0
  9494  0714  00C7               	movwf	?___ftdiv+2
  9495  0715  0008               	return
  9496  0716                     l2836:	
  9497  0716  0845               	movf	___ftdiv@f2,w
  9498  0717  00CB               	movwf	??___ftdiv
  9499  0718  0846               	movf	___ftdiv@f2+1,w
  9500  0719  00CC               	movwf	??___ftdiv+1
  9501  071A  0847               	movf	___ftdiv@f2+2,w
  9502  071B  00CD               	movwf	??___ftdiv+2
  9503  071C  1003               	clrc
  9504  071D  0D4C               	rlf	??___ftdiv+1,w
  9505  071E  0D4D               	rlf	??___ftdiv+2,w
  9506  071F  00CE               	movwf	??___ftdiv+3
  9507  0720  084E               	movf	??___ftdiv+3,w
  9508  0721  00D4               	movwf	___ftdiv@sign
  9509  0722  0854               	movf	___ftdiv@sign,w
  9510  0723  1D03               	btfss	3,2
  9511  0724  2F2C               	goto	l2842
  9512  0725  3000               	movlw	0
  9513  0726  00C5               	movwf	?___ftdiv
  9514  0727  3000               	movlw	0
  9515  0728  00C6               	movwf	?___ftdiv+1
  9516  0729  3000               	movlw	0
  9517  072A  00C7               	movwf	?___ftdiv+2
  9518  072B  0008               	return
  9519  072C                     l2842:	
  9520  072C  3000               	movlw	0
  9521  072D  00D0               	movwf	___ftdiv@f3
  9522  072E  3000               	movlw	0
  9523  072F  00D1               	movwf	___ftdiv@f3+1
  9524  0730  3000               	movlw	0
  9525  0731  00D2               	movwf	___ftdiv@f3+2
  9526  0732  3089               	movlw	137
  9527  0733  0754               	addwf	___ftdiv@sign,w
  9528  0734  00CB               	movwf	??___ftdiv
  9529  0735  084B               	movf	??___ftdiv,w
  9530  0736  02D3               	subwf	___ftdiv@exp,f
  9531  0737  0848               	movf	___ftdiv@f1,w
  9532  0738  00CB               	movwf	??___ftdiv
  9533  0739  0849               	movf	___ftdiv@f1+1,w
  9534  073A  00CC               	movwf	??___ftdiv+1
  9535  073B  084A               	movf	___ftdiv@f1+2,w
  9536  073C  00CD               	movwf	??___ftdiv+2
  9537  073D  3010               	movlw	16
  9538  073E                     u2665:	
  9539  073E  36CD               	lsrf	??___ftdiv+2,f
  9540  073F  0CCC               	rrf	??___ftdiv+1,f
  9541  0740  0CCB               	rrf	??___ftdiv,f
  9542  0741  0B89               	decfsz	9,f
  9543  0742  2F3E               	goto	u2665
  9544  0743  084B               	movf	??___ftdiv,w
  9545  0744  00CE               	movwf	??___ftdiv+3
  9546  0745  084E               	movf	??___ftdiv+3,w
  9547  0746  00D4               	movwf	___ftdiv@sign
  9548  0747  0845               	movf	___ftdiv@f2,w
  9549  0748  00CB               	movwf	??___ftdiv
  9550  0749  0846               	movf	___ftdiv@f2+1,w
  9551  074A  00CC               	movwf	??___ftdiv+1
  9552  074B  0847               	movf	___ftdiv@f2+2,w
  9553  074C  00CD               	movwf	??___ftdiv+2
  9554  074D  3010               	movlw	16
  9555  074E                     u2675:	
  9556  074E  36CD               	lsrf	??___ftdiv+2,f
  9557  074F  0CCC               	rrf	??___ftdiv+1,f
  9558  0750  0CCB               	rrf	??___ftdiv,f
  9559  0751  0B89               	decfsz	9,f
  9560  0752  2F4E               	goto	u2675
  9561  0753  084B               	movf	??___ftdiv,w
  9562  0754  00CE               	movwf	??___ftdiv+3
  9563  0755  084E               	movf	??___ftdiv+3,w
  9564  0756  06D4               	xorwf	___ftdiv@sign,f
  9565  0757  3080               	movlw	128
  9566  0758  00CB               	movwf	??___ftdiv
  9567  0759  084B               	movf	??___ftdiv,w
  9568  075A  05D4               	andwf	___ftdiv@sign,f
  9569  075B  17C9               	bsf	___ftdiv@f1+1,7
  9570  075C  30FF               	movlw	255
  9571  075D  05C8               	andwf	___ftdiv@f1,f
  9572  075E  30FF               	movlw	255
  9573  075F  05C9               	andwf	___ftdiv@f1+1,f
  9574  0760  3000               	movlw	0
  9575  0761  05CA               	andwf	___ftdiv@f1+2,f
  9576  0762  17C6               	bsf	___ftdiv@f2+1,7
  9577  0763  30FF               	movlw	255
  9578  0764  05C5               	andwf	___ftdiv@f2,f
  9579  0765  30FF               	movlw	255
  9580  0766  05C6               	andwf	___ftdiv@f2+1,f
  9581  0767  3000               	movlw	0
  9582  0768  05C7               	andwf	___ftdiv@f2+2,f
  9583  0769  3018               	movlw	24
  9584  076A  00CB               	movwf	??___ftdiv
  9585  076B  084B               	movf	??___ftdiv,w
  9586  076C  00CF               	movwf	___ftdiv@cntr
  9587  076D                     l2856:	
  9588  076D  3001               	movlw	1
  9589  076E                     u2685:	
  9590  076E  35D0               	lslf	___ftdiv@f3,f
  9591  076F  0DD1               	rlf	___ftdiv@f3+1,f
  9592  0770  0DD2               	rlf	___ftdiv@f3+2,f
  9593  0771  0B89               	decfsz	9,f
  9594  0772  2F6E               	goto	u2685
  9595  0773  0847               	movf	___ftdiv@f2+2,w
  9596  0774  024A               	subwf	___ftdiv@f1+2,w
  9597  0775  1D03               	skipz
  9598  0776  2F7D               	goto	u2695
  9599  0777  0846               	movf	___ftdiv@f2+1,w
  9600  0778  0249               	subwf	___ftdiv@f1+1,w
  9601  0779  1D03               	skipz
  9602  077A  2F7D               	goto	u2695
  9603  077B  0845               	movf	___ftdiv@f2,w
  9604  077C  0248               	subwf	___ftdiv@f1,w
  9605  077D                     u2695:	
  9606  077D  1C03               	skipc
  9607  077E  2F86               	goto	l2864
  9608  077F  0845               	movf	___ftdiv@f2,w
  9609  0780  02C8               	subwf	___ftdiv@f1,f
  9610  0781  0846               	movf	___ftdiv@f2+1,w
  9611  0782  3BC9               	subwfb	___ftdiv@f1+1,f
  9612  0783  0847               	movf	___ftdiv@f2+2,w
  9613  0784  3BCA               	subwfb	___ftdiv@f1+2,f
  9614  0785  1450               	bsf	___ftdiv@f3,0
  9615  0786                     l2864:	
  9616  0786  3001               	movlw	1
  9617  0787                     u2705:	
  9618  0787  35C8               	lslf	___ftdiv@f1,f
  9619  0788  0DC9               	rlf	___ftdiv@f1+1,f
  9620  0789  0DCA               	rlf	___ftdiv@f1+2,f
  9621  078A  0B89               	decfsz	9,f
  9622  078B  2F87               	goto	u2705
  9623  078C  3001               	movlw	1
  9624  078D  02CF               	subwf	___ftdiv@cntr,f
  9625  078E  1D03               	btfss	3,2
  9626  078F  2F6D               	goto	l2856
  9627  0790  0850               	movf	___ftdiv@f3,w
  9628  0791  00A0               	movwf	___ftpack@arg
  9629  0792  0851               	movf	___ftdiv@f3+1,w
  9630  0793  00A1               	movwf	___ftpack@arg+1
  9631  0794  0852               	movf	___ftdiv@f3+2,w
  9632  0795  00A2               	movwf	___ftpack@arg+2
  9633  0796  0853               	movf	___ftdiv@exp,w
  9634  0797  00CB               	movwf	??___ftdiv
  9635  0798  084B               	movf	??___ftdiv,w
  9636  0799  00A3               	movwf	___ftpack@exp
  9637  079A  0854               	movf	___ftdiv@sign,w
  9638  079B  00CC               	movwf	??___ftdiv+1
  9639  079C  084C               	movf	??___ftdiv+1,w
  9640  079D  00A4               	movwf	___ftpack@sign
  9641  079E  3196  261F         	fcall	___ftpack
  9642  07A0  0020               	movlb	0	; select bank0
  9643  07A1  0820               	movf	?___ftpack,w
  9644  07A2  00C5               	movwf	?___ftdiv
  9645  07A3  0821               	movf	?___ftpack+1,w
  9646  07A4  00C6               	movwf	?___ftdiv+1
  9647  07A5  0822               	movf	?___ftpack+2,w
  9648  07A6  00C7               	movwf	?___ftdiv+2
  9649  07A7  0008               	return
  9650  07A8                     __end_of___ftdiv:	
  9651                           
  9652                           	psect	text24
  9653  0555                     __ptext24:	
  9654 ;; *************** function ___ftadd *****************
  9655 ;; Defined at:
  9656 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  f1              3    8[BANK0 ] float 
  9659 ;;  f2              3   11[BANK0 ] float 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;  exp1            1   20[BANK0 ] unsigned char 
  9662 ;;  exp2            1   19[BANK0 ] unsigned char 
  9663 ;;  sign            1   18[BANK0 ] unsigned char 
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  3    8[BANK0 ] float 
  9666 ;; Registers used:
  9667 ;;		wreg, status,2, status,0, pclath, cstack
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9673 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9674 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9675 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9676 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9677 ;;Total ram usage:       13 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; Hardware stack levels required when called:    3
  9680 ;; This function calls:
  9681 ;;		___ftpack
  9682 ;; This function is called by:
  9683 ;;		_map
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           
  9688                           ;psect for function ___ftadd
  9689  0555                     ___ftadd:	
  9690                           
  9691                           ;incstack = 0
  9692                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9693  0555  0020               	movlb	0	; select bank0
  9694  0556  0828               	movf	___ftadd@f1,w
  9695  0557  00AE               	movwf	??___ftadd
  9696  0558  0829               	movf	___ftadd@f1+1,w
  9697  0559  00AF               	movwf	??___ftadd+1
  9698  055A  082A               	movf	___ftadd@f1+2,w
  9699  055B  00B0               	movwf	??___ftadd+2
  9700  055C  1003               	clrc
  9701  055D  0D2F               	rlf	??___ftadd+1,w
  9702  055E  0D30               	rlf	??___ftadd+2,w
  9703  055F  00B1               	movwf	??___ftadd+3
  9704  0560  0831               	movf	??___ftadd+3,w
  9705  0561  00B4               	movwf	___ftadd@exp1
  9706  0562  082B               	movf	___ftadd@f2,w
  9707  0563  00AE               	movwf	??___ftadd
  9708  0564  082C               	movf	___ftadd@f2+1,w
  9709  0565  00AF               	movwf	??___ftadd+1
  9710  0566  082D               	movf	___ftadd@f2+2,w
  9711  0567  00B0               	movwf	??___ftadd+2
  9712  0568  1003               	clrc
  9713  0569  0D2F               	rlf	??___ftadd+1,w
  9714  056A  0D30               	rlf	??___ftadd+2,w
  9715  056B  00B1               	movwf	??___ftadd+3
  9716  056C  0831               	movf	??___ftadd+3,w
  9717  056D  00B3               	movwf	___ftadd@exp2
  9718  056E  0834               	movf	___ftadd@exp1,w
  9719  056F  1903               	btfsc	3,2
  9720  0570  2D7D               	goto	l2766
  9721  0571  0833               	movf	___ftadd@exp2,w
  9722  0572  0234               	subwf	___ftadd@exp1,w
  9723  0573  1803               	skipnc
  9724  0574  2D84               	goto	l2770
  9725  0575  0334               	decf	___ftadd@exp1,w
  9726  0576  3AFF               	xorlw	255
  9727  0577  0733               	addwf	___ftadd@exp2,w
  9728  0578  00AE               	movwf	??___ftadd
  9729  0579  3019               	movlw	25
  9730  057A  022E               	subwf	??___ftadd,w
  9731  057B  1C03               	skipc
  9732  057C  2D84               	goto	l2770
  9733  057D                     l2766:	
  9734  057D  082B               	movf	___ftadd@f2,w
  9735  057E  00A8               	movwf	?___ftadd
  9736  057F  082C               	movf	___ftadd@f2+1,w
  9737  0580  00A9               	movwf	?___ftadd+1
  9738  0581  082D               	movf	___ftadd@f2+2,w
  9739  0582  00AA               	movwf	?___ftadd+2
  9740  0583  0008               	return
  9741  0584                     l2770:	
  9742  0584  0833               	movf	___ftadd@exp2,w
  9743  0585  1903               	btfsc	3,2
  9744  0586  0008               	return
  9745  0587  0834               	movf	___ftadd@exp1,w
  9746  0588  0233               	subwf	___ftadd@exp2,w
  9747  0589  1803               	skipnc
  9748  058A  2D93               	goto	l2776
  9749  058B  0333               	decf	___ftadd@exp2,w
  9750  058C  3AFF               	xorlw	255
  9751  058D  0734               	addwf	___ftadd@exp1,w
  9752  058E  00AE               	movwf	??___ftadd
  9753  058F  3019               	movlw	25
  9754  0590  022E               	subwf	??___ftadd,w
  9755  0591  1803               	btfsc	3,0
  9756  0592  0008               	return
  9757  0593                     l2776:	
  9758  0593  3006               	movlw	6
  9759  0594  00AE               	movwf	??___ftadd
  9760  0595  082E               	movf	??___ftadd,w
  9761  0596  00B2               	movwf	___ftadd@sign
  9762  0597  1BAA               	btfsc	___ftadd@f1+2,7
  9763  0598  17B2               	bsf	___ftadd@sign,7
  9764  0599  1BAD               	btfsc	___ftadd@f2+2,7
  9765  059A  1732               	bsf	___ftadd@sign,6
  9766  059B  17A9               	bsf	___ftadd@f1+1,7
  9767  059C  30FF               	movlw	255
  9768  059D  05A8               	andwf	___ftadd@f1,f
  9769  059E  30FF               	movlw	255
  9770  059F  05A9               	andwf	___ftadd@f1+1,f
  9771  05A0  3000               	movlw	0
  9772  05A1  05AA               	andwf	___ftadd@f1+2,f
  9773  05A2  17AC               	bsf	___ftadd@f2+1,7
  9774  05A3  30FF               	movlw	255
  9775  05A4  05AB               	andwf	___ftadd@f2,f
  9776  05A5  30FF               	movlw	255
  9777  05A6  05AC               	andwf	___ftadd@f2+1,f
  9778  05A7  3000               	movlw	0
  9779  05A8  05AD               	andwf	___ftadd@f2+2,f
  9780  05A9  0833               	movf	___ftadd@exp2,w
  9781  05AA  0234               	subwf	___ftadd@exp1,w
  9782  05AB  1803               	skipnc
  9783  05AC  2DCF               	goto	l2798
  9784  05AD                     l2788:	
  9785  05AD  3001               	movlw	1
  9786  05AE                     u2505:	
  9787  05AE  35AB               	lslf	___ftadd@f2,f
  9788  05AF  0DAC               	rlf	___ftadd@f2+1,f
  9789  05B0  0DAD               	rlf	___ftadd@f2+2,f
  9790  05B1  0B89               	decfsz	9,f
  9791  05B2  2DAE               	goto	u2505
  9792  05B3  3001               	movlw	1
  9793  05B4  02B3               	subwf	___ftadd@exp2,f
  9794  05B5  0833               	movf	___ftadd@exp2,w
  9795  05B6  0634               	xorwf	___ftadd@exp1,w
  9796  05B7  1903               	skipnz
  9797  05B8  2DCA               	goto	l2796
  9798  05B9  3001               	movlw	1
  9799  05BA  02B2               	subwf	___ftadd@sign,f
  9800  05BB  0832               	movf	___ftadd@sign,w
  9801  05BC  3907               	andlw	7
  9802  05BD  1903               	btfsc	3,2
  9803  05BE  2DCA               	goto	l2796
  9804  05BF  2DAD               	goto	l2788
  9805  05C0                     l2794:	
  9806  05C0  3001               	movlw	1
  9807  05C1                     u2535:	
  9808  05C1  36AA               	lsrf	___ftadd@f1+2,f
  9809  05C2  0CA9               	rrf	___ftadd@f1+1,f
  9810  05C3  0CA8               	rrf	___ftadd@f1,f
  9811  05C4  0B89               	decfsz	9,f
  9812  05C5  2DC1               	goto	u2535
  9813  05C6  3001               	movlw	1
  9814  05C7  00AE               	movwf	??___ftadd
  9815  05C8  082E               	movf	??___ftadd,w
  9816  05C9  07B4               	addwf	___ftadd@exp1,f
  9817  05CA                     l2796:	
  9818  05CA  0834               	movf	___ftadd@exp1,w
  9819  05CB  0633               	xorwf	___ftadd@exp2,w
  9820  05CC  1903               	btfsc	3,2
  9821  05CD  2DF4               	goto	l978
  9822  05CE  2DC0               	goto	l2794
  9823  05CF                     l2798:	
  9824  05CF  0834               	movf	___ftadd@exp1,w
  9825  05D0  0233               	subwf	___ftadd@exp2,w
  9826  05D1  1803               	skipnc
  9827  05D2  2DF4               	goto	l978
  9828  05D3                     l2800:	
  9829  05D3  3001               	movlw	1
  9830  05D4                     u2565:	
  9831  05D4  35A8               	lslf	___ftadd@f1,f
  9832  05D5  0DA9               	rlf	___ftadd@f1+1,f
  9833  05D6  0DAA               	rlf	___ftadd@f1+2,f
  9834  05D7  0B89               	decfsz	9,f
  9835  05D8  2DD4               	goto	u2565
  9836  05D9  3001               	movlw	1
  9837  05DA  02B4               	subwf	___ftadd@exp1,f
  9838  05DB  0833               	movf	___ftadd@exp2,w
  9839  05DC  0634               	xorwf	___ftadd@exp1,w
  9840  05DD  1903               	skipnz
  9841  05DE  2DF0               	goto	l2808
  9842  05DF  3001               	movlw	1
  9843  05E0  02B2               	subwf	___ftadd@sign,f
  9844  05E1  0832               	movf	___ftadd@sign,w
  9845  05E2  3907               	andlw	7
  9846  05E3  1903               	btfsc	3,2
  9847  05E4  2DF0               	goto	l2808
  9848  05E5  2DD3               	goto	l2800
  9849  05E6                     l2806:	
  9850  05E6  3001               	movlw	1
  9851  05E7                     u2595:	
  9852  05E7  36AD               	lsrf	___ftadd@f2+2,f
  9853  05E8  0CAC               	rrf	___ftadd@f2+1,f
  9854  05E9  0CAB               	rrf	___ftadd@f2,f
  9855  05EA  0B89               	decfsz	9,f
  9856  05EB  2DE7               	goto	u2595
  9857  05EC  3001               	movlw	1
  9858  05ED  00AE               	movwf	??___ftadd
  9859  05EE  082E               	movf	??___ftadd,w
  9860  05EF  07B3               	addwf	___ftadd@exp2,f
  9861  05F0                     l2808:	
  9862  05F0  0834               	movf	___ftadd@exp1,w
  9863  05F1  0633               	xorwf	___ftadd@exp2,w
  9864  05F2  1D03               	skipz
  9865  05F3  2DE6               	goto	l2806
  9866  05F4                     l978:	
  9867  05F4  1FB2               	btfss	___ftadd@sign,7
  9868  05F5  2E06               	goto	l2812
  9869  05F6  30FF               	movlw	255
  9870  05F7  06A8               	xorwf	___ftadd@f1,f
  9871  05F8  30FF               	movlw	255
  9872  05F9  06A9               	xorwf	___ftadd@f1+1,f
  9873  05FA  30FF               	movlw	255
  9874  05FB  06AA               	xorwf	___ftadd@f1+2,f
  9875  05FC  3001               	movlw	1
  9876  05FD  07A8               	addwf	___ftadd@f1,f
  9877  05FE  3000               	movlw	0
  9878  05FF  1803               	skipnc
  9879  0600  3001               	movlw	1
  9880  0601  07A9               	addwf	___ftadd@f1+1,f
  9881  0602  3000               	movlw	0
  9882  0603  1803               	skipnc
  9883  0604  3001               	movlw	1
  9884  0605  07AA               	addwf	___ftadd@f1+2,f
  9885  0606                     l2812:	
  9886  0606  1F32               	btfss	___ftadd@sign,6
  9887  0607  2E18               	goto	l2816
  9888  0608  30FF               	movlw	255
  9889  0609  06AB               	xorwf	___ftadd@f2,f
  9890  060A  30FF               	movlw	255
  9891  060B  06AC               	xorwf	___ftadd@f2+1,f
  9892  060C  30FF               	movlw	255
  9893  060D  06AD               	xorwf	___ftadd@f2+2,f
  9894  060E  3001               	movlw	1
  9895  060F  07AB               	addwf	___ftadd@f2,f
  9896  0610  3000               	movlw	0
  9897  0611  1803               	skipnc
  9898  0612  3001               	movlw	1
  9899  0613  07AC               	addwf	___ftadd@f2+1,f
  9900  0614  3000               	movlw	0
  9901  0615  1803               	skipnc
  9902  0616  3001               	movlw	1
  9903  0617  07AD               	addwf	___ftadd@f2+2,f
  9904  0618                     l2816:	
  9905  0618  01B2               	clrf	___ftadd@sign
  9906  0619  0828               	movf	___ftadd@f1,w
  9907  061A  07AB               	addwf	___ftadd@f2,f
  9908  061B  0829               	movf	___ftadd@f1+1,w
  9909  061C  3DAC               	addwfc	___ftadd@f2+1,f
  9910  061D  082A               	movf	___ftadd@f1+2,w
  9911  061E  3DAD               	addwfc	___ftadd@f2+2,f
  9912  061F  1FAD               	btfss	___ftadd@f2+2,7
  9913  0620  2E33               	goto	l2826
  9914  0621  30FF               	movlw	255
  9915  0622  06AB               	xorwf	___ftadd@f2,f
  9916  0623  30FF               	movlw	255
  9917  0624  06AC               	xorwf	___ftadd@f2+1,f
  9918  0625  30FF               	movlw	255
  9919  0626  06AD               	xorwf	___ftadd@f2+2,f
  9920  0627  3001               	movlw	1
  9921  0628  07AB               	addwf	___ftadd@f2,f
  9922  0629  3000               	movlw	0
  9923  062A  1803               	skipnc
  9924  062B  3001               	movlw	1
  9925  062C  07AC               	addwf	___ftadd@f2+1,f
  9926  062D  3000               	movlw	0
  9927  062E  1803               	skipnc
  9928  062F  3001               	movlw	1
  9929  0630  07AD               	addwf	___ftadd@f2+2,f
  9930  0631  01B2               	clrf	___ftadd@sign
  9931  0632  0AB2               	incf	___ftadd@sign,f
  9932  0633                     l2826:	
  9933  0633  082B               	movf	___ftadd@f2,w
  9934  0634  00A0               	movwf	___ftpack@arg
  9935  0635  082C               	movf	___ftadd@f2+1,w
  9936  0636  00A1               	movwf	___ftpack@arg+1
  9937  0637  082D               	movf	___ftadd@f2+2,w
  9938  0638  00A2               	movwf	___ftpack@arg+2
  9939  0639  0834               	movf	___ftadd@exp1,w
  9940  063A  00AE               	movwf	??___ftadd
  9941  063B  082E               	movf	??___ftadd,w
  9942  063C  00A3               	movwf	___ftpack@exp
  9943  063D  0832               	movf	___ftadd@sign,w
  9944  063E  00AF               	movwf	??___ftadd+1
  9945  063F  082F               	movf	??___ftadd+1,w
  9946  0640  00A4               	movwf	___ftpack@sign
  9947  0641  3196  261F         	fcall	___ftpack
  9948  0643  0020               	movlb	0	; select bank0
  9949  0644  0820               	movf	?___ftpack,w
  9950  0645  00A8               	movwf	?___ftadd
  9951  0646  0821               	movf	?___ftpack+1,w
  9952  0647  00A9               	movwf	?___ftadd+1
  9953  0648  0822               	movf	?___ftpack+2,w
  9954  0649  00AA               	movwf	?___ftadd+2
  9955  064A  0008               	return
  9956  064B                     __end_of___ftadd:	
  9957                           
  9958                           	psect	text25
  9959  1005                     __ptext25:	
  9960 ;; *************** function _adc_convert *****************
  9961 ;; Defined at:
  9962 ;;		line 110 in file "user.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  channel         1    wreg     unsigned char 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  channel         1    3[BANK0 ] unsigned char 
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  2    0[BANK0 ] unsigned int 
  9969 ;; Registers used:
  9970 ;;		wreg, status,2, status,0
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9979 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9980 ;;Total ram usage:        4 bytes
  9981 ;; Hardware stack levels used:    1
  9982 ;; Hardware stack levels required when called:    2
  9983 ;; This function calls:
  9984 ;;		Nothing
  9985 ;; This function is called by:
  9986 ;;		_main
  9987 ;; This function uses a non-reentrant model
  9988 ;;
  9989                           
  9990                           
  9991                           ;psect for function _adc_convert
  9992  1005                     _adc_convert:	
  9993                           
  9994                           ;incstack = 0
  9995                           ; Regs used in _adc_convert: [wreg+status,2+status,0]
  9996                           ;adc_convert@channel stored from wreg
  9997  1005  0020               	movlb	0	; select bank0
  9998  1006  00A3               	movwf	adc_convert@channel
  9999                           
 10000                           ;user.c: 111: ADCON0bits.CHS = channel;
 10001  1007  0823               	movf	adc_convert@channel,w
 10002  1008  00A2               	movwf	??_adc_convert
 10003  1009  0DA2               	rlf	??_adc_convert,f
 10004  100A  0DA2               	rlf	??_adc_convert,f
 10005  100B  0021               	movlb	1	; select bank1
 10006  100C  081D               	movf	29,w	;volatile
 10007  100D  0020               	movlb	0	; select bank0
 10008  100E  0622               	xorwf	??_adc_convert,w
 10009  100F  3983               	andlw	-125
 10010  1010  0622               	xorwf	??_adc_convert,w
 10011  1011  0021               	movlb	1	; select bank1
 10012  1012  009D               	movwf	29	;volatile
 10013                           
 10014                           ;user.c: 112: ADCON0bits.GO = 0b1;
 10015  1013  149D               	bsf	29,1	;volatile
 10016  1014                     l477:	
 10017                           ;user.c: 113: while (ADCON0bits.GO_nDONE);
 10018                           
 10019  1014  189D               	btfsc	29,1	;volatile
 10020  1015  2814               	goto	l477
 10021                           
 10022                           ;user.c: 114: return (ADRESH << 8) | ADRESL;
 10023  1016  081C               	movf	28,w	;volatile
 10024  1017  0020               	movlb	0	; select bank0
 10025  1018  00A1               	movwf	?_adc_convert+1
 10026  1019  0021               	movlb	1	; select bank1
 10027  101A  081B               	movf	27,w	;volatile
 10028  101B  0020               	movlb	0	; select bank0
 10029  101C  00A0               	movwf	?_adc_convert
 10030  101D  0008               	return
 10031  101E                     __end_of_adc_convert:	
 10032                           
 10033                           	psect	text26
 10034  15CD                     __ptext26:	
 10035 ;; *************** function ___awdiv *****************
 10036 ;; Defined at:
 10037 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;  divisor         2    0[BANK0 ] int 
 10040 ;;  dividend        2    2[BANK0 ] int 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;  quotient        2    7[BANK0 ] int 
 10043 ;;  sign            1    6[BANK0 ] unsigned char 
 10044 ;;  counter         1    5[BANK0 ] unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  2    0[BANK0 ] int 
 10047 ;; Registers used:
 10048 ;;		wreg, status,2, status,0
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10054 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10055 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10057 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10058 ;;Total ram usage:        9 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; Hardware stack levels required when called:    2
 10061 ;; This function calls:
 10062 ;;		Nothing
 10063 ;; This function is called by:
 10064 ;;		_main
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           
 10068                           
 10069                           ;psect for function ___awdiv
 10070  15CD                     ___awdiv:	
 10071                           
 10072                           ;incstack = 0
 10073                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10074  15CD  0020               	movlb	0	; select bank0
 10075  15CE  01A6               	clrf	___awdiv@sign
 10076  15CF  1FA1               	btfss	___awdiv@divisor+1,7
 10077  15D0  2DD8               	goto	l3156
 10078  15D1  09A0               	comf	___awdiv@divisor,f
 10079  15D2  09A1               	comf	___awdiv@divisor+1,f
 10080  15D3  0AA0               	incf	___awdiv@divisor,f
 10081  15D4  1903               	skipnz
 10082  15D5  0AA1               	incf	___awdiv@divisor+1,f
 10083  15D6  01A6               	clrf	___awdiv@sign
 10084  15D7  0AA6               	incf	___awdiv@sign,f
 10085  15D8                     l3156:	
 10086  15D8  1FA3               	btfss	___awdiv@dividend+1,7
 10087  15D9  2DE3               	goto	l3162
 10088  15DA  09A2               	comf	___awdiv@dividend,f
 10089  15DB  09A3               	comf	___awdiv@dividend+1,f
 10090  15DC  0AA2               	incf	___awdiv@dividend,f
 10091  15DD  1903               	skipnz
 10092  15DE  0AA3               	incf	___awdiv@dividend+1,f
 10093  15DF  3001               	movlw	1
 10094  15E0  00A4               	movwf	??___awdiv
 10095  15E1  0824               	movf	??___awdiv,w
 10096  15E2  06A6               	xorwf	___awdiv@sign,f
 10097  15E3                     l3162:	
 10098  15E3  01A7               	clrf	___awdiv@quotient
 10099  15E4  01A8               	clrf	___awdiv@quotient+1
 10100  15E5  0820               	movf	___awdiv@divisor,w
 10101  15E6  0421               	iorwf	___awdiv@divisor+1,w
 10102  15E7  1903               	btfsc	3,2
 10103  15E8  2E12               	goto	l3184
 10104  15E9  01A5               	clrf	___awdiv@counter
 10105  15EA  0AA5               	incf	___awdiv@counter,f
 10106  15EB                     l3172:	
 10107  15EB  1BA1               	btfsc	___awdiv@divisor+1,7
 10108  15EC  2DF7               	goto	l3174
 10109  15ED  3001               	movlw	1
 10110  15EE                     u3175:	
 10111  15EE  35A0               	lslf	___awdiv@divisor,f
 10112  15EF  0DA1               	rlf	___awdiv@divisor+1,f
 10113  15F0  0B89               	decfsz	9,f
 10114  15F1  2DEE               	goto	u3175
 10115  15F2  3001               	movlw	1
 10116  15F3  00A4               	movwf	??___awdiv
 10117  15F4  0824               	movf	??___awdiv,w
 10118  15F5  07A5               	addwf	___awdiv@counter,f
 10119  15F6  2DEB               	goto	l3172
 10120  15F7                     l3174:	
 10121  15F7  3001               	movlw	1
 10122  15F8                     u3195:	
 10123  15F8  35A7               	lslf	___awdiv@quotient,f
 10124  15F9  0DA8               	rlf	___awdiv@quotient+1,f
 10125  15FA  0B89               	decfsz	9,f
 10126  15FB  2DF8               	goto	u3195
 10127  15FC  0821               	movf	___awdiv@divisor+1,w
 10128  15FD  0223               	subwf	___awdiv@dividend+1,w
 10129  15FE  1D03               	skipz
 10130  15FF  2E02               	goto	u3205
 10131  1600  0820               	movf	___awdiv@divisor,w
 10132  1601  0222               	subwf	___awdiv@dividend,w
 10133  1602                     u3205:	
 10134  1602  1C03               	skipc
 10135  1603  2E09               	goto	l3180
 10136  1604  0820               	movf	___awdiv@divisor,w
 10137  1605  02A2               	subwf	___awdiv@dividend,f
 10138  1606  0821               	movf	___awdiv@divisor+1,w
 10139  1607  3BA3               	subwfb	___awdiv@dividend+1,f
 10140  1608  1427               	bsf	___awdiv@quotient,0
 10141  1609                     l3180:	
 10142  1609  3001               	movlw	1
 10143  160A                     u3215:	
 10144  160A  36A1               	lsrf	___awdiv@divisor+1,f
 10145  160B  0CA0               	rrf	___awdiv@divisor,f
 10146  160C  0B89               	decfsz	9,f
 10147  160D  2E0A               	goto	u3215
 10148  160E  3001               	movlw	1
 10149  160F  02A5               	subwf	___awdiv@counter,f
 10150  1610  1D03               	btfss	3,2
 10151  1611  2DF7               	goto	l3174
 10152  1612                     l3184:	
 10153  1612  0826               	movf	___awdiv@sign,w
 10154  1613  1903               	btfsc	3,2
 10155  1614  2E1A               	goto	l3188
 10156  1615  09A7               	comf	___awdiv@quotient,f
 10157  1616  09A8               	comf	___awdiv@quotient+1,f
 10158  1617  0AA7               	incf	___awdiv@quotient,f
 10159  1618  1903               	skipnz
 10160  1619  0AA8               	incf	___awdiv@quotient+1,f
 10161  161A                     l3188:	
 10162  161A  0828               	movf	___awdiv@quotient+1,w
 10163  161B  00A1               	movwf	?___awdiv+1
 10164  161C  0827               	movf	___awdiv@quotient,w
 10165  161D  00A0               	movwf	?___awdiv
 10166  161E  0008               	return
 10167  161F                     __end_of___awdiv:	
 10168                           
 10169                           	psect	text27
 10170  12D4                     __ptext27:	
 10171 ;; *************** function ___altoft *****************
 10172 ;; Defined at:
 10173 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;  c               4    8[BANK0 ] long 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;  sign            1   15[BANK0 ] unsigned char 
 10178 ;;  exp             1   14[BANK0 ] unsigned char 
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  3    8[BANK0 ] float 
 10181 ;; Registers used:
 10182 ;;		wreg, status,2, status,0, pclath, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10188 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10189 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10191 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10192 ;;Total ram usage:        8 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:    3
 10195 ;; This function calls:
 10196 ;;		___ftpack
 10197 ;; This function is called by:
 10198 ;;		_main
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           
 10203                           ;psect for function ___altoft
 10204  12D4                     ___altoft:	
 10205                           
 10206                           ;incstack = 0
 10207                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
 10208  12D4  0020               	movlb	0	; select bank0
 10209  12D5  01AF               	clrf	___altoft@sign
 10210  12D6  308E               	movlw	142
 10211  12D7  00AC               	movwf	??___altoft
 10212  12D8  082C               	movf	??___altoft,w
 10213  12D9  00AE               	movwf	___altoft@exp
 10214  12DA  1FAB               	btfss	___altoft@c+3,7
 10215  12DB  2AE9               	goto	l3142
 10216  12DC  09A8               	comf	___altoft@c,f
 10217  12DD  09A9               	comf	___altoft@c+1,f
 10218  12DE  09AA               	comf	___altoft@c+2,f
 10219  12DF  09AB               	comf	___altoft@c+3,f
 10220  12E0  0AA8               	incf	___altoft@c,f
 10221  12E1  1903               	skipnz
 10222  12E2  0AA9               	incf	___altoft@c+1,f
 10223  12E3  1903               	skipnz
 10224  12E4  0AAA               	incf	___altoft@c+2,f
 10225  12E5  1903               	skipnz
 10226  12E6  0AAB               	incf	___altoft@c+3,f
 10227  12E7  01AF               	clrf	___altoft@sign
 10228  12E8  0AAF               	incf	___altoft@sign,f
 10229  12E9                     l3142:	
 10230  12E9  30FF               	movlw	255
 10231  12EA  052B               	andwf	___altoft@c+3,w
 10232  12EB  1903               	btfsc	3,2
 10233  12EC  2AF9               	goto	l3144
 10234  12ED  3001               	movlw	1
 10235  12EE                     u3125:	
 10236  12EE  36AB               	lsrf	___altoft@c+3,f
 10237  12EF  0CAA               	rrf	___altoft@c+2,f
 10238  12F0  0CA9               	rrf	___altoft@c+1,f
 10239  12F1  0CA8               	rrf	___altoft@c,f
 10240  12F2  0B89               	decfsz	9,f
 10241  12F3  2AEE               	goto	u3125
 10242  12F4  3001               	movlw	1
 10243  12F5  00AC               	movwf	??___altoft
 10244  12F6  082C               	movf	??___altoft,w
 10245  12F7  07AE               	addwf	___altoft@exp,f
 10246  12F8  2AE9               	goto	l3142
 10247  12F9                     l3144:	
 10248  12F9  0828               	movf	___altoft@c,w
 10249  12FA  00A0               	movwf	___ftpack@arg
 10250  12FB  0829               	movf	___altoft@c+1,w
 10251  12FC  00A1               	movwf	___ftpack@arg+1
 10252  12FD  082A               	movf	___altoft@c+2,w
 10253  12FE  00A2               	movwf	___ftpack@arg+2
 10254  12FF  082E               	movf	___altoft@exp,w
 10255  1300  00AC               	movwf	??___altoft
 10256  1301  082C               	movf	??___altoft,w
 10257  1302  00A3               	movwf	___ftpack@exp
 10258  1303  082F               	movf	___altoft@sign,w
 10259  1304  00AD               	movwf	??___altoft+1
 10260  1305  082D               	movf	??___altoft+1,w
 10261  1306  00A4               	movwf	___ftpack@sign
 10262  1307  3196  261F         	fcall	___ftpack
 10263  1309  0020               	movlb	0	; select bank0
 10264  130A  0820               	movf	?___ftpack,w
 10265  130B  00A8               	movwf	?___altoft
 10266  130C  0821               	movf	?___ftpack+1,w
 10267  130D  00A9               	movwf	?___altoft+1
 10268  130E  0822               	movf	?___ftpack+2,w
 10269  130F  00AA               	movwf	?___altoft+2
 10270  1310  0008               	return
 10271  1311                     __end_of___altoft:	
 10272                           
 10273                           	psect	text28
 10274  161F                     __ptext28:	
 10275 ;; *************** function ___ftpack *****************
 10276 ;; Defined at:
 10277 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  arg             3    0[BANK0 ] unsigned um
 10280 ;;  exp             1    3[BANK0 ] unsigned char 
 10281 ;;  sign            1    4[BANK0 ] unsigned char 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  3    0[BANK0 ] float 
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10293 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10295 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10296 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10297 ;;Total ram usage:        8 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:    2
 10300 ;; This function calls:
 10301 ;;		Nothing
 10302 ;; This function is called by:
 10303 ;;		___altoft
 10304 ;;		___awtoft
 10305 ;;		___ftadd
 10306 ;;		___ftdiv
 10307 ;;		___ftmul
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           
 10312                           ;psect for function ___ftpack
 10313  161F                     ___ftpack:	
 10314                           
 10315                           ;incstack = 0
 10316                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10317  161F  0020               	movlb	0	; select bank0
 10318  1620  0823               	movf	___ftpack@exp,w
 10319  1621  1903               	btfsc	3,2
 10320  1622  2E28               	goto	l2574
 10321  1623  0822               	movf	___ftpack@arg+2,w
 10322  1624  0421               	iorwf	___ftpack@arg+1,w
 10323  1625  0420               	iorwf	___ftpack@arg,w
 10324  1626  1D03               	skipz
 10325  1627  2E39               	goto	l2580
 10326  1628                     l2574:	
 10327  1628  3000               	movlw	0
 10328  1629  00A0               	movwf	?___ftpack
 10329  162A  3000               	movlw	0
 10330  162B  00A1               	movwf	?___ftpack+1
 10331  162C  3000               	movlw	0
 10332  162D  00A2               	movwf	?___ftpack+2
 10333  162E  0008               	return
 10334  162F                     l2578:	
 10335  162F  3001               	movlw	1
 10336  1630  00A5               	movwf	??___ftpack
 10337  1631  0825               	movf	??___ftpack,w
 10338  1632  07A3               	addwf	___ftpack@exp,f
 10339  1633  3001               	movlw	1
 10340  1634                     u2095:	
 10341  1634  36A2               	lsrf	___ftpack@arg+2,f
 10342  1635  0CA1               	rrf	___ftpack@arg+1,f
 10343  1636  0CA0               	rrf	___ftpack@arg,f
 10344  1637  0B89               	decfsz	9,f
 10345  1638  2E34               	goto	u2095
 10346  1639                     l2580:	
 10347  1639  30FE               	movlw	254
 10348  163A  0522               	andwf	___ftpack@arg+2,w
 10349  163B  1903               	btfsc	3,2
 10350  163C  2E52               	goto	l947
 10351  163D  2E2F               	goto	l2578
 10352  163E                     l2582:	
 10353  163E  3001               	movlw	1
 10354  163F  00A5               	movwf	??___ftpack
 10355  1640  0825               	movf	??___ftpack,w
 10356  1641  07A3               	addwf	___ftpack@exp,f
 10357  1642  3001               	movlw	1
 10358  1643  07A0               	addwf	___ftpack@arg,f
 10359  1644  3000               	movlw	0
 10360  1645  1803               	skipnc
 10361  1646  3001               	movlw	1
 10362  1647  07A1               	addwf	___ftpack@arg+1,f
 10363  1648  3000               	movlw	0
 10364  1649  1803               	skipnc
 10365  164A  3001               	movlw	1
 10366  164B  07A2               	addwf	___ftpack@arg+2,f
 10367  164C  3001               	movlw	1
 10368  164D                     u2115:	
 10369  164D  36A2               	lsrf	___ftpack@arg+2,f
 10370  164E  0CA1               	rrf	___ftpack@arg+1,f
 10371  164F  0CA0               	rrf	___ftpack@arg,f
 10372  1650  0B89               	decfsz	9,f
 10373  1651  2E4D               	goto	u2115
 10374  1652                     l947:	
 10375  1652  30FF               	movlw	255
 10376  1653  0522               	andwf	___ftpack@arg+2,w
 10377  1654  1903               	btfsc	3,2
 10378  1655  2E5F               	goto	l2590
 10379  1656  2E3E               	goto	l2582
 10380  1657                     l2588:	
 10381  1657  3001               	movlw	1
 10382  1658  02A3               	subwf	___ftpack@exp,f
 10383  1659  3001               	movlw	1
 10384  165A                     u2135:	
 10385  165A  35A0               	lslf	___ftpack@arg,f
 10386  165B  0DA1               	rlf	___ftpack@arg+1,f
 10387  165C  0DA2               	rlf	___ftpack@arg+2,f
 10388  165D  0B89               	decfsz	9,f
 10389  165E  2E5A               	goto	u2135
 10390  165F                     l2590:	
 10391  165F  1BA1               	btfsc	___ftpack@arg+1,7
 10392  1660  2E65               	goto	l954
 10393  1661  3002               	movlw	2
 10394  1662  0223               	subwf	___ftpack@exp,w
 10395  1663  1803               	skipnc
 10396  1664  2E57               	goto	l2588
 10397  1665                     l954:	
 10398  1665  1823               	btfsc	___ftpack@exp,0
 10399  1666  2E6D               	goto	l955
 10400  1667  30FF               	movlw	255
 10401  1668  05A0               	andwf	___ftpack@arg,f
 10402  1669  307F               	movlw	127
 10403  166A  05A1               	andwf	___ftpack@arg+1,f
 10404  166B  30FF               	movlw	255
 10405  166C  05A2               	andwf	___ftpack@arg+2,f
 10406  166D                     l955:	
 10407  166D  1003               	clrc
 10408  166E  0CA3               	rrf	___ftpack@exp,f
 10409  166F  0823               	movf	___ftpack@exp,w
 10410  1670  00A5               	movwf	??___ftpack
 10411  1671  01A6               	clrf	??___ftpack+1
 10412  1672  01A7               	clrf	??___ftpack+2
 10413  1673  3010               	movlw	16
 10414  1674                     u2175:	
 10415  1674  35A5               	lslf	??___ftpack,f
 10416  1675  0DA6               	rlf	??___ftpack+1,f
 10417  1676  0DA7               	rlf	??___ftpack+2,f
 10418  1677  0B89               	decfsz	9,f
 10419  1678  2E74               	goto	u2175
 10420  1679  0825               	movf	??___ftpack,w
 10421  167A  04A0               	iorwf	___ftpack@arg,f
 10422  167B  0826               	movf	??___ftpack+1,w
 10423  167C  04A1               	iorwf	___ftpack@arg+1,f
 10424  167D  0827               	movf	??___ftpack+2,w
 10425  167E  04A2               	iorwf	___ftpack@arg+2,f
 10426  167F  0824               	movf	___ftpack@sign,w
 10427  1680  1903               	btfsc	3,2
 10428  1681  0008               	return
 10429  1682  17A2               	bsf	___ftpack@arg+2,7
 10430  1683  0008               	return
 10431  1684                     __end_of___ftpack:	
 10432                           
 10433                           	psect	text29
 10434  14E2                     __ptext29:	
 10435 ;; *************** function _ReadSavedSettings *****************
 10436 ;; Defined at:
 10437 ;;		line 181 in file "user.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;		None
 10440 ;; Auto vars:     Size  Location     Type
 10441 ;;		None
 10442 ;; Return value:  Size  Location     Type
 10443 ;;                  1    wreg      void 
 10444 ;; Registers used:
 10445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10446 ;; Tracked objects:
 10447 ;;		On entry : 0/0
 10448 ;;		On exit  : 0/0
 10449 ;;		Unchanged: 0/0
 10450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10454 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10455 ;;Total ram usage:        2 bytes
 10456 ;; Hardware stack levels used:    1
 10457 ;; Hardware stack levels required when called:    3
 10458 ;; This function calls:
 10459 ;;		_FLASH_ReadWord
 10460 ;;		_set_leds_bottom
 10461 ;;		_set_leds_top
 10462 ;; This function is called by:
 10463 ;;		_main
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           
 10468                           ;psect for function _ReadSavedSettings
 10469  14E2                     _ReadSavedSettings:	
 10470                           
 10471                           ;user.c: 183: top_push_state = FLASH_ReadWord(0x1F81);
 10472                           
 10473                           ;incstack = 0
 10474                           ; Regs used in _ReadSavedSettings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10475  14E2  3081               	movlw	129
 10476  14E3  0020               	movlb	0	; select bank0
 10477  14E4  00A0               	movwf	FLASH_ReadWord@flashAddr
 10478  14E5  301F               	movlw	31
 10479  14E6  00A1               	movwf	FLASH_ReadWord@flashAddr+1
 10480  14E7  3190  203A  3194   	fcall	_FLASH_ReadWord
 10481  14EA  0020               	movlb	0	; select bank0
 10482  14EB  0820               	movf	?_FLASH_ReadWord,w
 10483  14EC  00A4               	movwf	??_ReadSavedSettings
 10484  14ED  0824               	movf	??_ReadSavedSettings,w
 10485  14EE  00FD               	movwf	_top_push_state	;volatile
 10486                           
 10487                           ;user.c: 184: bottom_push_state = FLASH_ReadWord(0x1F82);
 10488  14EF  3082               	movlw	130
 10489  14F0  00A0               	movwf	FLASH_ReadWord@flashAddr
 10490  14F1  301F               	movlw	31
 10491  14F2  00A1               	movwf	FLASH_ReadWord@flashAddr+1
 10492  14F3  3190  203A  3194   	fcall	_FLASH_ReadWord
 10493  14F6  0020               	movlb	0	; select bank0
 10494  14F7  0820               	movf	?_FLASH_ReadWord,w
 10495  14F8  00A4               	movwf	??_ReadSavedSettings
 10496  14F9  0824               	movf	??_ReadSavedSettings,w
 10497  14FA  0021               	movlb	1	; select bank1
 10498  14FB  00EE               	movwf	_bottom_push_state^(0+128)
 10499                           
 10500                           ;user.c: 187: LATGbits.LATG1 = !bypass_state;
 10501  14FC  0859               	movf	_bypass_state^(0+128),w
 10502  14FD  1D03               	btfss	3,2
 10503  14FE  2D02               	goto	u2980
 10504  14FF  0027               	movlb	7	; select bank7
 10505  1500  148D               	bsf	13,1	;volatile
 10506  1501  2D04               	goto	l3000
 10507  1502                     u2980:	
 10508  1502  0027               	movlb	7	; select bank7
 10509  1503  108D               	bcf	13,1	;volatile
 10510  1504                     l3000:	
 10511                           
 10512                           ;user.c: 188: LATGbits.LATG2 = bypass_state;
 10513  1504  0021               	movlb	1	; select bank1
 10514  1505  0C59               	rrf	_bypass_state^(0+128),w
 10515  1506  0027               	movlb	7	; select bank7
 10516  1507  1C03               	skipc
 10517  1508  110D               	bcf	13,2	;volatile
 10518  1509  1803               	skipnc
 10519  150A  150D               	bsf	13,2	;volatile
 10520                           
 10521                           ;user.c: 189: LATBbits.LATB2 = 0;
 10522  150B  0022               	movlb	2	; select bank2
 10523  150C  110D               	bcf	13,2	;volatile
 10524                           
 10525                           ;user.c: 190: LATBbits.LATB3 = 0;
 10526  150D  118D               	bcf	13,3	;volatile
 10527                           
 10528                           ;user.c: 192: LATBbits.LATB4 = 0;
 10529  150E  120D               	bcf	13,4	;volatile
 10530                           
 10531                           ;user.c: 193: LATBbits.LATB5 = 0;
 10532  150F  128D               	bcf	13,5	;volatile
 10533                           
 10534                           ;user.c: 195: LATBbits.LATB1 = 0;
 10535  1510  108D               	bcf	13,1	;volatile
 10536                           
 10537                           ;user.c: 196: LATBbits.LATB0 = 0;
 10538  1511  100D               	bcf	13,0	;volatile
 10539                           
 10540                           ;user.c: 199: set_leds_top(top_push_state, 1);
 10541  1512  087D               	movf	_top_push_state,w	;volatile
 10542  1513  0020               	movlb	0	; select bank0
 10543  1514  00A4               	movwf	??_ReadSavedSettings
 10544  1515  01A5               	clrf	??_ReadSavedSettings+1
 10545  1516  0824               	movf	??_ReadSavedSettings,w
 10546  1517  00A0               	movwf	set_leds_top@x
 10547  1518  0825               	movf	??_ReadSavedSettings+1,w
 10548  1519  00A1               	movwf	set_leds_top@x+1
 10549  151A  3001               	movlw	1
 10550  151B  00A2               	movwf	set_leds_top@ledState
 10551  151C  3000               	movlw	0
 10552  151D  00A3               	movwf	set_leds_top@ledState+1
 10553  151E  3187  27A8  3194   	fcall	_set_leds_top
 10554                           
 10555                           ;user.c: 200: set_leds_bottom(bottom_push_state);
 10556  1521  0021               	movlb	1	; select bank1
 10557  1522  086E               	movf	_bottom_push_state^(0+128),w
 10558  1523  0020               	movlb	0	; select bank0
 10559  1524  00A4               	movwf	??_ReadSavedSettings
 10560  1525  01A5               	clrf	??_ReadSavedSettings+1
 10561  1526  0824               	movf	??_ReadSavedSettings,w
 10562  1527  00A0               	movwf	set_leds_bottom@x
 10563  1528  0825               	movf	??_ReadSavedSettings+1,w
 10564  1529  00A1               	movwf	set_leds_bottom@x+1
 10565  152A  3192  2299         	fcall	_set_leds_bottom
 10566  152C  0008               	return
 10567  152D                     __end_of_ReadSavedSettings:	
 10568                           
 10569                           	psect	text30
 10570  07A8                     __ptext30:	
 10571 ;; *************** function _set_leds_top *****************
 10572 ;; Defined at:
 10573 ;;		line 16 in file "LEDs.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;  x               2    0[BANK0 ] int 
 10576 ;;  ledState        2    2[BANK0 ] int 
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;		None
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  1    wreg      void 
 10581 ;; Registers used:
 10582 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10588 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10591 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10592 ;;Total ram usage:        4 bytes
 10593 ;; Hardware stack levels used:    1
 10594 ;; Hardware stack levels required when called:    2
 10595 ;; This function calls:
 10596 ;;		Nothing
 10597 ;; This function is called by:
 10598 ;;		_ReadSavedSettings
 10599 ;;		_star_tactiles
 10600 ;;		_solidring_tactiles
 10601 ;;		_read_top_tactile
 10602 ;;		_ring_tactiles
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function _set_leds_top
 10608  07A8                     _set_leds_top:	
 10609                           
 10610                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 10611                           
 10612                           ;incstack = 0
 10613                           ; Regs used in _set_leds_top: [wreg-fsr0h+status,2+status,0]
 10614  07A8  0027               	movlb	7	; select bank7
 10615  07A9  100C               	bcf	12,0	;volatile
 10616                           
 10617                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 10618  07AA  108C               	bcf	12,1	;volatile
 10619                           
 10620                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 10621  07AB  110C               	bcf	12,2	;volatile
 10622                           
 10623                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 10624  07AC  118C               	bcf	12,3	;volatile
 10625                           
 10626                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 10627  07AD  120C               	bcf	12,4	;volatile
 10628                           
 10629                           ;LEDs.c: 22: switch (x) {
 10630  07AE  2FDE               	goto	l2470
 10631  07AF                     l2458:	
 10632                           ;LEDs.c: 23: case 1:
 10633                           
 10634                           
 10635                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 10636  07AF  0020               	movlb	0	; select bank0
 10637  07B0  0C22               	rrf	set_leds_top@ledState,w
 10638  07B1  0027               	movlb	7	; select bank7
 10639  07B2  1C03               	skipc
 10640  07B3  100C               	bcf	12,0	;volatile
 10641  07B4  1803               	skipnc
 10642  07B5  140C               	bsf	12,0	;volatile
 10643                           
 10644                           ;LEDs.c: 25: break;
 10645  07B6  0008               	return
 10646  07B7                     l2460:	
 10647                           ;LEDs.c: 26: case 2:
 10648                           
 10649                           
 10650                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 10651  07B7  0020               	movlb	0	; select bank0
 10652  07B8  0C22               	rrf	set_leds_top@ledState,w
 10653  07B9  0027               	movlb	7	; select bank7
 10654  07BA  1C03               	skipc
 10655  07BB  108C               	bcf	12,1	;volatile
 10656  07BC  1803               	skipnc
 10657  07BD  148C               	bsf	12,1	;volatile
 10658                           
 10659                           ;LEDs.c: 28: break;
 10660  07BE  0008               	return
 10661  07BF                     l2462:	
 10662                           ;LEDs.c: 29: case 3:
 10663                           
 10664                           
 10665                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 10666  07BF  0020               	movlb	0	; select bank0
 10667  07C0  0C22               	rrf	set_leds_top@ledState,w
 10668  07C1  0027               	movlb	7	; select bank7
 10669  07C2  1C03               	skipc
 10670  07C3  110C               	bcf	12,2	;volatile
 10671  07C4  1803               	skipnc
 10672  07C5  150C               	bsf	12,2	;volatile
 10673                           
 10674                           ;LEDs.c: 31: break;
 10675  07C6  0008               	return
 10676  07C7                     l2464:	
 10677                           ;LEDs.c: 32: case 4:
 10678                           
 10679                           
 10680                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 10681  07C7  0020               	movlb	0	; select bank0
 10682  07C8  0C22               	rrf	set_leds_top@ledState,w
 10683  07C9  0027               	movlb	7	; select bank7
 10684  07CA  1C03               	skipc
 10685  07CB  118C               	bcf	12,3	;volatile
 10686  07CC  1803               	skipnc
 10687  07CD  158C               	bsf	12,3	;volatile
 10688                           
 10689                           ;LEDs.c: 34: break;
 10690  07CE  0008               	return
 10691  07CF                     l2466:	
 10692                           ;LEDs.c: 35: case 5:
 10693                           
 10694                           
 10695                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 10696  07CF  0020               	movlb	0	; select bank0
 10697  07D0  0C22               	rrf	set_leds_top@ledState,w
 10698  07D1  0027               	movlb	7	; select bank7
 10699  07D2  1C03               	skipc
 10700  07D3  120C               	bcf	12,4	;volatile
 10701  07D4  1803               	skipnc
 10702  07D5  160C               	bsf	12,4	;volatile
 10703                           
 10704                           ;LEDs.c: 39: break;
 10705                           
 10706                           ;LEDs.c: 38: case 6:
 10707                           
 10708                           ;LEDs.c: 37: break;
 10709  07D6  0008               	return
 10710  07D7                     l606:	
 10711                           ;LEDs.c: 40: case 100:
 10712                           
 10713                           
 10714                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 10715  07D7  0027               	movlb	7	; select bank7
 10716  07D8  140C               	bsf	12,0	;volatile
 10717                           
 10718                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 10719  07D9  148C               	bsf	12,1	;volatile
 10720                           
 10721                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 10722  07DA  150C               	bsf	12,2	;volatile
 10723                           
 10724                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 10725  07DB  158C               	bsf	12,3	;volatile
 10726                           
 10727                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 10728  07DC  160C               	bsf	12,4	;volatile
 10729                           
 10730                           ;LEDs.c: 47: }
 10731                           
 10732                           ;LEDs.c: 46: break;
 10733  07DD  0008               	return
 10734  07DE                     l2470:	
 10735                           
 10736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10737                           ; Switch size 1, requested type "space"
 10738                           ; Number of cases is 1, Range of values is 0 to 0
 10739                           ; switch strategies available:
 10740                           ; Name         Instructions Cycles
 10741                           ; simple_byte            4     3 (average)
 10742                           ; direct_byte            8     6 (fixed)
 10743                           ; jumptable            260     6 (fixed)
 10744                           ;	Chosen strategy is simple_byte
 10745  07DE  0020               	movlb	0	; select bank0
 10746  07DF  0821               	movf	set_leds_top@x+1,w
 10747  07E0  3A00               	xorlw	0	; case 0
 10748  07E1  1903               	skipnz
 10749  07E2  2FE4               	goto	l3668
 10750  07E3  2FFB               	goto	l607
 10751  07E4                     l3668:	
 10752                           
 10753                           ; Switch size 1, requested type "space"
 10754                           ; Number of cases is 7, Range of values is 1 to 100
 10755                           ; switch strategies available:
 10756                           ; Name         Instructions Cycles
 10757                           ; simple_byte           22    12 (average)
 10758                           ; direct_byte          209     9 (fixed)
 10759                           ; jumptable            263     9 (fixed)
 10760                           ;	Chosen strategy is simple_byte
 10761  07E4  0820               	movf	set_leds_top@x,w
 10762  07E5  3A01               	xorlw	1	; case 1
 10763  07E6  1903               	skipnz
 10764  07E7  2FAF               	goto	l2458
 10765  07E8  3A03               	xorlw	3	; case 2
 10766  07E9  1903               	skipnz
 10767  07EA  2FB7               	goto	l2460
 10768  07EB  3A01               	xorlw	1	; case 3
 10769  07EC  1903               	skipnz
 10770  07ED  2FBF               	goto	l2462
 10771  07EE  3A07               	xorlw	7	; case 4
 10772  07EF  1903               	skipnz
 10773  07F0  2FC7               	goto	l2464
 10774  07F1  3A01               	xorlw	1	; case 5
 10775  07F2  1903               	skipnz
 10776  07F3  2FCF               	goto	l2466
 10777  07F4  3A03               	xorlw	3	; case 6
 10778  07F5  1903               	skipnz
 10779  07F6  2FFB               	goto	l607
 10780  07F7  3A62               	xorlw	98	; case 100
 10781  07F8  1903               	skipnz
 10782  07F9  2FD7               	goto	l606
 10783  07FA  2FFB               	goto	l607
 10784  07FB                     l607:	
 10785  07FB  0008               	return
 10786  07FC                     __end_of_set_leds_top:	
 10787                           
 10788                           	psect	text31
 10789  1299                     __ptext31:	
 10790 ;; *************** function _set_leds_bottom *****************
 10791 ;; Defined at:
 10792 ;;		line 51 in file "LEDs.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;  x               2    0[BANK0 ] int 
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;		None
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      void 
 10799 ;; Registers used:
 10800 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10806 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10809 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10810 ;;Total ram usage:        2 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    2
 10813 ;; This function calls:
 10814 ;;		Nothing
 10815 ;; This function is called by:
 10816 ;;		_ReadSavedSettings
 10817 ;;		_star_tactiles
 10818 ;;		_solidring_tactiles
 10819 ;;		_read_bottom_tactile
 10820 ;;		_ring_tactiles
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           
 10825                           ;psect for function _set_leds_bottom
 10826  1299                     _set_leds_bottom:	
 10827                           
 10828                           ;LEDs.c: 52: LATDbits.LATD0 = 0;
 10829                           
 10830                           ;incstack = 0
 10831                           ; Regs used in _set_leds_bottom: [wreg-fsr0h+status,2+status,0]
 10832  1299  0022               	movlb	2	; select bank2
 10833  129A  100F               	bcf	15,0	;volatile
 10834                           
 10835                           ;LEDs.c: 53: LATDbits.LATD1 = 0;
 10836  129B  108F               	bcf	15,1	;volatile
 10837                           
 10838                           ;LEDs.c: 54: LATDbits.LATD2 = 0;
 10839  129C  110F               	bcf	15,2	;volatile
 10840                           
 10841                           ;LEDs.c: 55: LATDbits.LATD3 = 0;
 10842  129D  118F               	bcf	15,3	;volatile
 10843                           
 10844                           ;LEDs.c: 56: LATDbits.LATD4 = 0;
 10845  129E  120F               	bcf	15,4	;volatile
 10846                           
 10847                           ;LEDs.c: 57: switch (x) {
 10848  129F  2AB6               	goto	l2514
 10849  12A0                     l611:	
 10850                           ;LEDs.c: 58: case 1:
 10851                           
 10852                           
 10853                           ;LEDs.c: 59: LATDbits.LATD0 = 1;
 10854  12A0  0022               	movlb	2	; select bank2
 10855  12A1  140F               	bsf	15,0	;volatile
 10856                           
 10857                           ;LEDs.c: 60: break;
 10858  12A2  0008               	return
 10859  12A3                     l613:	
 10860                           ;LEDs.c: 61: case 2:
 10861                           
 10862                           
 10863                           ;LEDs.c: 62: LATDbits.LATD1 = 1;
 10864  12A3  0022               	movlb	2	; select bank2
 10865  12A4  148F               	bsf	15,1	;volatile
 10866                           
 10867                           ;LEDs.c: 63: break;
 10868  12A5  0008               	return
 10869  12A6                     l614:	
 10870                           ;LEDs.c: 64: case 3:
 10871                           
 10872                           
 10873                           ;LEDs.c: 65: LATDbits.LATD2 = 1;
 10874  12A6  0022               	movlb	2	; select bank2
 10875  12A7  150F               	bsf	15,2	;volatile
 10876                           
 10877                           ;LEDs.c: 66: break;
 10878  12A8  0008               	return
 10879  12A9                     l615:	
 10880                           ;LEDs.c: 67: case 4:
 10881                           
 10882                           
 10883                           ;LEDs.c: 68: LATDbits.LATD3 = 1;
 10884  12A9  0022               	movlb	2	; select bank2
 10885  12AA  158F               	bsf	15,3	;volatile
 10886                           
 10887                           ;LEDs.c: 69: break;
 10888  12AB  0008               	return
 10889  12AC                     l616:	
 10890                           ;LEDs.c: 70: case 5:
 10891                           
 10892                           
 10893                           ;LEDs.c: 71: LATDbits.LATD4 = 1;
 10894  12AC  0022               	movlb	2	; select bank2
 10895  12AD  160F               	bsf	15,4	;volatile
 10896                           
 10897                           ;LEDs.c: 74: break;
 10898                           
 10899                           ;LEDs.c: 73: case 6:
 10900                           
 10901                           ;LEDs.c: 72: break;
 10902  12AE  0008               	return
 10903  12AF                     l618:	
 10904                           ;LEDs.c: 75: case 100:
 10905                           
 10906                           
 10907                           ;LEDs.c: 76: LATDbits.LATD0 = 1;
 10908  12AF  0022               	movlb	2	; select bank2
 10909  12B0  140F               	bsf	15,0	;volatile
 10910                           
 10911                           ;LEDs.c: 77: LATDbits.LATD1 = 1;
 10912  12B1  148F               	bsf	15,1	;volatile
 10913                           
 10914                           ;LEDs.c: 78: LATDbits.LATD2 = 1;
 10915  12B2  150F               	bsf	15,2	;volatile
 10916                           
 10917                           ;LEDs.c: 79: LATDbits.LATD3 = 1;
 10918  12B3  158F               	bsf	15,3	;volatile
 10919                           
 10920                           ;LEDs.c: 80: LATDbits.LATD4 = 1;
 10921  12B4  160F               	bsf	15,4	;volatile
 10922                           
 10923                           ;LEDs.c: 82: }
 10924                           
 10925                           ;LEDs.c: 81: break;
 10926  12B5  0008               	return
 10927  12B6                     l2514:	
 10928                           
 10929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10930                           ; Switch size 1, requested type "space"
 10931                           ; Number of cases is 1, Range of values is 0 to 0
 10932                           ; switch strategies available:
 10933                           ; Name         Instructions Cycles
 10934                           ; simple_byte            4     3 (average)
 10935                           ; direct_byte            8     6 (fixed)
 10936                           ; jumptable            260     6 (fixed)
 10937                           ;	Chosen strategy is simple_byte
 10938  12B6  0020               	movlb	0	; select bank0
 10939  12B7  0821               	movf	set_leds_bottom@x+1,w
 10940  12B8  3A00               	xorlw	0	; case 0
 10941  12B9  1903               	skipnz
 10942  12BA  2ABC               	goto	l3670
 10943  12BB  2AD3               	goto	l619
 10944  12BC                     l3670:	
 10945                           
 10946                           ; Switch size 1, requested type "space"
 10947                           ; Number of cases is 7, Range of values is 1 to 100
 10948                           ; switch strategies available:
 10949                           ; Name         Instructions Cycles
 10950                           ; simple_byte           22    12 (average)
 10951                           ; direct_byte          209     9 (fixed)
 10952                           ; jumptable            263     9 (fixed)
 10953                           ;	Chosen strategy is simple_byte
 10954  12BC  0820               	movf	set_leds_bottom@x,w
 10955  12BD  3A01               	xorlw	1	; case 1
 10956  12BE  1903               	skipnz
 10957  12BF  2AA0               	goto	l611
 10958  12C0  3A03               	xorlw	3	; case 2
 10959  12C1  1903               	skipnz
 10960  12C2  2AA3               	goto	l613
 10961  12C3  3A01               	xorlw	1	; case 3
 10962  12C4  1903               	skipnz
 10963  12C5  2AA6               	goto	l614
 10964  12C6  3A07               	xorlw	7	; case 4
 10965  12C7  1903               	skipnz
 10966  12C8  2AA9               	goto	l615
 10967  12C9  3A01               	xorlw	1	; case 5
 10968  12CA  1903               	skipnz
 10969  12CB  2AAC               	goto	l616
 10970  12CC  3A03               	xorlw	3	; case 6
 10971  12CD  1903               	skipnz
 10972  12CE  2AD3               	goto	l619
 10973  12CF  3A62               	xorlw	98	; case 100
 10974  12D0  1903               	skipnz
 10975  12D1  2AAF               	goto	l618
 10976  12D2  2AD3               	goto	l619
 10977  12D3                     l619:	
 10978  12D3  0008               	return
 10979  12D4                     __end_of_set_leds_bottom:	
 10980                           
 10981                           	psect	text32
 10982  103A                     __ptext32:	
 10983 ;; *************** function _FLASH_ReadWord *****************
 10984 ;; Defined at:
 10985 ;;		line 58 in file "memory.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  flashAddr       2    0[BANK0 ] unsigned int 
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  2    0[BANK0 ] unsigned int 
 10992 ;; Registers used:
 10993 ;;		wreg, status,2, status,0
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10999 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11002 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11003 ;;Total ram usage:        3 bytes
 11004 ;; Hardware stack levels used:    1
 11005 ;; Hardware stack levels required when called:    2
 11006 ;; This function calls:
 11007 ;;		Nothing
 11008 ;; This function is called by:
 11009 ;;		_ReadSavedSettings
 11010 ;;		_FLASH_WriteWord
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           
 11015                           ;psect for function _FLASH_ReadWord
 11016  103A                     _FLASH_ReadWord:	
 11017                           
 11018                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
 11019                           
 11020                           ;incstack = 0
 11021                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
 11022  103A  3000               	movlw	0
 11023  103B  1B8B               	btfsc	11,7	;volatile
 11024  103C  3001               	movlw	1
 11025  103D  0020               	movlb	0	; select bank0
 11026  103E  00A2               	movwf	FLASH_ReadWord@GIEBitValue
 11027                           
 11028                           ;memory.c: 61: INTCONbits.GIE = 0;
 11029  103F  138B               	bcf	11,7	;volatile
 11030                           
 11031                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
 11032  1040  0820               	movf	FLASH_ReadWord@flashAddr,w
 11033  1041  0023               	movlb	3	; select bank3
 11034  1042  0091               	movwf	17	;volatile
 11035                           
 11036                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
 11037  1043  0020               	movlb	0	; select bank0
 11038  1044  0821               	movf	FLASH_ReadWord@flashAddr+1,w
 11039  1045  0023               	movlb	3	; select bank3
 11040  1046  0092               	movwf	18	;volatile
 11041                           
 11042                           ;memory.c: 65: PMCON1bits.CFGS = 0;
 11043  1047  1315               	bcf	21,6	;volatile
 11044                           
 11045                           ;memory.c: 66: PMCON1bits.RD = 1;
 11046  1048  1415               	bsf	21,0	;volatile
 11047                           
 11048                           ;memory.c: 67: __nop();
 11049  1049  0000               	nop
 11050                           
 11051                           ;memory.c: 68: __nop();
 11052  104A  0000               	nop
 11053                           
 11054                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
 11055  104B  0020               	movlb	0	; select bank0
 11056  104C  0C22               	rrf	FLASH_ReadWord@GIEBitValue,w
 11057  104D  1C03               	skipc
 11058  104E  138B               	bcf	11,7	;volatile
 11059  104F  1803               	skipnc
 11060  1050  178B               	bsf	11,7	;volatile
 11061                           
 11062                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
 11063  1051  0023               	movlb	3	; select bank3
 11064  1052  0814               	movf	20,w	;volatile
 11065  1053  0020               	movlb	0	; select bank0
 11066  1054  00A1               	movwf	?_FLASH_ReadWord+1
 11067  1055  0023               	movlb	3	; select bank3
 11068  1056  0813               	movf	19,w	;volatile
 11069  1057  0020               	movlb	0	; select bank0
 11070  1058  00A0               	movwf	?_FLASH_ReadWord
 11071  1059  0008               	return
 11072  105A                     __end_of_FLASH_ReadWord:	
 11073                           
 11074                           	psect	text33
 11075  109C                     __ptext33:	
 11076 ;; *************** function _InitializeTaps *****************
 11077 ;; Defined at:
 11078 ;;		line 175 in file "user.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;		None
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;  itap            2    1[BANK0 ] int 
 11083 ;; Return value:  Size  Location     Type
 11084 ;;                  1    wreg      void 
 11085 ;; Registers used:
 11086 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 0/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11093 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11094 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11095 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11096 ;;Total ram usage:        3 bytes
 11097 ;; Hardware stack levels used:    1
 11098 ;; Hardware stack levels required when called:    2
 11099 ;; This function calls:
 11100 ;;		Nothing
 11101 ;; This function is called by:
 11102 ;;		_main
 11103 ;; This function uses a non-reentrant model
 11104 ;;
 11105                           
 11106                           
 11107                           ;psect for function _InitializeTaps
 11108  109C                     _InitializeTaps:	
 11109                           
 11110                           ;user.c: 176: for (int itap = 0; itap < 12; itap++) {
 11111                           
 11112                           ;incstack = 0
 11113                           ; Regs used in _InitializeTaps: [wreg+fsr1l+fsr1h+status,2+status,0]
 11114  109C  0020               	movlb	0	; select bank0
 11115  109D  01A1               	clrf	InitializeTaps@itap
 11116  109E  01A2               	clrf	InitializeTaps@itap+1
 11117  109F                     L8:	
 11118  109F  0822               	movf	InitializeTaps@itap+1,w
 11119  10A0  3A80               	xorlw	128
 11120  10A1  00A0               	movwf	??_InitializeTaps
 11121  10A2  3080               	movlw	128
 11122  10A3  0220               	subwf	??_InitializeTaps,w
 11123  10A4  1D03               	skipz
 11124  10A5  28A8               	goto	u2955
 11125  10A6  300C               	movlw	12
 11126  10A7  0221               	subwf	InitializeTaps@itap,w
 11127  10A8                     u2955:	
 11128  10A8  1803               	btfsc	3,0
 11129  10A9  0008               	return
 11130                           
 11131                           ;user.c: 177: tap[itap] = 0;
 11132  10AA  0020               	movlb	0	; select bank0
 11133  10AB  0821               	movf	InitializeTaps@itap,w
 11134  10AC  00A0               	movwf	??_InitializeTaps
 11135  10AD  3001               	movlw	1
 11136  10AE                     u2965:	
 11137  10AE  35A0               	lslf	??_InitializeTaps,f
 11138  10AF  3EFF               	addlw	-1
 11139  10B0  1D03               	skipz
 11140  10B1  28AE               	goto	u2965
 11141  10B2  3520               	lslf	??_InitializeTaps,w
 11142  10B3  3EA0               	addlw	(low (_tap| (0+256)))& (0+255)
 11143  10B4  0086               	movwf	6
 11144  10B5  3001               	movlw	1	; select bank3/4
 11145  10B6  0087               	movwf	7
 11146  10B7  3000               	movlw	0
 11147  10B8  3FC0               	movwi [0]fsr1
 11148  10B9  3000               	movlw	0
 11149  10BA  3FC1               	movwi [1]fsr1
 11150  10BB  3FC2               	movwi [2]fsr1
 11151  10BC  3FC3               	movwi [3]fsr1
 11152  10BD  3001               	movlw	1
 11153  10BE  07A1               	addwf	InitializeTaps@itap,f
 11154  10BF  3000               	movlw	0
 11155  10C0  3DA2               	addwfc	InitializeTaps@itap+1,f
 11156  10C1  289F               	goto	L8
 11157  10C2                     __end_of_InitializeTaps:	
 11158                           
 11159                           	psect	text34
 11160  10E8                     __ptext34:	
 11161 ;; *************** function _InitApp *****************
 11162 ;; Defined at:
 11163 ;;		line 23 in file "user.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;		None
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;		None
 11168 ;; Return value:  Size  Location     Type
 11169 ;;                  1    wreg      void 
 11170 ;; Registers used:
 11171 ;;		wreg, status,2, status,0, pclath, cstack
 11172 ;; Tracked objects:
 11173 ;;		On entry : 0/0
 11174 ;;		On exit  : 0/0
 11175 ;;		Unchanged: 0/0
 11176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11181 ;;Total ram usage:        0 bytes
 11182 ;; Hardware stack levels used:    1
 11183 ;; Hardware stack levels required when called:    4
 11184 ;; This function calls:
 11185 ;;		_init_adc
 11186 ;;		_init_pwm
 11187 ;; This function is called by:
 11188 ;;		_main
 11189 ;; This function uses a non-reentrant model
 11190 ;;
 11191                           
 11192                           
 11193                           ;psect for function _InitApp
 11194  10E8                     _InitApp:	
 11195                           
 11196                           ;user.c: 24: TRISBbits.TRISB0 = 0;
 11197                           
 11198                           ;incstack = 0
 11199                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
 11200  10E8  0021               	movlb	1	; select bank1
 11201  10E9  100D               	bcf	13,0	;volatile
 11202                           
 11203                           ;user.c: 25: TRISBbits.TRISB1 = 0;
 11204  10EA  108D               	bcf	13,1	;volatile
 11205                           
 11206                           ;user.c: 26: TRISBbits.TRISB2 = 0;
 11207  10EB  110D               	bcf	13,2	;volatile
 11208                           
 11209                           ;user.c: 27: TRISBbits.TRISB3 = 0;
 11210  10EC  118D               	bcf	13,3	;volatile
 11211                           
 11212                           ;user.c: 28: TRISBbits.TRISB4 = 0;
 11213  10ED  120D               	bcf	13,4	;volatile
 11214                           
 11215                           ;user.c: 29: TRISBbits.TRISB5 = 0;
 11216  10EE  128D               	bcf	13,5	;volatile
 11217                           
 11218                           ;user.c: 31: TRISCbits.TRISC0 = 1;
 11219  10EF  140E               	bsf	14,0	;volatile
 11220                           
 11221                           ;user.c: 32: TRISCbits.TRISC4 = 0;
 11222  10F0  120E               	bcf	14,4	;volatile
 11223                           
 11224                           ;user.c: 33: TRISCbits.TRISC5 = 0;
 11225  10F1  128E               	bcf	14,5	;volatile
 11226                           
 11227                           ;user.c: 36: TRISDbits.TRISD0 = 0;
 11228  10F2  100F               	bcf	15,0	;volatile
 11229                           
 11230                           ;user.c: 37: TRISDbits.TRISD1 = 0;
 11231  10F3  108F               	bcf	15,1	;volatile
 11232                           
 11233                           ;user.c: 38: TRISDbits.TRISD2 = 0;
 11234  10F4  110F               	bcf	15,2	;volatile
 11235                           
 11236                           ;user.c: 39: TRISDbits.TRISD3 = 0;
 11237  10F5  118F               	bcf	15,3	;volatile
 11238                           
 11239                           ;user.c: 40: TRISDbits.TRISD4 = 0;
 11240  10F6  120F               	bcf	15,4	;volatile
 11241                           
 11242                           ;user.c: 41: TRISDbits.TRISD5 = 1;
 11243  10F7  168F               	bsf	15,5	;volatile
 11244                           
 11245                           ;user.c: 42: TRISDbits.TRISD6 = 1;
 11246  10F8  170F               	bsf	15,6	;volatile
 11247                           
 11248                           ;user.c: 43: TRISDbits.TRISD7 = 1;
 11249  10F9  178F               	bsf	15,7	;volatile
 11250                           
 11251                           ;user.c: 49: TRISEbits.TRISE0 = 1;
 11252  10FA  1410               	bsf	16,0	;volatile
 11253                           
 11254                           ;user.c: 50: TRISEbits.TRISE1 = 1;
 11255  10FB  1490               	bsf	16,1	;volatile
 11256                           
 11257                           ;user.c: 51: ANSELEbits.ANSE0 = 0;
 11258  10FC  0023               	movlb	3	; select bank3
 11259  10FD  1010               	bcf	16,0	;volatile
 11260                           
 11261                           ;user.c: 52: ANSELEbits.ANSE1 = 0;
 11262  10FE  1090               	bcf	16,1	;volatile
 11263                           
 11264                           ;user.c: 53: PORTEbits.RE0 = 0;
 11265  10FF  0020               	movlb	0	; select bank0
 11266  1100  1010               	bcf	16,0	;volatile
 11267                           
 11268                           ;user.c: 54: PORTEbits.RE1 = 0;
 11269  1101  1090               	bcf	16,1	;volatile
 11270                           
 11271                           ;user.c: 56: TRISFbits.TRISF0 = 0;
 11272  1102  0026               	movlb	6	; select bank6
 11273  1103  100C               	bcf	12,0	;volatile
 11274                           
 11275                           ;user.c: 57: TRISFbits.TRISF1 = 0;
 11276  1104  108C               	bcf	12,1	;volatile
 11277                           
 11278                           ;user.c: 58: TRISFbits.TRISF2 = 0;
 11279  1105  110C               	bcf	12,2	;volatile
 11280                           
 11281                           ;user.c: 59: TRISFbits.TRISF3 = 0;
 11282  1106  118C               	bcf	12,3	;volatile
 11283                           
 11284                           ;user.c: 60: TRISFbits.TRISF4 = 0;
 11285  1107  120C               	bcf	12,4	;volatile
 11286                           
 11287                           ;user.c: 61: TRISFbits.TRISF5 = 0;
 11288  1108  128C               	bcf	12,5	;volatile
 11289                           
 11290                           ;user.c: 62: TRISFbits.TRISF6 = 1;
 11291  1109  170C               	bsf	12,6	;volatile
 11292                           
 11293                           ;user.c: 63: ANSELFbits.ANSF6 = 0;
 11294  110A  0028               	movlb	8	; select bank8
 11295  110B  130C               	bcf	12,6	;volatile
 11296                           
 11297                           ;user.c: 65: TRISGbits.TRISG1 = 0;
 11298  110C  0026               	movlb	6	; select bank6
 11299  110D  108D               	bcf	13,1	;volatile
 11300                           
 11301                           ;user.c: 66: TRISGbits.TRISG2 = 0;
 11302  110E  110D               	bcf	13,2	;volatile
 11303                           
 11304                           ;user.c: 68: init_adc();
 11305  110F  319F  2795  3190   	fcall	_init_adc
 11306                           
 11307                           ;user.c: 69: init_pwm();
 11308  1112  3193  23CF         	fcall	_init_pwm
 11309                           
 11310                           ;user.c: 71: INTCONbits.GIE = 0b1;
 11311  1114  178B               	bsf	11,7	;volatile
 11312                           
 11313                           ;user.c: 72: INTCONbits.TMR0IE = 0b1;
 11314  1115  168B               	bsf	11,5	;volatile
 11315                           
 11316                           ;user.c: 73: INTCONbits.TMR0IF = 0b0;
 11317  1116  110B               	bcf	11,2	;volatile
 11318  1117  0008               	return
 11319  1118                     __end_of_InitApp:	
 11320                           
 11321                           	psect	text35
 11322  13CF                     __ptext35:	
 11323 ;; *************** function _init_pwm *****************
 11324 ;; Defined at:
 11325 ;;		line 117 in file "user.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;		None
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;		None
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  1    wreg      void 
 11332 ;; Registers used:
 11333 ;;		wreg, status,2, status,0, pclath, cstack
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11343 ;;Total ram usage:        0 bytes
 11344 ;; Hardware stack levels used:    1
 11345 ;; Hardware stack levels required when called:    3
 11346 ;; This function calls:
 11347 ;;		_init_timer0
 11348 ;;		_init_timer2
 11349 ;; This function is called by:
 11350 ;;		_InitApp
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           
 11355                           ;psect for function _init_pwm
 11356  13CF                     _init_pwm:	
 11357                           
 11358                           ;user.c: 118: APFCONbits.CCP2SEL = 0;
 11359                           
 11360                           ;incstack = 0
 11361                           ; Regs used in _init_pwm: [wreg+status,2+status,0+pclath+cstack]
 11362  13CF  0022               	movlb	2	; select bank2
 11363  13D0  101D               	bcf	29,0	;volatile
 11364                           
 11365                           ;user.c: 119: TRISCbits.TRISC2 = 0;
 11366  13D1  0021               	movlb	1	; select bank1
 11367  13D2  110E               	bcf	14,2	;volatile
 11368                           
 11369                           ;user.c: 120: TRISCbits.TRISC1 = 0;
 11370  13D3  108E               	bcf	14,1	;volatile
 11371                           
 11372                           ;user.c: 121: TRISGbits.TRISG0 = 0;
 11373  13D4  0026               	movlb	6	; select bank6
 11374  13D5  100D               	bcf	13,0	;volatile
 11375                           
 11376                           ;user.c: 122: TRISGbits.TRISG3 = 0;
 11377  13D6  118D               	bcf	13,3	;volatile
 11378                           
 11379                           ;user.c: 123: TRISGbits.TRISG4 = 0;
 11380  13D7  120D               	bcf	13,4	;volatile
 11381                           
 11382                           ;user.c: 124: TRISEbits.TRISE6 = 0;
 11383  13D8  0021               	movlb	1	; select bank1
 11384  13D9  1310               	bcf	16,6	;volatile
 11385                           
 11386                           ;user.c: 125: TRISEbits.TRISE5 = 0;
 11387  13DA  1290               	bcf	16,5	;volatile
 11388                           
 11389                           ;user.c: 126: TRISEbits.TRISE4 = 0;
 11390  13DB  1210               	bcf	16,4	;volatile
 11391                           
 11392                           ;user.c: 127: TRISEbits.TRISE3 = 0;
 11393  13DC  1190               	bcf	16,3	;volatile
 11394                           
 11395                           ;user.c: 128: TRISEbits.TRISE2 = 0;
 11396  13DD  1110               	bcf	16,2	;volatile
 11397                           
 11398                           ;user.c: 129: CCP1CONbits.CCP1M = 0b1111;
 11399  13DE  300F               	movlw	15
 11400  13DF  0025               	movlb	5	; select bank5
 11401  13E0  0493               	iorwf	19,f	;volatile
 11402                           
 11403                           ;user.c: 130: CCP2CONbits.CCP2M = 0b1111;
 11404  13E1  300F               	movlw	15
 11405  13E2  049A               	iorwf	26,f	;volatile
 11406                           
 11407                           ;user.c: 131: CCP3CONbits.CCP3M = 0b1111;
 11408  13E3  300F               	movlw	15
 11409  13E4  0026               	movlb	6	; select bank6
 11410  13E5  0493               	iorwf	19,f	;volatile
 11411                           
 11412                           ;user.c: 132: CCP4CONbits.CCP4M = 0b1111;
 11413  13E6  300F               	movlw	15
 11414  13E7  049A               	iorwf	26,f	;volatile
 11415                           
 11416                           ;user.c: 133: CCP5CONbits.CCP5M = 0b1111;
 11417  13E8  300F               	movlw	15
 11418  13E9  049E               	iorwf	30,f	;volatile
 11419                           
 11420                           ;user.c: 134: CCP6CONbits.CCP6M = 0b1111;
 11421  13EA  300F               	movlw	15
 11422  13EB  002C               	movlb	12	; select bank12
 11423  13EC  0493               	iorwf	19,f	;volatile
 11424                           
 11425                           ;user.c: 135: CCP7CONbits.CCP7M = 0b1111;
 11426  13ED  300F               	movlw	15
 11427  13EE  0496               	iorwf	22,f	;volatile
 11428                           
 11429                           ;user.c: 136: CCP8CONbits.CCP8M = 0b1111;
 11430  13EF  300F               	movlw	15
 11431  13F0  0499               	iorwf	25,f	;volatile
 11432                           
 11433                           ;user.c: 137: CCP9CONbits.CCP9M = 0b1111;
 11434  13F1  300F               	movlw	15
 11435  13F2  049C               	iorwf	28,f	;volatile
 11436                           
 11437                           ;user.c: 138: CCP10CONbits.CCP10M = 0b1111;
 11438  13F3  300F               	movlw	15
 11439  13F4  049F               	iorwf	31,f	;volatile
 11440                           
 11441                           ;user.c: 139: CCPTMRS0 = 0b00000000;
 11442  13F5  0025               	movlb	5	; select bank5
 11443  13F6  019D               	clrf	29	;volatile
 11444                           
 11445                           ;user.c: 140: CCPTMRS1 = 0b00000000;
 11446  13F7  019E               	clrf	30	;volatile
 11447                           
 11448                           ;user.c: 141: CCPTMRS2 = 0b00000000;
 11449  13F8  019F               	clrf	31	;volatile
 11450                           
 11451                           ;user.c: 142: CCPR1 = 50;
 11452  13F9  3000               	movlw	0
 11453  13FA  0092               	movwf	18	;volatile
 11454  13FB  3032               	movlw	50
 11455  13FC  0091               	movwf	17	;volatile
 11456                           
 11457                           ;user.c: 143: CCPR2 = 100;
 11458  13FD  3000               	movlw	0
 11459  13FE  0099               	movwf	25	;volatile
 11460  13FF  3064               	movlw	100
 11461  1400  0098               	movwf	24	;volatile
 11462                           
 11463                           ;user.c: 144: CCPR3 = 150;
 11464  1401  3000               	movlw	0
 11465  1402  0026               	movlb	6	; select bank6
 11466  1403  0092               	movwf	18	;volatile
 11467  1404  3096               	movlw	150
 11468  1405  0091               	movwf	17	;volatile
 11469                           
 11470                           ;user.c: 145: CCPR4 = 200;
 11471  1406  3000               	movlw	0
 11472  1407  0099               	movwf	25	;volatile
 11473  1408  30C8               	movlw	200
 11474  1409  0098               	movwf	24	;volatile
 11475                           
 11476                           ;user.c: 146: init_timer2();
 11477  140A  319F  2783  3193   	fcall	_init_timer2
 11478                           
 11479                           ;user.c: 147: init_timer0();
 11480  140D  319F  277C         	fcall	_init_timer0
 11481  140F  0008               	return
 11482  1410                     __end_of_init_pwm:	
 11483                           
 11484                           	psect	text36
 11485  1F83                     __ptext36:	
 11486 ;; *************** function _init_timer2 *****************
 11487 ;; Defined at:
 11488 ;;		line 150 in file "user.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;		None
 11491 ;; Auto vars:     Size  Location     Type
 11492 ;;		None
 11493 ;; Return value:  Size  Location     Type
 11494 ;;                  1    wreg      void 
 11495 ;; Registers used:
 11496 ;;		wreg, status,2, status,0
 11497 ;; Tracked objects:
 11498 ;;		On entry : 0/0
 11499 ;;		On exit  : 0/0
 11500 ;;		Unchanged: 0/0
 11501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11506 ;;Total ram usage:        0 bytes
 11507 ;; Hardware stack levels used:    1
 11508 ;; Hardware stack levels required when called:    2
 11509 ;; This function calls:
 11510 ;;		Nothing
 11511 ;; This function is called by:
 11512 ;;		_init_pwm
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           
 11517                           ;psect for function _init_timer2
 11518  1F83                     _init_timer2:	
 11519                           
 11520                           ;user.c: 151: T2CONbits.T2OUTPS = 0b0000;
 11521                           
 11522                           ;incstack = 0
 11523                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
 11524  1F83  3087               	movlw	-121
 11525  1F84  0020               	movlb	0	; select bank0
 11526  1F85  059C               	andwf	28,f	;volatile
 11527                           
 11528                           ;user.c: 152: T2CONbits.T2CKPS = 0b00;
 11529  1F86  30FC               	movlw	-4
 11530  1F87  059C               	andwf	28,f	;volatile
 11531                           
 11532                           ;user.c: 153: PR2 = 0xFF;
 11533  1F88  30FF               	movlw	255
 11534  1F89  009B               	movwf	27	;volatile
 11535                           
 11536                           ;user.c: 154: T2CONbits.TMR2ON = 1;
 11537  1F8A  151C               	bsf	28,2	;volatile
 11538  1F8B  0008               	return
 11539  1F8C                     __end_of_init_timer2:	
 11540                           
 11541                           	psect	text37
 11542  1F7C                     __ptext37:	
 11543 ;; *************** function _init_timer0 *****************
 11544 ;; Defined at:
 11545 ;;		line 157 in file "user.c"
 11546 ;; Parameters:    Size  Location     Type
 11547 ;;		None
 11548 ;; Auto vars:     Size  Location     Type
 11549 ;;		None
 11550 ;; Return value:  Size  Location     Type
 11551 ;;                  1    wreg      void 
 11552 ;; Registers used:
 11553 ;;		None
 11554 ;; Tracked objects:
 11555 ;;		On entry : 0/0
 11556 ;;		On exit  : 0/0
 11557 ;;		Unchanged: 0/0
 11558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11563 ;;Total ram usage:        0 bytes
 11564 ;; Hardware stack levels used:    1
 11565 ;; Hardware stack levels required when called:    2
 11566 ;; This function calls:
 11567 ;;		Nothing
 11568 ;; This function is called by:
 11569 ;;		_init_pwm
 11570 ;; This function uses a non-reentrant model
 11571 ;;
 11572                           
 11573                           
 11574                           ;psect for function _init_timer0
 11575  1F7C                     _init_timer0:	
 11576                           
 11577                           ;user.c: 158: OPTION_REGbits.TMR0CS = 0b0;
 11578                           
 11579                           ;incstack = 0
 11580                           ; Regs used in _init_timer0: []
 11581  1F7C  0021               	movlb	1	; select bank1
 11582  1F7D  1295               	bcf	21,5	;volatile
 11583                           
 11584                           ;user.c: 159: OPTION_REGbits.PSA = 0b0;
 11585  1F7E  1195               	bcf	21,3	;volatile
 11586                           
 11587                           ;user.c: 160: OPTION_REGbits.PS0 = 0b0;
 11588  1F7F  1015               	bcf	21,0	;volatile
 11589                           
 11590                           ;user.c: 161: OPTION_REGbits.PS1 = 0b1;
 11591  1F80  1495               	bsf	21,1	;volatile
 11592                           
 11593                           ;user.c: 162: OPTION_REGbits.PS2 = 0b0;
 11594  1F81  1115               	bcf	21,2	;volatile
 11595  1F82  0008               	return
 11596  1F83                     __end_of_init_timer0:	
 11597                           
 11598                           	psect	text38
 11599  1F95                     __ptext38:	
 11600 ;; *************** function _init_adc *****************
 11601 ;; Defined at:
 11602 ;;		line 103 in file "user.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;		None
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;		None
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      void 
 11609 ;; Registers used:
 11610 ;;		wreg, status,2, status,0
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11620 ;;Total ram usage:        0 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; Hardware stack levels required when called:    2
 11623 ;; This function calls:
 11624 ;;		Nothing
 11625 ;; This function is called by:
 11626 ;;		_InitApp
 11627 ;; This function uses a non-reentrant model
 11628 ;;
 11629                           
 11630                           
 11631                           ;psect for function _init_adc
 11632  1F95                     _init_adc:	
 11633                           
 11634                           ;user.c: 104: ADCON1bits.ADFM = 0b1;
 11635                           
 11636                           ;incstack = 0
 11637                           ; Regs used in _init_adc: [wreg+status,2+status,0]
 11638  1F95  0021               	movlb	1	; select bank1
 11639  1F96  179E               	bsf	30,7	;volatile
 11640                           
 11641                           ;user.c: 105: ADCON1bits.ADCS = 0b110;
 11642  1F97  081E               	movf	30,w	;volatile
 11643  1F98  398F               	andlw	-113
 11644  1F99  3860               	iorlw	96
 11645  1F9A  009E               	movwf	30	;volatile
 11646                           
 11647                           ;user.c: 106: ADCON1bits.ADPREF = 0b00;
 11648  1F9B  30FC               	movlw	-4
 11649  1F9C  059E               	andwf	30,f	;volatile
 11650                           
 11651                           ;user.c: 107: ADCON0bits.ADON = 0b1;
 11652  1F9D  141D               	bsf	29,0	;volatile
 11653  1F9E  0008               	return
 11654  1F9F                     __end_of_init_adc:	
 11655                           
 11656                           	psect	text39
 11657  07FC                     __ptext39:	
 11658 ;; *************** function _ConfigureOscillator *****************
 11659 ;; Defined at:
 11660 ;;		line 18 in file "system.c"
 11661 ;; Parameters:    Size  Location     Type
 11662 ;;		None
 11663 ;; Auto vars:     Size  Location     Type
 11664 ;;		None
 11665 ;; Return value:  Size  Location     Type
 11666 ;;                  1    wreg      void 
 11667 ;; Registers used:
 11668 ;;		wreg, status,2, status,0
 11669 ;; Tracked objects:
 11670 ;;		On entry : 0/0
 11671 ;;		On exit  : 0/0
 11672 ;;		Unchanged: 0/0
 11673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11678 ;;Total ram usage:        0 bytes
 11679 ;; Hardware stack levels used:    1
 11680 ;; Hardware stack levels required when called:    2
 11681 ;; This function calls:
 11682 ;;		Nothing
 11683 ;; This function is called by:
 11684 ;;		_main
 11685 ;; This function uses a non-reentrant model
 11686 ;;
 11687                           
 11688                           
 11689                           ;psect for function _ConfigureOscillator
 11690  07FC                     _ConfigureOscillator:	
 11691                           
 11692                           ;system.c: 20: OSCCONbits.SCS = 0b00;
 11693                           
 11694                           ;incstack = 0
 11695                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
 11696  07FC  30FC               	movlw	-4
 11697  07FD  0021               	movlb	1	; select bank1
 11698  07FE  0599               	andwf	25,f	;volatile
 11699  07FF  0008               	return
 11700  0800                     __end_of_ConfigureOscillator:	
 11701                           
 11702                           	psect	intentry
 11703  0004                     __pintentry:	
 11704 ;; *************** function _isr *****************
 11705 ;; Defined at:
 11706 ;;		line 23 in file "interrupts.c"
 11707 ;; Parameters:    Size  Location     Type
 11708 ;;		None
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;		None
 11711 ;; Return value:  Size  Location     Type
 11712 ;;                  1    wreg      void 
 11713 ;; Registers used:
 11714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11715 ;; Tracked objects:
 11716 ;;		On entry : 0/0
 11717 ;;		On exit  : 0/0
 11718 ;;		Unchanged: 0/0
 11719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11722 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11723 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11724 ;;Total ram usage:        5 bytes
 11725 ;; Hardware stack levels used:    1
 11726 ;; Hardware stack levels required when called:    1
 11727 ;; This function calls:
 11728 ;;		i1_set_leds_top
 11729 ;; This function is called by:
 11730 ;;		Interrupt level 1
 11731 ;; This function uses a non-reentrant model
 11732 ;;
 11733                           
 11734  0004                     _isr:	
 11735                           
 11736                           ;incstack = 0
 11737                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11738  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11739  0005  3180               	pagesel	$
 11740  0006  0020               	movlb	0	; select bank0
 11741  0007  087F               	movf	127,w
 11742  0008  00F8               	movwf	??_isr+4
 11743                           
 11744                           ;interrupts.c: 24: extern volatile long timer;
 11745                           ;interrupts.c: 25: extern volatile long sub_timer;
 11746                           ;interrupts.c: 26: extern volatile long tap_timer;
 11747                           ;interrupts.c: 27: extern volatile long mod_timer;
 11748                           ;interrupts.c: 28: extern volatile long baseline_delay_time;
 11749                           ;interrupts.c: 29: extern volatile long delay_time;
 11750                           ;interrupts.c: 30: extern volatile uint8_t top_push_state;
 11751                           ;interrupts.c: 32: if (INTCONbits.TMR0IF == 1) {
 11752  0009  1D0B               	btfss	11,2	;volatile
 11753  000A  286E               	goto	i1l57
 11754                           
 11755                           ;interrupts.c: 33: timer = timer + 1;
 11756  000B  3001               	movlw	1
 11757  000C  00F4               	movwf	??_isr
 11758  000D  3000               	movlw	0
 11759  000E  00F5               	movwf	??_isr+1
 11760  000F  3000               	movlw	0
 11761  0010  00F6               	movwf	??_isr+2
 11762  0011  3000               	movlw	0
 11763  0012  00F7               	movwf	??_isr+3
 11764  0013  0021               	movlb	1	; select bank1
 11765  0014  0847               	movf	_timer^(0+128),w	;volatile
 11766  0015  07F4               	addwf	??_isr,f
 11767  0016  0848               	movf	(_timer+1)^(0+128),w	;volatile
 11768  0017  3DF5               	addwfc	??_isr+1,f
 11769  0018  0849               	movf	(_timer+2)^(0+128),w	;volatile
 11770  0019  3DF6               	addwfc	??_isr+2,f
 11771  001A  084A               	movf	(_timer+3)^(0+128),w	;volatile
 11772  001B  3DF7               	addwfc	??_isr+3,f
 11773  001C  0877               	movf	??_isr+3,w
 11774  001D  00CA               	movwf	(_timer+3)^(0+128)	;volatile
 11775  001E  0876               	movf	??_isr+2,w
 11776  001F  00C9               	movwf	(_timer+2)^(0+128)	;volatile
 11777  0020  0875               	movf	??_isr+1,w
 11778  0021  00C8               	movwf	(_timer+1)^(0+128)	;volatile
 11779  0022  0874               	movf	??_isr,w
 11780  0023  00C7               	movwf	_timer^(0+128)	;volatile
 11781                           
 11782                           ;interrupts.c: 34: sub_timer = sub_timer + 1;
 11783  0024  3001               	movlw	1
 11784  0025  00F4               	movwf	??_isr
 11785  0026  3000               	movlw	0
 11786  0027  00F5               	movwf	??_isr+1
 11787  0028  3000               	movlw	0
 11788  0029  00F6               	movwf	??_isr+2
 11789  002A  3000               	movlw	0
 11790  002B  00F7               	movwf	??_isr+3
 11791  002C  0843               	movf	_sub_timer^(0+128),w	;volatile
 11792  002D  07F4               	addwf	??_isr,f
 11793  002E  0844               	movf	(_sub_timer+1)^(0+128),w	;volatile
 11794  002F  3DF5               	addwfc	??_isr+1,f
 11795  0030  0845               	movf	(_sub_timer+2)^(0+128),w	;volatile
 11796  0031  3DF6               	addwfc	??_isr+2,f
 11797  0032  0846               	movf	(_sub_timer+3)^(0+128),w	;volatile
 11798  0033  3DF7               	addwfc	??_isr+3,f
 11799  0034  0877               	movf	??_isr+3,w
 11800  0035  00C6               	movwf	(_sub_timer+3)^(0+128)	;volatile
 11801  0036  0876               	movf	??_isr+2,w
 11802  0037  00C5               	movwf	(_sub_timer+2)^(0+128)	;volatile
 11803  0038  0875               	movf	??_isr+1,w
 11804  0039  00C4               	movwf	(_sub_timer+1)^(0+128)	;volatile
 11805  003A  0874               	movf	??_isr,w
 11806  003B  00C3               	movwf	_sub_timer^(0+128)	;volatile
 11807                           
 11808                           ;interrupts.c: 35: tap_timer = tap_timer + 1;
 11809  003C  3001               	movlw	1
 11810  003D  00F4               	movwf	??_isr
 11811  003E  3000               	movlw	0
 11812  003F  00F5               	movwf	??_isr+1
 11813  0040  3000               	movlw	0
 11814  0041  00F6               	movwf	??_isr+2
 11815  0042  3000               	movlw	0
 11816  0043  00F7               	movwf	??_isr+3
 11817  0044  0879               	movf	_tap_timer,w	;volatile
 11818  0045  07F4               	addwf	??_isr,f
 11819  0046  087A               	movf	_tap_timer+1,w	;volatile
 11820  0047  3DF5               	addwfc	??_isr+1,f
 11821  0048  087B               	movf	_tap_timer+2,w	;volatile
 11822  0049  3DF6               	addwfc	??_isr+2,f
 11823  004A  087C               	movf	_tap_timer+3,w	;volatile
 11824  004B  3DF7               	addwfc	??_isr+3,f
 11825  004C  0877               	movf	??_isr+3,w
 11826  004D  00FC               	movwf	_tap_timer+3	;volatile
 11827  004E  0876               	movf	??_isr+2,w
 11828  004F  00FB               	movwf	_tap_timer+2	;volatile
 11829  0050  0875               	movf	??_isr+1,w
 11830  0051  00FA               	movwf	_tap_timer+1	;volatile
 11831  0052  0874               	movf	??_isr,w
 11832  0053  00F9               	movwf	_tap_timer	;volatile
 11833                           
 11834                           ;interrupts.c: 36: mod_timer = mod_timer + 1;
 11835  0054  3001               	movlw	1
 11836  0055  00F4               	movwf	??_isr
 11837  0056  3000               	movlw	0
 11838  0057  00F5               	movwf	??_isr+1
 11839  0058  3000               	movlw	0
 11840  0059  00F6               	movwf	??_isr+2
 11841  005A  3000               	movlw	0
 11842  005B  00F7               	movwf	??_isr+3
 11843  005C  0022               	movlb	2	; select bank2
 11844  005D  0838               	movf	_mod_timer^(0+256),w	;volatile
 11845  005E  07F4               	addwf	??_isr,f
 11846  005F  0839               	movf	(_mod_timer+1)^(0+256),w	;volatile
 11847  0060  3DF5               	addwfc	??_isr+1,f
 11848  0061  083A               	movf	(_mod_timer+2)^(0+256),w	;volatile
 11849  0062  3DF6               	addwfc	??_isr+2,f
 11850  0063  083B               	movf	(_mod_timer+3)^(0+256),w	;volatile
 11851  0064  3DF7               	addwfc	??_isr+3,f
 11852  0065  0877               	movf	??_isr+3,w
 11853  0066  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
 11854  0067  0876               	movf	??_isr+2,w
 11855  0068  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
 11856  0069  0875               	movf	??_isr+1,w
 11857  006A  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
 11858  006B  0874               	movf	??_isr,w
 11859  006C  00B8               	movwf	_mod_timer^(0+256)	;volatile
 11860                           
 11861                           ;interrupts.c: 37: INTCONbits.TMR0IF = 0;
 11862  006D  110B               	bcf	11,2	;volatile
 11863  006E                     i1l57:	
 11864                           
 11865                           ;interrupts.c: 38: }
 11866                           ;interrupts.c: 40: if (timer >= baseline_delay_time) {
 11867  006E  0021               	movlb	1	; select bank1
 11868  006F  084A               	movf	(_timer+3)^(0+128),w	;volatile
 11869  0070  3A80               	xorlw	128
 11870  0071  00F4               	movwf	??_isr
 11871  0072  0861               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
 11872  0073  3A80               	xorlw	128
 11873  0074  0274               	subwf	??_isr,w
 11874  0075  1D03               	skipz
 11875  0076  2881               	goto	u325_23
 11876  0077  0860               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
 11877  0078  0249               	subwf	(_timer+2)^(0+128),w	;volatile
 11878  0079  1D03               	skipz
 11879  007A  2881               	goto	u325_23
 11880  007B  085F               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 11881  007C  0248               	subwf	(_timer+1)^(0+128),w	;volatile
 11882  007D  1D03               	skipz
 11883  007E  2881               	goto	u325_23
 11884  007F  085E               	movf	_baseline_delay_time^(0+128),w	;volatile
 11885  0080  0247               	subwf	_timer^(0+128),w	;volatile
 11886  0081                     u325_23:	
 11887  0081  1C03               	skipc
 11888  0082  2891               	goto	i1l3224
 11889                           
 11890                           ;interrupts.c: 41: if (suspend_blink == 0) {
 11891  0083  086F               	movf	_suspend_blink^(0+128),w
 11892  0084  1D03               	btfss	3,2
 11893  0085  2888               	goto	i1l3222
 11894                           
 11895                           ;interrupts.c: 42: LATBbits.LATB4 = 1;
 11896  0086  0022               	movlb	2	; select bank2
 11897  0087  160D               	bsf	13,4	;volatile
 11898  0088                     i1l3222:	
 11899                           
 11900                           ;interrupts.c: 43: }
 11901                           ;interrupts.c: 44: timer = 0;
 11902  0088  3000               	movlw	0
 11903  0089  0021               	movlb	1	; select bank1
 11904  008A  00CA               	movwf	(_timer+3)^(0+128)	;volatile
 11905  008B  3000               	movlw	0
 11906  008C  00C9               	movwf	(_timer+2)^(0+128)	;volatile
 11907  008D  3000               	movlw	0
 11908  008E  00C8               	movwf	(_timer+1)^(0+128)	;volatile
 11909  008F  3000               	movlw	0
 11910  0090  00C7               	movwf	_timer^(0+128)	;volatile
 11911  0091                     i1l3224:	
 11912                           
 11913                           ;interrupts.c: 45: }
 11914                           ;interrupts.c: 47: if (timer >= 20) {
 11915  0091  1BCA               	btfsc	(_timer+3)^(0+128),7	;volatile
 11916  0092  28A5               	goto	i1l3230
 11917  0093  084A               	movf	(_timer+3)^(0+128),w	;volatile
 11918  0094  1D03               	btfss	3,2
 11919  0095  28A0               	goto	i1l3226
 11920  0096  0849               	movf	(_timer+2)^(0+128),w	;volatile
 11921  0097  1D03               	btfss	3,2
 11922  0098  28A0               	goto	i1l3226
 11923  0099  0848               	movf	(_timer+1)^(0+128),w	;volatile
 11924  009A  1D03               	btfss	3,2
 11925  009B  28A0               	goto	i1l3226
 11926  009C  3014               	movlw	20
 11927  009D  0247               	subwf	_timer^(0+128),w	;volatile
 11928  009E  1C03               	btfss	3,0
 11929  009F  28A5               	goto	i1l3230
 11930  00A0                     i1l3226:	
 11931                           
 11932                           ;interrupts.c: 48: if (suspend_blink == 0) {
 11933  00A0  086F               	movf	_suspend_blink^(0+128),w
 11934  00A1  1D03               	btfss	3,2
 11935  00A2  28A5               	goto	i1l3230
 11936                           
 11937                           ;interrupts.c: 49: LATBbits.LATB4 = 0;
 11938  00A3  0022               	movlb	2	; select bank2
 11939  00A4  120D               	bcf	13,4	;volatile
 11940  00A5                     i1l3230:	
 11941                           
 11942                           ;interrupts.c: 50: }
 11943                           ;interrupts.c: 51: }
 11944                           ;interrupts.c: 53: if (sub_timer >= delay_time) {
 11945  00A5  0021               	movlb	1	; select bank1
 11946  00A6  0846               	movf	(_sub_timer+3)^(0+128),w	;volatile
 11947  00A7  3A80               	xorlw	128
 11948  00A8  00F4               	movwf	??_isr
 11949  00A9  0865               	movf	(_delay_time+3)^(0+128),w	;volatile
 11950  00AA  3A80               	xorlw	128
 11951  00AB  0274               	subwf	??_isr,w
 11952  00AC  1D03               	skipz
 11953  00AD  28B8               	goto	u329_23
 11954  00AE  0864               	movf	(_delay_time+2)^(0+128),w	;volatile
 11955  00AF  0245               	subwf	(_sub_timer+2)^(0+128),w	;volatile
 11956  00B0  1D03               	skipz
 11957  00B1  28B8               	goto	u329_23
 11958  00B2  0863               	movf	(_delay_time+1)^(0+128),w	;volatile
 11959  00B3  0244               	subwf	(_sub_timer+1)^(0+128),w	;volatile
 11960  00B4  1D03               	skipz
 11961  00B5  28B8               	goto	u329_23
 11962  00B6  0862               	movf	_delay_time^(0+128),w	;volatile
 11963  00B7  0243               	subwf	_sub_timer^(0+128),w	;volatile
 11964  00B8                     u329_23:	
 11965  00B8  1C03               	skipc
 11966  00B9  28D4               	goto	i1l3238
 11967                           
 11968                           ;interrupts.c: 54: if (suspend_blink == 0) {
 11969  00BA  086F               	movf	_suspend_blink^(0+128),w
 11970  00BB  1D03               	btfss	3,2
 11971  00BC  28CB               	goto	i1l3236
 11972                           
 11973                           ;interrupts.c: 55: set_leds_top(top_push_state, 1);
 11974  00BD  087D               	movf	_top_push_state,w	;volatile
 11975  00BE  00F4               	movwf	??_isr
 11976  00BF  01F5               	clrf	??_isr+1
 11977  00C0  0874               	movf	??_isr,w
 11978  00C1  00F0               	movwf	i1set_leds_top@x
 11979  00C2  0875               	movf	??_isr+1,w
 11980  00C3  00F1               	movwf	i1set_leds_top@x+1
 11981  00C4  3001               	movlw	1
 11982  00C5  00F2               	movwf	i1set_leds_top@ledState
 11983  00C6  3000               	movlw	0
 11984  00C7  00F3               	movwf	i1set_leds_top@ledState+1
 11985  00C8  3194  249A  3180   	fcall	i1_set_leds_top
 11986  00CB                     i1l3236:	
 11987                           
 11988                           ;interrupts.c: 56: }
 11989                           ;interrupts.c: 57: sub_timer = 0;
 11990  00CB  3000               	movlw	0
 11991  00CC  0021               	movlb	1	; select bank1
 11992  00CD  00C6               	movwf	(_sub_timer+3)^(0+128)	;volatile
 11993  00CE  3000               	movlw	0
 11994  00CF  00C5               	movwf	(_sub_timer+2)^(0+128)	;volatile
 11995  00D0  3000               	movlw	0
 11996  00D1  00C4               	movwf	(_sub_timer+1)^(0+128)	;volatile
 11997  00D2  3000               	movlw	0
 11998  00D3  00C3               	movwf	_sub_timer^(0+128)	;volatile
 11999  00D4                     i1l3238:	
 12000                           
 12001                           ;interrupts.c: 58: }
 12002                           ;interrupts.c: 60: if (sub_timer >= 20) {
 12003  00D4  1BC6               	btfsc	(_sub_timer+3)^(0+128),7	;volatile
 12004  00D5  28F3               	goto	i1l3244
 12005  00D6  0846               	movf	(_sub_timer+3)^(0+128),w	;volatile
 12006  00D7  1D03               	btfss	3,2
 12007  00D8  28E3               	goto	i1l3240
 12008  00D9  0845               	movf	(_sub_timer+2)^(0+128),w	;volatile
 12009  00DA  1D03               	btfss	3,2
 12010  00DB  28E3               	goto	i1l3240
 12011  00DC  0844               	movf	(_sub_timer+1)^(0+128),w	;volatile
 12012  00DD  1D03               	btfss	3,2
 12013  00DE  28E3               	goto	i1l3240
 12014  00DF  3014               	movlw	20
 12015  00E0  0243               	subwf	_sub_timer^(0+128),w	;volatile
 12016  00E1  1C03               	btfss	3,0
 12017  00E2  28F3               	goto	i1l3244
 12018  00E3                     i1l3240:	
 12019                           
 12020                           ;interrupts.c: 61: if (suspend_blink == 0) {
 12021  00E3  086F               	movf	_suspend_blink^(0+128),w
 12022  00E4  1D03               	btfss	3,2
 12023  00E5  28F3               	goto	i1l3244
 12024                           
 12025                           ;interrupts.c: 62: set_leds_top(top_push_state, 0);
 12026  00E6  087D               	movf	_top_push_state,w	;volatile
 12027  00E7  00F4               	movwf	??_isr
 12028  00E8  01F5               	clrf	??_isr+1
 12029  00E9  0874               	movf	??_isr,w
 12030  00EA  00F0               	movwf	i1set_leds_top@x
 12031  00EB  0875               	movf	??_isr+1,w
 12032  00EC  00F1               	movwf	i1set_leds_top@x+1
 12033  00ED  3000               	movlw	0
 12034  00EE  00F2               	movwf	i1set_leds_top@ledState
 12035  00EF  00F3               	movwf	i1set_leds_top@ledState+1
 12036  00F0  3194  249A  3180   	fcall	i1_set_leds_top
 12037  00F3                     i1l3244:	
 12038                           
 12039                           ;interrupts.c: 63: }
 12040                           ;interrupts.c: 64: }
 12041                           ;interrupts.c: 67: if (preset_programmning_on == 1) {
 12042  00F3  0021               	movlb	1	; select bank1
 12043  00F4  035D               	decf	_preset_programmning_on^(0+128),w
 12044  00F5  1D03               	btfss	3,2
 12045  00F6  291D               	goto	i1l3256
 12046                           
 12047                           ;interrupts.c: 68: preset_blink++;
 12048  00F7  3001               	movlw	1
 12049  00F8  00F4               	movwf	??_isr
 12050  00F9  0874               	movf	??_isr,w
 12051  00FA  07DC               	addwf	_preset_blink^(0+128),f
 12052                           
 12053                           ;interrupts.c: 70: if (preset_blink >= blink_delay) {
 12054  00FB  0022               	movlb	2	; select bank2
 12055  00FC  085F               	movf	(_blink_delay+1)^(0+256),w
 12056  00FD  3A80               	xorlw	128
 12057  00FE  3C80               	sublw	128
 12058  00FF  1D03               	skipz
 12059  0100  2904               	goto	u334_25
 12060  0101  085E               	movf	_blink_delay^(0+256),w
 12061  0102  0021               	movlb	1	; select bank1
 12062  0103  025C               	subwf	_preset_blink^(0+128),w
 12063  0104                     u334_25:	
 12064  0104  1C03               	skipc
 12065  0105  2922               	goto	i1l3260
 12066                           
 12067                           ;interrupts.c: 71: LATBbits.LATB1 = 1;
 12068  0106  0022               	movlb	2	; select bank2
 12069  0107  148D               	bsf	13,1	;volatile
 12070                           
 12071                           ;interrupts.c: 72: if (preset_blink > blink_delay*2) {
 12072  0108  085F               	movf	(_blink_delay+1)^(0+256),w
 12073  0109  00F5               	movwf	??_isr+1
 12074  010A  085E               	movf	_blink_delay^(0+256),w
 12075  010B  00F4               	movwf	??_isr
 12076  010C  35F4               	lslf	??_isr,f
 12077  010D  0DF5               	rlf	??_isr+1,f
 12078  010E  0875               	movf	??_isr+1,w
 12079  010F  3A80               	xorlw	128
 12080  0110  00F6               	movwf	??_isr+2
 12081  0111  3080               	movlw	128
 12082  0112  0276               	subwf	??_isr+2,w
 12083  0113  1D03               	skipz
 12084  0114  2918               	goto	u335_25
 12085  0115  0021               	movlb	1	; select bank1
 12086  0116  085C               	movf	_preset_blink^(0+128),w
 12087  0117  0274               	subwf	??_isr,w
 12088  0118                     u335_25:	
 12089  0118  1803               	skipnc
 12090  0119  2924               	goto	i1l72
 12091                           
 12092                           ;interrupts.c: 73: preset_blink = 0;
 12093  011A  0021               	movlb	1	; select bank1
 12094  011B  01DC               	clrf	_preset_blink^(0+128)
 12095                           
 12096                           ;interrupts.c: 74: }
 12097                           ;interrupts.c: 76: } else {
 12098  011C  2924               	goto	i1l72
 12099  011D                     i1l3256:	
 12100                           ;interrupts.c: 78: }
 12101                           ;interrupts.c: 80: } else {
 12102                           
 12103                           ;interrupts.c: 77: LATBbits.LATB1 = 0;
 12104                           
 12105                           
 12106                           ;interrupts.c: 81: if (preset_blink > 0) {
 12107  011D  0021               	movlb	1	; select bank1
 12108  011E  085C               	movf	_preset_blink^(0+128),w
 12109  011F  1903               	btfsc	3,2
 12110  0120  2924               	goto	i1l72
 12111                           
 12112                           ;interrupts.c: 82: preset_blink = 0;
 12113  0121  01DC               	clrf	_preset_blink^(0+128)
 12114  0122                     i1l3260:	
 12115                           
 12116                           ;interrupts.c: 83: LATBbits.LATB1 = 0;
 12117  0122  0022               	movlb	2	; select bank2
 12118  0123  108D               	bcf	13,1	;volatile
 12119  0124                     i1l72:	
 12120  0124  0878               	movf	??_isr+4,w
 12121  0125  0020               	movlb	0	; select bank0
 12122  0126  00FF               	movwf	127
 12123  0127  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12124  0128  0009               	retfie
 12125  0129                     __end_of_isr:	
 12126                           
 12127                           	psect	text41
 12128  149A                     __ptext41:	
 12129 ;; *************** function i1_set_leds_top *****************
 12130 ;; Defined at:
 12131 ;;		line 16 in file "LEDs.c"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;  x               2    0[COMMON] int 
 12134 ;;  ledState        2    2[COMMON] int 
 12135 ;; Auto vars:     Size  Location     Type
 12136 ;;		None
 12137 ;; Return value:  Size  Location     Type
 12138 ;;                  1    wreg      void 
 12139 ;; Registers used:
 12140 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12141 ;; Tracked objects:
 12142 ;;		On entry : 0/0
 12143 ;;		On exit  : 0/0
 12144 ;;		Unchanged: 0/0
 12145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12149 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12150 ;;Total ram usage:        4 bytes
 12151 ;; Hardware stack levels used:    1
 12152 ;; This function calls:
 12153 ;;		Nothing
 12154 ;; This function is called by:
 12155 ;;		_isr
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           
 12160                           ;psect for function i1_set_leds_top
 12161  149A                     i1_set_leds_top:	
 12162                           
 12163                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 12164                           
 12165                           ;incstack = 0
 12166                           ; Regs used in i1_set_leds_top: [wreg-fsr0h+status,2+status,0]
 12167  149A  0027               	movlb	7	; select bank7
 12168  149B  100C               	bcf	12,0	;volatile
 12169                           
 12170                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 12171  149C  108C               	bcf	12,1	;volatile
 12172                           
 12173                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 12174  149D  110C               	bcf	12,2	;volatile
 12175                           
 12176                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 12177  149E  118C               	bcf	12,3	;volatile
 12178                           
 12179                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 12180  149F  120C               	bcf	12,4	;volatile
 12181                           
 12182                           ;LEDs.c: 22: switch (x) {
 12183  14A0  2CC5               	goto	i1l3206
 12184  14A1                     i1l3194:	
 12185                           ;LEDs.c: 23: case 1:
 12186                           
 12187                           
 12188                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 12189  14A1  0C72               	rrf	i1set_leds_top@ledState,w
 12190  14A2  1C03               	skipc
 12191  14A3  100C               	bcf	12,0	;volatile
 12192  14A4  1803               	skipnc
 12193  14A5  140C               	bsf	12,0	;volatile
 12194                           
 12195                           ;LEDs.c: 25: break;
 12196  14A6  0008               	return
 12197  14A7                     i1l3196:	
 12198                           ;LEDs.c: 26: case 2:
 12199                           
 12200                           
 12201                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 12202  14A7  0C72               	rrf	i1set_leds_top@ledState,w
 12203  14A8  1C03               	skipc
 12204  14A9  108C               	bcf	12,1	;volatile
 12205  14AA  1803               	skipnc
 12206  14AB  148C               	bsf	12,1	;volatile
 12207                           
 12208                           ;LEDs.c: 28: break;
 12209  14AC  0008               	return
 12210  14AD                     i1l3198:	
 12211                           ;LEDs.c: 29: case 3:
 12212                           
 12213                           
 12214                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 12215  14AD  0C72               	rrf	i1set_leds_top@ledState,w
 12216  14AE  1C03               	skipc
 12217  14AF  110C               	bcf	12,2	;volatile
 12218  14B0  1803               	skipnc
 12219  14B1  150C               	bsf	12,2	;volatile
 12220                           
 12221                           ;LEDs.c: 31: break;
 12222  14B2  0008               	return
 12223  14B3                     i1l3200:	
 12224                           ;LEDs.c: 32: case 4:
 12225                           
 12226                           
 12227                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 12228  14B3  0C72               	rrf	i1set_leds_top@ledState,w
 12229  14B4  1C03               	skipc
 12230  14B5  118C               	bcf	12,3	;volatile
 12231  14B6  1803               	skipnc
 12232  14B7  158C               	bsf	12,3	;volatile
 12233                           
 12234                           ;LEDs.c: 34: break;
 12235  14B8  0008               	return
 12236  14B9                     i1l3202:	
 12237                           ;LEDs.c: 35: case 5:
 12238                           
 12239                           
 12240                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 12241  14B9  0C72               	rrf	i1set_leds_top@ledState,w
 12242  14BA  1C03               	skipc
 12243  14BB  120C               	bcf	12,4	;volatile
 12244  14BC  1803               	skipnc
 12245  14BD  160C               	bsf	12,4	;volatile
 12246                           
 12247                           ;LEDs.c: 39: break;
 12248                           
 12249                           ;LEDs.c: 38: case 6:
 12250                           
 12251                           ;LEDs.c: 37: break;
 12252  14BE  0008               	return
 12253  14BF                     i1l606:	
 12254                           ;LEDs.c: 40: case 100:
 12255                           
 12256                           
 12257                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 12258  14BF  140C               	bsf	12,0	;volatile
 12259                           
 12260                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 12261  14C0  148C               	bsf	12,1	;volatile
 12262                           
 12263                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 12264  14C1  150C               	bsf	12,2	;volatile
 12265                           
 12266                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 12267  14C2  158C               	bsf	12,3	;volatile
 12268                           
 12269                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 12270  14C3  160C               	bsf	12,4	;volatile
 12271                           
 12272                           ;LEDs.c: 47: }
 12273                           
 12274                           ;LEDs.c: 46: break;
 12275  14C4  0008               	return
 12276  14C5                     i1l3206:	
 12277                           
 12278                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12279                           ; Switch size 1, requested type "space"
 12280                           ; Number of cases is 1, Range of values is 0 to 0
 12281                           ; switch strategies available:
 12282                           ; Name         Instructions Cycles
 12283                           ; simple_byte            4     3 (average)
 12284                           ; direct_byte            8     6 (fixed)
 12285                           ; jumptable            260     6 (fixed)
 12286                           ;	Chosen strategy is simple_byte
 12287  14C5  0871               	movf	i1set_leds_top@x+1,w
 12288  14C6  3A00               	xorlw	0	; case 0
 12289  14C7  1903               	skipnz
 12290  14C8  2CCA               	goto	i1l3672
 12291  14C9  2CE1               	goto	i1l607
 12292  14CA                     i1l3672:	
 12293                           
 12294                           ; Switch size 1, requested type "space"
 12295                           ; Number of cases is 7, Range of values is 1 to 100
 12296                           ; switch strategies available:
 12297                           ; Name         Instructions Cycles
 12298                           ; simple_byte           22    12 (average)
 12299                           ; direct_byte          209     9 (fixed)
 12300                           ; jumptable            263     9 (fixed)
 12301                           ;	Chosen strategy is simple_byte
 12302  14CA  0870               	movf	i1set_leds_top@x,w
 12303  14CB  3A01               	xorlw	1	; case 1
 12304  14CC  1903               	skipnz
 12305  14CD  2CA1               	goto	i1l3194
 12306  14CE  3A03               	xorlw	3	; case 2
 12307  14CF  1903               	skipnz
 12308  14D0  2CA7               	goto	i1l3196
 12309  14D1  3A01               	xorlw	1	; case 3
 12310  14D2  1903               	skipnz
 12311  14D3  2CAD               	goto	i1l3198
 12312  14D4  3A07               	xorlw	7	; case 4
 12313  14D5  1903               	skipnz
 12314  14D6  2CB3               	goto	i1l3200
 12315  14D7  3A01               	xorlw	1	; case 5
 12316  14D8  1903               	skipnz
 12317  14D9  2CB9               	goto	i1l3202
 12318  14DA  3A03               	xorlw	3	; case 6
 12319  14DB  1903               	skipnz
 12320  14DC  2CE1               	goto	i1l607
 12321  14DD  3A62               	xorlw	98	; case 100
 12322  14DE  1903               	skipnz
 12323  14DF  2CBF               	goto	i1l606
 12324  14E0  2CE1               	goto	i1l607
 12325  14E1                     i1l607:	
 12326  14E1  0008               	return
 12327  14E2                     __end_ofi1_set_leds_top:	
 12328  007E                     btemp	set	126	;btemp
 12329  007E                     int$flags	set	126
 12330  007E                     wtemp	set	126
 12331  007E                     wtemp0	set	126
 12332  0080                     wtemp1	set	128
 12333  0082                     wtemp2	set	130
 12334  0084                     wtemp3	set	132
 12335  0086                     wtemp4	set	134
 12336  0088                     wtemp5	set	136
 12337  007F                     wtemp6	set	127
 12338  007E                     ttemp	set	126
 12339  007E                     ttemp0	set	126
 12340  0081                     ttemp1	set	129
 12341  0084                     ttemp2	set	132
 12342  0087                     ttemp3	set	135
 12343  007F                     ttemp4	set	127
 12344  007E                     ltemp	set	126
 12345  007E                     ltemp0	set	126
 12346  0082                     ltemp1	set	130
 12347  0086                     ltemp2	set	134
 12348  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1059
    BSS         233
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     79      80
    BANK1            80     35      80
    BANK2            80      0      77
    BANK3            80      0      76
    BANK4            80      0      64
    BANK5            80      0      58
    BANK6            80      0      58
    BANK7            80      0      58
    BANK8            80      0      80
    BANK9            80      0      80
    BANK10           80      0      58
    BANK11            8      0       0
    BANK12            0      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> myBuf(BANK4[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> myBuf(BANK4[64]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_set_leds_top

Critical Paths under _main in BANK0

    _main->___fttol
    _showBootSequence->_star_tactiles
    _star_tactiles->_wait_ms
    _solidring_tactiles->_wait_ms
    _set_subdivision->___fttol
    ___fttol->_map
    ___awtoft->___ftpack
    _read_top_tactile->_FLASH_WriteWord
    _read_bottom_tactile->_FLASH_WriteWord
    _wait_ms->___lmul
    _FLASH_WriteWord->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _modulation->___aldiv
    ___aldiv->___wmul
    _map->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _ReadSavedSettings->_set_leds_top

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_set_subdivision
    _set_subdivision->___fttol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   44891
                                             10 BANK1     25    25      0
                _ConfigureOscillator
                            _InitApp
                     _InitializeTaps
                  _ReadSavedSettings
                            ___aldiv
                           ___altoft
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                        _adc_convert
                                _map
                         _modulation
                _read_bottom_tactile
                   _read_top_tactile
                    _set_subdivision
                   _showBootSequence
                        _update_mode
 ---------------------------------------------------------------------------------
 (1) _update_mode                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _showBootSequence                                     0     0      0    5823
                 _getCurrentLEDState
                    _restoreLEDState
                 _solidring_tactiles
                      _star_tactiles
 ---------------------------------------------------------------------------------
 (2) _star_tactiles                                        7     7      0    2990
                                             14 BANK0      7     7      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _solidring_tactiles                                   3     3      0    2833
                                             14 BANK0      3     3      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _restoreLEDState                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurrentLEDState                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_subdivision                                      4     0      4    7414
                                              6 BANK1      4     0      4
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4    1020
                                             71 BANK0      8     4      4
                                              0 BANK1      6     6      0
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2904
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _read_top_tactile                                     3     3      0    3823
                                             23 BANK0      3     3      0
                    _FLASH_WriteWord
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _read_bottom_tactile                                  3     3      0    3113
                                             23 BANK0      3     3      0
                    _FLASH_WriteWord
                    _set_leds_bottom
                            _wait_ms
 ---------------------------------------------------------------------------------
 (3) _wait_ms                                              2     0      2    1138
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     220
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteWord                                     10     5      5    1505
                                             13 BANK0     10     5      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    10     7      3     572
                                              3 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     131
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _modulation                                          12     8      4     971
                                             21 BANK0     12     8      4
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     556
                                              6 BANK0     15     7      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _map                                                 18     3     15   11745
                                             53 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     237
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3203
                                             21 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2645
                                             37 BANK0     16    10      6
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3563
                                              8 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_convert                                          4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___altoft                                             8     4      4    2311
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2109
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReadSavedSettings                                    2     2      0    1909
                                              4 BANK0      2     2      0
                     _FLASH_ReadWord
                    _set_leds_bottom
                       _set_leds_top
 ---------------------------------------------------------------------------------
 (3) _set_leds_top                                         4     0      4    1180
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _set_leds_bottom                                      2     0      2     470
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadWord                                       3     1      2     259
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitializeTaps                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
                           _init_pwm
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
                        _init_timer0
                        _init_timer2
 ---------------------------------------------------------------------------------
 (3) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0     236
                                              4 COMMON     5     5      0
                     i1_set_leds_top
 ---------------------------------------------------------------------------------
 (6) i1_set_leds_top                                       4     0      4     236
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_adc
     _init_pwm
       _init_timer0
       _init_timer2
   _InitializeTaps
   _ReadSavedSettings
     _FLASH_ReadWord
     _set_leds_bottom
     _set_leds_top
   ___aldiv
     ___wmul (ARG)
   ___altoft
     ___ftpack
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___altoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___fttol
     ___altoft (ARG)
       ___ftpack
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     _map (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _adc_convert
   _map
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   _modulation
     ___aldiv
       ___wmul (ARG)
     ___wmul
   _read_bottom_tactile
     _FLASH_WriteWord
       _FLASH_ReadWord
       _FLASH_WriteBlock
         _FLASH_EraseBlock
     _set_leds_bottom
     _wait_ms
       ___lmul
   _read_top_tactile
     _FLASH_WriteWord
       _FLASH_ReadWord
       _FLASH_WriteBlock
         _FLASH_EraseBlock
     _set_leds_top
     _wait_ms
       ___lmul
   _set_subdivision
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       _map (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
   _showBootSequence
     _getCurrentLEDState
     _restoreLEDState
     _solidring_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
     _star_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
   _update_mode

 _isr (ROOT)
   i1_set_leds_top

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     23      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4D       9       96.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4C      11       95.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3A      15       72.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0     30F      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      3A      18       72.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      3A      20       72.5%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      50      24      100.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0      3A      26       72.5%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     30F      28        0.0%
BANK11               8      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12               0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Oct 10 23:59:42 2016

                   _update_mode 1455                    ___altoft@exp 002E                     __CFG_CP$OFF 0000  
                 ___altoft@sign 002F                    ___awdiv@sign 0026             ___wmul@multiplicand 0022  
                  ___ftadd@exp1 0034                    ___ftadd@exp2 0033                    ___ftadd@sign 0032  
                           l332 116A                             l252 093F                             l280 0B16  
                           l249 0919                             l274 0A23                             l258 0984  
                           l611 12A0                             l268 09EF                             l613 12A3  
                           l614 12A6                             l606 07D7                             l615 12A9  
                           l607 07FB                             l616 12AC                             l712 11A7  
                           l720 1385                             l296 0DFD                             l537 0865  
                           l465 0554                             l618 12AF                             l730 147B  
                           l619 12D3            __size_of_adc_convert 0019                             l732 147E  
                           l477 1014                             l733 1482                             l734 1492  
                           l841 1704                             l954 1665                             l786 1027  
                           l955 166D                             l947 1652                             l978 05F4  
                           _PR2 001B    solidring_tactiles@ring_delay 0030                             _map 1775  
                           _isr 0004                             _tap 01A0                    __CFG_BORV$LO 0000  
                           wreg 0009                    __CFG_IESO$ON 0000                ?_FLASH_WriteWord 002D  
                  __CFG_FOSC$HS 0000         __end_of_set_leds_bottom 12D4  FLASH_WriteBlock@flashWordArray 0025  
                  __CFG_LVP$OFF 0000                    ___ftdiv@cntr 004F                    ___ftdiv@sign 0054  
                          _B25k 0420                            l1038 08EB                            l3000 1504  
                          l3040 135F                            l3120 04E2                            l3026 1187  
                          l3122 050E                            l3114 045D                            l3116 048A  
                          l3142 12E9                            l3118 04B6                            l3126 053A  
                          l3062 1486                            l3310 09F3                            l3144 12F9  
                          l3064 1496                            l3312 0A01                            l2514 12B6  
                          l3162 15E3                            l3402 0DF5                            l3330 0A65  
                          l2460 07B7                            l3180 1609                            l3172 15EB  
                          l3156 15D8                            l2444 1121                            l3420 0E56  
                          l3412 0E3F                            l3332 0AB6                            l3324 0A57  
                          l3316 0A1B                            l3308 09CB                            l2462 07BF  
                          l2470 07DE                            l3174 15F7                            l2542 0828  
                          l3430 0EB7                            l3422 0E97                            l2464 07C7  
                          l3184 1612                            l2800 05D3                            l2448 112B  
                          l3416 0E48                            l3360 0B8A                            l3336 0AD4  
                          l3344 0B1A                            l3280 0946                            l2466 07CF  
                          l2458 07AF                            l2554 0850                            l3434 0EC2  
                          l3426 0EAC                            l3450 0EF2                            l3370 0C4E  
                          l3346 0B1D                            l3290 0988                            l2580 1639  
                          l3188 161A                            l2812 0606                            l2900 06BB  
                          l2740 175E                            l2644 143F                            l3444 0EEC  
                          l3452 0F07                            l3292 098B                            l2590 165F  
                          l2582 163E                            l2574 1628                            l2806 05E6  
                          l2726 1725                            l2718 1715                            l2638 1421  
                          l3470 0FC2                            l3446 0EEF                            l3438 0ECE  
                          l3390 0D3D                            l3382 0CE0                            l3366 0C1C  
                          l3286 096D                            l3278 0943                            l2816 0618  
                          l2808 05F0                            l2912 06D7                            l2744 176C  
                          l2736 1753                            l2728 1733                            l3472 0F6D  
                          l3456 0F43                            l2578 162F                            l2826 0633  
                          l2770 0584                            l2842 072C                            l2666 16B9  
                          l3474 0FC8                            l3394 0D75                            l3378 0CA8  
                          l3298 09AE                            l2588 1657                            l2836 0716  
                          l2908 06CF                            l2756 1085                            l3670 12BC  
                          l2766 057D                            l3398 0DBD                            ?_map 0055  
                          l2776 0593                            l2864 0786                            l2856 076D  
                          l2696 1021                            l2936 0889                            l2794 05C0  
                          l2962 08E1                            l2954 08C2                            l3666 0540  
                          l3668 07E4                            l2796 05CA                            l2788 05AD  
                          l2884 0678                            l2964 08EF                            l2956 08D3  
                          l2798 05CF                            l2878 0662                            l2896 06B3  
                          l2968 08FD                            ?_isr 0070                            u2005 1133  
                          u2115 164D                            u2035 0814                            u2135 165A  
                          u3125 12EE                            u3205 1602                            u2245 16C6  
                          u2175 1674                            u2095 1634                            u3215 160A  
                          u2335 1728                            u2505 05AE                            u2355 1734  
                          u2275 1028                            u3075 1468                            u3420 0961  
                          u2365 1748                            u2285 102D                            u3430 0962  
                          u3175 15EE                            u2535 05C1                            u2375 1754  
                          u3415 0959                            u3440 096B                            u2705 0787  
                          u3505 099E                            u3195 15F8                            u3460 0982  
                          u2565 05D4                            u3605 0A75                            u3525 09DB  
                          u2815 06D8                            u3615 0A8A                            u3535 09D5  
                          u2665 073E                            u2825 06DE                            u2745 0684  
                          u3705 0CC2                            u3625 0A9E                            u3385 0935  
                          u2595 05E7                            u2675 074E                            u2755 0694  
                          u3715 0CDE                            u3635 0A6F                            u2685 076E  
                          u2925 08E2                            u3805 0E51                            u3725 0D57  
                          u3645 0ABA                            u3565 0A0B                            u2695 077D  
                          u2775 06BC                            u3735 0D73                            u2785 06C2  
                          u2865 0891                            u3833 0FB3                            u3825 0F9B  
                          u3745 0DD7                            u3665 0B6F                            u3585 0A32  
                          u2955 10A8                            u1995 112C                            u3763 0E25  
                          u3755 0DF3                            u3675 0B88                            u3595 0A41  
                          u2980 1502                            u2965 10AE                            u3685 0C33  
                          u2895 08C3                            u3695 0C4C                            i1l72 0124  
                          i1l57 006E                   _star_tactiles 1684                    __CFG_WRT$OFF 0000  
                 __CFG_FCMEN$ON 0000                            _iCnt 00CB                            _mod1 0520  
                          _mod2 02A0                            _mod3 0320                            _mod4 03A0  
                          _mod5 2378                            _main 090D                            _tap1 013C  
                          _tap2 0140                            _tap3 01D0                            _tap4 01D4  
                          _tap5 01D8                            _tap6 01DC                            _tap7 01E0  
                          _tap8 01E4                            _tap9 01E8                    ___ftpack@arg 0020  
                  ___ftpack@exp 0023                            fsr0h 0005                            fsr1h 0007  
                          fsr0l 0004                            indf0 0000                            indf1 0001  
                          fsr1l 0006                            map@x 0055                            btemp 007E  
             ?_FLASH_WriteBlock 0023                   __CFG_BOREN$ON 0000                            ltemp 007E  
                          start 0129                            ttemp 007E                            wtemp 007E  
            ??_FLASH_WriteBlock 0026                 ?i1_set_leds_top 0070                   __CFG_MCLRE$ON 0000  
                  ___ftmul@cntr 0043                    ___ftmul@sign 0044                 __end_of_InitApp 1118  
             ??_restoreLEDState 0020                    ___fttol@exp1 00A5                           ??_map 0064  
                  ___fttol@lval 00A1                           ??_isr 0074                 __end_of___aldiv 1775  
                         ?_main 0070                 __end_of___awdiv 161F                 __end_of___ftadd 064B  
                         _CCPR1 0291                           _CCPR2 0298                           _CCPR3 0311  
                         _CCPR4 0318                           _CCPR5 031C                           _CCPR9 061A  
                 __CFG_WDTE$OFF 0000                 __end_of___ftdiv 07A8                 __end_of___ftneg 1F95  
               __end_of___ftmul 06FF                 ___awdiv@divisor 0020                 __end_of___fttol 090D  
                         i1l606 14BF                           i1l607 14E1                 ___awdiv@counter 0025  
                         _iB25k 04A0             _ConfigureOscillator 07FC               main@tapCntDivisor 00BB  
                  ?_init_timer0 0070                    ?_init_timer2 0070             ___lmul@multiplicand 0024  
                 ___awtoft@sign 002D                           _delay 23F2                           _tap10 01CC  
                         _myBuf 0220                   ___ftpack@sign 0024                           _timer 00C7  
                ?_star_tactiles 0070                           main@i 00B9                           ltemp0 007E  
                         ltemp1 0082                           ltemp2 0086                           ltemp3 0080  
               __end_of_wait_ms 1179                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003     __end_of_read_bottom_tactile 11B1                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
          ?_ConfigureOscillator 0070              _getCurrentLEDState 1FC6                 __initialization 012B  
                  __end_of_main 1000         __size_of_InitializeTaps 0026             ?_getCurrentLEDState 0070  
                __CFG_LPBOR$OFF 0000                 _set_subdivision 045C                          ??_main 00AA  
                 ___fttol@sign1 00A0         __size_of_FLASH_ReadWord 0020      __end_of_solidring_tactiles 13CF  
              ?_set_leds_bottom 0020       FLASH_WriteBlock@writeAddr 0023                __end_of___altoft 1311  
                        _ADRESH 009C                          _ADRESL 009B                ___awdiv@dividend 0022  
           _baseline_delay_time 00DE            ??_getCurrentLEDState 0020                __end_of___awtoft 109C  
              __end_of___ftpack 1684                          i1l3200 14B3                          i1l3202 14B9  
                        i1l3206 14C5                          i1l3230 00A5                          i1l3222 0088  
                        i1l3240 00E3                          i1l3224 0091                          i1l3226 00A0  
                        i1l3260 0122                          i1l3244 00F3                          i1l3236 00CB  
                        i1l3238 00D4                          i1l3256 011D                          i1l3194 14A1  
                        i1l3196 14A7                          i1l3198 14AD                          i1l3672 14CA  
                        u325_23 0081                          u334_25 0104                          u335_25 0118  
                        _PMADRH 0192                          _PMADRL 0191                          u329_23 00B8  
                        _PMDATH 0194                          _PMDATL 0193                          _PMCON2 0196  
     __size_of_FLASH_EraseBlock 0020                  _debounce_count 0150                  _debounce_mode1 0152  
                _debounce_mode2 0154                       ??_InitApp 0020           ??_ConfigureOscillator 0020  
      __end_of_read_top_tactile 138F                  __CFG_PWRTE$OFF 0000                          ___lmul 1118  
                     ??___aldiv 002E                          ___wmul 101E   FLASH_WriteWord@blockStartAddr 0034  
                     ??___awdiv 0024                       ??___ftadd 002E                  __CFG_STVREN$ON 0000  
                     ??___ftdiv 004B                       ??___ftneg 0023                       ??___ftmul 003B  
                     ??___fttol 006B             FLASH_WriteWord@word 0030                __end_of_init_adc 1F9F  
              __end_of_init_pwm 1410       __size_of_showBootSequence 0026                ___awdiv@quotient 0027  
                        _preset 015C                   _incoming_data 0162                    __pdataBANK10 0520  
         ___ftmul@f3_as_product 0040                    __pdataBIGRAM 2378         FLASH_ReadWord@flashAddr 0020  
                  __pdataCOMMON 007D                       ??_wait_ms 002E                 ??_star_tactiles 002E  
       __end_of__initialization 01E0                      ___altoft@c 0028                      ___ftadd@f1 0028  
                    ___ftadd@f2 002B                      ___ftdiv@f1 0048                      ___ftdiv@f2 0045  
                    ___ftdiv@f3 0050                  _top_push_state 007D                      ___ftneg@f1 0020  
                    ___awtoft@c 0028         __end_of_set_subdivision 0555                      ___ftmul@f1 0035  
                    ___ftmul@f2 0038                      ___fttol@f1 0067                    ?_update_mode 0070  
                __pcstackCOMMON 0070                    __pidataBANK0 0002                    __pidataBANK1 1FD8  
                  __pidataBANK2 1FB7                    __pidataBANK5 125F                    __pidataBANK6 1225  
                  __pidataBANK7 11EB                    __pidataBANK8 157D                    __pidataBANK9 152D  
              FLASH_WriteWord@i 0036                  _OPTION_REGbits 0095     FLASH_WriteBlock@GIEBitValue 002B  
          __size_of_init_timer0 0007            __size_of_init_timer2 0009                      __pbssBANK1 00C3  
                    __pbssBANK2 0120                      __pbssBANK3 01A0                      __pbssBANK4 0220  
              ??i1_set_leds_top 0074                 _restoreLEDState 1FEA                 __CFG_VCAPEN$OFF 0000  
                    _delay_time 00E2                      _delayfound 0158                      __pmaintext 090D  
                _InitializeTaps 109C                         ?___lmul 0020                         ?___wmul 0020  
                    __pintentry 0004                      _blink_rate 006F                   ??_adc_convert 0022  
                     ?___altoft 0028                  ___lmul@product 0028                       ?___awtoft 0028  
                     ?___ftpack 0020       __size_of_FLASH_WriteBlock 006B                  _FLASH_ReadWord 103A  
                   modulation@x 0035                     modulation@y 0037                 _debounce_bypass 014E  
                 _suspend_blink 00EF                _FLASH_EraseBlock 105A        __size_of_FLASH_WriteWord 0045  
                     ?_init_adc 0070                       ?_init_pwm 0070                         _InitApp 10E8  
        __end_of_InitializeTaps 10C2                   ?_set_leds_top 0020                      _knob1_prev 00E6  
                    _knob2_prev 00E8                      _knob3_prev 0164                      _knob4_prev 0166  
                    _knob5_prev 0168                ?_set_subdivision 00A6                         ___aldiv 16F3  
                       ___awdiv 15CD                 __size_of___lmul 0030                         ___ftadd 0555  
                       ___ftdiv 06FF                         ___ftneg 1F8C                      _knob_1_pos 00CD  
                    _knob_2_pos 00CF                 __size_of___wmul 001C                         ___ftmul 064B  
                    _knob_3_pos 00D1                         ___fttol 086E                      _knob_4_pos 00D3  
                    _knob_5_pos 00D5                      ??___altoft 002C                _showBootSequence 10C2  
        __end_of_FLASH_ReadWord 105A                      ??___awtoft 002B                      ??___ftpack 0025  
            InitializeTaps@itap 0021                         __ptext1 1455                         __ptext2 10C2  
                       __ptext3 1684                         __ptext4 138F                         __ptext5 1FEA  
                       __ptext6 1FC6                         __ptext7 045C                         __ptext8 086E  
                       __ptext9 107A                       _T2CONbits 001C                    __size_of_map 008B  
                  __size_of_isr 0125             __end_of_adc_convert 101E                ___aldiv@dividend 002A  
                       _wait_ms 1148         __end_of_restoreLEDState 2000                         clrloop0 1FAC  
          end_of_initialization 01E0                      _modulation 1311                         init_ram 1F9F  
                    ??_init_adc 0020                         initloop 1FA0                      ??_init_pwm 0020  
            _solidring_tactiles 138F                  ??_set_leds_top 0024               ?_read_top_tactile 0070  
               ?_InitializeTaps 0070          i1set_leds_top@ledState 0072              ??_read_top_tactile 0037  
              ___aldiv@quotient 0031    __size_of_read_bottom_tactile 0038             ?_solidring_tactiles 0070  
                   wait_ms@time 002C       FLASH_ReadWord@GIEBitValue 0022            __size_of_update_mode 0045  
               ?_FLASH_ReadWord 0020                       _PORTCbits 000E                       _PORTDbits 000F  
                     _PORTEbits 0010            star_tactiles@reverse 0030                       _TRISBbits 008D  
                     _TRISCbits 008E                       _TRISDbits 008F                       _TRISEbits 0090  
                     _TRISFbits 030C                       _TRISGbits 030D                       _SPI_Value 014C  
          ??_solidring_tactiles 002E     __end_of_ConfigureOscillator 0800     __size_of_getCurrentLEDState 0012  
                    map@out_max 0061                      map@out_min 005E                     _CCP1CONbits 0293  
                   ___ftdiv@exp 0053        __size_of_set_leds_bottom 003B                     _CCP2CONbits 029A  
                   _CCP3CONbits 0313                     _CCP4CONbits 031A                     _CCP5CONbits 031E  
             FLASH_WriteBlock@i 002C                     _CCP6CONbits 0613                     _CCP7CONbits 0616  
                   ___ftmul@exp 003F              adc_convert@channel 0023                     _CCP8CONbits 0619  
             ??_FLASH_WriteWord 0032                     _CCP9CONbits 061C            set_leds_top@ledState 0022  
                 __pidataBANK10 11B1                  __end_of___lmul 1148                   __pidataBIGRAM 01E4  
                __end_of___wmul 103A                     _adc_convert 1005                   __pidataCOMMON 0003  
              _FLASH_WriteBlock 0803             start_initialization 012B                     __end_of_map 1800  
                   __end_of_isr 0129                ?_restoreLEDState 0070           __end_of_star_tactiles 16F3  
                   ?_modulation 0035                        ??___lmul 0028                        ??___wmul 0024  
                   __pdataBANK0 006F                     __pdataBANK1 00DE                     __pdataBANK2 015E  
                   __pdataBANK5 02A0                     __pdataBANK6 0320                     __pdataBANK7 03A0  
                   __pdataBANK8 0420                     __pdataBANK9 04A0     FLASH_EraseBlock@GIEBitValue 0022  
                 _tap_iteration 00EC        __end_of_FLASH_EraseBlock 107A               __size_of___altoft 003D  
             __size_of___awtoft 0022               __size_of___ftpack 0065                   ??_init_timer0 0020  
                 ??_init_timer2 0020                     __pbssCOMMON 0079            __end_of_set_leds_top 07FC  
                     ___latbits 0003                    _bypass_state 00D9                   __pcstackBANK0 0020  
                 __pcstackBANK1 00A0                   _delay_counter 0156        __end_of_showBootSequence 10E8  
                      ?_InitApp 0070               __size_of_init_adc 000A               __size_of_init_pwm 0041  
                      ?___aldiv 0026               ??_set_leds_bottom 0022                        ?___awdiv 0020  
                      ?___ftadd 0028                        ?___ftdiv 0045                        ?___ftneg 0020  
                      ?___ftmul 0035                        ?___fttol 0067                     _blink_delay 015E  
           __size_of_modulation 003E                     _blink_state 016C                        _CCPTMRS0 029D  
                      _CCPTMRS1 029E                        _CCPTMRS2 029F                        ?_wait_ms 002C  
           _read_bottom_tactile 1179        FLASH_WriteWord@flashAddr 002D  FLASH_WriteBlock@blockStartAddr 0029  
           __end_of_init_timer0 1F83             __end_of_init_timer2 1F8C                       _mod_value 015A  
                     _mod_timer 0138                ??_InitializeTaps 0020                 ___aldiv@divisor 0026  
               ___aldiv@counter 002F                  ___wmul@product 0024                        _LATBbits 010D  
                      _LATDbits 010F                        _LATFbits 038C                        _LATGbits 038D  
                _mod_delay_time 016A                       clear_ram0 1FAB                       _tap_timer 0079  
                     _tap_total 0144                   set_leds_top@x 0020       FLASH_EraseBlock@startAddr 0020  
              ??_FLASH_ReadWord 0022            ?_read_bottom_tactile 0070         __size_ofi1_set_leds_top 0048  
                     map@in_max 005B                       map@in_min 0058                       _sub_timer 00C3  
                    _ADCON0bits 009D                      _ADCON1bits 009E                       main@i_362 00BF  
                     main@i_363 00C1        __size_of_set_subdivision 00F9               ___wmul@multiplier 0020  
              set_subdivision@x 00A6                set_subdivision@y 00A8       __size_of_read_top_tactile 0040  
             ___lmul@multiplier 0020                 _FLASH_WriteWord 1410               _ReadSavedSettings 14E2  
      __end_of_FLASH_WriteBlock 086E              ?_ReadSavedSettings 0070                __size_of_InitApp 0030  
                   _mode1_state 00DA                   ??_update_mode 0020                     _mode2_state 00DB  
         ??_read_bottom_tactile 0037             ??_ReadSavedSettings 0024                      _APFCONbits 011D  
             star_tactiles@iLed 0031                __size_of___aldiv 0082                __size_of___awdiv 0052  
              __size_of___ftadd 00F6                __size_of___ftdiv 00A9                    ?_adc_convert 0020  
              __size_of___ftneg 0009                        ___altoft 12D4                __size_of___ftmul 00B4  
              __size_of___fttol 009F                        ___awtoft 107A           __size_of_set_leds_top 0054  
                      ___ftpack 161F                        _map$1791 0064          _preset_programmning_on 00DD  
        star_tactiles@iLed_1381 0033                      _ANSELEbits 0190                      _ANSELFbits 040C  
              set_leds_bottom@x 0020                     _init_timer0 1F7C                     _init_timer2 1F83  
            _delay_time_changed 0160      __end_of_getCurrentLEDState 1FD8                        __ptext10 134F  
                      __ptext11 1179                        __ptext20 1775                        __ptext12 1148  
                      __ptext21 1F8C                        __ptext13 1118                        __ptext30 07A8  
                      __ptext22 064B                        __ptext14 1410                        __ptext31 1299  
                      __ptext23 06FF                        __ptext15 0803                        __ptext32 103A  
                      __ptext24 0555                        __ptext16 105A                        __ptext41 149A  
                      __ptext33 109C                        __ptext25 1005                        __ptext17 1311  
                      __ptext34 10E8                        __ptext26 15CD                        __ptext18 101E  
                      __ptext35 13CF                        __ptext27 12D4                        __ptext19 16F3  
                      __ptext36 1F83                        __ptext28 161F                        __ptext37 1F7C  
                      __ptext29 14E2                        __ptext38 1F95                        __ptext39 07FC  
     __end_of_ReadSavedSettings 152D                __size_of_wait_ms 0031     __size_of_solidring_tactiles 0040  
                      _ledState 0134           FLASH_WriteWord@ramBuf 002F           FLASH_WriteWord@offset 0033  
                  ??_modulation 0039                     _mod_counter 00D7                        _init_adc 1F95  
                 __size_of_main 06F3                        _init_pwm 13CF    __size_of_ConfigureOscillator 0004  
                  _set_leds_top 07A8                        _num_taps 00EA                        int$flags 007E  
               i1set_leds_top@x 0070             __end_of_update_mode 149A               ?_FLASH_EraseBlock 0020  
            __end_of_modulation 134F              ??_FLASH_EraseBlock 0022                      _INTCONbits 000B  
       __end_of_FLASH_WriteWord 1455                     _tap_history 0120               ??_set_subdivision 006F  
                      intlevel1 0000                 _set_leds_bottom 1299                      _PMCON1bits 0195  
             ?_showBootSequence 0070               __CFG_CLKOUTEN$OFF 0000        __size_of_restoreLEDState 0016  
            ??_showBootSequence 0035                      _OSCCONbits 0099                    _preset_blink 00DC  
                i1_set_leds_top 149A                    wait_ms@timel 0148          __size_of_star_tactiles 006F  
              _read_top_tactile 134F                    ___aldiv@sign 0030      __size_of_ReadSavedSettings 004B  
        main@adjusted_pot_value 00BD                    _CCP10CONbits 061F               _bottom_push_state 00EE  
        __end_ofi1_set_leds_top 14E2  
