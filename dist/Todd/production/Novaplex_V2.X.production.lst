

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Oct 17 22:45:42 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	idataBANK2,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	idataBANK5,global,class=CODE,delta=2
    10                           	psect	idataBANK6,global,class=CODE,delta=2
    11                           	psect	idataBANK7,global,class=CODE,delta=2
    12                           	psect	idataBANK8,global,class=CODE,delta=2
    13                           	psect	idataBANK9,global,class=CODE,delta=2
    14                           	psect	idataBIGRAM,global,class=CODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	dataBIGRAM,global,delta=1
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    25                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    27                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    28                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    29                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1
    30                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1
    31                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	inittext,global,class=CODE,delta=2
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	intentry,global,class=CODE,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	dabs	1,0x920,80
    83                           	dabs	1,0x8A0,80
    84                           	dabs	1,0x820,80
    85                           	dabs	1,0x7A0,80
    86                           	dabs	1,0x720,80
    87                           	dabs	1,0x6A0,80
    88                           	dabs	1,0x652,30
    89                           	dabs	1,0x620,50
    90                           	dabs	1,0x5A8,72
    91                           	dabs	1,0x23F2,0,_delay
    92                           	dabs	1,0x2378,0,_mod5
    93                           	dabs	1,0x7E,2
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008F                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0110                     	;# 
   148  0116                     	;# 
   149  0117                     	;# 
   150  011D                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018F                     	;# 
   154  0190                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0194                     	;# 
   161  0195                     	;# 
   162  0196                     	;# 
   163  0197                     	;# 
   164  0199                     	;# 
   165  0199                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019A                     	;# 
   169  019A                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019C                     	;# 
   176  019C                     	;# 
   177  019C                     	;# 
   178  019D                     	;# 
   179  019D                     	;# 
   180  019D                     	;# 
   181  019E                     	;# 
   182  019E                     	;# 
   183  019E                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  020D                     	;# 
   188  020F                     	;# 
   189  0210                     	;# 
   190  0211                     	;# 
   191  0211                     	;# 
   192  0212                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0216                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0217                     	;# 
   205  0219                     	;# 
   206  021A                     	;# 
   207  021B                     	;# 
   208  021C                     	;# 
   209  021D                     	;# 
   210  021E                     	;# 
   211  021F                     	;# 
   212  028C                     	;# 
   213  028D                     	;# 
   214  0291                     	;# 
   215  0291                     	;# 
   216  0292                     	;# 
   217  0293                     	;# 
   218  0298                     	;# 
   219  0298                     	;# 
   220  0299                     	;# 
   221  029A                     	;# 
   222  029D                     	;# 
   223  029E                     	;# 
   224  029F                     	;# 
   225  030C                     	;# 
   226  030D                     	;# 
   227  0311                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0318                     	;# 
   232  0318                     	;# 
   233  0319                     	;# 
   234  031A                     	;# 
   235  031C                     	;# 
   236  031C                     	;# 
   237  031D                     	;# 
   238  031E                     	;# 
   239  038C                     	;# 
   240  038D                     	;# 
   241  0394                     	;# 
   242  0395                     	;# 
   243  0396                     	;# 
   244  040C                     	;# 
   245  040D                     	;# 
   246  0411                     	;# 
   247  0411                     	;# 
   248  0412                     	;# 
   249  0413                     	;# 
   250  0414                     	;# 
   251  0415                     	;# 
   252  0416                     	;# 
   253  0417                     	;# 
   254  0418                     	;# 
   255  0418                     	;# 
   256  0419                     	;# 
   257  041A                     	;# 
   258  041B                     	;# 
   259  041C                     	;# 
   260  041D                     	;# 
   261  041E                     	;# 
   262  048D                     	;# 
   263  0491                     	;# 
   264  0491                     	;# 
   265  0492                     	;# 
   266  0492                     	;# 
   267  0493                     	;# 
   268  0493                     	;# 
   269  0493                     	;# 
   270  0494                     	;# 
   271  0494                     	;# 
   272  0495                     	;# 
   273  0495                     	;# 
   274  0496                     	;# 
   275  0496                     	;# 
   276  0497                     	;# 
   277  0497                     	;# 
   278  0595                     	;# 
   279  0596                     	;# 
   280  0597                     	;# 
   281  059C                     	;# 
   282  059D                     	;# 
   283  059E                     	;# 
   284  0611                     	;# 
   285  0611                     	;# 
   286  0612                     	;# 
   287  0613                     	;# 
   288  0614                     	;# 
   289  0614                     	;# 
   290  0615                     	;# 
   291  0616                     	;# 
   292  0617                     	;# 
   293  0617                     	;# 
   294  0618                     	;# 
   295  0619                     	;# 
   296  061A                     	;# 
   297  061A                     	;# 
   298  061B                     	;# 
   299  061C                     	;# 
   300  061D                     	;# 
   301  061D                     	;# 
   302  061E                     	;# 
   303  061F                     	;# 
   304  0FE4                     	;# 
   305  0FE5                     	;# 
   306  0FE6                     	;# 
   307  0FE7                     	;# 
   308  0FE8                     	;# 
   309  0FE9                     	;# 
   310  0FEA                     	;# 
   311  0FEB                     	;# 
   312  0FED                     	;# 
   313  0FEE                     	;# 
   314  0FEF                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0110                     	;# 
   369  0116                     	;# 
   370  0117                     	;# 
   371  011D                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  018F                     	;# 
   375  0190                     	;# 
   376  0191                     	;# 
   377  0191                     	;# 
   378  0192                     	;# 
   379  0193                     	;# 
   380  0193                     	;# 
   381  0194                     	;# 
   382  0195                     	;# 
   383  0196                     	;# 
   384  0197                     	;# 
   385  0199                     	;# 
   386  0199                     	;# 
   387  0199                     	;# 
   388  019A                     	;# 
   389  019A                     	;# 
   390  019A                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019B                     	;# 
   395  019B                     	;# 
   396  019C                     	;# 
   397  019C                     	;# 
   398  019C                     	;# 
   399  019D                     	;# 
   400  019D                     	;# 
   401  019D                     	;# 
   402  019E                     	;# 
   403  019E                     	;# 
   404  019E                     	;# 
   405  019F                     	;# 
   406  019F                     	;# 
   407  019F                     	;# 
   408  020D                     	;# 
   409  020F                     	;# 
   410  0210                     	;# 
   411  0211                     	;# 
   412  0211                     	;# 
   413  0212                     	;# 
   414  0212                     	;# 
   415  0213                     	;# 
   416  0213                     	;# 
   417  0214                     	;# 
   418  0214                     	;# 
   419  0215                     	;# 
   420  0215                     	;# 
   421  0215                     	;# 
   422  0216                     	;# 
   423  0216                     	;# 
   424  0217                     	;# 
   425  0217                     	;# 
   426  0219                     	;# 
   427  021A                     	;# 
   428  021B                     	;# 
   429  021C                     	;# 
   430  021D                     	;# 
   431  021E                     	;# 
   432  021F                     	;# 
   433  028C                     	;# 
   434  028D                     	;# 
   435  0291                     	;# 
   436  0291                     	;# 
   437  0292                     	;# 
   438  0293                     	;# 
   439  0298                     	;# 
   440  0298                     	;# 
   441  0299                     	;# 
   442  029A                     	;# 
   443  029D                     	;# 
   444  029E                     	;# 
   445  029F                     	;# 
   446  030C                     	;# 
   447  030D                     	;# 
   448  0311                     	;# 
   449  0311                     	;# 
   450  0312                     	;# 
   451  0313                     	;# 
   452  0318                     	;# 
   453  0318                     	;# 
   454  0319                     	;# 
   455  031A                     	;# 
   456  031C                     	;# 
   457  031C                     	;# 
   458  031D                     	;# 
   459  031E                     	;# 
   460  038C                     	;# 
   461  038D                     	;# 
   462  0394                     	;# 
   463  0395                     	;# 
   464  0396                     	;# 
   465  040C                     	;# 
   466  040D                     	;# 
   467  0411                     	;# 
   468  0411                     	;# 
   469  0412                     	;# 
   470  0413                     	;# 
   471  0414                     	;# 
   472  0415                     	;# 
   473  0416                     	;# 
   474  0417                     	;# 
   475  0418                     	;# 
   476  0418                     	;# 
   477  0419                     	;# 
   478  041A                     	;# 
   479  041B                     	;# 
   480  041C                     	;# 
   481  041D                     	;# 
   482  041E                     	;# 
   483  048D                     	;# 
   484  0491                     	;# 
   485  0491                     	;# 
   486  0492                     	;# 
   487  0492                     	;# 
   488  0493                     	;# 
   489  0493                     	;# 
   490  0493                     	;# 
   491  0494                     	;# 
   492  0494                     	;# 
   493  0495                     	;# 
   494  0495                     	;# 
   495  0496                     	;# 
   496  0496                     	;# 
   497  0497                     	;# 
   498  0497                     	;# 
   499  0595                     	;# 
   500  0596                     	;# 
   501  0597                     	;# 
   502  059C                     	;# 
   503  059D                     	;# 
   504  059E                     	;# 
   505  0611                     	;# 
   506  0611                     	;# 
   507  0612                     	;# 
   508  0613                     	;# 
   509  0614                     	;# 
   510  0614                     	;# 
   511  0615                     	;# 
   512  0616                     	;# 
   513  0617                     	;# 
   514  0617                     	;# 
   515  0618                     	;# 
   516  0619                     	;# 
   517  061A                     	;# 
   518  061A                     	;# 
   519  061B                     	;# 
   520  061C                     	;# 
   521  061D                     	;# 
   522  061D                     	;# 
   523  061E                     	;# 
   524  061F                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  000F                     	;# 
   552  0010                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0013                     	;# 
   556  0014                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  008C                     	;# 
   567  008D                     	;# 
   568  008E                     	;# 
   569  008F                     	;# 
   570  0090                     	;# 
   571  0091                     	;# 
   572  0092                     	;# 
   573  0093                     	;# 
   574  0094                     	;# 
   575  0095                     	;# 
   576  0096                     	;# 
   577  0097                     	;# 
   578  0099                     	;# 
   579  009A                     	;# 
   580  009B                     	;# 
   581  009B                     	;# 
   582  009C                     	;# 
   583  009D                     	;# 
   584  009E                     	;# 
   585  010C                     	;# 
   586  010D                     	;# 
   587  010E                     	;# 
   588  010F                     	;# 
   589  0110                     	;# 
   590  0116                     	;# 
   591  0117                     	;# 
   592  011D                     	;# 
   593  018C                     	;# 
   594  018D                     	;# 
   595  018F                     	;# 
   596  0190                     	;# 
   597  0191                     	;# 
   598  0191                     	;# 
   599  0192                     	;# 
   600  0193                     	;# 
   601  0193                     	;# 
   602  0194                     	;# 
   603  0195                     	;# 
   604  0196                     	;# 
   605  0197                     	;# 
   606  0199                     	;# 
   607  0199                     	;# 
   608  0199                     	;# 
   609  019A                     	;# 
   610  019A                     	;# 
   611  019A                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019C                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019D                     	;# 
   621  019D                     	;# 
   622  019D                     	;# 
   623  019E                     	;# 
   624  019E                     	;# 
   625  019E                     	;# 
   626  019F                     	;# 
   627  019F                     	;# 
   628  019F                     	;# 
   629  020D                     	;# 
   630  020F                     	;# 
   631  0210                     	;# 
   632  0211                     	;# 
   633  0211                     	;# 
   634  0212                     	;# 
   635  0212                     	;# 
   636  0213                     	;# 
   637  0213                     	;# 
   638  0214                     	;# 
   639  0214                     	;# 
   640  0215                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0216                     	;# 
   644  0216                     	;# 
   645  0217                     	;# 
   646  0217                     	;# 
   647  0219                     	;# 
   648  021A                     	;# 
   649  021B                     	;# 
   650  021C                     	;# 
   651  021D                     	;# 
   652  021E                     	;# 
   653  021F                     	;# 
   654  028C                     	;# 
   655  028D                     	;# 
   656  0291                     	;# 
   657  0291                     	;# 
   658  0292                     	;# 
   659  0293                     	;# 
   660  0298                     	;# 
   661  0298                     	;# 
   662  0299                     	;# 
   663  029A                     	;# 
   664  029D                     	;# 
   665  029E                     	;# 
   666  029F                     	;# 
   667  030C                     	;# 
   668  030D                     	;# 
   669  0311                     	;# 
   670  0311                     	;# 
   671  0312                     	;# 
   672  0313                     	;# 
   673  0318                     	;# 
   674  0318                     	;# 
   675  0319                     	;# 
   676  031A                     	;# 
   677  031C                     	;# 
   678  031C                     	;# 
   679  031D                     	;# 
   680  031E                     	;# 
   681  038C                     	;# 
   682  038D                     	;# 
   683  0394                     	;# 
   684  0395                     	;# 
   685  0396                     	;# 
   686  040C                     	;# 
   687  040D                     	;# 
   688  0411                     	;# 
   689  0411                     	;# 
   690  0412                     	;# 
   691  0413                     	;# 
   692  0414                     	;# 
   693  0415                     	;# 
   694  0416                     	;# 
   695  0417                     	;# 
   696  0418                     	;# 
   697  0418                     	;# 
   698  0419                     	;# 
   699  041A                     	;# 
   700  041B                     	;# 
   701  041C                     	;# 
   702  041D                     	;# 
   703  041E                     	;# 
   704  048D                     	;# 
   705  0491                     	;# 
   706  0491                     	;# 
   707  0492                     	;# 
   708  0492                     	;# 
   709  0493                     	;# 
   710  0493                     	;# 
   711  0493                     	;# 
   712  0494                     	;# 
   713  0494                     	;# 
   714  0495                     	;# 
   715  0495                     	;# 
   716  0496                     	;# 
   717  0496                     	;# 
   718  0497                     	;# 
   719  0497                     	;# 
   720  0595                     	;# 
   721  0596                     	;# 
   722  0597                     	;# 
   723  059C                     	;# 
   724  059D                     	;# 
   725  059E                     	;# 
   726  0611                     	;# 
   727  0611                     	;# 
   728  0612                     	;# 
   729  0613                     	;# 
   730  0614                     	;# 
   731  0614                     	;# 
   732  0615                     	;# 
   733  0616                     	;# 
   734  0617                     	;# 
   735  0617                     	;# 
   736  0618                     	;# 
   737  0619                     	;# 
   738  061A                     	;# 
   739  061A                     	;# 
   740  061B                     	;# 
   741  061C                     	;# 
   742  061D                     	;# 
   743  061D                     	;# 
   744  061E                     	;# 
   745  061F                     	;# 
   746  0FE4                     	;# 
   747  0FE5                     	;# 
   748  0FE6                     	;# 
   749  0FE7                     	;# 
   750  0FE8                     	;# 
   751  0FE9                     	;# 
   752  0FEA                     	;# 
   753  0FEB                     	;# 
   754  0FED                     	;# 
   755  0FEE                     	;# 
   756  0FEF                     	;# 
   757  0000                     	;# 
   758  0001                     	;# 
   759  0002                     	;# 
   760  0003                     	;# 
   761  0004                     	;# 
   762  0005                     	;# 
   763  0006                     	;# 
   764  0007                     	;# 
   765  0008                     	;# 
   766  0009                     	;# 
   767  000A                     	;# 
   768  000B                     	;# 
   769  000C                     	;# 
   770  000D                     	;# 
   771  000E                     	;# 
   772  000F                     	;# 
   773  0010                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0013                     	;# 
   777  0014                     	;# 
   778  0015                     	;# 
   779  0016                     	;# 
   780  0016                     	;# 
   781  0017                     	;# 
   782  0018                     	;# 
   783  0019                     	;# 
   784  001A                     	;# 
   785  001B                     	;# 
   786  001C                     	;# 
   787  008C                     	;# 
   788  008D                     	;# 
   789  008E                     	;# 
   790  008F                     	;# 
   791  0090                     	;# 
   792  0091                     	;# 
   793  0092                     	;# 
   794  0093                     	;# 
   795  0094                     	;# 
   796  0095                     	;# 
   797  0096                     	;# 
   798  0097                     	;# 
   799  0099                     	;# 
   800  009A                     	;# 
   801  009B                     	;# 
   802  009B                     	;# 
   803  009C                     	;# 
   804  009D                     	;# 
   805  009E                     	;# 
   806  010C                     	;# 
   807  010D                     	;# 
   808  010E                     	;# 
   809  010F                     	;# 
   810  0110                     	;# 
   811  0116                     	;# 
   812  0117                     	;# 
   813  011D                     	;# 
   814  018C                     	;# 
   815  018D                     	;# 
   816  018F                     	;# 
   817  0190                     	;# 
   818  0191                     	;# 
   819  0191                     	;# 
   820  0192                     	;# 
   821  0193                     	;# 
   822  0193                     	;# 
   823  0194                     	;# 
   824  0195                     	;# 
   825  0196                     	;# 
   826  0197                     	;# 
   827  0199                     	;# 
   828  0199                     	;# 
   829  0199                     	;# 
   830  019A                     	;# 
   831  019A                     	;# 
   832  019A                     	;# 
   833  019B                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019C                     	;# 
   839  019C                     	;# 
   840  019C                     	;# 
   841  019D                     	;# 
   842  019D                     	;# 
   843  019D                     	;# 
   844  019E                     	;# 
   845  019E                     	;# 
   846  019E                     	;# 
   847  019F                     	;# 
   848  019F                     	;# 
   849  019F                     	;# 
   850  020D                     	;# 
   851  020F                     	;# 
   852  0210                     	;# 
   853  0211                     	;# 
   854  0211                     	;# 
   855  0212                     	;# 
   856  0212                     	;# 
   857  0213                     	;# 
   858  0213                     	;# 
   859  0214                     	;# 
   860  0214                     	;# 
   861  0215                     	;# 
   862  0215                     	;# 
   863  0215                     	;# 
   864  0216                     	;# 
   865  0216                     	;# 
   866  0217                     	;# 
   867  0217                     	;# 
   868  0219                     	;# 
   869  021A                     	;# 
   870  021B                     	;# 
   871  021C                     	;# 
   872  021D                     	;# 
   873  021E                     	;# 
   874  021F                     	;# 
   875  028C                     	;# 
   876  028D                     	;# 
   877  0291                     	;# 
   878  0291                     	;# 
   879  0292                     	;# 
   880  0293                     	;# 
   881  0298                     	;# 
   882  0298                     	;# 
   883  0299                     	;# 
   884  029A                     	;# 
   885  029D                     	;# 
   886  029E                     	;# 
   887  029F                     	;# 
   888  030C                     	;# 
   889  030D                     	;# 
   890  0311                     	;# 
   891  0311                     	;# 
   892  0312                     	;# 
   893  0313                     	;# 
   894  0318                     	;# 
   895  0318                     	;# 
   896  0319                     	;# 
   897  031A                     	;# 
   898  031C                     	;# 
   899  031C                     	;# 
   900  031D                     	;# 
   901  031E                     	;# 
   902  038C                     	;# 
   903  038D                     	;# 
   904  0394                     	;# 
   905  0395                     	;# 
   906  0396                     	;# 
   907  040C                     	;# 
   908  040D                     	;# 
   909  0411                     	;# 
   910  0411                     	;# 
   911  0412                     	;# 
   912  0413                     	;# 
   913  0414                     	;# 
   914  0415                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  0418                     	;# 
   918  0418                     	;# 
   919  0419                     	;# 
   920  041A                     	;# 
   921  041B                     	;# 
   922  041C                     	;# 
   923  041D                     	;# 
   924  041E                     	;# 
   925  048D                     	;# 
   926  0491                     	;# 
   927  0491                     	;# 
   928  0492                     	;# 
   929  0492                     	;# 
   930  0493                     	;# 
   931  0493                     	;# 
   932  0493                     	;# 
   933  0494                     	;# 
   934  0494                     	;# 
   935  0495                     	;# 
   936  0495                     	;# 
   937  0496                     	;# 
   938  0496                     	;# 
   939  0497                     	;# 
   940  0497                     	;# 
   941  0595                     	;# 
   942  0596                     	;# 
   943  0597                     	;# 
   944  059C                     	;# 
   945  059D                     	;# 
   946  059E                     	;# 
   947  0611                     	;# 
   948  0611                     	;# 
   949  0612                     	;# 
   950  0613                     	;# 
   951  0614                     	;# 
   952  0614                     	;# 
   953  0615                     	;# 
   954  0616                     	;# 
   955  0617                     	;# 
   956  0617                     	;# 
   957  0618                     	;# 
   958  0619                     	;# 
   959  061A                     	;# 
   960  061A                     	;# 
   961  061B                     	;# 
   962  061C                     	;# 
   963  061D                     	;# 
   964  061D                     	;# 
   965  061E                     	;# 
   966  061F                     	;# 
   967  0FE4                     	;# 
   968  0FE5                     	;# 
   969  0FE6                     	;# 
   970  0FE7                     	;# 
   971  0FE8                     	;# 
   972  0FE9                     	;# 
   973  0FEA                     	;# 
   974  0FEB                     	;# 
   975  0FED                     	;# 
   976  0FEE                     	;# 
   977  0FEF                     	;# 
   978  0000                     	;# 
   979  0001                     	;# 
   980  0002                     	;# 
   981  0003                     	;# 
   982  0004                     	;# 
   983  0005                     	;# 
   984  0006                     	;# 
   985  0007                     	;# 
   986  0008                     	;# 
   987  0009                     	;# 
   988  000A                     	;# 
   989  000B                     	;# 
   990  000C                     	;# 
   991  000D                     	;# 
   992  000E                     	;# 
   993  000F                     	;# 
   994  0010                     	;# 
   995  0011                     	;# 
   996  0012                     	;# 
   997  0013                     	;# 
   998  0014                     	;# 
   999  0015                     	;# 
  1000  0016                     	;# 
  1001  0016                     	;# 
  1002  0017                     	;# 
  1003  0018                     	;# 
  1004  0019                     	;# 
  1005  001A                     	;# 
  1006  001B                     	;# 
  1007  001C                     	;# 
  1008  008C                     	;# 
  1009  008D                     	;# 
  1010  008E                     	;# 
  1011  008F                     	;# 
  1012  0090                     	;# 
  1013  0091                     	;# 
  1014  0092                     	;# 
  1015  0093                     	;# 
  1016  0094                     	;# 
  1017  0095                     	;# 
  1018  0096                     	;# 
  1019  0097                     	;# 
  1020  0099                     	;# 
  1021  009A                     	;# 
  1022  009B                     	;# 
  1023  009B                     	;# 
  1024  009C                     	;# 
  1025  009D                     	;# 
  1026  009E                     	;# 
  1027  010C                     	;# 
  1028  010D                     	;# 
  1029  010E                     	;# 
  1030  010F                     	;# 
  1031  0110                     	;# 
  1032  0116                     	;# 
  1033  0117                     	;# 
  1034  011D                     	;# 
  1035  018C                     	;# 
  1036  018D                     	;# 
  1037  018F                     	;# 
  1038  0190                     	;# 
  1039  0191                     	;# 
  1040  0191                     	;# 
  1041  0192                     	;# 
  1042  0193                     	;# 
  1043  0193                     	;# 
  1044  0194                     	;# 
  1045  0195                     	;# 
  1046  0196                     	;# 
  1047  0197                     	;# 
  1048  0199                     	;# 
  1049  0199                     	;# 
  1050  0199                     	;# 
  1051  019A                     	;# 
  1052  019A                     	;# 
  1053  019A                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019B                     	;# 
  1059  019C                     	;# 
  1060  019C                     	;# 
  1061  019C                     	;# 
  1062  019D                     	;# 
  1063  019D                     	;# 
  1064  019D                     	;# 
  1065  019E                     	;# 
  1066  019E                     	;# 
  1067  019E                     	;# 
  1068  019F                     	;# 
  1069  019F                     	;# 
  1070  019F                     	;# 
  1071  020D                     	;# 
  1072  020F                     	;# 
  1073  0210                     	;# 
  1074  0211                     	;# 
  1075  0211                     	;# 
  1076  0212                     	;# 
  1077  0212                     	;# 
  1078  0213                     	;# 
  1079  0213                     	;# 
  1080  0214                     	;# 
  1081  0214                     	;# 
  1082  0215                     	;# 
  1083  0215                     	;# 
  1084  0215                     	;# 
  1085  0216                     	;# 
  1086  0216                     	;# 
  1087  0217                     	;# 
  1088  0217                     	;# 
  1089  0219                     	;# 
  1090  021A                     	;# 
  1091  021B                     	;# 
  1092  021C                     	;# 
  1093  021D                     	;# 
  1094  021E                     	;# 
  1095  021F                     	;# 
  1096  028C                     	;# 
  1097  028D                     	;# 
  1098  0291                     	;# 
  1099  0291                     	;# 
  1100  0292                     	;# 
  1101  0293                     	;# 
  1102  0298                     	;# 
  1103  0298                     	;# 
  1104  0299                     	;# 
  1105  029A                     	;# 
  1106  029D                     	;# 
  1107  029E                     	;# 
  1108  029F                     	;# 
  1109  030C                     	;# 
  1110  030D                     	;# 
  1111  0311                     	;# 
  1112  0311                     	;# 
  1113  0312                     	;# 
  1114  0313                     	;# 
  1115  0318                     	;# 
  1116  0318                     	;# 
  1117  0319                     	;# 
  1118  031A                     	;# 
  1119  031C                     	;# 
  1120  031C                     	;# 
  1121  031D                     	;# 
  1122  031E                     	;# 
  1123  038C                     	;# 
  1124  038D                     	;# 
  1125  0394                     	;# 
  1126  0395                     	;# 
  1127  0396                     	;# 
  1128  040C                     	;# 
  1129  040D                     	;# 
  1130  0411                     	;# 
  1131  0411                     	;# 
  1132  0412                     	;# 
  1133  0413                     	;# 
  1134  0414                     	;# 
  1135  0415                     	;# 
  1136  0416                     	;# 
  1137  0417                     	;# 
  1138  0418                     	;# 
  1139  0418                     	;# 
  1140  0419                     	;# 
  1141  041A                     	;# 
  1142  041B                     	;# 
  1143  041C                     	;# 
  1144  041D                     	;# 
  1145  041E                     	;# 
  1146  048D                     	;# 
  1147  0491                     	;# 
  1148  0491                     	;# 
  1149  0492                     	;# 
  1150  0492                     	;# 
  1151  0493                     	;# 
  1152  0493                     	;# 
  1153  0493                     	;# 
  1154  0494                     	;# 
  1155  0494                     	;# 
  1156  0495                     	;# 
  1157  0495                     	;# 
  1158  0496                     	;# 
  1159  0496                     	;# 
  1160  0497                     	;# 
  1161  0497                     	;# 
  1162  0595                     	;# 
  1163  0596                     	;# 
  1164  0597                     	;# 
  1165  059C                     	;# 
  1166  059D                     	;# 
  1167  059E                     	;# 
  1168  0611                     	;# 
  1169  0611                     	;# 
  1170  0612                     	;# 
  1171  0613                     	;# 
  1172  0614                     	;# 
  1173  0614                     	;# 
  1174  0615                     	;# 
  1175  0616                     	;# 
  1176  0617                     	;# 
  1177  0617                     	;# 
  1178  0618                     	;# 
  1179  0619                     	;# 
  1180  061A                     	;# 
  1181  061A                     	;# 
  1182  061B                     	;# 
  1183  061C                     	;# 
  1184  061D                     	;# 
  1185  061D                     	;# 
  1186  061E                     	;# 
  1187  061F                     	;# 
  1188  0FE4                     	;# 
  1189  0FE5                     	;# 
  1190  0FE6                     	;# 
  1191  0FE7                     	;# 
  1192  0FE8                     	;# 
  1193  0FE9                     	;# 
  1194  0FEA                     	;# 
  1195  0FEB                     	;# 
  1196  0FED                     	;# 
  1197  0FEE                     	;# 
  1198  0FEF                     	;# 
  1199  0000                     	;# 
  1200  0001                     	;# 
  1201  0002                     	;# 
  1202  0003                     	;# 
  1203  0004                     	;# 
  1204  0005                     	;# 
  1205  0006                     	;# 
  1206  0007                     	;# 
  1207  0008                     	;# 
  1208  0009                     	;# 
  1209  000A                     	;# 
  1210  000B                     	;# 
  1211  000C                     	;# 
  1212  000D                     	;# 
  1213  000E                     	;# 
  1214  000F                     	;# 
  1215  0010                     	;# 
  1216  0011                     	;# 
  1217  0012                     	;# 
  1218  0013                     	;# 
  1219  0014                     	;# 
  1220  0015                     	;# 
  1221  0016                     	;# 
  1222  0016                     	;# 
  1223  0017                     	;# 
  1224  0018                     	;# 
  1225  0019                     	;# 
  1226  001A                     	;# 
  1227  001B                     	;# 
  1228  001C                     	;# 
  1229  008C                     	;# 
  1230  008D                     	;# 
  1231  008E                     	;# 
  1232  008F                     	;# 
  1233  0090                     	;# 
  1234  0091                     	;# 
  1235  0092                     	;# 
  1236  0093                     	;# 
  1237  0094                     	;# 
  1238  0095                     	;# 
  1239  0096                     	;# 
  1240  0097                     	;# 
  1241  0099                     	;# 
  1242  009A                     	;# 
  1243  009B                     	;# 
  1244  009B                     	;# 
  1245  009C                     	;# 
  1246  009D                     	;# 
  1247  009E                     	;# 
  1248  010C                     	;# 
  1249  010D                     	;# 
  1250  010E                     	;# 
  1251  010F                     	;# 
  1252  0110                     	;# 
  1253  0116                     	;# 
  1254  0117                     	;# 
  1255  011D                     	;# 
  1256  018C                     	;# 
  1257  018D                     	;# 
  1258  018F                     	;# 
  1259  0190                     	;# 
  1260  0191                     	;# 
  1261  0191                     	;# 
  1262  0192                     	;# 
  1263  0193                     	;# 
  1264  0193                     	;# 
  1265  0194                     	;# 
  1266  0195                     	;# 
  1267  0196                     	;# 
  1268  0197                     	;# 
  1269  0199                     	;# 
  1270  0199                     	;# 
  1271  0199                     	;# 
  1272  019A                     	;# 
  1273  019A                     	;# 
  1274  019A                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019B                     	;# 
  1280  019C                     	;# 
  1281  019C                     	;# 
  1282  019C                     	;# 
  1283  019D                     	;# 
  1284  019D                     	;# 
  1285  019D                     	;# 
  1286  019E                     	;# 
  1287  019E                     	;# 
  1288  019E                     	;# 
  1289  019F                     	;# 
  1290  019F                     	;# 
  1291  019F                     	;# 
  1292  020D                     	;# 
  1293  020F                     	;# 
  1294  0210                     	;# 
  1295  0211                     	;# 
  1296  0211                     	;# 
  1297  0212                     	;# 
  1298  0212                     	;# 
  1299  0213                     	;# 
  1300  0213                     	;# 
  1301  0214                     	;# 
  1302  0214                     	;# 
  1303  0215                     	;# 
  1304  0215                     	;# 
  1305  0215                     	;# 
  1306  0216                     	;# 
  1307  0216                     	;# 
  1308  0217                     	;# 
  1309  0217                     	;# 
  1310  0219                     	;# 
  1311  021A                     	;# 
  1312  021B                     	;# 
  1313  021C                     	;# 
  1314  021D                     	;# 
  1315  021E                     	;# 
  1316  021F                     	;# 
  1317  028C                     	;# 
  1318  028D                     	;# 
  1319  0291                     	;# 
  1320  0291                     	;# 
  1321  0292                     	;# 
  1322  0293                     	;# 
  1323  0298                     	;# 
  1324  0298                     	;# 
  1325  0299                     	;# 
  1326  029A                     	;# 
  1327  029D                     	;# 
  1328  029E                     	;# 
  1329  029F                     	;# 
  1330  030C                     	;# 
  1331  030D                     	;# 
  1332  0311                     	;# 
  1333  0311                     	;# 
  1334  0312                     	;# 
  1335  0313                     	;# 
  1336  0318                     	;# 
  1337  0318                     	;# 
  1338  0319                     	;# 
  1339  031A                     	;# 
  1340  031C                     	;# 
  1341  031C                     	;# 
  1342  031D                     	;# 
  1343  031E                     	;# 
  1344  038C                     	;# 
  1345  038D                     	;# 
  1346  0394                     	;# 
  1347  0395                     	;# 
  1348  0396                     	;# 
  1349  040C                     	;# 
  1350  040D                     	;# 
  1351  0411                     	;# 
  1352  0411                     	;# 
  1353  0412                     	;# 
  1354  0413                     	;# 
  1355  0414                     	;# 
  1356  0415                     	;# 
  1357  0416                     	;# 
  1358  0417                     	;# 
  1359  0418                     	;# 
  1360  0418                     	;# 
  1361  0419                     	;# 
  1362  041A                     	;# 
  1363  041B                     	;# 
  1364  041C                     	;# 
  1365  041D                     	;# 
  1366  041E                     	;# 
  1367  048D                     	;# 
  1368  0491                     	;# 
  1369  0491                     	;# 
  1370  0492                     	;# 
  1371  0492                     	;# 
  1372  0493                     	;# 
  1373  0493                     	;# 
  1374  0493                     	;# 
  1375  0494                     	;# 
  1376  0494                     	;# 
  1377  0495                     	;# 
  1378  0495                     	;# 
  1379  0496                     	;# 
  1380  0496                     	;# 
  1381  0497                     	;# 
  1382  0497                     	;# 
  1383  0595                     	;# 
  1384  0596                     	;# 
  1385  0597                     	;# 
  1386  059C                     	;# 
  1387  059D                     	;# 
  1388  059E                     	;# 
  1389  0611                     	;# 
  1390  0611                     	;# 
  1391  0612                     	;# 
  1392  0613                     	;# 
  1393  0614                     	;# 
  1394  0614                     	;# 
  1395  0615                     	;# 
  1396  0616                     	;# 
  1397  0617                     	;# 
  1398  0617                     	;# 
  1399  0618                     	;# 
  1400  0619                     	;# 
  1401  061A                     	;# 
  1402  061A                     	;# 
  1403  061B                     	;# 
  1404  061C                     	;# 
  1405  061D                     	;# 
  1406  061D                     	;# 
  1407  061E                     	;# 
  1408  061F                     	;# 
  1409  0FE4                     	;# 
  1410  0FE5                     	;# 
  1411  0FE6                     	;# 
  1412  0FE7                     	;# 
  1413  0FE8                     	;# 
  1414  0FE9                     	;# 
  1415  0FEA                     	;# 
  1416  0FEB                     	;# 
  1417  0FED                     	;# 
  1418  0FEE                     	;# 
  1419  0FEF                     	;# 
  1420  0000                     	;# 
  1421  0001                     	;# 
  1422  0002                     	;# 
  1423  0003                     	;# 
  1424  0004                     	;# 
  1425  0005                     	;# 
  1426  0006                     	;# 
  1427  0007                     	;# 
  1428  0008                     	;# 
  1429  0009                     	;# 
  1430  000A                     	;# 
  1431  000B                     	;# 
  1432  000C                     	;# 
  1433  000D                     	;# 
  1434  000E                     	;# 
  1435  000F                     	;# 
  1436  0010                     	;# 
  1437  0011                     	;# 
  1438  0012                     	;# 
  1439  0013                     	;# 
  1440  0014                     	;# 
  1441  0015                     	;# 
  1442  0016                     	;# 
  1443  0016                     	;# 
  1444  0017                     	;# 
  1445  0018                     	;# 
  1446  0019                     	;# 
  1447  001A                     	;# 
  1448  001B                     	;# 
  1449  001C                     	;# 
  1450  008C                     	;# 
  1451  008D                     	;# 
  1452  008E                     	;# 
  1453  008F                     	;# 
  1454  0090                     	;# 
  1455  0091                     	;# 
  1456  0092                     	;# 
  1457  0093                     	;# 
  1458  0094                     	;# 
  1459  0095                     	;# 
  1460  0096                     	;# 
  1461  0097                     	;# 
  1462  0099                     	;# 
  1463  009A                     	;# 
  1464  009B                     	;# 
  1465  009B                     	;# 
  1466  009C                     	;# 
  1467  009D                     	;# 
  1468  009E                     	;# 
  1469  010C                     	;# 
  1470  010D                     	;# 
  1471  010E                     	;# 
  1472  010F                     	;# 
  1473  0110                     	;# 
  1474  0116                     	;# 
  1475  0117                     	;# 
  1476  011D                     	;# 
  1477  018C                     	;# 
  1478  018D                     	;# 
  1479  018F                     	;# 
  1480  0190                     	;# 
  1481  0191                     	;# 
  1482  0191                     	;# 
  1483  0192                     	;# 
  1484  0193                     	;# 
  1485  0193                     	;# 
  1486  0194                     	;# 
  1487  0195                     	;# 
  1488  0196                     	;# 
  1489  0197                     	;# 
  1490  0199                     	;# 
  1491  0199                     	;# 
  1492  0199                     	;# 
  1493  019A                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019C                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019D                     	;# 
  1505  019D                     	;# 
  1506  019D                     	;# 
  1507  019E                     	;# 
  1508  019E                     	;# 
  1509  019E                     	;# 
  1510  019F                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  020D                     	;# 
  1514  020F                     	;# 
  1515  0210                     	;# 
  1516  0211                     	;# 
  1517  0211                     	;# 
  1518  0212                     	;# 
  1519  0212                     	;# 
  1520  0213                     	;# 
  1521  0213                     	;# 
  1522  0214                     	;# 
  1523  0214                     	;# 
  1524  0215                     	;# 
  1525  0215                     	;# 
  1526  0215                     	;# 
  1527  0216                     	;# 
  1528  0216                     	;# 
  1529  0217                     	;# 
  1530  0217                     	;# 
  1531  0219                     	;# 
  1532  021A                     	;# 
  1533  021B                     	;# 
  1534  021C                     	;# 
  1535  021D                     	;# 
  1536  021E                     	;# 
  1537  021F                     	;# 
  1538  028C                     	;# 
  1539  028D                     	;# 
  1540  0291                     	;# 
  1541  0291                     	;# 
  1542  0292                     	;# 
  1543  0293                     	;# 
  1544  0298                     	;# 
  1545  0298                     	;# 
  1546  0299                     	;# 
  1547  029A                     	;# 
  1548  029D                     	;# 
  1549  029E                     	;# 
  1550  029F                     	;# 
  1551  030C                     	;# 
  1552  030D                     	;# 
  1553  0311                     	;# 
  1554  0311                     	;# 
  1555  0312                     	;# 
  1556  0313                     	;# 
  1557  0318                     	;# 
  1558  0318                     	;# 
  1559  0319                     	;# 
  1560  031A                     	;# 
  1561  031C                     	;# 
  1562  031C                     	;# 
  1563  031D                     	;# 
  1564  031E                     	;# 
  1565  038C                     	;# 
  1566  038D                     	;# 
  1567  0394                     	;# 
  1568  0395                     	;# 
  1569  0396                     	;# 
  1570  040C                     	;# 
  1571  040D                     	;# 
  1572  0411                     	;# 
  1573  0411                     	;# 
  1574  0412                     	;# 
  1575  0413                     	;# 
  1576  0414                     	;# 
  1577  0415                     	;# 
  1578  0416                     	;# 
  1579  0417                     	;# 
  1580  0418                     	;# 
  1581  0418                     	;# 
  1582  0419                     	;# 
  1583  041A                     	;# 
  1584  041B                     	;# 
  1585  041C                     	;# 
  1586  041D                     	;# 
  1587  041E                     	;# 
  1588  048D                     	;# 
  1589  0491                     	;# 
  1590  0491                     	;# 
  1591  0492                     	;# 
  1592  0492                     	;# 
  1593  0493                     	;# 
  1594  0493                     	;# 
  1595  0493                     	;# 
  1596  0494                     	;# 
  1597  0494                     	;# 
  1598  0495                     	;# 
  1599  0495                     	;# 
  1600  0496                     	;# 
  1601  0496                     	;# 
  1602  0497                     	;# 
  1603  0497                     	;# 
  1604  0595                     	;# 
  1605  0596                     	;# 
  1606  0597                     	;# 
  1607  059C                     	;# 
  1608  059D                     	;# 
  1609  059E                     	;# 
  1610  0611                     	;# 
  1611  0611                     	;# 
  1612  0612                     	;# 
  1613  0613                     	;# 
  1614  0614                     	;# 
  1615  0614                     	;# 
  1616  0615                     	;# 
  1617  0616                     	;# 
  1618  0617                     	;# 
  1619  0617                     	;# 
  1620  0618                     	;# 
  1621  0619                     	;# 
  1622  061A                     	;# 
  1623  061A                     	;# 
  1624  061B                     	;# 
  1625  061C                     	;# 
  1626  061D                     	;# 
  1627  061D                     	;# 
  1628  061E                     	;# 
  1629  061F                     	;# 
  1630  0FE4                     	;# 
  1631  0FE5                     	;# 
  1632  0FE6                     	;# 
  1633  0FE7                     	;# 
  1634  0FE8                     	;# 
  1635  0FE9                     	;# 
  1636  0FEA                     	;# 
  1637  0FEB                     	;# 
  1638  0FED                     	;# 
  1639  0FEE                     	;# 
  1640  0FEF                     	;# 
  1641  0000                     	;# 
  1642  0001                     	;# 
  1643  0002                     	;# 
  1644  0003                     	;# 
  1645  0004                     	;# 
  1646  0005                     	;# 
  1647  0006                     	;# 
  1648  0007                     	;# 
  1649  0008                     	;# 
  1650  0009                     	;# 
  1651  000A                     	;# 
  1652  000B                     	;# 
  1653  000C                     	;# 
  1654  000D                     	;# 
  1655  000E                     	;# 
  1656  000F                     	;# 
  1657  0010                     	;# 
  1658  0011                     	;# 
  1659  0012                     	;# 
  1660  0013                     	;# 
  1661  0014                     	;# 
  1662  0015                     	;# 
  1663  0016                     	;# 
  1664  0016                     	;# 
  1665  0017                     	;# 
  1666  0018                     	;# 
  1667  0019                     	;# 
  1668  001A                     	;# 
  1669  001B                     	;# 
  1670  001C                     	;# 
  1671  008C                     	;# 
  1672  008D                     	;# 
  1673  008E                     	;# 
  1674  008F                     	;# 
  1675  0090                     	;# 
  1676  0091                     	;# 
  1677  0092                     	;# 
  1678  0093                     	;# 
  1679  0094                     	;# 
  1680  0095                     	;# 
  1681  0096                     	;# 
  1682  0097                     	;# 
  1683  0099                     	;# 
  1684  009A                     	;# 
  1685  009B                     	;# 
  1686  009B                     	;# 
  1687  009C                     	;# 
  1688  009D                     	;# 
  1689  009E                     	;# 
  1690  010C                     	;# 
  1691  010D                     	;# 
  1692  010E                     	;# 
  1693  010F                     	;# 
  1694  0110                     	;# 
  1695  0116                     	;# 
  1696  0117                     	;# 
  1697  011D                     	;# 
  1698  018C                     	;# 
  1699  018D                     	;# 
  1700  018F                     	;# 
  1701  0190                     	;# 
  1702  0191                     	;# 
  1703  0191                     	;# 
  1704  0192                     	;# 
  1705  0193                     	;# 
  1706  0193                     	;# 
  1707  0194                     	;# 
  1708  0195                     	;# 
  1709  0196                     	;# 
  1710  0197                     	;# 
  1711  0199                     	;# 
  1712  0199                     	;# 
  1713  0199                     	;# 
  1714  019A                     	;# 
  1715  019A                     	;# 
  1716  019A                     	;# 
  1717  019B                     	;# 
  1718  019B                     	;# 
  1719  019B                     	;# 
  1720  019B                     	;# 
  1721  019B                     	;# 
  1722  019C                     	;# 
  1723  019C                     	;# 
  1724  019C                     	;# 
  1725  019D                     	;# 
  1726  019D                     	;# 
  1727  019D                     	;# 
  1728  019E                     	;# 
  1729  019E                     	;# 
  1730  019E                     	;# 
  1731  019F                     	;# 
  1732  019F                     	;# 
  1733  019F                     	;# 
  1734  020D                     	;# 
  1735  020F                     	;# 
  1736  0210                     	;# 
  1737  0211                     	;# 
  1738  0211                     	;# 
  1739  0212                     	;# 
  1740  0212                     	;# 
  1741  0213                     	;# 
  1742  0213                     	;# 
  1743  0214                     	;# 
  1744  0214                     	;# 
  1745  0215                     	;# 
  1746  0215                     	;# 
  1747  0215                     	;# 
  1748  0216                     	;# 
  1749  0216                     	;# 
  1750  0217                     	;# 
  1751  0217                     	;# 
  1752  0219                     	;# 
  1753  021A                     	;# 
  1754  021B                     	;# 
  1755  021C                     	;# 
  1756  021D                     	;# 
  1757  021E                     	;# 
  1758  021F                     	;# 
  1759  028C                     	;# 
  1760  028D                     	;# 
  1761  0291                     	;# 
  1762  0291                     	;# 
  1763  0292                     	;# 
  1764  0293                     	;# 
  1765  0298                     	;# 
  1766  0298                     	;# 
  1767  0299                     	;# 
  1768  029A                     	;# 
  1769  029D                     	;# 
  1770  029E                     	;# 
  1771  029F                     	;# 
  1772  030C                     	;# 
  1773  030D                     	;# 
  1774  0311                     	;# 
  1775  0311                     	;# 
  1776  0312                     	;# 
  1777  0313                     	;# 
  1778  0318                     	;# 
  1779  0318                     	;# 
  1780  0319                     	;# 
  1781  031A                     	;# 
  1782  031C                     	;# 
  1783  031C                     	;# 
  1784  031D                     	;# 
  1785  031E                     	;# 
  1786  038C                     	;# 
  1787  038D                     	;# 
  1788  0394                     	;# 
  1789  0395                     	;# 
  1790  0396                     	;# 
  1791  040C                     	;# 
  1792  040D                     	;# 
  1793  0411                     	;# 
  1794  0411                     	;# 
  1795  0412                     	;# 
  1796  0413                     	;# 
  1797  0414                     	;# 
  1798  0415                     	;# 
  1799  0416                     	;# 
  1800  0417                     	;# 
  1801  0418                     	;# 
  1802  0418                     	;# 
  1803  0419                     	;# 
  1804  041A                     	;# 
  1805  041B                     	;# 
  1806  041C                     	;# 
  1807  041D                     	;# 
  1808  041E                     	;# 
  1809  048D                     	;# 
  1810  0491                     	;# 
  1811  0491                     	;# 
  1812  0492                     	;# 
  1813  0492                     	;# 
  1814  0493                     	;# 
  1815  0493                     	;# 
  1816  0493                     	;# 
  1817  0494                     	;# 
  1818  0494                     	;# 
  1819  0495                     	;# 
  1820  0495                     	;# 
  1821  0496                     	;# 
  1822  0496                     	;# 
  1823  0497                     	;# 
  1824  0497                     	;# 
  1825  0595                     	;# 
  1826  0596                     	;# 
  1827  0597                     	;# 
  1828  059C                     	;# 
  1829  059D                     	;# 
  1830  059E                     	;# 
  1831  0611                     	;# 
  1832  0611                     	;# 
  1833  0612                     	;# 
  1834  0613                     	;# 
  1835  0614                     	;# 
  1836  0614                     	;# 
  1837  0615                     	;# 
  1838  0616                     	;# 
  1839  0617                     	;# 
  1840  0617                     	;# 
  1841  0618                     	;# 
  1842  0619                     	;# 
  1843  061A                     	;# 
  1844  061A                     	;# 
  1845  061B                     	;# 
  1846  061C                     	;# 
  1847  061D                     	;# 
  1848  061D                     	;# 
  1849  061E                     	;# 
  1850  061F                     	;# 
  1851  0FE4                     	;# 
  1852  0FE5                     	;# 
  1853  0FE6                     	;# 
  1854  0FE7                     	;# 
  1855  0FE8                     	;# 
  1856  0FE9                     	;# 
  1857  0FEA                     	;# 
  1858  0FEB                     	;# 
  1859  0FED                     	;# 
  1860  0FEE                     	;# 
  1861  0FEF                     	;# 
  1862  0000                     	;# 
  1863  0001                     	;# 
  1864  0002                     	;# 
  1865  0003                     	;# 
  1866  0004                     	;# 
  1867  0005                     	;# 
  1868  0006                     	;# 
  1869  0007                     	;# 
  1870  0008                     	;# 
  1871  0009                     	;# 
  1872  000A                     	;# 
  1873  000B                     	;# 
  1874  000C                     	;# 
  1875  000D                     	;# 
  1876  000E                     	;# 
  1877  000F                     	;# 
  1878  0010                     	;# 
  1879  0011                     	;# 
  1880  0012                     	;# 
  1881  0013                     	;# 
  1882  0014                     	;# 
  1883  0015                     	;# 
  1884  0016                     	;# 
  1885  0016                     	;# 
  1886  0017                     	;# 
  1887  0018                     	;# 
  1888  0019                     	;# 
  1889  001A                     	;# 
  1890  001B                     	;# 
  1891  001C                     	;# 
  1892  008C                     	;# 
  1893  008D                     	;# 
  1894  008E                     	;# 
  1895  008F                     	;# 
  1896  0090                     	;# 
  1897  0091                     	;# 
  1898  0092                     	;# 
  1899  0093                     	;# 
  1900  0094                     	;# 
  1901  0095                     	;# 
  1902  0096                     	;# 
  1903  0097                     	;# 
  1904  0099                     	;# 
  1905  009A                     	;# 
  1906  009B                     	;# 
  1907  009B                     	;# 
  1908  009C                     	;# 
  1909  009D                     	;# 
  1910  009E                     	;# 
  1911  010C                     	;# 
  1912  010D                     	;# 
  1913  010E                     	;# 
  1914  010F                     	;# 
  1915  0110                     	;# 
  1916  0116                     	;# 
  1917  0117                     	;# 
  1918  011D                     	;# 
  1919  018C                     	;# 
  1920  018D                     	;# 
  1921  018F                     	;# 
  1922  0190                     	;# 
  1923  0191                     	;# 
  1924  0191                     	;# 
  1925  0192                     	;# 
  1926  0193                     	;# 
  1927  0193                     	;# 
  1928  0194                     	;# 
  1929  0195                     	;# 
  1930  0196                     	;# 
  1931  0197                     	;# 
  1932  0199                     	;# 
  1933  0199                     	;# 
  1934  0199                     	;# 
  1935  019A                     	;# 
  1936  019A                     	;# 
  1937  019A                     	;# 
  1938  019B                     	;# 
  1939  019B                     	;# 
  1940  019B                     	;# 
  1941  019B                     	;# 
  1942  019B                     	;# 
  1943  019C                     	;# 
  1944  019C                     	;# 
  1945  019C                     	;# 
  1946  019D                     	;# 
  1947  019D                     	;# 
  1948  019D                     	;# 
  1949  019E                     	;# 
  1950  019E                     	;# 
  1951  019E                     	;# 
  1952  019F                     	;# 
  1953  019F                     	;# 
  1954  019F                     	;# 
  1955  020D                     	;# 
  1956  020F                     	;# 
  1957  0210                     	;# 
  1958  0211                     	;# 
  1959  0211                     	;# 
  1960  0212                     	;# 
  1961  0212                     	;# 
  1962  0213                     	;# 
  1963  0213                     	;# 
  1964  0214                     	;# 
  1965  0214                     	;# 
  1966  0215                     	;# 
  1967  0215                     	;# 
  1968  0215                     	;# 
  1969  0216                     	;# 
  1970  0216                     	;# 
  1971  0217                     	;# 
  1972  0217                     	;# 
  1973  0219                     	;# 
  1974  021A                     	;# 
  1975  021B                     	;# 
  1976  021C                     	;# 
  1977  021D                     	;# 
  1978  021E                     	;# 
  1979  021F                     	;# 
  1980  028C                     	;# 
  1981  028D                     	;# 
  1982  0291                     	;# 
  1983  0291                     	;# 
  1984  0292                     	;# 
  1985  0293                     	;# 
  1986  0298                     	;# 
  1987  0298                     	;# 
  1988  0299                     	;# 
  1989  029A                     	;# 
  1990  029D                     	;# 
  1991  029E                     	;# 
  1992  029F                     	;# 
  1993  030C                     	;# 
  1994  030D                     	;# 
  1995  0311                     	;# 
  1996  0311                     	;# 
  1997  0312                     	;# 
  1998  0313                     	;# 
  1999  0318                     	;# 
  2000  0318                     	;# 
  2001  0319                     	;# 
  2002  031A                     	;# 
  2003  031C                     	;# 
  2004  031C                     	;# 
  2005  031D                     	;# 
  2006  031E                     	;# 
  2007  038C                     	;# 
  2008  038D                     	;# 
  2009  0394                     	;# 
  2010  0395                     	;# 
  2011  0396                     	;# 
  2012  040C                     	;# 
  2013  040D                     	;# 
  2014  0411                     	;# 
  2015  0411                     	;# 
  2016  0412                     	;# 
  2017  0413                     	;# 
  2018  0414                     	;# 
  2019  0415                     	;# 
  2020  0416                     	;# 
  2021  0417                     	;# 
  2022  0418                     	;# 
  2023  0418                     	;# 
  2024  0419                     	;# 
  2025  041A                     	;# 
  2026  041B                     	;# 
  2027  041C                     	;# 
  2028  041D                     	;# 
  2029  041E                     	;# 
  2030  048D                     	;# 
  2031  0491                     	;# 
  2032  0491                     	;# 
  2033  0492                     	;# 
  2034  0492                     	;# 
  2035  0493                     	;# 
  2036  0493                     	;# 
  2037  0493                     	;# 
  2038  0494                     	;# 
  2039  0494                     	;# 
  2040  0495                     	;# 
  2041  0495                     	;# 
  2042  0496                     	;# 
  2043  0496                     	;# 
  2044  0497                     	;# 
  2045  0497                     	;# 
  2046  0595                     	;# 
  2047  0596                     	;# 
  2048  0597                     	;# 
  2049  059C                     	;# 
  2050  059D                     	;# 
  2051  059E                     	;# 
  2052  0611                     	;# 
  2053  0611                     	;# 
  2054  0612                     	;# 
  2055  0613                     	;# 
  2056  0614                     	;# 
  2057  0614                     	;# 
  2058  0615                     	;# 
  2059  0616                     	;# 
  2060  0617                     	;# 
  2061  0617                     	;# 
  2062  0618                     	;# 
  2063  0619                     	;# 
  2064  061A                     	;# 
  2065  061A                     	;# 
  2066  061B                     	;# 
  2067  061C                     	;# 
  2068  061D                     	;# 
  2069  061D                     	;# 
  2070  061E                     	;# 
  2071  061F                     	;# 
  2072  0FE4                     	;# 
  2073  0FE5                     	;# 
  2074  0FE6                     	;# 
  2075  0FE7                     	;# 
  2076  0FE8                     	;# 
  2077  0FE9                     	;# 
  2078  0FEA                     	;# 
  2079  0FEB                     	;# 
  2080  0FED                     	;# 
  2081  0FEE                     	;# 
  2082  0FEF                     	;# 
  2083  0000                     	;# 
  2084  0001                     	;# 
  2085  0002                     	;# 
  2086  0003                     	;# 
  2087  0004                     	;# 
  2088  0005                     	;# 
  2089  0006                     	;# 
  2090  0007                     	;# 
  2091  0008                     	;# 
  2092  0009                     	;# 
  2093  000A                     	;# 
  2094  000B                     	;# 
  2095  000C                     	;# 
  2096  000D                     	;# 
  2097  000E                     	;# 
  2098  000F                     	;# 
  2099  0010                     	;# 
  2100  0011                     	;# 
  2101  0012                     	;# 
  2102  0013                     	;# 
  2103  0014                     	;# 
  2104  0015                     	;# 
  2105  0016                     	;# 
  2106  0016                     	;# 
  2107  0017                     	;# 
  2108  0018                     	;# 
  2109  0019                     	;# 
  2110  001A                     	;# 
  2111  001B                     	;# 
  2112  001C                     	;# 
  2113  008C                     	;# 
  2114  008D                     	;# 
  2115  008E                     	;# 
  2116  008F                     	;# 
  2117  0090                     	;# 
  2118  0091                     	;# 
  2119  0092                     	;# 
  2120  0093                     	;# 
  2121  0094                     	;# 
  2122  0095                     	;# 
  2123  0096                     	;# 
  2124  0097                     	;# 
  2125  0099                     	;# 
  2126  009A                     	;# 
  2127  009B                     	;# 
  2128  009B                     	;# 
  2129  009C                     	;# 
  2130  009D                     	;# 
  2131  009E                     	;# 
  2132  010C                     	;# 
  2133  010D                     	;# 
  2134  010E                     	;# 
  2135  010F                     	;# 
  2136  0110                     	;# 
  2137  0116                     	;# 
  2138  0117                     	;# 
  2139  011D                     	;# 
  2140  018C                     	;# 
  2141  018D                     	;# 
  2142  018F                     	;# 
  2143  0190                     	;# 
  2144  0191                     	;# 
  2145  0191                     	;# 
  2146  0192                     	;# 
  2147  0193                     	;# 
  2148  0193                     	;# 
  2149  0194                     	;# 
  2150  0195                     	;# 
  2151  0196                     	;# 
  2152  0197                     	;# 
  2153  0199                     	;# 
  2154  0199                     	;# 
  2155  0199                     	;# 
  2156  019A                     	;# 
  2157  019A                     	;# 
  2158  019A                     	;# 
  2159  019B                     	;# 
  2160  019B                     	;# 
  2161  019B                     	;# 
  2162  019B                     	;# 
  2163  019B                     	;# 
  2164  019C                     	;# 
  2165  019C                     	;# 
  2166  019C                     	;# 
  2167  019D                     	;# 
  2168  019D                     	;# 
  2169  019D                     	;# 
  2170  019E                     	;# 
  2171  019E                     	;# 
  2172  019E                     	;# 
  2173  019F                     	;# 
  2174  019F                     	;# 
  2175  019F                     	;# 
  2176  020D                     	;# 
  2177  020F                     	;# 
  2178  0210                     	;# 
  2179  0211                     	;# 
  2180  0211                     	;# 
  2181  0212                     	;# 
  2182  0212                     	;# 
  2183  0213                     	;# 
  2184  0213                     	;# 
  2185  0214                     	;# 
  2186  0214                     	;# 
  2187  0215                     	;# 
  2188  0215                     	;# 
  2189  0215                     	;# 
  2190  0216                     	;# 
  2191  0216                     	;# 
  2192  0217                     	;# 
  2193  0217                     	;# 
  2194  0219                     	;# 
  2195  021A                     	;# 
  2196  021B                     	;# 
  2197  021C                     	;# 
  2198  021D                     	;# 
  2199  021E                     	;# 
  2200  021F                     	;# 
  2201  028C                     	;# 
  2202  028D                     	;# 
  2203  0291                     	;# 
  2204  0291                     	;# 
  2205  0292                     	;# 
  2206  0293                     	;# 
  2207  0298                     	;# 
  2208  0298                     	;# 
  2209  0299                     	;# 
  2210  029A                     	;# 
  2211  029D                     	;# 
  2212  029E                     	;# 
  2213  029F                     	;# 
  2214  030C                     	;# 
  2215  030D                     	;# 
  2216  0311                     	;# 
  2217  0311                     	;# 
  2218  0312                     	;# 
  2219  0313                     	;# 
  2220  0318                     	;# 
  2221  0318                     	;# 
  2222  0319                     	;# 
  2223  031A                     	;# 
  2224  031C                     	;# 
  2225  031C                     	;# 
  2226  031D                     	;# 
  2227  031E                     	;# 
  2228  038C                     	;# 
  2229  038D                     	;# 
  2230  0394                     	;# 
  2231  0395                     	;# 
  2232  0396                     	;# 
  2233  040C                     	;# 
  2234  040D                     	;# 
  2235  0411                     	;# 
  2236  0411                     	;# 
  2237  0412                     	;# 
  2238  0413                     	;# 
  2239  0414                     	;# 
  2240  0415                     	;# 
  2241  0416                     	;# 
  2242  0417                     	;# 
  2243  0418                     	;# 
  2244  0418                     	;# 
  2245  0419                     	;# 
  2246  041A                     	;# 
  2247  041B                     	;# 
  2248  041C                     	;# 
  2249  041D                     	;# 
  2250  041E                     	;# 
  2251  048D                     	;# 
  2252  0491                     	;# 
  2253  0491                     	;# 
  2254  0492                     	;# 
  2255  0492                     	;# 
  2256  0493                     	;# 
  2257  0493                     	;# 
  2258  0493                     	;# 
  2259  0494                     	;# 
  2260  0494                     	;# 
  2261  0495                     	;# 
  2262  0495                     	;# 
  2263  0496                     	;# 
  2264  0496                     	;# 
  2265  0497                     	;# 
  2266  0497                     	;# 
  2267  0595                     	;# 
  2268  0596                     	;# 
  2269  0597                     	;# 
  2270  059C                     	;# 
  2271  059D                     	;# 
  2272  059E                     	;# 
  2273  0611                     	;# 
  2274  0611                     	;# 
  2275  0612                     	;# 
  2276  0613                     	;# 
  2277  0614                     	;# 
  2278  0614                     	;# 
  2279  0615                     	;# 
  2280  0616                     	;# 
  2281  0617                     	;# 
  2282  0617                     	;# 
  2283  0618                     	;# 
  2284  0619                     	;# 
  2285  061A                     	;# 
  2286  061A                     	;# 
  2287  061B                     	;# 
  2288  061C                     	;# 
  2289  061D                     	;# 
  2290  061D                     	;# 
  2291  061E                     	;# 
  2292  061F                     	;# 
  2293  0FE4                     	;# 
  2294  0FE5                     	;# 
  2295  0FE6                     	;# 
  2296  0FE7                     	;# 
  2297  0FE8                     	;# 
  2298  0FE9                     	;# 
  2299  0FEA                     	;# 
  2300  0FEB                     	;# 
  2301  0FED                     	;# 
  2302  0FEE                     	;# 
  2303  0FEF                     	;# 
  2304  0000                     	;# 
  2305  0001                     	;# 
  2306  0002                     	;# 
  2307  0003                     	;# 
  2308  0004                     	;# 
  2309  0005                     	;# 
  2310  0006                     	;# 
  2311  0007                     	;# 
  2312  0008                     	;# 
  2313  0009                     	;# 
  2314  000A                     	;# 
  2315  000B                     	;# 
  2316  000C                     	;# 
  2317  000D                     	;# 
  2318  000E                     	;# 
  2319  000F                     	;# 
  2320  0010                     	;# 
  2321  0011                     	;# 
  2322  0012                     	;# 
  2323  0013                     	;# 
  2324  0014                     	;# 
  2325  0015                     	;# 
  2326  0016                     	;# 
  2327  0016                     	;# 
  2328  0017                     	;# 
  2329  0018                     	;# 
  2330  0019                     	;# 
  2331  001A                     	;# 
  2332  001B                     	;# 
  2333  001C                     	;# 
  2334  008C                     	;# 
  2335  008D                     	;# 
  2336  008E                     	;# 
  2337  008F                     	;# 
  2338  0090                     	;# 
  2339  0091                     	;# 
  2340  0092                     	;# 
  2341  0093                     	;# 
  2342  0094                     	;# 
  2343  0095                     	;# 
  2344  0096                     	;# 
  2345  0097                     	;# 
  2346  0099                     	;# 
  2347  009A                     	;# 
  2348  009B                     	;# 
  2349  009B                     	;# 
  2350  009C                     	;# 
  2351  009D                     	;# 
  2352  009E                     	;# 
  2353  010C                     	;# 
  2354  010D                     	;# 
  2355  010E                     	;# 
  2356  010F                     	;# 
  2357  0110                     	;# 
  2358  0116                     	;# 
  2359  0117                     	;# 
  2360  011D                     	;# 
  2361  018C                     	;# 
  2362  018D                     	;# 
  2363  018F                     	;# 
  2364  0190                     	;# 
  2365  0191                     	;# 
  2366  0191                     	;# 
  2367  0192                     	;# 
  2368  0193                     	;# 
  2369  0193                     	;# 
  2370  0194                     	;# 
  2371  0195                     	;# 
  2372  0196                     	;# 
  2373  0197                     	;# 
  2374  0199                     	;# 
  2375  0199                     	;# 
  2376  0199                     	;# 
  2377  019A                     	;# 
  2378  019A                     	;# 
  2379  019A                     	;# 
  2380  019B                     	;# 
  2381  019B                     	;# 
  2382  019B                     	;# 
  2383  019B                     	;# 
  2384  019B                     	;# 
  2385  019C                     	;# 
  2386  019C                     	;# 
  2387  019C                     	;# 
  2388  019D                     	;# 
  2389  019D                     	;# 
  2390  019D                     	;# 
  2391  019E                     	;# 
  2392  019E                     	;# 
  2393  019E                     	;# 
  2394  019F                     	;# 
  2395  019F                     	;# 
  2396  019F                     	;# 
  2397  020D                     	;# 
  2398  020F                     	;# 
  2399  0210                     	;# 
  2400  0211                     	;# 
  2401  0211                     	;# 
  2402  0212                     	;# 
  2403  0212                     	;# 
  2404  0213                     	;# 
  2405  0213                     	;# 
  2406  0214                     	;# 
  2407  0214                     	;# 
  2408  0215                     	;# 
  2409  0215                     	;# 
  2410  0215                     	;# 
  2411  0216                     	;# 
  2412  0216                     	;# 
  2413  0217                     	;# 
  2414  0217                     	;# 
  2415  0219                     	;# 
  2416  021A                     	;# 
  2417  021B                     	;# 
  2418  021C                     	;# 
  2419  021D                     	;# 
  2420  021E                     	;# 
  2421  021F                     	;# 
  2422  028C                     	;# 
  2423  028D                     	;# 
  2424  0291                     	;# 
  2425  0291                     	;# 
  2426  0292                     	;# 
  2427  0293                     	;# 
  2428  0298                     	;# 
  2429  0298                     	;# 
  2430  0299                     	;# 
  2431  029A                     	;# 
  2432  029D                     	;# 
  2433  029E                     	;# 
  2434  029F                     	;# 
  2435  030C                     	;# 
  2436  030D                     	;# 
  2437  0311                     	;# 
  2438  0311                     	;# 
  2439  0312                     	;# 
  2440  0313                     	;# 
  2441  0318                     	;# 
  2442  0318                     	;# 
  2443  0319                     	;# 
  2444  031A                     	;# 
  2445  031C                     	;# 
  2446  031C                     	;# 
  2447  031D                     	;# 
  2448  031E                     	;# 
  2449  038C                     	;# 
  2450  038D                     	;# 
  2451  0394                     	;# 
  2452  0395                     	;# 
  2453  0396                     	;# 
  2454  040C                     	;# 
  2455  040D                     	;# 
  2456  0411                     	;# 
  2457  0411                     	;# 
  2458  0412                     	;# 
  2459  0413                     	;# 
  2460  0414                     	;# 
  2461  0415                     	;# 
  2462  0416                     	;# 
  2463  0417                     	;# 
  2464  0418                     	;# 
  2465  0418                     	;# 
  2466  0419                     	;# 
  2467  041A                     	;# 
  2468  041B                     	;# 
  2469  041C                     	;# 
  2470  041D                     	;# 
  2471  041E                     	;# 
  2472  048D                     	;# 
  2473  0491                     	;# 
  2474  0491                     	;# 
  2475  0492                     	;# 
  2476  0492                     	;# 
  2477  0493                     	;# 
  2478  0493                     	;# 
  2479  0493                     	;# 
  2480  0494                     	;# 
  2481  0494                     	;# 
  2482  0495                     	;# 
  2483  0495                     	;# 
  2484  0496                     	;# 
  2485  0496                     	;# 
  2486  0497                     	;# 
  2487  0497                     	;# 
  2488  0595                     	;# 
  2489  0596                     	;# 
  2490  0597                     	;# 
  2491  059C                     	;# 
  2492  059D                     	;# 
  2493  059E                     	;# 
  2494  0611                     	;# 
  2495  0611                     	;# 
  2496  0612                     	;# 
  2497  0613                     	;# 
  2498  0614                     	;# 
  2499  0614                     	;# 
  2500  0615                     	;# 
  2501  0616                     	;# 
  2502  0617                     	;# 
  2503  0617                     	;# 
  2504  0618                     	;# 
  2505  0619                     	;# 
  2506  061A                     	;# 
  2507  061A                     	;# 
  2508  061B                     	;# 
  2509  061C                     	;# 
  2510  061D                     	;# 
  2511  061D                     	;# 
  2512  061E                     	;# 
  2513  061F                     	;# 
  2514  0FE4                     	;# 
  2515  0FE5                     	;# 
  2516  0FE6                     	;# 
  2517  0FE7                     	;# 
  2518  0FE8                     	;# 
  2519  0FE9                     	;# 
  2520  0FEA                     	;# 
  2521  0FEB                     	;# 
  2522  0FED                     	;# 
  2523  0FEE                     	;# 
  2524  0FEF                     	;_mod5
  2525                           
  2526                           	psect	idataCOMMON
  2527  07FF                     __pidataCOMMON:	
  2528                           
  2529                           ;initializer for _blink_rate
  2530  07FF  3414               	retlw	20
  2531                           
  2532                           	psect	idataBANK0
  2533  0003                     __pidataBANK0:	
  2534                           
  2535                           ;initializer for _switchBypass_state
  2536  0003  34FF               	retlw	255
  2537                           
  2538                           	psect	idataBANK1
  2539  1F80                     __pidataBANK1:	
  2540                           
  2541                           ;initializer for _baseline_delay_time
  2542  1F80  34D0               	retlw	208
  2543  1F81  3407               	retlw	7
  2544  1F82  3400               	retlw	0
  2545  1F83  3400               	retlw	0
  2546                           
  2547                           ;initializer for _delay_time
  2548  1F84  34D0               	retlw	208
  2549  1F85  3407               	retlw	7
  2550  1F86  3400               	retlw	0
  2551  1F87  3400               	retlw	0
  2552                           
  2553                           ;initializer for _bottom_push_state
  2554  1F88  3406               	retlw	6
  2555  1F89  3400               	retlw	0
  2556                           
  2557                           ;initializer for _knob1_prev
  2558  1F8A  34D0               	retlw	208
  2559  1F8B  3407               	retlw	7
  2560                           
  2561                           ;initializer for _long_press_limit
  2562  1F8C  34E8               	retlw	232
  2563  1F8D  3403               	retlw	3
  2564                           
  2565                           ;initializer for _num_taps
  2566  1F8E  3404               	retlw	4
  2567  1F8F  3400               	retlw	0
  2568                           
  2569                           ;initializer for _tap_iteration
  2570  1F90  3401               	retlw	1
  2571  1F91  3400               	retlw	0
  2572                           
  2573                           ;initializer for _top_push_state
  2574  1F92  3406               	retlw	6
  2575  1F93  3400               	retlw	0
  2576                           
  2577                           ;initializer for _switchTap_state
  2578  1F94  34FF               	retlw	255
  2579                           
  2580                           	psect	idataBANK2
  2581  1F6B                     __pidataBANK2:	
  2582                           
  2583                           ;initializer for _blink_delay
  2584  1F6B  3464               	retlw	100
  2585  1F6C  3400               	retlw	0
  2586                           
  2587                           ;initializer for _delay_time_changed
  2588  1F6D  3401               	retlw	1
  2589  1F6E  3400               	retlw	0
  2590                           
  2591                           ;initializer for _feedback_state
  2592  1F6F  34FF               	retlw	255
  2593  1F70  34FF               	retlw	255
  2594                           
  2595                           ;initializer for _knob2_prev
  2596  1F71  34D0               	retlw	208
  2597  1F72  3407               	retlw	7
  2598                           
  2599                           ;initializer for _knob3_prev
  2600  1F73  34D0               	retlw	208
  2601  1F74  3407               	retlw	7
  2602                           
  2603                           ;initializer for _knob4_prev
  2604  1F75  34D0               	retlw	208
  2605  1F76  3407               	retlw	7
  2606                           
  2607                           ;initializer for _knob5_prev
  2608  1F77  34D0               	retlw	208
  2609  1F78  3407               	retlw	7
  2610                           
  2611                           ;initializer for _mod_delay_time
  2612  1F79  34D0               	retlw	208
  2613  1F7A  3407               	retlw	7
  2614                           
  2615                           ;initializer for _switchBypass_up
  2616  1F7B  3401               	retlw	1
  2617  1F7C  3400               	retlw	0
  2618                           
  2619                           ;initializer for _switchTap_up
  2620  1F7D  3401               	retlw	1
  2621  1F7E  3400               	retlw	0
  2622                           
  2623                           ;initializer for _blink_state
  2624  1F7F  3401               	retlw	1
  2625                           
  2626                           	psect	idataBANK4
  2627  121D                     __pidataBANK4:	
  2628                           
  2629                           ;initializer for _mod2
  2630  121D  3400               	retlw	0
  2631  121E  3400               	retlw	0
  2632  121F  340D               	retlw	13
  2633  1220  3400               	retlw	0
  2634  1221  341B               	retlw	27
  2635  1222  3400               	retlw	0
  2636  1223  3428               	retlw	40
  2637  1224  3400               	retlw	0
  2638  1225  3435               	retlw	53
  2639  1226  3400               	retlw	0
  2640  1227  3443               	retlw	67
  2641  1228  3400               	retlw	0
  2642  1229  3450               	retlw	80
  2643  122A  3400               	retlw	0
  2644  122B  345D               	retlw	93
  2645  122C  3400               	retlw	0
  2646  122D  345D               	retlw	93
  2647  122E  3400               	retlw	0
  2648  122F  3450               	retlw	80
  2649  1230  3400               	retlw	0
  2650  1231  3443               	retlw	67
  2651  1232  3400               	retlw	0
  2652  1233  3435               	retlw	53
  2653  1234  3400               	retlw	0
  2654  1235  3428               	retlw	40
  2655  1236  3400               	retlw	0
  2656  1237  341B               	retlw	27
  2657  1238  3400               	retlw	0
  2658  1239  340D               	retlw	13
  2659  123A  3400               	retlw	0
  2660  123B  3400               	retlw	0
  2661  123C  3400               	retlw	0
  2662  123D  34F3               	retlw	243
  2663  123E  34FF               	retlw	255
  2664  123F  34E5               	retlw	229
  2665  1240  34FF               	retlw	255
  2666  1241  34D8               	retlw	216
  2667  1242  34FF               	retlw	255
  2668  1243  34CB               	retlw	203
  2669  1244  34FF               	retlw	255
  2670  1245  34BD               	retlw	189
  2671  1246  34FF               	retlw	255
  2672  1247  34B0               	retlw	176
  2673  1248  34FF               	retlw	255
  2674  1249  34A3               	retlw	163
  2675  124A  34FF               	retlw	255
  2676  124B  34A3               	retlw	163
  2677  124C  34FF               	retlw	255
  2678  124D  34B0               	retlw	176
  2679  124E  34FF               	retlw	255
  2680  124F  34BD               	retlw	189
  2681  1250  34FF               	retlw	255
  2682  1251  34CB               	retlw	203
  2683  1252  34FF               	retlw	255
  2684  1253  34D8               	retlw	216
  2685  1254  34FF               	retlw	255
  2686  1255  34E5               	retlw	229
  2687  1256  34FF               	retlw	255
  2688                           
  2689                           	psect	idataBANK5
  2690  11E3                     __pidataBANK5:	
  2691                           
  2692                           ;initializer for _mod3
  2693  11E3  3400               	retlw	0
  2694  11E4  3400               	retlw	0
  2695  11E5  3407               	retlw	7
  2696  11E6  3400               	retlw	0
  2697  11E7  340D               	retlw	13
  2698  11E8  3400               	retlw	0
  2699  11E9  3414               	retlw	20
  2700  11EA  3400               	retlw	0
  2701  11EB  341B               	retlw	27
  2702  11EC  3400               	retlw	0
  2703  11ED  3421               	retlw	33
  2704  11EE  3400               	retlw	0
  2705  11EF  3428               	retlw	40
  2706  11F0  3400               	retlw	0
  2707  11F1  342F               	retlw	47
  2708  11F2  3400               	retlw	0
  2709  11F3  3435               	retlw	53
  2710  11F4  3400               	retlw	0
  2711  11F5  343C               	retlw	60
  2712  11F6  3400               	retlw	0
  2713  11F7  3443               	retlw	67
  2714  11F8  3400               	retlw	0
  2715  11F9  3449               	retlw	73
  2716  11FA  3400               	retlw	0
  2717  11FB  3450               	retlw	80
  2718  11FC  3400               	retlw	0
  2719  11FD  3457               	retlw	87
  2720  11FE  3400               	retlw	0
  2721  11FF  345D               	retlw	93
  2722  1200  3400               	retlw	0
  2723  1201  349C               	retlw	156
  2724  1202  34FF               	retlw	255
  2725  1203  34A3               	retlw	163
  2726  1204  34FF               	retlw	255
  2727  1205  34A9               	retlw	169
  2728  1206  34FF               	retlw	255
  2729  1207  34B0               	retlw	176
  2730  1208  34FF               	retlw	255
  2731  1209  34B7               	retlw	183
  2732  120A  34FF               	retlw	255
  2733  120B  34BD               	retlw	189
  2734  120C  34FF               	retlw	255
  2735  120D  34C4               	retlw	196
  2736  120E  34FF               	retlw	255
  2737  120F  34CB               	retlw	203
  2738  1210  34FF               	retlw	255
  2739  1211  34D1               	retlw	209
  2740  1212  34FF               	retlw	255
  2741  1213  34D8               	retlw	216
  2742  1214  34FF               	retlw	255
  2743  1215  34DF               	retlw	223
  2744  1216  34FF               	retlw	255
  2745  1217  34E5               	retlw	229
  2746  1218  34FF               	retlw	255
  2747  1219  34EC               	retlw	236
  2748  121A  34FF               	retlw	255
  2749  121B  34F3               	retlw	243
  2750  121C  34FF               	retlw	255
  2751                           
  2752                           	psect	idataBANK6
  2753  11A9                     __pidataBANK6:	
  2754                           
  2755                           ;initializer for _mod4
  2756  11A9  3464               	retlw	100
  2757  11AA  3400               	retlw	0
  2758  11AB  3464               	retlw	100
  2759  11AC  3400               	retlw	0
  2760  11AD  3464               	retlw	100
  2761  11AE  3400               	retlw	0
  2762  11AF  3464               	retlw	100
  2763  11B0  3400               	retlw	0
  2764  11B1  3464               	retlw	100
  2765  11B2  3400               	retlw	0
  2766  11B3  3464               	retlw	100
  2767  11B4  3400               	retlw	0
  2768  11B5  3464               	retlw	100
  2769  11B6  3400               	retlw	0
  2770  11B7  3464               	retlw	100
  2771  11B8  3400               	retlw	0
  2772  11B9  3464               	retlw	100
  2773  11BA  3400               	retlw	0
  2774  11BB  3464               	retlw	100
  2775  11BC  3400               	retlw	0
  2776  11BD  3464               	retlw	100
  2777  11BE  3400               	retlw	0
  2778  11BF  3464               	retlw	100
  2779  11C0  3400               	retlw	0
  2780  11C1  3464               	retlw	100
  2781  11C2  3400               	retlw	0
  2782  11C3  3464               	retlw	100
  2783  11C4  3400               	retlw	0
  2784  11C5  3464               	retlw	100
  2785  11C6  3400               	retlw	0
  2786  11C7  349C               	retlw	156
  2787  11C8  34FF               	retlw	255
  2788  11C9  349C               	retlw	156
  2789  11CA  34FF               	retlw	255
  2790  11CB  349C               	retlw	156
  2791  11CC  34FF               	retlw	255
  2792  11CD  349C               	retlw	156
  2793  11CE  34FF               	retlw	255
  2794  11CF  349C               	retlw	156
  2795  11D0  34FF               	retlw	255
  2796  11D1  349C               	retlw	156
  2797  11D2  34FF               	retlw	255
  2798  11D3  349C               	retlw	156
  2799  11D4  34FF               	retlw	255
  2800  11D5  349C               	retlw	156
  2801  11D6  34FF               	retlw	255
  2802  11D7  349C               	retlw	156
  2803  11D8  34FF               	retlw	255
  2804  11D9  349C               	retlw	156
  2805  11DA  34FF               	retlw	255
  2806  11DB  349C               	retlw	156
  2807  11DC  34FF               	retlw	255
  2808  11DD  349C               	retlw	156
  2809  11DE  34FF               	retlw	255
  2810  11DF  349C               	retlw	156
  2811  11E0  34FF               	retlw	255
  2812  11E1  349C               	retlw	156
  2813  11E2  34FF               	retlw	255
  2814                           
  2815                           	psect	idataBANK7
  2816  14A8                     __pidataBANK7:	
  2817                           
  2818                           ;initializer for _B25k
  2819  14A8  34FF               	retlw	255
  2820  14A9  3400               	retlw	0
  2821  14AA  34FF               	retlw	255
  2822  14AB  3400               	retlw	0
  2823  14AC  34FF               	retlw	255
  2824  14AD  3400               	retlw	0
  2825  14AE  34DF               	retlw	223
  2826  14AF  3400               	retlw	0
  2827  14B0  34AE               	retlw	174
  2828  14B1  3400               	retlw	0
  2829  14B2  348E               	retlw	142
  2830  14B3  3400               	retlw	0
  2831  14B4  3478               	retlw	120
  2832  14B5  3400               	retlw	0
  2833  14B6  3467               	retlw	103
  2834  14B7  3400               	retlw	0
  2835  14B8  345B               	retlw	91
  2836  14B9  3400               	retlw	0
  2837  14BA  3450               	retlw	80
  2838  14BB  3400               	retlw	0
  2839  14BC  3448               	retlw	72
  2840  14BD  3400               	retlw	0
  2841  14BE  3442               	retlw	66
  2842  14BF  3400               	retlw	0
  2843  14C0  343C               	retlw	60
  2844  14C1  3400               	retlw	0
  2845  14C2  3437               	retlw	55
  2846  14C3  3400               	retlw	0
  2847  14C4  3433               	retlw	51
  2848  14C5  3400               	retlw	0
  2849  14C6  3430               	retlw	48
  2850  14C7  3400               	retlw	0
  2851  14C8  342D               	retlw	45
  2852  14C9  3400               	retlw	0
  2853  14CA  342A               	retlw	42
  2854  14CB  3400               	retlw	0
  2855  14CC  3427               	retlw	39
  2856  14CD  3400               	retlw	0
  2857  14CE  3425               	retlw	37
  2858  14CF  3400               	retlw	0
  2859  14D0  3423               	retlw	35
  2860  14D1  3400               	retlw	0
  2861  14D2  3421               	retlw	33
  2862  14D3  3400               	retlw	0
  2863  14D4  3420               	retlw	32
  2864  14D5  3400               	retlw	0
  2865  14D6  341E               	retlw	30
  2866  14D7  3400               	retlw	0
  2867  14D8  341D               	retlw	29
  2868  14D9  3400               	retlw	0
  2869  14DA  341C               	retlw	28
  2870  14DB  3400               	retlw	0
  2871  14DC  341B               	retlw	27
  2872  14DD  3400               	retlw	0
  2873  14DE  341A               	retlw	26
  2874  14DF  3400               	retlw	0
  2875  14E0  3419               	retlw	25
  2876  14E1  3400               	retlw	0
  2877  14E2  3418               	retlw	24
  2878  14E3  3400               	retlw	0
  2879  14E4  3417               	retlw	23
  2880  14E5  3400               	retlw	0
  2881  14E6  3416               	retlw	22
  2882  14E7  3400               	retlw	0
  2883  14E8  3415               	retlw	21
  2884  14E9  3400               	retlw	0
  2885  14EA  3415               	retlw	21
  2886  14EB  3400               	retlw	0
  2887  14EC  3414               	retlw	20
  2888  14ED  3400               	retlw	0
  2889  14EE  3413               	retlw	19
  2890  14EF  3400               	retlw	0
  2891  14F0  340F               	retlw	15
  2892  14F1  3400               	retlw	0
  2893  14F2  340B               	retlw	11
  2894  14F3  3400               	retlw	0
  2895  14F4  3407               	retlw	7
  2896  14F5  3400               	retlw	0
  2897  14F6  3407               	retlw	7
  2898  14F7  3400               	retlw	0
  2899                           
  2900                           	psect	idataBANK8
  2901  1458                     __pidataBANK8:	
  2902                           
  2903                           ;initializer for _iB25k
  2904  1458  3407               	retlw	7
  2905  1459  3400               	retlw	0
  2906  145A  3407               	retlw	7
  2907  145B  3400               	retlw	0
  2908  145C  340B               	retlw	11
  2909  145D  3400               	retlw	0
  2910  145E  340F               	retlw	15
  2911  145F  3400               	retlw	0
  2912  1460  3413               	retlw	19
  2913  1461  3400               	retlw	0
  2914  1462  3414               	retlw	20
  2915  1463  3400               	retlw	0
  2916  1464  3415               	retlw	21
  2917  1465  3400               	retlw	0
  2918  1466  3415               	retlw	21
  2919  1467  3400               	retlw	0
  2920  1468  3416               	retlw	22
  2921  1469  3400               	retlw	0
  2922  146A  3417               	retlw	23
  2923  146B  3400               	retlw	0
  2924  146C  3418               	retlw	24
  2925  146D  3400               	retlw	0
  2926  146E  3419               	retlw	25
  2927  146F  3400               	retlw	0
  2928  1470  341A               	retlw	26
  2929  1471  3400               	retlw	0
  2930  1472  341B               	retlw	27
  2931  1473  3400               	retlw	0
  2932  1474  341C               	retlw	28
  2933  1475  3400               	retlw	0
  2934  1476  341D               	retlw	29
  2935  1477  3400               	retlw	0
  2936  1478  341E               	retlw	30
  2937  1479  3400               	retlw	0
  2938  147A  3420               	retlw	32
  2939  147B  3400               	retlw	0
  2940  147C  3421               	retlw	33
  2941  147D  3400               	retlw	0
  2942  147E  3423               	retlw	35
  2943  147F  3400               	retlw	0
  2944  1480  3425               	retlw	37
  2945  1481  3400               	retlw	0
  2946  1482  3427               	retlw	39
  2947  1483  3400               	retlw	0
  2948  1484  342A               	retlw	42
  2949  1485  3400               	retlw	0
  2950  1486  342D               	retlw	45
  2951  1487  3400               	retlw	0
  2952  1488  3430               	retlw	48
  2953  1489  3400               	retlw	0
  2954  148A  3433               	retlw	51
  2955  148B  3400               	retlw	0
  2956  148C  3437               	retlw	55
  2957  148D  3400               	retlw	0
  2958  148E  343C               	retlw	60
  2959  148F  3400               	retlw	0
  2960  1490  3442               	retlw	66
  2961  1491  3400               	retlw	0
  2962  1492  3448               	retlw	72
  2963  1493  3400               	retlw	0
  2964  1494  3450               	retlw	80
  2965  1495  3400               	retlw	0
  2966  1496  345B               	retlw	91
  2967  1497  3400               	retlw	0
  2968  1498  3467               	retlw	103
  2969  1499  3400               	retlw	0
  2970  149A  3478               	retlw	120
  2971  149B  3400               	retlw	0
  2972  149C  348E               	retlw	142
  2973  149D  3400               	retlw	0
  2974  149E  34AE               	retlw	174
  2975  149F  3400               	retlw	0
  2976  14A0  34DF               	retlw	223
  2977  14A1  3400               	retlw	0
  2978  14A2  34FF               	retlw	255
  2979  14A3  3400               	retlw	0
  2980  14A4  34FF               	retlw	255
  2981  14A5  3400               	retlw	0
  2982  14A6  34FF               	retlw	255
  2983  14A7  3400               	retlw	0
  2984                           
  2985                           	psect	idataBANK9
  2986  116F                     __pidataBANK9:	
  2987                           
  2988                           ;initializer for _mod1
  2989  116F  3400               	retlw	0
  2990  1170  3400               	retlw	0
  2991  1171  3415               	retlw	21
  2992  1172  3400               	retlw	0
  2993  1173  3428               	retlw	40
  2994  1174  3400               	retlw	0
  2995  1175  343B               	retlw	59
  2996  1176  3400               	retlw	0
  2997  1177  344A               	retlw	74
  2998  1178  3400               	retlw	0
  2999  1179  3456               	retlw	86
  3000  117A  3400               	retlw	0
  3001  117B  345F               	retlw	95
  3002  117C  3400               	retlw	0
  3003  117D  3463               	retlw	99
  3004  117E  3400               	retlw	0
  3005  117F  3464               	retlw	100
  3006  1180  3400               	retlw	0
  3007  1181  345F               	retlw	95
  3008  1182  3400               	retlw	0
  3009  1183  3457               	retlw	87
  3010  1184  3400               	retlw	0
  3011  1185  344B               	retlw	75
  3012  1186  3400               	retlw	0
  3013  1187  343C               	retlw	60
  3014  1188  3400               	retlw	0
  3015  1189  342A               	retlw	42
  3016  118A  3400               	retlw	0
  3017  118B  3416               	retlw	22
  3018  118C  3400               	retlw	0
  3019  118D  3402               	retlw	2
  3020  118E  3400               	retlw	0
  3021  118F  34ED               	retlw	237
  3022  1190  34FF               	retlw	255
  3023  1191  34D9               	retlw	217
  3024  1192  34FF               	retlw	255
  3025  1193  34C7               	retlw	199
  3026  1194  34FF               	retlw	255
  3027  1195  34B7               	retlw	183
  3028  1196  34FF               	retlw	255
  3029  1197  34AB               	retlw	171
  3030  1198  34FF               	retlw	255
  3031  1199  34A2               	retlw	162
  3032  119A  34FF               	retlw	255
  3033  119B  349D               	retlw	157
  3034  119C  34FF               	retlw	255
  3035  119D  349C               	retlw	156
  3036  119E  34FF               	retlw	255
  3037  119F  34A8               	retlw	168
  3038  11A0  34FF               	retlw	255
  3039  11A1  34B4               	retlw	180
  3040  11A2  34FF               	retlw	255
  3041  11A3  34C3               	retlw	195
  3042  11A4  34FF               	retlw	255
  3043  11A5  34D5               	retlw	213
  3044  11A6  34FF               	retlw	255
  3045  11A7  34E8               	retlw	232
  3046  11A8  34FF               	retlw	255
  3047                           
  3048                           	psect	idataBIGRAM
  3049  01EC                     __pidataBIGRAM:	
  3050                           
  3051                           ;initializer for _delay
  3052  01EC  3422               	retlw	34
  3053  01ED  3408               	retlw	8
  3054  01EE  34FC               	retlw	252
  3055  01EF  3407               	retlw	7
  3056  01F0  34D8               	retlw	216
  3057  01F1  3407               	retlw	7
  3058  01F2  34B5               	retlw	181
  3059  01F3  3407               	retlw	7
  3060  01F4  3493               	retlw	147
  3061  01F5  3407               	retlw	7
  3062  01F6  3472               	retlw	114
  3063  01F7  3407               	retlw	7
  3064  01F8  3452               	retlw	82
  3065  01F9  3407               	retlw	7
  3066  01FA  3434               	retlw	52
  3067  01FB  3407               	retlw	7
  3068  01FC  3416               	retlw	22
  3069  01FD  3407               	retlw	7
  3070  01FE  34F9               	retlw	249
  3071  01FF  3406               	retlw	6
  3072  0200  34DD               	retlw	221
  3073  0201  3406               	retlw	6
  3074  0202  34C2               	retlw	194
  3075  0203  3406               	retlw	6
  3076  0204  34A8               	retlw	168
  3077  0205  3406               	retlw	6
  3078  0206  348F               	retlw	143
  3079  0207  3406               	retlw	6
  3080  0208  3476               	retlw	118
  3081  0209  3406               	retlw	6
  3082  020A  345E               	retlw	94
  3083  020B  3406               	retlw	6
  3084  020C  3447               	retlw	71
  3085  020D  3406               	retlw	6
  3086  020E  3430               	retlw	48
  3087  020F  3406               	retlw	6
  3088  0210  341A               	retlw	26
  3089  0211  3406               	retlw	6
  3090  0212  3405               	retlw	5
  3091  0213  3406               	retlw	6
  3092  0214  34F0               	retlw	240
  3093  0215  3405               	retlw	5
  3094  0216  34DC               	retlw	220
  3095  0217  3405               	retlw	5
  3096  0218  34C8               	retlw	200
  3097  0219  3405               	retlw	5
  3098  021A  34B5               	retlw	181
  3099  021B  3405               	retlw	5
  3100  021C  34A3               	retlw	163
  3101  021D  3405               	retlw	5
  3102  021E  3490               	retlw	144
  3103  021F  3405               	retlw	5
  3104  0220  347F               	retlw	127
  3105  0221  3405               	retlw	5
  3106  0222  346D               	retlw	109
  3107  0223  3405               	retlw	5
  3108  0224  345C               	retlw	92
  3109  0225  3405               	retlw	5
  3110  0226  344C               	retlw	76
  3111  0227  3405               	retlw	5
  3112  0228  343C               	retlw	60
  3113  0229  3405               	retlw	5
  3114  022A  342C               	retlw	44
  3115  022B  3405               	retlw	5
  3116  022C  341D               	retlw	29
  3117  022D  3405               	retlw	5
  3118  022E  340E               	retlw	14
  3119  022F  3405               	retlw	5
  3120  0230  34FF               	retlw	255
  3121  0231  3404               	retlw	4
  3122  0232  34F1               	retlw	241
  3123  0233  3404               	retlw	4
  3124  0234  34E2               	retlw	226
  3125  0235  3404               	retlw	4
  3126  0236  34D5               	retlw	213
  3127  0237  3404               	retlw	4
  3128  0238  34C7               	retlw	199
  3129  0239  3404               	retlw	4
  3130  023A  34BA               	retlw	186
  3131  023B  3404               	retlw	4
  3132  023C  34AD               	retlw	173
  3133  023D  3404               	retlw	4
  3134  023E  34A1               	retlw	161
  3135  023F  3404               	retlw	4
  3136  0240  3494               	retlw	148
  3137  0241  3404               	retlw	4
  3138  0242  3488               	retlw	136
  3139  0243  3404               	retlw	4
  3140  0244  347D               	retlw	125
  3141  0245  3404               	retlw	4
  3142  0246  3471               	retlw	113
  3143  0247  3404               	retlw	4
  3144  0248  3466               	retlw	102
  3145  0249  3404               	retlw	4
  3146  024A  345A               	retlw	90
  3147  024B  3404               	retlw	4
  3148  024C  3450               	retlw	80
  3149  024D  3404               	retlw	4
  3150  024E  3445               	retlw	69
  3151  024F  3404               	retlw	4
  3152  0250  343A               	retlw	58
  3153  0251  3404               	retlw	4
  3154  0252  3430               	retlw	48
  3155  0253  3404               	retlw	4
  3156  0254  3426               	retlw	38
  3157  0255  3404               	retlw	4
  3158  0256  341C               	retlw	28
  3159  0257  3404               	retlw	4
  3160  0258  3412               	retlw	18
  3161  0259  3404               	retlw	4
  3162  025A  3409               	retlw	9
  3163  025B  3404               	retlw	4
  3164  025C  34FF               	retlw	255
  3165  025D  3403               	retlw	3
  3166  025E  34F6               	retlw	246
  3167  025F  3403               	retlw	3
  3168  0260  34ED               	retlw	237
  3169  0261  3403               	retlw	3
  3170  0262  34E4               	retlw	228
  3171  0263  3403               	retlw	3
  3172  0264  34DC               	retlw	220
  3173  0265  3403               	retlw	3
  3174  0266  34D3               	retlw	211
  3175  0267  3403               	retlw	3
  3176  0268  34CB               	retlw	203
  3177  0269  3403               	retlw	3
  3178  026A  34C2               	retlw	194
  3179  026B  3403               	retlw	3
  3180  026C  34BA               	retlw	186
  3181  026D  3403               	retlw	3
  3182  026E  34B2               	retlw	178
  3183  026F  3403               	retlw	3
  3184  0270  34AA               	retlw	170
  3185  0271  3403               	retlw	3
  3186  0272  34A2               	retlw	162
  3187  0273  3403               	retlw	3
  3188  0274  349B               	retlw	155
  3189  0275  3403               	retlw	3
  3190  0276  3493               	retlw	147
  3191  0277  3403               	retlw	3
  3192  0278  348C               	retlw	140
  3193  0279  3403               	retlw	3
  3194  027A  3485               	retlw	133
  3195  027B  3403               	retlw	3
  3196  027C  347E               	retlw	126
  3197  027D  3403               	retlw	3
  3198  027E  3477               	retlw	119
  3199  027F  3403               	retlw	3
  3200  0280  3470               	retlw	112
  3201  0281  3403               	retlw	3
  3202  0282  3469               	retlw	105
  3203  0283  3403               	retlw	3
  3204  0284  3462               	retlw	98
  3205  0285  3403               	retlw	3
  3206  0286  345C               	retlw	92
  3207  0287  3403               	retlw	3
  3208  0288  3455               	retlw	85
  3209  0289  3403               	retlw	3
  3210  028A  344F               	retlw	79
  3211  028B  3403               	retlw	3
  3212  028C  3448               	retlw	72
  3213  028D  3403               	retlw	3
  3214  028E  3442               	retlw	66
  3215  028F  3403               	retlw	3
  3216  0290  343C               	retlw	60
  3217  0291  3403               	retlw	3
  3218  0292  3436               	retlw	54
  3219  0293  3403               	retlw	3
  3220  0294  3430               	retlw	48
  3221  0295  3403               	retlw	3
  3222  0296  342A               	retlw	42
  3223  0297  3403               	retlw	3
  3224  0298  3424               	retlw	36
  3225  0299  3403               	retlw	3
  3226  029A  341F               	retlw	31
  3227  029B  3403               	retlw	3
  3228  029C  3419               	retlw	25
  3229  029D  3403               	retlw	3
  3230  029E  3413               	retlw	19
  3231  029F  3403               	retlw	3
  3232  02A0  340E               	retlw	14
  3233  02A1  3403               	retlw	3
  3234  02A2  3409               	retlw	9
  3235  02A3  3403               	retlw	3
  3236  02A4  3403               	retlw	3
  3237  02A5  3403               	retlw	3
  3238  02A6  34FE               	retlw	254
  3239  02A7  3402               	retlw	2
  3240  02A8  34F9               	retlw	249
  3241  02A9  3402               	retlw	2
  3242  02AA  34F4               	retlw	244
  3243  02AB  3402               	retlw	2
  3244  02AC  34EF               	retlw	239
  3245  02AD  3402               	retlw	2
  3246  02AE  34EA               	retlw	234
  3247  02AF  3402               	retlw	2
  3248  02B0  34E5               	retlw	229
  3249  02B1  3402               	retlw	2
  3250  02B2  34E0               	retlw	224
  3251  02B3  3402               	retlw	2
  3252  02B4  34DB               	retlw	219
  3253  02B5  3402               	retlw	2
  3254  02B6  34D7               	retlw	215
  3255  02B7  3402               	retlw	2
  3256  02B8  34D2               	retlw	210
  3257  02B9  3402               	retlw	2
  3258  02BA  34CD               	retlw	205
  3259  02BB  3402               	retlw	2
  3260  02BC  34C9               	retlw	201
  3261  02BD  3402               	retlw	2
  3262  02BE  34C4               	retlw	196
  3263  02BF  3402               	retlw	2
  3264  02C0  34C0               	retlw	192
  3265  02C1  3402               	retlw	2
  3266  02C2  34BC               	retlw	188
  3267  02C3  3402               	retlw	2
  3268  02C4  34B7               	retlw	183
  3269  02C5  3402               	retlw	2
  3270  02C6  34B3               	retlw	179
  3271  02C7  3402               	retlw	2
  3272  02C8  34AF               	retlw	175
  3273  02C9  3402               	retlw	2
  3274  02CA  34AB               	retlw	171
  3275  02CB  3402               	retlw	2
  3276  02CC  34A6               	retlw	166
  3277  02CD  3402               	retlw	2
  3278  02CE  34A2               	retlw	162
  3279  02CF  3402               	retlw	2
  3280  02D0  349E               	retlw	158
  3281  02D1  3402               	retlw	2
  3282  02D2  349A               	retlw	154
  3283  02D3  3402               	retlw	2
  3284  02D4  3497               	retlw	151
  3285  02D5  3402               	retlw	2
  3286  02D6  3493               	retlw	147
  3287  02D7  3402               	retlw	2
  3288  02D8  348F               	retlw	143
  3289  02D9  3402               	retlw	2
  3290  02DA  348B               	retlw	139
  3291  02DB  3402               	retlw	2
  3292  02DC  3487               	retlw	135
  3293  02DD  3402               	retlw	2
  3294  02DE  3484               	retlw	132
  3295  02DF  3402               	retlw	2
  3296  02E0  3480               	retlw	128
  3297  02E1  3402               	retlw	2
  3298  02E2  347C               	retlw	124
  3299  02E3  3402               	retlw	2
  3300  02E4  3479               	retlw	121
  3301  02E5  3402               	retlw	2
  3302  02E6  3475               	retlw	117
  3303  02E7  3402               	retlw	2
  3304  02E8  3472               	retlw	114
  3305  02E9  3402               	retlw	2
  3306  02EA  346E               	retlw	110
  3307  02EB  3402               	retlw	2
  3308  02EC  346B               	retlw	107
  3309  02ED  3402               	retlw	2
  3310  02EE  3467               	retlw	103
  3311  02EF  3402               	retlw	2
  3312  02F0  3464               	retlw	100
  3313  02F1  3402               	retlw	2
  3314  02F2  3461               	retlw	97
  3315  02F3  3402               	retlw	2
  3316  02F4  345E               	retlw	94
  3317  02F5  3402               	retlw	2
  3318  02F6  345A               	retlw	90
  3319  02F7  3402               	retlw	2
  3320  02F8  3457               	retlw	87
  3321  02F9  3402               	retlw	2
  3322  02FA  3454               	retlw	84
  3323  02FB  3402               	retlw	2
  3324  02FC  3451               	retlw	81
  3325  02FD  3402               	retlw	2
  3326  02FE  344E               	retlw	78
  3327  02FF  3402               	retlw	2
  3328  0300  344B               	retlw	75
  3329  0301  3402               	retlw	2
  3330  0302  3448               	retlw	72
  3331  0303  3402               	retlw	2
  3332  0304  3445               	retlw	69
  3333  0305  3402               	retlw	2
  3334  0306  3442               	retlw	66
  3335  0307  3402               	retlw	2
  3336  0308  343F               	retlw	63
  3337  0309  3402               	retlw	2
  3338  030A  343C               	retlw	60
  3339  030B  3402               	retlw	2
  3340  030C  3439               	retlw	57
  3341  030D  3402               	retlw	2
  3342  030E  3436               	retlw	54
  3343  030F  3402               	retlw	2
  3344  0310  3433               	retlw	51
  3345  0311  3402               	retlw	2
  3346  0312  3430               	retlw	48
  3347  0313  3402               	retlw	2
  3348  0314  342E               	retlw	46
  3349  0315  3402               	retlw	2
  3350  0316  342B               	retlw	43
  3351  0317  3402               	retlw	2
  3352  0318  3428               	retlw	40
  3353  0319  3402               	retlw	2
  3354  031A  3425               	retlw	37
  3355  031B  3402               	retlw	2
  3356  031C  3423               	retlw	35
  3357  031D  3402               	retlw	2
  3358  031E  3420               	retlw	32
  3359  031F  3402               	retlw	2
  3360  0320  341E               	retlw	30
  3361  0321  3402               	retlw	2
  3362  0322  341B               	retlw	27
  3363  0323  3402               	retlw	2
  3364  0324  3418               	retlw	24
  3365  0325  3402               	retlw	2
  3366  0326  3416               	retlw	22
  3367  0327  3402               	retlw	2
  3368  0328  3413               	retlw	19
  3369  0329  3402               	retlw	2
  3370  032A  3411               	retlw	17
  3371  032B  3402               	retlw	2
  3372  032C  340E               	retlw	14
  3373  032D  3402               	retlw	2
  3374  032E  340C               	retlw	12
  3375  032F  3402               	retlw	2
  3376  0330  340A               	retlw	10
  3377  0331  3402               	retlw	2
  3378  0332  3407               	retlw	7
  3379  0333  3402               	retlw	2
  3380  0334  3405               	retlw	5
  3381  0335  3402               	retlw	2
  3382  0336  3402               	retlw	2
  3383  0337  3402               	retlw	2
  3384  0338  3400               	retlw	0
  3385  0339  3402               	retlw	2
  3386  033A  34FE               	retlw	254
  3387  033B  3401               	retlw	1
  3388  033C  34FB               	retlw	251
  3389  033D  3401               	retlw	1
  3390  033E  34F9               	retlw	249
  3391  033F  3401               	retlw	1
  3392  0340  34F7               	retlw	247
  3393  0341  3401               	retlw	1
  3394  0342  34F5               	retlw	245
  3395  0343  3401               	retlw	1
  3396  0344  34F2               	retlw	242
  3397  0345  3401               	retlw	1
  3398  0346  34F0               	retlw	240
  3399  0347  3401               	retlw	1
  3400  0348  34EE               	retlw	238
  3401  0349  3401               	retlw	1
  3402  034A  34EC               	retlw	236
  3403  034B  3401               	retlw	1
  3404  034C  34EA               	retlw	234
  3405  034D  3401               	retlw	1
  3406  034E  34E8               	retlw	232
  3407  034F  3401               	retlw	1
  3408  0350  34E6               	retlw	230
  3409  0351  3401               	retlw	1
  3410  0352  34E3               	retlw	227
  3411  0353  3401               	retlw	1
  3412  0354  34E1               	retlw	225
  3413  0355  3401               	retlw	1
  3414  0356  34DF               	retlw	223
  3415  0357  3401               	retlw	1
  3416  0358  34DD               	retlw	221
  3417  0359  3401               	retlw	1
  3418  035A  34DB               	retlw	219
  3419  035B  3401               	retlw	1
  3420  035C  34D9               	retlw	217
  3421  035D  3401               	retlw	1
  3422  035E  34D7               	retlw	215
  3423  035F  3401               	retlw	1
  3424  0360  34D5               	retlw	213
  3425  0361  3401               	retlw	1
  3426  0362  34D3               	retlw	211
  3427  0363  3401               	retlw	1
  3428  0364  34D2               	retlw	210
  3429  0365  3401               	retlw	1
  3430  0366  34D0               	retlw	208
  3431  0367  3401               	retlw	1
  3432  0368  34CE               	retlw	206
  3433  0369  3401               	retlw	1
  3434  036A  34CC               	retlw	204
  3435  036B  3401               	retlw	1
  3436  036C  34CA               	retlw	202
  3437  036D  3401               	retlw	1
  3438  036E  34C8               	retlw	200
  3439  036F  3401               	retlw	1
  3440  0370  34C6               	retlw	198
  3441  0371  3401               	retlw	1
  3442  0372  34C4               	retlw	196
  3443  0373  3401               	retlw	1
  3444  0374  34C3               	retlw	195
  3445  0375  3401               	retlw	1
  3446  0376  34C1               	retlw	193
  3447  0377  3401               	retlw	1
  3448  0378  34BF               	retlw	191
  3449  0379  3401               	retlw	1
  3450  037A  34BD               	retlw	189
  3451  037B  3401               	retlw	1
  3452  037C  34BC               	retlw	188
  3453  037D  3401               	retlw	1
  3454  037E  34BA               	retlw	186
  3455  037F  3401               	retlw	1
  3456  0380  34B8               	retlw	184
  3457  0381  3401               	retlw	1
  3458  0382  34B6               	retlw	182
  3459  0383  3401               	retlw	1
  3460  0384  34B5               	retlw	181
  3461  0385  3401               	retlw	1
  3462  0386  34B3               	retlw	179
  3463  0387  3401               	retlw	1
  3464  0388  34B1               	retlw	177
  3465  0389  3401               	retlw	1
  3466  038A  34B0               	retlw	176
  3467  038B  3401               	retlw	1
  3468  038C  34AE               	retlw	174
  3469  038D  3401               	retlw	1
  3470  038E  34AC               	retlw	172
  3471  038F  3401               	retlw	1
  3472  0390  34AB               	retlw	171
  3473  0391  3401               	retlw	1
  3474  0392  34A9               	retlw	169
  3475  0393  3401               	retlw	1
  3476  0394  34A8               	retlw	168
  3477  0395  3401               	retlw	1
  3478  0396  34A6               	retlw	166
  3479  0397  3401               	retlw	1
  3480  0398  34A4               	retlw	164
  3481  0399  3401               	retlw	1
  3482  039A  34A3               	retlw	163
  3483  039B  3401               	retlw	1
  3484  039C  34A1               	retlw	161
  3485  039D  3401               	retlw	1
  3486  039E  34A0               	retlw	160
  3487  039F  3401               	retlw	1
  3488  03A0  349E               	retlw	158
  3489  03A1  3401               	retlw	1
  3490  03A2  349D               	retlw	157
  3491  03A3  3401               	retlw	1
  3492  03A4  349B               	retlw	155
  3493  03A5  3401               	retlw	1
  3494  03A6  349A               	retlw	154
  3495  03A7  3401               	retlw	1
  3496  03A8  3498               	retlw	152
  3497  03A9  3401               	retlw	1
  3498  03AA  3497               	retlw	151
  3499  03AB  3401               	retlw	1
  3500  03AC  3495               	retlw	149
  3501  03AD  3401               	retlw	1
  3502  03AE  3494               	retlw	148
  3503  03AF  3401               	retlw	1
  3504  03B0  3492               	retlw	146
  3505  03B1  3401               	retlw	1
  3506  03B2  3491               	retlw	145
  3507  03B3  3401               	retlw	1
  3508  03B4  3490               	retlw	144
  3509  03B5  3401               	retlw	1
  3510  03B6  348E               	retlw	142
  3511  03B7  3401               	retlw	1
  3512  03B8  348D               	retlw	141
  3513  03B9  3401               	retlw	1
  3514  03BA  348B               	retlw	139
  3515  03BB  3401               	retlw	1
  3516  03BC  348A               	retlw	138
  3517  03BD  3401               	retlw	1
  3518  03BE  3489               	retlw	137
  3519  03BF  3401               	retlw	1
  3520  03C0  3487               	retlw	135
  3521  03C1  3401               	retlw	1
  3522  03C2  3486               	retlw	134
  3523  03C3  3401               	retlw	1
  3524  03C4  3485               	retlw	133
  3525  03C5  3401               	retlw	1
  3526  03C6  3483               	retlw	131
  3527  03C7  3401               	retlw	1
  3528  03C8  3482               	retlw	130
  3529  03C9  3401               	retlw	1
  3530  03CA  3481               	retlw	129
  3531  03CB  3401               	retlw	1
  3532  03CC  347F               	retlw	127
  3533  03CD  3401               	retlw	1
  3534  03CE  347E               	retlw	126
  3535  03CF  3401               	retlw	1
  3536  03D0  347D               	retlw	125
  3537  03D1  3401               	retlw	1
  3538  03D2  347B               	retlw	123
  3539  03D3  3401               	retlw	1
  3540  03D4  347A               	retlw	122
  3541  03D5  3401               	retlw	1
  3542  03D6  3479               	retlw	121
  3543  03D7  3401               	retlw	1
  3544  03D8  3478               	retlw	120
  3545  03D9  3401               	retlw	1
  3546  03DA  3476               	retlw	118
  3547  03DB  3401               	retlw	1
  3548  03DC  3475               	retlw	117
  3549  03DD  3401               	retlw	1
  3550  03DE  3474               	retlw	116
  3551  03DF  3401               	retlw	1
  3552  03E0  3473               	retlw	115
  3553  03E1  3401               	retlw	1
  3554  03E2  3471               	retlw	113
  3555  03E3  3401               	retlw	1
  3556  03E4  3470               	retlw	112
  3557  03E5  3401               	retlw	1
  3558  03E6  346F               	retlw	111
  3559  03E7  3401               	retlw	1
  3560  03E8  346E               	retlw	110
  3561  03E9  3401               	retlw	1
  3562                           
  3563                           ;initializer for _mod5
  3564  03EA  3400               	retlw	0
  3565  03EB  3400               	retlw	0
  3566  03EC  340A               	retlw	10
  3567  03ED  3400               	retlw	0
  3568  03EE  3414               	retlw	20
  3569  03EF  3400               	retlw	0
  3570  03F0  341E               	retlw	30
  3571  03F1  3400               	retlw	0
  3572  03F2  3428               	retlw	40
  3573  03F3  3400               	retlw	0
  3574  03F4  3432               	retlw	50
  3575  03F5  3400               	retlw	0
  3576  03F6  343A               	retlw	58
  3577  03F7  3400               	retlw	0
  3578  03F8  3442               	retlw	66
  3579  03F9  3400               	retlw	0
  3580  03FA  344A               	retlw	74
  3581  03FB  3400               	retlw	0
  3582  03FC  3450               	retlw	80
  3583  03FD  3400               	retlw	0
  3584  03FE  3456               	retlw	86
  3585  03FF  3400               	retlw	0
  3586  0400  345B               	retlw	91
  3587  0401  3400               	retlw	0
  3588  0402  345F               	retlw	95
  3589  0403  3400               	retlw	0
  3590  0404  3461               	retlw	97
  3591  0405  3400               	retlw	0
  3592  0406  3463               	retlw	99
  3593  0407  3400               	retlw	0
  3594  0408  3464               	retlw	100
  3595  0409  3400               	retlw	0
  3596  040A  3463               	retlw	99
  3597  040B  3400               	retlw	0
  3598  040C  3461               	retlw	97
  3599  040D  3400               	retlw	0
  3600  040E  345F               	retlw	95
  3601  040F  3400               	retlw	0
  3602  0410  345B               	retlw	91
  3603  0411  3400               	retlw	0
  3604  0412  3456               	retlw	86
  3605  0413  3400               	retlw	0
  3606  0414  3450               	retlw	80
  3607  0415  3400               	retlw	0
  3608  0416  344A               	retlw	74
  3609  0417  3400               	retlw	0
  3610  0418  3442               	retlw	66
  3611  0419  3400               	retlw	0
  3612  041A  343A               	retlw	58
  3613  041B  3400               	retlw	0
  3614  041C  3432               	retlw	50
  3615  041D  3400               	retlw	0
  3616  041E  3428               	retlw	40
  3617  041F  3400               	retlw	0
  3618  0420  341E               	retlw	30
  3619  0421  3400               	retlw	0
  3620  0422  3414               	retlw	20
  3621  0423  3400               	retlw	0
  3622  0424  340A               	retlw	10
  3623  0425  3400               	retlw	0
  3624  0426  3400               	retlw	0
  3625  0427  3400               	retlw	0
  3626  0428  34F6               	retlw	246
  3627  0429  34FF               	retlw	255
  3628  042A  34EC               	retlw	236
  3629  042B  34FF               	retlw	255
  3630  042C  34E2               	retlw	226
  3631  042D  34FF               	retlw	255
  3632  042E  34D8               	retlw	216
  3633  042F  34FF               	retlw	255
  3634  0430  34CE               	retlw	206
  3635  0431  34FF               	retlw	255
  3636  0432  34C6               	retlw	198
  3637  0433  34FF               	retlw	255
  3638  0434  34BE               	retlw	190
  3639  0435  34FF               	retlw	255
  3640  0436  34B6               	retlw	182
  3641  0437  34FF               	retlw	255
  3642  0438  34B0               	retlw	176
  3643  0439  34FF               	retlw	255
  3644  043A  34AA               	retlw	170
  3645  043B  34FF               	retlw	255
  3646  043C  34A5               	retlw	165
  3647  043D  34FF               	retlw	255
  3648  043E  34A1               	retlw	161
  3649  043F  34FF               	retlw	255
  3650  0440  349F               	retlw	159
  3651  0441  34FF               	retlw	255
  3652  0442  349D               	retlw	157
  3653  0443  34FF               	retlw	255
  3654  0444  349C               	retlw	156
  3655  0445  34FF               	retlw	255
  3656  0446  349D               	retlw	157
  3657  0447  34FF               	retlw	255
  3658  0448  349F               	retlw	159
  3659  0449  34FF               	retlw	255
  3660  044A  34A1               	retlw	161
  3661  044B  34FF               	retlw	255
  3662  044C  34A5               	retlw	165
  3663  044D  34FF               	retlw	255
  3664  044E  34AA               	retlw	170
  3665  044F  34FF               	retlw	255
  3666  0450  34B0               	retlw	176
  3667  0451  34FF               	retlw	255
  3668  0452  34B6               	retlw	182
  3669  0453  34FF               	retlw	255
  3670  0454  34BE               	retlw	190
  3671  0455  34FF               	retlw	255
  3672  0456  34C6               	retlw	198
  3673  0457  34FF               	retlw	255
  3674  0458  34CE               	retlw	206
  3675  0459  34FF               	retlw	255
  3676  045A  34D8               	retlw	216
  3677  045B  34FF               	retlw	255
  3678  045C  34E2               	retlw	226
  3679  045D  34FF               	retlw	255
  3680  045E  34EC               	retlw	236
  3681  045F  34FF               	retlw	255
  3682  0460  34F6               	retlw	246
  3683  0461  34FF               	retlw	255
  3684  0462  3400               	retlw	0
  3685  0463  3400               	retlw	0
  3686  000B                     _INTCONbits	set	11
  3687  000E                     _PORTCbits	set	14
  3688  000F                     _PORTDbits	set	15
  3689  0010                     _PORTEbits	set	16
  3690  001B                     _PR2	set	27
  3691  001C                     _T2CONbits	set	28
  3692  009D                     _ADCON0bits	set	157
  3693  009E                     _ADCON1bits	set	158
  3694  009C                     _ADRESH	set	156
  3695  009B                     _ADRESL	set	155
  3696  0095                     _OPTION_REGbits	set	149
  3697  0099                     _OSCCONbits	set	153
  3698  008D                     _TRISBbits	set	141
  3699  008E                     _TRISCbits	set	142
  3700  008F                     _TRISDbits	set	143
  3701  0090                     _TRISEbits	set	144
  3702  011D                     _APFCONbits	set	285
  3703  010D                     _LATBbits	set	269
  3704  010F                     _LATDbits	set	271
  3705  0190                     _ANSELEbits	set	400
  3706  0192                     _PMADRH	set	402
  3707  0191                     _PMADRL	set	401
  3708  0195                     _PMCON1bits	set	405
  3709  0196                     _PMCON2	set	406
  3710  0194                     _PMDATH	set	404
  3711  0193                     _PMDATL	set	403
  3712  0291                     _CCPR1	set	657
  3713  0298                     _CCPR2	set	664
  3714  0293                     _CCP1CONbits	set	659
  3715  029A                     _CCP2CONbits	set	666
  3716  029D                     _CCPTMRS0	set	669
  3717  029E                     _CCPTMRS1	set	670
  3718  029F                     _CCPTMRS2	set	671
  3719  0311                     _CCPR3	set	785
  3720  0318                     _CCPR4	set	792
  3721  031C                     _CCPR5	set	796
  3722  0313                     _CCP3CONbits	set	787
  3723  031A                     _CCP4CONbits	set	794
  3724  031E                     _CCP5CONbits	set	798
  3725  030C                     _TRISFbits	set	780
  3726  030D                     _TRISGbits	set	781
  3727  038C                     _LATFbits	set	908
  3728  038D                     _LATGbits	set	909
  3729  040C                     _ANSELFbits	set	1036
  3730  061A                     _CCPR9	set	1562
  3731  061F                     _CCP10CONbits	set	1567
  3732  0613                     _CCP6CONbits	set	1555
  3733  0616                     _CCP7CONbits	set	1558
  3734  0619                     _CCP8CONbits	set	1561
  3735  061C                     _CCP9CONbits	set	1564
  3736                           
  3737                           ; #config settings
  3738  0000                     
  3739                           	psect	cinit
  3740  0133                     start_initialization:	
  3741  0133                     __initialization:		;BIGRAM
  3742                           
  3743                           ; Clear objects allocated to COMMON
  3744  0133  01F9               	clrf	__pbssCOMMON& (0+127)
  3745  0134  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  3746  0135  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  3747  0136  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  3748                           
  3749                           ; Clear objects allocated to BANK1
  3750  0137  30C3               	movlw	low __pbssBANK1
  3751  0138  0084               	movwf	4
  3752  0139  3000               	movlw	high __pbssBANK1
  3753  013A  0085               	movwf	5
  3754  013B  3018               	movlw	24
  3755  013C  00FE               	movwf	btemp
  3756  013D  3000               	movlw	0
  3757  013E  00FF               	movwf	btemp+1
  3758  013F  3188  2002  3181   	fcall	clear_ram0
  3759                           
  3760                           ; Clear objects allocated to BANK2
  3761  0142  3020               	movlw	low __pbssBANK2
  3762  0143  0084               	movwf	4
  3763  0144  3001               	movlw	high __pbssBANK2
  3764  0145  0085               	movwf	5
  3765  0146  303A               	movlw	58
  3766  0147  00FE               	movwf	btemp
  3767  0148  3000               	movlw	0
  3768  0149  00FF               	movwf	btemp+1
  3769  014A  3188  2002  3181   	fcall	clear_ram0
  3770                           
  3771                           ; Clear objects allocated to BANK3
  3772  014D  30A0               	movlw	low __pbssBANK3
  3773  014E  0084               	movwf	4
  3774  014F  3001               	movlw	high __pbssBANK3
  3775  0150  0085               	movwf	5
  3776  0151  3034               	movlw	52
  3777  0152  00FE               	movwf	btemp
  3778  0153  3000               	movlw	0
  3779  0154  00FF               	movwf	btemp+1
  3780  0155  3188  2002  3181   	fcall	clear_ram0
  3781                           
  3782                           ; Clear objects allocated to BANK10
  3783  0158  3020               	movlw	low __pbssBANK10
  3784  0159  0084               	movwf	4
  3785  015A  3005               	movlw	high __pbssBANK10
  3786  015B  0085               	movwf	5
  3787  015C  3040               	movlw	64
  3788  015D  00FE               	movwf	btemp
  3789  015E  3000               	movlw	0
  3790  015F  00FF               	movwf	btemp+1
  3791  0160  3188  2002  3181   	fcall	clear_ram0
  3792                           
  3793                           ; Initialize objects allocated to BIGRAM
  3794  0163  30EC               	movlw	low __pidataBIGRAM
  3795  0164  0084               	movwf	4
  3796  0165  3081               	movlw	(high __pidataBIGRAM)| (0+128)
  3797  0166  0085               	movwf	5
  3798  0167  3078               	movlw	low (0+9080)
  3799  0168  0086               	movwf	6
  3800  0169  3023               	movlw	high (0+9080)
  3801  016A  0087               	movwf	7
  3802  016B  3002               	movlw	2
  3803  016C  00FF               	movwf	btemp+1
  3804  016D  3078               	movlw	120
  3805  016E  319F  273E  3181   	fcall	init_ram
  3806                           
  3807                           ; Initialize objects allocated to COMMON
  3808  0171  3187  27FF  3181   	fcall	__pidataCOMMON	;fetch initializer
  3809  0174  00FD               	movwf	__pdataCOMMON& (0+127)
  3810                           
  3811                           ; Initialize objects allocated to BANK0
  3812  0175  3180  2003  3181   	fcall	__pidataBANK0	;fetch initializer
  3813  0178  00EF               	movwf	__pdataBANK0& (0+127)
  3814                           
  3815                           ; Initialize objects allocated to BANK1
  3816  0179  3080               	movlw	low __pidataBANK1
  3817  017A  0084               	movwf	4
  3818  017B  309F               	movlw	(high __pidataBANK1)| (0+128)
  3819  017C  0085               	movwf	5
  3820  017D  30DB               	movlw	low __pdataBANK1
  3821  017E  0086               	movwf	6
  3822  017F  3000               	movlw	high __pdataBANK1
  3823  0180  0087               	movwf	7
  3824  0181  3000               	movlw	0
  3825  0182  00FF               	movwf	btemp+1
  3826  0183  3015               	movlw	21
  3827  0184  319F  273E  3181   	fcall	init_ram
  3828                           
  3829                           ; Initialize objects allocated to BANK2
  3830  0187  306B               	movlw	low __pidataBANK2
  3831  0188  0084               	movwf	4
  3832  0189  309F               	movlw	(high __pidataBANK2)| (0+128)
  3833  018A  0085               	movwf	5
  3834  018B  305A               	movlw	low __pdataBANK2
  3835  018C  0086               	movwf	6
  3836  018D  3001               	movlw	high __pdataBANK2
  3837  018E  0087               	movwf	7
  3838  018F  3000               	movlw	0
  3839  0190  00FF               	movwf	btemp+1
  3840  0191  3015               	movlw	21
  3841  0192  319F  273E  3181   	fcall	init_ram
  3842                           
  3843                           ; Initialize objects allocated to BANK4
  3844  0195  301D               	movlw	low __pidataBANK4
  3845  0196  0084               	movwf	4
  3846  0197  3092               	movlw	(high __pidataBANK4)| (0+128)
  3847  0198  0085               	movwf	5
  3848  0199  3020               	movlw	low __pdataBANK4
  3849  019A  0086               	movwf	6
  3850  019B  3002               	movlw	high __pdataBANK4
  3851  019C  0087               	movwf	7
  3852  019D  3000               	movlw	0
  3853  019E  00FF               	movwf	btemp+1
  3854  019F  303A               	movlw	58
  3855  01A0  319F  273E  3181   	fcall	init_ram
  3856                           
  3857                           ; Initialize objects allocated to BANK5
  3858  01A3  30E3               	movlw	low __pidataBANK5
  3859  01A4  0084               	movwf	4
  3860  01A5  3091               	movlw	(high __pidataBANK5)| (0+128)
  3861  01A6  0085               	movwf	5
  3862  01A7  30A0               	movlw	low __pdataBANK5
  3863  01A8  0086               	movwf	6
  3864  01A9  3002               	movlw	high __pdataBANK5
  3865  01AA  0087               	movwf	7
  3866  01AB  3000               	movlw	0
  3867  01AC  00FF               	movwf	btemp+1
  3868  01AD  303A               	movlw	58
  3869  01AE  319F  273E  3181   	fcall	init_ram
  3870                           
  3871                           ; Initialize objects allocated to BANK6
  3872  01B1  30A9               	movlw	low __pidataBANK6
  3873  01B2  0084               	movwf	4
  3874  01B3  3091               	movlw	(high __pidataBANK6)| (0+128)
  3875  01B4  0085               	movwf	5
  3876  01B5  3020               	movlw	low __pdataBANK6
  3877  01B6  0086               	movwf	6
  3878  01B7  3003               	movlw	high __pdataBANK6
  3879  01B8  0087               	movwf	7
  3880  01B9  3000               	movlw	0
  3881  01BA  00FF               	movwf	btemp+1
  3882  01BB  303A               	movlw	58
  3883  01BC  319F  273E  3181   	fcall	init_ram
  3884                           
  3885                           ; Initialize objects allocated to BANK7
  3886  01BF  30A8               	movlw	low __pidataBANK7
  3887  01C0  0084               	movwf	4
  3888  01C1  3094               	movlw	(high __pidataBANK7)| (0+128)
  3889  01C2  0085               	movwf	5
  3890  01C3  30A0               	movlw	low __pdataBANK7
  3891  01C4  0086               	movwf	6
  3892  01C5  3003               	movlw	high __pdataBANK7
  3893  01C6  0087               	movwf	7
  3894  01C7  3000               	movlw	0
  3895  01C8  00FF               	movwf	btemp+1
  3896  01C9  3050               	movlw	80
  3897  01CA  319F  273E  3181   	fcall	init_ram
  3898                           
  3899                           ; Initialize objects allocated to BANK8
  3900  01CD  3058               	movlw	low __pidataBANK8
  3901  01CE  0084               	movwf	4
  3902  01CF  3094               	movlw	(high __pidataBANK8)| (0+128)
  3903  01D0  0085               	movwf	5
  3904  01D1  3020               	movlw	low __pdataBANK8
  3905  01D2  0086               	movwf	6
  3906  01D3  3004               	movlw	high __pdataBANK8
  3907  01D4  0087               	movwf	7
  3908  01D5  3000               	movlw	0
  3909  01D6  00FF               	movwf	btemp+1
  3910  01D7  3050               	movlw	80
  3911  01D8  319F  273E  3181   	fcall	init_ram
  3912                           
  3913                           ; Initialize objects allocated to BANK9
  3914  01DB  306F               	movlw	low __pidataBANK9
  3915  01DC  0084               	movwf	4
  3916  01DD  3091               	movlw	(high __pidataBANK9)| (0+128)
  3917  01DE  0085               	movwf	5
  3918  01DF  30A0               	movlw	low __pdataBANK9
  3919  01E0  0086               	movwf	6
  3920  01E1  3004               	movlw	high __pdataBANK9
  3921  01E2  0087               	movwf	7
  3922  01E3  3000               	movlw	0
  3923  01E4  00FF               	movwf	btemp+1
  3924  01E5  303A               	movlw	58
  3925  01E6  319F  273E         	fcall	init_ram
  3926  01E8                     end_of_initialization:	
  3927                           ;End of C runtime variable initialization code
  3928                           
  3929  01E8                     __end_of__initialization:	
  3930  01E8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3931  01E9  0020               	movlb	0
  3932  01EA  3189  2926         	ljmp	_main	;jump to C main() function
  3933                           
  3934                           	psect	bssCOMMON
  3935  0079                     __pbssCOMMON:	
  3936  0079                     _tap_timer:	
  3937  0079                     	ds	4
  3938                           
  3939                           	psect	dataCOMMON
  3940  007D                     __pdataCOMMON:	
  3941  007D                     _blink_rate:	
  3942  007D                     	ds	1
  3943                           
  3944                           	psect	dataBANK0
  3945  006F                     __pdataBANK0:	
  3946  006F                     _switchBypass_state:	
  3947  006F                     	ds	1
  3948                           
  3949                           	psect	bssBANK1
  3950  00C3                     __pbssBANK1:	
  3951  00C3                     _sub_timer:	
  3952  00C3                     	ds	4
  3953  00C7                     _timer:	
  3954  00C7                     	ds	4
  3955  00CB                     _feedback_timer:	
  3956  00CB                     	ds	2
  3957  00CD                     _mod_counter:	
  3958  00CD                     	ds	2
  3959  00CF                     _switchBypass_pressed:	
  3960  00CF                     	ds	2
  3961  00D1                     _switchTap_pressed:	
  3962  00D1                     	ds	2
  3963  00D3                     _bypass_turning_on:	
  3964  00D3                     	ds	1
  3965  00D4                     _feedback_start:	
  3966  00D4                     	ds	1
  3967  00D5                     _iCnt:	
  3968  00D5                     	ds	1
  3969  00D6                     _mode1_state:	
  3970  00D6                     	ds	1
  3971  00D7                     _mode2_state:	
  3972  00D7                     	ds	1
  3973  00D8                     _preset_blink:	
  3974  00D8                     	ds	1
  3975  00D9                     _preset_programmning_on:	
  3976  00D9                     	ds	1
  3977  00DA                     _suspend_blink:	
  3978  00DA                     	ds	1
  3979                           
  3980                           	psect	dataBANK1
  3981  00DB                     __pdataBANK1:	
  3982  00DB                     _baseline_delay_time:	
  3983  00DB                     	ds	4
  3984  00DF                     _delay_time:	
  3985  00DF                     	ds	4
  3986  00E3                     _bottom_push_state:	
  3987  00E3                     	ds	2
  3988  00E5                     _knob1_prev:	
  3989  00E5                     	ds	2
  3990  00E7                     _long_press_limit:	
  3991  00E7                     	ds	2
  3992  00E9                     _num_taps:	
  3993  00E9                     	ds	2
  3994  00EB                     _tap_iteration:	
  3995  00EB                     	ds	2
  3996  00ED                     _top_push_state:	
  3997  00ED                     	ds	2
  3998  00EF                     _switchTap_state:	
  3999  00EF                     	ds	1
  4000                           
  4001                           	psect	bssBANK2
  4002  0120                     __pbssBANK2:	
  4003  0120                     _tap_history:	
  4004  0120                     	ds	20
  4005  0134                     _ledState:	
  4006  0134                     	ds	4
  4007  0138                     _mod_timer:	
  4008  0138                     	ds	4
  4009  013C                     _SPI_Value:	
  4010  013C                     	ds	2
  4011  013E                     _debounce_bypass:	
  4012  013E                     	ds	2
  4013  0140                     _debounce_count:	
  4014  0140                     	ds	2
  4015  0142                     _debounce_mode1:	
  4016  0142                     	ds	2
  4017  0144                     _debounce_mode2:	
  4018  0144                     	ds	2
  4019  0146                     _delay_counter:	
  4020  0146                     	ds	2
  4021  0148                     _delayfound:	
  4022  0148                     	ds	2
  4023  014A                     _knob_1_pos:	
  4024  014A                     	ds	2
  4025  014C                     _knob_2_pos:	
  4026  014C                     	ds	2
  4027  014E                     _knob_3_pos:	
  4028  014E                     	ds	2
  4029  0150                     _knob_4_pos:	
  4030  0150                     	ds	2
  4031  0152                     _knob_5_pos:	
  4032  0152                     	ds	2
  4033  0154                     _mod_value:	
  4034  0154                     	ds	2
  4035  0156                     _switchBypass_toggle:	
  4036  0156                     	ds	2
  4037  0158                     _switchTap_toggle:	
  4038  0158                     	ds	2
  4039                           
  4040                           	psect	dataBANK2
  4041  015A                     __pdataBANK2:	
  4042  015A                     _blink_delay:	
  4043  015A                     	ds	2
  4044  015C                     _delay_time_changed:	
  4045  015C                     	ds	2
  4046  015E                     _feedback_state:	
  4047  015E                     	ds	2
  4048  0160                     _knob2_prev:	
  4049  0160                     	ds	2
  4050  0162                     _knob3_prev:	
  4051  0162                     	ds	2
  4052  0164                     _knob4_prev:	
  4053  0164                     	ds	2
  4054  0166                     _knob5_prev:	
  4055  0166                     	ds	2
  4056  0168                     _mod_delay_time:	
  4057  0168                     	ds	2
  4058  016A                     _switchBypass_up:	
  4059  016A                     	ds	2
  4060  016C                     _switchTap_up:	
  4061  016C                     	ds	2
  4062  016E                     _blink_state:	
  4063  016E                     	ds	1
  4064                           
  4065                           	psect	bssBANK3
  4066  01A0                     __pbssBANK3:	
  4067  01A0                     _tap:	
  4068  01A0                     	ds	44
  4069  01CC                     _tap_total:	
  4070  01CC                     	ds	4
  4071  01D0                     wait_ms@timel:	
  4072  01D0                     	ds	4
  4073                           
  4074                           	psect	dataBANK4
  4075  0220                     __pdataBANK4:	
  4076  0220                     _mod2:	
  4077  0220                     	ds	58
  4078                           
  4079                           	psect	dataBANK5
  4080  02A0                     __pdataBANK5:	
  4081  02A0                     _mod3:	
  4082  02A0                     	ds	58
  4083                           
  4084                           	psect	dataBANK6
  4085  0320                     __pdataBANK6:	
  4086  0320                     _mod4:	
  4087  0320                     	ds	58
  4088                           
  4089                           	psect	dataBANK7
  4090  03A0                     __pdataBANK7:	
  4091  03A0                     _B25k:	
  4092  03A0                     	ds	80
  4093                           
  4094                           	psect	dataBANK8
  4095  0420                     __pdataBANK8:	
  4096  0420                     _iB25k:	
  4097  0420                     	ds	80
  4098                           
  4099                           	psect	dataBANK9
  4100  04A0                     __pdataBANK9:	
  4101  04A0                     _mod1:	
  4102  04A0                     	ds	58
  4103                           
  4104                           	psect	bssBANK10
  4105  0520                     __pbssBANK10:	
  4106  0520                     _myBuf:	
  4107  0520                     	ds	64
  4108                           
  4109                           	psect	clrtext
  4110  0802                     clear_ram0:	
  4111                           ;	Called with FSR0 containing the base address, and
  4112                           ;	btemp/btemp+1 has the size to clear
  4113                           
  4114  0802  0064               	clrwdt	;clear the watchdog before getting into this loop
  4115  0803                     clrloop0:	
  4116  0803  0180               	clrf	0	;clear RAM location pointed to by FSR
  4117  0804  3101               	addfsr 0,1
  4118  0805  3001               	movlw	1
  4119  0806  02FE               	subwf	126,f
  4120  0807  3000               	movlw	0
  4121  0808  3BFF               	subwfb	127,f
  4122  0809  087F               	movf	127,w
  4123  080A  047E               	iorwf	126,w
  4124  080B  1903               	btfsc	3,2
  4125  080C  3400               	retlw	0	;all done for this memory range, return
  4126  080D  2803               	goto	clrloop0	;have we reached the end yet?
  4127                           
  4128                           	psect	inittext
  4129  1F3E                     init_ram:	
  4130  1F3E  00FE               	movwf	126
  4131  1F3F                     initloop:	
  4132  1F3F  0012               	moviw fsr0++
  4133  1F40  001E               	movwi fsr1++
  4134  1F41  3001               	movlw	1
  4135  1F42  02FE               	subwf	126,f
  4136  1F43  3000               	movlw	0
  4137  1F44  3BFF               	subwfb	127,f
  4138  1F45  087F               	movf	127,w
  4139  1F46  047E               	iorwf	126,w
  4140  1F47  1903               	btfsc	3,2
  4141  1F48  3400               	retlw	0
  4142  1F49  2F3F               	goto	initloop
  4143                           
  4144                           	psect	cstackBANK1
  4145  00A0                     __pcstackBANK1:	
  4146  00A0                     ___fttol@sign1:	
  4147                           
  4148                           ; 1 bytes @ 0x0
  4149  00A0                     	ds	1
  4150  00A1                     ___fttol@lval:	
  4151                           
  4152                           ; 4 bytes @ 0x1
  4153  00A1                     	ds	4
  4154  00A5                     ___fttol@exp1:	
  4155                           
  4156                           ; 1 bytes @ 0x5
  4157  00A5                     	ds	1
  4158  00A6                     ?_set_subdivision:	
  4159  00A6                     set_subdivision@x:	
  4160                           ; 2 bytes @ 0x6
  4161                           
  4162                           
  4163                           ; 2 bytes @ 0x6
  4164  00A6                     	ds	2
  4165  00A8                     set_subdivision@y:	
  4166                           
  4167                           ; 2 bytes @ 0x8
  4168  00A8                     	ds	2
  4169  00AA                     ??_main:	
  4170                           
  4171                           ; 1 bytes @ 0xA
  4172  00AA                     	ds	15
  4173  00B9                     main@i:	
  4174                           
  4175                           ; 2 bytes @ 0x19
  4176  00B9                     	ds	2
  4177  00BB                     main@tapCntDivisor:	
  4178                           
  4179                           ; 2 bytes @ 0x1B
  4180  00BB                     	ds	2
  4181  00BD                     main@adjusted_pot_value:	
  4182                           
  4183                           ; 2 bytes @ 0x1D
  4184  00BD                     	ds	2
  4185  00BF                     main@i_342:	
  4186                           
  4187                           ; 2 bytes @ 0x1F
  4188  00BF                     	ds	2
  4189  00C1                     main@i_343:	
  4190                           
  4191                           ; 2 bytes @ 0x21
  4192  00C1                     	ds	2
  4193                           
  4194                           	psect	cstackCOMMON
  4195  0070                     __pcstackCOMMON:	
  4196  0070                     ?_ConfigureOscillator:	
  4197  0070                     ?_InitApp:	
  4198                           ; 1 bytes @ 0x0
  4199                           
  4200  0070                     ?_InitializeTaps:	
  4201                           ; 1 bytes @ 0x0
  4202                           
  4203  0070                     ?_initSwitchBypass:	
  4204                           ; 1 bytes @ 0x0
  4205                           
  4206  0070                     ?_ReadSavedSettings:	
  4207                           ; 1 bytes @ 0x0
  4208                           
  4209  0070                     ?_read_bottom_tactile:	
  4210                           ; 1 bytes @ 0x0
  4211                           
  4212  0070                     ?_read_top_tactile:	
  4213                           ; 1 bytes @ 0x0
  4214                           
  4215  0070                     ?_update_mode:	
  4216                           ; 1 bytes @ 0x0
  4217                           
  4218  0070                     ?_showBootSequence:	
  4219                           ; 1 bytes @ 0x0
  4220                           
  4221  0070                     ?_updateSwitchBypass:	
  4222                           ; 1 bytes @ 0x0
  4223                           
  4224  0070                     ?_init_adc:	
  4225                           ; 1 bytes @ 0x0
  4226                           
  4227  0070                     ?_init_pwm:	
  4228                           ; 1 bytes @ 0x0
  4229                           
  4230  0070                     ?_init_timer2:	
  4231                           ; 1 bytes @ 0x0
  4232                           
  4233  0070                     ?_init_timer0:	
  4234                           ; 1 bytes @ 0x0
  4235                           
  4236  0070                     ?_getCurrentLEDState:	
  4237                           ; 1 bytes @ 0x0
  4238                           
  4239  0070                     ?_star_tactiles:	
  4240                           ; 1 bytes @ 0x0
  4241                           
  4242  0070                     ?_solidring_tactiles:	
  4243                           ; 1 bytes @ 0x0
  4244                           
  4245  0070                     ?_restoreLEDState:	
  4246                           ; 1 bytes @ 0x0
  4247                           
  4248  0070                     ?_isr:	
  4249                           ; 1 bytes @ 0x0
  4250                           
  4251  0070                     ?_main:	
  4252                           ; 1 bytes @ 0x0
  4253                           
  4254  0070                     ?i1_set_leds_top:	
  4255                           ; 1 bytes @ 0x0
  4256                           
  4257  0070                     i1set_leds_top@x:	
  4258                           ; 1 bytes @ 0x0
  4259                           
  4260                           
  4261                           ; 2 bytes @ 0x0
  4262  0070                     	ds	2
  4263  0072                     i1set_leds_top@ledState:	
  4264                           
  4265                           ; 2 bytes @ 0x2
  4266  0072                     	ds	2
  4267  0074                     ??_isr:	
  4268  0074                     ??i1_set_leds_top:	
  4269                           ; 1 bytes @ 0x4
  4270                           
  4271                           
  4272                           ; 1 bytes @ 0x4
  4273  0074                     	ds	5
  4274                           
  4275                           	psect	cstackBANK0
  4276  0020                     __pcstackBANK0:	
  4277  0020                     ?_set_leds_top:	
  4278  0020                     ??_ConfigureOscillator:	
  4279                           ; 1 bytes @ 0x0
  4280                           
  4281  0020                     ??_InitApp:	
  4282                           ; 1 bytes @ 0x0
  4283                           
  4284  0020                     ??_InitializeTaps:	
  4285                           ; 1 bytes @ 0x0
  4286                           
  4287  0020                     ??_update_mode:	
  4288                           ; 1 bytes @ 0x0
  4289                           
  4290  0020                     ??_init_adc:	
  4291                           ; 1 bytes @ 0x0
  4292                           
  4293  0020                     ??_init_pwm:	
  4294                           ; 1 bytes @ 0x0
  4295                           
  4296  0020                     ??_init_timer2:	
  4297                           ; 1 bytes @ 0x0
  4298                           
  4299  0020                     ??_init_timer0:	
  4300                           ; 1 bytes @ 0x0
  4301                           
  4302  0020                     ?_set_leds_bottom:	
  4303                           ; 1 bytes @ 0x0
  4304                           
  4305  0020                     ??_getCurrentLEDState:	
  4306                           ; 1 bytes @ 0x0
  4307                           
  4308  0020                     ??_restoreLEDState:	
  4309                           ; 1 bytes @ 0x0
  4310                           
  4311  0020                     ?_updateSwitchBypassState:	
  4312                           ; 1 bytes @ 0x0
  4313                           
  4314  0020                     ?_adc_convert:	
  4315                           ; 1 bytes @ 0x0
  4316                           
  4317  0020                     ?_FLASH_ReadWord:	
  4318                           ; 2 bytes @ 0x0
  4319                           
  4320  0020                     ?_getSwitchBypassState:	
  4321                           ; 2 bytes @ 0x0
  4322                           
  4323  0020                     ?___wmul:	
  4324                           ; 2 bytes @ 0x0
  4325                           
  4326  0020                     ?___awdiv:	
  4327                           ; 2 bytes @ 0x0
  4328                           
  4329  0020                     ?___ftpack:	
  4330                           ; 2 bytes @ 0x0
  4331                           
  4332  0020                     ?___ftneg:	
  4333                           ; 3 bytes @ 0x0
  4334                           
  4335  0020                     ?___lmul:	
  4336                           ; 3 bytes @ 0x0
  4337                           
  4338  0020                     FLASH_ReadWord@flashAddr:	
  4339                           ; 4 bytes @ 0x0
  4340                           
  4341  0020                     set_leds_top@x:	
  4342                           ; 2 bytes @ 0x0
  4343                           
  4344  0020                     set_leds_bottom@x:	
  4345                           ; 2 bytes @ 0x0
  4346                           
  4347  0020                     updateSwitchBypassState@state:	
  4348                           ; 2 bytes @ 0x0
  4349                           
  4350  0020                     ___wmul@multiplier:	
  4351                           ; 2 bytes @ 0x0
  4352                           
  4353  0020                     ___awdiv@divisor:	
  4354                           ; 2 bytes @ 0x0
  4355                           
  4356  0020                     ___ftpack@arg:	
  4357                           ; 2 bytes @ 0x0
  4358                           
  4359  0020                     ___ftneg@f1:	
  4360                           ; 3 bytes @ 0x0
  4361                           
  4362  0020                     ___lmul@multiplier:	
  4363                           ; 3 bytes @ 0x0
  4364                           
  4365                           
  4366                           ; 4 bytes @ 0x0
  4367  0020                     	ds	1
  4368  0021                     InitializeTaps@itap:	
  4369                           
  4370                           ; 2 bytes @ 0x1
  4371  0021                     	ds	1
  4372  0022                     ??_adc_convert:	
  4373  0022                     ??_FLASH_ReadWord:	
  4374                           ; 1 bytes @ 0x2
  4375                           
  4376  0022                     ??_set_leds_bottom:	
  4377                           ; 1 bytes @ 0x2
  4378                           
  4379  0022                     ??_updateSwitchBypassState:	
  4380                           ; 1 bytes @ 0x2
  4381                           
  4382  0022                     ??_getSwitchBypassState:	
  4383                           ; 1 bytes @ 0x2
  4384                           
  4385  0022                     FLASH_ReadWord@GIEBitValue:	
  4386                           ; 1 bytes @ 0x2
  4387                           
  4388  0022                     set_leds_top@ledState:	
  4389                           ; 1 bytes @ 0x2
  4390                           
  4391  0022                     ___wmul@multiplicand:	
  4392                           ; 2 bytes @ 0x2
  4393                           
  4394  0022                     ___awdiv@dividend:	
  4395                           ; 2 bytes @ 0x2
  4396                           
  4397                           
  4398                           ; 2 bytes @ 0x2
  4399  0022                     	ds	1
  4400  0023                     ??___ftneg:	
  4401  0023                     adc_convert@channel:	
  4402                           ; 1 bytes @ 0x3
  4403                           
  4404  0023                     ___ftpack@exp:	
  4405                           ; 1 bytes @ 0x3
  4406                           
  4407                           
  4408                           ; 1 bytes @ 0x3
  4409  0023                     	ds	1
  4410  0024                     ??_set_leds_top:	
  4411  0024                     ??_ReadSavedSettings:	
  4412                           ; 1 bytes @ 0x4
  4413                           
  4414  0024                     ??___wmul:	
  4415                           ; 1 bytes @ 0x4
  4416                           
  4417  0024                     ??___awdiv:	
  4418                           ; 1 bytes @ 0x4
  4419                           
  4420  0024                     ___ftpack@sign:	
  4421                           ; 1 bytes @ 0x4
  4422                           
  4423  0024                     ___wmul@product:	
  4424                           ; 1 bytes @ 0x4
  4425                           
  4426  0024                     ___lmul@multiplicand:	
  4427                           ; 2 bytes @ 0x4
  4428                           
  4429                           
  4430                           ; 4 bytes @ 0x4
  4431  0024                     	ds	1
  4432  0025                     ??___ftpack:	
  4433  0025                     ___awdiv@counter:	
  4434                           ; 1 bytes @ 0x5
  4435                           
  4436                           
  4437                           ; 1 bytes @ 0x5
  4438  0025                     	ds	1
  4439  0026                     ?___aldiv:	
  4440  0026                     ___awdiv@sign:	
  4441                           ; 4 bytes @ 0x6
  4442                           
  4443  0026                     ___aldiv@divisor:	
  4444                           ; 1 bytes @ 0x6
  4445                           
  4446                           
  4447                           ; 4 bytes @ 0x6
  4448  0026                     	ds	1
  4449  0027                     ___awdiv@quotient:	
  4450                           
  4451                           ; 2 bytes @ 0x7
  4452  0027                     	ds	1
  4453  0028                     ??___lmul:	
  4454  0028                     ?___altoft:	
  4455                           ; 1 bytes @ 0x8
  4456                           
  4457  0028                     ?___awtoft:	
  4458                           ; 3 bytes @ 0x8
  4459                           
  4460  0028                     ?___ftadd:	
  4461                           ; 3 bytes @ 0x8
  4462                           
  4463  0028                     ___awtoft@c:	
  4464                           ; 3 bytes @ 0x8
  4465                           
  4466  0028                     ___ftadd@f1:	
  4467                           ; 2 bytes @ 0x8
  4468                           
  4469  0028                     ___lmul@product:	
  4470                           ; 3 bytes @ 0x8
  4471                           
  4472  0028                     ___altoft@c:	
  4473                           ; 4 bytes @ 0x8
  4474                           
  4475                           
  4476                           ; 4 bytes @ 0x8
  4477  0028                     	ds	2
  4478  002A                     ___aldiv@dividend:	
  4479                           
  4480                           ; 4 bytes @ 0xA
  4481  002A                     	ds	1
  4482  002B                     ??___awtoft:	
  4483  002B                     ___ftadd@f2:	
  4484                           ; 1 bytes @ 0xB
  4485                           
  4486                           
  4487                           ; 3 bytes @ 0xB
  4488  002B                     	ds	1
  4489  002C                     ?_wait_ms:	
  4490  002C                     ??___altoft:	
  4491                           ; 1 bytes @ 0xC
  4492                           
  4493  002C                     wait_ms@time:	
  4494                           ; 1 bytes @ 0xC
  4495                           
  4496                           
  4497                           ; 2 bytes @ 0xC
  4498  002C                     	ds	1
  4499  002D                     ___awtoft@sign:	
  4500                           
  4501                           ; 1 bytes @ 0xD
  4502  002D                     	ds	1
  4503  002E                     ??_read_bottom_tactile:	
  4504  002E                     ??_read_top_tactile:	
  4505                           ; 1 bytes @ 0xE
  4506                           
  4507  002E                     ??_star_tactiles:	
  4508                           ; 1 bytes @ 0xE
  4509                           
  4510  002E                     ??_solidring_tactiles:	
  4511                           ; 1 bytes @ 0xE
  4512                           
  4513  002E                     ?_setSwitchBypassState:	
  4514                           ; 1 bytes @ 0xE
  4515                           
  4516  002E                     ?_setFeedbackState:	
  4517                           ; 1 bytes @ 0xE
  4518                           
  4519  002E                     ??_wait_ms:	
  4520                           ; 1 bytes @ 0xE
  4521                           
  4522  002E                     ??___aldiv:	
  4523                           ; 1 bytes @ 0xE
  4524                           
  4525  002E                     ??___ftadd:	
  4526                           ; 1 bytes @ 0xE
  4527                           
  4528  002E                     ___altoft@exp:	
  4529                           ; 1 bytes @ 0xE
  4530                           
  4531  002E                     setSwitchBypassState@f_state:	
  4532                           ; 1 bytes @ 0xE
  4533                           
  4534  002E                     setFeedbackState@f_state:	
  4535                           ; 2 bytes @ 0xE
  4536                           
  4537                           
  4538                           ; 2 bytes @ 0xE
  4539  002E                     	ds	1
  4540  002F                     ___aldiv@counter:	
  4541  002F                     ___altoft@sign:	
  4542                           ; 1 bytes @ 0xF
  4543                           
  4544                           
  4545                           ; 1 bytes @ 0xF
  4546  002F                     	ds	1
  4547  0030                     ??_setSwitchBypassState:	
  4548  0030                     ??_setFeedbackState:	
  4549                           ; 1 bytes @ 0x10
  4550                           
  4551  0030                     star_tactiles@reverse:	
  4552                           ; 1 bytes @ 0x10
  4553                           
  4554  0030                     solidring_tactiles@ring_delay:	
  4555                           ; 1 bytes @ 0x10
  4556                           
  4557  0030                     ___aldiv@sign:	
  4558                           ; 1 bytes @ 0x10
  4559                           
  4560                           
  4561                           ; 1 bytes @ 0x10
  4562  0030                     	ds	1
  4563  0031                     star_tactiles@iLed:	
  4564  0031                     ___aldiv@quotient:	
  4565                           ; 2 bytes @ 0x11
  4566                           
  4567                           
  4568                           ; 4 bytes @ 0x11
  4569  0031                     	ds	1
  4570  0032                     ??_initSwitchBypass:	
  4571  0032                     ??_updateSwitchBypass:	
  4572                           ; 1 bytes @ 0x12
  4573                           
  4574  0032                     ___ftadd@sign:	
  4575                           ; 1 bytes @ 0x12
  4576                           
  4577  0032                     initSwitchBypass@initState:	
  4578                           ; 1 bytes @ 0x12
  4579                           
  4580                           
  4581                           ; 2 bytes @ 0x12
  4582  0032                     	ds	1
  4583  0033                     ___ftadd@exp2:	
  4584  0033                     star_tactiles@iLed_1388:	
  4585                           ; 1 bytes @ 0x13
  4586                           
  4587                           
  4588                           ; 2 bytes @ 0x13
  4589  0033                     	ds	1
  4590  0034                     ___ftadd@exp1:	
  4591                           
  4592                           ; 1 bytes @ 0x14
  4593  0034                     	ds	1
  4594  0035                     ??_showBootSequence:	
  4595  0035                     ?_modulation:	
  4596                           ; 1 bytes @ 0x15
  4597                           
  4598  0035                     ?___ftmul:	
  4599                           ; 2 bytes @ 0x15
  4600                           
  4601  0035                     modulation@x:	
  4602                           ; 3 bytes @ 0x15
  4603                           
  4604  0035                     ___ftmul@f1:	
  4605                           ; 2 bytes @ 0x15
  4606                           
  4607                           
  4608                           ; 3 bytes @ 0x15
  4609  0035                     	ds	2
  4610  0037                     modulation@y:	
  4611                           
  4612                           ; 2 bytes @ 0x17
  4613  0037                     	ds	1
  4614  0038                     ___ftmul@f2:	
  4615                           
  4616                           ; 3 bytes @ 0x18
  4617  0038                     	ds	1
  4618  0039                     ??_modulation:	
  4619                           
  4620                           ; 1 bytes @ 0x19
  4621  0039                     	ds	2
  4622  003B                     ??___ftmul:	
  4623                           
  4624                           ; 1 bytes @ 0x1B
  4625  003B                     	ds	4
  4626  003F                     ___ftmul@exp:	
  4627                           
  4628                           ; 1 bytes @ 0x1F
  4629  003F                     	ds	1
  4630  0040                     ___ftmul@f3_as_product:	
  4631                           
  4632                           ; 3 bytes @ 0x20
  4633  0040                     	ds	3
  4634  0043                     ___ftmul@cntr:	
  4635                           
  4636                           ; 1 bytes @ 0x23
  4637  0043                     	ds	1
  4638  0044                     ___ftmul@sign:	
  4639                           
  4640                           ; 1 bytes @ 0x24
  4641  0044                     	ds	1
  4642  0045                     ?___ftdiv:	
  4643  0045                     ___ftdiv@f2:	
  4644                           ; 3 bytes @ 0x25
  4645                           
  4646                           
  4647                           ; 3 bytes @ 0x25
  4648  0045                     	ds	3
  4649  0048                     ___ftdiv@f1:	
  4650                           
  4651                           ; 3 bytes @ 0x28
  4652  0048                     	ds	3
  4653  004B                     ??___ftdiv:	
  4654                           
  4655                           ; 1 bytes @ 0x2B
  4656  004B                     	ds	4
  4657  004F                     ___ftdiv@cntr:	
  4658                           
  4659                           ; 1 bytes @ 0x2F
  4660  004F                     	ds	1
  4661  0050                     ___ftdiv@f3:	
  4662                           
  4663                           ; 3 bytes @ 0x30
  4664  0050                     	ds	3
  4665  0053                     ___ftdiv@exp:	
  4666                           
  4667                           ; 1 bytes @ 0x33
  4668  0053                     	ds	1
  4669  0054                     ___ftdiv@sign:	
  4670                           
  4671                           ; 1 bytes @ 0x34
  4672  0054                     	ds	1
  4673  0055                     ?_map:	
  4674  0055                     map@x:	
  4675                           ; 3 bytes @ 0x35
  4676                           
  4677                           
  4678                           ; 3 bytes @ 0x35
  4679  0055                     	ds	3
  4680  0058                     map@in_min:	
  4681                           
  4682                           ; 3 bytes @ 0x38
  4683  0058                     	ds	3
  4684  005B                     map@in_max:	
  4685                           
  4686                           ; 3 bytes @ 0x3B
  4687  005B                     	ds	3
  4688  005E                     map@out_min:	
  4689                           
  4690                           ; 3 bytes @ 0x3E
  4691  005E                     	ds	3
  4692  0061                     map@out_max:	
  4693                           
  4694                           ; 3 bytes @ 0x41
  4695  0061                     	ds	3
  4696  0064                     ??_map:	
  4697  0064                     _map$1988:	
  4698                           ; 1 bytes @ 0x44
  4699                           
  4700                           
  4701                           ; 3 bytes @ 0x44
  4702  0064                     	ds	3
  4703  0067                     ?___fttol:	
  4704  0067                     ___fttol@f1:	
  4705                           ; 4 bytes @ 0x47
  4706                           
  4707                           
  4708                           ; 3 bytes @ 0x47
  4709  0067                     	ds	4
  4710  006B                     ??___fttol:	
  4711                           
  4712                           ; 1 bytes @ 0x4B
  4713  006B                     	ds	4
  4714  006F                     ??_set_subdivision:	
  4715                           
  4716                           	psect	maintext
  4717  0926                     __pmaintext:	
  4718                           ; 1 bytes @ 0x4F
  4719 ;;
  4720 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
  4721 ;;
  4722 ;; *************** function _main *****************
  4723 ;; Defined at:
  4724 ;;		line 82 in file "main.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  tapCntDiviso    2   27[BANK1 ] int 
  4729 ;;  adjusted_pot    2   29[BANK1 ] int 
  4730 ;;  i               2   33[BANK1 ] int 
  4731 ;;  i               2   31[BANK1 ] int 
  4732 ;;  i               2   25[BANK1 ] int 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : B1F/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4743 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4744 ;;      Temps:          0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4745 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4746 ;;Total ram usage:       25 bytes
  4747 ;; Hardware stack levels required when called:    6
  4748 ;; This function calls:
  4749 ;;		_ConfigureOscillator
  4750 ;;		_InitApp
  4751 ;;		_InitializeTaps
  4752 ;;		_ReadSavedSettings
  4753 ;;		___aldiv
  4754 ;;		___altoft
  4755 ;;		___awdiv
  4756 ;;		___awtoft
  4757 ;;		___ftdiv
  4758 ;;		___fttol
  4759 ;;		_adc_convert
  4760 ;;		_initSwitchBypass
  4761 ;;		_map
  4762 ;;		_modulation
  4763 ;;		_read_bottom_tactile
  4764 ;;		_read_top_tactile
  4765 ;;		_set_subdivision
  4766 ;;		_showBootSequence
  4767 ;;		_updateSwitchBypass
  4768 ;;		_update_mode
  4769 ;; This function is called by:
  4770 ;;		Startup code after reset
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function _main
  4776  0926                     _main:	
  4777                           
  4778                           ;main.c: 83: ConfigureOscillator();
  4779                           
  4780                           ;incstack = 0
  4781                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4782  0926  319F  2713  3189   	fcall	_ConfigureOscillator
  4783                           
  4784                           ;main.c: 84: InitApp();
  4785  0929  3190  2073  3189   	fcall	_InitApp
  4786                           
  4787                           ;main.c: 87: InitializeTaps();
  4788  092C  3190  2022  3189   	fcall	_InitializeTaps
  4789                           
  4790                           ;main.c: 88: initSwitchBypass();
  4791  092F  319F  274A  3189   	fcall	_initSwitchBypass
  4792                           
  4793                           ;main.c: 91: ReadSavedSettings();
  4794  0932  3194  24F8  3189   	fcall	_ReadSavedSettings
  4795  0935                     l3846:	
  4796                           ;main.c: 93: while (1) {
  4797                           
  4798                           
  4799                           ;main.c: 96: read_bottom_tactile();
  4800  0935  3191  2104  3189   	fcall	_read_bottom_tactile
  4801                           
  4802                           ;main.c: 97: read_top_tactile();
  4803  0938  3191  2135  3189   	fcall	_read_top_tactile
  4804                           
  4805                           ;main.c: 100: update_mode();
  4806  093B  3193  23CD  3189   	fcall	_update_mode
  4807                           
  4808                           ;main.c: 102: if (PORTDbits.RD7 == 0) {
  4809  093E  0020               	movlb	0	; select bank0
  4810  093F  1B8F               	btfsc	15,7	;volatile
  4811  0940  295F               	goto	l3860
  4812                           
  4813                           ;main.c: 103: debounce_mode1++;
  4814  0941  3001               	movlw	1
  4815  0942  0022               	movlb	2	; select bank2
  4816  0943  07C2               	addwf	_debounce_mode1^(0+256),f
  4817  0944  3000               	movlw	0
  4818  0945  3DC3               	addwfc	(_debounce_mode1+1)^(0+256),f
  4819                           
  4820                           ;main.c: 104: if (debounce_mode1 > 25) {
  4821  0946  0843               	movf	(_debounce_mode1+1)^(0+256),w
  4822  0947  3A80               	xorlw	128
  4823  0948  0021               	movlb	1	; select bank1
  4824  0949  00AA               	movwf	??_main^(0+128)
  4825  094A  3080               	movlw	128
  4826  094B  022A               	subwf	??_main^(0+128),w
  4827  094C  1D03               	skipz
  4828  094D  2951               	goto	u3835
  4829  094E  301A               	movlw	26
  4830  094F  0022               	movlb	2	; select bank2
  4831  0950  0242               	subwf	_debounce_mode1^(0+256),w
  4832  0951                     u3835:	
  4833  0951  1C03               	skipc
  4834  0952  2962               	goto	l3862
  4835                           
  4836                           ;main.c: 105: debounce_mode1 = 25;
  4837  0953  3019               	movlw	25
  4838  0954  0022               	movlb	2	; select bank2
  4839  0955  00C2               	movwf	_debounce_mode1^(0+256)
  4840  0956  3000               	movlw	0
  4841  0957  00C3               	movwf	(_debounce_mode1^(0+256)+1)
  4842                           
  4843                           ;main.c: 109: showBootSequence();
  4844  0958  3190  2048  3189   	fcall	_showBootSequence
  4845  095B                     l260:	
  4846                           ;main.c: 112: while (PORTDbits.RD7 == 0) {
  4847                           
  4848  095B  0020               	movlb	0	; select bank0
  4849  095C  1B8F               	btfsc	15,7	;volatile
  4850  095D  2962               	goto	l3862
  4851  095E  295B               	goto	l260
  4852  095F                     l3860:	
  4853                           ;main.c: 113: }
  4854                           ;main.c: 114: }
  4855                           ;main.c: 115: } else {
  4856                           
  4857                           
  4858                           ;main.c: 116: debounce_mode1 = 0;
  4859  095F  0022               	movlb	2	; select bank2
  4860  0960  01C2               	clrf	_debounce_mode1^(0+256)
  4861  0961  01C3               	clrf	(_debounce_mode1+1)^(0+256)
  4862  0962                     l3862:	
  4863                           
  4864                           ;main.c: 117: }
  4865                           ;main.c: 119: updateSwitchBypass();
  4866  0962  3187  2707  3189   	fcall	_updateSwitchBypass
  4867                           
  4868                           ;main.c: 158: if (PORTEbits.RE0 == 0) {
  4869  0965  0020               	movlb	0	; select bank0
  4870  0966  1810               	btfsc	16,0	;volatile
  4871  0967  2AED               	goto	l3918
  4872                           
  4873                           ;main.c: 159: debounce_count++;
  4874  0968  3001               	movlw	1
  4875  0969  0022               	movlb	2	; select bank2
  4876  096A  07C0               	addwf	_debounce_count^(0+256),f
  4877  096B  3000               	movlw	0
  4878  096C  3DC1               	addwfc	(_debounce_count+1)^(0+256),f
  4879                           
  4880                           ;main.c: 160: if (debounce_count > 25) {
  4881  096D  0841               	movf	(_debounce_count+1)^(0+256),w
  4882  096E  3A80               	xorlw	128
  4883  096F  0021               	movlb	1	; select bank1
  4884  0970  00AA               	movwf	??_main^(0+128)
  4885  0971  3080               	movlw	128
  4886  0972  022A               	subwf	??_main^(0+128),w
  4887  0973  1D03               	skipz
  4888  0974  2978               	goto	u3865
  4889  0975  301A               	movlw	26
  4890  0976  0022               	movlb	2	; select bank2
  4891  0977  0240               	subwf	_debounce_count^(0+256),w
  4892  0978                     u3865:	
  4893  0978  1C03               	skipc
  4894  0979  2AF0               	goto	l3920
  4895                           
  4896                           ;main.c: 161: if (tap_timer >= 1563) {
  4897  097A  1BFC               	btfsc	_tap_timer+3,7	;volatile
  4898  097B  29CB               	goto	l3882
  4899  097C  087C               	movf	_tap_timer+3,w	;volatile
  4900  097D  1D03               	btfss	3,2
  4901  097E  2988               	goto	l3870
  4902  097F  087B               	movf	_tap_timer+2,w	;volatile
  4903  0980  1D03               	btfss	3,2
  4904  0981  2988               	goto	l3870
  4905  0982  301B               	movlw	27
  4906  0983  0279               	subwf	_tap_timer,w	;volatile
  4907  0984  3006               	movlw	6
  4908  0985  3B7A               	subwfb	_tap_timer+1,w	;volatile
  4909  0986  1C03               	btfss	3,0
  4910  0987  29CB               	goto	l3882
  4911  0988                     l3870:	
  4912                           
  4913                           ;main.c: 162: tap_timer = 0;
  4914  0988  3000               	movlw	0
  4915  0989  00FC               	movwf	_tap_timer+3	;volatile
  4916  098A  3000               	movlw	0
  4917  098B  00FB               	movwf	_tap_timer+2	;volatile
  4918  098C  3000               	movlw	0
  4919  098D  00FA               	movwf	_tap_timer+1	;volatile
  4920  098E  3000               	movlw	0
  4921  098F  00F9               	movwf	_tap_timer	;volatile
  4922                           
  4923                           ;main.c: 163: tap_iteration = 1;
  4924  0990  3001               	movlw	1
  4925  0991  0021               	movlb	1	; select bank1
  4926  0992  00EB               	movwf	_tap_iteration^(0+128)
  4927  0993  3000               	movlw	0
  4928  0994  00EC               	movwf	(_tap_iteration^(0+128)+1)
  4929                           
  4930                           ;main.c: 164: tap_total = 0;
  4931  0995  3000               	movlw	0
  4932  0996  0023               	movlb	3	; select bank3
  4933  0997  00CF               	movwf	(_tap_total+3)^(0+384)
  4934  0998  3000               	movlw	0
  4935  0999  00CE               	movwf	(_tap_total+2)^(0+384)
  4936  099A  3000               	movlw	0
  4937  099B  00CD               	movwf	(_tap_total+1)^(0+384)
  4938  099C  3000               	movlw	0
  4939  099D  00CC               	movwf	_tap_total^(0+384)
  4940                           
  4941                           ;main.c: 165: delay_time_changed = 0;
  4942  099E  0022               	movlb	2	; select bank2
  4943  099F  01DC               	clrf	_delay_time_changed^(0+256)
  4944  09A0  01DD               	clrf	(_delay_time_changed+1)^(0+256)
  4945                           
  4946                           ;main.c: 167: for (iCnt = 1; iCnt <= num_taps; iCnt++) {
  4947  09A1  0021               	movlb	1	; select bank1
  4948  09A2  01D5               	clrf	_iCnt^(0+128)
  4949  09A3  0AD5               	incf	_iCnt^(0+128),f
  4950  09A4                     l3880:	
  4951  09A4  086A               	movf	(_num_taps+1)^(0+128),w
  4952  09A5  3A80               	xorlw	128
  4953  09A6  00AA               	movwf	??_main^(0+128)
  4954  09A7  3080               	movlw	128
  4955  09A8  022A               	subwf	??_main^(0+128),w
  4956  09A9  1D03               	skipz
  4957  09AA  29AD               	goto	u3895
  4958  09AB  0855               	movf	_iCnt^(0+128),w
  4959  09AC  0269               	subwf	_num_taps^(0+128),w
  4960  09AD                     u3895:	
  4961  09AD  1C03               	btfss	3,0
  4962  09AE  29C7               	goto	l270
  4963                           
  4964                           ;main.c: 168: tap_history[iCnt] = 0;
  4965  09AF  0021               	movlb	1	; select bank1
  4966  09B0  0855               	movf	_iCnt^(0+128),w
  4967  09B1  00AA               	movwf	??_main^(0+128)
  4968  09B2  3001               	movlw	1
  4969  09B3                     u3885:	
  4970  09B3  35AA               	lslf	??_main^(0+128),f
  4971  09B4  3EFF               	addlw	-1
  4972  09B5  1D03               	skipz
  4973  09B6  29B3               	goto	u3885
  4974  09B7  352A               	lslf	??_main^(0+128),w
  4975  09B8  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4976  09B9  0086               	movwf	6
  4977  09BA  3001               	movlw	1	; select bank2/3
  4978  09BB  0087               	movwf	7
  4979  09BC  3000               	movlw	0
  4980  09BD  3FC0               	movwi [0]fsr1
  4981  09BE  3000               	movlw	0
  4982  09BF  3FC1               	movwi [1]fsr1
  4983  09C0  3FC2               	movwi [2]fsr1
  4984  09C1  3FC3               	movwi [3]fsr1
  4985  09C2  3001               	movlw	1
  4986  09C3  00AA               	movwf	??_main^(0+128)
  4987  09C4  082A               	movf	??_main^(0+128),w
  4988  09C5  07D5               	addwf	_iCnt^(0+128),f
  4989  09C6  29A4               	goto	l3880
  4990  09C7                     l270:	
  4991                           ;main.c: 169: }
  4992                           ;main.c: 170: while (PORTEbits.RE0 == 0) {
  4993                           
  4994  09C7  0020               	movlb	0	; select bank0
  4995  09C8  1810               	btfsc	16,0	;volatile
  4996  09C9  2AF0               	goto	l3920
  4997  09CA  29C7               	goto	l270
  4998  09CB                     l3882:	
  4999                           ;main.c: 171: }
  5000                           ;main.c: 172: } else if (tap_timer < 1563) {
  5001                           
  5002  09CB  1BFC               	btfsc	_tap_timer+3,7	;volatile
  5003  09CC  29D9               	goto	l3884
  5004  09CD  087C               	movf	_tap_timer+3,w	;volatile
  5005  09CE  1D03               	btfss	3,2
  5006  09CF  2AF0               	goto	l3920
  5007  09D0  087B               	movf	_tap_timer+2,w	;volatile
  5008  09D1  1D03               	btfss	3,2
  5009  09D2  2AF0               	goto	l3920
  5010  09D3  301B               	movlw	27
  5011  09D4  0279               	subwf	_tap_timer,w	;volatile
  5012  09D5  3006               	movlw	6
  5013  09D6  3B7A               	subwfb	_tap_timer+1,w	;volatile
  5014  09D7  1803               	btfsc	3,0
  5015  09D8  2AF0               	goto	l3920
  5016  09D9                     l3884:	
  5017                           
  5018                           ;main.c: 173: if (tap_iteration <= 4) {
  5019  09D9  0021               	movlb	1	; select bank1
  5020  09DA  086C               	movf	(_tap_iteration+1)^(0+128),w
  5021  09DB  3A80               	xorlw	128
  5022  09DC  00AA               	movwf	??_main^(0+128)
  5023  09DD  3080               	movlw	128
  5024  09DE  022A               	subwf	??_main^(0+128),w
  5025  09DF  1D03               	skipz
  5026  09E0  29E3               	goto	u3925
  5027  09E1  3005               	movlw	5
  5028  09E2  026B               	subwf	_tap_iteration^(0+128),w
  5029  09E3                     u3925:	
  5030  09E3  1803               	skipnc
  5031  09E4  2AE9               	goto	l282
  5032                           
  5033                           ;main.c: 174: if (tap_timer >= 1172) {
  5034  09E5  1BFC               	btfsc	_tap_timer+3,7	;volatile
  5035  09E6  29FB               	goto	l276
  5036  09E7  087C               	movf	_tap_timer+3,w	;volatile
  5037  09E8  1D03               	btfss	3,2
  5038  09E9  29F3               	goto	l3888
  5039  09EA  087B               	movf	_tap_timer+2,w	;volatile
  5040  09EB  1D03               	btfss	3,2
  5041  09EC  29F3               	goto	l3888
  5042  09ED  3094               	movlw	148
  5043  09EE  0279               	subwf	_tap_timer,w	;volatile
  5044  09EF  3004               	movlw	4
  5045  09F0  3B7A               	subwfb	_tap_timer+1,w	;volatile
  5046  09F1  1C03               	btfss	3,0
  5047  09F2  29FB               	goto	l276
  5048  09F3                     l3888:	
  5049                           
  5050                           ;main.c: 175: tap_timer = 1172;
  5051  09F3  3000               	movlw	0
  5052  09F4  00FC               	movwf	_tap_timer+3	;volatile
  5053  09F5  3000               	movlw	0
  5054  09F6  00FB               	movwf	_tap_timer+2	;volatile
  5055  09F7  3004               	movlw	4
  5056  09F8  00FA               	movwf	_tap_timer+1	;volatile
  5057  09F9  3094               	movlw	148
  5058  09FA  00F9               	movwf	_tap_timer	;volatile
  5059  09FB                     l276:	
  5060                           
  5061                           ;main.c: 176: }
  5062                           ;main.c: 177: int tapCntDivisor = num_taps;
  5063  09FB  0021               	movlb	1	; select bank1
  5064  09FC  086A               	movf	(_num_taps+1)^(0+128),w
  5065  09FD  00BC               	movwf	(main@tapCntDivisor+1)^(0+128)
  5066  09FE  0869               	movf	_num_taps^(0+128),w
  5067  09FF  00BB               	movwf	main@tapCntDivisor^(0+128)
  5068                           
  5069                           ;main.c: 178: if (tap_iteration <= num_taps) {
  5070  0A00  086A               	movf	(_num_taps+1)^(0+128),w
  5071  0A01  3A80               	xorlw	128
  5072  0A02  00AA               	movwf	??_main^(0+128)
  5073  0A03  086C               	movf	(_tap_iteration+1)^(0+128),w
  5074  0A04  3A80               	xorlw	128
  5075  0A05  022A               	subwf	??_main^(0+128),w
  5076  0A06  1D03               	skipz
  5077  0A07  2A0A               	goto	u3945
  5078  0A08  086B               	movf	_tap_iteration^(0+128),w
  5079  0A09  0269               	subwf	_num_taps^(0+128),w
  5080  0A0A                     u3945:	
  5081  0A0A  1C03               	skipc
  5082  0A0B  2A2F               	goto	l3896
  5083                           
  5084                           ;main.c: 179: tap_total += tap_timer;
  5085  0A0C  0879               	movf	_tap_timer,w	;volatile
  5086  0A0D  0023               	movlb	3	; select bank3
  5087  0A0E  07CC               	addwf	_tap_total^(0+384),f
  5088  0A0F  087A               	movf	_tap_timer+1,w	;volatile
  5089  0A10  3DCD               	addwfc	(_tap_total+1)^(0+384),f
  5090  0A11  087B               	movf	_tap_timer+2,w	;volatile
  5091  0A12  3DCE               	addwfc	(_tap_total+2)^(0+384),f
  5092  0A13  087C               	movf	_tap_timer+3,w	;volatile
  5093  0A14  3DCF               	addwfc	(_tap_total+3)^(0+384),f
  5094                           
  5095                           ;main.c: 180: tap_history[tap_iteration] = tap_timer;
  5096  0A15  0021               	movlb	1	; select bank1
  5097  0A16  086B               	movf	_tap_iteration^(0+128),w
  5098  0A17  00AA               	movwf	??_main^(0+128)
  5099  0A18  3001               	movlw	1
  5100  0A19                     u3955:	
  5101  0A19  35AA               	lslf	??_main^(0+128),f
  5102  0A1A  3EFF               	addlw	-1
  5103  0A1B  1D03               	skipz
  5104  0A1C  2A19               	goto	u3955
  5105  0A1D  352A               	lslf	??_main^(0+128),w
  5106  0A1E  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  5107  0A1F  0086               	movwf	6
  5108  0A20  3001               	movlw	1	; select bank2/3
  5109  0A21  0087               	movwf	7
  5110  0A22  0879               	movf	_tap_timer,w	;volatile
  5111  0A23  3FC0               	movwi [0]fsr1
  5112  0A24  087A               	movf	_tap_timer+1,w	;volatile
  5113  0A25  3FC1               	movwi [1]fsr1
  5114  0A26  087B               	movf	_tap_timer+2,w	;volatile
  5115  0A27  3FC2               	movwi [2]fsr1
  5116  0A28  087C               	movf	_tap_timer+3,w	;volatile
  5117  0A29  3FC3               	movwi [3]fsr1
  5118                           
  5119                           ;main.c: 181: tapCntDivisor = tap_iteration;
  5120  0A2A  086C               	movf	(_tap_iteration+1)^(0+128),w
  5121  0A2B  00BC               	movwf	(main@tapCntDivisor+1)^(0+128)
  5122  0A2C  086B               	movf	_tap_iteration^(0+128),w
  5123  0A2D  00BB               	movwf	main@tapCntDivisor^(0+128)
  5124                           
  5125                           ;main.c: 182: } else {
  5126  0A2E  2AA7               	goto	l3910
  5127  0A2F                     l3896:	
  5128                           
  5129                           ;main.c: 183: tap_total = 0;
  5130  0A2F  3000               	movlw	0
  5131  0A30  0023               	movlb	3	; select bank3
  5132  0A31  00CF               	movwf	(_tap_total+3)^(0+384)
  5133  0A32  3000               	movlw	0
  5134  0A33  00CE               	movwf	(_tap_total+2)^(0+384)
  5135  0A34  3000               	movlw	0
  5136  0A35  00CD               	movwf	(_tap_total+1)^(0+384)
  5137  0A36  3000               	movlw	0
  5138  0A37  00CC               	movwf	_tap_total^(0+384)
  5139                           
  5140                           ;main.c: 184: for (iCnt = 1; iCnt < num_taps; iCnt++) {
  5141  0A38  0021               	movlb	1	; select bank1
  5142  0A39  01D5               	clrf	_iCnt^(0+128)
  5143  0A3A  0AD5               	incf	_iCnt^(0+128),f
  5144  0A3B                     l3904:	
  5145  0A3B  086A               	movf	(_num_taps+1)^(0+128),w
  5146  0A3C  3A80               	xorlw	128
  5147  0A3D  3C80               	sublw	128
  5148  0A3E  1D03               	skipz
  5149  0A3F  2A42               	goto	u3995
  5150  0A40  0869               	movf	_num_taps^(0+128),w
  5151  0A41  0255               	subwf	_iCnt^(0+128),w
  5152  0A42                     u3995:	
  5153  0A42  1803               	btfsc	3,0
  5154  0A43  2A89               	goto	l3906
  5155                           
  5156                           ;main.c: 185: tap_history[iCnt] = tap_history[iCnt + 1];
  5157  0A44  0021               	movlb	1	; select bank1
  5158  0A45  0855               	movf	_iCnt^(0+128),w
  5159  0A46  00AA               	movwf	??_main^(0+128)
  5160  0A47  3001               	movlw	1
  5161  0A48                     u3965:	
  5162  0A48  35AA               	lslf	??_main^(0+128),f
  5163  0A49  3EFF               	addlw	-1
  5164  0A4A  1D03               	skipz
  5165  0A4B  2A48               	goto	u3965
  5166  0A4C  352A               	lslf	??_main^(0+128),w
  5167  0A4D  3E04               	addlw	4
  5168  0A4E  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  5169  0A4F  0086               	movwf	6
  5170  0A50  3001               	movlw	1	; select bank2/3
  5171  0A51  0087               	movwf	7
  5172  0A52  3F40               	moviw [0]fsr1
  5173  0A53  00AB               	movwf	(??_main+1)^(0+128)
  5174  0A54  3F41               	moviw [1]fsr1
  5175  0A55  00AC               	movwf	((??_main+1)^(0+128)+1)
  5176  0A56  3F42               	moviw [2]fsr1
  5177  0A57  00AD               	movwf	((??_main+1)^(0+128)+2)
  5178  0A58  3F43               	moviw [3]fsr1
  5179  0A59  00AE               	movwf	((??_main+1)^(0+128)+3)
  5180  0A5A  0855               	movf	_iCnt^(0+128),w
  5181  0A5B  00AF               	movwf	(??_main+5)^(0+128)
  5182  0A5C  3001               	movlw	1
  5183  0A5D                     u3975:	
  5184  0A5D  35AF               	lslf	(??_main+5)^(0+128),f
  5185  0A5E  3EFF               	addlw	-1
  5186  0A5F  1D03               	skipz
  5187  0A60  2A5D               	goto	u3975
  5188  0A61  352F               	lslf	(??_main+5)^(0+128),w
  5189  0A62  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  5190  0A63  0086               	movwf	6
  5191  0A64  3001               	movlw	1	; select bank2/3
  5192  0A65  0087               	movwf	7
  5193  0A66  082B               	movf	(??_main+1)^(0+128),w
  5194  0A67  3FC0               	movwi [0]fsr1
  5195  0A68  082C               	movf	(??_main+2)^(0+128),w
  5196  0A69  3FC1               	movwi [1]fsr1
  5197  0A6A  082D               	movf	(??_main+3)^(0+128),w
  5198  0A6B  3FC2               	movwi [2]fsr1
  5199  0A6C  082E               	movf	(??_main+4)^(0+128),w
  5200  0A6D  3FC3               	movwi [3]fsr1
  5201                           
  5202                           ;main.c: 186: tap_total += tap_history[iCnt];
  5203  0A6E  0855               	movf	_iCnt^(0+128),w
  5204  0A6F  00AA               	movwf	??_main^(0+128)
  5205  0A70  3001               	movlw	1
  5206  0A71                     u3985:	
  5207  0A71  35AA               	lslf	??_main^(0+128),f
  5208  0A72  3EFF               	addlw	-1
  5209  0A73  1D03               	skipz
  5210  0A74  2A71               	goto	u3985
  5211  0A75  352A               	lslf	??_main^(0+128),w
  5212  0A76  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  5213  0A77  0086               	movwf	6
  5214  0A78  3001               	movlw	1	; select bank2/3
  5215  0A79  0087               	movwf	7
  5216  0A7A  3F40               	moviw [0]fsr1
  5217  0A7B  0023               	movlb	3	; select bank3
  5218  0A7C  07CC               	addwf	_tap_total^(0+384),f
  5219  0A7D  3F41               	moviw [1]fsr1
  5220  0A7E  3DCD               	addwfc	(_tap_total+1)^(0+384),f
  5221  0A7F  3F42               	moviw [2]fsr1
  5222  0A80  3DCE               	addwfc	(_tap_total+2)^(0+384),f
  5223  0A81  3F43               	moviw [3]fsr1
  5224  0A82  3DCF               	addwfc	(_tap_total+3)^(0+384),f
  5225  0A83  3001               	movlw	1
  5226  0A84  0021               	movlb	1	; select bank1
  5227  0A85  00AA               	movwf	??_main^(0+128)
  5228  0A86  082A               	movf	??_main^(0+128),w
  5229  0A87  07D5               	addwf	_iCnt^(0+128),f
  5230  0A88  2A3B               	goto	l3904
  5231  0A89                     l3906:	
  5232                           
  5233                           ;main.c: 187: }
  5234                           ;main.c: 188: tap_history[num_taps] = tap_timer;
  5235  0A89  0021               	movlb	1	; select bank1
  5236  0A8A  0869               	movf	_num_taps^(0+128),w
  5237  0A8B  00AA               	movwf	??_main^(0+128)
  5238  0A8C  3001               	movlw	1
  5239  0A8D                     u4005:	
  5240  0A8D  35AA               	lslf	??_main^(0+128),f
  5241  0A8E  3EFF               	addlw	-1
  5242  0A8F  1D03               	skipz
  5243  0A90  2A8D               	goto	u4005
  5244  0A91  352A               	lslf	??_main^(0+128),w
  5245  0A92  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  5246  0A93  0086               	movwf	6
  5247  0A94  3001               	movlw	1	; select bank2/3
  5248  0A95  0087               	movwf	7
  5249  0A96  0879               	movf	_tap_timer,w	;volatile
  5250  0A97  3FC0               	movwi [0]fsr1
  5251  0A98  087A               	movf	_tap_timer+1,w	;volatile
  5252  0A99  3FC1               	movwi [1]fsr1
  5253  0A9A  087B               	movf	_tap_timer+2,w	;volatile
  5254  0A9B  3FC2               	movwi [2]fsr1
  5255  0A9C  087C               	movf	_tap_timer+3,w	;volatile
  5256  0A9D  3FC3               	movwi [3]fsr1
  5257                           
  5258                           ;main.c: 189: tap_total += tap_timer;
  5259  0A9E  0879               	movf	_tap_timer,w	;volatile
  5260  0A9F  0023               	movlb	3	; select bank3
  5261  0AA0  07CC               	addwf	_tap_total^(0+384),f
  5262  0AA1  087A               	movf	_tap_timer+1,w	;volatile
  5263  0AA2  3DCD               	addwfc	(_tap_total+1)^(0+384),f
  5264  0AA3  087B               	movf	_tap_timer+2,w	;volatile
  5265  0AA4  3DCE               	addwfc	(_tap_total+2)^(0+384),f
  5266  0AA5  087C               	movf	_tap_timer+3,w	;volatile
  5267  0AA6  3DCF               	addwfc	(_tap_total+3)^(0+384),f
  5268  0AA7                     l3910:	
  5269                           
  5270                           ;main.c: 190: }
  5271                           ;main.c: 192: baseline_delay_time = tap_total / tapCntDivisor;
  5272  0AA7  0021               	movlb	1	; select bank1
  5273  0AA8  083B               	movf	main@tapCntDivisor^(0+128),w
  5274  0AA9  0020               	movlb	0	; select bank0
  5275  0AAA  00A6               	movwf	___aldiv@divisor
  5276  0AAB  0021               	movlb	1	; select bank1
  5277  0AAC  083C               	movf	(main@tapCntDivisor+1)^(0+128),w
  5278  0AAD  0020               	movlb	0	; select bank0
  5279  0AAE  00A7               	movwf	___aldiv@divisor+1
  5280  0AAF  0D89               	rlf	9,f
  5281  0AB0  3B89               	subwfb	9,f
  5282  0AB1  0989               	comf	9,f
  5283  0AB2  00A8               	movwf	___aldiv@divisor+2
  5284  0AB3  00A9               	movwf	___aldiv@divisor+3
  5285  0AB4  0023               	movlb	3	; select bank3
  5286  0AB5  084F               	movf	(_tap_total+3)^(0+384),w
  5287  0AB6  0020               	movlb	0	; select bank0
  5288  0AB7  00AD               	movwf	___aldiv@dividend+3
  5289  0AB8  0023               	movlb	3	; select bank3
  5290  0AB9  084E               	movf	(_tap_total+2)^(0+384),w
  5291  0ABA  0020               	movlb	0	; select bank0
  5292  0ABB  00AC               	movwf	___aldiv@dividend+2
  5293  0ABC  0023               	movlb	3	; select bank3
  5294  0ABD  084D               	movf	(_tap_total+1)^(0+384),w
  5295  0ABE  0020               	movlb	0	; select bank0
  5296  0ABF  00AB               	movwf	___aldiv@dividend+1
  5297  0AC0  0023               	movlb	3	; select bank3
  5298  0AC1  084C               	movf	_tap_total^(0+384),w
  5299  0AC2  0020               	movlb	0	; select bank0
  5300  0AC3  00AA               	movwf	___aldiv@dividend
  5301  0AC4  3196  2654  3189   	fcall	___aldiv
  5302  0AC7  0020               	movlb	0	; select bank0
  5303  0AC8  0829               	movf	?___aldiv+3,w
  5304  0AC9  0021               	movlb	1	; select bank1
  5305  0ACA  00DE               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  5306  0ACB  0020               	movlb	0	; select bank0
  5307  0ACC  0828               	movf	?___aldiv+2,w
  5308  0ACD  0021               	movlb	1	; select bank1
  5309  0ACE  00DD               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  5310  0ACF  0020               	movlb	0	; select bank0
  5311  0AD0  0827               	movf	?___aldiv+1,w
  5312  0AD1  0021               	movlb	1	; select bank1
  5313  0AD2  00DC               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  5314  0AD3  0020               	movlb	0	; select bank0
  5315  0AD4  0826               	movf	?___aldiv,w
  5316  0AD5  0021               	movlb	1	; select bank1
  5317  0AD6  00DB               	movwf	_baseline_delay_time^(0+128)	;volatile
  5318                           
  5319                           ;main.c: 193: delay_time_changed = 1;
  5320  0AD7  3001               	movlw	1
  5321  0AD8  0022               	movlb	2	; select bank2
  5322  0AD9  00DC               	movwf	_delay_time_changed^(0+256)
  5323  0ADA  3000               	movlw	0
  5324  0ADB  00DD               	movwf	(_delay_time_changed^(0+256)+1)
  5325                           
  5326                           ;main.c: 194: tap_timer = 0;
  5327  0ADC  3000               	movlw	0
  5328  0ADD  00FC               	movwf	_tap_timer+3	;volatile
  5329  0ADE  3000               	movlw	0
  5330  0ADF  00FB               	movwf	_tap_timer+2	;volatile
  5331  0AE0  3000               	movlw	0
  5332  0AE1  00FA               	movwf	_tap_timer+1	;volatile
  5333  0AE2  3000               	movlw	0
  5334  0AE3  00F9               	movwf	_tap_timer	;volatile
  5335                           
  5336                           ;main.c: 196: tap_iteration++;
  5337  0AE4  3001               	movlw	1
  5338  0AE5  0021               	movlb	1	; select bank1
  5339  0AE6  07EB               	addwf	_tap_iteration^(0+128),f
  5340  0AE7  3000               	movlw	0
  5341  0AE8  3DEC               	addwfc	(_tap_iteration+1)^(0+128),f
  5342  0AE9                     l282:	
  5343                           ;main.c: 197: }
  5344                           ;main.c: 198: while (PORTEbits.RE0 == 0) {
  5345                           
  5346  0AE9  0020               	movlb	0	; select bank0
  5347  0AEA  1810               	btfsc	16,0	;volatile
  5348  0AEB  2AF0               	goto	l3920
  5349  0AEC  2AE9               	goto	l282
  5350  0AED                     l3918:	
  5351                           ;main.c: 199: }
  5352                           ;main.c: 200: }
  5353                           ;main.c: 201: }
  5354                           ;main.c: 202: } else {
  5355                           
  5356                           
  5357                           ;main.c: 203: debounce_count = 0;
  5358  0AED  0022               	movlb	2	; select bank2
  5359  0AEE  01C0               	clrf	_debounce_count^(0+256)
  5360  0AEF  01C1               	clrf	(_debounce_count+1)^(0+256)
  5361  0AF0                     l3920:	
  5362                           
  5363                           ;main.c: 204: }
  5364                           ;main.c: 209: knob_1_pos = adc_convert(0);
  5365  0AF0  3000               	movlw	0
  5366  0AF1  319F  27AB  3189   	fcall	_adc_convert
  5367  0AF4  0020               	movlb	0	; select bank0
  5368  0AF5  0821               	movf	?_adc_convert+1,w
  5369  0AF6  0022               	movlb	2	; select bank2
  5370  0AF7  00CB               	movwf	(_knob_1_pos+1)^(0+256)
  5371  0AF8  0020               	movlb	0	; select bank0
  5372  0AF9  0820               	movf	?_adc_convert,w
  5373  0AFA  0022               	movlb	2	; select bank2
  5374  0AFB  00CA               	movwf	_knob_1_pos^(0+256)
  5375                           
  5376                           ;main.c: 210: knob_2_pos = adc_convert(1);
  5377  0AFC  3001               	movlw	1
  5378  0AFD  319F  27AB  3189   	fcall	_adc_convert
  5379  0B00  0020               	movlb	0	; select bank0
  5380  0B01  0821               	movf	?_adc_convert+1,w
  5381  0B02  0022               	movlb	2	; select bank2
  5382  0B03  00CD               	movwf	(_knob_2_pos+1)^(0+256)
  5383  0B04  0020               	movlb	0	; select bank0
  5384  0B05  0820               	movf	?_adc_convert,w
  5385  0B06  0022               	movlb	2	; select bank2
  5386  0B07  00CC               	movwf	_knob_2_pos^(0+256)
  5387                           
  5388                           ;main.c: 211: knob_3_pos = adc_convert(2);
  5389  0B08  3002               	movlw	2
  5390  0B09  319F  27AB  3189   	fcall	_adc_convert
  5391  0B0C  0020               	movlb	0	; select bank0
  5392  0B0D  0821               	movf	?_adc_convert+1,w
  5393  0B0E  0022               	movlb	2	; select bank2
  5394  0B0F  00CF               	movwf	(_knob_3_pos+1)^(0+256)
  5395  0B10  0020               	movlb	0	; select bank0
  5396  0B11  0820               	movf	?_adc_convert,w
  5397  0B12  0022               	movlb	2	; select bank2
  5398  0B13  00CE               	movwf	_knob_3_pos^(0+256)
  5399                           
  5400                           ;main.c: 212: knob_4_pos = adc_convert(3);
  5401  0B14  3003               	movlw	3
  5402  0B15  319F  27AB  3189   	fcall	_adc_convert
  5403  0B18  0020               	movlb	0	; select bank0
  5404  0B19  0821               	movf	?_adc_convert+1,w
  5405  0B1A  0022               	movlb	2	; select bank2
  5406  0B1B  00D1               	movwf	(_knob_4_pos+1)^(0+256)
  5407  0B1C  0020               	movlb	0	; select bank0
  5408  0B1D  0820               	movf	?_adc_convert,w
  5409  0B1E  0022               	movlb	2	; select bank2
  5410  0B1F  00D0               	movwf	_knob_4_pos^(0+256)
  5411                           
  5412                           ;main.c: 213: knob_5_pos = adc_convert(4);
  5413  0B20  3004               	movlw	4
  5414  0B21  319F  27AB  3189   	fcall	_adc_convert
  5415  0B24  0020               	movlb	0	; select bank0
  5416  0B25  0821               	movf	?_adc_convert+1,w
  5417  0B26  0022               	movlb	2	; select bank2
  5418  0B27  00D3               	movwf	(_knob_5_pos+1)^(0+256)
  5419  0B28  0020               	movlb	0	; select bank0
  5420  0B29  0820               	movf	?_adc_convert,w
  5421  0B2A  0022               	movlb	2	; select bank2
  5422  0B2B  00D2               	movwf	_knob_5_pos^(0+256)
  5423                           
  5424                           ;main.c: 226: if (knob_1_pos - knob1_prev >= 4 || knob_1_pos - knob1_prev <= -4) {
  5425  0B2C  0021               	movlb	1	; select bank1
  5426  0B2D  0965               	comf	_knob1_prev^(0+128),w
  5427  0B2E  00AA               	movwf	??_main^(0+128)
  5428  0B2F  0966               	comf	(_knob1_prev+1)^(0+128),w
  5429  0B30  00AB               	movwf	(??_main^(0+128)+1)
  5430  0B31  0AAA               	incf	??_main^(0+128),f
  5431  0B32  1903               	skipnz
  5432  0B33  0AAB               	incf	(??_main^(0+128)+1),f
  5433  0B34  0022               	movlb	2	; select bank2
  5434  0B35  084A               	movf	_knob_1_pos^(0+256),w
  5435  0B36  0021               	movlb	1	; select bank1
  5436  0B37  072A               	addwf	??_main^(0+128),w
  5437  0B38  00AC               	movwf	(??_main+2)^(0+128)
  5438  0B39  0022               	movlb	2	; select bank2
  5439  0B3A  084B               	movf	(_knob_1_pos+1)^(0+256),w
  5440  0B3B  0021               	movlb	1	; select bank1
  5441  0B3C  3D2B               	addwfc	(??_main+1)^(0+128),w
  5442  0B3D  00AD               	movwf	(??_main+3)^(0+128)
  5443  0B3E  082D               	movf	(??_main+3)^(0+128),w
  5444  0B3F  3A80               	xorlw	128
  5445  0B40  00AE               	movwf	(??_main+4)^(0+128)
  5446  0B41  3080               	movlw	128
  5447  0B42  022E               	subwf	(??_main+4)^(0+128),w
  5448  0B43  1D03               	skipz
  5449  0B44  2B47               	goto	u4025
  5450  0B45  3004               	movlw	4
  5451  0B46  022C               	subwf	(??_main+2)^(0+128),w
  5452  0B47                     u4025:	
  5453  0B47  1803               	skipnc
  5454  0B48  2B66               	goto	l3934
  5455  0B49  0021               	movlb	1	; select bank1
  5456  0B4A  0965               	comf	_knob1_prev^(0+128),w
  5457  0B4B  00AA               	movwf	??_main^(0+128)
  5458  0B4C  0966               	comf	(_knob1_prev+1)^(0+128),w
  5459  0B4D  00AB               	movwf	(??_main^(0+128)+1)
  5460  0B4E  0AAA               	incf	??_main^(0+128),f
  5461  0B4F  1903               	skipnz
  5462  0B50  0AAB               	incf	(??_main^(0+128)+1),f
  5463  0B51  0022               	movlb	2	; select bank2
  5464  0B52  084A               	movf	_knob_1_pos^(0+256),w
  5465  0B53  0021               	movlb	1	; select bank1
  5466  0B54  072A               	addwf	??_main^(0+128),w
  5467  0B55  00AC               	movwf	(??_main+2)^(0+128)
  5468  0B56  0022               	movlb	2	; select bank2
  5469  0B57  084B               	movf	(_knob_1_pos+1)^(0+256),w
  5470  0B58  0021               	movlb	1	; select bank1
  5471  0B59  3D2B               	addwfc	(??_main+1)^(0+128),w
  5472  0B5A  00AD               	movwf	(??_main+3)^(0+128)
  5473  0B5B  082D               	movf	(??_main+3)^(0+128),w
  5474  0B5C  3A80               	xorlw	128
  5475  0B5D  00AE               	movwf	(??_main+4)^(0+128)
  5476  0B5E  307F               	movlw	127
  5477  0B5F  022E               	subwf	(??_main+4)^(0+128),w
  5478  0B60  1D03               	skipz
  5479  0B61  2B64               	goto	u4035
  5480  0B62  30FD               	movlw	253
  5481  0B63  022C               	subwf	(??_main+2)^(0+128),w
  5482  0B64                     u4035:	
  5483  0B64  1803               	skipnc
  5484  0B65  2BFB               	goto	l3940
  5485  0B66                     l3934:	
  5486                           
  5487                           ;main.c: 227: knob1_prev = knob_1_pos;
  5488  0B66  0022               	movlb	2	; select bank2
  5489  0B67  084B               	movf	(_knob_1_pos+1)^(0+256),w
  5490  0B68  0021               	movlb	1	; select bank1
  5491  0B69  00E6               	movwf	(_knob1_prev+1)^(0+128)
  5492  0B6A  0022               	movlb	2	; select bank2
  5493  0B6B  084A               	movf	_knob_1_pos^(0+256),w
  5494  0B6C  0021               	movlb	1	; select bank1
  5495  0B6D  00E5               	movwf	_knob1_prev^(0+128)
  5496                           
  5497                           ;main.c: 228: int i = map(knob1_prev, 0, 1023, 0, 255);
  5498  0B6E  3000               	movlw	0
  5499  0B6F  0020               	movlb	0	; select bank0
  5500  0B70  00E1               	movwf	map@out_max
  5501  0B71  307F               	movlw	127
  5502  0B72  00E2               	movwf	map@out_max+1
  5503  0B73  3043               	movlw	67
  5504  0B74  00E3               	movwf	map@out_max+2
  5505  0B75  3000               	movlw	0
  5506  0B76  00DE               	movwf	map@out_min
  5507  0B77  3000               	movlw	0
  5508  0B78  00DF               	movwf	map@out_min+1
  5509  0B79  3000               	movlw	0
  5510  0B7A  00E0               	movwf	map@out_min+2
  5511  0B7B  30C0               	movlw	192
  5512  0B7C  00DB               	movwf	map@in_max
  5513  0B7D  307F               	movlw	127
  5514  0B7E  00DC               	movwf	map@in_max+1
  5515  0B7F  3044               	movlw	68
  5516  0B80  00DD               	movwf	map@in_max+2
  5517  0B81  3000               	movlw	0
  5518  0B82  00D8               	movwf	map@in_min
  5519  0B83  3000               	movlw	0
  5520  0B84  00D9               	movwf	map@in_min+1
  5521  0B85  3000               	movlw	0
  5522  0B86  00DA               	movwf	map@in_min+2
  5523  0B87  0021               	movlb	1	; select bank1
  5524  0B88  0866               	movf	(_knob1_prev+1)^(0+128),w
  5525  0B89  0020               	movlb	0	; select bank0
  5526  0B8A  00A9               	movwf	___awtoft@c+1
  5527  0B8B  0021               	movlb	1	; select bank1
  5528  0B8C  0865               	movf	_knob1_prev^(0+128),w
  5529  0B8D  0020               	movlb	0	; select bank0
  5530  0B8E  00A8               	movwf	___awtoft@c
  5531  0B8F  3190  2000  3189   	fcall	___awtoft
  5532  0B92  0020               	movlb	0	; select bank0
  5533  0B93  0828               	movf	?___awtoft,w
  5534  0B94  00D5               	movwf	map@x
  5535  0B95  0829               	movf	?___awtoft+1,w
  5536  0B96  00D6               	movwf	map@x+1
  5537  0B97  082A               	movf	?___awtoft+2,w
  5538  0B98  00D7               	movwf	map@x+2
  5539  0B99  3196  26D6  3189   	fcall	_map
  5540  0B9C  0020               	movlb	0	; select bank0
  5541  0B9D  0855               	movf	?_map,w
  5542  0B9E  00E7               	movwf	___fttol@f1
  5543  0B9F  0856               	movf	?_map+1,w
  5544  0BA0  00E8               	movwf	___fttol@f1+1
  5545  0BA1  0857               	movf	?_map+2,w
  5546  0BA2  00E9               	movwf	___fttol@f1+2
  5547  0BA3  3197  2761  3189   	fcall	___fttol
  5548  0BA6  0020               	movlb	0	; select bank0
  5549  0BA7  0868               	movf	?___fttol+1,w
  5550  0BA8  0021               	movlb	1	; select bank1
  5551  0BA9  00BA               	movwf	(main@i+1)^(0+128)
  5552  0BAA  0020               	movlb	0	; select bank0
  5553  0BAB  0867               	movf	?___fttol,w
  5554  0BAC  0021               	movlb	1	; select bank1
  5555  0BAD  00B9               	movwf	main@i^(0+128)
  5556                           
  5557                           ;main.c: 229: baseline_delay_time = map(knob1_prev, 0, 1023, 1172, 200);
  5558  0BAE  3000               	movlw	0
  5559  0BAF  0020               	movlb	0	; select bank0
  5560  0BB0  00E1               	movwf	map@out_max
  5561  0BB1  3048               	movlw	72
  5562  0BB2  00E2               	movwf	map@out_max+1
  5563  0BB3  3043               	movlw	67
  5564  0BB4  00E3               	movwf	map@out_max+2
  5565  0BB5  3080               	movlw	128
  5566  0BB6  00DE               	movwf	map@out_min
  5567  0BB7  3092               	movlw	146
  5568  0BB8  00DF               	movwf	map@out_min+1
  5569  0BB9  3044               	movlw	68
  5570  0BBA  00E0               	movwf	map@out_min+2
  5571  0BBB  30C0               	movlw	192
  5572  0BBC  00DB               	movwf	map@in_max
  5573  0BBD  307F               	movlw	127
  5574  0BBE  00DC               	movwf	map@in_max+1
  5575  0BBF  3044               	movlw	68
  5576  0BC0  00DD               	movwf	map@in_max+2
  5577  0BC1  3000               	movlw	0
  5578  0BC2  00D8               	movwf	map@in_min
  5579  0BC3  3000               	movlw	0
  5580  0BC4  00D9               	movwf	map@in_min+1
  5581  0BC5  3000               	movlw	0
  5582  0BC6  00DA               	movwf	map@in_min+2
  5583  0BC7  0021               	movlb	1	; select bank1
  5584  0BC8  0866               	movf	(_knob1_prev+1)^(0+128),w
  5585  0BC9  0020               	movlb	0	; select bank0
  5586  0BCA  00A9               	movwf	___awtoft@c+1
  5587  0BCB  0021               	movlb	1	; select bank1
  5588  0BCC  0865               	movf	_knob1_prev^(0+128),w
  5589  0BCD  0020               	movlb	0	; select bank0
  5590  0BCE  00A8               	movwf	___awtoft@c
  5591  0BCF  3190  2000  3189   	fcall	___awtoft
  5592  0BD2  0020               	movlb	0	; select bank0
  5593  0BD3  0828               	movf	?___awtoft,w
  5594  0BD4  00D5               	movwf	map@x
  5595  0BD5  0829               	movf	?___awtoft+1,w
  5596  0BD6  00D6               	movwf	map@x+1
  5597  0BD7  082A               	movf	?___awtoft+2,w
  5598  0BD8  00D7               	movwf	map@x+2
  5599  0BD9  3196  26D6  3189   	fcall	_map
  5600  0BDC  0020               	movlb	0	; select bank0
  5601  0BDD  0855               	movf	?_map,w
  5602  0BDE  00E7               	movwf	___fttol@f1
  5603  0BDF  0856               	movf	?_map+1,w
  5604  0BE0  00E8               	movwf	___fttol@f1+1
  5605  0BE1  0857               	movf	?_map+2,w
  5606  0BE2  00E9               	movwf	___fttol@f1+2
  5607  0BE3  3197  2761  3189   	fcall	___fttol
  5608  0BE6  0020               	movlb	0	; select bank0
  5609  0BE7  086A               	movf	?___fttol+3,w
  5610  0BE8  0021               	movlb	1	; select bank1
  5611  0BE9  00DE               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  5612  0BEA  0020               	movlb	0	; select bank0
  5613  0BEB  0869               	movf	?___fttol+2,w
  5614  0BEC  0021               	movlb	1	; select bank1
  5615  0BED  00DD               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  5616  0BEE  0020               	movlb	0	; select bank0
  5617  0BEF  0868               	movf	?___fttol+1,w
  5618  0BF0  0021               	movlb	1	; select bank1
  5619  0BF1  00DC               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  5620  0BF2  0020               	movlb	0	; select bank0
  5621  0BF3  0867               	movf	?___fttol,w
  5622  0BF4  0021               	movlb	1	; select bank1
  5623  0BF5  00DB               	movwf	_baseline_delay_time^(0+128)	;volatile
  5624                           
  5625                           ;main.c: 230: delay_time_changed = 1;
  5626  0BF6  3001               	movlw	1
  5627  0BF7  0022               	movlb	2	; select bank2
  5628  0BF8  00DC               	movwf	_delay_time_changed^(0+256)
  5629  0BF9  3000               	movlw	0
  5630  0BFA  00DD               	movwf	(_delay_time_changed^(0+256)+1)
  5631  0BFB                     l3940:	
  5632                           
  5633                           ;main.c: 231: }
  5634                           ;main.c: 240: if (knob_2_pos - knob2_prev >= 4 || knob_2_pos - knob2_prev <= -4) {
  5635  0BFB  0022               	movlb	2	; select bank2
  5636  0BFC  0960               	comf	_knob2_prev^(0+256),w
  5637  0BFD  0021               	movlb	1	; select bank1
  5638  0BFE  00AA               	movwf	??_main^(0+128)
  5639  0BFF  0022               	movlb	2	; select bank2
  5640  0C00  0961               	comf	(_knob2_prev+1)^(0+256),w
  5641  0C01  0021               	movlb	1	; select bank1
  5642  0C02  00AB               	movwf	(??_main^(0+128)+1)
  5643  0C03  0AAA               	incf	??_main^(0+128),f
  5644  0C04  1903               	skipnz
  5645  0C05  0AAB               	incf	(??_main^(0+128)+1),f
  5646  0C06  0022               	movlb	2	; select bank2
  5647  0C07  084C               	movf	_knob_2_pos^(0+256),w
  5648  0C08  0021               	movlb	1	; select bank1
  5649  0C09  072A               	addwf	??_main^(0+128),w
  5650  0C0A  00AC               	movwf	(??_main+2)^(0+128)
  5651  0C0B  0022               	movlb	2	; select bank2
  5652  0C0C  084D               	movf	(_knob_2_pos+1)^(0+256),w
  5653  0C0D  0021               	movlb	1	; select bank1
  5654  0C0E  3D2B               	addwfc	(??_main+1)^(0+128),w
  5655  0C0F  00AD               	movwf	(??_main+3)^(0+128)
  5656  0C10  082D               	movf	(??_main+3)^(0+128),w
  5657  0C11  3A80               	xorlw	128
  5658  0C12  00AE               	movwf	(??_main+4)^(0+128)
  5659  0C13  3080               	movlw	128
  5660  0C14  022E               	subwf	(??_main+4)^(0+128),w
  5661  0C15  1D03               	skipz
  5662  0C16  2C19               	goto	u4045
  5663  0C17  3004               	movlw	4
  5664  0C18  022C               	subwf	(??_main+2)^(0+128),w
  5665  0C19                     u4045:	
  5666  0C19  1803               	skipnc
  5667  0C1A  2C3B               	goto	l3944
  5668  0C1B  0022               	movlb	2	; select bank2
  5669  0C1C  0960               	comf	_knob2_prev^(0+256),w
  5670  0C1D  0021               	movlb	1	; select bank1
  5671  0C1E  00AA               	movwf	??_main^(0+128)
  5672  0C1F  0022               	movlb	2	; select bank2
  5673  0C20  0961               	comf	(_knob2_prev+1)^(0+256),w
  5674  0C21  0021               	movlb	1	; select bank1
  5675  0C22  00AB               	movwf	(??_main^(0+128)+1)
  5676  0C23  0AAA               	incf	??_main^(0+128),f
  5677  0C24  1903               	skipnz
  5678  0C25  0AAB               	incf	(??_main^(0+128)+1),f
  5679  0C26  0022               	movlb	2	; select bank2
  5680  0C27  084C               	movf	_knob_2_pos^(0+256),w
  5681  0C28  0021               	movlb	1	; select bank1
  5682  0C29  072A               	addwf	??_main^(0+128),w
  5683  0C2A  00AC               	movwf	(??_main+2)^(0+128)
  5684  0C2B  0022               	movlb	2	; select bank2
  5685  0C2C  084D               	movf	(_knob_2_pos+1)^(0+256),w
  5686  0C2D  0021               	movlb	1	; select bank1
  5687  0C2E  3D2B               	addwfc	(??_main+1)^(0+128),w
  5688  0C2F  00AD               	movwf	(??_main+3)^(0+128)
  5689  0C30  082D               	movf	(??_main+3)^(0+128),w
  5690  0C31  3A80               	xorlw	128
  5691  0C32  00AE               	movwf	(??_main+4)^(0+128)
  5692  0C33  307F               	movlw	127
  5693  0C34  022E               	subwf	(??_main+4)^(0+128),w
  5694  0C35  1D03               	skipz
  5695  0C36  2C39               	goto	u4055
  5696  0C37  30FD               	movlw	253
  5697  0C38  022C               	subwf	(??_main+2)^(0+128),w
  5698  0C39                     u4055:	
  5699  0C39  1803               	skipnc
  5700  0C3A  2C95               	goto	l3952
  5701  0C3B                     l3944:	
  5702                           
  5703                           ;main.c: 241: knob2_prev = knob_2_pos;
  5704  0C3B  0022               	movlb	2	; select bank2
  5705  0C3C  084D               	movf	(_knob_2_pos+1)^(0+256),w
  5706  0C3D  00E1               	movwf	(_knob2_prev+1)^(0+256)
  5707  0C3E  084C               	movf	_knob_2_pos^(0+256),w
  5708  0C3F  00E0               	movwf	_knob2_prev^(0+256)
  5709                           
  5710                           ;main.c: 242: int i = map(knob2_prev, 0, 1023, 0, 39);
  5711  0C40  3000               	movlw	0
  5712  0C41  0020               	movlb	0	; select bank0
  5713  0C42  00E1               	movwf	map@out_max
  5714  0C43  301C               	movlw	28
  5715  0C44  00E2               	movwf	map@out_max+1
  5716  0C45  3042               	movlw	66
  5717  0C46  00E3               	movwf	map@out_max+2
  5718  0C47  3000               	movlw	0
  5719  0C48  00DE               	movwf	map@out_min
  5720  0C49  3000               	movlw	0
  5721  0C4A  00DF               	movwf	map@out_min+1
  5722  0C4B  3000               	movlw	0
  5723  0C4C  00E0               	movwf	map@out_min+2
  5724  0C4D  30C0               	movlw	192
  5725  0C4E  00DB               	movwf	map@in_max
  5726  0C4F  307F               	movlw	127
  5727  0C50  00DC               	movwf	map@in_max+1
  5728  0C51  3044               	movlw	68
  5729  0C52  00DD               	movwf	map@in_max+2
  5730  0C53  3000               	movlw	0
  5731  0C54  00D8               	movwf	map@in_min
  5732  0C55  3000               	movlw	0
  5733  0C56  00D9               	movwf	map@in_min+1
  5734  0C57  3000               	movlw	0
  5735  0C58  00DA               	movwf	map@in_min+2
  5736  0C59  0022               	movlb	2	; select bank2
  5737  0C5A  0861               	movf	(_knob2_prev+1)^(0+256),w
  5738  0C5B  0020               	movlb	0	; select bank0
  5739  0C5C  00A9               	movwf	___awtoft@c+1
  5740  0C5D  0022               	movlb	2	; select bank2
  5741  0C5E  0860               	movf	_knob2_prev^(0+256),w
  5742  0C5F  0020               	movlb	0	; select bank0
  5743  0C60  00A8               	movwf	___awtoft@c
  5744  0C61  3190  2000  3189   	fcall	___awtoft
  5745  0C64  0020               	movlb	0	; select bank0
  5746  0C65  0828               	movf	?___awtoft,w
  5747  0C66  00D5               	movwf	map@x
  5748  0C67  0829               	movf	?___awtoft+1,w
  5749  0C68  00D6               	movwf	map@x+1
  5750  0C69  082A               	movf	?___awtoft+2,w
  5751  0C6A  00D7               	movwf	map@x+2
  5752  0C6B  3196  26D6  3189   	fcall	_map
  5753  0C6E  0020               	movlb	0	; select bank0
  5754  0C6F  0855               	movf	?_map,w
  5755  0C70  00E7               	movwf	___fttol@f1
  5756  0C71  0856               	movf	?_map+1,w
  5757  0C72  00E8               	movwf	___fttol@f1+1
  5758  0C73  0857               	movf	?_map+2,w
  5759  0C74  00E9               	movwf	___fttol@f1+2
  5760  0C75  3197  2761  3189   	fcall	___fttol
  5761  0C78  0020               	movlb	0	; select bank0
  5762  0C79  0868               	movf	?___fttol+1,w
  5763  0C7A  0021               	movlb	1	; select bank1
  5764  0C7B  00C0               	movwf	(main@i_342+1)^(0+128)
  5765  0C7C  0020               	movlb	0	; select bank0
  5766  0C7D  0867               	movf	?___fttol,w
  5767  0C7E  0021               	movlb	1	; select bank1
  5768  0C7F  00BF               	movwf	main@i_342^(0+128)
  5769                           
  5770                           ;main.c: 243: CCPR2 = iB25k[i];
  5771  0C80  353F               	lslf	main@i_342^(0+128),w
  5772  0C81  3E20               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5773  0C82  0086               	movwf	6
  5774  0C83  3004               	movlw	4	; select bank8/9
  5775  0C84  0087               	movwf	7
  5776  0C85  3F40               	moviw [0]fsr1
  5777  0C86  0025               	movlb	5	; select bank5
  5778  0C87  0098               	movwf	24	;volatile
  5779  0C88  3F41               	moviw [1]fsr1
  5780  0C89  0099               	movwf	25	;volatile
  5781                           
  5782                           ;main.c: 244: CCPR3 = B25k[i];
  5783  0C8A  0021               	movlb	1	; select bank1
  5784  0C8B  353F               	lslf	main@i_342^(0+128),w
  5785  0C8C  3EA0               	addlw	(low (_B25k| (0+768)))& (0+255)
  5786  0C8D  0086               	movwf	6
  5787  0C8E  3003               	movlw	3	; select bank7/8
  5788  0C8F  0087               	movwf	7
  5789  0C90  3F40               	moviw [0]fsr1
  5790  0C91  0026               	movlb	6	; select bank6
  5791  0C92  0091               	movwf	17	;volatile
  5792  0C93  3F41               	moviw [1]fsr1
  5793  0C94  0092               	movwf	18	;volatile
  5794  0C95                     l3952:	
  5795                           
  5796                           ;main.c: 245: }
  5797                           ;main.c: 255: if (knob_3_pos - knob3_prev >= 4 || knob_3_pos - knob3_prev <= -4) {
  5798  0C95  0022               	movlb	2	; select bank2
  5799  0C96  0962               	comf	_knob3_prev^(0+256),w
  5800  0C97  0021               	movlb	1	; select bank1
  5801  0C98  00AA               	movwf	??_main^(0+128)
  5802  0C99  0022               	movlb	2	; select bank2
  5803  0C9A  0963               	comf	(_knob3_prev+1)^(0+256),w
  5804  0C9B  0021               	movlb	1	; select bank1
  5805  0C9C  00AB               	movwf	(??_main^(0+128)+1)
  5806  0C9D  0AAA               	incf	??_main^(0+128),f
  5807  0C9E  1903               	skipnz
  5808  0C9F  0AAB               	incf	(??_main^(0+128)+1),f
  5809  0CA0  0022               	movlb	2	; select bank2
  5810  0CA1  084E               	movf	_knob_3_pos^(0+256),w
  5811  0CA2  0021               	movlb	1	; select bank1
  5812  0CA3  072A               	addwf	??_main^(0+128),w
  5813  0CA4  00AC               	movwf	(??_main+2)^(0+128)
  5814  0CA5  0022               	movlb	2	; select bank2
  5815  0CA6  084F               	movf	(_knob_3_pos+1)^(0+256),w
  5816  0CA7  0021               	movlb	1	; select bank1
  5817  0CA8  3D2B               	addwfc	(??_main+1)^(0+128),w
  5818  0CA9  00AD               	movwf	(??_main+3)^(0+128)
  5819  0CAA  082D               	movf	(??_main+3)^(0+128),w
  5820  0CAB  3A80               	xorlw	128
  5821  0CAC  00AE               	movwf	(??_main+4)^(0+128)
  5822  0CAD  3080               	movlw	128
  5823  0CAE  022E               	subwf	(??_main+4)^(0+128),w
  5824  0CAF  1D03               	skipz
  5825  0CB0  2CB3               	goto	u4065
  5826  0CB1  3004               	movlw	4
  5827  0CB2  022C               	subwf	(??_main+2)^(0+128),w
  5828  0CB3                     u4065:	
  5829  0CB3  1803               	skipnc
  5830  0CB4  2CD5               	goto	l3956
  5831  0CB5  0022               	movlb	2	; select bank2
  5832  0CB6  0962               	comf	_knob3_prev^(0+256),w
  5833  0CB7  0021               	movlb	1	; select bank1
  5834  0CB8  00AA               	movwf	??_main^(0+128)
  5835  0CB9  0022               	movlb	2	; select bank2
  5836  0CBA  0963               	comf	(_knob3_prev+1)^(0+256),w
  5837  0CBB  0021               	movlb	1	; select bank1
  5838  0CBC  00AB               	movwf	(??_main^(0+128)+1)
  5839  0CBD  0AAA               	incf	??_main^(0+128),f
  5840  0CBE  1903               	skipnz
  5841  0CBF  0AAB               	incf	(??_main^(0+128)+1),f
  5842  0CC0  0022               	movlb	2	; select bank2
  5843  0CC1  084E               	movf	_knob_3_pos^(0+256),w
  5844  0CC2  0021               	movlb	1	; select bank1
  5845  0CC3  072A               	addwf	??_main^(0+128),w
  5846  0CC4  00AC               	movwf	(??_main+2)^(0+128)
  5847  0CC5  0022               	movlb	2	; select bank2
  5848  0CC6  084F               	movf	(_knob_3_pos+1)^(0+256),w
  5849  0CC7  0021               	movlb	1	; select bank1
  5850  0CC8  3D2B               	addwfc	(??_main+1)^(0+128),w
  5851  0CC9  00AD               	movwf	(??_main+3)^(0+128)
  5852  0CCA  082D               	movf	(??_main+3)^(0+128),w
  5853  0CCB  3A80               	xorlw	128
  5854  0CCC  00AE               	movwf	(??_main+4)^(0+128)
  5855  0CCD  307F               	movlw	127
  5856  0CCE  022E               	subwf	(??_main+4)^(0+128),w
  5857  0CCF  1D03               	skipz
  5858  0CD0  2CD3               	goto	u4075
  5859  0CD1  30FD               	movlw	253
  5860  0CD2  022C               	subwf	(??_main+2)^(0+128),w
  5861  0CD3                     u4075:	
  5862  0CD3  1803               	skipnc
  5863  0CD4  2D2F               	goto	l3964
  5864  0CD5                     l3956:	
  5865                           
  5866                           ;main.c: 256: knob3_prev = knob_3_pos;
  5867  0CD5  0022               	movlb	2	; select bank2
  5868  0CD6  084F               	movf	(_knob_3_pos+1)^(0+256),w
  5869  0CD7  00E3               	movwf	(_knob3_prev+1)^(0+256)
  5870  0CD8  084E               	movf	_knob_3_pos^(0+256),w
  5871  0CD9  00E2               	movwf	_knob3_prev^(0+256)
  5872                           
  5873                           ;main.c: 257: int i = map(knob3_prev, 0, 1023, 16, 0);
  5874  0CDA  3000               	movlw	0
  5875  0CDB  0020               	movlb	0	; select bank0
  5876  0CDC  00E1               	movwf	map@out_max
  5877  0CDD  3000               	movlw	0
  5878  0CDE  00E2               	movwf	map@out_max+1
  5879  0CDF  3000               	movlw	0
  5880  0CE0  00E3               	movwf	map@out_max+2
  5881  0CE1  3000               	movlw	0
  5882  0CE2  00DE               	movwf	map@out_min
  5883  0CE3  3080               	movlw	128
  5884  0CE4  00DF               	movwf	map@out_min+1
  5885  0CE5  3041               	movlw	65
  5886  0CE6  00E0               	movwf	map@out_min+2
  5887  0CE7  30C0               	movlw	192
  5888  0CE8  00DB               	movwf	map@in_max
  5889  0CE9  307F               	movlw	127
  5890  0CEA  00DC               	movwf	map@in_max+1
  5891  0CEB  3044               	movlw	68
  5892  0CEC  00DD               	movwf	map@in_max+2
  5893  0CED  3000               	movlw	0
  5894  0CEE  00D8               	movwf	map@in_min
  5895  0CEF  3000               	movlw	0
  5896  0CF0  00D9               	movwf	map@in_min+1
  5897  0CF1  3000               	movlw	0
  5898  0CF2  00DA               	movwf	map@in_min+2
  5899  0CF3  0022               	movlb	2	; select bank2
  5900  0CF4  0863               	movf	(_knob3_prev+1)^(0+256),w
  5901  0CF5  0020               	movlb	0	; select bank0
  5902  0CF6  00A9               	movwf	___awtoft@c+1
  5903  0CF7  0022               	movlb	2	; select bank2
  5904  0CF8  0862               	movf	_knob3_prev^(0+256),w
  5905  0CF9  0020               	movlb	0	; select bank0
  5906  0CFA  00A8               	movwf	___awtoft@c
  5907  0CFB  3190  2000  3189   	fcall	___awtoft
  5908  0CFE  0020               	movlb	0	; select bank0
  5909  0CFF  0828               	movf	?___awtoft,w
  5910  0D00  00D5               	movwf	map@x
  5911  0D01  0829               	movf	?___awtoft+1,w
  5912  0D02  00D6               	movwf	map@x+1
  5913  0D03  082A               	movf	?___awtoft+2,w
  5914  0D04  00D7               	movwf	map@x+2
  5915  0D05  3196  26D6  3189   	fcall	_map
  5916  0D08  0020               	movlb	0	; select bank0
  5917  0D09  0855               	movf	?_map,w
  5918  0D0A  00E7               	movwf	___fttol@f1
  5919  0D0B  0856               	movf	?_map+1,w
  5920  0D0C  00E8               	movwf	___fttol@f1+1
  5921  0D0D  0857               	movf	?_map+2,w
  5922  0D0E  00E9               	movwf	___fttol@f1+2
  5923  0D0F  3197  2761  3189   	fcall	___fttol
  5924  0D12  0020               	movlb	0	; select bank0
  5925  0D13  0868               	movf	?___fttol+1,w
  5926  0D14  0021               	movlb	1	; select bank1
  5927  0D15  00C2               	movwf	(main@i_343+1)^(0+128)
  5928  0D16  0020               	movlb	0	; select bank0
  5929  0D17  0867               	movf	?___fttol,w
  5930  0D18  0021               	movlb	1	; select bank1
  5931  0D19  00C1               	movwf	main@i_343^(0+128)
  5932                           
  5933                           ;main.c: 258: CCPR4 = iB25k[i];
  5934  0D1A  3541               	lslf	main@i_343^(0+128),w
  5935  0D1B  3E20               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5936  0D1C  0086               	movwf	6
  5937  0D1D  3004               	movlw	4	; select bank8/9
  5938  0D1E  0087               	movwf	7
  5939  0D1F  3F40               	moviw [0]fsr1
  5940  0D20  0026               	movlb	6	; select bank6
  5941  0D21  0098               	movwf	24	;volatile
  5942  0D22  3F41               	moviw [1]fsr1
  5943  0D23  0099               	movwf	25	;volatile
  5944                           
  5945                           ;main.c: 259: CCPR5 = B25k[i];
  5946  0D24  0021               	movlb	1	; select bank1
  5947  0D25  3541               	lslf	main@i_343^(0+128),w
  5948  0D26  3EA0               	addlw	(low (_B25k| (0+768)))& (0+255)
  5949  0D27  0086               	movwf	6
  5950  0D28  3003               	movlw	3	; select bank7/8
  5951  0D29  0087               	movwf	7
  5952  0D2A  3F40               	moviw [0]fsr1
  5953  0D2B  0026               	movlb	6	; select bank6
  5954  0D2C  009C               	movwf	28	;volatile
  5955  0D2D  3F41               	moviw [1]fsr1
  5956  0D2E  009D               	movwf	29	;volatile
  5957  0D2F                     l3964:	
  5958                           
  5959                           ;main.c: 260: }
  5960                           ;main.c: 270: if (knob_4_pos - knob4_prev >= 4 || knob_4_pos - knob4_prev <= -4) {
  5961  0D2F  0022               	movlb	2	; select bank2
  5962  0D30  0964               	comf	_knob4_prev^(0+256),w
  5963  0D31  0021               	movlb	1	; select bank1
  5964  0D32  00AA               	movwf	??_main^(0+128)
  5965  0D33  0022               	movlb	2	; select bank2
  5966  0D34  0965               	comf	(_knob4_prev+1)^(0+256),w
  5967  0D35  0021               	movlb	1	; select bank1
  5968  0D36  00AB               	movwf	(??_main^(0+128)+1)
  5969  0D37  0AAA               	incf	??_main^(0+128),f
  5970  0D38  1903               	skipnz
  5971  0D39  0AAB               	incf	(??_main^(0+128)+1),f
  5972  0D3A  0022               	movlb	2	; select bank2
  5973  0D3B  0850               	movf	_knob_4_pos^(0+256),w
  5974  0D3C  0021               	movlb	1	; select bank1
  5975  0D3D  072A               	addwf	??_main^(0+128),w
  5976  0D3E  00AC               	movwf	(??_main+2)^(0+128)
  5977  0D3F  0022               	movlb	2	; select bank2
  5978  0D40  0851               	movf	(_knob_4_pos+1)^(0+256),w
  5979  0D41  0021               	movlb	1	; select bank1
  5980  0D42  3D2B               	addwfc	(??_main+1)^(0+128),w
  5981  0D43  00AD               	movwf	(??_main+3)^(0+128)
  5982  0D44  082D               	movf	(??_main+3)^(0+128),w
  5983  0D45  3A80               	xorlw	128
  5984  0D46  00AE               	movwf	(??_main+4)^(0+128)
  5985  0D47  3080               	movlw	128
  5986  0D48  022E               	subwf	(??_main+4)^(0+128),w
  5987  0D49  1D03               	skipz
  5988  0D4A  2D4D               	goto	u4085
  5989  0D4B  3004               	movlw	4
  5990  0D4C  022C               	subwf	(??_main+2)^(0+128),w
  5991  0D4D                     u4085:	
  5992  0D4D  1803               	skipnc
  5993  0D4E  2D6F               	goto	l3968
  5994  0D4F  0022               	movlb	2	; select bank2
  5995  0D50  0964               	comf	_knob4_prev^(0+256),w
  5996  0D51  0021               	movlb	1	; select bank1
  5997  0D52  00AA               	movwf	??_main^(0+128)
  5998  0D53  0022               	movlb	2	; select bank2
  5999  0D54  0965               	comf	(_knob4_prev+1)^(0+256),w
  6000  0D55  0021               	movlb	1	; select bank1
  6001  0D56  00AB               	movwf	(??_main^(0+128)+1)
  6002  0D57  0AAA               	incf	??_main^(0+128),f
  6003  0D58  1903               	skipnz
  6004  0D59  0AAB               	incf	(??_main^(0+128)+1),f
  6005  0D5A  0022               	movlb	2	; select bank2
  6006  0D5B  0850               	movf	_knob_4_pos^(0+256),w
  6007  0D5C  0021               	movlb	1	; select bank1
  6008  0D5D  072A               	addwf	??_main^(0+128),w
  6009  0D5E  00AC               	movwf	(??_main+2)^(0+128)
  6010  0D5F  0022               	movlb	2	; select bank2
  6011  0D60  0851               	movf	(_knob_4_pos+1)^(0+256),w
  6012  0D61  0021               	movlb	1	; select bank1
  6013  0D62  3D2B               	addwfc	(??_main+1)^(0+128),w
  6014  0D63  00AD               	movwf	(??_main+3)^(0+128)
  6015  0D64  082D               	movf	(??_main+3)^(0+128),w
  6016  0D65  3A80               	xorlw	128
  6017  0D66  00AE               	movwf	(??_main+4)^(0+128)
  6018  0D67  307F               	movlw	127
  6019  0D68  022E               	subwf	(??_main+4)^(0+128),w
  6020  0D69  1D03               	skipz
  6021  0D6A  2D6D               	goto	u4095
  6022  0D6B  30FD               	movlw	253
  6023  0D6C  022C               	subwf	(??_main+2)^(0+128),w
  6024  0D6D                     u4095:	
  6025  0D6D  1803               	skipnc
  6026  0D6E  2DB4               	goto	l3972
  6027  0D6F                     l3968:	
  6028                           
  6029                           ;main.c: 271: knob4_prev = knob_4_pos;
  6030  0D6F  0022               	movlb	2	; select bank2
  6031  0D70  0851               	movf	(_knob_4_pos+1)^(0+256),w
  6032  0D71  00E5               	movwf	(_knob4_prev+1)^(0+256)
  6033  0D72  0850               	movf	_knob_4_pos^(0+256),w
  6034  0D73  00E4               	movwf	_knob4_prev^(0+256)
  6035                           
  6036                           ;main.c: 272: mod_delay_time = map(knob4_prev, 0, 1023, 60, 1000);
  6037  0D74  3000               	movlw	0
  6038  0D75  0020               	movlb	0	; select bank0
  6039  0D76  00E1               	movwf	map@out_max
  6040  0D77  307A               	movlw	122
  6041  0D78  00E2               	movwf	map@out_max+1
  6042  0D79  3044               	movlw	68
  6043  0D7A  00E3               	movwf	map@out_max+2
  6044  0D7B  3000               	movlw	0
  6045  0D7C  00DE               	movwf	map@out_min
  6046  0D7D  3070               	movlw	112
  6047  0D7E  00DF               	movwf	map@out_min+1
  6048  0D7F  3042               	movlw	66
  6049  0D80  00E0               	movwf	map@out_min+2
  6050  0D81  30C0               	movlw	192
  6051  0D82  00DB               	movwf	map@in_max
  6052  0D83  307F               	movlw	127
  6053  0D84  00DC               	movwf	map@in_max+1
  6054  0D85  3044               	movlw	68
  6055  0D86  00DD               	movwf	map@in_max+2
  6056  0D87  3000               	movlw	0
  6057  0D88  00D8               	movwf	map@in_min
  6058  0D89  3000               	movlw	0
  6059  0D8A  00D9               	movwf	map@in_min+1
  6060  0D8B  3000               	movlw	0
  6061  0D8C  00DA               	movwf	map@in_min+2
  6062  0D8D  0022               	movlb	2	; select bank2
  6063  0D8E  0865               	movf	(_knob4_prev+1)^(0+256),w
  6064  0D8F  0020               	movlb	0	; select bank0
  6065  0D90  00A9               	movwf	___awtoft@c+1
  6066  0D91  0022               	movlb	2	; select bank2
  6067  0D92  0864               	movf	_knob4_prev^(0+256),w
  6068  0D93  0020               	movlb	0	; select bank0
  6069  0D94  00A8               	movwf	___awtoft@c
  6070  0D95  3190  2000  3189   	fcall	___awtoft
  6071  0D98  0020               	movlb	0	; select bank0
  6072  0D99  0828               	movf	?___awtoft,w
  6073  0D9A  00D5               	movwf	map@x
  6074  0D9B  0829               	movf	?___awtoft+1,w
  6075  0D9C  00D6               	movwf	map@x+1
  6076  0D9D  082A               	movf	?___awtoft+2,w
  6077  0D9E  00D7               	movwf	map@x+2
  6078  0D9F  3196  26D6  3189   	fcall	_map
  6079  0DA2  0020               	movlb	0	; select bank0
  6080  0DA3  0855               	movf	?_map,w
  6081  0DA4  00E7               	movwf	___fttol@f1
  6082  0DA5  0856               	movf	?_map+1,w
  6083  0DA6  00E8               	movwf	___fttol@f1+1
  6084  0DA7  0857               	movf	?_map+2,w
  6085  0DA8  00E9               	movwf	___fttol@f1+2
  6086  0DA9  3197  2761  3189   	fcall	___fttol
  6087  0DAC  0020               	movlb	0	; select bank0
  6088  0DAD  0868               	movf	?___fttol+1,w
  6089  0DAE  0022               	movlb	2	; select bank2
  6090  0DAF  00E9               	movwf	(_mod_delay_time+1)^(0+256)
  6091  0DB0  0020               	movlb	0	; select bank0
  6092  0DB1  0867               	movf	?___fttol,w
  6093  0DB2  0022               	movlb	2	; select bank2
  6094  0DB3  00E8               	movwf	_mod_delay_time^(0+256)
  6095  0DB4                     l3972:	
  6096                           
  6097                           ;main.c: 273: }
  6098                           ;main.c: 281: if (knob_5_pos - knob5_prev >= 4 || knob_5_pos - knob5_prev <= -4) {
  6099  0DB4  0022               	movlb	2	; select bank2
  6100  0DB5  0966               	comf	_knob5_prev^(0+256),w
  6101  0DB6  0021               	movlb	1	; select bank1
  6102  0DB7  00AA               	movwf	??_main^(0+128)
  6103  0DB8  0022               	movlb	2	; select bank2
  6104  0DB9  0967               	comf	(_knob5_prev+1)^(0+256),w
  6105  0DBA  0021               	movlb	1	; select bank1
  6106  0DBB  00AB               	movwf	(??_main^(0+128)+1)
  6107  0DBC  0AAA               	incf	??_main^(0+128),f
  6108  0DBD  1903               	skipnz
  6109  0DBE  0AAB               	incf	(??_main^(0+128)+1),f
  6110  0DBF  0022               	movlb	2	; select bank2
  6111  0DC0  0852               	movf	_knob_5_pos^(0+256),w
  6112  0DC1  0021               	movlb	1	; select bank1
  6113  0DC2  072A               	addwf	??_main^(0+128),w
  6114  0DC3  00AC               	movwf	(??_main+2)^(0+128)
  6115  0DC4  0022               	movlb	2	; select bank2
  6116  0DC5  0853               	movf	(_knob_5_pos+1)^(0+256),w
  6117  0DC6  0021               	movlb	1	; select bank1
  6118  0DC7  3D2B               	addwfc	(??_main+1)^(0+128),w
  6119  0DC8  00AD               	movwf	(??_main+3)^(0+128)
  6120  0DC9  082D               	movf	(??_main+3)^(0+128),w
  6121  0DCA  3A80               	xorlw	128
  6122  0DCB  00AE               	movwf	(??_main+4)^(0+128)
  6123  0DCC  3080               	movlw	128
  6124  0DCD  022E               	subwf	(??_main+4)^(0+128),w
  6125  0DCE  1D03               	skipz
  6126  0DCF  2DD2               	goto	u4105
  6127  0DD0  3004               	movlw	4
  6128  0DD1  022C               	subwf	(??_main+2)^(0+128),w
  6129  0DD2                     u4105:	
  6130  0DD2  1803               	skipnc
  6131  0DD3  2DF4               	goto	l3976
  6132  0DD4  0022               	movlb	2	; select bank2
  6133  0DD5  0966               	comf	_knob5_prev^(0+256),w
  6134  0DD6  0021               	movlb	1	; select bank1
  6135  0DD7  00AA               	movwf	??_main^(0+128)
  6136  0DD8  0022               	movlb	2	; select bank2
  6137  0DD9  0967               	comf	(_knob5_prev+1)^(0+256),w
  6138  0DDA  0021               	movlb	1	; select bank1
  6139  0DDB  00AB               	movwf	(??_main^(0+128)+1)
  6140  0DDC  0AAA               	incf	??_main^(0+128),f
  6141  0DDD  1903               	skipnz
  6142  0DDE  0AAB               	incf	(??_main^(0+128)+1),f
  6143  0DDF  0022               	movlb	2	; select bank2
  6144  0DE0  0852               	movf	_knob_5_pos^(0+256),w
  6145  0DE1  0021               	movlb	1	; select bank1
  6146  0DE2  072A               	addwf	??_main^(0+128),w
  6147  0DE3  00AC               	movwf	(??_main+2)^(0+128)
  6148  0DE4  0022               	movlb	2	; select bank2
  6149  0DE5  0853               	movf	(_knob_5_pos+1)^(0+256),w
  6150  0DE6  0021               	movlb	1	; select bank1
  6151  0DE7  3D2B               	addwfc	(??_main+1)^(0+128),w
  6152  0DE8  00AD               	movwf	(??_main+3)^(0+128)
  6153  0DE9  082D               	movf	(??_main+3)^(0+128),w
  6154  0DEA  3A80               	xorlw	128
  6155  0DEB  00AE               	movwf	(??_main+4)^(0+128)
  6156  0DEC  307F               	movlw	127
  6157  0DED  022E               	subwf	(??_main+4)^(0+128),w
  6158  0DEE  1D03               	skipz
  6159  0DEF  2DF2               	goto	u4115
  6160  0DF0  30FD               	movlw	253
  6161  0DF1  022C               	subwf	(??_main+2)^(0+128),w
  6162  0DF2                     u4115:	
  6163  0DF2  1803               	skipnc
  6164  0DF3  2DF9               	goto	l298
  6165  0DF4                     l3976:	
  6166                           
  6167                           ;main.c: 282: knob5_prev = knob_5_pos;
  6168  0DF4  0022               	movlb	2	; select bank2
  6169  0DF5  0853               	movf	(_knob_5_pos+1)^(0+256),w
  6170  0DF6  00E7               	movwf	(_knob5_prev+1)^(0+256)
  6171  0DF7  0852               	movf	_knob_5_pos^(0+256),w
  6172  0DF8  00E6               	movwf	_knob5_prev^(0+256)
  6173  0DF9                     l298:	
  6174                           
  6175                           ;main.c: 283: }
  6176                           ;main.c: 296: if (mod_timer >= mod_delay_time) {
  6177  0DF9  0022               	movlb	2	; select bank2
  6178  0DFA  0868               	movf	_mod_delay_time^(0+256),w
  6179  0DFB  0021               	movlb	1	; select bank1
  6180  0DFC  00AA               	movwf	??_main^(0+128)
  6181  0DFD  0022               	movlb	2	; select bank2
  6182  0DFE  0869               	movf	(_mod_delay_time+1)^(0+256),w
  6183  0DFF  0021               	movlb	1	; select bank1
  6184  0E00  00AB               	movwf	(??_main^(0+128)+1)
  6185  0E01  3000               	movlw	0
  6186  0E02  1BAB               	btfsc	(??_main^(0+128)+1),7
  6187  0E03  30FF               	movlw	255
  6188  0E04  00AC               	movwf	(??_main^(0+128)+2)
  6189  0E05  00AD               	movwf	(??_main^(0+128)+3)
  6190  0E06  0022               	movlb	2	; select bank2
  6191  0E07  083B               	movf	(_mod_timer+3)^(0+256),w	;volatile
  6192  0E08  3A80               	xorlw	128
  6193  0E09  0021               	movlb	1	; select bank1
  6194  0E0A  00AE               	movwf	(??_main+4)^(0+128)
  6195  0E0B  082D               	movf	(??_main+3)^(0+128),w
  6196  0E0C  3A80               	xorlw	128
  6197  0E0D  022E               	subwf	(??_main+4)^(0+128),w
  6198  0E0E  0022               	movlb	2	; select bank2
  6199  0E0F  1D03               	skipz
  6200  0E10  2E21               	goto	u4123
  6201  0E11  0021               	movlb	1	; select bank1
  6202  0E12  082C               	movf	(??_main+2)^(0+128),w
  6203  0E13  0022               	movlb	2	; select bank2
  6204  0E14  023A               	subwf	(_mod_timer+2)^(0+256),w	;volatile
  6205  0E15  1D03               	skipz
  6206  0E16  2E21               	goto	u4123
  6207  0E17  0021               	movlb	1	; select bank1
  6208  0E18  082B               	movf	(??_main+1)^(0+128),w
  6209  0E19  0022               	movlb	2	; select bank2
  6210  0E1A  0239               	subwf	(_mod_timer+1)^(0+256),w	;volatile
  6211  0E1B  1D03               	skipz
  6212  0E1C  2E21               	goto	u4123
  6213  0E1D  0021               	movlb	1	; select bank1
  6214  0E1E  082A               	movf	??_main^(0+128),w
  6215  0E1F  0022               	movlb	2	; select bank2
  6216  0E20  0238               	subwf	_mod_timer^(0+256),w	;volatile
  6217  0E21                     u4123:	
  6218  0E21  1C03               	skipc
  6219  0E22  2F46               	goto	l4030
  6220                           
  6221                           ;main.c: 298: mod_counter = mod_counter + 1;
  6222  0E23  0021               	movlb	1	; select bank1
  6223  0E24  084D               	movf	_mod_counter^(0+128),w
  6224  0E25  3E01               	addlw	1
  6225  0E26  00CD               	movwf	_mod_counter^(0+128)
  6226  0E27  3000               	movlw	0
  6227  0E28  3D4E               	addwfc	(_mod_counter+1)^(0+128),w
  6228  0E29  00CE               	movwf	(_mod_counter+1)^(0+128)
  6229                           
  6230                           ;main.c: 299: mod_timer = 0;
  6231  0E2A  3000               	movlw	0
  6232  0E2B  0022               	movlb	2	; select bank2
  6233  0E2C  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
  6234  0E2D  3000               	movlw	0
  6235  0E2E  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
  6236  0E2F  3000               	movlw	0
  6237  0E30  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
  6238  0E31  3000               	movlw	0
  6239  0E32  00B8               	movwf	_mod_timer^(0+256)	;volatile
  6240                           
  6241                           ;main.c: 301: if (bottom_push_state == 1 || bottom_push_state == 5) {
  6242  0E33  0021               	movlb	1	; select bank1
  6243  0E34  0363               	decf	_bottom_push_state^(0+128),w
  6244  0E35  0464               	iorwf	(_bottom_push_state+1)^(0+128),w
  6245  0E36  1903               	btfsc	3,2
  6246  0E37  2E3D               	goto	l3986
  6247  0E38  3005               	movlw	5
  6248  0E39  0663               	xorwf	_bottom_push_state^(0+128),w
  6249  0E3A  0464               	iorwf	(_bottom_push_state+1)^(0+128),w
  6250  0E3B  1D03               	btfss	3,2
  6251  0E3C  2E46               	goto	l3990
  6252  0E3D                     l3986:	
  6253                           
  6254                           ;main.c: 302: if (mod_counter >= 61) {
  6255  0E3D  084E               	movf	(_mod_counter+1)^(0+128),w
  6256  0E3E  3A80               	xorlw	128
  6257  0E3F  00AA               	movwf	??_main^(0+128)
  6258  0E40  3080               	movlw	128
  6259  0E41  022A               	subwf	??_main^(0+128),w
  6260  0E42  1D03               	skipz
  6261  0E43  2E4F               	goto	u4165
  6262  0E44  303D               	movlw	61
  6263  0E45  2E4E               	goto	L1
  6264  0E46                     l3990:	
  6265                           ;main.c: 304: }
  6266                           ;main.c: 305: } else {
  6267                           
  6268                           ;main.c: 303: mod_counter = 0;
  6269                           
  6270                           
  6271                           ;main.c: 306: if (mod_counter > 31) {
  6272  0E46  084E               	movf	(_mod_counter+1)^(0+128),w
  6273  0E47  3A80               	xorlw	128
  6274  0E48  00AA               	movwf	??_main^(0+128)
  6275  0E49  3080               	movlw	128
  6276  0E4A  022A               	subwf	??_main^(0+128),w
  6277  0E4B  1D03               	skipz
  6278  0E4C  2E4F               	goto	u4165
  6279  0E4D  3020               	movlw	32
  6280  0E4E                     L1:	
  6281  0E4E  024D               	subwf	_mod_counter^(0+128),w
  6282  0E4F                     u4165:	
  6283  0E4F  1C03               	skipc
  6284  0E50  2E54               	goto	l3994
  6285                           
  6286                           ;main.c: 307: mod_counter = 0;
  6287  0E51  0021               	movlb	1	; select bank1
  6288  0E52  01CD               	clrf	_mod_counter^(0+128)
  6289  0E53  01CE               	clrf	(_mod_counter+1)^(0+128)
  6290  0E54                     l3994:	
  6291                           
  6292                           ;main.c: 308: }
  6293                           ;main.c: 309: }
  6294                           ;main.c: 312: signed int adjusted_pot_value = map(knob5_prev, 0, 1023, 1275, 0);
  6295  0E54  3000               	movlw	0
  6296  0E55  0020               	movlb	0	; select bank0
  6297  0E56  00E1               	movwf	map@out_max
  6298  0E57  3000               	movlw	0
  6299  0E58  00E2               	movwf	map@out_max+1
  6300  0E59  3000               	movlw	0
  6301  0E5A  00E3               	movwf	map@out_max+2
  6302  0E5B  3060               	movlw	96
  6303  0E5C  00DE               	movwf	map@out_min
  6304  0E5D  309F               	movlw	159
  6305  0E5E  00DF               	movwf	map@out_min+1
  6306  0E5F  3044               	movlw	68
  6307  0E60  00E0               	movwf	map@out_min+2
  6308  0E61  30C0               	movlw	192
  6309  0E62  00DB               	movwf	map@in_max
  6310  0E63  307F               	movlw	127
  6311  0E64  00DC               	movwf	map@in_max+1
  6312  0E65  3044               	movlw	68
  6313  0E66  00DD               	movwf	map@in_max+2
  6314  0E67  3000               	movlw	0
  6315  0E68  00D8               	movwf	map@in_min
  6316  0E69  3000               	movlw	0
  6317  0E6A  00D9               	movwf	map@in_min+1
  6318  0E6B  3000               	movlw	0
  6319  0E6C  00DA               	movwf	map@in_min+2
  6320  0E6D  0022               	movlb	2	; select bank2
  6321  0E6E  0867               	movf	(_knob5_prev+1)^(0+256),w
  6322  0E6F  0020               	movlb	0	; select bank0
  6323  0E70  00A9               	movwf	___awtoft@c+1
  6324  0E71  0022               	movlb	2	; select bank2
  6325  0E72  0866               	movf	_knob5_prev^(0+256),w
  6326  0E73  0020               	movlb	0	; select bank0
  6327  0E74  00A8               	movwf	___awtoft@c
  6328  0E75  3190  2000  3189   	fcall	___awtoft
  6329  0E78  0020               	movlb	0	; select bank0
  6330  0E79  0828               	movf	?___awtoft,w
  6331  0E7A  00D5               	movwf	map@x
  6332  0E7B  0829               	movf	?___awtoft+1,w
  6333  0E7C  00D6               	movwf	map@x+1
  6334  0E7D  082A               	movf	?___awtoft+2,w
  6335  0E7E  00D7               	movwf	map@x+2
  6336  0E7F  3196  26D6  3189   	fcall	_map
  6337  0E82  0020               	movlb	0	; select bank0
  6338  0E83  0855               	movf	?_map,w
  6339  0E84  00E7               	movwf	___fttol@f1
  6340  0E85  0856               	movf	?_map+1,w
  6341  0E86  00E8               	movwf	___fttol@f1+1
  6342  0E87  0857               	movf	?_map+2,w
  6343  0E88  00E9               	movwf	___fttol@f1+2
  6344  0E89  3197  2761  3189   	fcall	___fttol
  6345  0E8C  0020               	movlb	0	; select bank0
  6346  0E8D  0868               	movf	?___fttol+1,w
  6347  0E8E  0021               	movlb	1	; select bank1
  6348  0E8F  00BE               	movwf	(main@adjusted_pot_value+1)^(0+128)
  6349  0E90  0020               	movlb	0	; select bank0
  6350  0E91  0867               	movf	?___fttol,w
  6351  0E92  0021               	movlb	1	; select bank1
  6352  0E93  00BD               	movwf	main@adjusted_pot_value^(0+128)
  6353                           
  6354                           ;main.c: 313: switch (bottom_push_state) {
  6355  0E94  2EF0               	goto	l4024
  6356  0E95                     l3996:	
  6357                           ;main.c: 314: case 1:
  6358                           
  6359                           
  6360                           ;main.c: 315: mod_value = mod5[mod_counter];
  6361  0E95  084E               	movf	(_mod_counter+1)^(0+128),w
  6362  0E96  00AB               	movwf	(??_main^(0+128)+1)
  6363  0E97  084D               	movf	_mod_counter^(0+128),w
  6364  0E98  00AA               	movwf	??_main^(0+128)
  6365  0E99  35AA               	lslf	??_main^(0+128),f
  6366  0E9A  0DAB               	rlf	(??_main^(0+128)+1),f
  6367  0E9B  3078               	movlw	120
  6368  0E9C  00AC               	movwf	(??_main+2)^(0+128)
  6369  0E9D  3023               	movlw	35
  6370  0E9E  00AD               	movwf	((??_main+2)^(0+128)+1)
  6371  0E9F  082A               	movf	??_main^(0+128),w
  6372  0EA0  072C               	addwf	(??_main+2)^(0+128),w
  6373  0EA1  0086               	movwf	6
  6374  0EA2  082B               	movf	(??_main+1)^(0+128),w
  6375  0EA3  3D2D               	addwfc	(??_main+3)^(0+128),w
  6376  0EA4  0087               	movwf	7
  6377  0EA5  3F40               	moviw [0]fsr1
  6378  0EA6  0022               	movlb	2	; select bank2
  6379  0EA7  00D4               	movwf	_mod_value^(0+256)
  6380  0EA8  3F41               	moviw [1]fsr1
  6381  0EA9  2ECA               	goto	L4
  6382  0EAA                     l4000:	
  6383                           ;main.c: 318: case 2:
  6384                           
  6385                           ;main.c: 317: break;
  6386                           
  6387                           ;main.c: 316: PORTCbits.RC4 = 0;
  6388                           
  6389                           
  6390                           ;main.c: 319: mod_value = mod2[mod_counter];
  6391  0EAA  0021               	movlb	1	; select bank1
  6392  0EAB  354D               	lslf	_mod_counter^(0+128),w
  6393  0EAC  3E20               	addlw	(low (_mod2| (0+512)))& (0+255)
  6394  0EAD  0086               	movwf	6
  6395  0EAE  3002               	movlw	2	; select bank4/5
  6396  0EAF  0087               	movwf	7
  6397  0EB0  3F40               	moviw [0]fsr1
  6398  0EB1  0022               	movlb	2	; select bank2
  6399  0EB2  00D4               	movwf	_mod_value^(0+256)
  6400  0EB3  3F41               	moviw [1]fsr1
  6401  0EB4  2ECA               	goto	L4
  6402  0EB5                     l4004:	
  6403                           ;main.c: 322: case 3:
  6404                           
  6405                           ;main.c: 321: break;
  6406                           
  6407                           ;main.c: 320: PORTCbits.RC4 = 0;
  6408                           
  6409                           
  6410                           ;main.c: 323: mod_value = mod3[mod_counter];
  6411  0EB5  0021               	movlb	1	; select bank1
  6412  0EB6  354D               	lslf	_mod_counter^(0+128),w
  6413  0EB7  3EA0               	addlw	(low (_mod3| (0+512)))& (0+255)
  6414  0EB8  0086               	movwf	6
  6415  0EB9  3002               	movlw	2	; select bank5/6
  6416  0EBA  0087               	movwf	7
  6417  0EBB  3F40               	moviw [0]fsr1
  6418  0EBC  0022               	movlb	2	; select bank2
  6419  0EBD  00D4               	movwf	_mod_value^(0+256)
  6420  0EBE  3F41               	moviw [1]fsr1
  6421  0EBF  2ECA               	goto	L4
  6422  0EC0                     l4008:	
  6423                           ;main.c: 326: case 4:
  6424                           
  6425                           ;main.c: 325: break;
  6426                           
  6427                           ;main.c: 324: PORTCbits.RC4 = 0;
  6428                           
  6429                           
  6430                           ;main.c: 327: mod_value = mod4[mod_counter];
  6431  0EC0  0021               	movlb	1	; select bank1
  6432  0EC1  354D               	lslf	_mod_counter^(0+128),w
  6433  0EC2  3E20               	addlw	(low (_mod4| (0+768)))& (0+255)
  6434  0EC3  0086               	movwf	6
  6435  0EC4  3003               	movlw	3	; select bank6/7
  6436  0EC5  0087               	movwf	7
  6437  0EC6  3F40               	moviw [0]fsr1
  6438  0EC7  0022               	movlb	2	; select bank2
  6439  0EC8  00D4               	movwf	_mod_value^(0+256)
  6440  0EC9  3F41               	moviw [1]fsr1
  6441  0ECA                     L4:	
  6442  0ECA  00D5               	movwf	(_mod_value+1)^(0+256)
  6443  0ECB  2EED               	goto	l4020
  6444  0ECC                     l4012:	
  6445                           ;main.c: 330: case 5:
  6446                           
  6447                           ;main.c: 329: break;
  6448                           
  6449                           ;main.c: 328: PORTCbits.RC4 = 0;
  6450                           
  6451                           
  6452                           ;main.c: 331: mod_value = mod5[mod_counter];
  6453  0ECC  0021               	movlb	1	; select bank1
  6454  0ECD  084E               	movf	(_mod_counter+1)^(0+128),w
  6455  0ECE  00AB               	movwf	(??_main^(0+128)+1)
  6456  0ECF  084D               	movf	_mod_counter^(0+128),w
  6457  0ED0  00AA               	movwf	??_main^(0+128)
  6458  0ED1  35AA               	lslf	??_main^(0+128),f
  6459  0ED2  0DAB               	rlf	(??_main^(0+128)+1),f
  6460  0ED3  3078               	movlw	120
  6461  0ED4  00AC               	movwf	(??_main+2)^(0+128)
  6462  0ED5  3023               	movlw	35
  6463  0ED6  00AD               	movwf	((??_main+2)^(0+128)+1)
  6464  0ED7  082A               	movf	??_main^(0+128),w
  6465  0ED8  072C               	addwf	(??_main+2)^(0+128),w
  6466  0ED9  0086               	movwf	6
  6467  0EDA  082B               	movf	(??_main+1)^(0+128),w
  6468  0EDB  3D2D               	addwfc	(??_main+3)^(0+128),w
  6469  0EDC  0087               	movwf	7
  6470  0EDD  3F40               	moviw [0]fsr1
  6471  0EDE  0022               	movlb	2	; select bank2
  6472  0EDF  00D4               	movwf	_mod_value^(0+256)
  6473  0EE0  3F41               	moviw [1]fsr1
  6474  0EE1  00D5               	movwf	(_mod_value+1)^(0+256)
  6475                           
  6476                           ;main.c: 332: adjusted_pot_value = 1275;
  6477  0EE2  30FB               	movlw	251
  6478  0EE3  0021               	movlb	1	; select bank1
  6479  0EE4  00BD               	movwf	main@adjusted_pot_value^(0+128)
  6480  0EE5  3004               	movlw	4
  6481  0EE6  00BE               	movwf	(main@adjusted_pot_value^(0+128)+1)
  6482                           
  6483                           ;main.c: 333: PORTCbits.RC4 = 1;
  6484  0EE7  0020               	movlb	0	; select bank0
  6485  0EE8  160E               	bsf	14,4	;volatile
  6486                           
  6487                           ;main.c: 334: break;
  6488  0EE9  2F0A               	goto	l4026
  6489  0EEA                     l4018:	
  6490                           ;main.c: 335: case 6:
  6491                           
  6492                           
  6493                           ;main.c: 336: mod_value = 0;
  6494  0EEA  0022               	movlb	2	; select bank2
  6495  0EEB  01D4               	clrf	_mod_value^(0+256)
  6496  0EEC  01D5               	clrf	(_mod_value+1)^(0+256)
  6497  0EED                     l4020:	
  6498                           
  6499                           ;main.c: 337: PORTCbits.RC4 = 0;
  6500  0EED  0020               	movlb	0	; select bank0
  6501  0EEE  120E               	bcf	14,4	;volatile
  6502                           
  6503                           ;main.c: 339: }
  6504                           
  6505                           ;main.c: 338: break;
  6506  0EEF  2F0A               	goto	l4026
  6507  0EF0                     l4024:	
  6508                           
  6509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6510                           ; Switch size 1, requested type "space"
  6511                           ; Number of cases is 1, Range of values is 0 to 0
  6512                           ; switch strategies available:
  6513                           ; Name         Instructions Cycles
  6514                           ; simple_byte            4     3 (average)
  6515                           ; direct_byte            8     6 (fixed)
  6516                           ; jumptable            260     6 (fixed)
  6517                           ;	Chosen strategy is simple_byte
  6518  0EF0  0021               	movlb	1	; select bank1
  6519  0EF1  0864               	movf	(_bottom_push_state+1)^(0+128),w
  6520  0EF2  3A00               	xorlw	0	; case 0
  6521  0EF3  1903               	skipnz
  6522  0EF4  2EF6               	goto	l4394
  6523  0EF5  2F0A               	goto	l4026
  6524  0EF6                     l4394:	
  6525                           
  6526                           ; Switch size 1, requested type "space"
  6527                           ; Number of cases is 6, Range of values is 1 to 6
  6528                           ; switch strategies available:
  6529                           ; Name         Instructions Cycles
  6530                           ; simple_byte           19    10 (average)
  6531                           ; direct_byte           21     9 (fixed)
  6532                           ; jumptable            263     9 (fixed)
  6533                           ;	Chosen strategy is simple_byte
  6534  0EF6  0863               	movf	_bottom_push_state^(0+128),w
  6535  0EF7  3A01               	xorlw	1	; case 1
  6536  0EF8  1903               	skipnz
  6537  0EF9  2E95               	goto	l3996
  6538  0EFA  3A03               	xorlw	3	; case 2
  6539  0EFB  1903               	skipnz
  6540  0EFC  2EAA               	goto	l4000
  6541  0EFD  3A01               	xorlw	1	; case 3
  6542  0EFE  1903               	skipnz
  6543  0EFF  2EB5               	goto	l4004
  6544  0F00  3A07               	xorlw	7	; case 4
  6545  0F01  1903               	skipnz
  6546  0F02  2EC0               	goto	l4008
  6547  0F03  3A01               	xorlw	1	; case 5
  6548  0F04  1903               	skipnz
  6549  0F05  2ECC               	goto	l4012
  6550  0F06  3A03               	xorlw	3	; case 6
  6551  0F07  1903               	skipnz
  6552  0F08  2EEA               	goto	l4018
  6553  0F09  2F0A               	goto	l4026
  6554  0F0A                     l4026:	
  6555                           
  6556                           ;main.c: 340: mod_value = modulation(mod_value, adjusted_pot_value);
  6557  0F0A  0022               	movlb	2	; select bank2
  6558  0F0B  0855               	movf	(_mod_value+1)^(0+256),w
  6559  0F0C  0020               	movlb	0	; select bank0
  6560  0F0D  00B6               	movwf	modulation@x+1
  6561  0F0E  0022               	movlb	2	; select bank2
  6562  0F0F  0854               	movf	_mod_value^(0+256),w
  6563  0F10  0020               	movlb	0	; select bank0
  6564  0F11  00B5               	movwf	modulation@x
  6565  0F12  0021               	movlb	1	; select bank1
  6566  0F13  083E               	movf	(main@adjusted_pot_value+1)^(0+128),w
  6567  0F14  0020               	movlb	0	; select bank0
  6568  0F15  00B8               	movwf	modulation@y+1
  6569  0F16  0021               	movlb	1	; select bank1
  6570  0F17  083D               	movf	main@adjusted_pot_value^(0+128),w
  6571  0F18  0020               	movlb	0	; select bank0
  6572  0F19  00B7               	movwf	modulation@y
  6573  0F1A  3192  22CF  3189   	fcall	_modulation
  6574  0F1D  0020               	movlb	0	; select bank0
  6575  0F1E  0836               	movf	?_modulation+1,w
  6576  0F1F  0022               	movlb	2	; select bank2
  6577  0F20  00D5               	movwf	(_mod_value+1)^(0+256)
  6578  0F21  0020               	movlb	0	; select bank0
  6579  0F22  0835               	movf	?_modulation,w
  6580  0F23  0022               	movlb	2	; select bank2
  6581  0F24  00D4               	movwf	_mod_value^(0+256)
  6582                           
  6583                           ;main.c: 341: CCPR9 = mod_value / 2;
  6584  0F25  3002               	movlw	2
  6585  0F26  0020               	movlb	0	; select bank0
  6586  0F27  00A0               	movwf	___awdiv@divisor
  6587  0F28  3000               	movlw	0
  6588  0F29  00A1               	movwf	___awdiv@divisor+1
  6589  0F2A  0022               	movlb	2	; select bank2
  6590  0F2B  0855               	movf	(_mod_value+1)^(0+256),w
  6591  0F2C  0020               	movlb	0	; select bank0
  6592  0F2D  00A3               	movwf	___awdiv@dividend+1
  6593  0F2E  0022               	movlb	2	; select bank2
  6594  0F2F  0854               	movf	_mod_value^(0+256),w
  6595  0F30  0020               	movlb	0	; select bank0
  6596  0F31  00A2               	movwf	___awdiv@dividend
  6597  0F32  3195  2549  3189   	fcall	___awdiv
  6598  0F35  0020               	movlb	0	; select bank0
  6599  0F36  0821               	movf	?___awdiv+1,w
  6600  0F37  002C               	movlb	12	; select bank12
  6601  0F38  009B               	movwf	27	;volatile
  6602  0F39  0020               	movlb	0	; select bank0
  6603  0F3A  0820               	movf	?___awdiv,w
  6604  0F3B  002C               	movlb	12	; select bank12
  6605  0F3C  009A               	movwf	26	;volatile
  6606                           
  6607                           ;main.c: 342: mod_timer = 0;
  6608  0F3D  3000               	movlw	0
  6609  0F3E  0022               	movlb	2	; select bank2
  6610  0F3F  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
  6611  0F40  3000               	movlw	0
  6612  0F41  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
  6613  0F42  3000               	movlw	0
  6614  0F43  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
  6615  0F44  3000               	movlw	0
  6616  0F45  00B8               	movwf	_mod_timer^(0+256)	;volatile
  6617  0F46                     l4030:	
  6618                           
  6619                           ;main.c: 343: }
  6620                           ;main.c: 348: if (delay_time_changed == 1) {
  6621  0F46  035C               	decf	_delay_time_changed^(0+256),w
  6622  0F47  045D               	iorwf	(_delay_time_changed+1)^(0+256),w
  6623  0F48  1D03               	btfss	3,2
  6624  0F49  2935               	goto	l3846
  6625                           
  6626                           ;main.c: 349: delay_time = baseline_delay_time;
  6627  0F4A  0021               	movlb	1	; select bank1
  6628  0F4B  085E               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
  6629  0F4C  00E2               	movwf	(_delay_time+3)^(0+128)	;volatile
  6630  0F4D  085D               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
  6631  0F4E  00E1               	movwf	(_delay_time+2)^(0+128)	;volatile
  6632  0F4F  085C               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6633  0F50  00E0               	movwf	(_delay_time+1)^(0+128)	;volatile
  6634  0F51  085B               	movf	_baseline_delay_time^(0+128),w	;volatile
  6635  0F52  00DF               	movwf	_delay_time^(0+128)	;volatile
  6636                           
  6637                           ;main.c: 350: delay_time = set_subdivision(baseline_delay_time, top_push_state);
  6638  0F53  085C               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6639  0F54  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  6640  0F55  085B               	movf	_baseline_delay_time^(0+128),w	;volatile
  6641  0F56  00A6               	movwf	set_subdivision@x^(0+128)
  6642  0F57  086E               	movf	(_top_push_state+1)^(0+128),w
  6643  0F58  00A9               	movwf	(set_subdivision@y+1)^(0+128)
  6644  0F59  086D               	movf	_top_push_state^(0+128),w
  6645  0F5A  00A8               	movwf	set_subdivision@y^(0+128)
  6646  0F5B  3184  2464  3189   	fcall	_set_subdivision
  6647  0F5E  0021               	movlb	1	; select bank1
  6648  0F5F  0826               	movf	?_set_subdivision^(0+128),w
  6649  0F60  00DF               	movwf	_delay_time^(0+128)	;volatile
  6650  0F61  0827               	movf	(?_set_subdivision+1)^(0+128),w
  6651  0F62  00E0               	movwf	(_delay_time+1)^(0+128)	;volatile
  6652  0F63  0D89               	rlf	9,f
  6653  0F64  3B89               	subwfb	9,f
  6654  0F65  0989               	comf	9,f
  6655  0F66  00E1               	movwf	(_delay_time+2)^(0+128)	;volatile
  6656  0F67  00E2               	movwf	(_delay_time+3)^(0+128)	;volatile
  6657                           
  6658                           ;main.c: 351: delayfound = 0;
  6659  0F68  0022               	movlb	2	; select bank2
  6660  0F69  01C8               	clrf	_delayfound^(0+256)
  6661  0F6A  01C9               	clrf	(_delayfound+1)^(0+256)
  6662                           
  6663                           ;main.c: 352: delay_counter = 0;
  6664  0F6B  01C6               	clrf	_delay_counter^(0+256)
  6665  0F6C  01C7               	clrf	(_delay_counter+1)^(0+256)
  6666  0F6D                     l4046:	
  6667                           ;main.c: 353: while (delayfound == 0) {
  6668                           
  6669  0F6D  0022               	movlb	2	; select bank2
  6670  0F6E  0848               	movf	_delayfound^(0+256),w
  6671  0F6F  0449               	iorwf	(_delayfound+1)^(0+256),w
  6672  0F70  1D03               	btfss	3,2
  6673  0F71  2FC8               	goto	l4048
  6674                           
  6675                           ;main.c: 354: if (delay[delay_counter] <= delay_time * 2) {
  6676  0F72  0847               	movf	(_delay_counter+1)^(0+256),w
  6677  0F73  0021               	movlb	1	; select bank1
  6678  0F74  00AB               	movwf	(??_main^(0+128)+1)
  6679  0F75  0022               	movlb	2	; select bank2
  6680  0F76  0846               	movf	_delay_counter^(0+256),w
  6681  0F77  0021               	movlb	1	; select bank1
  6682  0F78  00AA               	movwf	??_main^(0+128)
  6683  0F79  35AA               	lslf	??_main^(0+128),f
  6684  0F7A  0DAB               	rlf	(??_main^(0+128)+1),f
  6685  0F7B  30F2               	movlw	242
  6686  0F7C  00AC               	movwf	(??_main+2)^(0+128)
  6687  0F7D  3023               	movlw	35
  6688  0F7E  00AD               	movwf	((??_main+2)^(0+128)+1)
  6689  0F7F  082A               	movf	??_main^(0+128),w
  6690  0F80  072C               	addwf	(??_main+2)^(0+128),w
  6691  0F81  0086               	movwf	6
  6692  0F82  082B               	movf	(??_main+1)^(0+128),w
  6693  0F83  3D2D               	addwfc	(??_main+3)^(0+128),w
  6694  0F84  0087               	movwf	7
  6695  0F85  3F40               	moviw [0]fsr1
  6696  0F86  00AE               	movwf	(??_main+4)^(0+128)
  6697  0F87  3F41               	moviw [1]fsr1
  6698  0F88  00AF               	movwf	((??_main+4)^(0+128)+1)
  6699  0F89  082E               	movf	(??_main+4)^(0+128),w
  6700  0F8A  00B0               	movwf	(??_main+6)^(0+128)
  6701  0F8B  082F               	movf	(??_main+5)^(0+128),w
  6702  0F8C  00B1               	movwf	((??_main+6)^(0+128)+1)
  6703  0F8D  3000               	movlw	0
  6704  0F8E  1BB1               	btfsc	((??_main+6)^(0+128)+1),7
  6705  0F8F  30FF               	movlw	255
  6706  0F90  00B2               	movwf	((??_main+6)^(0+128)+2)
  6707  0F91  00B3               	movwf	((??_main+6)^(0+128)+3)
  6708  0F92  085F               	movf	_delay_time^(0+128),w	;volatile
  6709  0F93  00B4               	movwf	(??_main+10)^(0+128)
  6710  0F94  0860               	movf	(_delay_time+1)^(0+128),w	;volatile
  6711  0F95  00B5               	movwf	((??_main+10)^(0+128)+1)
  6712  0F96  0861               	movf	(_delay_time+2)^(0+128),w	;volatile
  6713  0F97  00B6               	movwf	((??_main+10)^(0+128)+2)
  6714  0F98  0862               	movf	(_delay_time+3)^(0+128),w	;volatile
  6715  0F99  00B7               	movwf	((??_main+10)^(0+128)+3)
  6716  0F9A  3001               	movlw	1
  6717  0F9B                     u4185:	
  6718  0F9B  35B4               	lslf	(??_main+10)^(0+128),f
  6719  0F9C  0DB5               	rlf	((??_main+10)^(0+128)+1),f
  6720  0F9D  0DB6               	rlf	((??_main+10)^(0+128)+2),f
  6721  0F9E  0DB7               	rlf	((??_main+10)^(0+128)+3),f
  6722  0F9F  0B89               	decfsz	9,f
  6723  0FA0  2F9B               	goto	u4185
  6724  0FA1  0837               	movf	(??_main+13)^(0+128),w
  6725  0FA2  3A80               	xorlw	128
  6726  0FA3  00B8               	movwf	(??_main+14)^(0+128)
  6727  0FA4  0833               	movf	(??_main+9)^(0+128),w
  6728  0FA5  3A80               	xorlw	128
  6729  0FA6  0238               	subwf	(??_main+14)^(0+128),w
  6730  0FA7  1D03               	skipz
  6731  0FA8  2FB3               	goto	u4193
  6732  0FA9  0832               	movf	(??_main+8)^(0+128),w
  6733  0FAA  0236               	subwf	(??_main+12)^(0+128),w
  6734  0FAB  1D03               	skipz
  6735  0FAC  2FB3               	goto	u4193
  6736  0FAD  0831               	movf	(??_main+7)^(0+128),w
  6737  0FAE  0235               	subwf	(??_main+11)^(0+128),w
  6738  0FAF  1D03               	skipz
  6739  0FB0  2FB3               	goto	u4193
  6740  0FB1  0830               	movf	(??_main+6)^(0+128),w
  6741  0FB2  0234               	subwf	(??_main+10)^(0+128),w
  6742  0FB3                     u4193:	
  6743  0FB3  1C03               	skipc
  6744  0FB4  2FC2               	goto	l4044
  6745                           
  6746                           ;main.c: 355: delayfound = 1;
  6747  0FB5  3001               	movlw	1
  6748  0FB6  0022               	movlb	2	; select bank2
  6749  0FB7  00C8               	movwf	_delayfound^(0+256)
  6750  0FB8  3000               	movlw	0
  6751  0FB9  00C9               	movwf	(_delayfound^(0+256)+1)
  6752                           
  6753                           ;main.c: 356: CCPR1 = delay_counter;
  6754  0FBA  0847               	movf	(_delay_counter+1)^(0+256),w
  6755  0FBB  0025               	movlb	5	; select bank5
  6756  0FBC  0092               	movwf	18	;volatile
  6757  0FBD  0022               	movlb	2	; select bank2
  6758  0FBE  0846               	movf	_delay_counter^(0+256),w
  6759  0FBF  0025               	movlb	5	; select bank5
  6760  0FC0  0091               	movwf	17	;volatile
  6761                           
  6762                           ;main.c: 357: } else {
  6763  0FC1  2F6D               	goto	l4046
  6764  0FC2                     l4044:	
  6765                           
  6766                           ;main.c: 358: delay_counter++;
  6767  0FC2  3001               	movlw	1
  6768  0FC3  0022               	movlb	2	; select bank2
  6769  0FC4  07C6               	addwf	_delay_counter^(0+256),f
  6770  0FC5  3000               	movlw	0
  6771  0FC6  3DC7               	addwfc	(_delay_counter+1)^(0+256),f
  6772  0FC7  2F6D               	goto	l4046
  6773  0FC8                     l4048:	
  6774                           
  6775                           ;main.c: 359: }
  6776                           ;main.c: 360: }
  6777                           ;main.c: 361: mod_delay_time = delay_time / 7.5;
  6778  0FC8  0021               	movlb	1	; select bank1
  6779  0FC9  0862               	movf	(_delay_time+3)^(0+128),w	;volatile
  6780  0FCA  0020               	movlb	0	; select bank0
  6781  0FCB  00AB               	movwf	___altoft@c+3
  6782  0FCC  0021               	movlb	1	; select bank1
  6783  0FCD  0861               	movf	(_delay_time+2)^(0+128),w	;volatile
  6784  0FCE  0020               	movlb	0	; select bank0
  6785  0FCF  00AA               	movwf	___altoft@c+2
  6786  0FD0  0021               	movlb	1	; select bank1
  6787  0FD1  0860               	movf	(_delay_time+1)^(0+128),w	;volatile
  6788  0FD2  0020               	movlb	0	; select bank0
  6789  0FD3  00A9               	movwf	___altoft@c+1
  6790  0FD4  0021               	movlb	1	; select bank1
  6791  0FD5  085F               	movf	_delay_time^(0+128),w	;volatile
  6792  0FD6  0020               	movlb	0	; select bank0
  6793  0FD7  00A8               	movwf	___altoft@c
  6794  0FD8  3192  2292  3189   	fcall	___altoft
  6795  0FDB  0020               	movlb	0	; select bank0
  6796  0FDC  0828               	movf	?___altoft,w
  6797  0FDD  00C8               	movwf	___ftdiv@f1
  6798  0FDE  0829               	movf	?___altoft+1,w
  6799  0FDF  00C9               	movwf	___ftdiv@f1+1
  6800  0FE0  082A               	movf	?___altoft+2,w
  6801  0FE1  00CA               	movwf	___ftdiv@f1+2
  6802  0FE2  3000               	movlw	0
  6803  0FE3  00C5               	movwf	___ftdiv@f2
  6804  0FE4  30F0               	movlw	240
  6805  0FE5  00C6               	movwf	___ftdiv@f2+1
  6806  0FE6  3040               	movlw	64
  6807  0FE7  00C7               	movwf	___ftdiv@f2+2
  6808  0FE8  3188  207D  3189   	fcall	___ftdiv
  6809  0FEB  0020               	movlb	0	; select bank0
  6810  0FEC  0845               	movf	?___ftdiv,w
  6811  0FED  00E7               	movwf	___fttol@f1
  6812  0FEE  0846               	movf	?___ftdiv+1,w
  6813  0FEF  00E8               	movwf	___fttol@f1+1
  6814  0FF0  0847               	movf	?___ftdiv+2,w
  6815  0FF1  00E9               	movwf	___fttol@f1+2
  6816  0FF2  3197  2761  3189   	fcall	___fttol
  6817  0FF5  0020               	movlb	0	; select bank0
  6818  0FF6  0868               	movf	?___fttol+1,w
  6819  0FF7  0022               	movlb	2	; select bank2
  6820  0FF8  00E9               	movwf	(_mod_delay_time+1)^(0+256)
  6821  0FF9  0020               	movlb	0	; select bank0
  6822  0FFA  0867               	movf	?___fttol,w
  6823  0FFB  0022               	movlb	2	; select bank2
  6824  0FFC  00E8               	movwf	_mod_delay_time^(0+256)
  6825                           
  6826                           ;main.c: 363: delay_time_changed = 0;
  6827  0FFD  01DC               	clrf	_delay_time_changed^(0+256)
  6828  0FFE  01DD               	clrf	(_delay_time_changed+1)^(0+256)
  6829  0FFF  2935               	goto	l3846
  6830  1000                     __end_of_main:	
  6831                           
  6832                           	psect	text1
  6833  13CD                     __ptext1:	
  6834 ;; *************** function _update_mode *****************
  6835 ;; Defined at:
  6836 ;;		line 58 in file "tactiles.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6852 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6853 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6854 ;;Total ram usage:        1 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    2
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_main
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           
  6865                           ;psect for function _update_mode
  6866  13CD                     _update_mode:	
  6867                           
  6868                           ;tactiles.c: 63: if (PORTCbits.RC0 == 0) {
  6869                           
  6870                           ;incstack = 0
  6871                           ; Regs used in _update_mode: [wreg-fsr0h+status,2+status,0]
  6872  13CD  0020               	movlb	0	; select bank0
  6873  13CE  180E               	btfsc	14,0	;volatile
  6874  13CF  2C0E               	goto	l3570
  6875                           
  6876                           ;tactiles.c: 64: debounce_mode2++;
  6877  13D0  3001               	movlw	1
  6878  13D1  0022               	movlb	2	; select bank2
  6879  13D2  07C4               	addwf	_debounce_mode2^(0+256),f
  6880  13D3  3000               	movlw	0
  6881  13D4  3DC5               	addwfc	(_debounce_mode2+1)^(0+256),f
  6882                           
  6883                           ;tactiles.c: 65: if (debounce_mode2 > 25) {
  6884  13D5  0845               	movf	(_debounce_mode2+1)^(0+256),w
  6885  13D6  3A80               	xorlw	128
  6886  13D7  0020               	movlb	0	; select bank0
  6887  13D8  00A0               	movwf	??_update_mode
  6888  13D9  3080               	movlw	128
  6889  13DA  0220               	subwf	??_update_mode,w
  6890  13DB  1D03               	skipz
  6891  13DC  2BE0               	goto	u3395
  6892  13DD  301A               	movlw	26
  6893  13DE  0022               	movlb	2	; select bank2
  6894  13DF  0244               	subwf	_debounce_mode2^(0+256),w
  6895  13E0                     u3395:	
  6896  13E0  1C03               	skipc
  6897  13E1  0008               	return
  6898                           
  6899                           ;tactiles.c: 66: debounce_mode2 = 25;
  6900  13E2  3019               	movlw	25
  6901  13E3  0022               	movlb	2	; select bank2
  6902  13E4  00C4               	movwf	_debounce_mode2^(0+256)
  6903  13E5  3000               	movlw	0
  6904  13E6  00C5               	movwf	(_debounce_mode2^(0+256)+1)
  6905                           
  6906                           ;tactiles.c: 67: mode2_state++;
  6907  13E7  3001               	movlw	1
  6908  13E8  0020               	movlb	0	; select bank0
  6909  13E9  00A0               	movwf	??_update_mode
  6910  13EA  0820               	movf	??_update_mode,w
  6911  13EB  0021               	movlb	1	; select bank1
  6912  13EC  07D7               	addwf	_mode2_state^(0+128),f
  6913                           
  6914                           ;tactiles.c: 68: if (mode2_state > 2) {
  6915  13ED  3003               	movlw	3
  6916  13EE  0257               	subwf	_mode2_state^(0+128),w
  6917  13EF  1C03               	skipc
  6918  13F0  2BFE               	goto	l3568
  6919                           
  6920                           ;tactiles.c: 69: mode2_state = 0;
  6921  13F1  01D7               	clrf	_mode2_state^(0+128)
  6922                           
  6923                           ;tactiles.c: 70: }
  6924                           ;tactiles.c: 71: switch(mode2_state) {
  6925  13F2  2BFE               	goto	l3568
  6926  13F3                     l778:	
  6927                           ;tactiles.c: 72: case 0:
  6928                           
  6929                           
  6930                           ;tactiles.c: 73: LATBbits.LATB1 = 0;
  6931  13F3  0022               	movlb	2	; select bank2
  6932  13F4  108D               	bcf	13,1	;volatile
  6933  13F5  2BFC               	goto	L5
  6934  13F6                     l780:	
  6935                           ;tactiles.c: 76: case 1:
  6936                           
  6937                           ;tactiles.c: 75: break;
  6938                           
  6939                           ;tactiles.c: 74: LATBbits.LATB0 = 0;
  6940                           
  6941                           
  6942                           ;tactiles.c: 77: LATBbits.LATB1 = 0;
  6943  13F6  0022               	movlb	2	; select bank2
  6944  13F7  108D               	bcf	13,1	;volatile
  6945                           
  6946                           ;tactiles.c: 78: LATBbits.LATB0 = 1;
  6947  13F8  140D               	bsf	13,0	;volatile
  6948                           
  6949                           ;tactiles.c: 79: break;
  6950  13F9  2C0A               	goto	l782
  6951  13FA                     l781:	
  6952                           ;tactiles.c: 80: case 2:
  6953                           
  6954                           
  6955                           ;tactiles.c: 81: LATBbits.LATB1 = 1;
  6956  13FA  0022               	movlb	2	; select bank2
  6957  13FB  148D               	bsf	13,1	;volatile
  6958  13FC                     L5:	
  6959                           
  6960                           ;tactiles.c: 82: LATBbits.LATB0 = 0;
  6961  13FC  100D               	bcf	13,0	;volatile
  6962                           
  6963                           ;tactiles.c: 84: }
  6964                           
  6965                           ;tactiles.c: 83: break;
  6966  13FD  2C0A               	goto	l782
  6967  13FE                     l3568:	
  6968  13FE  0021               	movlb	1	; select bank1
  6969  13FF  0857               	movf	_mode2_state^(0+128),w
  6970                           
  6971                           ; Switch size 1, requested type "space"
  6972                           ; Number of cases is 3, Range of values is 0 to 2
  6973                           ; switch strategies available:
  6974                           ; Name         Instructions Cycles
  6975                           ; simple_byte           10     6 (average)
  6976                           ; direct_byte           12     6 (fixed)
  6977                           ; jumptable            260     6 (fixed)
  6978                           ;	Chosen strategy is simple_byte
  6979  1400  3A00               	xorlw	0	; case 0
  6980  1401  1903               	skipnz
  6981  1402  2BF3               	goto	l778
  6982  1403  3A01               	xorlw	1	; case 1
  6983  1404  1903               	skipnz
  6984  1405  2BF6               	goto	l780
  6985  1406  3A03               	xorlw	3	; case 2
  6986  1407  1903               	skipnz
  6987  1408  2BFA               	goto	l781
  6988  1409  2C0A               	goto	l782
  6989  140A                     l782:	
  6990                           ;tactiles.c: 85: while (PORTCbits.RC0 == 0) {
  6991                           
  6992  140A  0020               	movlb	0	; select bank0
  6993  140B  180E               	btfsc	14,0	;volatile
  6994  140C  0008               	return
  6995  140D  2C0A               	goto	l782
  6996  140E                     l3570:	
  6997                           ;tactiles.c: 86: }
  6998                           ;tactiles.c: 87: }
  6999                           ;tactiles.c: 88: } else {
  7000                           
  7001                           
  7002                           ;tactiles.c: 89: debounce_mode2 = 0;
  7003  140E  0022               	movlb	2	; select bank2
  7004  140F  01C4               	clrf	_debounce_mode2^(0+256)
  7005  1410  01C5               	clrf	(_debounce_mode2+1)^(0+256)
  7006  1411  0008               	return
  7007  1412                     __end_of_update_mode:	
  7008                           
  7009                           	psect	text2
  7010  0707                     __ptext2:	
  7011 ;; *************** function _updateSwitchBypass *****************
  7012 ;; Defined at:
  7013 ;;		line 34 in file "SwitchBypass.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2, status,0, pclath, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7029 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7030 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7031 ;;Total ram usage:        1 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:    5
  7034 ;; This function calls:
  7035 ;;		_setFeedbackState
  7036 ;;		_setSwitchBypassState
  7037 ;; This function is called by:
  7038 ;;		_main
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           
  7043                           ;psect for function _updateSwitchBypass
  7044  0707                     _updateSwitchBypass:	
  7045                           
  7046                           ;SwitchBypass.c: 41: if (PORTEbits.RE1 == 0) {
  7047                           
  7048                           ;incstack = 0
  7049                           ; Regs used in _updateSwitchBypass: [wreg+status,2+status,0+pclath+cstack]
  7050  0707  0020               	movlb	0	; select bank0
  7051  0708  1890               	btfsc	16,1	;volatile
  7052  0709  2F1D               	goto	l3610
  7053                           
  7054                           ;SwitchBypass.c: 42: if (switchBypass_pressed > 0) {
  7055  070A  0021               	movlb	1	; select bank1
  7056  070B  0850               	movf	(_switchBypass_pressed+1)^(0+128),w
  7057  070C  3A80               	xorlw	128
  7058  070D  0020               	movlb	0	; select bank0
  7059  070E  00B2               	movwf	??_updateSwitchBypass
  7060  070F  3080               	movlw	128
  7061  0710  0232               	subwf	??_updateSwitchBypass,w
  7062  0711  1D03               	skipz
  7063  0712  2F16               	goto	u3435
  7064  0713  3001               	movlw	1
  7065  0714  0021               	movlb	1	; select bank1
  7066  0715  024F               	subwf	_switchBypass_pressed^(0+128),w
  7067  0716                     u3435:	
  7068  0716  1C03               	skipc
  7069  0717  2F30               	goto	l3614
  7070                           
  7071                           ;SwitchBypass.c: 43: switchBypass_pressed--;
  7072  0718  30FF               	movlw	255
  7073  0719  0021               	movlb	1	; select bank1
  7074  071A  07CF               	addwf	_switchBypass_pressed^(0+128),f
  7075  071B  30FF               	movlw	255
  7076  071C  2F2F               	goto	L6
  7077  071D                     l3610:	
  7078                           ;SwitchBypass.c: 44: }
  7079                           ;SwitchBypass.c: 45: } else if (switchBypass_pressed < 25) {
  7080                           
  7081  071D  0021               	movlb	1	; select bank1
  7082  071E  0850               	movf	(_switchBypass_pressed+1)^(0+128),w
  7083  071F  3A80               	xorlw	128
  7084  0720  0020               	movlb	0	; select bank0
  7085  0721  00B2               	movwf	??_updateSwitchBypass
  7086  0722  3080               	movlw	128
  7087  0723  0232               	subwf	??_updateSwitchBypass,w
  7088  0724  1D03               	skipz
  7089  0725  2F29               	goto	u3445
  7090  0726  3019               	movlw	25
  7091  0727  0021               	movlb	1	; select bank1
  7092  0728  024F               	subwf	_switchBypass_pressed^(0+128),w
  7093  0729                     u3445:	
  7094  0729  1803               	skipnc
  7095  072A  2F30               	goto	l3614
  7096                           
  7097                           ;SwitchBypass.c: 46: switchBypass_pressed++;
  7098  072B  3001               	movlw	1
  7099  072C  0021               	movlb	1	; select bank1
  7100  072D  07CF               	addwf	_switchBypass_pressed^(0+128),f
  7101  072E  3000               	movlw	0
  7102  072F                     L6:	
  7103  072F  3DD0               	addwfc	(_switchBypass_pressed+1)^(0+128),f
  7104  0730                     l3614:	
  7105                           
  7106                           ;SwitchBypass.c: 47: }
  7107                           ;SwitchBypass.c: 53: if (switchBypass_pressed == 0) {
  7108  0730  0021               	movlb	1	; select bank1
  7109  0731  084F               	movf	_switchBypass_pressed^(0+128),w
  7110  0732  0450               	iorwf	(_switchBypass_pressed+1)^(0+128),w
  7111  0733  1D03               	btfss	3,2
  7112  0734  2F7C               	goto	l3646
  7113                           
  7114                           ;SwitchBypass.c: 56: if (feedback_start == 0) {
  7115  0735  0854               	movf	_feedback_start^(0+128),w
  7116  0736  1D03               	btfss	3,2
  7117  0737  2F3C               	goto	l3622
  7118                           
  7119                           ;SwitchBypass.c: 57: feedback_start = 1;
  7120  0738  01D4               	clrf	_feedback_start^(0+128)
  7121  0739  0AD4               	incf	_feedback_start^(0+128),f
  7122                           
  7123                           ;SwitchBypass.c: 58: feedback_timer = 0;
  7124  073A  01CB               	clrf	_feedback_timer^(0+128)	;volatile
  7125  073B  01CC               	clrf	(_feedback_timer+1)^(0+128)	;volatile
  7126  073C                     l3622:	
  7127                           
  7128                           ;SwitchBypass.c: 59: }
  7129                           ;SwitchBypass.c: 60: if (switchBypass_state == 1) {
  7130  073C  0020               	movlb	0	; select bank0
  7131  073D  036F               	decf	_switchBypass_state,w
  7132  073E  1D03               	btfss	3,2
  7133  073F  2F66               	goto	l946
  7134                           
  7135                           ;SwitchBypass.c: 62: if (switchBypass_up == 1) {
  7136  0740  0022               	movlb	2	; select bank2
  7137  0741  036A               	decf	_switchBypass_up^(0+256),w
  7138  0742  046B               	iorwf	(_switchBypass_up+1)^(0+256),w
  7139  0743  1D03               	btfss	3,2
  7140  0744  2F49               	goto	l947
  7141                           
  7142                           ;SwitchBypass.c: 63: switchBypass_toggle = 1;
  7143  0745  3001               	movlw	1
  7144  0746  00D6               	movwf	_switchBypass_toggle^(0+256)
  7145  0747  3000               	movlw	0
  7146  0748  00D7               	movwf	(_switchBypass_toggle^(0+256)+1)
  7147  0749                     l947:	
  7148                           
  7149                           ;SwitchBypass.c: 64: }
  7150                           ;SwitchBypass.c: 69: if (feedback_timer >= long_press_limit && feedback_state == 0 && by
      +                          pass_turning_on == 0) {
  7151  0749  0021               	movlb	1	; select bank1
  7152  074A  0868               	movf	(_long_press_limit+1)^(0+128),w
  7153  074B  024C               	subwf	(_feedback_timer+1)^(0+128),w	;volatile
  7154  074C  1D03               	skipz
  7155  074D  2F50               	goto	u3495
  7156  074E  0867               	movf	_long_press_limit^(0+128),w
  7157  074F  024B               	subwf	_feedback_timer^(0+128),w	;volatile
  7158  0750                     u3495:	
  7159  0750  1C03               	skipc
  7160  0751  2F78               	goto	l3644
  7161  0752  0022               	movlb	2	; select bank2
  7162  0753  085E               	movf	_feedback_state^(0+256),w
  7163  0754  045F               	iorwf	(_feedback_state+1)^(0+256),w
  7164  0755  1D03               	btfss	3,2
  7165  0756  2F78               	goto	l3644
  7166  0757  0021               	movlb	1	; select bank1
  7167  0758  0853               	movf	_bypass_turning_on^(0+128),w
  7168  0759  1D03               	btfss	3,2
  7169  075A  2F78               	goto	l3644
  7170                           
  7171                           ;SwitchBypass.c: 71: LATBbits.LATB2 = 0;
  7172  075B  0022               	movlb	2	; select bank2
  7173  075C  110D               	bcf	13,2	;volatile
  7174                           
  7175                           ;SwitchBypass.c: 72: setFeedbackState(1);
  7176  075D  3001               	movlw	1
  7177  075E  0020               	movlb	0	; select bank0
  7178  075F  00AE               	movwf	setFeedbackState@f_state
  7179  0760  3000               	movlw	0
  7180  0761  00AF               	movwf	setFeedbackState@f_state+1
  7181  0762  3193  230D  3187   	fcall	_setFeedbackState
  7182                           
  7183                           ;SwitchBypass.c: 73: }
  7184                           ;SwitchBypass.c: 74: } else {
  7185  0765  2F78               	goto	l3644
  7186  0766                     l946:	
  7187                           
  7188                           ;SwitchBypass.c: 76: bypass_turning_on = 1;
  7189  0766  0021               	movlb	1	; select bank1
  7190  0767  01D3               	clrf	_bypass_turning_on^(0+128)
  7191  0768  0AD3               	incf	_bypass_turning_on^(0+128),f
  7192                           
  7193                           ;SwitchBypass.c: 77: switchBypass_toggle = 0;
  7194  0769  0022               	movlb	2	; select bank2
  7195  076A  01D6               	clrf	_switchBypass_toggle^(0+256)
  7196  076B  01D7               	clrf	(_switchBypass_toggle+1)^(0+256)
  7197                           
  7198                           ;SwitchBypass.c: 78: setSwitchBypassState(1);
  7199  076C  3001               	movlw	1
  7200  076D  0020               	movlb	0	; select bank0
  7201  076E  00AE               	movwf	setSwitchBypassState@f_state
  7202  076F  3000               	movlw	0
  7203  0770  00AF               	movwf	setSwitchBypassState@f_state+1
  7204  0771  3194  2412         	fcall	_setSwitchBypassState
  7205                           
  7206                           ;SwitchBypass.c: 79: feedback_state = 0;
  7207  0773  0022               	movlb	2	; select bank2
  7208  0774  01DE               	clrf	_feedback_state^(0+256)
  7209  0775  01DF               	clrf	(_feedback_state+1)^(0+256)
  7210                           
  7211                           ;SwitchBypass.c: 80: feedback_start = 0;
  7212  0776  0021               	movlb	1	; select bank1
  7213  0777  01D4               	clrf	_feedback_start^(0+128)
  7214  0778                     l3644:	
  7215                           
  7216                           ;SwitchBypass.c: 81: }
  7217                           ;SwitchBypass.c: 83: switchBypass_up = 0;
  7218  0778  0022               	movlb	2	; select bank2
  7219  0779  01EA               	clrf	_switchBypass_up^(0+256)
  7220  077A  01EB               	clrf	(_switchBypass_up+1)^(0+256)
  7221                           
  7222                           ;SwitchBypass.c: 84: } else if (switchBypass_pressed >= 25) {
  7223  077B  0008               	return
  7224  077C                     l3646:	
  7225  077C  0021               	movlb	1	; select bank1
  7226  077D  0850               	movf	(_switchBypass_pressed+1)^(0+128),w
  7227  077E  3A80               	xorlw	128
  7228  077F  0020               	movlb	0	; select bank0
  7229  0780  00B2               	movwf	??_updateSwitchBypass
  7230  0781  3080               	movlw	128
  7231  0782  0232               	subwf	??_updateSwitchBypass,w
  7232  0783  1D03               	skipz
  7233  0784  2F88               	goto	u3525
  7234  0785  3019               	movlw	25
  7235  0786  0021               	movlb	1	; select bank1
  7236  0787  024F               	subwf	_switchBypass_pressed^(0+128),w
  7237  0788                     u3525:	
  7238  0788  1C03               	skipc
  7239  0789  0008               	return
  7240                           
  7241                           ;SwitchBypass.c: 85: if (switchBypass_toggle == 1 && feedback_state == 0) {
  7242  078A  0022               	movlb	2	; select bank2
  7243  078B  0356               	decf	_switchBypass_toggle^(0+256),w
  7244  078C  0457               	iorwf	(_switchBypass_toggle+1)^(0+256),w
  7245  078D  1D03               	btfss	3,2
  7246  078E  2F9A               	goto	l3654
  7247  078F  085E               	movf	_feedback_state^(0+256),w
  7248  0790  045F               	iorwf	(_feedback_state+1)^(0+256),w
  7249  0791  1D03               	btfss	3,2
  7250  0792  2F9A               	goto	l3654
  7251                           
  7252                           ;SwitchBypass.c: 86: setSwitchBypassState(0);
  7253  0793  3000               	movlw	0
  7254  0794  0020               	movlb	0	; select bank0
  7255  0795  00AE               	movwf	setSwitchBypassState@f_state
  7256  0796  00AF               	movwf	setSwitchBypassState@f_state+1
  7257  0797  3194  2412  3187   	fcall	_setSwitchBypassState
  7258  079A                     l3654:	
  7259                           
  7260                           ;SwitchBypass.c: 87: }
  7261                           ;SwitchBypass.c: 88: LATBbits.LATB2 = switchBypass_state;
  7262  079A  0020               	movlb	0	; select bank0
  7263  079B  0C6F               	rrf	_switchBypass_state,w
  7264  079C  0022               	movlb	2	; select bank2
  7265  079D  1C03               	skipc
  7266  079E  110D               	bcf	13,2	;volatile
  7267  079F  1803               	skipnc
  7268  07A0  150D               	bsf	13,2	;volatile
  7269                           
  7270                           ;SwitchBypass.c: 90: setFeedbackState(0);
  7271  07A1  3000               	movlw	0
  7272  07A2  0020               	movlb	0	; select bank0
  7273  07A3  00AE               	movwf	setFeedbackState@f_state
  7274  07A4  00AF               	movwf	setFeedbackState@f_state+1
  7275  07A5  3193  230D         	fcall	_setFeedbackState
  7276                           
  7277                           ;SwitchBypass.c: 92: feedback_start = 0;
  7278  07A7  0021               	movlb	1	; select bank1
  7279  07A8  01D4               	clrf	_feedback_start^(0+128)
  7280                           
  7281                           ;SwitchBypass.c: 93: bypass_turning_on = 0;
  7282  07A9  01D3               	clrf	_bypass_turning_on^(0+128)
  7283                           
  7284                           ;SwitchBypass.c: 94: switchBypass_toggle = 0;
  7285  07AA  0022               	movlb	2	; select bank2
  7286  07AB  01D6               	clrf	_switchBypass_toggle^(0+256)
  7287  07AC  01D7               	clrf	(_switchBypass_toggle+1)^(0+256)
  7288                           
  7289                           ;SwitchBypass.c: 95: switchBypass_up = 1;
  7290  07AD  3001               	movlw	1
  7291  07AE  00EA               	movwf	_switchBypass_up^(0+256)
  7292  07AF  3000               	movlw	0
  7293  07B0  00EB               	movwf	(_switchBypass_up^(0+256)+1)
  7294                           
  7295                           ;SwitchBypass.c: 97: switchBypass_pressed = 25;
  7296  07B1  3019               	movlw	25
  7297  07B2  0021               	movlb	1	; select bank1
  7298  07B3  00CF               	movwf	_switchBypass_pressed^(0+128)
  7299  07B4  3000               	movlw	0
  7300  07B5  00D0               	movwf	(_switchBypass_pressed^(0+128)+1)
  7301  07B6  0008               	return
  7302  07B7                     __end_of_updateSwitchBypass:	
  7303                           
  7304                           	psect	text3
  7305  130D                     __ptext3:	
  7306 ;; *************** function _setFeedbackState *****************
  7307 ;; Defined at:
  7308 ;;		line 121 in file "SwitchBypass.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  f_state         2   14[BANK0 ] int 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;		None
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  1    wreg      void 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0, pclath, cstack
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7326 ;;Total ram usage:        2 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:    4
  7329 ;; This function calls:
  7330 ;;		_wait_ms
  7331 ;; This function is called by:
  7332 ;;		_updateSwitchBypass
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           
  7337                           ;psect for function _setFeedbackState
  7338  130D                     _setFeedbackState:	
  7339                           
  7340                           ;SwitchBypass.c: 122: if (feedback_state == f_state) {return;}
  7341                           
  7342                           ;incstack = 0
  7343                           ; Regs used in _setFeedbackState: [wreg+status,2+status,0+pclath+cstack]
  7344  130D  0020               	movlb	0	; select bank0
  7345  130E  082F               	movf	setFeedbackState@f_state+1,w
  7346  130F  0022               	movlb	2	; select bank2
  7347  1310  065F               	xorwf	(_feedback_state+1)^(0+256),w
  7348  1311  1D03               	skipz
  7349  1312  2B17               	goto	u2555
  7350  1313  0020               	movlb	0	; select bank0
  7351  1314  082E               	movf	setFeedbackState@f_state,w
  7352  1315  0022               	movlb	2	; select bank2
  7353  1316  065E               	xorwf	_feedback_state^(0+256),w
  7354  1317                     u2555:	
  7355  1317  1903               	btfsc	3,2
  7356  1318  0008               	return
  7357                           
  7358                           ;SwitchBypass.c: 123: feedback_state = f_state;
  7359  1319  0020               	movlb	0	; select bank0
  7360  131A  082F               	movf	setFeedbackState@f_state+1,w
  7361  131B  0022               	movlb	2	; select bank2
  7362  131C  00DF               	movwf	(_feedback_state+1)^(0+256)
  7363  131D  0020               	movlb	0	; select bank0
  7364  131E  082E               	movf	setFeedbackState@f_state,w
  7365  131F  0022               	movlb	2	; select bank2
  7366  1320  00DE               	movwf	_feedback_state^(0+256)
  7367                           
  7368                           ;SwitchBypass.c: 124: LATBbits.LATB3 = f_state;
  7369  1321  0020               	movlb	0	; select bank0
  7370  1322  0C2E               	rrf	setFeedbackState@f_state,w
  7371  1323  0022               	movlb	2	; select bank2
  7372  1324  1C03               	skipc
  7373  1325  118D               	bcf	13,3	;volatile
  7374  1326  1803               	skipnc
  7375  1327  158D               	bsf	13,3	;volatile
  7376                           
  7377                           ;SwitchBypass.c: 126: LATGbits.LATG2 = f_state;
  7378  1328  0020               	movlb	0	; select bank0
  7379  1329  0C2E               	rrf	setFeedbackState@f_state,w
  7380  132A  0027               	movlb	7	; select bank7
  7381  132B  1C03               	skipc
  7382  132C  110D               	bcf	13,2	;volatile
  7383  132D  1803               	skipnc
  7384  132E  150D               	bsf	13,2	;volatile
  7385                           
  7386                           ;SwitchBypass.c: 127: LATGbits.LATG1 = !f_state;
  7387  132F  0020               	movlb	0	; select bank0
  7388  1330  082E               	movf	setFeedbackState@f_state,w
  7389  1331  042F               	iorwf	setFeedbackState@f_state+1,w
  7390  1332  1D03               	btfss	3,2
  7391  1333  2B37               	goto	u2560
  7392  1334  0027               	movlb	7	; select bank7
  7393  1335  148D               	bsf	13,1	;volatile
  7394  1336  2B39               	goto	l3192
  7395  1337                     u2560:	
  7396  1337  0027               	movlb	7	; select bank7
  7397  1338  108D               	bcf	13,1	;volatile
  7398  1339                     l3192:	
  7399                           
  7400                           ;SwitchBypass.c: 129: wait_ms(20);
  7401  1339  3014               	movlw	20
  7402  133A  0020               	movlb	0	; select bank0
  7403  133B  00AC               	movwf	wait_ms@time
  7404  133C  3000               	movlw	0
  7405  133D  00AD               	movwf	wait_ms@time+1
  7406  133E  3190  20D3  3193   	fcall	_wait_ms
  7407                           
  7408                           ;SwitchBypass.c: 131: LATGbits.LATG2 = 0;
  7409  1341  0027               	movlb	7	; select bank7
  7410  1342  110D               	bcf	13,2	;volatile
  7411                           
  7412                           ;SwitchBypass.c: 132: LATGbits.LATG1 = 0;
  7413  1343  108D               	bcf	13,1	;volatile
  7414                           
  7415                           ;SwitchBypass.c: 134: wait_ms(20);
  7416  1344  3014               	movlw	20
  7417  1345  0020               	movlb	0	; select bank0
  7418  1346  00AC               	movwf	wait_ms@time
  7419  1347  3000               	movlw	0
  7420  1348  00AD               	movwf	wait_ms@time+1
  7421  1349  3190  20D3         	fcall	_wait_ms
  7422  134B  0008               	return
  7423  134C                     __end_of_setFeedbackState:	
  7424                           
  7425                           	psect	text4
  7426  1048                     __ptext4:	
  7427 ;; *************** function _showBootSequence *****************
  7428 ;; Defined at:
  7429 ;;		line 86 in file "LEDs.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;		None
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7446 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7447 ;;Total ram usage:        1 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    5
  7450 ;; This function calls:
  7451 ;;		_getCurrentLEDState
  7452 ;;		_restoreLEDState
  7453 ;;		_solidring_tactiles
  7454 ;;		_star_tactiles
  7455 ;; This function is called by:
  7456 ;;		_main
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           
  7461                           ;psect for function _showBootSequence
  7462  1048                     _showBootSequence:	
  7463                           
  7464                           ;LEDs.c: 87: getCurrentLEDState();
  7465                           
  7466                           ;incstack = 0
  7467                           ; Regs used in _showBootSequence: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7468  1048  319F  2759  3190   	fcall	_getCurrentLEDState
  7469                           
  7470                           ;LEDs.c: 88: suspend_blink = 1;
  7471  104B  3001               	movlw	1
  7472  104C  0020               	movlb	0	; select bank0
  7473  104D  00B5               	movwf	??_showBootSequence
  7474  104E  0835               	movf	??_showBootSequence,w
  7475  104F  0021               	movlb	1	; select bank1
  7476  1050  00DA               	movwf	_suspend_blink^(0+128)	;volatile
  7477                           
  7478                           ;LEDs.c: 90: LATBbits.LATB4 = 0;
  7479  1051  0022               	movlb	2	; select bank2
  7480  1052  120D               	bcf	13,4	;volatile
  7481                           
  7482                           ;LEDs.c: 91: LATBbits.LATB2 = 0;
  7483  1053  110D               	bcf	13,2	;volatile
  7484                           
  7485                           ;LEDs.c: 92: LATBbits.LATB5 = 0;
  7486  1054  128D               	bcf	13,5	;volatile
  7487                           
  7488                           ;LEDs.c: 93: LATBbits.LATB3 = 0;
  7489  1055  118D               	bcf	13,3	;volatile
  7490                           
  7491                           ;LEDs.c: 94: LATBbits.LATB0 = 0;
  7492  1056  100D               	bcf	13,0	;volatile
  7493                           
  7494                           ;LEDs.c: 95: LATBbits.LATB1 = 0;
  7495  1057  108D               	bcf	13,1	;volatile
  7496                           
  7497                           ;LEDs.c: 113: star_tactiles(0);
  7498  1058  3000               	movlw	0
  7499  1059  3188  200E  3190   	fcall	_star_tactiles
  7500                           
  7501                           ;LEDs.c: 114: star_tactiles(0);
  7502  105C  3000               	movlw	0
  7503  105D  3188  200E  3190   	fcall	_star_tactiles
  7504                           
  7505                           ;LEDs.c: 115: star_tactiles(1);
  7506  1060  3001               	movlw	1
  7507  1061  3188  200E  3190   	fcall	_star_tactiles
  7508                           
  7509                           ;LEDs.c: 116: star_tactiles(1);
  7510  1064  3001               	movlw	1
  7511  1065  3188  200E  3190   	fcall	_star_tactiles
  7512                           
  7513                           ;LEDs.c: 118: solidring_tactiles();
  7514  1068  3193  234C  3190   	fcall	_solidring_tactiles
  7515                           
  7516                           ;LEDs.c: 119: solidring_tactiles();
  7517  106B  3193  234C  3190   	fcall	_solidring_tactiles
  7518                           
  7519                           ;LEDs.c: 122: suspend_blink = 0;
  7520  106E  0021               	movlb	1	; select bank1
  7521  106F  01DA               	clrf	_suspend_blink^(0+128)	;volatile
  7522                           
  7523                           ;LEDs.c: 123: restoreLEDState();
  7524  1070  319F  2795         	fcall	_restoreLEDState
  7525  1072  0008               	return
  7526  1073                     __end_of_showBootSequence:	
  7527                           
  7528                           	psect	text5
  7529  080E                     __ptext5:	
  7530 ;; *************** function _star_tactiles *****************
  7531 ;; Defined at:
  7532 ;;		line 194 in file "LEDs.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  reverse         1    wreg     unsigned char 
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;  reverse         1   16[BANK0 ] unsigned char 
  7537 ;;  iLed            2   19[BANK0 ] int 
  7538 ;;  iLed            2   17[BANK0 ] int 
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  1    wreg      void 
  7541 ;; Registers used:
  7542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7549 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7551 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7552 ;;Total ram usage:        7 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:    4
  7555 ;; This function calls:
  7556 ;;		_set_leds_bottom
  7557 ;;		_set_leds_top
  7558 ;;		_wait_ms
  7559 ;; This function is called by:
  7560 ;;		_showBootSequence
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           
  7565                           ;psect for function _star_tactiles
  7566  080E                     _star_tactiles:	
  7567                           
  7568                           ;incstack = 0
  7569                           ; Regs used in _star_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7570                           ;star_tactiles@reverse stored from wreg
  7571  080E  0020               	movlb	0	; select bank0
  7572  080F  00B0               	movwf	star_tactiles@reverse
  7573                           
  7574                           ;LEDs.c: 195: if (reverse == 1) {
  7575  0810  0330               	decf	star_tactiles@reverse,w
  7576  0811  1D03               	btfss	3,2
  7577  0812  2843               	goto	l3124
  7578                           
  7579                           ;LEDs.c: 196: for (int iLed = 5; iLed > -1; iLed--) {
  7580  0813  3005               	movlw	5
  7581  0814  00B1               	movwf	star_tactiles@iLed
  7582  0815  3000               	movlw	0
  7583  0816  00B2               	movwf	star_tactiles@iLed+1
  7584  0817                     L7:	
  7585  0817  1BB2               	btfsc	star_tactiles@iLed+1,7
  7586  0818  0008               	return
  7587                           
  7588                           ;LEDs.c: 197: set_leds_top(iLed, 1);
  7589  0819  0832               	movf	star_tactiles@iLed+1,w
  7590  081A  00A1               	movwf	set_leds_top@x+1
  7591  081B  0831               	movf	star_tactiles@iLed,w
  7592  081C  00A0               	movwf	set_leds_top@x
  7593  081D  3001               	movlw	1
  7594  081E  00A2               	movwf	set_leds_top@ledState
  7595  081F  3000               	movlw	0
  7596  0820  00A3               	movwf	set_leds_top@ledState+1
  7597  0821  3195  259B  3188   	fcall	_set_leds_top
  7598                           
  7599                           ;LEDs.c: 198: set_leds_bottom(6 - iLed);
  7600  0824  0020               	movlb	0	; select bank0
  7601  0825  0931               	comf	star_tactiles@iLed,w
  7602  0826  00AE               	movwf	??_star_tactiles
  7603  0827  0932               	comf	star_tactiles@iLed+1,w
  7604  0828  00AF               	movwf	??_star_tactiles+1
  7605  0829  0AAE               	incf	??_star_tactiles,f
  7606  082A  1903               	skipnz
  7607  082B  0AAF               	incf	??_star_tactiles+1,f
  7608  082C  082E               	movf	??_star_tactiles,w
  7609  082D  3E06               	addlw	6
  7610  082E  00A0               	movwf	set_leds_bottom@x
  7611  082F  3000               	movlw	0
  7612  0830  3D2F               	addwfc	??_star_tactiles+1,w
  7613  0831  00A1               	movwf	set_leds_bottom@x+1
  7614  0832  3192  2257  3188   	fcall	_set_leds_bottom
  7615                           
  7616                           ;LEDs.c: 199: wait_ms(5);
  7617  0835  3005               	movlw	5
  7618  0836  0020               	movlb	0	; select bank0
  7619  0837  00AC               	movwf	wait_ms@time
  7620  0838  3000               	movlw	0
  7621  0839  00AD               	movwf	wait_ms@time+1
  7622  083A  3190  20D3  3188   	fcall	_wait_ms
  7623  083D  30FF               	movlw	255
  7624  083E  0020               	movlb	0	; select bank0
  7625  083F  07B1               	addwf	star_tactiles@iLed,f
  7626  0840  30FF               	movlw	255
  7627  0841  3DB2               	addwfc	star_tactiles@iLed+1,f
  7628  0842  2817               	goto	L7
  7629  0843                     l3124:	
  7630                           ;LEDs.c: 200: }
  7631                           ;LEDs.c: 201: } else {
  7632                           
  7633                           
  7634                           ;LEDs.c: 202: for (int iLed = 1; iLed < 7; iLed++) {
  7635  0843  3001               	movlw	1
  7636  0844  00B3               	movwf	star_tactiles@iLed_1388
  7637  0845  3000               	movlw	0
  7638  0846  00B4               	movwf	star_tactiles@iLed_1388+1
  7639  0847                     L8:	
  7640  0847  0834               	movf	star_tactiles@iLed_1388+1,w
  7641  0848  3A80               	xorlw	128
  7642  0849  00AE               	movwf	??_star_tactiles
  7643  084A  3080               	movlw	128
  7644  084B  022E               	subwf	??_star_tactiles,w
  7645  084C  1D03               	skipz
  7646  084D  2850               	goto	u2505
  7647  084E  3007               	movlw	7
  7648  084F  0233               	subwf	star_tactiles@iLed_1388,w
  7649  0850                     u2505:	
  7650  0850  1803               	btfsc	3,0
  7651  0851  0008               	return
  7652                           
  7653                           ;LEDs.c: 203: set_leds_top(iLed, 1);
  7654  0852  0020               	movlb	0	; select bank0
  7655  0853  0834               	movf	star_tactiles@iLed_1388+1,w
  7656  0854  00A1               	movwf	set_leds_top@x+1
  7657  0855  0833               	movf	star_tactiles@iLed_1388,w
  7658  0856  00A0               	movwf	set_leds_top@x
  7659  0857  3001               	movlw	1
  7660  0858  00A2               	movwf	set_leds_top@ledState
  7661  0859  3000               	movlw	0
  7662  085A  00A3               	movwf	set_leds_top@ledState+1
  7663  085B  3195  259B  3188   	fcall	_set_leds_top
  7664                           
  7665                           ;LEDs.c: 204: set_leds_bottom(6 - iLed);
  7666  085E  0020               	movlb	0	; select bank0
  7667  085F  0933               	comf	star_tactiles@iLed_1388,w
  7668  0860  00AE               	movwf	??_star_tactiles
  7669  0861  0934               	comf	star_tactiles@iLed_1388+1,w
  7670  0862  00AF               	movwf	??_star_tactiles+1
  7671  0863  0AAE               	incf	??_star_tactiles,f
  7672  0864  1903               	skipnz
  7673  0865  0AAF               	incf	??_star_tactiles+1,f
  7674  0866  082E               	movf	??_star_tactiles,w
  7675  0867  3E06               	addlw	6
  7676  0868  00A0               	movwf	set_leds_bottom@x
  7677  0869  3000               	movlw	0
  7678  086A  3D2F               	addwfc	??_star_tactiles+1,w
  7679  086B  00A1               	movwf	set_leds_bottom@x+1
  7680  086C  3192  2257  3188   	fcall	_set_leds_bottom
  7681                           
  7682                           ;LEDs.c: 205: wait_ms(5);
  7683  086F  3005               	movlw	5
  7684  0870  0020               	movlb	0	; select bank0
  7685  0871  00AC               	movwf	wait_ms@time
  7686  0872  3000               	movlw	0
  7687  0873  00AD               	movwf	wait_ms@time+1
  7688  0874  3190  20D3  3188   	fcall	_wait_ms
  7689  0877  3001               	movlw	1
  7690  0878  0020               	movlb	0	; select bank0
  7691  0879  07B3               	addwf	star_tactiles@iLed_1388,f
  7692  087A  3000               	movlw	0
  7693  087B  3DB4               	addwfc	star_tactiles@iLed_1388+1,f
  7694  087C  2847               	goto	L8
  7695  087D                     __end_of_star_tactiles:	
  7696                           
  7697                           	psect	text6
  7698  134C                     __ptext6:	
  7699 ;; *************** function _solidring_tactiles *****************
  7700 ;; Defined at:
  7701 ;;		line 223 in file "LEDs.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;		None
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;  ring_delay      1   16[BANK0 ] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      void 
  7708 ;; Registers used:
  7709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7717 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7719 ;;Total ram usage:        3 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    4
  7722 ;; This function calls:
  7723 ;;		_set_leds_bottom
  7724 ;;		_set_leds_top
  7725 ;;		_wait_ms
  7726 ;; This function is called by:
  7727 ;;		_showBootSequence
  7728 ;;		_showSave
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           
  7733                           ;psect for function _solidring_tactiles
  7734  134C                     _solidring_tactiles:	
  7735                           
  7736                           ;LEDs.c: 224: uint8_t ring_delay = 30;
  7737                           
  7738                           ;incstack = 0
  7739                           ; Regs used in _solidring_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7740  134C  301E               	movlw	30
  7741  134D  0020               	movlb	0	; select bank0
  7742  134E  00AE               	movwf	??_solidring_tactiles
  7743  134F  082E               	movf	??_solidring_tactiles,w
  7744  1350  00B0               	movwf	solidring_tactiles@ring_delay
  7745                           
  7746                           ;LEDs.c: 225: set_leds_top(100, 1);
  7747  1351  3064               	movlw	100
  7748  1352  00A0               	movwf	set_leds_top@x
  7749  1353  3000               	movlw	0
  7750  1354  00A1               	movwf	set_leds_top@x+1
  7751  1355  3001               	movlw	1
  7752  1356  00A2               	movwf	set_leds_top@ledState
  7753  1357  3000               	movlw	0
  7754  1358  00A3               	movwf	set_leds_top@ledState+1
  7755  1359  3195  259B  3193   	fcall	_set_leds_top
  7756                           
  7757                           ;LEDs.c: 226: set_leds_bottom(100);
  7758  135C  3064               	movlw	100
  7759  135D  0020               	movlb	0	; select bank0
  7760  135E  00A0               	movwf	set_leds_bottom@x
  7761  135F  3000               	movlw	0
  7762  1360  00A1               	movwf	set_leds_bottom@x+1
  7763  1361  3192  2257  3193   	fcall	_set_leds_bottom
  7764                           
  7765                           ;LEDs.c: 227: wait_ms(ring_delay);
  7766  1364  0020               	movlb	0	; select bank0
  7767  1365  0830               	movf	solidring_tactiles@ring_delay,w
  7768  1366  00AE               	movwf	??_solidring_tactiles
  7769  1367  01AF               	clrf	??_solidring_tactiles+1
  7770  1368  082E               	movf	??_solidring_tactiles,w
  7771  1369  00AC               	movwf	wait_ms@time
  7772  136A  082F               	movf	??_solidring_tactiles+1,w
  7773  136B  00AD               	movwf	wait_ms@time+1
  7774  136C  3190  20D3  3193   	fcall	_wait_ms
  7775                           
  7776                           ;LEDs.c: 229: set_leds_top(0, 1);
  7777  136F  3000               	movlw	0
  7778  1370  0020               	movlb	0	; select bank0
  7779  1371  00A0               	movwf	set_leds_top@x
  7780  1372  00A1               	movwf	set_leds_top@x+1
  7781  1373  3001               	movlw	1
  7782  1374  00A2               	movwf	set_leds_top@ledState
  7783  1375  3000               	movlw	0
  7784  1376  00A3               	movwf	set_leds_top@ledState+1
  7785  1377  3195  259B  3193   	fcall	_set_leds_top
  7786                           
  7787                           ;LEDs.c: 230: set_leds_bottom(0);
  7788  137A  3000               	movlw	0
  7789  137B  0020               	movlb	0	; select bank0
  7790  137C  00A0               	movwf	set_leds_bottom@x
  7791  137D  00A1               	movwf	set_leds_bottom@x+1
  7792  137E  3192  2257  3193   	fcall	_set_leds_bottom
  7793                           
  7794                           ;LEDs.c: 231: wait_ms(ring_delay);
  7795  1381  0020               	movlb	0	; select bank0
  7796  1382  0830               	movf	solidring_tactiles@ring_delay,w
  7797  1383  00AE               	movwf	??_solidring_tactiles
  7798  1384  01AF               	clrf	??_solidring_tactiles+1
  7799  1385  082E               	movf	??_solidring_tactiles,w
  7800  1386  00AC               	movwf	wait_ms@time
  7801  1387  082F               	movf	??_solidring_tactiles+1,w
  7802  1388  00AD               	movwf	wait_ms@time+1
  7803  1389  3190  20D3         	fcall	_wait_ms
  7804  138B  0008               	return
  7805  138C                     __end_of_solidring_tactiles:	
  7806                           
  7807                           	psect	text7
  7808  1F95                     __ptext7:	
  7809 ;; *************** function _restoreLEDState *****************
  7810 ;; Defined at:
  7811 ;;		line 89 in file "state_manager.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;		None
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;		None
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  1    wreg      void 
  7818 ;; Registers used:
  7819 ;;		wreg, status,0
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7829 ;;Total ram usage:        0 bytes
  7830 ;; Hardware stack levels used:    1
  7831 ;; Hardware stack levels required when called:    2
  7832 ;; This function calls:
  7833 ;;		Nothing
  7834 ;; This function is called by:
  7835 ;;		_showBootSequence
  7836 ;;		_showError_Alternating
  7837 ;;		_show_error
  7838 ;;		_show_cancel
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           
  7843                           ;psect for function _restoreLEDState
  7844  1F95                     _restoreLEDState:	
  7845                           
  7846                           ;state_manager.c: 90: LATBbits.LATB4 = ledState.tap_A;
  7847                           
  7848                           ;incstack = 0
  7849                           ; Regs used in _restoreLEDState: [wreg+status,0]
  7850  1F95  0022               	movlb	2	; select bank2
  7851  1F96  0C34               	rrf	_ledState^(0+256),w
  7852  1F97  1C03               	skipc
  7853  1F98  120D               	bcf	13,4	;volatile
  7854  1F99  1803               	skipnc
  7855  1F9A  160D               	bsf	13,4	;volatile
  7856                           
  7857                           ;state_manager.c: 91: LATBbits.LATB2 = ledState.bypass_A;
  7858  1F9B  0C36               	rrf	(_ledState^(0+256)+2),w
  7859  1F9C  1C03               	skipc
  7860  1F9D  110D               	bcf	13,2	;volatile
  7861  1F9E  1803               	skipnc
  7862  1F9F  150D               	bsf	13,2	;volatile
  7863                           
  7864                           ;state_manager.c: 92: LATBbits.LATB5 = ledState.tap_B;
  7865  1FA0  0C35               	rrf	(_ledState^(0+256)+1),w
  7866  1FA1  1C03               	skipc
  7867  1FA2  128D               	bcf	13,5	;volatile
  7868  1FA3  1803               	skipnc
  7869  1FA4  168D               	bsf	13,5	;volatile
  7870                           
  7871                           ;state_manager.c: 93: LATBbits.LATB3 = ledState.bypass_B;
  7872  1FA5  0C37               	rrf	(_ledState^(0+256)+3),w
  7873  1FA6  1C03               	skipc
  7874  1FA7  118D               	bcf	13,3	;volatile
  7875  1FA8  1803               	skipnc
  7876  1FA9  158D               	bsf	13,3	;volatile
  7877  1FAA  0008               	return
  7878  1FAB                     __end_of_restoreLEDState:	
  7879                           
  7880                           	psect	text8
  7881  1F59                     __ptext8:	
  7882 ;; *************** function _getCurrentLEDState *****************
  7883 ;; Defined at:
  7884 ;;		line 83 in file "state_manager.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;		None
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;		None
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      void 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7902 ;;Total ram usage:        0 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    2
  7905 ;; This function calls:
  7906 ;;		Nothing
  7907 ;; This function is called by:
  7908 ;;		_showBootSequence
  7909 ;;		_showError_Alternating
  7910 ;;		_show_error
  7911 ;;		_show_cancel
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           
  7916                           ;psect for function _getCurrentLEDState
  7917  1F59                     _getCurrentLEDState:	
  7918                           
  7919                           ;state_manager.c: 84: ledState.tap_A = LATBbits.LATB4;
  7920                           
  7921                           ;incstack = 0
  7922                           ; Regs used in _getCurrentLEDState: [wreg+status,2]
  7923  1F59  3000               	movlw	0
  7924  1F5A  0022               	movlb	2	; select bank2
  7925  1F5B  1A0D               	btfsc	13,4	;volatile
  7926  1F5C  3001               	movlw	1
  7927  1F5D  00B4               	movwf	_ledState^(0+256)
  7928                           
  7929                           ;state_manager.c: 85: ledState.bypass_A = LATBbits.LATB2 ;
  7930  1F5E  3000               	movlw	0
  7931  1F5F  190D               	btfsc	13,2	;volatile
  7932  1F60  3001               	movlw	1
  7933  1F61  00B6               	movwf	(_ledState^(0+256)+2)
  7934                           
  7935                           ;state_manager.c: 86: ledState.tap_B = LATBbits.LATB5 ;
  7936  1F62  3000               	movlw	0
  7937  1F63  1A8D               	btfsc	13,5	;volatile
  7938  1F64  3001               	movlw	1
  7939  1F65  00B5               	movwf	(_ledState^(0+256)+1)
  7940                           
  7941                           ;state_manager.c: 87: ledState.bypass_B = LATBbits.LATB3 ;
  7942  1F66  3000               	movlw	0
  7943  1F67  198D               	btfsc	13,3	;volatile
  7944  1F68  3001               	movlw	1
  7945  1F69  00B7               	movwf	(_ledState^(0+256)+3)
  7946  1F6A  0008               	return
  7947  1F6B                     __end_of_getCurrentLEDState:	
  7948                           
  7949                           	psect	text9
  7950  0464                     __ptext9:	
  7951 ;; *************** function _set_subdivision *****************
  7952 ;; Defined at:
  7953 ;;		line 77 in file "user.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  x               2    6[BANK1 ] int 
  7956 ;;  y               2    8[BANK1 ] int 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  2    6[BANK1 ] int 
  7961 ;; Registers used:
  7962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7968 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7971 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7972 ;;Total ram usage:        4 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:    4
  7975 ;; This function calls:
  7976 ;;		___awtoft
  7977 ;;		___ftmul
  7978 ;;		___fttol
  7979 ;; This function is called by:
  7980 ;;		_main
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           
  7985                           ;psect for function _set_subdivision
  7986  0464                     _set_subdivision:	
  7987                           
  7988                           ;user.c: 80: switch (y) {
  7989                           
  7990                           ;incstack = 0
  7991                           ; Regs used in _set_subdivision: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7992  0464  2D42               	goto	l3700
  7993  0465                     l3688:	
  7994                           ;user.c: 81: case 1:
  7995                           
  7996                           
  7997                           ;user.c: 82: x = x * .75;
  7998  0465  0021               	movlb	1	; select bank1
  7999  0466  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8000  0467  0020               	movlb	0	; select bank0
  8001  0468  00A9               	movwf	___awtoft@c+1
  8002  0469  0021               	movlb	1	; select bank1
  8003  046A  0826               	movf	set_subdivision@x^(0+128),w
  8004  046B  0020               	movlb	0	; select bank0
  8005  046C  00A8               	movwf	___awtoft@c
  8006  046D  3190  2000  3184   	fcall	___awtoft
  8007  0470  0020               	movlb	0	; select bank0
  8008  0471  0828               	movf	?___awtoft,w
  8009  0472  00B8               	movwf	___ftmul@f2
  8010  0473  0829               	movf	?___awtoft+1,w
  8011  0474  00B9               	movwf	___ftmul@f2+1
  8012  0475  082A               	movf	?___awtoft+2,w
  8013  0476  00BA               	movwf	___ftmul@f2+2
  8014  0477  3000               	movlw	0
  8015  0478  00B5               	movwf	___ftmul@f1
  8016  0479  3040               	movlw	64
  8017  047A  00B6               	movwf	___ftmul@f1+1
  8018  047B  303F               	movlw	63
  8019  047C  00B7               	movwf	___ftmul@f1+2
  8020  047D  3186  2653  3184   	fcall	___ftmul
  8021  0480  0020               	movlb	0	; select bank0
  8022  0481  0835               	movf	?___ftmul,w
  8023  0482  00E7               	movwf	___fttol@f1
  8024  0483  0836               	movf	?___ftmul+1,w
  8025  0484  00E8               	movwf	___fttol@f1+1
  8026  0485  0837               	movf	?___ftmul+2,w
  8027  0486  00E9               	movwf	___fttol@f1+2
  8028  0487  3197  2761         	fcall	___fttol
  8029  0489  0020               	movlb	0	; select bank0
  8030  048A  0868               	movf	?___fttol+1,w
  8031  048B  0021               	movlb	1	; select bank1
  8032  048C  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8033  048D  0020               	movlb	0	; select bank0
  8034  048E  0867               	movf	?___fttol,w
  8035  048F  0021               	movlb	1	; select bank1
  8036  0490  00A6               	movwf	set_subdivision@x^(0+128)
  8037                           
  8038                           ;user.c: 83: break;
  8039  0491  0008               	return
  8040  0492                     l3690:	
  8041                           ;user.c: 84: case 2:
  8042                           
  8043                           
  8044                           ;user.c: 85: x = x * .66666;
  8045  0492  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8046  0493  0020               	movlb	0	; select bank0
  8047  0494  00A9               	movwf	___awtoft@c+1
  8048  0495  0021               	movlb	1	; select bank1
  8049  0496  0826               	movf	set_subdivision@x^(0+128),w
  8050  0497  0020               	movlb	0	; select bank0
  8051  0498  00A8               	movwf	___awtoft@c
  8052  0499  3190  2000  3184   	fcall	___awtoft
  8053  049C  0020               	movlb	0	; select bank0
  8054  049D  0828               	movf	?___awtoft,w
  8055  049E  00B8               	movwf	___ftmul@f2
  8056  049F  0829               	movf	?___awtoft+1,w
  8057  04A0  00B9               	movwf	___ftmul@f2+1
  8058  04A1  082A               	movf	?___awtoft+2,w
  8059  04A2  00BA               	movwf	___ftmul@f2+2
  8060  04A3  30AA               	movlw	170
  8061  04A4  00B5               	movwf	___ftmul@f1
  8062  04A5  302A               	movlw	42
  8063  04A6  00B6               	movwf	___ftmul@f1+1
  8064  04A7  303F               	movlw	63
  8065  04A8  00B7               	movwf	___ftmul@f1+2
  8066  04A9  3186  2653  3184   	fcall	___ftmul
  8067  04AC  0020               	movlb	0	; select bank0
  8068  04AD  0835               	movf	?___ftmul,w
  8069  04AE  00E7               	movwf	___fttol@f1
  8070  04AF  0836               	movf	?___ftmul+1,w
  8071  04B0  00E8               	movwf	___fttol@f1+1
  8072  04B1  0837               	movf	?___ftmul+2,w
  8073  04B2  00E9               	movwf	___fttol@f1+2
  8074  04B3  3197  2761         	fcall	___fttol
  8075  04B5  0020               	movlb	0	; select bank0
  8076  04B6  0868               	movf	?___fttol+1,w
  8077  04B7  0021               	movlb	1	; select bank1
  8078  04B8  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8079  04B9  0020               	movlb	0	; select bank0
  8080  04BA  0867               	movf	?___fttol,w
  8081  04BB  0021               	movlb	1	; select bank1
  8082  04BC  00A6               	movwf	set_subdivision@x^(0+128)
  8083                           
  8084                           ;user.c: 86: break;
  8085  04BD  0008               	return
  8086  04BE                     l3692:	
  8087                           ;user.c: 87: case 3:
  8088                           
  8089                           
  8090                           ;user.c: 88: x = x * .5;
  8091  04BE  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8092  04BF  0020               	movlb	0	; select bank0
  8093  04C0  00A9               	movwf	___awtoft@c+1
  8094  04C1  0021               	movlb	1	; select bank1
  8095  04C2  0826               	movf	set_subdivision@x^(0+128),w
  8096  04C3  0020               	movlb	0	; select bank0
  8097  04C4  00A8               	movwf	___awtoft@c
  8098  04C5  3190  2000  3184   	fcall	___awtoft
  8099  04C8  0020               	movlb	0	; select bank0
  8100  04C9  0828               	movf	?___awtoft,w
  8101  04CA  00B8               	movwf	___ftmul@f2
  8102  04CB  0829               	movf	?___awtoft+1,w
  8103  04CC  00B9               	movwf	___ftmul@f2+1
  8104  04CD  082A               	movf	?___awtoft+2,w
  8105  04CE  00BA               	movwf	___ftmul@f2+2
  8106  04CF  3000               	movlw	0
  8107  04D0  00B5               	movwf	___ftmul@f1
  8108  04D1  3000               	movlw	0
  8109  04D2  00B6               	movwf	___ftmul@f1+1
  8110  04D3  303F               	movlw	63
  8111  04D4  00B7               	movwf	___ftmul@f1+2
  8112  04D5  3186  2653  3184   	fcall	___ftmul
  8113  04D8  0020               	movlb	0	; select bank0
  8114  04D9  0835               	movf	?___ftmul,w
  8115  04DA  00E7               	movwf	___fttol@f1
  8116  04DB  0836               	movf	?___ftmul+1,w
  8117  04DC  00E8               	movwf	___fttol@f1+1
  8118  04DD  0837               	movf	?___ftmul+2,w
  8119  04DE  00E9               	movwf	___fttol@f1+2
  8120  04DF  3197  2761         	fcall	___fttol
  8121  04E1  0020               	movlb	0	; select bank0
  8122  04E2  0868               	movf	?___fttol+1,w
  8123  04E3  0021               	movlb	1	; select bank1
  8124  04E4  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8125  04E5  0020               	movlb	0	; select bank0
  8126  04E6  0867               	movf	?___fttol,w
  8127  04E7  0021               	movlb	1	; select bank1
  8128  04E8  00A6               	movwf	set_subdivision@x^(0+128)
  8129                           
  8130                           ;user.c: 89: break;
  8131  04E9  0008               	return
  8132  04EA                     l3694:	
  8133                           ;user.c: 90: case 4:
  8134                           
  8135                           
  8136                           ;user.c: 91: x = x * .3333;
  8137  04EA  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8138  04EB  0020               	movlb	0	; select bank0
  8139  04EC  00A9               	movwf	___awtoft@c+1
  8140  04ED  0021               	movlb	1	; select bank1
  8141  04EE  0826               	movf	set_subdivision@x^(0+128),w
  8142  04EF  0020               	movlb	0	; select bank0
  8143  04F0  00A8               	movwf	___awtoft@c
  8144  04F1  3190  2000  3184   	fcall	___awtoft
  8145  04F4  0020               	movlb	0	; select bank0
  8146  04F5  0828               	movf	?___awtoft,w
  8147  04F6  00B8               	movwf	___ftmul@f2
  8148  04F7  0829               	movf	?___awtoft+1,w
  8149  04F8  00B9               	movwf	___ftmul@f2+1
  8150  04F9  082A               	movf	?___awtoft+2,w
  8151  04FA  00BA               	movwf	___ftmul@f2+2
  8152  04FB  30A6               	movlw	166
  8153  04FC  00B5               	movwf	___ftmul@f1
  8154  04FD  30AA               	movlw	170
  8155  04FE  00B6               	movwf	___ftmul@f1+1
  8156  04FF  303E               	movlw	62
  8157  0500  00B7               	movwf	___ftmul@f1+2
  8158  0501  3186  2653  3184   	fcall	___ftmul
  8159  0504  0020               	movlb	0	; select bank0
  8160  0505  0835               	movf	?___ftmul,w
  8161  0506  00E7               	movwf	___fttol@f1
  8162  0507  0836               	movf	?___ftmul+1,w
  8163  0508  00E8               	movwf	___fttol@f1+1
  8164  0509  0837               	movf	?___ftmul+2,w
  8165  050A  00E9               	movwf	___fttol@f1+2
  8166  050B  3197  2761         	fcall	___fttol
  8167  050D  0020               	movlb	0	; select bank0
  8168  050E  0868               	movf	?___fttol+1,w
  8169  050F  0021               	movlb	1	; select bank1
  8170  0510  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8171  0511  0020               	movlb	0	; select bank0
  8172  0512  0867               	movf	?___fttol,w
  8173  0513  0021               	movlb	1	; select bank1
  8174  0514  00A6               	movwf	set_subdivision@x^(0+128)
  8175                           
  8176                           ;user.c: 92: break;
  8177  0515  0008               	return
  8178  0516                     l3696:	
  8179                           ;user.c: 93: case 5:
  8180                           
  8181                           
  8182                           ;user.c: 94: x = x * .25;
  8183  0516  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8184  0517  0020               	movlb	0	; select bank0
  8185  0518  00A9               	movwf	___awtoft@c+1
  8186  0519  0021               	movlb	1	; select bank1
  8187  051A  0826               	movf	set_subdivision@x^(0+128),w
  8188  051B  0020               	movlb	0	; select bank0
  8189  051C  00A8               	movwf	___awtoft@c
  8190  051D  3190  2000  3184   	fcall	___awtoft
  8191  0520  0020               	movlb	0	; select bank0
  8192  0521  0828               	movf	?___awtoft,w
  8193  0522  00B8               	movwf	___ftmul@f2
  8194  0523  0829               	movf	?___awtoft+1,w
  8195  0524  00B9               	movwf	___ftmul@f2+1
  8196  0525  082A               	movf	?___awtoft+2,w
  8197  0526  00BA               	movwf	___ftmul@f2+2
  8198  0527  3000               	movlw	0
  8199  0528  00B5               	movwf	___ftmul@f1
  8200  0529  3080               	movlw	128
  8201  052A  00B6               	movwf	___ftmul@f1+1
  8202  052B  303E               	movlw	62
  8203  052C  00B7               	movwf	___ftmul@f1+2
  8204  052D  3186  2653  3184   	fcall	___ftmul
  8205  0530  0020               	movlb	0	; select bank0
  8206  0531  0835               	movf	?___ftmul,w
  8207  0532  00E7               	movwf	___fttol@f1
  8208  0533  0836               	movf	?___ftmul+1,w
  8209  0534  00E8               	movwf	___fttol@f1+1
  8210  0535  0837               	movf	?___ftmul+2,w
  8211  0536  00E9               	movwf	___fttol@f1+2
  8212  0537  3197  2761         	fcall	___fttol
  8213  0539  0020               	movlb	0	; select bank0
  8214  053A  0868               	movf	?___fttol+1,w
  8215  053B  0021               	movlb	1	; select bank1
  8216  053C  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8217  053D  0020               	movlb	0	; select bank0
  8218  053E  0867               	movf	?___fttol,w
  8219  053F  0021               	movlb	1	; select bank1
  8220  0540  00A6               	movwf	set_subdivision@x^(0+128)
  8221                           
  8222                           ;user.c: 99: }
  8223                           
  8224                           ;user.c: 98: break;
  8225                           
  8226                           ;user.c: 96: case 6:
  8227                           
  8228                           ;user.c: 95: break;
  8229  0541  0008               	return
  8230  0542                     l3700:	
  8231                           
  8232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8233                           ; Switch size 1, requested type "space"
  8234                           ; Number of cases is 1, Range of values is 0 to 0
  8235                           ; switch strategies available:
  8236                           ; Name         Instructions Cycles
  8237                           ; simple_byte            4     3 (average)
  8238                           ; direct_byte            8     6 (fixed)
  8239                           ; jumptable            260     6 (fixed)
  8240                           ;	Chosen strategy is simple_byte
  8241  0542  0021               	movlb	1	; select bank1
  8242  0543  0829               	movf	(set_subdivision@y+1)^(0+128),w
  8243  0544  3A00               	xorlw	0	; case 0
  8244  0545  1903               	skipnz
  8245  0546  2D48               	goto	l4396
  8246  0547  2D5C               	goto	l483
  8247  0548                     l4396:	
  8248                           
  8249                           ; Switch size 1, requested type "space"
  8250                           ; Number of cases is 6, Range of values is 1 to 6
  8251                           ; switch strategies available:
  8252                           ; Name         Instructions Cycles
  8253                           ; simple_byte           19    10 (average)
  8254                           ; direct_byte           21     9 (fixed)
  8255                           ; jumptable            263     9 (fixed)
  8256                           ;	Chosen strategy is simple_byte
  8257  0548  0828               	movf	set_subdivision@y^(0+128),w
  8258  0549  3A01               	xorlw	1	; case 1
  8259  054A  1903               	skipnz
  8260  054B  2C65               	goto	l3688
  8261  054C  3A03               	xorlw	3	; case 2
  8262  054D  1903               	skipnz
  8263  054E  2C92               	goto	l3690
  8264  054F  3A01               	xorlw	1	; case 3
  8265  0550  1903               	skipnz
  8266  0551  2CBE               	goto	l3692
  8267  0552  3A07               	xorlw	7	; case 4
  8268  0553  1903               	skipnz
  8269  0554  2CEA               	goto	l3694
  8270  0555  3A01               	xorlw	1	; case 5
  8271  0556  1903               	skipnz
  8272  0557  2D16               	goto	l3696
  8273  0558  3A03               	xorlw	3	; case 6
  8274  0559  1903               	skipnz
  8275  055A  2D5C               	goto	l483
  8276  055B  2D5C               	goto	l483
  8277  055C                     l483:	
  8278                           
  8279                           ;user.c: 100: return x;
  8280  055C  0008               	return
  8281  055D                     __end_of_set_subdivision:	
  8282                           
  8283                           	psect	text10
  8284  1761                     __ptext10:	
  8285 ;; *************** function ___fttol *****************
  8286 ;; Defined at:
  8287 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;  f1              3   71[BANK0 ] float 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  lval            4    1[BANK1 ] unsigned long 
  8292 ;;  exp1            1    5[BANK1 ] unsigned char 
  8293 ;;  sign1           1    0[BANK1 ] unsigned char 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  4   71[BANK0 ] long 
  8296 ;; Registers used:
  8297 ;;		wreg, status,2, status,0
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8303 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8304 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8305 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8306 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8307 ;;Total ram usage:       14 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    2
  8310 ;; This function calls:
  8311 ;;		Nothing
  8312 ;; This function is called by:
  8313 ;;		_main
  8314 ;;		_set_subdivision
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           
  8319                           ;psect for function ___fttol
  8320  1761                     ___fttol:	
  8321                           
  8322                           ;incstack = 0
  8323                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8324  1761  0020               	movlb	0	; select bank0
  8325  1762  0867               	movf	___fttol@f1,w
  8326  1763  00EB               	movwf	??___fttol
  8327  1764  0868               	movf	___fttol@f1+1,w
  8328  1765  00EC               	movwf	??___fttol+1
  8329  1766  0869               	movf	___fttol@f1+2,w
  8330  1767  00ED               	movwf	??___fttol+2
  8331  1768  1003               	clrc
  8332  1769  0D6C               	rlf	??___fttol+1,w
  8333  176A  0D6D               	rlf	??___fttol+2,w
  8334  176B  00EE               	movwf	??___fttol+3
  8335  176C  086E               	movf	??___fttol+3,w
  8336  176D  0021               	movlb	1	; select bank1
  8337  176E  00A5               	movwf	___fttol@exp1^(0+128)
  8338  176F  0825               	movf	___fttol@exp1^(0+128),w
  8339  1770  1D03               	btfss	3,2
  8340  1771  2F7C               	goto	l3442
  8341  1772  3000               	movlw	0
  8342  1773  0020               	movlb	0	; select bank0
  8343  1774  00EA               	movwf	?___fttol+3
  8344  1775  3000               	movlw	0
  8345  1776  00E9               	movwf	?___fttol+2
  8346  1777  3000               	movlw	0
  8347  1778  00E8               	movwf	?___fttol+1
  8348  1779  3000               	movlw	0
  8349  177A  00E7               	movwf	?___fttol
  8350  177B  0008               	return
  8351  177C                     l3442:	
  8352  177C  0020               	movlb	0	; select bank0
  8353  177D  0867               	movf	___fttol@f1,w
  8354  177E  00EB               	movwf	??___fttol
  8355  177F  0868               	movf	___fttol@f1+1,w
  8356  1780  00EC               	movwf	??___fttol+1
  8357  1781  0869               	movf	___fttol@f1+2,w
  8358  1782  00ED               	movwf	??___fttol+2
  8359  1783  3017               	movlw	23
  8360  1784                     u3185:	
  8361  1784  36ED               	lsrf	??___fttol+2,f
  8362  1785  0CEC               	rrf	??___fttol+1,f
  8363  1786  0CEB               	rrf	??___fttol,f
  8364  1787  0B89               	decfsz	9,f
  8365  1788  2F84               	goto	u3185
  8366  1789  086B               	movf	??___fttol,w
  8367  178A  00EE               	movwf	??___fttol+3
  8368  178B  086E               	movf	??___fttol+3,w
  8369  178C  0021               	movlb	1	; select bank1
  8370  178D  00A0               	movwf	___fttol@sign1^(0+128)
  8371  178E  0020               	movlb	0	; select bank0
  8372  178F  17E8               	bsf	___fttol@f1+1,7
  8373  1790  30FF               	movlw	255
  8374  1791  05E7               	andwf	___fttol@f1,f
  8375  1792  30FF               	movlw	255
  8376  1793  05E8               	andwf	___fttol@f1+1,f
  8377  1794  3000               	movlw	0
  8378  1795  05E9               	andwf	___fttol@f1+2,f
  8379  1796  0867               	movf	___fttol@f1,w
  8380  1797  0021               	movlb	1	; select bank1
  8381  1798  00A1               	movwf	___fttol@lval^(0+128)
  8382  1799  0020               	movlb	0	; select bank0
  8383  179A  0868               	movf	___fttol@f1+1,w
  8384  179B  0021               	movlb	1	; select bank1
  8385  179C  00A2               	movwf	(___fttol@lval^(0+128)+1)
  8386  179D  0020               	movlb	0	; select bank0
  8387  179E  0869               	movf	___fttol@f1+2,w
  8388  179F  0021               	movlb	1	; select bank1
  8389  17A0  00A3               	movwf	(___fttol@lval^(0+128)+2)
  8390  17A1  01A4               	clrf	(___fttol@lval^(0+128)+3)
  8391  17A2  308E               	movlw	142
  8392  17A3  02A5               	subwf	___fttol@exp1^(0+128),f
  8393  17A4  1FA5               	btfss	___fttol@exp1^(0+128),7
  8394  17A5  2FC6               	goto	l3462
  8395  17A6  0825               	movf	___fttol@exp1^(0+128),w
  8396  17A7  3A80               	xorlw	128
  8397  17A8  3E8F               	addlw	143
  8398  17A9  1803               	skipnc
  8399  17AA  2FB5               	goto	l3460
  8400  17AB  3000               	movlw	0
  8401  17AC  0020               	movlb	0	; select bank0
  8402  17AD  00EA               	movwf	?___fttol+3
  8403  17AE  3000               	movlw	0
  8404  17AF  00E9               	movwf	?___fttol+2
  8405  17B0  3000               	movlw	0
  8406  17B1  00E8               	movwf	?___fttol+1
  8407  17B2  3000               	movlw	0
  8408  17B3  00E7               	movwf	?___fttol
  8409  17B4  0008               	return
  8410  17B5                     l3460:	
  8411  17B5  3001               	movlw	1
  8412  17B6                     u3215:	
  8413  17B6  0021               	movlb	1	; select bank1
  8414  17B7  36A4               	lsrf	(___fttol@lval+3)^(0+128),f
  8415  17B8  0CA3               	rrf	(___fttol@lval+2)^(0+128),f
  8416  17B9  0CA2               	rrf	(___fttol@lval+1)^(0+128),f
  8417  17BA  0CA1               	rrf	___fttol@lval^(0+128),f
  8418  17BB  0B89               	decfsz	9,f
  8419  17BC  2FB6               	goto	u3215
  8420  17BD  3001               	movlw	1
  8421  17BE  0020               	movlb	0	; select bank0
  8422  17BF  00EB               	movwf	??___fttol
  8423  17C0  086B               	movf	??___fttol,w
  8424  17C1  0021               	movlb	1	; select bank1
  8425  17C2  07A5               	addwf	___fttol@exp1^(0+128),f
  8426  17C3  1903               	btfsc	3,2
  8427  17C4  2FE2               	goto	l3470
  8428  17C5  2FB5               	goto	l3460
  8429  17C6                     l3462:	
  8430  17C6  3018               	movlw	24
  8431  17C7  0225               	subwf	___fttol@exp1^(0+128),w
  8432  17C8  1C03               	skipc
  8433  17C9  2FDE               	goto	l1324
  8434  17CA  3000               	movlw	0
  8435  17CB  0020               	movlb	0	; select bank0
  8436  17CC  00EA               	movwf	?___fttol+3
  8437  17CD  3000               	movlw	0
  8438  17CE  00E9               	movwf	?___fttol+2
  8439  17CF  3000               	movlw	0
  8440  17D0  00E8               	movwf	?___fttol+1
  8441  17D1  3000               	movlw	0
  8442  17D2  00E7               	movwf	?___fttol
  8443  17D3  0008               	return
  8444  17D4                     l3468:	
  8445  17D4  3001               	movlw	1
  8446  17D5                     u3245:	
  8447  17D5  0021               	movlb	1	; select bank1
  8448  17D6  35A1               	lslf	___fttol@lval^(0+128),f
  8449  17D7  0DA2               	rlf	(___fttol@lval+1)^(0+128),f
  8450  17D8  0DA3               	rlf	(___fttol@lval+2)^(0+128),f
  8451  17D9  0DA4               	rlf	(___fttol@lval+3)^(0+128),f
  8452  17DA  0B89               	decfsz	9,f
  8453  17DB  2FD5               	goto	u3245
  8454  17DC  3001               	movlw	1
  8455  17DD  02A5               	subwf	___fttol@exp1^(0+128),f
  8456  17DE                     l1324:	
  8457  17DE  0021               	movlb	1	; select bank1
  8458  17DF  0825               	movf	___fttol@exp1^(0+128),w
  8459  17E0  1D03               	btfss	3,2
  8460  17E1  2FD4               	goto	l3468
  8461  17E2                     l3470:	
  8462  17E2  0820               	movf	___fttol@sign1^(0+128),w
  8463  17E3  1903               	btfsc	3,2
  8464  17E4  2FF0               	goto	l3474
  8465  17E5  09A1               	comf	___fttol@lval^(0+128),f
  8466  17E6  09A2               	comf	(___fttol@lval+1)^(0+128),f
  8467  17E7  09A3               	comf	(___fttol@lval+2)^(0+128),f
  8468  17E8  09A4               	comf	(___fttol@lval+3)^(0+128),f
  8469  17E9  0AA1               	incf	___fttol@lval^(0+128),f
  8470  17EA  1903               	skipnz
  8471  17EB  0AA2               	incf	(___fttol@lval+1)^(0+128),f
  8472  17EC  1903               	skipnz
  8473  17ED  0AA3               	incf	(___fttol@lval+2)^(0+128),f
  8474  17EE  1903               	skipnz
  8475  17EF  0AA4               	incf	(___fttol@lval+3)^(0+128),f
  8476  17F0                     l3474:	
  8477  17F0  0824               	movf	(___fttol@lval+3)^(0+128),w
  8478  17F1  0020               	movlb	0	; select bank0
  8479  17F2  00EA               	movwf	?___fttol+3
  8480  17F3  0021               	movlb	1	; select bank1
  8481  17F4  0823               	movf	(___fttol@lval+2)^(0+128),w
  8482  17F5  0020               	movlb	0	; select bank0
  8483  17F6  00E9               	movwf	?___fttol+2
  8484  17F7  0021               	movlb	1	; select bank1
  8485  17F8  0822               	movf	(___fttol@lval+1)^(0+128),w
  8486  17F9  0020               	movlb	0	; select bank0
  8487  17FA  00E8               	movwf	?___fttol+1
  8488  17FB  0021               	movlb	1	; select bank1
  8489  17FC  0821               	movf	___fttol@lval^(0+128),w
  8490  17FD  0020               	movlb	0	; select bank0
  8491  17FE  00E7               	movwf	?___fttol
  8492  17FF  0008               	return
  8493  1800                     __end_of___fttol:	
  8494                           
  8495                           	psect	text11
  8496  1000                     __ptext11:	
  8497 ;; *************** function ___awtoft *****************
  8498 ;; Defined at:
  8499 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;  c               2    8[BANK0 ] int 
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;  sign            1   13[BANK0 ] unsigned char 
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  3    8[BANK0 ] float 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, status,0, pclath, cstack
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8513 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8514 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8517 ;;Total ram usage:        6 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:    3
  8520 ;; This function calls:
  8521 ;;		___ftpack
  8522 ;; This function is called by:
  8523 ;;		_main
  8524 ;;		_set_subdivision
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           
  8529                           ;psect for function ___awtoft
  8530  1000                     ___awtoft:	
  8531                           
  8532                           ;incstack = 0
  8533                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8534  1000  0020               	movlb	0	; select bank0
  8535  1001  01AD               	clrf	___awtoft@sign
  8536  1002  1FA9               	btfss	___awtoft@c+1,7
  8537  1003  280B               	goto	l3262
  8538  1004  09A8               	comf	___awtoft@c,f
  8539  1005  09A9               	comf	___awtoft@c+1,f
  8540  1006  0AA8               	incf	___awtoft@c,f
  8541  1007  1903               	skipnz
  8542  1008  0AA9               	incf	___awtoft@c+1,f
  8543  1009  01AD               	clrf	___awtoft@sign
  8544  100A  0AAD               	incf	___awtoft@sign,f
  8545  100B                     l3262:	
  8546  100B  0828               	movf	___awtoft@c,w
  8547  100C  00A0               	movwf	___ftpack@arg
  8548  100D  0829               	movf	___awtoft@c+1,w
  8549  100E  00A1               	movwf	___ftpack@arg+1
  8550  100F  01A2               	clrf	___ftpack@arg+2
  8551  1010  308E               	movlw	142
  8552  1011  00AB               	movwf	??___awtoft
  8553  1012  082B               	movf	??___awtoft,w
  8554  1013  00A3               	movwf	___ftpack@exp
  8555  1014  082D               	movf	___awtoft@sign,w
  8556  1015  00AC               	movwf	??___awtoft+1
  8557  1016  082C               	movf	??___awtoft+1,w
  8558  1017  00A4               	movwf	___ftpack@sign
  8559  1018  3195  25EF         	fcall	___ftpack
  8560  101A  0020               	movlb	0	; select bank0
  8561  101B  0820               	movf	?___ftpack,w
  8562  101C  00A8               	movwf	?___awtoft
  8563  101D  0821               	movf	?___ftpack+1,w
  8564  101E  00A9               	movwf	?___awtoft+1
  8565  101F  0822               	movf	?___ftpack+2,w
  8566  1020  00AA               	movwf	?___awtoft+2
  8567  1021  0008               	return
  8568  1022                     __end_of___awtoft:	
  8569                           
  8570                           	psect	text12
  8571  1135                     __ptext12:	
  8572 ;; *************** function _read_top_tactile *****************
  8573 ;; Defined at:
  8574 ;;		line 36 in file "tactiles.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;		None
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;		None
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  1    wreg      void 
  8581 ;; Registers used:
  8582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8590 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8591 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8592 ;;Total ram usage:        1 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; Hardware stack levels required when called:    4
  8595 ;; This function calls:
  8596 ;;		_set_leds_top
  8597 ;;		_wait_ms
  8598 ;; This function is called by:
  8599 ;;		_main
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           
  8604                           ;psect for function _read_top_tactile
  8605  1135                     _read_top_tactile:	
  8606                           
  8607                           ;tactiles.c: 44: if (PORTDbits.RD5 == 0) {
  8608                           
  8609                           ;incstack = 0
  8610                           ; Regs used in _read_top_tactile: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8611  1135  0020               	movlb	0	; select bank0
  8612  1136  1A8F               	btfsc	15,5	;volatile
  8613  1137  0008               	return
  8614                           
  8615                           ;tactiles.c: 45: top_push_state = top_push_state + 1;
  8616  1138  0021               	movlb	1	; select bank1
  8617  1139  086D               	movf	_top_push_state^(0+128),w
  8618  113A  3E01               	addlw	1
  8619  113B  00ED               	movwf	_top_push_state^(0+128)
  8620  113C  3000               	movlw	0
  8621  113D  3D6E               	addwfc	(_top_push_state+1)^(0+128),w
  8622  113E  00EE               	movwf	(_top_push_state+1)^(0+128)
  8623                           
  8624                           ;tactiles.c: 46: if (top_push_state >= 7) {
  8625  113F  086E               	movf	(_top_push_state+1)^(0+128),w
  8626  1140  3A80               	xorlw	128
  8627  1141  0020               	movlb	0	; select bank0
  8628  1142  00AE               	movwf	??_read_top_tactile
  8629  1143  3080               	movlw	128
  8630  1144  022E               	subwf	??_read_top_tactile,w
  8631  1145  1D03               	skipz
  8632  1146  294A               	goto	u3365
  8633  1147  3007               	movlw	7
  8634  1148  0021               	movlb	1	; select bank1
  8635  1149  026D               	subwf	_top_push_state^(0+128),w
  8636  114A                     u3365:	
  8637  114A  1C03               	skipc
  8638  114B  2951               	goto	l3548
  8639                           
  8640                           ;tactiles.c: 47: top_push_state = 1;
  8641  114C  3001               	movlw	1
  8642  114D  0021               	movlb	1	; select bank1
  8643  114E  00ED               	movwf	_top_push_state^(0+128)
  8644  114F  3000               	movlw	0
  8645  1150  00EE               	movwf	(_top_push_state^(0+128)+1)
  8646  1151                     l3548:	
  8647                           
  8648                           ;tactiles.c: 48: }
  8649                           ;tactiles.c: 49: set_leds_top(top_push_state, 1);
  8650  1151  0021               	movlb	1	; select bank1
  8651  1152  086E               	movf	(_top_push_state+1)^(0+128),w
  8652  1153  0020               	movlb	0	; select bank0
  8653  1154  00A1               	movwf	set_leds_top@x+1
  8654  1155  0021               	movlb	1	; select bank1
  8655  1156  086D               	movf	_top_push_state^(0+128),w
  8656  1157  0020               	movlb	0	; select bank0
  8657  1158  00A0               	movwf	set_leds_top@x
  8658  1159  3001               	movlw	1
  8659  115A  00A2               	movwf	set_leds_top@ledState
  8660  115B  3000               	movlw	0
  8661  115C  00A3               	movwf	set_leds_top@ledState+1
  8662  115D  3195  259B  3191   	fcall	_set_leds_top
  8663                           
  8664                           ;tactiles.c: 50: delay_time_changed = 1;
  8665  1160  3001               	movlw	1
  8666  1161  0022               	movlb	2	; select bank2
  8667  1162  00DC               	movwf	_delay_time_changed^(0+256)
  8668  1163  3000               	movlw	0
  8669  1164  00DD               	movwf	(_delay_time_changed^(0+256)+1)
  8670  1165                     l768:	
  8671                           ;tactiles.c: 52: while (PORTDbits.RD5 == 0) {
  8672                           
  8673  1165  0020               	movlb	0	; select bank0
  8674  1166  1E8F               	btfss	15,5	;volatile
  8675  1167  2965               	goto	l768
  8676                           
  8677                           ;tactiles.c: 53: }
  8678                           ;tactiles.c: 54: wait_ms(20);
  8679  1168  3014               	movlw	20
  8680  1169  00AC               	movwf	wait_ms@time
  8681  116A  3000               	movlw	0
  8682  116B  00AD               	movwf	wait_ms@time+1
  8683  116C  3190  20D3         	fcall	_wait_ms
  8684  116E  0008               	return
  8685  116F                     __end_of_read_top_tactile:	
  8686                           
  8687                           	psect	text13
  8688  1104                     __ptext13:	
  8689 ;; *************** function _read_bottom_tactile *****************
  8690 ;; Defined at:
  8691 ;;		line 16 in file "tactiles.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;		None
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8708 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8709 ;;Total ram usage:        1 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    4
  8712 ;; This function calls:
  8713 ;;		_set_leds_bottom
  8714 ;;		_wait_ms
  8715 ;; This function is called by:
  8716 ;;		_main
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           
  8721                           ;psect for function _read_bottom_tactile
  8722  1104                     _read_bottom_tactile:	
  8723                           
  8724                           ;tactiles.c: 23: if (PORTDbits.RD6 == 0) {
  8725                           
  8726                           ;incstack = 0
  8727                           ; Regs used in _read_bottom_tactile: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8728  1104  0020               	movlb	0	; select bank0
  8729  1105  1B0F               	btfsc	15,6	;volatile
  8730  1106  0008               	return
  8731                           
  8732                           ;tactiles.c: 24: bottom_push_state = bottom_push_state + 1;
  8733  1107  0021               	movlb	1	; select bank1
  8734  1108  0863               	movf	_bottom_push_state^(0+128),w
  8735  1109  3E01               	addlw	1
  8736  110A  00E3               	movwf	_bottom_push_state^(0+128)
  8737  110B  3000               	movlw	0
  8738  110C  3D64               	addwfc	(_bottom_push_state+1)^(0+128),w
  8739  110D  00E4               	movwf	(_bottom_push_state+1)^(0+128)
  8740                           
  8741                           ;tactiles.c: 25: if (bottom_push_state > 6) {
  8742  110E  0864               	movf	(_bottom_push_state+1)^(0+128),w
  8743  110F  3A80               	xorlw	128
  8744  1110  0020               	movlb	0	; select bank0
  8745  1111  00AE               	movwf	??_read_bottom_tactile
  8746  1112  3080               	movlw	128
  8747  1113  022E               	subwf	??_read_bottom_tactile,w
  8748  1114  1D03               	skipz
  8749  1115  2919               	goto	u3335
  8750  1116  3007               	movlw	7
  8751  1117  0021               	movlb	1	; select bank1
  8752  1118  0263               	subwf	_bottom_push_state^(0+128),w
  8753  1119                     u3335:	
  8754  1119  1C03               	skipc
  8755  111A  2920               	goto	l3536
  8756                           
  8757                           ;tactiles.c: 26: bottom_push_state = 1;
  8758  111B  3001               	movlw	1
  8759  111C  0021               	movlb	1	; select bank1
  8760  111D  00E3               	movwf	_bottom_push_state^(0+128)
  8761  111E  3000               	movlw	0
  8762  111F  00E4               	movwf	(_bottom_push_state^(0+128)+1)
  8763  1120                     l3536:	
  8764                           
  8765                           ;tactiles.c: 27: }
  8766                           ;tactiles.c: 28: set_leds_bottom(bottom_push_state);
  8767  1120  0021               	movlb	1	; select bank1
  8768  1121  0864               	movf	(_bottom_push_state+1)^(0+128),w
  8769  1122  0020               	movlb	0	; select bank0
  8770  1123  00A1               	movwf	set_leds_bottom@x+1
  8771  1124  0021               	movlb	1	; select bank1
  8772  1125  0863               	movf	_bottom_push_state^(0+128),w
  8773  1126  0020               	movlb	0	; select bank0
  8774  1127  00A0               	movwf	set_leds_bottom@x
  8775  1128  3192  2257  3191   	fcall	_set_leds_bottom
  8776  112B                     l760:	
  8777                           ;tactiles.c: 30: while (PORTDbits.RD6 == 0) {
  8778                           
  8779  112B  0020               	movlb	0	; select bank0
  8780  112C  1F0F               	btfss	15,6	;volatile
  8781  112D  292B               	goto	l760
  8782                           
  8783                           ;tactiles.c: 31: }
  8784                           ;tactiles.c: 32: wait_ms(20);
  8785  112E  3014               	movlw	20
  8786  112F  00AC               	movwf	wait_ms@time
  8787  1130  3000               	movlw	0
  8788  1131  00AD               	movwf	wait_ms@time+1
  8789  1132  3190  20D3         	fcall	_wait_ms
  8790  1134  0008               	return
  8791  1135                     __end_of_read_bottom_tactile:	
  8792                           
  8793                           	psect	text14
  8794  12CF                     __ptext14:	
  8795 ;; *************** function _modulation *****************
  8796 ;; Defined at:
  8797 ;;		line 169 in file "user.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  x               2   21[BANK0 ] int 
  8800 ;;  y               2   23[BANK0 ] int 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;		None
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  2   21[BANK0 ] int 
  8805 ;; Registers used:
  8806 ;;		wreg, status,2, status,0, pclath, cstack
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8812 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8814 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8815 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8816 ;;Total ram usage:       12 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:    3
  8819 ;; This function calls:
  8820 ;;		___aldiv
  8821 ;;		___wmul
  8822 ;; This function is called by:
  8823 ;;		_main
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           
  8828                           ;psect for function _modulation
  8829  12CF                     _modulation:	
  8830                           
  8831                           ;user.c: 171: x = (127500 + (y * x)) / 1000;
  8832                           
  8833                           ;incstack = 0
  8834                           ; Regs used in _modulation: [wreg+status,2+status,0+pclath+cstack]
  8835  12CF  3000               	movlw	0
  8836  12D0  0020               	movlb	0	; select bank0
  8837  12D1  00A9               	movwf	___aldiv@divisor+3
  8838  12D2  3000               	movlw	0
  8839  12D3  00A8               	movwf	___aldiv@divisor+2
  8840  12D4  3003               	movlw	3
  8841  12D5  00A7               	movwf	___aldiv@divisor+1
  8842  12D6  30E8               	movlw	232
  8843  12D7  00A6               	movwf	___aldiv@divisor
  8844  12D8  300C               	movlw	12
  8845  12D9  00B9               	movwf	??_modulation
  8846  12DA  30F2               	movlw	242
  8847  12DB  00BA               	movwf	??_modulation+1
  8848  12DC  3001               	movlw	1
  8849  12DD  00BB               	movwf	??_modulation+2
  8850  12DE  3000               	movlw	0
  8851  12DF  00BC               	movwf	??_modulation+3
  8852  12E0  0838               	movf	modulation@y+1,w
  8853  12E1  00A1               	movwf	___wmul@multiplier+1
  8854  12E2  0837               	movf	modulation@y,w
  8855  12E3  00A0               	movwf	___wmul@multiplier
  8856  12E4  0836               	movf	modulation@x+1,w
  8857  12E5  00A3               	movwf	___wmul@multiplicand+1
  8858  12E6  0835               	movf	modulation@x,w
  8859  12E7  00A2               	movwf	___wmul@multiplicand
  8860  12E8  319F  27C4  3192   	fcall	___wmul
  8861  12EB  0020               	movlb	0	; select bank0
  8862  12EC  0820               	movf	?___wmul,w
  8863  12ED  00BD               	movwf	??_modulation+4
  8864  12EE  0821               	movf	?___wmul+1,w
  8865  12EF  00BE               	movwf	??_modulation+5
  8866  12F0  3000               	movlw	0
  8867  12F1  1BBE               	btfsc	??_modulation+5,7
  8868  12F2  30FF               	movlw	255
  8869  12F3  00BF               	movwf	??_modulation+6
  8870  12F4  00C0               	movwf	??_modulation+7
  8871  12F5  083D               	movf	??_modulation+4,w
  8872  12F6  07B9               	addwf	??_modulation,f
  8873  12F7  083E               	movf	??_modulation+5,w
  8874  12F8  3DBA               	addwfc	??_modulation+1,f
  8875  12F9  083F               	movf	??_modulation+6,w
  8876  12FA  3DBB               	addwfc	??_modulation+2,f
  8877  12FB  0840               	movf	??_modulation+7,w
  8878  12FC  3DBC               	addwfc	??_modulation+3,f
  8879  12FD  083C               	movf	??_modulation+3,w
  8880  12FE  00AD               	movwf	___aldiv@dividend+3
  8881  12FF  083B               	movf	??_modulation+2,w
  8882  1300  00AC               	movwf	___aldiv@dividend+2
  8883  1301  083A               	movf	??_modulation+1,w
  8884  1302  00AB               	movwf	___aldiv@dividend+1
  8885  1303  0839               	movf	??_modulation,w
  8886  1304  00AA               	movwf	___aldiv@dividend
  8887  1305  3196  2654         	fcall	___aldiv
  8888  1307  0020               	movlb	0	; select bank0
  8889  1308  0827               	movf	?___aldiv+1,w
  8890  1309  00B6               	movwf	modulation@x+1
  8891  130A  0826               	movf	?___aldiv,w
  8892  130B  00B5               	movwf	modulation@x
  8893                           
  8894                           ;user.c: 172: return x;
  8895  130C  0008               	return
  8896  130D                     __end_of_modulation:	
  8897                           
  8898                           	psect	text15
  8899  1FC4                     __ptext15:	
  8900 ;; *************** function ___wmul *****************
  8901 ;; Defined at:
  8902 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8905 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  product         2    4[BANK0 ] unsigned int 
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  2    0[BANK0 ] unsigned int 
  8910 ;; Registers used:
  8911 ;;		wreg, status,2, status,0
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8917 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8920 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8921 ;;Total ram usage:        6 bytes
  8922 ;; Hardware stack levels used:    1
  8923 ;; Hardware stack levels required when called:    2
  8924 ;; This function calls:
  8925 ;;		Nothing
  8926 ;; This function is called by:
  8927 ;;		_modulation
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931                           
  8932                           ;psect for function ___wmul
  8933  1FC4                     ___wmul:	
  8934                           
  8935                           ;incstack = 0
  8936                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8937  1FC4  0020               	movlb	0	; select bank0
  8938  1FC5  01A4               	clrf	___wmul@product
  8939  1FC6  01A5               	clrf	___wmul@product+1
  8940  1FC7                     l3202:	
  8941  1FC7  1C20               	btfss	___wmul@multiplier,0
  8942  1FC8  2FCD               	goto	l1072
  8943  1FC9  0822               	movf	___wmul@multiplicand,w
  8944  1FCA  07A4               	addwf	___wmul@product,f
  8945  1FCB  0823               	movf	___wmul@multiplicand+1,w
  8946  1FCC  3DA5               	addwfc	___wmul@product+1,f
  8947  1FCD                     l1072:	
  8948  1FCD  3001               	movlw	1
  8949  1FCE                     u2595:	
  8950  1FCE  35A2               	lslf	___wmul@multiplicand,f
  8951  1FCF  0DA3               	rlf	___wmul@multiplicand+1,f
  8952  1FD0  0B89               	decfsz	9,f
  8953  1FD1  2FCE               	goto	u2595
  8954  1FD2  3001               	movlw	1
  8955  1FD3                     u2605:	
  8956  1FD3  36A1               	lsrf	___wmul@multiplier+1,f
  8957  1FD4  0CA0               	rrf	___wmul@multiplier,f
  8958  1FD5  0B89               	decfsz	9,f
  8959  1FD6  2FD3               	goto	u2605
  8960  1FD7  0820               	movf	___wmul@multiplier,w
  8961  1FD8  0421               	iorwf	___wmul@multiplier+1,w
  8962  1FD9  1D03               	btfss	3,2
  8963  1FDA  2FC7               	goto	l3202
  8964  1FDB  0825               	movf	___wmul@product+1,w
  8965  1FDC  00A1               	movwf	?___wmul+1
  8966  1FDD  0824               	movf	___wmul@product,w
  8967  1FDE  00A0               	movwf	?___wmul
  8968  1FDF  0008               	return
  8969  1FE0                     __end_of___wmul:	
  8970                           
  8971                           	psect	text16
  8972  1654                     __ptext16:	
  8973 ;; *************** function ___aldiv *****************
  8974 ;; Defined at:
  8975 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  divisor         4    6[BANK0 ] long 
  8978 ;;  dividend        4   10[BANK0 ] long 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  quotient        4   17[BANK0 ] long 
  8981 ;;  sign            1   16[BANK0 ] unsigned char 
  8982 ;;  counter         1   15[BANK0 ] unsigned char 
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  4    6[BANK0 ] long 
  8985 ;; Registers used:
  8986 ;;		wreg, status,2, status,0
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8992 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8993 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8994 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8995 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8996 ;;Total ram usage:       15 bytes
  8997 ;; Hardware stack levels used:    1
  8998 ;; Hardware stack levels required when called:    2
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_main
  9003 ;;		_modulation
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           
  9008                           ;psect for function ___aldiv
  9009  1654                     ___aldiv:	
  9010                           
  9011                           ;incstack = 0
  9012                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9013  1654  0020               	movlb	0	; select bank0
  9014  1655  01B0               	clrf	___aldiv@sign
  9015  1656  1FA9               	btfss	___aldiv@divisor+3,7
  9016  1657  2E65               	goto	l1127
  9017  1658  09A6               	comf	___aldiv@divisor,f
  9018  1659  09A7               	comf	___aldiv@divisor+1,f
  9019  165A  09A8               	comf	___aldiv@divisor+2,f
  9020  165B  09A9               	comf	___aldiv@divisor+3,f
  9021  165C  0AA6               	incf	___aldiv@divisor,f
  9022  165D  1903               	skipnz
  9023  165E  0AA7               	incf	___aldiv@divisor+1,f
  9024  165F  1903               	skipnz
  9025  1660  0AA8               	incf	___aldiv@divisor+2,f
  9026  1661  1903               	skipnz
  9027  1662  0AA9               	incf	___aldiv@divisor+3,f
  9028  1663  01B0               	clrf	___aldiv@sign
  9029  1664  0AB0               	incf	___aldiv@sign,f
  9030  1665                     l1127:	
  9031  1665  1FAD               	btfss	___aldiv@dividend+3,7
  9032  1666  2E76               	goto	l3224
  9033  1667  09AA               	comf	___aldiv@dividend,f
  9034  1668  09AB               	comf	___aldiv@dividend+1,f
  9035  1669  09AC               	comf	___aldiv@dividend+2,f
  9036  166A  09AD               	comf	___aldiv@dividend+3,f
  9037  166B  0AAA               	incf	___aldiv@dividend,f
  9038  166C  1903               	skipnz
  9039  166D  0AAB               	incf	___aldiv@dividend+1,f
  9040  166E  1903               	skipnz
  9041  166F  0AAC               	incf	___aldiv@dividend+2,f
  9042  1670  1903               	skipnz
  9043  1671  0AAD               	incf	___aldiv@dividend+3,f
  9044  1672  3001               	movlw	1
  9045  1673  00AE               	movwf	??___aldiv
  9046  1674  082E               	movf	??___aldiv,w
  9047  1675  06B0               	xorwf	___aldiv@sign,f
  9048  1676                     l3224:	
  9049  1676  3000               	movlw	0
  9050  1677  00B4               	movwf	___aldiv@quotient+3
  9051  1678  3000               	movlw	0
  9052  1679  00B3               	movwf	___aldiv@quotient+2
  9053  167A  3000               	movlw	0
  9054  167B  00B2               	movwf	___aldiv@quotient+1
  9055  167C  3000               	movlw	0
  9056  167D  00B1               	movwf	___aldiv@quotient
  9057  167E  0829               	movf	___aldiv@divisor+3,w
  9058  167F  0428               	iorwf	___aldiv@divisor+2,w
  9059  1680  0427               	iorwf	___aldiv@divisor+1,w
  9060  1681  0426               	iorwf	___aldiv@divisor,w
  9061  1682  1903               	skipnz
  9062  1683  2EBF               	goto	l3246
  9063  1684  01AF               	clrf	___aldiv@counter
  9064  1685  0AAF               	incf	___aldiv@counter,f
  9065  1686                     l3232:	
  9066  1686  1BA9               	btfsc	___aldiv@divisor+3,7
  9067  1687  2E94               	goto	l3234
  9068  1688  3001               	movlw	1
  9069  1689                     u2655:	
  9070  1689  35A6               	lslf	___aldiv@divisor,f
  9071  168A  0DA7               	rlf	___aldiv@divisor+1,f
  9072  168B  0DA8               	rlf	___aldiv@divisor+2,f
  9073  168C  0DA9               	rlf	___aldiv@divisor+3,f
  9074  168D  0B89               	decfsz	9,f
  9075  168E  2E89               	goto	u2655
  9076  168F  3001               	movlw	1
  9077  1690  00AE               	movwf	??___aldiv
  9078  1691  082E               	movf	??___aldiv,w
  9079  1692  07AF               	addwf	___aldiv@counter,f
  9080  1693  2E86               	goto	l3232
  9081  1694                     l3234:	
  9082  1694  3001               	movlw	1
  9083  1695                     u2675:	
  9084  1695  35B1               	lslf	___aldiv@quotient,f
  9085  1696  0DB2               	rlf	___aldiv@quotient+1,f
  9086  1697  0DB3               	rlf	___aldiv@quotient+2,f
  9087  1698  0DB4               	rlf	___aldiv@quotient+3,f
  9088  1699  0B89               	decfsz	9,f
  9089  169A  2E95               	goto	u2675
  9090  169B  0829               	movf	___aldiv@divisor+3,w
  9091  169C  022D               	subwf	___aldiv@dividend+3,w
  9092  169D  1D03               	skipz
  9093  169E  2EA9               	goto	u2685
  9094  169F  0828               	movf	___aldiv@divisor+2,w
  9095  16A0  022C               	subwf	___aldiv@dividend+2,w
  9096  16A1  1D03               	skipz
  9097  16A2  2EA9               	goto	u2685
  9098  16A3  0827               	movf	___aldiv@divisor+1,w
  9099  16A4  022B               	subwf	___aldiv@dividend+1,w
  9100  16A5  1D03               	skipz
  9101  16A6  2EA9               	goto	u2685
  9102  16A7  0826               	movf	___aldiv@divisor,w
  9103  16A8  022A               	subwf	___aldiv@dividend,w
  9104  16A9                     u2685:	
  9105  16A9  1C03               	skipc
  9106  16AA  2EB4               	goto	l3242
  9107  16AB  0826               	movf	___aldiv@divisor,w
  9108  16AC  02AA               	subwf	___aldiv@dividend,f
  9109  16AD  0827               	movf	___aldiv@divisor+1,w
  9110  16AE  3BAB               	subwfb	___aldiv@dividend+1,f
  9111  16AF  0828               	movf	___aldiv@divisor+2,w
  9112  16B0  3BAC               	subwfb	___aldiv@dividend+2,f
  9113  16B1  0829               	movf	___aldiv@divisor+3,w
  9114  16B2  3BAD               	subwfb	___aldiv@dividend+3,f
  9115  16B3  1431               	bsf	___aldiv@quotient,0
  9116  16B4                     l3242:	
  9117  16B4  3001               	movlw	1
  9118  16B5                     u2695:	
  9119  16B5  36A9               	lsrf	___aldiv@divisor+3,f
  9120  16B6  0CA8               	rrf	___aldiv@divisor+2,f
  9121  16B7  0CA7               	rrf	___aldiv@divisor+1,f
  9122  16B8  0CA6               	rrf	___aldiv@divisor,f
  9123  16B9  0B89               	decfsz	9,f
  9124  16BA  2EB5               	goto	u2695
  9125  16BB  3001               	movlw	1
  9126  16BC  02AF               	subwf	___aldiv@counter,f
  9127  16BD  1D03               	btfss	3,2
  9128  16BE  2E94               	goto	l3234
  9129  16BF                     l3246:	
  9130  16BF  0830               	movf	___aldiv@sign,w
  9131  16C0  1903               	btfsc	3,2
  9132  16C1  2ECD               	goto	l3250
  9133  16C2  09B1               	comf	___aldiv@quotient,f
  9134  16C3  09B2               	comf	___aldiv@quotient+1,f
  9135  16C4  09B3               	comf	___aldiv@quotient+2,f
  9136  16C5  09B4               	comf	___aldiv@quotient+3,f
  9137  16C6  0AB1               	incf	___aldiv@quotient,f
  9138  16C7  1903               	skipnz
  9139  16C8  0AB2               	incf	___aldiv@quotient+1,f
  9140  16C9  1903               	skipnz
  9141  16CA  0AB3               	incf	___aldiv@quotient+2,f
  9142  16CB  1903               	skipnz
  9143  16CC  0AB4               	incf	___aldiv@quotient+3,f
  9144  16CD                     l3250:	
  9145  16CD  0834               	movf	___aldiv@quotient+3,w
  9146  16CE  00A9               	movwf	?___aldiv+3
  9147  16CF  0833               	movf	___aldiv@quotient+2,w
  9148  16D0  00A8               	movwf	?___aldiv+2
  9149  16D1  0832               	movf	___aldiv@quotient+1,w
  9150  16D2  00A7               	movwf	?___aldiv+1
  9151  16D3  0831               	movf	___aldiv@quotient,w
  9152  16D4  00A6               	movwf	?___aldiv
  9153  16D5  0008               	return
  9154  16D6                     __end_of___aldiv:	
  9155                           
  9156                           	psect	text17
  9157  16D6                     __ptext17:	
  9158 ;; *************** function _map *****************
  9159 ;; Defined at:
  9160 ;;		line 165 in file "user.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;  x               3   53[BANK0 ] float 
  9163 ;;  in_min          3   56[BANK0 ] float 
  9164 ;;  in_max          3   59[BANK0 ] float 
  9165 ;;  out_min         3   62[BANK0 ] float 
  9166 ;;  out_max         3   65[BANK0 ] float 
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;		None
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  3   53[BANK0 ] float 
  9171 ;; Registers used:
  9172 ;;		wreg, status,2, status,0, pclath, cstack
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9178 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9179 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9181 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9182 ;;Total ram usage:       18 bytes
  9183 ;; Hardware stack levels used:    1
  9184 ;; Hardware stack levels required when called:    4
  9185 ;; This function calls:
  9186 ;;		___ftadd
  9187 ;;		___ftdiv
  9188 ;;		___ftmul
  9189 ;;		___ftneg
  9190 ;; This function is called by:
  9191 ;;		_main
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           
  9196                           ;psect for function _map
  9197  16D6                     _map:	
  9198                           
  9199                           ;user.c: 166: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  9200                           
  9201                           ;incstack = 0
  9202                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  9203  16D6  0020               	movlb	0	; select bank0
  9204  16D7  085B               	movf	map@in_max,w
  9205  16D8  00A8               	movwf	___ftadd@f1
  9206  16D9  085C               	movf	map@in_max+1,w
  9207  16DA  00A9               	movwf	___ftadd@f1+1
  9208  16DB  085D               	movf	map@in_max+2,w
  9209  16DC  00AA               	movwf	___ftadd@f1+2
  9210  16DD  0858               	movf	map@in_min,w
  9211  16DE  00A0               	movwf	___ftneg@f1
  9212  16DF  0859               	movf	map@in_min+1,w
  9213  16E0  00A1               	movwf	___ftneg@f1+1
  9214  16E1  085A               	movf	map@in_min+2,w
  9215  16E2  00A2               	movwf	___ftneg@f1+2
  9216  16E3  319F  272B  3196   	fcall	___ftneg
  9217  16E6  0020               	movlb	0	; select bank0
  9218  16E7  0820               	movf	?___ftneg,w
  9219  16E8  00AB               	movwf	___ftadd@f2
  9220  16E9  0821               	movf	?___ftneg+1,w
  9221  16EA  00AC               	movwf	___ftadd@f2+1
  9222  16EB  0822               	movf	?___ftneg+2,w
  9223  16EC  00AD               	movwf	___ftadd@f2+2
  9224  16ED  3185  255D  3196   	fcall	___ftadd
  9225  16F0  0020               	movlb	0	; select bank0
  9226  16F1  0828               	movf	?___ftadd,w
  9227  16F2  00C5               	movwf	___ftdiv@f2
  9228  16F3  0829               	movf	?___ftadd+1,w
  9229  16F4  00C6               	movwf	___ftdiv@f2+1
  9230  16F5  082A               	movf	?___ftadd+2,w
  9231  16F6  00C7               	movwf	___ftdiv@f2+2
  9232  16F7  0861               	movf	map@out_max,w
  9233  16F8  00A8               	movwf	___ftadd@f1
  9234  16F9  0862               	movf	map@out_max+1,w
  9235  16FA  00A9               	movwf	___ftadd@f1+1
  9236  16FB  0863               	movf	map@out_max+2,w
  9237  16FC  00AA               	movwf	___ftadd@f1+2
  9238  16FD  085E               	movf	map@out_min,w
  9239  16FE  00A0               	movwf	___ftneg@f1
  9240  16FF  085F               	movf	map@out_min+1,w
  9241  1700  00A1               	movwf	___ftneg@f1+1
  9242  1701  0860               	movf	map@out_min+2,w
  9243  1702  00A2               	movwf	___ftneg@f1+2
  9244  1703  319F  272B  3196   	fcall	___ftneg
  9245  1706  0020               	movlb	0	; select bank0
  9246  1707  0820               	movf	?___ftneg,w
  9247  1708  00AB               	movwf	___ftadd@f2
  9248  1709  0821               	movf	?___ftneg+1,w
  9249  170A  00AC               	movwf	___ftadd@f2+1
  9250  170B  0822               	movf	?___ftneg+2,w
  9251  170C  00AD               	movwf	___ftadd@f2+2
  9252  170D  3185  255D  3196   	fcall	___ftadd
  9253  1710  0020               	movlb	0	; select bank0
  9254  1711  0828               	movf	?___ftadd,w
  9255  1712  00B5               	movwf	___ftmul@f1
  9256  1713  0829               	movf	?___ftadd+1,w
  9257  1714  00B6               	movwf	___ftmul@f1+1
  9258  1715  082A               	movf	?___ftadd+2,w
  9259  1716  00B7               	movwf	___ftmul@f1+2
  9260  1717  0855               	movf	map@x,w
  9261  1718  00A8               	movwf	___ftadd@f1
  9262  1719  0856               	movf	map@x+1,w
  9263  171A  00A9               	movwf	___ftadd@f1+1
  9264  171B  0857               	movf	map@x+2,w
  9265  171C  00AA               	movwf	___ftadd@f1+2
  9266  171D  0858               	movf	map@in_min,w
  9267  171E  00A0               	movwf	___ftneg@f1
  9268  171F  0859               	movf	map@in_min+1,w
  9269  1720  00A1               	movwf	___ftneg@f1+1
  9270  1721  085A               	movf	map@in_min+2,w
  9271  1722  00A2               	movwf	___ftneg@f1+2
  9272  1723  319F  272B  3196   	fcall	___ftneg
  9273  1726  0020               	movlb	0	; select bank0
  9274  1727  0820               	movf	?___ftneg,w
  9275  1728  00AB               	movwf	___ftadd@f2
  9276  1729  0821               	movf	?___ftneg+1,w
  9277  172A  00AC               	movwf	___ftadd@f2+1
  9278  172B  0822               	movf	?___ftneg+2,w
  9279  172C  00AD               	movwf	___ftadd@f2+2
  9280  172D  3185  255D  3196   	fcall	___ftadd
  9281  1730  0020               	movlb	0	; select bank0
  9282  1731  0828               	movf	?___ftadd,w
  9283  1732  00B8               	movwf	___ftmul@f2
  9284  1733  0829               	movf	?___ftadd+1,w
  9285  1734  00B9               	movwf	___ftmul@f2+1
  9286  1735  082A               	movf	?___ftadd+2,w
  9287  1736  00BA               	movwf	___ftmul@f2+2
  9288  1737  3186  2653  3196   	fcall	___ftmul
  9289  173A  0020               	movlb	0	; select bank0
  9290  173B  0835               	movf	?___ftmul,w
  9291  173C  00C8               	movwf	___ftdiv@f1
  9292  173D  0836               	movf	?___ftmul+1,w
  9293  173E  00C9               	movwf	___ftdiv@f1+1
  9294  173F  0837               	movf	?___ftmul+2,w
  9295  1740  00CA               	movwf	___ftdiv@f1+2
  9296  1741  3188  207D  3196   	fcall	___ftdiv
  9297  1744  0020               	movlb	0	; select bank0
  9298  1745  0845               	movf	?___ftdiv,w
  9299  1746  00E4               	movwf	_map$1988
  9300  1747  0846               	movf	?___ftdiv+1,w
  9301  1748  00E5               	movwf	_map$1988+1
  9302  1749  0847               	movf	?___ftdiv+2,w
  9303  174A  00E6               	movwf	_map$1988+2
  9304                           
  9305                           ;user.c: 166: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  9306  174B  085E               	movf	map@out_min,w
  9307  174C  00A8               	movwf	___ftadd@f1
  9308  174D  085F               	movf	map@out_min+1,w
  9309  174E  00A9               	movwf	___ftadd@f1+1
  9310  174F  0860               	movf	map@out_min+2,w
  9311  1750  00AA               	movwf	___ftadd@f1+2
  9312  1751  0864               	movf	_map$1988,w
  9313  1752  00AB               	movwf	___ftadd@f2
  9314  1753  0865               	movf	_map$1988+1,w
  9315  1754  00AC               	movwf	___ftadd@f2+1
  9316  1755  0866               	movf	_map$1988+2,w
  9317  1756  00AD               	movwf	___ftadd@f2+2
  9318  1757  3185  255D         	fcall	___ftadd
  9319  1759  0020               	movlb	0	; select bank0
  9320  175A  0828               	movf	?___ftadd,w
  9321  175B  00D5               	movwf	?_map
  9322  175C  0829               	movf	?___ftadd+1,w
  9323  175D  00D6               	movwf	?_map+1
  9324  175E  082A               	movf	?___ftadd+2,w
  9325  175F  00D7               	movwf	?_map+2
  9326  1760  0008               	return
  9327  1761                     __end_of_map:	
  9328                           
  9329                           	psect	text18
  9330  1F2B                     __ptext18:	
  9331 ;; *************** function ___ftneg *****************
  9332 ;; Defined at:
  9333 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;  f1              3    0[BANK0 ] float 
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;		None
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  3    0[BANK0 ] float 
  9340 ;; Registers used:
  9341 ;;		wreg
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9347 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9350 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9351 ;;Total ram usage:        3 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    2
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_map
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           
  9362                           ;psect for function ___ftneg
  9363  1F2B                     ___ftneg:	
  9364                           
  9365                           ;incstack = 0
  9366                           ; Regs used in ___ftneg: [wreg]
  9367  1F2B  0020               	movlb	0	; select bank0
  9368  1F2C  0822               	movf	___ftneg@f1+2,w
  9369  1F2D  0421               	iorwf	___ftneg@f1+1,w
  9370  1F2E  0420               	iorwf	___ftneg@f1,w
  9371  1F2F  1903               	skipnz
  9372  1F30  0008               	return
  9373  1F31  3080               	movlw	128
  9374  1F32  06A2               	xorwf	___ftneg@f1+2,f
  9375  1F33  0008               	return
  9376  1F34                     __end_of___ftneg:	
  9377                           
  9378                           	psect	text19
  9379  0653                     __ptext19:	
  9380 ;; *************** function ___ftmul *****************
  9381 ;; Defined at:
  9382 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;  f1              3   21[BANK0 ] float 
  9385 ;;  f2              3   24[BANK0 ] float 
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;  f3_as_produc    3   32[BANK0 ] unsigned um
  9388 ;;  sign            1   36[BANK0 ] unsigned char 
  9389 ;;  cntr            1   35[BANK0 ] unsigned char 
  9390 ;;  exp             1   31[BANK0 ] unsigned char 
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  3   21[BANK0 ] float 
  9393 ;; Registers used:
  9394 ;;		wreg, status,2, status,0, pclath, cstack
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9400 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9401 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9402 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9403 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9404 ;;Total ram usage:       16 bytes
  9405 ;; Hardware stack levels used:    1
  9406 ;; Hardware stack levels required when called:    3
  9407 ;; This function calls:
  9408 ;;		___ftpack
  9409 ;; This function is called by:
  9410 ;;		_set_subdivision
  9411 ;;		_map
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           
  9416                           ;psect for function ___ftmul
  9417  0653                     ___ftmul:	
  9418                           
  9419                           ;incstack = 0
  9420                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9421  0653  0020               	movlb	0	; select bank0
  9422  0654  0835               	movf	___ftmul@f1,w
  9423  0655  00BB               	movwf	??___ftmul
  9424  0656  0836               	movf	___ftmul@f1+1,w
  9425  0657  00BC               	movwf	??___ftmul+1
  9426  0658  0837               	movf	___ftmul@f1+2,w
  9427  0659  00BD               	movwf	??___ftmul+2
  9428  065A  1003               	clrc
  9429  065B  0D3C               	rlf	??___ftmul+1,w
  9430  065C  0D3D               	rlf	??___ftmul+2,w
  9431  065D  00BE               	movwf	??___ftmul+3
  9432  065E  083E               	movf	??___ftmul+3,w
  9433  065F  00BF               	movwf	___ftmul@exp
  9434  0660  083F               	movf	___ftmul@exp,w
  9435  0661  1D03               	btfss	3,2
  9436  0662  2E6A               	goto	l3384
  9437  0663  3000               	movlw	0
  9438  0664  00B5               	movwf	?___ftmul
  9439  0665  3000               	movlw	0
  9440  0666  00B6               	movwf	?___ftmul+1
  9441  0667  3000               	movlw	0
  9442  0668  00B7               	movwf	?___ftmul+2
  9443  0669  0008               	return
  9444  066A                     l3384:	
  9445  066A  0838               	movf	___ftmul@f2,w
  9446  066B  00BB               	movwf	??___ftmul
  9447  066C  0839               	movf	___ftmul@f2+1,w
  9448  066D  00BC               	movwf	??___ftmul+1
  9449  066E  083A               	movf	___ftmul@f2+2,w
  9450  066F  00BD               	movwf	??___ftmul+2
  9451  0670  1003               	clrc
  9452  0671  0D3C               	rlf	??___ftmul+1,w
  9453  0672  0D3D               	rlf	??___ftmul+2,w
  9454  0673  00BE               	movwf	??___ftmul+3
  9455  0674  083E               	movf	??___ftmul+3,w
  9456  0675  00C4               	movwf	___ftmul@sign
  9457  0676  0844               	movf	___ftmul@sign,w
  9458  0677  1D03               	btfss	3,2
  9459  0678  2E80               	goto	l3390
  9460  0679  3000               	movlw	0
  9461  067A  00B5               	movwf	?___ftmul
  9462  067B  3000               	movlw	0
  9463  067C  00B6               	movwf	?___ftmul+1
  9464  067D  3000               	movlw	0
  9465  067E  00B7               	movwf	?___ftmul+2
  9466  067F  0008               	return
  9467  0680                     l3390:	
  9468  0680  0844               	movf	___ftmul@sign,w
  9469  0681  3E7B               	addlw	123
  9470  0682  00BB               	movwf	??___ftmul
  9471  0683  083B               	movf	??___ftmul,w
  9472  0684  07BF               	addwf	___ftmul@exp,f
  9473  0685  0835               	movf	___ftmul@f1,w
  9474  0686  00BB               	movwf	??___ftmul
  9475  0687  0836               	movf	___ftmul@f1+1,w
  9476  0688  00BC               	movwf	??___ftmul+1
  9477  0689  0837               	movf	___ftmul@f1+2,w
  9478  068A  00BD               	movwf	??___ftmul+2
  9479  068B  3010               	movlw	16
  9480  068C                     u3065:	
  9481  068C  36BD               	lsrf	??___ftmul+2,f
  9482  068D  0CBC               	rrf	??___ftmul+1,f
  9483  068E  0CBB               	rrf	??___ftmul,f
  9484  068F  0B89               	decfsz	9,f
  9485  0690  2E8C               	goto	u3065
  9486  0691  083B               	movf	??___ftmul,w
  9487  0692  00BE               	movwf	??___ftmul+3
  9488  0693  083E               	movf	??___ftmul+3,w
  9489  0694  00C4               	movwf	___ftmul@sign
  9490  0695  0838               	movf	___ftmul@f2,w
  9491  0696  00BB               	movwf	??___ftmul
  9492  0697  0839               	movf	___ftmul@f2+1,w
  9493  0698  00BC               	movwf	??___ftmul+1
  9494  0699  083A               	movf	___ftmul@f2+2,w
  9495  069A  00BD               	movwf	??___ftmul+2
  9496  069B  3010               	movlw	16
  9497  069C                     u3075:	
  9498  069C  36BD               	lsrf	??___ftmul+2,f
  9499  069D  0CBC               	rrf	??___ftmul+1,f
  9500  069E  0CBB               	rrf	??___ftmul,f
  9501  069F  0B89               	decfsz	9,f
  9502  06A0  2E9C               	goto	u3075
  9503  06A1  083B               	movf	??___ftmul,w
  9504  06A2  00BE               	movwf	??___ftmul+3
  9505  06A3  083E               	movf	??___ftmul+3,w
  9506  06A4  06C4               	xorwf	___ftmul@sign,f
  9507  06A5  3080               	movlw	128
  9508  06A6  00BB               	movwf	??___ftmul
  9509  06A7  083B               	movf	??___ftmul,w
  9510  06A8  05C4               	andwf	___ftmul@sign,f
  9511  06A9  17B6               	bsf	___ftmul@f1+1,7
  9512  06AA  17B9               	bsf	___ftmul@f2+1,7
  9513  06AB  30FF               	movlw	255
  9514  06AC  05B8               	andwf	___ftmul@f2,f
  9515  06AD  30FF               	movlw	255
  9516  06AE  05B9               	andwf	___ftmul@f2+1,f
  9517  06AF  3000               	movlw	0
  9518  06B0  05BA               	andwf	___ftmul@f2+2,f
  9519  06B1  3000               	movlw	0
  9520  06B2  00C0               	movwf	___ftmul@f3_as_product
  9521  06B3  3000               	movlw	0
  9522  06B4  00C1               	movwf	___ftmul@f3_as_product+1
  9523  06B5  3000               	movlw	0
  9524  06B6  00C2               	movwf	___ftmul@f3_as_product+2
  9525  06B7  3007               	movlw	7
  9526  06B8  00BB               	movwf	??___ftmul
  9527  06B9  083B               	movf	??___ftmul,w
  9528  06BA  00C3               	movwf	___ftmul@cntr
  9529  06BB                     l3402:	
  9530  06BB  1C35               	btfss	___ftmul@f1,0
  9531  06BC  2EC3               	goto	l3406
  9532  06BD  0838               	movf	___ftmul@f2,w
  9533  06BE  07C0               	addwf	___ftmul@f3_as_product,f
  9534  06BF  0839               	movf	___ftmul@f2+1,w
  9535  06C0  3DC1               	addwfc	___ftmul@f3_as_product+1,f
  9536  06C1  083A               	movf	___ftmul@f2+2,w
  9537  06C2  3DC2               	addwfc	___ftmul@f3_as_product+2,f
  9538  06C3                     l3406:	
  9539  06C3  3001               	movlw	1
  9540  06C4                     u3095:	
  9541  06C4  36B7               	lsrf	___ftmul@f1+2,f
  9542  06C5  0CB6               	rrf	___ftmul@f1+1,f
  9543  06C6  0CB5               	rrf	___ftmul@f1,f
  9544  06C7  0B89               	decfsz	9,f
  9545  06C8  2EC4               	goto	u3095
  9546  06C9  3001               	movlw	1
  9547  06CA                     u3105:	
  9548  06CA  35B8               	lslf	___ftmul@f2,f
  9549  06CB  0DB9               	rlf	___ftmul@f2+1,f
  9550  06CC  0DBA               	rlf	___ftmul@f2+2,f
  9551  06CD  0B89               	decfsz	9,f
  9552  06CE  2ECA               	goto	u3105
  9553  06CF  3001               	movlw	1
  9554  06D0  02C3               	subwf	___ftmul@cntr,f
  9555  06D1  1D03               	btfss	3,2
  9556  06D2  2EBB               	goto	l3402
  9557  06D3  3009               	movlw	9
  9558  06D4  00BB               	movwf	??___ftmul
  9559  06D5  083B               	movf	??___ftmul,w
  9560  06D6  00C3               	movwf	___ftmul@cntr
  9561  06D7                     l3414:	
  9562  06D7  1C35               	btfss	___ftmul@f1,0
  9563  06D8  2EDF               	goto	l3418
  9564  06D9  0838               	movf	___ftmul@f2,w
  9565  06DA  07C0               	addwf	___ftmul@f3_as_product,f
  9566  06DB  0839               	movf	___ftmul@f2+1,w
  9567  06DC  3DC1               	addwfc	___ftmul@f3_as_product+1,f
  9568  06DD  083A               	movf	___ftmul@f2+2,w
  9569  06DE  3DC2               	addwfc	___ftmul@f3_as_product+2,f
  9570  06DF                     l3418:	
  9571  06DF  3001               	movlw	1
  9572  06E0                     u3135:	
  9573  06E0  36B7               	lsrf	___ftmul@f1+2,f
  9574  06E1  0CB6               	rrf	___ftmul@f1+1,f
  9575  06E2  0CB5               	rrf	___ftmul@f1,f
  9576  06E3  0B89               	decfsz	9,f
  9577  06E4  2EE0               	goto	u3135
  9578  06E5  3001               	movlw	1
  9579  06E6                     u3145:	
  9580  06E6  36C2               	lsrf	___ftmul@f3_as_product+2,f
  9581  06E7  0CC1               	rrf	___ftmul@f3_as_product+1,f
  9582  06E8  0CC0               	rrf	___ftmul@f3_as_product,f
  9583  06E9  0B89               	decfsz	9,f
  9584  06EA  2EE6               	goto	u3145
  9585  06EB  3001               	movlw	1
  9586  06EC  02C3               	subwf	___ftmul@cntr,f
  9587  06ED  1D03               	btfss	3,2
  9588  06EE  2ED7               	goto	l3414
  9589  06EF  0840               	movf	___ftmul@f3_as_product,w
  9590  06F0  00A0               	movwf	___ftpack@arg
  9591  06F1  0841               	movf	___ftmul@f3_as_product+1,w
  9592  06F2  00A1               	movwf	___ftpack@arg+1
  9593  06F3  0842               	movf	___ftmul@f3_as_product+2,w
  9594  06F4  00A2               	movwf	___ftpack@arg+2
  9595  06F5  083F               	movf	___ftmul@exp,w
  9596  06F6  00BB               	movwf	??___ftmul
  9597  06F7  083B               	movf	??___ftmul,w
  9598  06F8  00A3               	movwf	___ftpack@exp
  9599  06F9  0844               	movf	___ftmul@sign,w
  9600  06FA  00BC               	movwf	??___ftmul+1
  9601  06FB  083C               	movf	??___ftmul+1,w
  9602  06FC  00A4               	movwf	___ftpack@sign
  9603  06FD  3195  25EF         	fcall	___ftpack
  9604  06FF  0020               	movlb	0	; select bank0
  9605  0700  0820               	movf	?___ftpack,w
  9606  0701  00B5               	movwf	?___ftmul
  9607  0702  0821               	movf	?___ftpack+1,w
  9608  0703  00B6               	movwf	?___ftmul+1
  9609  0704  0822               	movf	?___ftpack+2,w
  9610  0705  00B7               	movwf	?___ftmul+2
  9611  0706  0008               	return
  9612  0707                     __end_of___ftmul:	
  9613                           
  9614                           	psect	text20
  9615  087D                     __ptext20:	
  9616 ;; *************** function ___ftdiv *****************
  9617 ;; Defined at:
  9618 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  f2              3   37[BANK0 ] float 
  9621 ;;  f1              3   40[BANK0 ] float 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  f3              3   48[BANK0 ] float 
  9624 ;;  sign            1   52[BANK0 ] unsigned char 
  9625 ;;  exp             1   51[BANK0 ] unsigned char 
  9626 ;;  cntr            1   47[BANK0 ] unsigned char 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  3   37[BANK0 ] float 
  9629 ;; Registers used:
  9630 ;;		wreg, status,2, status,0, pclath, cstack
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9636 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9637 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9638 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9639 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9640 ;;Total ram usage:       16 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; Hardware stack levels required when called:    3
  9643 ;; This function calls:
  9644 ;;		___ftpack
  9645 ;; This function is called by:
  9646 ;;		_main
  9647 ;;		_map
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           
  9652                           ;psect for function ___ftdiv
  9653  087D                     ___ftdiv:	
  9654                           
  9655                           ;incstack = 0
  9656                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9657  087D  0020               	movlb	0	; select bank0
  9658  087E  0848               	movf	___ftdiv@f1,w
  9659  087F  00CB               	movwf	??___ftdiv
  9660  0880  0849               	movf	___ftdiv@f1+1,w
  9661  0881  00CC               	movwf	??___ftdiv+1
  9662  0882  084A               	movf	___ftdiv@f1+2,w
  9663  0883  00CD               	movwf	??___ftdiv+2
  9664  0884  1003               	clrc
  9665  0885  0D4C               	rlf	??___ftdiv+1,w
  9666  0886  0D4D               	rlf	??___ftdiv+2,w
  9667  0887  00CE               	movwf	??___ftdiv+3
  9668  0888  084E               	movf	??___ftdiv+3,w
  9669  0889  00D3               	movwf	___ftdiv@exp
  9670  088A  0853               	movf	___ftdiv@exp,w
  9671  088B  1D03               	btfss	3,2
  9672  088C  2894               	goto	l3342
  9673  088D  3000               	movlw	0
  9674  088E  00C5               	movwf	?___ftdiv
  9675  088F  3000               	movlw	0
  9676  0890  00C6               	movwf	?___ftdiv+1
  9677  0891  3000               	movlw	0
  9678  0892  00C7               	movwf	?___ftdiv+2
  9679  0893  0008               	return
  9680  0894                     l3342:	
  9681  0894  0845               	movf	___ftdiv@f2,w
  9682  0895  00CB               	movwf	??___ftdiv
  9683  0896  0846               	movf	___ftdiv@f2+1,w
  9684  0897  00CC               	movwf	??___ftdiv+1
  9685  0898  0847               	movf	___ftdiv@f2+2,w
  9686  0899  00CD               	movwf	??___ftdiv+2
  9687  089A  1003               	clrc
  9688  089B  0D4C               	rlf	??___ftdiv+1,w
  9689  089C  0D4D               	rlf	??___ftdiv+2,w
  9690  089D  00CE               	movwf	??___ftdiv+3
  9691  089E  084E               	movf	??___ftdiv+3,w
  9692  089F  00D4               	movwf	___ftdiv@sign
  9693  08A0  0854               	movf	___ftdiv@sign,w
  9694  08A1  1D03               	btfss	3,2
  9695  08A2  28AA               	goto	l3348
  9696  08A3  3000               	movlw	0
  9697  08A4  00C5               	movwf	?___ftdiv
  9698  08A5  3000               	movlw	0
  9699  08A6  00C6               	movwf	?___ftdiv+1
  9700  08A7  3000               	movlw	0
  9701  08A8  00C7               	movwf	?___ftdiv+2
  9702  08A9  0008               	return
  9703  08AA                     l3348:	
  9704  08AA  3000               	movlw	0
  9705  08AB  00D0               	movwf	___ftdiv@f3
  9706  08AC  3000               	movlw	0
  9707  08AD  00D1               	movwf	___ftdiv@f3+1
  9708  08AE  3000               	movlw	0
  9709  08AF  00D2               	movwf	___ftdiv@f3+2
  9710  08B0  3089               	movlw	137
  9711  08B1  0754               	addwf	___ftdiv@sign,w
  9712  08B2  00CB               	movwf	??___ftdiv
  9713  08B3  084B               	movf	??___ftdiv,w
  9714  08B4  02D3               	subwf	___ftdiv@exp,f
  9715  08B5  0848               	movf	___ftdiv@f1,w
  9716  08B6  00CB               	movwf	??___ftdiv
  9717  08B7  0849               	movf	___ftdiv@f1+1,w
  9718  08B8  00CC               	movwf	??___ftdiv+1
  9719  08B9  084A               	movf	___ftdiv@f1+2,w
  9720  08BA  00CD               	movwf	??___ftdiv+2
  9721  08BB  3010               	movlw	16
  9722  08BC                     u2985:	
  9723  08BC  36CD               	lsrf	??___ftdiv+2,f
  9724  08BD  0CCC               	rrf	??___ftdiv+1,f
  9725  08BE  0CCB               	rrf	??___ftdiv,f
  9726  08BF  0B89               	decfsz	9,f
  9727  08C0  28BC               	goto	u2985
  9728  08C1  084B               	movf	??___ftdiv,w
  9729  08C2  00CE               	movwf	??___ftdiv+3
  9730  08C3  084E               	movf	??___ftdiv+3,w
  9731  08C4  00D4               	movwf	___ftdiv@sign
  9732  08C5  0845               	movf	___ftdiv@f2,w
  9733  08C6  00CB               	movwf	??___ftdiv
  9734  08C7  0846               	movf	___ftdiv@f2+1,w
  9735  08C8  00CC               	movwf	??___ftdiv+1
  9736  08C9  0847               	movf	___ftdiv@f2+2,w
  9737  08CA  00CD               	movwf	??___ftdiv+2
  9738  08CB  3010               	movlw	16
  9739  08CC                     u2995:	
  9740  08CC  36CD               	lsrf	??___ftdiv+2,f
  9741  08CD  0CCC               	rrf	??___ftdiv+1,f
  9742  08CE  0CCB               	rrf	??___ftdiv,f
  9743  08CF  0B89               	decfsz	9,f
  9744  08D0  28CC               	goto	u2995
  9745  08D1  084B               	movf	??___ftdiv,w
  9746  08D2  00CE               	movwf	??___ftdiv+3
  9747  08D3  084E               	movf	??___ftdiv+3,w
  9748  08D4  06D4               	xorwf	___ftdiv@sign,f
  9749  08D5  3080               	movlw	128
  9750  08D6  00CB               	movwf	??___ftdiv
  9751  08D7  084B               	movf	??___ftdiv,w
  9752  08D8  05D4               	andwf	___ftdiv@sign,f
  9753  08D9  17C9               	bsf	___ftdiv@f1+1,7
  9754  08DA  30FF               	movlw	255
  9755  08DB  05C8               	andwf	___ftdiv@f1,f
  9756  08DC  30FF               	movlw	255
  9757  08DD  05C9               	andwf	___ftdiv@f1+1,f
  9758  08DE  3000               	movlw	0
  9759  08DF  05CA               	andwf	___ftdiv@f1+2,f
  9760  08E0  17C6               	bsf	___ftdiv@f2+1,7
  9761  08E1  30FF               	movlw	255
  9762  08E2  05C5               	andwf	___ftdiv@f2,f
  9763  08E3  30FF               	movlw	255
  9764  08E4  05C6               	andwf	___ftdiv@f2+1,f
  9765  08E5  3000               	movlw	0
  9766  08E6  05C7               	andwf	___ftdiv@f2+2,f
  9767  08E7  3018               	movlw	24
  9768  08E8  00CB               	movwf	??___ftdiv
  9769  08E9  084B               	movf	??___ftdiv,w
  9770  08EA  00CF               	movwf	___ftdiv@cntr
  9771  08EB                     l3362:	
  9772  08EB  3001               	movlw	1
  9773  08EC                     u3005:	
  9774  08EC  35D0               	lslf	___ftdiv@f3,f
  9775  08ED  0DD1               	rlf	___ftdiv@f3+1,f
  9776  08EE  0DD2               	rlf	___ftdiv@f3+2,f
  9777  08EF  0B89               	decfsz	9,f
  9778  08F0  28EC               	goto	u3005
  9779  08F1  0847               	movf	___ftdiv@f2+2,w
  9780  08F2  024A               	subwf	___ftdiv@f1+2,w
  9781  08F3  1D03               	skipz
  9782  08F4  28FB               	goto	u3015
  9783  08F5  0846               	movf	___ftdiv@f2+1,w
  9784  08F6  0249               	subwf	___ftdiv@f1+1,w
  9785  08F7  1D03               	skipz
  9786  08F8  28FB               	goto	u3015
  9787  08F9  0845               	movf	___ftdiv@f2,w
  9788  08FA  0248               	subwf	___ftdiv@f1,w
  9789  08FB                     u3015:	
  9790  08FB  1C03               	skipc
  9791  08FC  2904               	goto	l3370
  9792  08FD  0845               	movf	___ftdiv@f2,w
  9793  08FE  02C8               	subwf	___ftdiv@f1,f
  9794  08FF  0846               	movf	___ftdiv@f2+1,w
  9795  0900  3BC9               	subwfb	___ftdiv@f1+1,f
  9796  0901  0847               	movf	___ftdiv@f2+2,w
  9797  0902  3BCA               	subwfb	___ftdiv@f1+2,f
  9798  0903  1450               	bsf	___ftdiv@f3,0
  9799  0904                     l3370:	
  9800  0904  3001               	movlw	1
  9801  0905                     u3025:	
  9802  0905  35C8               	lslf	___ftdiv@f1,f
  9803  0906  0DC9               	rlf	___ftdiv@f1+1,f
  9804  0907  0DCA               	rlf	___ftdiv@f1+2,f
  9805  0908  0B89               	decfsz	9,f
  9806  0909  2905               	goto	u3025
  9807  090A  3001               	movlw	1
  9808  090B  02CF               	subwf	___ftdiv@cntr,f
  9809  090C  1D03               	btfss	3,2
  9810  090D  28EB               	goto	l3362
  9811  090E  0850               	movf	___ftdiv@f3,w
  9812  090F  00A0               	movwf	___ftpack@arg
  9813  0910  0851               	movf	___ftdiv@f3+1,w
  9814  0911  00A1               	movwf	___ftpack@arg+1
  9815  0912  0852               	movf	___ftdiv@f3+2,w
  9816  0913  00A2               	movwf	___ftpack@arg+2
  9817  0914  0853               	movf	___ftdiv@exp,w
  9818  0915  00CB               	movwf	??___ftdiv
  9819  0916  084B               	movf	??___ftdiv,w
  9820  0917  00A3               	movwf	___ftpack@exp
  9821  0918  0854               	movf	___ftdiv@sign,w
  9822  0919  00CC               	movwf	??___ftdiv+1
  9823  091A  084C               	movf	??___ftdiv+1,w
  9824  091B  00A4               	movwf	___ftpack@sign
  9825  091C  3195  25EF         	fcall	___ftpack
  9826  091E  0020               	movlb	0	; select bank0
  9827  091F  0820               	movf	?___ftpack,w
  9828  0920  00C5               	movwf	?___ftdiv
  9829  0921  0821               	movf	?___ftpack+1,w
  9830  0922  00C6               	movwf	?___ftdiv+1
  9831  0923  0822               	movf	?___ftpack+2,w
  9832  0924  00C7               	movwf	?___ftdiv+2
  9833  0925  0008               	return
  9834  0926                     __end_of___ftdiv:	
  9835                           
  9836                           	psect	text21
  9837  055D                     __ptext21:	
  9838 ;; *************** function ___ftadd *****************
  9839 ;; Defined at:
  9840 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;  f1              3    8[BANK0 ] float 
  9843 ;;  f2              3   11[BANK0 ] float 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;  exp1            1   20[BANK0 ] unsigned char 
  9846 ;;  exp2            1   19[BANK0 ] unsigned char 
  9847 ;;  sign            1   18[BANK0 ] unsigned char 
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  3    8[BANK0 ] float 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0, pclath, cstack
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9857 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9858 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9859 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9860 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9861 ;;Total ram usage:       13 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:    3
  9864 ;; This function calls:
  9865 ;;		___ftpack
  9866 ;; This function is called by:
  9867 ;;		_map
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           
  9872                           ;psect for function ___ftadd
  9873  055D                     ___ftadd:	
  9874                           
  9875                           ;incstack = 0
  9876                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9877  055D  0020               	movlb	0	; select bank0
  9878  055E  0828               	movf	___ftadd@f1,w
  9879  055F  00AE               	movwf	??___ftadd
  9880  0560  0829               	movf	___ftadd@f1+1,w
  9881  0561  00AF               	movwf	??___ftadd+1
  9882  0562  082A               	movf	___ftadd@f1+2,w
  9883  0563  00B0               	movwf	??___ftadd+2
  9884  0564  1003               	clrc
  9885  0565  0D2F               	rlf	??___ftadd+1,w
  9886  0566  0D30               	rlf	??___ftadd+2,w
  9887  0567  00B1               	movwf	??___ftadd+3
  9888  0568  0831               	movf	??___ftadd+3,w
  9889  0569  00B4               	movwf	___ftadd@exp1
  9890  056A  082B               	movf	___ftadd@f2,w
  9891  056B  00AE               	movwf	??___ftadd
  9892  056C  082C               	movf	___ftadd@f2+1,w
  9893  056D  00AF               	movwf	??___ftadd+1
  9894  056E  082D               	movf	___ftadd@f2+2,w
  9895  056F  00B0               	movwf	??___ftadd+2
  9896  0570  1003               	clrc
  9897  0571  0D2F               	rlf	??___ftadd+1,w
  9898  0572  0D30               	rlf	??___ftadd+2,w
  9899  0573  00B1               	movwf	??___ftadd+3
  9900  0574  0831               	movf	??___ftadd+3,w
  9901  0575  00B3               	movwf	___ftadd@exp2
  9902  0576  0834               	movf	___ftadd@exp1,w
  9903  0577  1903               	btfsc	3,2
  9904  0578  2D85               	goto	l3272
  9905  0579  0833               	movf	___ftadd@exp2,w
  9906  057A  0234               	subwf	___ftadd@exp1,w
  9907  057B  1803               	skipnc
  9908  057C  2D8C               	goto	l3276
  9909  057D  0334               	decf	___ftadd@exp1,w
  9910  057E  3AFF               	xorlw	255
  9911  057F  0733               	addwf	___ftadd@exp2,w
  9912  0580  00AE               	movwf	??___ftadd
  9913  0581  3019               	movlw	25
  9914  0582  022E               	subwf	??___ftadd,w
  9915  0583  1C03               	skipc
  9916  0584  2D8C               	goto	l3276
  9917  0585                     l3272:	
  9918  0585  082B               	movf	___ftadd@f2,w
  9919  0586  00A8               	movwf	?___ftadd
  9920  0587  082C               	movf	___ftadd@f2+1,w
  9921  0588  00A9               	movwf	?___ftadd+1
  9922  0589  082D               	movf	___ftadd@f2+2,w
  9923  058A  00AA               	movwf	?___ftadd+2
  9924  058B  0008               	return
  9925  058C                     l3276:	
  9926  058C  0833               	movf	___ftadd@exp2,w
  9927  058D  1903               	btfsc	3,2
  9928  058E  0008               	return
  9929  058F  0834               	movf	___ftadd@exp1,w
  9930  0590  0233               	subwf	___ftadd@exp2,w
  9931  0591  1803               	skipnc
  9932  0592  2D9B               	goto	l3282
  9933  0593  0333               	decf	___ftadd@exp2,w
  9934  0594  3AFF               	xorlw	255
  9935  0595  0734               	addwf	___ftadd@exp1,w
  9936  0596  00AE               	movwf	??___ftadd
  9937  0597  3019               	movlw	25
  9938  0598  022E               	subwf	??___ftadd,w
  9939  0599  1803               	btfsc	3,0
  9940  059A  0008               	return
  9941  059B                     l3282:	
  9942  059B  3006               	movlw	6
  9943  059C  00AE               	movwf	??___ftadd
  9944  059D  082E               	movf	??___ftadd,w
  9945  059E  00B2               	movwf	___ftadd@sign
  9946  059F  1BAA               	btfsc	___ftadd@f1+2,7
  9947  05A0  17B2               	bsf	___ftadd@sign,7
  9948  05A1  1BAD               	btfsc	___ftadd@f2+2,7
  9949  05A2  1732               	bsf	___ftadd@sign,6
  9950  05A3  17A9               	bsf	___ftadd@f1+1,7
  9951  05A4  30FF               	movlw	255
  9952  05A5  05A8               	andwf	___ftadd@f1,f
  9953  05A6  30FF               	movlw	255
  9954  05A7  05A9               	andwf	___ftadd@f1+1,f
  9955  05A8  3000               	movlw	0
  9956  05A9  05AA               	andwf	___ftadd@f1+2,f
  9957  05AA  17AC               	bsf	___ftadd@f2+1,7
  9958  05AB  30FF               	movlw	255
  9959  05AC  05AB               	andwf	___ftadd@f2,f
  9960  05AD  30FF               	movlw	255
  9961  05AE  05AC               	andwf	___ftadd@f2+1,f
  9962  05AF  3000               	movlw	0
  9963  05B0  05AD               	andwf	___ftadd@f2+2,f
  9964  05B1  0833               	movf	___ftadd@exp2,w
  9965  05B2  0234               	subwf	___ftadd@exp1,w
  9966  05B3  1803               	skipnc
  9967  05B4  2DD7               	goto	l3304
  9968  05B5                     l3294:	
  9969  05B5  3001               	movlw	1
  9970  05B6                     u2825:	
  9971  05B6  35AB               	lslf	___ftadd@f2,f
  9972  05B7  0DAC               	rlf	___ftadd@f2+1,f
  9973  05B8  0DAD               	rlf	___ftadd@f2+2,f
  9974  05B9  0B89               	decfsz	9,f
  9975  05BA  2DB6               	goto	u2825
  9976  05BB  3001               	movlw	1
  9977  05BC  02B3               	subwf	___ftadd@exp2,f
  9978  05BD  0833               	movf	___ftadd@exp2,w
  9979  05BE  0634               	xorwf	___ftadd@exp1,w
  9980  05BF  1903               	skipnz
  9981  05C0  2DD2               	goto	l3302
  9982  05C1  3001               	movlw	1
  9983  05C2  02B2               	subwf	___ftadd@sign,f
  9984  05C3  0832               	movf	___ftadd@sign,w
  9985  05C4  3907               	andlw	7
  9986  05C5  1903               	btfsc	3,2
  9987  05C6  2DD2               	goto	l3302
  9988  05C7  2DB5               	goto	l3294
  9989  05C8                     l3300:	
  9990  05C8  3001               	movlw	1
  9991  05C9                     u2855:	
  9992  05C9  36AA               	lsrf	___ftadd@f1+2,f
  9993  05CA  0CA9               	rrf	___ftadd@f1+1,f
  9994  05CB  0CA8               	rrf	___ftadd@f1,f
  9995  05CC  0B89               	decfsz	9,f
  9996  05CD  2DC9               	goto	u2855
  9997  05CE  3001               	movlw	1
  9998  05CF  00AE               	movwf	??___ftadd
  9999  05D0  082E               	movf	??___ftadd,w
 10000  05D1  07B4               	addwf	___ftadd@exp1,f
 10001  05D2                     l3302:	
 10002  05D2  0834               	movf	___ftadd@exp1,w
 10003  05D3  0633               	xorwf	___ftadd@exp2,w
 10004  05D4  1903               	btfsc	3,2
 10005  05D5  2DFC               	goto	l1264
 10006  05D6  2DC8               	goto	l3300
 10007  05D7                     l3304:	
 10008  05D7  0834               	movf	___ftadd@exp1,w
 10009  05D8  0233               	subwf	___ftadd@exp2,w
 10010  05D9  1803               	skipnc
 10011  05DA  2DFC               	goto	l1264
 10012  05DB                     l3306:	
 10013  05DB  3001               	movlw	1
 10014  05DC                     u2885:	
 10015  05DC  35A8               	lslf	___ftadd@f1,f
 10016  05DD  0DA9               	rlf	___ftadd@f1+1,f
 10017  05DE  0DAA               	rlf	___ftadd@f1+2,f
 10018  05DF  0B89               	decfsz	9,f
 10019  05E0  2DDC               	goto	u2885
 10020  05E1  3001               	movlw	1
 10021  05E2  02B4               	subwf	___ftadd@exp1,f
 10022  05E3  0833               	movf	___ftadd@exp2,w
 10023  05E4  0634               	xorwf	___ftadd@exp1,w
 10024  05E5  1903               	skipnz
 10025  05E6  2DF8               	goto	l3314
 10026  05E7  3001               	movlw	1
 10027  05E8  02B2               	subwf	___ftadd@sign,f
 10028  05E9  0832               	movf	___ftadd@sign,w
 10029  05EA  3907               	andlw	7
 10030  05EB  1903               	btfsc	3,2
 10031  05EC  2DF8               	goto	l3314
 10032  05ED  2DDB               	goto	l3306
 10033  05EE                     l3312:	
 10034  05EE  3001               	movlw	1
 10035  05EF                     u2915:	
 10036  05EF  36AD               	lsrf	___ftadd@f2+2,f
 10037  05F0  0CAC               	rrf	___ftadd@f2+1,f
 10038  05F1  0CAB               	rrf	___ftadd@f2,f
 10039  05F2  0B89               	decfsz	9,f
 10040  05F3  2DEF               	goto	u2915
 10041  05F4  3001               	movlw	1
 10042  05F5  00AE               	movwf	??___ftadd
 10043  05F6  082E               	movf	??___ftadd,w
 10044  05F7  07B3               	addwf	___ftadd@exp2,f
 10045  05F8                     l3314:	
 10046  05F8  0834               	movf	___ftadd@exp1,w
 10047  05F9  0633               	xorwf	___ftadd@exp2,w
 10048  05FA  1D03               	skipz
 10049  05FB  2DEE               	goto	l3312
 10050  05FC                     l1264:	
 10051  05FC  1FB2               	btfss	___ftadd@sign,7
 10052  05FD  2E0E               	goto	l3318
 10053  05FE  30FF               	movlw	255
 10054  05FF  06A8               	xorwf	___ftadd@f1,f
 10055  0600  30FF               	movlw	255
 10056  0601  06A9               	xorwf	___ftadd@f1+1,f
 10057  0602  30FF               	movlw	255
 10058  0603  06AA               	xorwf	___ftadd@f1+2,f
 10059  0604  3001               	movlw	1
 10060  0605  07A8               	addwf	___ftadd@f1,f
 10061  0606  3000               	movlw	0
 10062  0607  1803               	skipnc
 10063  0608  3001               	movlw	1
 10064  0609  07A9               	addwf	___ftadd@f1+1,f
 10065  060A  3000               	movlw	0
 10066  060B  1803               	skipnc
 10067  060C  3001               	movlw	1
 10068  060D  07AA               	addwf	___ftadd@f1+2,f
 10069  060E                     l3318:	
 10070  060E  1F32               	btfss	___ftadd@sign,6
 10071  060F  2E20               	goto	l3322
 10072  0610  30FF               	movlw	255
 10073  0611  06AB               	xorwf	___ftadd@f2,f
 10074  0612  30FF               	movlw	255
 10075  0613  06AC               	xorwf	___ftadd@f2+1,f
 10076  0614  30FF               	movlw	255
 10077  0615  06AD               	xorwf	___ftadd@f2+2,f
 10078  0616  3001               	movlw	1
 10079  0617  07AB               	addwf	___ftadd@f2,f
 10080  0618  3000               	movlw	0
 10081  0619  1803               	skipnc
 10082  061A  3001               	movlw	1
 10083  061B  07AC               	addwf	___ftadd@f2+1,f
 10084  061C  3000               	movlw	0
 10085  061D  1803               	skipnc
 10086  061E  3001               	movlw	1
 10087  061F  07AD               	addwf	___ftadd@f2+2,f
 10088  0620                     l3322:	
 10089  0620  01B2               	clrf	___ftadd@sign
 10090  0621  0828               	movf	___ftadd@f1,w
 10091  0622  07AB               	addwf	___ftadd@f2,f
 10092  0623  0829               	movf	___ftadd@f1+1,w
 10093  0624  3DAC               	addwfc	___ftadd@f2+1,f
 10094  0625  082A               	movf	___ftadd@f1+2,w
 10095  0626  3DAD               	addwfc	___ftadd@f2+2,f
 10096  0627  1FAD               	btfss	___ftadd@f2+2,7
 10097  0628  2E3B               	goto	l3332
 10098  0629  30FF               	movlw	255
 10099  062A  06AB               	xorwf	___ftadd@f2,f
 10100  062B  30FF               	movlw	255
 10101  062C  06AC               	xorwf	___ftadd@f2+1,f
 10102  062D  30FF               	movlw	255
 10103  062E  06AD               	xorwf	___ftadd@f2+2,f
 10104  062F  3001               	movlw	1
 10105  0630  07AB               	addwf	___ftadd@f2,f
 10106  0631  3000               	movlw	0
 10107  0632  1803               	skipnc
 10108  0633  3001               	movlw	1
 10109  0634  07AC               	addwf	___ftadd@f2+1,f
 10110  0635  3000               	movlw	0
 10111  0636  1803               	skipnc
 10112  0637  3001               	movlw	1
 10113  0638  07AD               	addwf	___ftadd@f2+2,f
 10114  0639  01B2               	clrf	___ftadd@sign
 10115  063A  0AB2               	incf	___ftadd@sign,f
 10116  063B                     l3332:	
 10117  063B  082B               	movf	___ftadd@f2,w
 10118  063C  00A0               	movwf	___ftpack@arg
 10119  063D  082C               	movf	___ftadd@f2+1,w
 10120  063E  00A1               	movwf	___ftpack@arg+1
 10121  063F  082D               	movf	___ftadd@f2+2,w
 10122  0640  00A2               	movwf	___ftpack@arg+2
 10123  0641  0834               	movf	___ftadd@exp1,w
 10124  0642  00AE               	movwf	??___ftadd
 10125  0643  082E               	movf	??___ftadd,w
 10126  0644  00A3               	movwf	___ftpack@exp
 10127  0645  0832               	movf	___ftadd@sign,w
 10128  0646  00AF               	movwf	??___ftadd+1
 10129  0647  082F               	movf	??___ftadd+1,w
 10130  0648  00A4               	movwf	___ftpack@sign
 10131  0649  3195  25EF         	fcall	___ftpack
 10132  064B  0020               	movlb	0	; select bank0
 10133  064C  0820               	movf	?___ftpack,w
 10134  064D  00A8               	movwf	?___ftadd
 10135  064E  0821               	movf	?___ftpack+1,w
 10136  064F  00A9               	movwf	?___ftadd+1
 10137  0650  0822               	movf	?___ftpack+2,w
 10138  0651  00AA               	movwf	?___ftadd+2
 10139  0652  0008               	return
 10140  0653                     __end_of___ftadd:	
 10141                           
 10142                           	psect	text22
 10143  1F4A                     __ptext22:	
 10144 ;; *************** function _initSwitchBypass *****************
 10145 ;; Defined at:
 10146 ;;		line 29 in file "SwitchBypass.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;		None
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;  initState       2   18[BANK0 ] int 
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  1    wreg      void 
 10153 ;; Registers used:
 10154 ;;		wreg, status,2, status,0, pclath, cstack
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10161 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10163 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10164 ;;Total ram usage:        2 bytes
 10165 ;; Hardware stack levels used:    1
 10166 ;; Hardware stack levels required when called:    5
 10167 ;; This function calls:
 10168 ;;		_getSwitchBypassState
 10169 ;;		_setSwitchBypassState
 10170 ;; This function is called by:
 10171 ;;		_main
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           
 10176                           ;psect for function _initSwitchBypass
 10177  1F4A                     _initSwitchBypass:	
 10178                           
 10179                           ;SwitchBypass.c: 30: int initState = getSwitchBypassState();
 10180                           
 10181                           ;incstack = 0
 10182                           ; Regs used in _initSwitchBypass: [wreg+status,2+status,0+pclath+cstack]
 10183  1F4A  319F  2717  319F   	fcall	_getSwitchBypassState
 10184  1F4D  0020               	movlb	0	; select bank0
 10185  1F4E  0821               	movf	?_getSwitchBypassState+1,w
 10186  1F4F  00B3               	movwf	initSwitchBypass@initState+1
 10187  1F50  0820               	movf	?_getSwitchBypassState,w
 10188  1F51  00B2               	movwf	initSwitchBypass@initState
 10189                           
 10190                           ;SwitchBypass.c: 31: setSwitchBypassState(initState);
 10191  1F52  0833               	movf	initSwitchBypass@initState+1,w
 10192  1F53  00AF               	movwf	setSwitchBypassState@f_state+1
 10193  1F54  0832               	movf	initSwitchBypass@initState,w
 10194  1F55  00AE               	movwf	setSwitchBypassState@f_state
 10195  1F56  3194  2412         	fcall	_setSwitchBypassState
 10196  1F58  0008               	return
 10197  1F59                     __end_of_initSwitchBypass:	
 10198                           
 10199                           	psect	text23
 10200  1412                     __ptext23:	
 10201 ;; *************** function _setSwitchBypassState *****************
 10202 ;; Defined at:
 10203 ;;		line 104 in file "SwitchBypass.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  f_state         2   14[BANK0 ] int 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;		None
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  1    wreg      void 
 10210 ;; Registers used:
 10211 ;;		wreg, status,2, status,0, pclath, cstack
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10220 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10221 ;;Total ram usage:        4 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; Hardware stack levels required when called:    4
 10224 ;; This function calls:
 10225 ;;		_updateSwitchBypassState
 10226 ;;		_wait_ms
 10227 ;; This function is called by:
 10228 ;;		_initSwitchBypass
 10229 ;;		_updateSwitchBypass
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           
 10234                           ;psect for function _setSwitchBypassState
 10235  1412                     _setSwitchBypassState:	
 10236                           
 10237                           ;SwitchBypass.c: 105: if (switchBypass_state == f_state) {return;}
 10238                           
 10239                           ;incstack = 0
 10240                           ; Regs used in _setSwitchBypassState: [wreg+status,2+status,0+pclath+cstack]
 10241  1412  0020               	movlb	0	; select bank0
 10242  1413  086F               	movf	_switchBypass_state,w
 10243  1414  00B0               	movwf	??_setSwitchBypassState
 10244  1415  01B1               	clrf	??_setSwitchBypassState+1
 10245  1416  082F               	movf	setSwitchBypassState@f_state+1,w
 10246  1417  0631               	xorwf	??_setSwitchBypassState+1,w
 10247  1418  1D03               	skipz
 10248  1419  2C1C               	goto	u2525
 10249  141A  082E               	movf	setSwitchBypassState@f_state,w
 10250  141B  0630               	xorwf	??_setSwitchBypassState,w
 10251  141C                     u2525:	
 10252  141C  1903               	btfsc	3,2
 10253  141D  0008               	return
 10254                           
 10255                           ;SwitchBypass.c: 106: switchBypass_state = f_state;
 10256  141E  082E               	movf	setSwitchBypassState@f_state,w
 10257  141F  00B0               	movwf	??_setSwitchBypassState
 10258  1420  0830               	movf	??_setSwitchBypassState,w
 10259  1421  00EF               	movwf	_switchBypass_state
 10260                           
 10261                           ;SwitchBypass.c: 107: LATBbits.LATB2 = f_state;
 10262  1422  0C2E               	rrf	setSwitchBypassState@f_state,w
 10263  1423  0022               	movlb	2	; select bank2
 10264  1424  1C03               	skipc
 10265  1425  110D               	bcf	13,2	;volatile
 10266  1426  1803               	skipnc
 10267  1427  150D               	bsf	13,2	;volatile
 10268                           
 10269                           ;SwitchBypass.c: 108: LATBbits.LATB3 = 0;
 10270  1428  118D               	bcf	13,3	;volatile
 10271                           
 10272                           ;SwitchBypass.c: 109: LATGbits.LATG2 = f_state;
 10273  1429  0020               	movlb	0	; select bank0
 10274  142A  0C2E               	rrf	setSwitchBypassState@f_state,w
 10275  142B  0027               	movlb	7	; select bank7
 10276  142C  1C03               	skipc
 10277  142D  110D               	bcf	13,2	;volatile
 10278  142E  1803               	skipnc
 10279  142F  150D               	bsf	13,2	;volatile
 10280                           
 10281                           ;SwitchBypass.c: 110: LATGbits.LATG1 = !f_state;
 10282  1430  0020               	movlb	0	; select bank0
 10283  1431  082E               	movf	setSwitchBypassState@f_state,w
 10284  1432  042F               	iorwf	setSwitchBypassState@f_state+1,w
 10285  1433  1D03               	btfss	3,2
 10286  1434  2C38               	goto	u2530
 10287  1435  0027               	movlb	7	; select bank7
 10288  1436  148D               	bsf	13,1	;volatile
 10289  1437  2C3A               	goto	l3170
 10290  1438                     u2530:	
 10291  1438  0027               	movlb	7	; select bank7
 10292  1439  108D               	bcf	13,1	;volatile
 10293  143A                     l3170:	
 10294                           
 10295                           ;SwitchBypass.c: 112: wait_ms(20);
 10296  143A  3014               	movlw	20
 10297  143B  0020               	movlb	0	; select bank0
 10298  143C  00AC               	movwf	wait_ms@time
 10299  143D  3000               	movlw	0
 10300  143E  00AD               	movwf	wait_ms@time+1
 10301  143F  3190  20D3  3194   	fcall	_wait_ms
 10302                           
 10303                           ;SwitchBypass.c: 114: LATGbits.LATG2 = 0;
 10304  1442  0027               	movlb	7	; select bank7
 10305  1443  110D               	bcf	13,2	;volatile
 10306                           
 10307                           ;SwitchBypass.c: 115: LATGbits.LATG1 = 0;
 10308  1444  108D               	bcf	13,1	;volatile
 10309                           
 10310                           ;SwitchBypass.c: 117: updateSwitchBypassState(switchBypass_state);
 10311  1445  0020               	movlb	0	; select bank0
 10312  1446  086F               	movf	_switchBypass_state,w
 10313  1447  00B0               	movwf	??_setSwitchBypassState
 10314  1448  01B1               	clrf	??_setSwitchBypassState+1
 10315  1449  0830               	movf	??_setSwitchBypassState,w
 10316  144A  00A0               	movwf	updateSwitchBypassState@state
 10317  144B  0831               	movf	??_setSwitchBypassState+1,w
 10318  144C  00A1               	movwf	updateSwitchBypassState@state+1
 10319  144D  3180  2002  3194   	fcall	_updateSwitchBypassState
 10320                           
 10321                           ;SwitchBypass.c: 118: wait_ms(20);
 10322  1450  3014               	movlw	20
 10323  1451  0020               	movlb	0	; select bank0
 10324  1452  00AC               	movwf	wait_ms@time
 10325  1453  3000               	movlw	0
 10326  1454  00AD               	movwf	wait_ms@time+1
 10327  1455  3190  20D3         	fcall	_wait_ms
 10328  1457  0008               	return
 10329  1458                     __end_of_setSwitchBypassState:	
 10330                           
 10331                           	psect	text24
 10332  10D3                     __ptext24:	
 10333 ;; *************** function _wait_ms *****************
 10334 ;; Defined at:
 10335 ;;		line 23 in file "system.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;  time            2   12[BANK0 ] unsigned int 
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;		None
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      void 
 10342 ;; Registers used:
 10343 ;;		wreg, status,2, status,0, pclath, cstack
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10349 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10352 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10353 ;;Total ram usage:        2 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; Hardware stack levels required when called:    3
 10356 ;; This function calls:
 10357 ;;		___lmul
 10358 ;; This function is called by:
 10359 ;;		_star_tactiles
 10360 ;;		_solidring_tactiles
 10361 ;;		_read_bottom_tactile
 10362 ;;		_read_top_tactile
 10363 ;;		_setSwitchBypassState
 10364 ;;		_setFeedbackState
 10365 ;;		_showError_Alternating
 10366 ;;		_show_error
 10367 ;;		_show_cancel
 10368 ;;		_ring_tactiles
 10369 ;;		_setSwitchTapState
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           
 10374                           ;psect for function _wait_ms
 10375  10D3                     _wait_ms:	
 10376                           
 10377                           ;system.c: 25: static long timel = 0;
 10378                           ;system.c: 26: timel = time * 1000l;
 10379                           
 10380                           ;incstack = 0
 10381                           ; Regs used in _wait_ms: [wreg+status,2+status,0+pclath+cstack]
 10382  10D3  0020               	movlb	0	; select bank0
 10383  10D4  082C               	movf	wait_ms@time,w
 10384  10D5  00A0               	movwf	___lmul@multiplier
 10385  10D6  082D               	movf	wait_ms@time+1,w
 10386  10D7  00A1               	movwf	___lmul@multiplier+1
 10387  10D8  01A2               	clrf	___lmul@multiplier+2
 10388  10D9  01A3               	clrf	___lmul@multiplier+3
 10389  10DA  3000               	movlw	0
 10390  10DB  00A7               	movwf	___lmul@multiplicand+3
 10391  10DC  3000               	movlw	0
 10392  10DD  00A6               	movwf	___lmul@multiplicand+2
 10393  10DE  3003               	movlw	3
 10394  10DF  00A5               	movwf	___lmul@multiplicand+1
 10395  10E0  30E8               	movlw	232
 10396  10E1  00A4               	movwf	___lmul@multiplicand
 10397  10E2  3190  20A3  3190   	fcall	___lmul
 10398  10E5  0020               	movlb	0	; select bank0
 10399  10E6  0823               	movf	?___lmul+3,w
 10400  10E7  0023               	movlb	3	; select bank3
 10401  10E8  00D3               	movwf	(wait_ms@timel+3)^(0+384)
 10402  10E9  0020               	movlb	0	; select bank0
 10403  10EA  0822               	movf	?___lmul+2,w
 10404  10EB  0023               	movlb	3	; select bank3
 10405  10EC  00D2               	movwf	(wait_ms@timel+2)^(0+384)
 10406  10ED  0020               	movlb	0	; select bank0
 10407  10EE  0821               	movf	?___lmul+1,w
 10408  10EF  0023               	movlb	3	; select bank3
 10409  10F0  00D1               	movwf	(wait_ms@timel+1)^(0+384)
 10410  10F1  0020               	movlb	0	; select bank0
 10411  10F2  0820               	movf	?___lmul,w
 10412  10F3  0023               	movlb	3	; select bank3
 10413  10F4  00D0               	movwf	wait_ms@timel^(0+384)
 10414  10F5                     l334:	
 10415                           ;system.c: 27: for( ; timel; timel--);
 10416                           
 10417  10F5  0853               	movf	(wait_ms@timel+3)^(0+384),w
 10418  10F6  0452               	iorwf	(wait_ms@timel+2)^(0+384),w
 10419  10F7  0451               	iorwf	(wait_ms@timel+1)^(0+384),w
 10420  10F8  0450               	iorwf	wait_ms@timel^(0+384),w
 10421  10F9  1903               	btfsc	3,2
 10422  10FA  0008               	return
 10423  10FB  30FF               	movlw	255
 10424  10FC  07D0               	addwf	wait_ms@timel^(0+384),f
 10425  10FD  30FF               	movlw	255
 10426  10FE  3DD1               	addwfc	(wait_ms@timel+1)^(0+384),f
 10427  10FF  30FF               	movlw	255
 10428  1100  3DD2               	addwfc	(wait_ms@timel+2)^(0+384),f
 10429  1101  30FF               	movlw	255
 10430  1102  3DD3               	addwfc	(wait_ms@timel+3)^(0+384),f
 10431  1103  28F5               	goto	l334
 10432  1104                     __end_of_wait_ms:	
 10433                           
 10434                           	psect	text25
 10435  10A3                     __ptext25:	
 10436 ;; *************** function ___lmul *****************
 10437 ;; Defined at:
 10438 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;  multiplier      4    0[BANK0 ] unsigned long 
 10441 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 10442 ;; Auto vars:     Size  Location     Type
 10443 ;;  product         4    8[BANK0 ] unsigned long 
 10444 ;; Return value:  Size  Location     Type
 10445 ;;                  4    0[BANK0 ] unsigned long 
 10446 ;; Registers used:
 10447 ;;		wreg, status,2, status,0
 10448 ;; Tracked objects:
 10449 ;;		On entry : 0/0
 10450 ;;		On exit  : 0/0
 10451 ;;		Unchanged: 0/0
 10452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10453 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10454 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10456 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10457 ;;Total ram usage:       12 bytes
 10458 ;; Hardware stack levels used:    1
 10459 ;; Hardware stack levels required when called:    2
 10460 ;; This function calls:
 10461 ;;		Nothing
 10462 ;; This function is called by:
 10463 ;;		_wait_ms
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           
 10468                           ;psect for function ___lmul
 10469  10A3                     ___lmul:	
 10470                           
 10471                           ;incstack = 0
 10472                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 10473  10A3  3000               	movlw	0
 10474  10A4  0020               	movlb	0	; select bank0
 10475  10A5  00AB               	movwf	___lmul@product+3
 10476  10A6  3000               	movlw	0
 10477  10A7  00AA               	movwf	___lmul@product+2
 10478  10A8  3000               	movlw	0
 10479  10A9  00A9               	movwf	___lmul@product+1
 10480  10AA  3000               	movlw	0
 10481  10AB  00A8               	movwf	___lmul@product
 10482  10AC                     l2970:	
 10483  10AC  1C20               	btfss	___lmul@multiplier,0
 10484  10AD  28B6               	goto	l2974
 10485  10AE  0824               	movf	___lmul@multiplicand,w
 10486  10AF  07A8               	addwf	___lmul@product,f
 10487  10B0  0825               	movf	___lmul@multiplicand+1,w
 10488  10B1  3DA9               	addwfc	___lmul@product+1,f
 10489  10B2  0826               	movf	___lmul@multiplicand+2,w
 10490  10B3  3DAA               	addwfc	___lmul@product+2,f
 10491  10B4  0827               	movf	___lmul@multiplicand+3,w
 10492  10B5  3DAB               	addwfc	___lmul@product+3,f
 10493  10B6                     l2974:	
 10494  10B6  3001               	movlw	1
 10495  10B7                     u2315:	
 10496  10B7  35A4               	lslf	___lmul@multiplicand,f
 10497  10B8  0DA5               	rlf	___lmul@multiplicand+1,f
 10498  10B9  0DA6               	rlf	___lmul@multiplicand+2,f
 10499  10BA  0DA7               	rlf	___lmul@multiplicand+3,f
 10500  10BB  0B89               	decfsz	9,f
 10501  10BC  28B7               	goto	u2315
 10502  10BD  3001               	movlw	1
 10503  10BE                     u2325:	
 10504  10BE  36A3               	lsrf	___lmul@multiplier+3,f
 10505  10BF  0CA2               	rrf	___lmul@multiplier+2,f
 10506  10C0  0CA1               	rrf	___lmul@multiplier+1,f
 10507  10C1  0CA0               	rrf	___lmul@multiplier,f
 10508  10C2  0B89               	decfsz	9,f
 10509  10C3  28BE               	goto	u2325
 10510  10C4  0823               	movf	___lmul@multiplier+3,w
 10511  10C5  0422               	iorwf	___lmul@multiplier+2,w
 10512  10C6  0421               	iorwf	___lmul@multiplier+1,w
 10513  10C7  0420               	iorwf	___lmul@multiplier,w
 10514  10C8  1D03               	skipz
 10515  10C9  28AC               	goto	l2970
 10516  10CA  082B               	movf	___lmul@product+3,w
 10517  10CB  00A3               	movwf	?___lmul+3
 10518  10CC  082A               	movf	___lmul@product+2,w
 10519  10CD  00A2               	movwf	?___lmul+2
 10520  10CE  0829               	movf	___lmul@product+1,w
 10521  10CF  00A1               	movwf	?___lmul+1
 10522  10D0  0828               	movf	___lmul@product,w
 10523  10D1  00A0               	movwf	?___lmul
 10524  10D2  0008               	return
 10525  10D3                     __end_of___lmul:	
 10526                           
 10527                           	psect	text26
 10528  0002                     __ptext26:	
 10529 ;; *************** function _updateSwitchBypassState *****************
 10530 ;; Defined at:
 10531 ;;		line 96 in file "state_manager.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  state           2    0[BANK0 ] int 
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;		None
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  1    wreg      void 
 10538 ;; Registers used:
 10539 ;;		None
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10545 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10549 ;;Total ram usage:        2 bytes
 10550 ;; Hardware stack levels used:    1
 10551 ;; Hardware stack levels required when called:    2
 10552 ;; This function calls:
 10553 ;;		Nothing
 10554 ;; This function is called by:
 10555 ;;		_setSwitchBypassState
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           
 10560                           ;psect for function _updateSwitchBypassState
 10561  0002                     _updateSwitchBypassState:	
 10562                           
 10563                           ;incstack = 0
 10564                           ; Regs used in _updateSwitchBypassState: []
 10565  0002  0008               	return
 10566  0003                     __end_of_updateSwitchBypassState:	
 10567                           
 10568                           	psect	text27
 10569  1F17                     __ptext27:	
 10570 ;; *************** function _getSwitchBypassState *****************
 10571 ;; Defined at:
 10572 ;;		line 103 in file "state_manager.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;		None
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;		None
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  2    0[BANK0 ] int 
 10579 ;; Registers used:
 10580 ;;		status,2
 10581 ;; Tracked objects:
 10582 ;;		On entry : 0/0
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10589 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10590 ;;Total ram usage:        2 bytes
 10591 ;; Hardware stack levels used:    1
 10592 ;; Hardware stack levels required when called:    2
 10593 ;; This function calls:
 10594 ;;		Nothing
 10595 ;; This function is called by:
 10596 ;;		_initSwitchBypass
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           
 10601                           ;psect for function _getSwitchBypassState
 10602  1F17                     _getSwitchBypassState:	
 10603                           
 10604                           ;state_manager.c: 108: return 0;
 10605                           
 10606                           ;incstack = 0
 10607                           ; Regs used in _getSwitchBypassState: [status,2]
 10608  1F17  0020               	movlb	0	; select bank0
 10609  1F18  01A0               	clrf	?_getSwitchBypassState
 10610  1F19  01A1               	clrf	?_getSwitchBypassState+1
 10611  1F1A  0008               	return
 10612  1F1B                     __end_of_getSwitchBypassState:	
 10613                           
 10614                           	psect	text28
 10615  1FAB                     __ptext28:	
 10616 ;; *************** function _adc_convert *****************
 10617 ;; Defined at:
 10618 ;;		line 110 in file "user.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;  channel         1    wreg     unsigned char 
 10621 ;; Auto vars:     Size  Location     Type
 10622 ;;  channel         1    3[BANK0 ] unsigned char 
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  2    0[BANK0 ] unsigned int 
 10625 ;; Registers used:
 10626 ;;		wreg, status,2, status,0
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10632 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10634 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10635 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10636 ;;Total ram usage:        4 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; Hardware stack levels required when called:    2
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_main
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           
 10647                           ;psect for function _adc_convert
 10648  1FAB                     _adc_convert:	
 10649                           
 10650                           ;incstack = 0
 10651                           ; Regs used in _adc_convert: [wreg+status,2+status,0]
 10652                           ;adc_convert@channel stored from wreg
 10653  1FAB  0020               	movlb	0	; select bank0
 10654  1FAC  00A3               	movwf	adc_convert@channel
 10655                           
 10656                           ;user.c: 111: ADCON0bits.CHS = channel;
 10657  1FAD  0823               	movf	adc_convert@channel,w
 10658  1FAE  00A2               	movwf	??_adc_convert
 10659  1FAF  0DA2               	rlf	??_adc_convert,f
 10660  1FB0  0DA2               	rlf	??_adc_convert,f
 10661  1FB1  0021               	movlb	1	; select bank1
 10662  1FB2  081D               	movf	29,w	;volatile
 10663  1FB3  0020               	movlb	0	; select bank0
 10664  1FB4  0622               	xorwf	??_adc_convert,w
 10665  1FB5  3983               	andlw	-125
 10666  1FB6  0622               	xorwf	??_adc_convert,w
 10667  1FB7  0021               	movlb	1	; select bank1
 10668  1FB8  009D               	movwf	29	;volatile
 10669                           
 10670                           ;user.c: 112: ADCON0bits.GO = 0b1;
 10671  1FB9  149D               	bsf	29,1	;volatile
 10672  1FBA                     l495:	
 10673                           ;user.c: 113: while (ADCON0bits.GO_nDONE);
 10674                           
 10675  1FBA  189D               	btfsc	29,1	;volatile
 10676  1FBB  2FBA               	goto	l495
 10677                           
 10678                           ;user.c: 114: return (ADRESH << 8) | ADRESL;
 10679  1FBC  081C               	movf	28,w	;volatile
 10680  1FBD  0020               	movlb	0	; select bank0
 10681  1FBE  00A1               	movwf	?_adc_convert+1
 10682  1FBF  0021               	movlb	1	; select bank1
 10683  1FC0  081B               	movf	27,w	;volatile
 10684  1FC1  0020               	movlb	0	; select bank0
 10685  1FC2  00A0               	movwf	?_adc_convert
 10686  1FC3  0008               	return
 10687  1FC4                     __end_of_adc_convert:	
 10688                           
 10689                           	psect	text29
 10690  1549                     __ptext29:	
 10691 ;; *************** function ___awdiv *****************
 10692 ;; Defined at:
 10693 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;  divisor         2    0[BANK0 ] int 
 10696 ;;  dividend        2    2[BANK0 ] int 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  quotient        2    7[BANK0 ] int 
 10699 ;;  sign            1    6[BANK0 ] unsigned char 
 10700 ;;  counter         1    5[BANK0 ] unsigned char 
 10701 ;; Return value:  Size  Location     Type
 10702 ;;                  2    0[BANK0 ] int 
 10703 ;; Registers used:
 10704 ;;		wreg, status,2, status,0
 10705 ;; Tracked objects:
 10706 ;;		On entry : 0/0
 10707 ;;		On exit  : 0/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10711 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10712 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10713 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10714 ;;Total ram usage:        9 bytes
 10715 ;; Hardware stack levels used:    1
 10716 ;; Hardware stack levels required when called:    2
 10717 ;; This function calls:
 10718 ;;		Nothing
 10719 ;; This function is called by:
 10720 ;;		_main
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           
 10725                           ;psect for function ___awdiv
 10726  1549                     ___awdiv:	
 10727                           
 10728                           ;incstack = 0
 10729                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10730  1549  0020               	movlb	0	; select bank0
 10731  154A  01A6               	clrf	___awdiv@sign
 10732  154B  1FA1               	btfss	___awdiv@divisor+1,7
 10733  154C  2D54               	goto	l3730
 10734  154D  09A0               	comf	___awdiv@divisor,f
 10735  154E  09A1               	comf	___awdiv@divisor+1,f
 10736  154F  0AA0               	incf	___awdiv@divisor,f
 10737  1550  1903               	skipnz
 10738  1551  0AA1               	incf	___awdiv@divisor+1,f
 10739  1552  01A6               	clrf	___awdiv@sign
 10740  1553  0AA6               	incf	___awdiv@sign,f
 10741  1554                     l3730:	
 10742  1554  1FA3               	btfss	___awdiv@dividend+1,7
 10743  1555  2D5F               	goto	l3736
 10744  1556  09A2               	comf	___awdiv@dividend,f
 10745  1557  09A3               	comf	___awdiv@dividend+1,f
 10746  1558  0AA2               	incf	___awdiv@dividend,f
 10747  1559  1903               	skipnz
 10748  155A  0AA3               	incf	___awdiv@dividend+1,f
 10749  155B  3001               	movlw	1
 10750  155C  00A4               	movwf	??___awdiv
 10751  155D  0824               	movf	??___awdiv,w
 10752  155E  06A6               	xorwf	___awdiv@sign,f
 10753  155F                     l3736:	
 10754  155F  01A7               	clrf	___awdiv@quotient
 10755  1560  01A8               	clrf	___awdiv@quotient+1
 10756  1561  0820               	movf	___awdiv@divisor,w
 10757  1562  0421               	iorwf	___awdiv@divisor+1,w
 10758  1563  1903               	btfsc	3,2
 10759  1564  2D8E               	goto	l3758
 10760  1565  01A5               	clrf	___awdiv@counter
 10761  1566  0AA5               	incf	___awdiv@counter,f
 10762  1567                     l3746:	
 10763  1567  1BA1               	btfsc	___awdiv@divisor+1,7
 10764  1568  2D73               	goto	l3748
 10765  1569  3001               	movlw	1
 10766  156A                     u3625:	
 10767  156A  35A0               	lslf	___awdiv@divisor,f
 10768  156B  0DA1               	rlf	___awdiv@divisor+1,f
 10769  156C  0B89               	decfsz	9,f
 10770  156D  2D6A               	goto	u3625
 10771  156E  3001               	movlw	1
 10772  156F  00A4               	movwf	??___awdiv
 10773  1570  0824               	movf	??___awdiv,w
 10774  1571  07A5               	addwf	___awdiv@counter,f
 10775  1572  2D67               	goto	l3746
 10776  1573                     l3748:	
 10777  1573  3001               	movlw	1
 10778  1574                     u3645:	
 10779  1574  35A7               	lslf	___awdiv@quotient,f
 10780  1575  0DA8               	rlf	___awdiv@quotient+1,f
 10781  1576  0B89               	decfsz	9,f
 10782  1577  2D74               	goto	u3645
 10783  1578  0821               	movf	___awdiv@divisor+1,w
 10784  1579  0223               	subwf	___awdiv@dividend+1,w
 10785  157A  1D03               	skipz
 10786  157B  2D7E               	goto	u3655
 10787  157C  0820               	movf	___awdiv@divisor,w
 10788  157D  0222               	subwf	___awdiv@dividend,w
 10789  157E                     u3655:	
 10790  157E  1C03               	skipc
 10791  157F  2D85               	goto	l3754
 10792  1580  0820               	movf	___awdiv@divisor,w
 10793  1581  02A2               	subwf	___awdiv@dividend,f
 10794  1582  0821               	movf	___awdiv@divisor+1,w
 10795  1583  3BA3               	subwfb	___awdiv@dividend+1,f
 10796  1584  1427               	bsf	___awdiv@quotient,0
 10797  1585                     l3754:	
 10798  1585  3001               	movlw	1
 10799  1586                     u3665:	
 10800  1586  36A1               	lsrf	___awdiv@divisor+1,f
 10801  1587  0CA0               	rrf	___awdiv@divisor,f
 10802  1588  0B89               	decfsz	9,f
 10803  1589  2D86               	goto	u3665
 10804  158A  3001               	movlw	1
 10805  158B  02A5               	subwf	___awdiv@counter,f
 10806  158C  1D03               	btfss	3,2
 10807  158D  2D73               	goto	l3748
 10808  158E                     l3758:	
 10809  158E  0826               	movf	___awdiv@sign,w
 10810  158F  1903               	btfsc	3,2
 10811  1590  2D96               	goto	l3762
 10812  1591  09A7               	comf	___awdiv@quotient,f
 10813  1592  09A8               	comf	___awdiv@quotient+1,f
 10814  1593  0AA7               	incf	___awdiv@quotient,f
 10815  1594  1903               	skipnz
 10816  1595  0AA8               	incf	___awdiv@quotient+1,f
 10817  1596                     l3762:	
 10818  1596  0828               	movf	___awdiv@quotient+1,w
 10819  1597  00A1               	movwf	?___awdiv+1
 10820  1598  0827               	movf	___awdiv@quotient,w
 10821  1599  00A0               	movwf	?___awdiv
 10822  159A  0008               	return
 10823  159B                     __end_of___awdiv:	
 10824                           
 10825                           	psect	text30
 10826  1292                     __ptext30:	
 10827 ;; *************** function ___altoft *****************
 10828 ;; Defined at:
 10829 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;  c               4    8[BANK0 ] long 
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;  sign            1   15[BANK0 ] unsigned char 
 10834 ;;  exp             1   14[BANK0 ] unsigned char 
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  3    8[BANK0 ] float 
 10837 ;; Registers used:
 10838 ;;		wreg, status,2, status,0, pclath, cstack
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10844 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10847 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10848 ;;Total ram usage:        8 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:    3
 10851 ;; This function calls:
 10852 ;;		___ftpack
 10853 ;; This function is called by:
 10854 ;;		_main
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           
 10858                           
 10859                           ;psect for function ___altoft
 10860  1292                     ___altoft:	
 10861                           
 10862                           ;incstack = 0
 10863                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
 10864  1292  0020               	movlb	0	; select bank0
 10865  1293  01AF               	clrf	___altoft@sign
 10866  1294  308E               	movlw	142
 10867  1295  00AC               	movwf	??___altoft
 10868  1296  082C               	movf	??___altoft,w
 10869  1297  00AE               	movwf	___altoft@exp
 10870  1298  1FAB               	btfss	___altoft@c+3,7
 10871  1299  2AA7               	goto	l3716
 10872  129A  09A8               	comf	___altoft@c,f
 10873  129B  09A9               	comf	___altoft@c+1,f
 10874  129C  09AA               	comf	___altoft@c+2,f
 10875  129D  09AB               	comf	___altoft@c+3,f
 10876  129E  0AA8               	incf	___altoft@c,f
 10877  129F  1903               	skipnz
 10878  12A0  0AA9               	incf	___altoft@c+1,f
 10879  12A1  1903               	skipnz
 10880  12A2  0AAA               	incf	___altoft@c+2,f
 10881  12A3  1903               	skipnz
 10882  12A4  0AAB               	incf	___altoft@c+3,f
 10883  12A5  01AF               	clrf	___altoft@sign
 10884  12A6  0AAF               	incf	___altoft@sign,f
 10885  12A7                     l3716:	
 10886  12A7  30FF               	movlw	255
 10887  12A8  052B               	andwf	___altoft@c+3,w
 10888  12A9  1903               	btfsc	3,2
 10889  12AA  2AB7               	goto	l3718
 10890  12AB  3001               	movlw	1
 10891  12AC                     u3575:	
 10892  12AC  36AB               	lsrf	___altoft@c+3,f
 10893  12AD  0CAA               	rrf	___altoft@c+2,f
 10894  12AE  0CA9               	rrf	___altoft@c+1,f
 10895  12AF  0CA8               	rrf	___altoft@c,f
 10896  12B0  0B89               	decfsz	9,f
 10897  12B1  2AAC               	goto	u3575
 10898  12B2  3001               	movlw	1
 10899  12B3  00AC               	movwf	??___altoft
 10900  12B4  082C               	movf	??___altoft,w
 10901  12B5  07AE               	addwf	___altoft@exp,f
 10902  12B6  2AA7               	goto	l3716
 10903  12B7                     l3718:	
 10904  12B7  0828               	movf	___altoft@c,w
 10905  12B8  00A0               	movwf	___ftpack@arg
 10906  12B9  0829               	movf	___altoft@c+1,w
 10907  12BA  00A1               	movwf	___ftpack@arg+1
 10908  12BB  082A               	movf	___altoft@c+2,w
 10909  12BC  00A2               	movwf	___ftpack@arg+2
 10910  12BD  082E               	movf	___altoft@exp,w
 10911  12BE  00AC               	movwf	??___altoft
 10912  12BF  082C               	movf	??___altoft,w
 10913  12C0  00A3               	movwf	___ftpack@exp
 10914  12C1  082F               	movf	___altoft@sign,w
 10915  12C2  00AD               	movwf	??___altoft+1
 10916  12C3  082D               	movf	??___altoft+1,w
 10917  12C4  00A4               	movwf	___ftpack@sign
 10918  12C5  3195  25EF         	fcall	___ftpack
 10919  12C7  0020               	movlb	0	; select bank0
 10920  12C8  0820               	movf	?___ftpack,w
 10921  12C9  00A8               	movwf	?___altoft
 10922  12CA  0821               	movf	?___ftpack+1,w
 10923  12CB  00A9               	movwf	?___altoft+1
 10924  12CC  0822               	movf	?___ftpack+2,w
 10925  12CD  00AA               	movwf	?___altoft+2
 10926  12CE  0008               	return
 10927  12CF                     __end_of___altoft:	
 10928                           
 10929                           	psect	text31
 10930  15EF                     __ptext31:	
 10931 ;; *************** function ___ftpack *****************
 10932 ;; Defined at:
 10933 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;  arg             3    0[BANK0 ] unsigned um
 10936 ;;  exp             1    3[BANK0 ] unsigned char 
 10937 ;;  sign            1    4[BANK0 ] unsigned char 
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  3    0[BANK0 ] float 
 10942 ;; Registers used:
 10943 ;;		wreg, status,2, status,0
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10949 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10951 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10952 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10953 ;;Total ram usage:        8 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:    2
 10956 ;; This function calls:
 10957 ;;		Nothing
 10958 ;; This function is called by:
 10959 ;;		___altoft
 10960 ;;		___awtoft
 10961 ;;		___ftadd
 10962 ;;		___ftdiv
 10963 ;;		___ftmul
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           
 10968                           ;psect for function ___ftpack
 10969  15EF                     ___ftpack:	
 10970                           
 10971                           ;incstack = 0
 10972                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10973  15EF  0020               	movlb	0	; select bank0
 10974  15F0  0823               	movf	___ftpack@exp,w
 10975  15F1  1903               	btfsc	3,2
 10976  15F2  2DF8               	goto	l3028
 10977  15F3  0822               	movf	___ftpack@arg+2,w
 10978  15F4  0421               	iorwf	___ftpack@arg+1,w
 10979  15F5  0420               	iorwf	___ftpack@arg,w
 10980  15F6  1D03               	skipz
 10981  15F7  2E09               	goto	l3034
 10982  15F8                     l3028:	
 10983  15F8  3000               	movlw	0
 10984  15F9  00A0               	movwf	?___ftpack
 10985  15FA  3000               	movlw	0
 10986  15FB  00A1               	movwf	?___ftpack+1
 10987  15FC  3000               	movlw	0
 10988  15FD  00A2               	movwf	?___ftpack+2
 10989  15FE  0008               	return
 10990  15FF                     l3032:	
 10991  15FF  3001               	movlw	1
 10992  1600  00A5               	movwf	??___ftpack
 10993  1601  0825               	movf	??___ftpack,w
 10994  1602  07A3               	addwf	___ftpack@exp,f
 10995  1603  3001               	movlw	1
 10996  1604                     u2375:	
 10997  1604  36A2               	lsrf	___ftpack@arg+2,f
 10998  1605  0CA1               	rrf	___ftpack@arg+1,f
 10999  1606  0CA0               	rrf	___ftpack@arg,f
 11000  1607  0B89               	decfsz	9,f
 11001  1608  2E04               	goto	u2375
 11002  1609                     l3034:	
 11003  1609  30FE               	movlw	254
 11004  160A  0522               	andwf	___ftpack@arg+2,w
 11005  160B  1903               	btfsc	3,2
 11006  160C  2E22               	goto	l1233
 11007  160D  2DFF               	goto	l3032
 11008  160E                     l3036:	
 11009  160E  3001               	movlw	1
 11010  160F  00A5               	movwf	??___ftpack
 11011  1610  0825               	movf	??___ftpack,w
 11012  1611  07A3               	addwf	___ftpack@exp,f
 11013  1612  3001               	movlw	1
 11014  1613  07A0               	addwf	___ftpack@arg,f
 11015  1614  3000               	movlw	0
 11016  1615  1803               	skipnc
 11017  1616  3001               	movlw	1
 11018  1617  07A1               	addwf	___ftpack@arg+1,f
 11019  1618  3000               	movlw	0
 11020  1619  1803               	skipnc
 11021  161A  3001               	movlw	1
 11022  161B  07A2               	addwf	___ftpack@arg+2,f
 11023  161C  3001               	movlw	1
 11024  161D                     u2395:	
 11025  161D  36A2               	lsrf	___ftpack@arg+2,f
 11026  161E  0CA1               	rrf	___ftpack@arg+1,f
 11027  161F  0CA0               	rrf	___ftpack@arg,f
 11028  1620  0B89               	decfsz	9,f
 11029  1621  2E1D               	goto	u2395
 11030  1622                     l1233:	
 11031  1622  30FF               	movlw	255
 11032  1623  0522               	andwf	___ftpack@arg+2,w
 11033  1624  1903               	btfsc	3,2
 11034  1625  2E2F               	goto	l3044
 11035  1626  2E0E               	goto	l3036
 11036  1627                     l3042:	
 11037  1627  3001               	movlw	1
 11038  1628  02A3               	subwf	___ftpack@exp,f
 11039  1629  3001               	movlw	1
 11040  162A                     u2415:	
 11041  162A  35A0               	lslf	___ftpack@arg,f
 11042  162B  0DA1               	rlf	___ftpack@arg+1,f
 11043  162C  0DA2               	rlf	___ftpack@arg+2,f
 11044  162D  0B89               	decfsz	9,f
 11045  162E  2E2A               	goto	u2415
 11046  162F                     l3044:	
 11047  162F  1BA1               	btfsc	___ftpack@arg+1,7
 11048  1630  2E35               	goto	l1240
 11049  1631  3002               	movlw	2
 11050  1632  0223               	subwf	___ftpack@exp,w
 11051  1633  1803               	skipnc
 11052  1634  2E27               	goto	l3042
 11053  1635                     l1240:	
 11054  1635  1823               	btfsc	___ftpack@exp,0
 11055  1636  2E3D               	goto	l1241
 11056  1637  30FF               	movlw	255
 11057  1638  05A0               	andwf	___ftpack@arg,f
 11058  1639  307F               	movlw	127
 11059  163A  05A1               	andwf	___ftpack@arg+1,f
 11060  163B  30FF               	movlw	255
 11061  163C  05A2               	andwf	___ftpack@arg+2,f
 11062  163D                     l1241:	
 11063  163D  1003               	clrc
 11064  163E  0CA3               	rrf	___ftpack@exp,f
 11065  163F  0823               	movf	___ftpack@exp,w
 11066  1640  00A5               	movwf	??___ftpack
 11067  1641  01A6               	clrf	??___ftpack+1
 11068  1642  01A7               	clrf	??___ftpack+2
 11069  1643  3010               	movlw	16
 11070  1644                     u2455:	
 11071  1644  35A5               	lslf	??___ftpack,f
 11072  1645  0DA6               	rlf	??___ftpack+1,f
 11073  1646  0DA7               	rlf	??___ftpack+2,f
 11074  1647  0B89               	decfsz	9,f
 11075  1648  2E44               	goto	u2455
 11076  1649  0825               	movf	??___ftpack,w
 11077  164A  04A0               	iorwf	___ftpack@arg,f
 11078  164B  0826               	movf	??___ftpack+1,w
 11079  164C  04A1               	iorwf	___ftpack@arg+1,f
 11080  164D  0827               	movf	??___ftpack+2,w
 11081  164E  04A2               	iorwf	___ftpack@arg+2,f
 11082  164F  0824               	movf	___ftpack@sign,w
 11083  1650  1903               	btfsc	3,2
 11084  1651  0008               	return
 11085  1652  17A2               	bsf	___ftpack@arg+2,7
 11086  1653  0008               	return
 11087  1654                     __end_of___ftpack:	
 11088                           
 11089                           	psect	text32
 11090  14F8                     __ptext32:	
 11091 ;; *************** function _ReadSavedSettings *****************
 11092 ;; Defined at:
 11093 ;;		line 181 in file "user.c"
 11094 ;; Parameters:    Size  Location     Type
 11095 ;;		None
 11096 ;; Auto vars:     Size  Location     Type
 11097 ;;		None
 11098 ;; Return value:  Size  Location     Type
 11099 ;;                  1    wreg      void 
 11100 ;; Registers used:
 11101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11102 ;; Tracked objects:
 11103 ;;		On entry : 0/0
 11104 ;;		On exit  : 0/0
 11105 ;;		Unchanged: 0/0
 11106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11111 ;;Total ram usage:        0 bytes
 11112 ;; Hardware stack levels used:    1
 11113 ;; Hardware stack levels required when called:    3
 11114 ;; This function calls:
 11115 ;;		_FLASH_ReadWord
 11116 ;;		_set_leds_bottom
 11117 ;;		_set_leds_top
 11118 ;; This function is called by:
 11119 ;;		_main
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           
 11124                           ;psect for function _ReadSavedSettings
 11125  14F8                     _ReadSavedSettings:	
 11126                           
 11127                           ;user.c: 183: top_push_state = FLASH_ReadWord(0x1F81);
 11128                           
 11129                           ;incstack = 0
 11130                           ; Regs used in _ReadSavedSettings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11131  14F8  3081               	movlw	129
 11132  14F9  0020               	movlb	0	; select bank0
 11133  14FA  00A0               	movwf	FLASH_ReadWord@flashAddr
 11134  14FB  301F               	movlw	31
 11135  14FC  00A1               	movwf	FLASH_ReadWord@flashAddr+1
 11136  14FD  319F  27E0  3194   	fcall	_FLASH_ReadWord
 11137  1500  0020               	movlb	0	; select bank0
 11138  1501  0821               	movf	?_FLASH_ReadWord+1,w
 11139  1502  0021               	movlb	1	; select bank1
 11140  1503  00EE               	movwf	(_top_push_state+1)^(0+128)
 11141  1504  0020               	movlb	0	; select bank0
 11142  1505  0820               	movf	?_FLASH_ReadWord,w
 11143  1506  0021               	movlb	1	; select bank1
 11144  1507  00ED               	movwf	_top_push_state^(0+128)
 11145                           
 11146                           ;user.c: 184: bottom_push_state = FLASH_ReadWord(0x1F82);
 11147  1508  3082               	movlw	130
 11148  1509  0020               	movlb	0	; select bank0
 11149  150A  00A0               	movwf	FLASH_ReadWord@flashAddr
 11150  150B  301F               	movlw	31
 11151  150C  00A1               	movwf	FLASH_ReadWord@flashAddr+1
 11152  150D  319F  27E0  3194   	fcall	_FLASH_ReadWord
 11153  1510  0020               	movlb	0	; select bank0
 11154  1511  0821               	movf	?_FLASH_ReadWord+1,w
 11155  1512  0021               	movlb	1	; select bank1
 11156  1513  00E4               	movwf	(_bottom_push_state+1)^(0+128)
 11157  1514  0020               	movlb	0	; select bank0
 11158  1515  0820               	movf	?_FLASH_ReadWord,w
 11159  1516  0021               	movlb	1	; select bank1
 11160  1517  00E3               	movwf	_bottom_push_state^(0+128)
 11161                           
 11162                           ;user.c: 187: LATGbits.LATG1 = !switchBypass_state;
 11163  1518  0020               	movlb	0	; select bank0
 11164  1519  086F               	movf	_switchBypass_state,w
 11165  151A  1D03               	btfss	3,2
 11166  151B  2D1F               	goto	u3300
 11167  151C  0027               	movlb	7	; select bank7
 11168  151D  148D               	bsf	13,1	;volatile
 11169  151E  2D21               	goto	l3510
 11170  151F                     u3300:	
 11171  151F  0027               	movlb	7	; select bank7
 11172  1520  108D               	bcf	13,1	;volatile
 11173  1521                     l3510:	
 11174                           
 11175                           ;user.c: 188: LATGbits.LATG2 = switchBypass_state;
 11176  1521  0020               	movlb	0	; select bank0
 11177  1522  0C6F               	rrf	_switchBypass_state,w
 11178  1523  0027               	movlb	7	; select bank7
 11179  1524  1C03               	skipc
 11180  1525  110D               	bcf	13,2	;volatile
 11181  1526  1803               	skipnc
 11182  1527  150D               	bsf	13,2	;volatile
 11183                           
 11184                           ;user.c: 189: LATBbits.LATB2 = 0;
 11185  1528  0022               	movlb	2	; select bank2
 11186  1529  110D               	bcf	13,2	;volatile
 11187                           
 11188                           ;user.c: 190: LATBbits.LATB3 = 0;
 11189  152A  118D               	bcf	13,3	;volatile
 11190                           
 11191                           ;user.c: 192: LATBbits.LATB4 = 0;
 11192  152B  120D               	bcf	13,4	;volatile
 11193                           
 11194                           ;user.c: 193: LATBbits.LATB5 = 0;
 11195  152C  128D               	bcf	13,5	;volatile
 11196                           
 11197                           ;user.c: 195: LATBbits.LATB1 = 0;
 11198  152D  108D               	bcf	13,1	;volatile
 11199                           
 11200                           ;user.c: 196: LATBbits.LATB0 = 0;
 11201  152E  100D               	bcf	13,0	;volatile
 11202                           
 11203                           ;user.c: 199: set_leds_top(top_push_state, 1);
 11204  152F  0021               	movlb	1	; select bank1
 11205  1530  086E               	movf	(_top_push_state+1)^(0+128),w
 11206  1531  0020               	movlb	0	; select bank0
 11207  1532  00A1               	movwf	set_leds_top@x+1
 11208  1533  0021               	movlb	1	; select bank1
 11209  1534  086D               	movf	_top_push_state^(0+128),w
 11210  1535  0020               	movlb	0	; select bank0
 11211  1536  00A0               	movwf	set_leds_top@x
 11212  1537  3001               	movlw	1
 11213  1538  00A2               	movwf	set_leds_top@ledState
 11214  1539  3000               	movlw	0
 11215  153A  00A3               	movwf	set_leds_top@ledState+1
 11216  153B  3195  259B  3194   	fcall	_set_leds_top
 11217                           
 11218                           ;user.c: 200: set_leds_bottom(bottom_push_state);
 11219  153E  0021               	movlb	1	; select bank1
 11220  153F  0864               	movf	(_bottom_push_state+1)^(0+128),w
 11221  1540  0020               	movlb	0	; select bank0
 11222  1541  00A1               	movwf	set_leds_bottom@x+1
 11223  1542  0021               	movlb	1	; select bank1
 11224  1543  0863               	movf	_bottom_push_state^(0+128),w
 11225  1544  0020               	movlb	0	; select bank0
 11226  1545  00A0               	movwf	set_leds_bottom@x
 11227  1546  3192  2257         	fcall	_set_leds_bottom
 11228  1548  0008               	return
 11229  1549                     __end_of_ReadSavedSettings:	
 11230                           
 11231                           	psect	text33
 11232  159B                     __ptext33:	
 11233 ;; *************** function _set_leds_top *****************
 11234 ;; Defined at:
 11235 ;;		line 16 in file "LEDs.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  x               2    0[BANK0 ] int 
 11238 ;;  ledState        2    2[BANK0 ] int 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;		None
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  1    wreg      void 
 11243 ;; Registers used:
 11244 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11253 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11254 ;;Total ram usage:        4 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:    2
 11257 ;; This function calls:
 11258 ;;		Nothing
 11259 ;; This function is called by:
 11260 ;;		_ReadSavedSettings
 11261 ;;		_star_tactiles
 11262 ;;		_solidring_tactiles
 11263 ;;		_read_top_tactile
 11264 ;;		_ring_tactiles
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           
 11269                           ;psect for function _set_leds_top
 11270  159B                     _set_leds_top:	
 11271                           
 11272                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 11273                           
 11274                           ;incstack = 0
 11275                           ; Regs used in _set_leds_top: [wreg-fsr0h+status,2+status,0]
 11276  159B  0027               	movlb	7	; select bank7
 11277  159C  100C               	bcf	12,0	;volatile
 11278                           
 11279                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 11280  159D  108C               	bcf	12,1	;volatile
 11281                           
 11282                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 11283  159E  110C               	bcf	12,2	;volatile
 11284                           
 11285                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 11286  159F  118C               	bcf	12,3	;volatile
 11287                           
 11288                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 11289  15A0  120C               	bcf	12,4	;volatile
 11290                           
 11291                           ;LEDs.c: 22: switch (x) {
 11292  15A1  2DD1               	goto	l2996
 11293  15A2                     l2984:	
 11294                           ;LEDs.c: 23: case 1:
 11295                           
 11296                           
 11297                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 11298  15A2  0020               	movlb	0	; select bank0
 11299  15A3  0C22               	rrf	set_leds_top@ledState,w
 11300  15A4  0027               	movlb	7	; select bank7
 11301  15A5  1C03               	skipc
 11302  15A6  100C               	bcf	12,0	;volatile
 11303  15A7  1803               	skipnc
 11304  15A8  140C               	bsf	12,0	;volatile
 11305                           
 11306                           ;LEDs.c: 25: break;
 11307  15A9  0008               	return
 11308  15AA                     l2986:	
 11309                           ;LEDs.c: 26: case 2:
 11310                           
 11311                           
 11312                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 11313  15AA  0020               	movlb	0	; select bank0
 11314  15AB  0C22               	rrf	set_leds_top@ledState,w
 11315  15AC  0027               	movlb	7	; select bank7
 11316  15AD  1C03               	skipc
 11317  15AE  108C               	bcf	12,1	;volatile
 11318  15AF  1803               	skipnc
 11319  15B0  148C               	bsf	12,1	;volatile
 11320                           
 11321                           ;LEDs.c: 28: break;
 11322  15B1  0008               	return
 11323  15B2                     l2988:	
 11324                           ;LEDs.c: 29: case 3:
 11325                           
 11326                           
 11327                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 11328  15B2  0020               	movlb	0	; select bank0
 11329  15B3  0C22               	rrf	set_leds_top@ledState,w
 11330  15B4  0027               	movlb	7	; select bank7
 11331  15B5  1C03               	skipc
 11332  15B6  110C               	bcf	12,2	;volatile
 11333  15B7  1803               	skipnc
 11334  15B8  150C               	bsf	12,2	;volatile
 11335                           
 11336                           ;LEDs.c: 31: break;
 11337  15B9  0008               	return
 11338  15BA                     l2990:	
 11339                           ;LEDs.c: 32: case 4:
 11340                           
 11341                           
 11342                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 11343  15BA  0020               	movlb	0	; select bank0
 11344  15BB  0C22               	rrf	set_leds_top@ledState,w
 11345  15BC  0027               	movlb	7	; select bank7
 11346  15BD  1C03               	skipc
 11347  15BE  118C               	bcf	12,3	;volatile
 11348  15BF  1803               	skipnc
 11349  15C0  158C               	bsf	12,3	;volatile
 11350                           
 11351                           ;LEDs.c: 34: break;
 11352  15C1  0008               	return
 11353  15C2                     l2992:	
 11354                           ;LEDs.c: 35: case 5:
 11355                           
 11356                           
 11357                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 11358  15C2  0020               	movlb	0	; select bank0
 11359  15C3  0C22               	rrf	set_leds_top@ledState,w
 11360  15C4  0027               	movlb	7	; select bank7
 11361  15C5  1C03               	skipc
 11362  15C6  120C               	bcf	12,4	;volatile
 11363  15C7  1803               	skipnc
 11364  15C8  160C               	bsf	12,4	;volatile
 11365                           
 11366                           ;LEDs.c: 39: break;
 11367                           
 11368                           ;LEDs.c: 38: case 6:
 11369                           
 11370                           ;LEDs.c: 37: break;
 11371  15C9  0008               	return
 11372  15CA                     l640:	
 11373                           ;LEDs.c: 40: case 100:
 11374                           
 11375                           
 11376                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 11377  15CA  0027               	movlb	7	; select bank7
 11378  15CB  140C               	bsf	12,0	;volatile
 11379                           
 11380                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 11381  15CC  148C               	bsf	12,1	;volatile
 11382                           
 11383                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 11384  15CD  150C               	bsf	12,2	;volatile
 11385                           
 11386                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 11387  15CE  158C               	bsf	12,3	;volatile
 11388                           
 11389                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 11390  15CF  160C               	bsf	12,4	;volatile
 11391                           
 11392                           ;LEDs.c: 47: }
 11393                           
 11394                           ;LEDs.c: 46: break;
 11395  15D0  0008               	return
 11396  15D1                     l2996:	
 11397                           
 11398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11399                           ; Switch size 1, requested type "space"
 11400                           ; Number of cases is 1, Range of values is 0 to 0
 11401                           ; switch strategies available:
 11402                           ; Name         Instructions Cycles
 11403                           ; simple_byte            4     3 (average)
 11404                           ; direct_byte            8     6 (fixed)
 11405                           ; jumptable            260     6 (fixed)
 11406                           ;	Chosen strategy is simple_byte
 11407  15D1  0020               	movlb	0	; select bank0
 11408  15D2  0821               	movf	set_leds_top@x+1,w
 11409  15D3  3A00               	xorlw	0	; case 0
 11410  15D4  1903               	skipnz
 11411  15D5  2DD7               	goto	l4398
 11412  15D6  2DEE               	goto	l641
 11413  15D7                     l4398:	
 11414                           
 11415                           ; Switch size 1, requested type "space"
 11416                           ; Number of cases is 7, Range of values is 1 to 100
 11417                           ; switch strategies available:
 11418                           ; Name         Instructions Cycles
 11419                           ; simple_byte           22    12 (average)
 11420                           ; direct_byte          209     9 (fixed)
 11421                           ; jumptable            263     9 (fixed)
 11422                           ;	Chosen strategy is simple_byte
 11423  15D7  0820               	movf	set_leds_top@x,w
 11424  15D8  3A01               	xorlw	1	; case 1
 11425  15D9  1903               	skipnz
 11426  15DA  2DA2               	goto	l2984
 11427  15DB  3A03               	xorlw	3	; case 2
 11428  15DC  1903               	skipnz
 11429  15DD  2DAA               	goto	l2986
 11430  15DE  3A01               	xorlw	1	; case 3
 11431  15DF  1903               	skipnz
 11432  15E0  2DB2               	goto	l2988
 11433  15E1  3A07               	xorlw	7	; case 4
 11434  15E2  1903               	skipnz
 11435  15E3  2DBA               	goto	l2990
 11436  15E4  3A01               	xorlw	1	; case 5
 11437  15E5  1903               	skipnz
 11438  15E6  2DC2               	goto	l2992
 11439  15E7  3A03               	xorlw	3	; case 6
 11440  15E8  1903               	skipnz
 11441  15E9  2DEE               	goto	l641
 11442  15EA  3A62               	xorlw	98	; case 100
 11443  15EB  1903               	skipnz
 11444  15EC  2DCA               	goto	l640
 11445  15ED  2DEE               	goto	l641
 11446  15EE                     l641:	
 11447  15EE  0008               	return
 11448  15EF                     __end_of_set_leds_top:	
 11449                           
 11450                           	psect	text34
 11451  1257                     __ptext34:	
 11452 ;; *************** function _set_leds_bottom *****************
 11453 ;; Defined at:
 11454 ;;		line 51 in file "LEDs.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;  x               2    0[BANK0 ] int 
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;		None
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  1    wreg      void 
 11461 ;; Registers used:
 11462 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11468 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11471 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11472 ;;Total ram usage:        2 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:    2
 11475 ;; This function calls:
 11476 ;;		Nothing
 11477 ;; This function is called by:
 11478 ;;		_ReadSavedSettings
 11479 ;;		_star_tactiles
 11480 ;;		_solidring_tactiles
 11481 ;;		_read_bottom_tactile
 11482 ;;		_ring_tactiles
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           
 11487                           ;psect for function _set_leds_bottom
 11488  1257                     _set_leds_bottom:	
 11489                           
 11490                           ;LEDs.c: 52: LATDbits.LATD0 = 0;
 11491                           
 11492                           ;incstack = 0
 11493                           ; Regs used in _set_leds_bottom: [wreg-fsr0h+status,2+status,0]
 11494  1257  0022               	movlb	2	; select bank2
 11495  1258  100F               	bcf	15,0	;volatile
 11496                           
 11497                           ;LEDs.c: 53: LATDbits.LATD1 = 0;
 11498  1259  108F               	bcf	15,1	;volatile
 11499                           
 11500                           ;LEDs.c: 54: LATDbits.LATD2 = 0;
 11501  125A  110F               	bcf	15,2	;volatile
 11502                           
 11503                           ;LEDs.c: 55: LATDbits.LATD3 = 0;
 11504  125B  118F               	bcf	15,3	;volatile
 11505                           
 11506                           ;LEDs.c: 56: LATDbits.LATD4 = 0;
 11507  125C  120F               	bcf	15,4	;volatile
 11508                           
 11509                           ;LEDs.c: 57: switch (x) {
 11510  125D  2A74               	goto	l3018
 11511  125E                     l645:	
 11512                           ;LEDs.c: 58: case 1:
 11513                           
 11514                           
 11515                           ;LEDs.c: 59: LATDbits.LATD0 = 1;
 11516  125E  0022               	movlb	2	; select bank2
 11517  125F  140F               	bsf	15,0	;volatile
 11518                           
 11519                           ;LEDs.c: 60: break;
 11520  1260  0008               	return
 11521  1261                     l647:	
 11522                           ;LEDs.c: 61: case 2:
 11523                           
 11524                           
 11525                           ;LEDs.c: 62: LATDbits.LATD1 = 1;
 11526  1261  0022               	movlb	2	; select bank2
 11527  1262  148F               	bsf	15,1	;volatile
 11528                           
 11529                           ;LEDs.c: 63: break;
 11530  1263  0008               	return
 11531  1264                     l648:	
 11532                           ;LEDs.c: 64: case 3:
 11533                           
 11534                           
 11535                           ;LEDs.c: 65: LATDbits.LATD2 = 1;
 11536  1264  0022               	movlb	2	; select bank2
 11537  1265  150F               	bsf	15,2	;volatile
 11538                           
 11539                           ;LEDs.c: 66: break;
 11540  1266  0008               	return
 11541  1267                     l649:	
 11542                           ;LEDs.c: 67: case 4:
 11543                           
 11544                           
 11545                           ;LEDs.c: 68: LATDbits.LATD3 = 1;
 11546  1267  0022               	movlb	2	; select bank2
 11547  1268  158F               	bsf	15,3	;volatile
 11548                           
 11549                           ;LEDs.c: 69: break;
 11550  1269  0008               	return
 11551  126A                     l650:	
 11552                           ;LEDs.c: 70: case 5:
 11553                           
 11554                           
 11555                           ;LEDs.c: 71: LATDbits.LATD4 = 1;
 11556  126A  0022               	movlb	2	; select bank2
 11557  126B  160F               	bsf	15,4	;volatile
 11558                           
 11559                           ;LEDs.c: 74: break;
 11560                           
 11561                           ;LEDs.c: 73: case 6:
 11562                           
 11563                           ;LEDs.c: 72: break;
 11564  126C  0008               	return
 11565  126D                     l652:	
 11566                           ;LEDs.c: 75: case 100:
 11567                           
 11568                           
 11569                           ;LEDs.c: 76: LATDbits.LATD0 = 1;
 11570  126D  0022               	movlb	2	; select bank2
 11571  126E  140F               	bsf	15,0	;volatile
 11572                           
 11573                           ;LEDs.c: 77: LATDbits.LATD1 = 1;
 11574  126F  148F               	bsf	15,1	;volatile
 11575                           
 11576                           ;LEDs.c: 78: LATDbits.LATD2 = 1;
 11577  1270  150F               	bsf	15,2	;volatile
 11578                           
 11579                           ;LEDs.c: 79: LATDbits.LATD3 = 1;
 11580  1271  158F               	bsf	15,3	;volatile
 11581                           
 11582                           ;LEDs.c: 80: LATDbits.LATD4 = 1;
 11583  1272  160F               	bsf	15,4	;volatile
 11584                           
 11585                           ;LEDs.c: 82: }
 11586                           
 11587                           ;LEDs.c: 81: break;
 11588  1273  0008               	return
 11589  1274                     l3018:	
 11590                           
 11591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11592                           ; Switch size 1, requested type "space"
 11593                           ; Number of cases is 1, Range of values is 0 to 0
 11594                           ; switch strategies available:
 11595                           ; Name         Instructions Cycles
 11596                           ; simple_byte            4     3 (average)
 11597                           ; direct_byte            8     6 (fixed)
 11598                           ; jumptable            260     6 (fixed)
 11599                           ;	Chosen strategy is simple_byte
 11600  1274  0020               	movlb	0	; select bank0
 11601  1275  0821               	movf	set_leds_bottom@x+1,w
 11602  1276  3A00               	xorlw	0	; case 0
 11603  1277  1903               	skipnz
 11604  1278  2A7A               	goto	l4400
 11605  1279  2A91               	goto	l653
 11606  127A                     l4400:	
 11607                           
 11608                           ; Switch size 1, requested type "space"
 11609                           ; Number of cases is 7, Range of values is 1 to 100
 11610                           ; switch strategies available:
 11611                           ; Name         Instructions Cycles
 11612                           ; simple_byte           22    12 (average)
 11613                           ; direct_byte          209     9 (fixed)
 11614                           ; jumptable            263     9 (fixed)
 11615                           ;	Chosen strategy is simple_byte
 11616  127A  0820               	movf	set_leds_bottom@x,w
 11617  127B  3A01               	xorlw	1	; case 1
 11618  127C  1903               	skipnz
 11619  127D  2A5E               	goto	l645
 11620  127E  3A03               	xorlw	3	; case 2
 11621  127F  1903               	skipnz
 11622  1280  2A61               	goto	l647
 11623  1281  3A01               	xorlw	1	; case 3
 11624  1282  1903               	skipnz
 11625  1283  2A64               	goto	l648
 11626  1284  3A07               	xorlw	7	; case 4
 11627  1285  1903               	skipnz
 11628  1286  2A67               	goto	l649
 11629  1287  3A01               	xorlw	1	; case 5
 11630  1288  1903               	skipnz
 11631  1289  2A6A               	goto	l650
 11632  128A  3A03               	xorlw	3	; case 6
 11633  128B  1903               	skipnz
 11634  128C  2A91               	goto	l653
 11635  128D  3A62               	xorlw	98	; case 100
 11636  128E  1903               	skipnz
 11637  128F  2A6D               	goto	l652
 11638  1290  2A91               	goto	l653
 11639  1291                     l653:	
 11640  1291  0008               	return
 11641  1292                     __end_of_set_leds_bottom:	
 11642                           
 11643                           	psect	text35
 11644  1FE0                     __ptext35:	
 11645 ;; *************** function _FLASH_ReadWord *****************
 11646 ;; Defined at:
 11647 ;;		line 58 in file "memory.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;  flashAddr       2    0[BANK0 ] unsigned int 
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 11652 ;; Return value:  Size  Location     Type
 11653 ;;                  2    0[BANK0 ] unsigned int 
 11654 ;; Registers used:
 11655 ;;		wreg, status,2, status,0
 11656 ;; Tracked objects:
 11657 ;;		On entry : 0/0
 11658 ;;		On exit  : 0/0
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11661 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11662 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11664 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11665 ;;Total ram usage:        3 bytes
 11666 ;; Hardware stack levels used:    1
 11667 ;; Hardware stack levels required when called:    2
 11668 ;; This function calls:
 11669 ;;		Nothing
 11670 ;; This function is called by:
 11671 ;;		_ReadSavedSettings
 11672 ;;		_FLASH_WriteWord
 11673 ;; This function uses a non-reentrant model
 11674 ;;
 11675                           
 11676                           
 11677                           ;psect for function _FLASH_ReadWord
 11678  1FE0                     _FLASH_ReadWord:	
 11679                           
 11680                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
 11681                           
 11682                           ;incstack = 0
 11683                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
 11684  1FE0  3000               	movlw	0
 11685  1FE1  1B8B               	btfsc	11,7	;volatile
 11686  1FE2  3001               	movlw	1
 11687  1FE3  0020               	movlb	0	; select bank0
 11688  1FE4  00A2               	movwf	FLASH_ReadWord@GIEBitValue
 11689                           
 11690                           ;memory.c: 61: INTCONbits.GIE = 0;
 11691  1FE5  138B               	bcf	11,7	;volatile
 11692                           
 11693                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
 11694  1FE6  0820               	movf	FLASH_ReadWord@flashAddr,w
 11695  1FE7  0023               	movlb	3	; select bank3
 11696  1FE8  0091               	movwf	17	;volatile
 11697                           
 11698                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
 11699  1FE9  0020               	movlb	0	; select bank0
 11700  1FEA  0821               	movf	FLASH_ReadWord@flashAddr+1,w
 11701  1FEB  0023               	movlb	3	; select bank3
 11702  1FEC  0092               	movwf	18	;volatile
 11703                           
 11704                           ;memory.c: 65: PMCON1bits.CFGS = 0;
 11705  1FED  1315               	bcf	21,6	;volatile
 11706                           
 11707                           ;memory.c: 66: PMCON1bits.RD = 1;
 11708  1FEE  1415               	bsf	21,0	;volatile
 11709                           
 11710                           ;memory.c: 67: __nop();
 11711  1FEF  0000               	nop
 11712                           
 11713                           ;memory.c: 68: __nop();
 11714  1FF0  0000               	nop
 11715                           
 11716                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
 11717  1FF1  0020               	movlb	0	; select bank0
 11718  1FF2  0C22               	rrf	FLASH_ReadWord@GIEBitValue,w
 11719  1FF3  1C03               	skipc
 11720  1FF4  138B               	bcf	11,7	;volatile
 11721  1FF5  1803               	skipnc
 11722  1FF6  178B               	bsf	11,7	;volatile
 11723                           
 11724                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
 11725  1FF7  0023               	movlb	3	; select bank3
 11726  1FF8  0814               	movf	20,w	;volatile
 11727  1FF9  0020               	movlb	0	; select bank0
 11728  1FFA  00A1               	movwf	?_FLASH_ReadWord+1
 11729  1FFB  0023               	movlb	3	; select bank3
 11730  1FFC  0813               	movf	19,w	;volatile
 11731  1FFD  0020               	movlb	0	; select bank0
 11732  1FFE  00A0               	movwf	?_FLASH_ReadWord
 11733  1FFF  0008               	return
 11734  2000                     __end_of_FLASH_ReadWord:	
 11735                           
 11736                           	psect	text36
 11737  1022                     __ptext36:	
 11738 ;; *************** function _InitializeTaps *****************
 11739 ;; Defined at:
 11740 ;;		line 175 in file "user.c"
 11741 ;; Parameters:    Size  Location     Type
 11742 ;;		None
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;  itap            2    1[BANK0 ] int 
 11745 ;; Return value:  Size  Location     Type
 11746 ;;                  1    wreg      void 
 11747 ;; Registers used:
 11748 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11749 ;; Tracked objects:
 11750 ;;		On entry : 0/0
 11751 ;;		On exit  : 0/0
 11752 ;;		Unchanged: 0/0
 11753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11757 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11758 ;;Total ram usage:        3 bytes
 11759 ;; Hardware stack levels used:    1
 11760 ;; Hardware stack levels required when called:    2
 11761 ;; This function calls:
 11762 ;;		Nothing
 11763 ;; This function is called by:
 11764 ;;		_main
 11765 ;; This function uses a non-reentrant model
 11766 ;;
 11767                           
 11768                           
 11769                           ;psect for function _InitializeTaps
 11770  1022                     _InitializeTaps:	
 11771                           
 11772                           ;user.c: 176: for (int itap = 0; itap < 12; itap++) {
 11773                           
 11774                           ;incstack = 0
 11775                           ; Regs used in _InitializeTaps: [wreg+fsr1l+fsr1h+status,2+status,0]
 11776  1022  0020               	movlb	0	; select bank0
 11777  1023  01A1               	clrf	InitializeTaps@itap
 11778  1024  01A2               	clrf	InitializeTaps@itap+1
 11779  1025                     L9:	
 11780  1025  0822               	movf	InitializeTaps@itap+1,w
 11781  1026  3A80               	xorlw	128
 11782  1027  00A0               	movwf	??_InitializeTaps
 11783  1028  3080               	movlw	128
 11784  1029  0220               	subwf	??_InitializeTaps,w
 11785  102A  1D03               	skipz
 11786  102B  282E               	goto	u3275
 11787  102C  300C               	movlw	12
 11788  102D  0221               	subwf	InitializeTaps@itap,w
 11789  102E                     u3275:	
 11790  102E  1803               	btfsc	3,0
 11791  102F  0008               	return
 11792                           
 11793                           ;user.c: 177: tap[itap] = 0;
 11794  1030  0020               	movlb	0	; select bank0
 11795  1031  0821               	movf	InitializeTaps@itap,w
 11796  1032  00A0               	movwf	??_InitializeTaps
 11797  1033  3001               	movlw	1
 11798  1034                     u3285:	
 11799  1034  35A0               	lslf	??_InitializeTaps,f
 11800  1035  3EFF               	addlw	-1
 11801  1036  1D03               	skipz
 11802  1037  2834               	goto	u3285
 11803  1038  3520               	lslf	??_InitializeTaps,w
 11804  1039  3EA0               	addlw	(low (_tap| (0+256)))& (0+255)
 11805  103A  0086               	movwf	6
 11806  103B  3001               	movlw	1	; select bank3/4
 11807  103C  0087               	movwf	7
 11808  103D  3000               	movlw	0
 11809  103E  3FC0               	movwi [0]fsr1
 11810  103F  3000               	movlw	0
 11811  1040  3FC1               	movwi [1]fsr1
 11812  1041  3FC2               	movwi [2]fsr1
 11813  1042  3FC3               	movwi [3]fsr1
 11814  1043  3001               	movlw	1
 11815  1044  07A1               	addwf	InitializeTaps@itap,f
 11816  1045  3000               	movlw	0
 11817  1046  3DA2               	addwfc	InitializeTaps@itap+1,f
 11818  1047  2825               	goto	L9
 11819  1048                     __end_of_InitializeTaps:	
 11820                           
 11821                           	psect	text37
 11822  1073                     __ptext37:	
 11823 ;; *************** function _InitApp *****************
 11824 ;; Defined at:
 11825 ;;		line 23 in file "user.c"
 11826 ;; Parameters:    Size  Location     Type
 11827 ;;		None
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;		None
 11830 ;; Return value:  Size  Location     Type
 11831 ;;                  1    wreg      void 
 11832 ;; Registers used:
 11833 ;;		wreg, status,2, status,0, pclath, cstack
 11834 ;; Tracked objects:
 11835 ;;		On entry : 0/0
 11836 ;;		On exit  : 0/0
 11837 ;;		Unchanged: 0/0
 11838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11843 ;;Total ram usage:        0 bytes
 11844 ;; Hardware stack levels used:    1
 11845 ;; Hardware stack levels required when called:    4
 11846 ;; This function calls:
 11847 ;;		_init_adc
 11848 ;;		_init_pwm
 11849 ;; This function is called by:
 11850 ;;		_main
 11851 ;; This function uses a non-reentrant model
 11852 ;;
 11853                           
 11854                           
 11855                           ;psect for function _InitApp
 11856  1073                     _InitApp:	
 11857                           
 11858                           ;user.c: 24: TRISBbits.TRISB0 = 0;
 11859                           
 11860                           ;incstack = 0
 11861                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
 11862  1073  0021               	movlb	1	; select bank1
 11863  1074  100D               	bcf	13,0	;volatile
 11864                           
 11865                           ;user.c: 25: TRISBbits.TRISB1 = 0;
 11866  1075  108D               	bcf	13,1	;volatile
 11867                           
 11868                           ;user.c: 26: TRISBbits.TRISB2 = 0;
 11869  1076  110D               	bcf	13,2	;volatile
 11870                           
 11871                           ;user.c: 27: TRISBbits.TRISB3 = 0;
 11872  1077  118D               	bcf	13,3	;volatile
 11873                           
 11874                           ;user.c: 28: TRISBbits.TRISB4 = 0;
 11875  1078  120D               	bcf	13,4	;volatile
 11876                           
 11877                           ;user.c: 29: TRISBbits.TRISB5 = 0;
 11878  1079  128D               	bcf	13,5	;volatile
 11879                           
 11880                           ;user.c: 31: TRISCbits.TRISC0 = 1;
 11881  107A  140E               	bsf	14,0	;volatile
 11882                           
 11883                           ;user.c: 32: TRISCbits.TRISC4 = 0;
 11884  107B  120E               	bcf	14,4	;volatile
 11885                           
 11886                           ;user.c: 33: TRISCbits.TRISC5 = 0;
 11887  107C  128E               	bcf	14,5	;volatile
 11888                           
 11889                           ;user.c: 36: TRISDbits.TRISD0 = 0;
 11890  107D  100F               	bcf	15,0	;volatile
 11891                           
 11892                           ;user.c: 37: TRISDbits.TRISD1 = 0;
 11893  107E  108F               	bcf	15,1	;volatile
 11894                           
 11895                           ;user.c: 38: TRISDbits.TRISD2 = 0;
 11896  107F  110F               	bcf	15,2	;volatile
 11897                           
 11898                           ;user.c: 39: TRISDbits.TRISD3 = 0;
 11899  1080  118F               	bcf	15,3	;volatile
 11900                           
 11901                           ;user.c: 40: TRISDbits.TRISD4 = 0;
 11902  1081  120F               	bcf	15,4	;volatile
 11903                           
 11904                           ;user.c: 41: TRISDbits.TRISD5 = 1;
 11905  1082  168F               	bsf	15,5	;volatile
 11906                           
 11907                           ;user.c: 42: TRISDbits.TRISD6 = 1;
 11908  1083  170F               	bsf	15,6	;volatile
 11909                           
 11910                           ;user.c: 43: TRISDbits.TRISD7 = 1;
 11911  1084  178F               	bsf	15,7	;volatile
 11912                           
 11913                           ;user.c: 49: TRISEbits.TRISE0 = 1;
 11914  1085  1410               	bsf	16,0	;volatile
 11915                           
 11916                           ;user.c: 50: TRISEbits.TRISE1 = 1;
 11917  1086  1490               	bsf	16,1	;volatile
 11918                           
 11919                           ;user.c: 51: ANSELEbits.ANSE0 = 0;
 11920  1087  0023               	movlb	3	; select bank3
 11921  1088  1010               	bcf	16,0	;volatile
 11922                           
 11923                           ;user.c: 52: ANSELEbits.ANSE1 = 0;
 11924  1089  1090               	bcf	16,1	;volatile
 11925                           
 11926                           ;user.c: 53: PORTEbits.RE0 = 0;
 11927  108A  0020               	movlb	0	; select bank0
 11928  108B  1010               	bcf	16,0	;volatile
 11929                           
 11930                           ;user.c: 54: PORTEbits.RE1 = 0;
 11931  108C  1090               	bcf	16,1	;volatile
 11932                           
 11933                           ;user.c: 56: TRISFbits.TRISF0 = 0;
 11934  108D  0026               	movlb	6	; select bank6
 11935  108E  100C               	bcf	12,0	;volatile
 11936                           
 11937                           ;user.c: 57: TRISFbits.TRISF1 = 0;
 11938  108F  108C               	bcf	12,1	;volatile
 11939                           
 11940                           ;user.c: 58: TRISFbits.TRISF2 = 0;
 11941  1090  110C               	bcf	12,2	;volatile
 11942                           
 11943                           ;user.c: 59: TRISFbits.TRISF3 = 0;
 11944  1091  118C               	bcf	12,3	;volatile
 11945                           
 11946                           ;user.c: 60: TRISFbits.TRISF4 = 0;
 11947  1092  120C               	bcf	12,4	;volatile
 11948                           
 11949                           ;user.c: 61: TRISFbits.TRISF5 = 0;
 11950  1093  128C               	bcf	12,5	;volatile
 11951                           
 11952                           ;user.c: 62: TRISFbits.TRISF6 = 1;
 11953  1094  170C               	bsf	12,6	;volatile
 11954                           
 11955                           ;user.c: 63: ANSELFbits.ANSF6 = 0;
 11956  1095  0028               	movlb	8	; select bank8
 11957  1096  130C               	bcf	12,6	;volatile
 11958                           
 11959                           ;user.c: 65: TRISGbits.TRISG1 = 0;
 11960  1097  0026               	movlb	6	; select bank6
 11961  1098  108D               	bcf	13,1	;volatile
 11962                           
 11963                           ;user.c: 66: TRISGbits.TRISG2 = 0;
 11964  1099  110D               	bcf	13,2	;volatile
 11965                           
 11966                           ;user.c: 68: init_adc();
 11967  109A  319F  2734  3190   	fcall	_init_adc
 11968                           
 11969                           ;user.c: 69: init_pwm();
 11970  109D  3193  238C         	fcall	_init_pwm
 11971                           
 11972                           ;user.c: 71: INTCONbits.GIE = 0b1;
 11973  109F  178B               	bsf	11,7	;volatile
 11974                           
 11975                           ;user.c: 72: INTCONbits.TMR0IE = 0b1;
 11976  10A0  168B               	bsf	11,5	;volatile
 11977                           
 11978                           ;user.c: 73: INTCONbits.TMR0IF = 0b0;
 11979  10A1  110B               	bcf	11,2	;volatile
 11980  10A2  0008               	return
 11981  10A3                     __end_of_InitApp:	
 11982                           
 11983                           	psect	text38
 11984  138C                     __ptext38:	
 11985 ;; *************** function _init_pwm *****************
 11986 ;; Defined at:
 11987 ;;		line 117 in file "user.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;		None
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;		None
 11992 ;; Return value:  Size  Location     Type
 11993 ;;                  1    wreg      void 
 11994 ;; Registers used:
 11995 ;;		wreg, status,2, status,0, pclath, cstack
 11996 ;; Tracked objects:
 11997 ;;		On entry : 0/0
 11998 ;;		On exit  : 0/0
 11999 ;;		Unchanged: 0/0
 12000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12005 ;;Total ram usage:        0 bytes
 12006 ;; Hardware stack levels used:    1
 12007 ;; Hardware stack levels required when called:    3
 12008 ;; This function calls:
 12009 ;;		_init_timer0
 12010 ;;		_init_timer2
 12011 ;; This function is called by:
 12012 ;;		_InitApp
 12013 ;; This function uses a non-reentrant model
 12014 ;;
 12015                           
 12016                           
 12017                           ;psect for function _init_pwm
 12018  138C                     _init_pwm:	
 12019                           
 12020                           ;user.c: 118: APFCONbits.CCP2SEL = 0;
 12021                           
 12022                           ;incstack = 0
 12023                           ; Regs used in _init_pwm: [wreg+status,2+status,0+pclath+cstack]
 12024  138C  0022               	movlb	2	; select bank2
 12025  138D  101D               	bcf	29,0	;volatile
 12026                           
 12027                           ;user.c: 119: TRISCbits.TRISC2 = 0;
 12028  138E  0021               	movlb	1	; select bank1
 12029  138F  110E               	bcf	14,2	;volatile
 12030                           
 12031                           ;user.c: 120: TRISCbits.TRISC1 = 0;
 12032  1390  108E               	bcf	14,1	;volatile
 12033                           
 12034                           ;user.c: 121: TRISGbits.TRISG0 = 0;
 12035  1391  0026               	movlb	6	; select bank6
 12036  1392  100D               	bcf	13,0	;volatile
 12037                           
 12038                           ;user.c: 122: TRISGbits.TRISG3 = 0;
 12039  1393  118D               	bcf	13,3	;volatile
 12040                           
 12041                           ;user.c: 123: TRISGbits.TRISG4 = 0;
 12042  1394  120D               	bcf	13,4	;volatile
 12043                           
 12044                           ;user.c: 124: TRISEbits.TRISE6 = 0;
 12045  1395  0021               	movlb	1	; select bank1
 12046  1396  1310               	bcf	16,6	;volatile
 12047                           
 12048                           ;user.c: 125: TRISEbits.TRISE5 = 0;
 12049  1397  1290               	bcf	16,5	;volatile
 12050                           
 12051                           ;user.c: 126: TRISEbits.TRISE4 = 0;
 12052  1398  1210               	bcf	16,4	;volatile
 12053                           
 12054                           ;user.c: 127: TRISEbits.TRISE3 = 0;
 12055  1399  1190               	bcf	16,3	;volatile
 12056                           
 12057                           ;user.c: 128: TRISEbits.TRISE2 = 0;
 12058  139A  1110               	bcf	16,2	;volatile
 12059                           
 12060                           ;user.c: 129: CCP1CONbits.CCP1M = 0b1111;
 12061  139B  300F               	movlw	15
 12062  139C  0025               	movlb	5	; select bank5
 12063  139D  0493               	iorwf	19,f	;volatile
 12064                           
 12065                           ;user.c: 130: CCP2CONbits.CCP2M = 0b1111;
 12066  139E  300F               	movlw	15
 12067  139F  049A               	iorwf	26,f	;volatile
 12068                           
 12069                           ;user.c: 131: CCP3CONbits.CCP3M = 0b1111;
 12070  13A0  300F               	movlw	15
 12071  13A1  0026               	movlb	6	; select bank6
 12072  13A2  0493               	iorwf	19,f	;volatile
 12073                           
 12074                           ;user.c: 132: CCP4CONbits.CCP4M = 0b1111;
 12075  13A3  300F               	movlw	15
 12076  13A4  049A               	iorwf	26,f	;volatile
 12077                           
 12078                           ;user.c: 133: CCP5CONbits.CCP5M = 0b1111;
 12079  13A5  300F               	movlw	15
 12080  13A6  049E               	iorwf	30,f	;volatile
 12081                           
 12082                           ;user.c: 134: CCP6CONbits.CCP6M = 0b1111;
 12083  13A7  300F               	movlw	15
 12084  13A8  002C               	movlb	12	; select bank12
 12085  13A9  0493               	iorwf	19,f	;volatile
 12086                           
 12087                           ;user.c: 135: CCP7CONbits.CCP7M = 0b1111;
 12088  13AA  300F               	movlw	15
 12089  13AB  0496               	iorwf	22,f	;volatile
 12090                           
 12091                           ;user.c: 136: CCP8CONbits.CCP8M = 0b1111;
 12092  13AC  300F               	movlw	15
 12093  13AD  0499               	iorwf	25,f	;volatile
 12094                           
 12095                           ;user.c: 137: CCP9CONbits.CCP9M = 0b1111;
 12096  13AE  300F               	movlw	15
 12097  13AF  049C               	iorwf	28,f	;volatile
 12098                           
 12099                           ;user.c: 138: CCP10CONbits.CCP10M = 0b1111;
 12100  13B0  300F               	movlw	15
 12101  13B1  049F               	iorwf	31,f	;volatile
 12102                           
 12103                           ;user.c: 139: CCPTMRS0 = 0b00000000;
 12104  13B2  0025               	movlb	5	; select bank5
 12105  13B3  019D               	clrf	29	;volatile
 12106                           
 12107                           ;user.c: 140: CCPTMRS1 = 0b00000000;
 12108  13B4  019E               	clrf	30	;volatile
 12109                           
 12110                           ;user.c: 141: CCPTMRS2 = 0b00000000;
 12111  13B5  019F               	clrf	31	;volatile
 12112                           
 12113                           ;user.c: 142: CCPR1 = 50;
 12114  13B6  3000               	movlw	0
 12115  13B7  0092               	movwf	18	;volatile
 12116  13B8  3032               	movlw	50
 12117  13B9  0091               	movwf	17	;volatile
 12118                           
 12119                           ;user.c: 143: CCPR2 = 100;
 12120  13BA  3000               	movlw	0
 12121  13BB  0099               	movwf	25	;volatile
 12122  13BC  3064               	movlw	100
 12123  13BD  0098               	movwf	24	;volatile
 12124                           
 12125                           ;user.c: 144: CCPR3 = 150;
 12126  13BE  3000               	movlw	0
 12127  13BF  0026               	movlb	6	; select bank6
 12128  13C0  0092               	movwf	18	;volatile
 12129  13C1  3096               	movlw	150
 12130  13C2  0091               	movwf	17	;volatile
 12131                           
 12132                           ;user.c: 145: CCPR4 = 200;
 12133  13C3  3000               	movlw	0
 12134  13C4  0099               	movwf	25	;volatile
 12135  13C5  30C8               	movlw	200
 12136  13C6  0098               	movwf	24	;volatile
 12137                           
 12138                           ;user.c: 146: init_timer2();
 12139  13C7  319F  2722  3193   	fcall	_init_timer2
 12140                           
 12141                           ;user.c: 147: init_timer0();
 12142  13CA  319F  271B         	fcall	_init_timer0
 12143  13CC  0008               	return
 12144  13CD                     __end_of_init_pwm:	
 12145                           
 12146                           	psect	text39
 12147  1F22                     __ptext39:	
 12148 ;; *************** function _init_timer2 *****************
 12149 ;; Defined at:
 12150 ;;		line 150 in file "user.c"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;		None
 12153 ;; Auto vars:     Size  Location     Type
 12154 ;;		None
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  1    wreg      void 
 12157 ;; Registers used:
 12158 ;;		wreg, status,2, status,0
 12159 ;; Tracked objects:
 12160 ;;		On entry : 0/0
 12161 ;;		On exit  : 0/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12168 ;;Total ram usage:        0 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:    2
 12171 ;; This function calls:
 12172 ;;		Nothing
 12173 ;; This function is called by:
 12174 ;;		_init_pwm
 12175 ;; This function uses a non-reentrant model
 12176 ;;
 12177                           
 12178                           
 12179                           ;psect for function _init_timer2
 12180  1F22                     _init_timer2:	
 12181                           
 12182                           ;user.c: 151: T2CONbits.T2OUTPS = 0b0000;
 12183                           
 12184                           ;incstack = 0
 12185                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
 12186  1F22  3087               	movlw	-121
 12187  1F23  0020               	movlb	0	; select bank0
 12188  1F24  059C               	andwf	28,f	;volatile
 12189                           
 12190                           ;user.c: 152: T2CONbits.T2CKPS = 0b00;
 12191  1F25  30FC               	movlw	-4
 12192  1F26  059C               	andwf	28,f	;volatile
 12193                           
 12194                           ;user.c: 153: PR2 = 0xFF;
 12195  1F27  30FF               	movlw	255
 12196  1F28  009B               	movwf	27	;volatile
 12197                           
 12198                           ;user.c: 154: T2CONbits.TMR2ON = 1;
 12199  1F29  151C               	bsf	28,2	;volatile
 12200  1F2A  0008               	return
 12201  1F2B                     __end_of_init_timer2:	
 12202                           
 12203                           	psect	text40
 12204  1F1B                     __ptext40:	
 12205 ;; *************** function _init_timer0 *****************
 12206 ;; Defined at:
 12207 ;;		line 157 in file "user.c"
 12208 ;; Parameters:    Size  Location     Type
 12209 ;;		None
 12210 ;; Auto vars:     Size  Location     Type
 12211 ;;		None
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  1    wreg      void 
 12214 ;; Registers used:
 12215 ;;		None
 12216 ;; Tracked objects:
 12217 ;;		On entry : 0/0
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12225 ;;Total ram usage:        0 bytes
 12226 ;; Hardware stack levels used:    1
 12227 ;; Hardware stack levels required when called:    2
 12228 ;; This function calls:
 12229 ;;		Nothing
 12230 ;; This function is called by:
 12231 ;;		_init_pwm
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           
 12236                           ;psect for function _init_timer0
 12237  1F1B                     _init_timer0:	
 12238                           
 12239                           ;user.c: 158: OPTION_REGbits.TMR0CS = 0b0;
 12240                           
 12241                           ;incstack = 0
 12242                           ; Regs used in _init_timer0: []
 12243  1F1B  0021               	movlb	1	; select bank1
 12244  1F1C  1295               	bcf	21,5	;volatile
 12245                           
 12246                           ;user.c: 159: OPTION_REGbits.PSA = 0b0;
 12247  1F1D  1195               	bcf	21,3	;volatile
 12248                           
 12249                           ;user.c: 160: OPTION_REGbits.PS0 = 0b0;
 12250  1F1E  1015               	bcf	21,0	;volatile
 12251                           
 12252                           ;user.c: 161: OPTION_REGbits.PS1 = 0b1;
 12253  1F1F  1495               	bsf	21,1	;volatile
 12254                           
 12255                           ;user.c: 162: OPTION_REGbits.PS2 = 0b0;
 12256  1F20  1115               	bcf	21,2	;volatile
 12257  1F21  0008               	return
 12258  1F22                     __end_of_init_timer0:	
 12259                           
 12260                           	psect	text41
 12261  1F34                     __ptext41:	
 12262 ;; *************** function _init_adc *****************
 12263 ;; Defined at:
 12264 ;;		line 103 in file "user.c"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;		None
 12267 ;; Auto vars:     Size  Location     Type
 12268 ;;		None
 12269 ;; Return value:  Size  Location     Type
 12270 ;;                  1    wreg      void 
 12271 ;; Registers used:
 12272 ;;		wreg, status,2, status,0
 12273 ;; Tracked objects:
 12274 ;;		On entry : 0/0
 12275 ;;		On exit  : 0/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12282 ;;Total ram usage:        0 bytes
 12283 ;; Hardware stack levels used:    1
 12284 ;; Hardware stack levels required when called:    2
 12285 ;; This function calls:
 12286 ;;		Nothing
 12287 ;; This function is called by:
 12288 ;;		_InitApp
 12289 ;; This function uses a non-reentrant model
 12290 ;;
 12291                           
 12292                           
 12293                           ;psect for function _init_adc
 12294  1F34                     _init_adc:	
 12295                           
 12296                           ;user.c: 104: ADCON1bits.ADFM = 0b1;
 12297                           
 12298                           ;incstack = 0
 12299                           ; Regs used in _init_adc: [wreg+status,2+status,0]
 12300  1F34  0021               	movlb	1	; select bank1
 12301  1F35  179E               	bsf	30,7	;volatile
 12302                           
 12303                           ;user.c: 105: ADCON1bits.ADCS = 0b110;
 12304  1F36  081E               	movf	30,w	;volatile
 12305  1F37  398F               	andlw	-113
 12306  1F38  3860               	iorlw	96
 12307  1F39  009E               	movwf	30	;volatile
 12308                           
 12309                           ;user.c: 106: ADCON1bits.ADPREF = 0b00;
 12310  1F3A  30FC               	movlw	-4
 12311  1F3B  059E               	andwf	30,f	;volatile
 12312                           
 12313                           ;user.c: 107: ADCON0bits.ADON = 0b1;
 12314  1F3C  141D               	bsf	29,0	;volatile
 12315  1F3D  0008               	return
 12316  1F3E                     __end_of_init_adc:	
 12317                           
 12318                           	psect	text42
 12319  1F13                     __ptext42:	
 12320 ;; *************** function _ConfigureOscillator *****************
 12321 ;; Defined at:
 12322 ;;		line 18 in file "system.c"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;		None
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;		None
 12327 ;; Return value:  Size  Location     Type
 12328 ;;                  1    wreg      void 
 12329 ;; Registers used:
 12330 ;;		wreg, status,2, status,0
 12331 ;; Tracked objects:
 12332 ;;		On entry : 0/0
 12333 ;;		On exit  : 0/0
 12334 ;;		Unchanged: 0/0
 12335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12340 ;;Total ram usage:        0 bytes
 12341 ;; Hardware stack levels used:    1
 12342 ;; Hardware stack levels required when called:    2
 12343 ;; This function calls:
 12344 ;;		Nothing
 12345 ;; This function is called by:
 12346 ;;		_main
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350                           
 12351                           ;psect for function _ConfigureOscillator
 12352  1F13                     _ConfigureOscillator:	
 12353                           
 12354                           ;system.c: 20: OSCCONbits.SCS = 0b00;
 12355                           
 12356                           ;incstack = 0
 12357                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
 12358  1F13  30FC               	movlw	-4
 12359  1F14  0021               	movlb	1	; select bank1
 12360  1F15  0599               	andwf	25,f	;volatile
 12361  1F16  0008               	return
 12362  1F17                     __end_of_ConfigureOscillator:	
 12363                           
 12364                           	psect	intentry
 12365  0004                     __pintentry:	
 12366 ;; *************** function _isr *****************
 12367 ;; Defined at:
 12368 ;;		line 23 in file "interrupts.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;		None
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;		None
 12373 ;; Return value:  Size  Location     Type
 12374 ;;                  1    wreg      void 
 12375 ;; Registers used:
 12376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12377 ;; Tracked objects:
 12378 ;;		On entry : 0/0
 12379 ;;		On exit  : 0/0
 12380 ;;		Unchanged: 0/0
 12381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12384 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12385 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12386 ;;Total ram usage:        5 bytes
 12387 ;; Hardware stack levels used:    1
 12388 ;; Hardware stack levels required when called:    1
 12389 ;; This function calls:
 12390 ;;		i1_set_leds_top
 12391 ;; This function is called by:
 12392 ;;		Interrupt level 1
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396  0004                     _isr:	
 12397                           
 12398                           ;incstack = 0
 12399                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12400  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12401  0005  3180               	pagesel	$
 12402  0006  0020               	movlb	0	; select bank0
 12403  0007  087F               	movf	127,w
 12404  0008  00F8               	movwf	??_isr+4
 12405                           
 12406                           ;interrupts.c: 24: extern volatile long timer;
 12407                           ;interrupts.c: 25: extern volatile long sub_timer;
 12408                           ;interrupts.c: 26: extern volatile long tap_timer;
 12409                           ;interrupts.c: 27: extern volatile long mod_timer;
 12410                           ;interrupts.c: 28: extern volatile long baseline_delay_time;
 12411                           ;interrupts.c: 29: extern volatile long delay_time;
 12412                           ;interrupts.c: 30: extern int top_push_state;
 12413                           ;interrupts.c: 31: extern uint8_t feedback_start;
 12414                           ;interrupts.c: 33: if (INTCONbits.TMR0IF == 1) {
 12415  0009  1D0B               	btfss	11,2	;volatile
 12416  000A  2882               	goto	i1l75
 12417                           
 12418                           ;interrupts.c: 34: timer = timer + 1;
 12419  000B  3001               	movlw	1
 12420  000C  00F4               	movwf	??_isr
 12421  000D  3000               	movlw	0
 12422  000E  00F5               	movwf	??_isr+1
 12423  000F  3000               	movlw	0
 12424  0010  00F6               	movwf	??_isr+2
 12425  0011  3000               	movlw	0
 12426  0012  00F7               	movwf	??_isr+3
 12427  0013  0021               	movlb	1	; select bank1
 12428  0014  0847               	movf	_timer^(0+128),w	;volatile
 12429  0015  07F4               	addwf	??_isr,f
 12430  0016  0848               	movf	(_timer+1)^(0+128),w	;volatile
 12431  0017  3DF5               	addwfc	??_isr+1,f
 12432  0018  0849               	movf	(_timer+2)^(0+128),w	;volatile
 12433  0019  3DF6               	addwfc	??_isr+2,f
 12434  001A  084A               	movf	(_timer+3)^(0+128),w	;volatile
 12435  001B  3DF7               	addwfc	??_isr+3,f
 12436  001C  0877               	movf	??_isr+3,w
 12437  001D  00CA               	movwf	(_timer+3)^(0+128)	;volatile
 12438  001E  0876               	movf	??_isr+2,w
 12439  001F  00C9               	movwf	(_timer+2)^(0+128)	;volatile
 12440  0020  0875               	movf	??_isr+1,w
 12441  0021  00C8               	movwf	(_timer+1)^(0+128)	;volatile
 12442  0022  0874               	movf	??_isr,w
 12443  0023  00C7               	movwf	_timer^(0+128)	;volatile
 12444                           
 12445                           ;interrupts.c: 35: sub_timer = sub_timer + 1;
 12446  0024  3001               	movlw	1
 12447  0025  00F4               	movwf	??_isr
 12448  0026  3000               	movlw	0
 12449  0027  00F5               	movwf	??_isr+1
 12450  0028  3000               	movlw	0
 12451  0029  00F6               	movwf	??_isr+2
 12452  002A  3000               	movlw	0
 12453  002B  00F7               	movwf	??_isr+3
 12454  002C  0843               	movf	_sub_timer^(0+128),w	;volatile
 12455  002D  07F4               	addwf	??_isr,f
 12456  002E  0844               	movf	(_sub_timer+1)^(0+128),w	;volatile
 12457  002F  3DF5               	addwfc	??_isr+1,f
 12458  0030  0845               	movf	(_sub_timer+2)^(0+128),w	;volatile
 12459  0031  3DF6               	addwfc	??_isr+2,f
 12460  0032  0846               	movf	(_sub_timer+3)^(0+128),w	;volatile
 12461  0033  3DF7               	addwfc	??_isr+3,f
 12462  0034  0877               	movf	??_isr+3,w
 12463  0035  00C6               	movwf	(_sub_timer+3)^(0+128)	;volatile
 12464  0036  0876               	movf	??_isr+2,w
 12465  0037  00C5               	movwf	(_sub_timer+2)^(0+128)	;volatile
 12466  0038  0875               	movf	??_isr+1,w
 12467  0039  00C4               	movwf	(_sub_timer+1)^(0+128)	;volatile
 12468  003A  0874               	movf	??_isr,w
 12469  003B  00C3               	movwf	_sub_timer^(0+128)	;volatile
 12470                           
 12471                           ;interrupts.c: 36: tap_timer = tap_timer + 1;
 12472  003C  3001               	movlw	1
 12473  003D  00F4               	movwf	??_isr
 12474  003E  3000               	movlw	0
 12475  003F  00F5               	movwf	??_isr+1
 12476  0040  3000               	movlw	0
 12477  0041  00F6               	movwf	??_isr+2
 12478  0042  3000               	movlw	0
 12479  0043  00F7               	movwf	??_isr+3
 12480  0044  0879               	movf	_tap_timer,w	;volatile
 12481  0045  07F4               	addwf	??_isr,f
 12482  0046  087A               	movf	_tap_timer+1,w	;volatile
 12483  0047  3DF5               	addwfc	??_isr+1,f
 12484  0048  087B               	movf	_tap_timer+2,w	;volatile
 12485  0049  3DF6               	addwfc	??_isr+2,f
 12486  004A  087C               	movf	_tap_timer+3,w	;volatile
 12487  004B  3DF7               	addwfc	??_isr+3,f
 12488  004C  0877               	movf	??_isr+3,w
 12489  004D  00FC               	movwf	_tap_timer+3	;volatile
 12490  004E  0876               	movf	??_isr+2,w
 12491  004F  00FB               	movwf	_tap_timer+2	;volatile
 12492  0050  0875               	movf	??_isr+1,w
 12493  0051  00FA               	movwf	_tap_timer+1	;volatile
 12494  0052  0874               	movf	??_isr,w
 12495  0053  00F9               	movwf	_tap_timer	;volatile
 12496                           
 12497                           ;interrupts.c: 37: mod_timer = mod_timer + 1;
 12498  0054  3001               	movlw	1
 12499  0055  00F4               	movwf	??_isr
 12500  0056  3000               	movlw	0
 12501  0057  00F5               	movwf	??_isr+1
 12502  0058  3000               	movlw	0
 12503  0059  00F6               	movwf	??_isr+2
 12504  005A  3000               	movlw	0
 12505  005B  00F7               	movwf	??_isr+3
 12506  005C  0022               	movlb	2	; select bank2
 12507  005D  0838               	movf	_mod_timer^(0+256),w	;volatile
 12508  005E  07F4               	addwf	??_isr,f
 12509  005F  0839               	movf	(_mod_timer+1)^(0+256),w	;volatile
 12510  0060  3DF5               	addwfc	??_isr+1,f
 12511  0061  083A               	movf	(_mod_timer+2)^(0+256),w	;volatile
 12512  0062  3DF6               	addwfc	??_isr+2,f
 12513  0063  083B               	movf	(_mod_timer+3)^(0+256),w	;volatile
 12514  0064  3DF7               	addwfc	??_isr+3,f
 12515  0065  0877               	movf	??_isr+3,w
 12516  0066  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
 12517  0067  0876               	movf	??_isr+2,w
 12518  0068  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
 12519  0069  0875               	movf	??_isr+1,w
 12520  006A  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
 12521  006B  0874               	movf	??_isr,w
 12522  006C  00B8               	movwf	_mod_timer^(0+256)	;volatile
 12523                           
 12524                           ;interrupts.c: 38: if (feedback_start == 1) {
 12525  006D  0021               	movlb	1	; select bank1
 12526  006E  0354               	decf	_feedback_start^(0+128),w
 12527  006F  1D03               	btfss	3,2
 12528  0070  2881               	goto	i1l3796
 12529                           
 12530                           ;interrupts.c: 39: feedback_timer++;
 12531  0071  3001               	movlw	1
 12532  0072  07CB               	addwf	_feedback_timer^(0+128),f	;volatile
 12533  0073  3000               	movlw	0
 12534  0074  3DCC               	addwfc	(_feedback_timer+1)^(0+128),f	;volatile
 12535                           
 12536                           ;interrupts.c: 40: if (feedback_timer > long_press_limit) {feedback_timer = long_press_l
      +                          imit;}
 12537  0075  084C               	movf	(_feedback_timer+1)^(0+128),w	;volatile
 12538  0076  0268               	subwf	(_long_press_limit+1)^(0+128),w
 12539  0077  1D03               	skipz
 12540  0078  287B               	goto	u371_25
 12541  0079  084B               	movf	_feedback_timer^(0+128),w	;volatile
 12542  007A  0267               	subwf	_long_press_limit^(0+128),w
 12543  007B                     u371_25:	
 12544  007B  1803               	skipnc
 12545  007C  2881               	goto	i1l3796
 12546  007D  0868               	movf	(_long_press_limit+1)^(0+128),w
 12547  007E  00CC               	movwf	(_feedback_timer+1)^(0+128)	;volatile
 12548  007F  0867               	movf	_long_press_limit^(0+128),w
 12549  0080  00CB               	movwf	_feedback_timer^(0+128)	;volatile
 12550  0081                     i1l3796:	
 12551                           
 12552                           ;interrupts.c: 41: }
 12553                           ;interrupts.c: 42: INTCONbits.TMR0IF = 0;
 12554  0081  110B               	bcf	11,2	;volatile
 12555  0082                     i1l75:	
 12556                           
 12557                           ;interrupts.c: 43: }
 12558                           ;interrupts.c: 45: if (timer >= baseline_delay_time) {
 12559  0082  0021               	movlb	1	; select bank1
 12560  0083  084A               	movf	(_timer+3)^(0+128),w	;volatile
 12561  0084  3A80               	xorlw	128
 12562  0085  00F4               	movwf	??_isr
 12563  0086  085E               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
 12564  0087  3A80               	xorlw	128
 12565  0088  0274               	subwf	??_isr,w
 12566  0089  1D03               	skipz
 12567  008A  2895               	goto	u372_23
 12568  008B  085D               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
 12569  008C  0249               	subwf	(_timer+2)^(0+128),w	;volatile
 12570  008D  1D03               	skipz
 12571  008E  2895               	goto	u372_23
 12572  008F  085C               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 12573  0090  0248               	subwf	(_timer+1)^(0+128),w	;volatile
 12574  0091  1D03               	skipz
 12575  0092  2895               	goto	u372_23
 12576  0093  085B               	movf	_baseline_delay_time^(0+128),w	;volatile
 12577  0094  0247               	subwf	_timer^(0+128),w	;volatile
 12578  0095                     u372_23:	
 12579  0095  1C03               	skipc
 12580  0096  28A2               	goto	i1l3802
 12581                           
 12582                           ;interrupts.c: 47: LATBbits.LATB4 = 1;
 12583  0097  0022               	movlb	2	; select bank2
 12584  0098  160D               	bsf	13,4	;volatile
 12585                           
 12586                           ;interrupts.c: 49: timer = 0;
 12587  0099  3000               	movlw	0
 12588  009A  0021               	movlb	1	; select bank1
 12589  009B  00CA               	movwf	(_timer+3)^(0+128)	;volatile
 12590  009C  3000               	movlw	0
 12591  009D  00C9               	movwf	(_timer+2)^(0+128)	;volatile
 12592  009E  3000               	movlw	0
 12593  009F  00C8               	movwf	(_timer+1)^(0+128)	;volatile
 12594  00A0  3000               	movlw	0
 12595  00A1  00C7               	movwf	_timer^(0+128)	;volatile
 12596  00A2                     i1l3802:	
 12597                           
 12598                           ;interrupts.c: 50: }
 12599                           ;interrupts.c: 52: if (timer >= 20) {
 12600  00A2  1BCA               	btfsc	(_timer+3)^(0+128),7	;volatile
 12601  00A3  28B3               	goto	i1l3806
 12602  00A4  084A               	movf	(_timer+3)^(0+128),w	;volatile
 12603  00A5  1D03               	btfss	3,2
 12604  00A6  28B1               	goto	i1l3804
 12605  00A7  0849               	movf	(_timer+2)^(0+128),w	;volatile
 12606  00A8  1D03               	btfss	3,2
 12607  00A9  28B1               	goto	i1l3804
 12608  00AA  0848               	movf	(_timer+1)^(0+128),w	;volatile
 12609  00AB  1D03               	btfss	3,2
 12610  00AC  28B1               	goto	i1l3804
 12611  00AD  3014               	movlw	20
 12612  00AE  0247               	subwf	_timer^(0+128),w	;volatile
 12613  00AF  1C03               	btfss	3,0
 12614  00B0  28B3               	goto	i1l3806
 12615  00B1                     i1l3804:	
 12616                           
 12617                           ;interrupts.c: 54: LATBbits.LATB4 = 0;
 12618  00B1  0022               	movlb	2	; select bank2
 12619  00B2  120D               	bcf	13,4	;volatile
 12620  00B3                     i1l3806:	
 12621                           
 12622                           ;interrupts.c: 56: }
 12623                           ;interrupts.c: 58: if (sub_timer >= delay_time) {
 12624  00B3  0021               	movlb	1	; select bank1
 12625  00B4  0846               	movf	(_sub_timer+3)^(0+128),w	;volatile
 12626  00B5  3A80               	xorlw	128
 12627  00B6  00F4               	movwf	??_isr
 12628  00B7  0862               	movf	(_delay_time+3)^(0+128),w	;volatile
 12629  00B8  3A80               	xorlw	128
 12630  00B9  0274               	subwf	??_isr,w
 12631  00BA  1D03               	skipz
 12632  00BB  28C6               	goto	u374_23
 12633  00BC  0861               	movf	(_delay_time+2)^(0+128),w	;volatile
 12634  00BD  0245               	subwf	(_sub_timer+2)^(0+128),w	;volatile
 12635  00BE  1D03               	skipz
 12636  00BF  28C6               	goto	u374_23
 12637  00C0  0860               	movf	(_delay_time+1)^(0+128),w	;volatile
 12638  00C1  0244               	subwf	(_sub_timer+1)^(0+128),w	;volatile
 12639  00C2  1D03               	skipz
 12640  00C3  28C6               	goto	u374_23
 12641  00C4  085F               	movf	_delay_time^(0+128),w	;volatile
 12642  00C5  0243               	subwf	_sub_timer^(0+128),w	;volatile
 12643  00C6                     u374_23:	
 12644  00C6  1C03               	skipc
 12645  00C7  28DF               	goto	i1l3814
 12646                           
 12647                           ;interrupts.c: 59: if (suspend_blink == 0) {
 12648  00C8  085A               	movf	_suspend_blink^(0+128),w	;volatile
 12649  00C9  1D03               	btfss	3,2
 12650  00CA  28D6               	goto	i1l3812
 12651                           
 12652                           ;interrupts.c: 60: set_leds_top(top_push_state, 1);
 12653  00CB  086E               	movf	(_top_push_state+1)^(0+128),w
 12654  00CC  00F1               	movwf	i1set_leds_top@x+1
 12655  00CD  086D               	movf	_top_push_state^(0+128),w
 12656  00CE  00F0               	movwf	i1set_leds_top@x
 12657  00CF  3001               	movlw	1
 12658  00D0  00F2               	movwf	i1set_leds_top@ledState
 12659  00D1  3000               	movlw	0
 12660  00D2  00F3               	movwf	i1set_leds_top@ledState+1
 12661  00D3  3187  27B7  3180   	fcall	i1_set_leds_top
 12662  00D6                     i1l3812:	
 12663                           
 12664                           ;interrupts.c: 61: }
 12665                           ;interrupts.c: 62: sub_timer = 0;
 12666  00D6  3000               	movlw	0
 12667  00D7  0021               	movlb	1	; select bank1
 12668  00D8  00C6               	movwf	(_sub_timer+3)^(0+128)	;volatile
 12669  00D9  3000               	movlw	0
 12670  00DA  00C5               	movwf	(_sub_timer+2)^(0+128)	;volatile
 12671  00DB  3000               	movlw	0
 12672  00DC  00C4               	movwf	(_sub_timer+1)^(0+128)	;volatile
 12673  00DD  3000               	movlw	0
 12674  00DE  00C3               	movwf	_sub_timer^(0+128)	;volatile
 12675  00DF                     i1l3814:	
 12676                           
 12677                           ;interrupts.c: 63: }
 12678                           ;interrupts.c: 65: if (sub_timer >= 20) {
 12679  00DF  1BC6               	btfsc	(_sub_timer+3)^(0+128),7	;volatile
 12680  00E0  28FB               	goto	i1l3820
 12681  00E1  0846               	movf	(_sub_timer+3)^(0+128),w	;volatile
 12682  00E2  1D03               	btfss	3,2
 12683  00E3  28EE               	goto	i1l3816
 12684  00E4  0845               	movf	(_sub_timer+2)^(0+128),w	;volatile
 12685  00E5  1D03               	btfss	3,2
 12686  00E6  28EE               	goto	i1l3816
 12687  00E7  0844               	movf	(_sub_timer+1)^(0+128),w	;volatile
 12688  00E8  1D03               	btfss	3,2
 12689  00E9  28EE               	goto	i1l3816
 12690  00EA  3014               	movlw	20
 12691  00EB  0243               	subwf	_sub_timer^(0+128),w	;volatile
 12692  00EC  1C03               	btfss	3,0
 12693  00ED  28FB               	goto	i1l3820
 12694  00EE                     i1l3816:	
 12695                           
 12696                           ;interrupts.c: 66: if (suspend_blink == 0) {
 12697  00EE  085A               	movf	_suspend_blink^(0+128),w	;volatile
 12698  00EF  1D03               	btfss	3,2
 12699  00F0  28FB               	goto	i1l3820
 12700                           
 12701                           ;interrupts.c: 67: set_leds_top(top_push_state, 0);
 12702  00F1  086E               	movf	(_top_push_state+1)^(0+128),w
 12703  00F2  00F1               	movwf	i1set_leds_top@x+1
 12704  00F3  086D               	movf	_top_push_state^(0+128),w
 12705  00F4  00F0               	movwf	i1set_leds_top@x
 12706  00F5  3000               	movlw	0
 12707  00F6  00F2               	movwf	i1set_leds_top@ledState
 12708  00F7  00F3               	movwf	i1set_leds_top@ledState+1
 12709  00F8  3187  27B7  3180   	fcall	i1_set_leds_top
 12710  00FB                     i1l3820:	
 12711                           
 12712                           ;interrupts.c: 68: }
 12713                           ;interrupts.c: 69: }
 12714                           ;interrupts.c: 72: if (preset_programmning_on == 1) {
 12715  00FB  0021               	movlb	1	; select bank1
 12716  00FC  0359               	decf	_preset_programmning_on^(0+128),w
 12717  00FD  1D03               	btfss	3,2
 12718  00FE  2925               	goto	i1l3832
 12719                           
 12720                           ;interrupts.c: 73: preset_blink++;
 12721  00FF  3001               	movlw	1
 12722  0100  00F4               	movwf	??_isr
 12723  0101  0874               	movf	??_isr,w
 12724  0102  07D8               	addwf	_preset_blink^(0+128),f
 12725                           
 12726                           ;interrupts.c: 75: if (preset_blink >= blink_delay) {
 12727  0103  0022               	movlb	2	; select bank2
 12728  0104  085B               	movf	(_blink_delay+1)^(0+256),w
 12729  0105  3A80               	xorlw	128
 12730  0106  3C80               	sublw	128
 12731  0107  1D03               	skipz
 12732  0108  290C               	goto	u379_25
 12733  0109  085A               	movf	_blink_delay^(0+256),w
 12734  010A  0021               	movlb	1	; select bank1
 12735  010B  0258               	subwf	_preset_blink^(0+128),w
 12736  010C                     u379_25:	
 12737  010C  1C03               	skipc
 12738  010D  292A               	goto	i1l3836
 12739                           
 12740                           ;interrupts.c: 76: LATBbits.LATB1 = 1;
 12741  010E  0022               	movlb	2	; select bank2
 12742  010F  148D               	bsf	13,1	;volatile
 12743                           
 12744                           ;interrupts.c: 77: if (preset_blink > blink_delay*2) {
 12745  0110  085B               	movf	(_blink_delay+1)^(0+256),w
 12746  0111  00F5               	movwf	??_isr+1
 12747  0112  085A               	movf	_blink_delay^(0+256),w
 12748  0113  00F4               	movwf	??_isr
 12749  0114  35F4               	lslf	??_isr,f
 12750  0115  0DF5               	rlf	??_isr+1,f
 12751  0116  0875               	movf	??_isr+1,w
 12752  0117  3A80               	xorlw	128
 12753  0118  00F6               	movwf	??_isr+2
 12754  0119  3080               	movlw	128
 12755  011A  0276               	subwf	??_isr+2,w
 12756  011B  1D03               	skipz
 12757  011C  2920               	goto	u380_25
 12758  011D  0021               	movlb	1	; select bank1
 12759  011E  0858               	movf	_preset_blink^(0+128),w
 12760  011F  0274               	subwf	??_isr,w
 12761  0120                     u380_25:	
 12762  0120  1803               	skipnc
 12763  0121  292C               	goto	i1l90
 12764                           
 12765                           ;interrupts.c: 78: preset_blink = 0;
 12766  0122  0021               	movlb	1	; select bank1
 12767  0123  01D8               	clrf	_preset_blink^(0+128)
 12768                           
 12769                           ;interrupts.c: 79: }
 12770                           ;interrupts.c: 81: } else {
 12771  0124  292C               	goto	i1l90
 12772  0125                     i1l3832:	
 12773                           ;interrupts.c: 83: }
 12774                           ;interrupts.c: 85: } else {
 12775                           
 12776                           ;interrupts.c: 82: LATBbits.LATB1 = 0;
 12777                           
 12778                           
 12779                           ;interrupts.c: 86: if (preset_blink > 0) {
 12780  0125  0021               	movlb	1	; select bank1
 12781  0126  0858               	movf	_preset_blink^(0+128),w
 12782  0127  1903               	btfsc	3,2
 12783  0128  292C               	goto	i1l90
 12784                           
 12785                           ;interrupts.c: 87: preset_blink = 0;
 12786  0129  01D8               	clrf	_preset_blink^(0+128)
 12787  012A                     i1l3836:	
 12788                           
 12789                           ;interrupts.c: 88: LATBbits.LATB1 = 0;
 12790  012A  0022               	movlb	2	; select bank2
 12791  012B  108D               	bcf	13,1	;volatile
 12792  012C                     i1l90:	
 12793  012C  0878               	movf	??_isr+4,w
 12794  012D  0020               	movlb	0	; select bank0
 12795  012E  00FF               	movwf	127
 12796  012F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12797  0130  0009               	retfie
 12798  0131                     __end_of_isr:	
 12799                           
 12800                           	psect	text44
 12801  07B7                     __ptext44:	
 12802 ;; *************** function i1_set_leds_top *****************
 12803 ;; Defined at:
 12804 ;;		line 16 in file "LEDs.c"
 12805 ;; Parameters:    Size  Location     Type
 12806 ;;  x               2    0[COMMON] int 
 12807 ;;  ledState        2    2[COMMON] int 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;		None
 12810 ;; Return value:  Size  Location     Type
 12811 ;;                  1    wreg      void 
 12812 ;; Registers used:
 12813 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12823 ;;Total ram usage:        4 bytes
 12824 ;; Hardware stack levels used:    1
 12825 ;; This function calls:
 12826 ;;		Nothing
 12827 ;; This function is called by:
 12828 ;;		_isr
 12829 ;; This function uses a non-reentrant model
 12830 ;;
 12831                           
 12832                           
 12833                           ;psect for function i1_set_leds_top
 12834  07B7                     i1_set_leds_top:	
 12835                           
 12836                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 12837                           
 12838                           ;incstack = 0
 12839                           ; Regs used in i1_set_leds_top: [wreg-fsr0h+status,2+status,0]
 12840  07B7  0027               	movlb	7	; select bank7
 12841  07B8  100C               	bcf	12,0	;volatile
 12842                           
 12843                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 12844  07B9  108C               	bcf	12,1	;volatile
 12845                           
 12846                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 12847  07BA  110C               	bcf	12,2	;volatile
 12848                           
 12849                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 12850  07BB  118C               	bcf	12,3	;volatile
 12851                           
 12852                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 12853  07BC  120C               	bcf	12,4	;volatile
 12854                           
 12855                           ;LEDs.c: 22: switch (x) {
 12856  07BD  2FE2               	goto	i1l3780
 12857  07BE                     i1l3768:	
 12858                           ;LEDs.c: 23: case 1:
 12859                           
 12860                           
 12861                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 12862  07BE  0C72               	rrf	i1set_leds_top@ledState,w
 12863  07BF  1C03               	skipc
 12864  07C0  100C               	bcf	12,0	;volatile
 12865  07C1  1803               	skipnc
 12866  07C2  140C               	bsf	12,0	;volatile
 12867                           
 12868                           ;LEDs.c: 25: break;
 12869  07C3  0008               	return
 12870  07C4                     i1l3770:	
 12871                           ;LEDs.c: 26: case 2:
 12872                           
 12873                           
 12874                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 12875  07C4  0C72               	rrf	i1set_leds_top@ledState,w
 12876  07C5  1C03               	skipc
 12877  07C6  108C               	bcf	12,1	;volatile
 12878  07C7  1803               	skipnc
 12879  07C8  148C               	bsf	12,1	;volatile
 12880                           
 12881                           ;LEDs.c: 28: break;
 12882  07C9  0008               	return
 12883  07CA                     i1l3772:	
 12884                           ;LEDs.c: 29: case 3:
 12885                           
 12886                           
 12887                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 12888  07CA  0C72               	rrf	i1set_leds_top@ledState,w
 12889  07CB  1C03               	skipc
 12890  07CC  110C               	bcf	12,2	;volatile
 12891  07CD  1803               	skipnc
 12892  07CE  150C               	bsf	12,2	;volatile
 12893                           
 12894                           ;LEDs.c: 31: break;
 12895  07CF  0008               	return
 12896  07D0                     i1l3774:	
 12897                           ;LEDs.c: 32: case 4:
 12898                           
 12899                           
 12900                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 12901  07D0  0C72               	rrf	i1set_leds_top@ledState,w
 12902  07D1  1C03               	skipc
 12903  07D2  118C               	bcf	12,3	;volatile
 12904  07D3  1803               	skipnc
 12905  07D4  158C               	bsf	12,3	;volatile
 12906                           
 12907                           ;LEDs.c: 34: break;
 12908  07D5  0008               	return
 12909  07D6                     i1l3776:	
 12910                           ;LEDs.c: 35: case 5:
 12911                           
 12912                           
 12913                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 12914  07D6  0C72               	rrf	i1set_leds_top@ledState,w
 12915  07D7  1C03               	skipc
 12916  07D8  120C               	bcf	12,4	;volatile
 12917  07D9  1803               	skipnc
 12918  07DA  160C               	bsf	12,4	;volatile
 12919                           
 12920                           ;LEDs.c: 39: break;
 12921                           
 12922                           ;LEDs.c: 38: case 6:
 12923                           
 12924                           ;LEDs.c: 37: break;
 12925  07DB  0008               	return
 12926  07DC                     i1l640:	
 12927                           ;LEDs.c: 40: case 100:
 12928                           
 12929                           
 12930                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 12931  07DC  140C               	bsf	12,0	;volatile
 12932                           
 12933                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 12934  07DD  148C               	bsf	12,1	;volatile
 12935                           
 12936                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 12937  07DE  150C               	bsf	12,2	;volatile
 12938                           
 12939                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 12940  07DF  158C               	bsf	12,3	;volatile
 12941                           
 12942                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 12943  07E0  160C               	bsf	12,4	;volatile
 12944                           
 12945                           ;LEDs.c: 47: }
 12946                           
 12947                           ;LEDs.c: 46: break;
 12948  07E1  0008               	return
 12949  07E2                     i1l3780:	
 12950                           
 12951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12952                           ; Switch size 1, requested type "space"
 12953                           ; Number of cases is 1, Range of values is 0 to 0
 12954                           ; switch strategies available:
 12955                           ; Name         Instructions Cycles
 12956                           ; simple_byte            4     3 (average)
 12957                           ; direct_byte            8     6 (fixed)
 12958                           ; jumptable            260     6 (fixed)
 12959                           ;	Chosen strategy is simple_byte
 12960  07E2  0871               	movf	i1set_leds_top@x+1,w
 12961  07E3  3A00               	xorlw	0	; case 0
 12962  07E4  1903               	skipnz
 12963  07E5  2FE7               	goto	i1l4402
 12964  07E6  2FFE               	goto	i1l641
 12965  07E7                     i1l4402:	
 12966                           
 12967                           ; Switch size 1, requested type "space"
 12968                           ; Number of cases is 7, Range of values is 1 to 100
 12969                           ; switch strategies available:
 12970                           ; Name         Instructions Cycles
 12971                           ; simple_byte           22    12 (average)
 12972                           ; direct_byte          209     9 (fixed)
 12973                           ; jumptable            263     9 (fixed)
 12974                           ;	Chosen strategy is simple_byte
 12975  07E7  0870               	movf	i1set_leds_top@x,w
 12976  07E8  3A01               	xorlw	1	; case 1
 12977  07E9  1903               	skipnz
 12978  07EA  2FBE               	goto	i1l3768
 12979  07EB  3A03               	xorlw	3	; case 2
 12980  07EC  1903               	skipnz
 12981  07ED  2FC4               	goto	i1l3770
 12982  07EE  3A01               	xorlw	1	; case 3
 12983  07EF  1903               	skipnz
 12984  07F0  2FCA               	goto	i1l3772
 12985  07F1  3A07               	xorlw	7	; case 4
 12986  07F2  1903               	skipnz
 12987  07F3  2FD0               	goto	i1l3774
 12988  07F4  3A01               	xorlw	1	; case 5
 12989  07F5  1903               	skipnz
 12990  07F6  2FD6               	goto	i1l3776
 12991  07F7  3A03               	xorlw	3	; case 6
 12992  07F8  1903               	skipnz
 12993  07F9  2FFE               	goto	i1l641
 12994  07FA  3A62               	xorlw	98	; case 100
 12995  07FB  1903               	skipnz
 12996  07FC  2FDC               	goto	i1l640
 12997  07FD  2FFE               	goto	i1l641
 12998  07FE                     i1l641:	
 12999  07FE  0008               	return
 13000  07FF                     __end_ofi1_set_leds_top:	
 13001  007E                     btemp	set	126	;btemp
 13002  007E                     int$flags	set	126
 13003  007E                     wtemp	set	126
 13004  007E                     wtemp0	set	126
 13005  0080                     wtemp1	set	128
 13006  0082                     wtemp2	set	130
 13007  0084                     wtemp3	set	132
 13008  0086                     wtemp4	set	134
 13009  0088                     wtemp5	set	136
 13010  007F                     wtemp6	set	127
 13011  007E                     ttemp	set	126
 13012  007E                     ttemp0	set	126
 13013  0081                     ttemp1	set	129
 13014  0084                     ttemp2	set	132
 13015  0087                     ttemp3	set	135
 13016  007F                     ttemp4	set	127
 13017  007E                     ltemp	set	126
 13018  007E                     ltemp0	set	126
 13019  0082                     ltemp1	set	130
 13020  0086                     ltemp2	set	134
 13021  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1068
    BSS         202
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     79      80
    BANK1            80     35      80
    BANK2            80      0      79
    BANK3            80      0      52
    BANK4            80      0      58
    BANK5            80      0      58
    BANK6            80      0      58
    BANK7            80      0      80
    BANK8            80      0      80
    BANK9            80      0      58
    BANK10           80      0      64
    BANK11            8      0       0
    BANK12            0      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_set_leds_top

Critical Paths under _main in BANK0

    _main->___fttol
    _updateSwitchBypass->_setSwitchBypassState
    _setFeedbackState->_wait_ms
    _showBootSequence->_star_tactiles
    _star_tactiles->_wait_ms
    _solidring_tactiles->_wait_ms
    _set_subdivision->___fttol
    ___fttol->_map
    ___awtoft->___ftpack
    _read_top_tactile->_wait_ms
    _read_bottom_tactile->_wait_ms
    _modulation->___aldiv
    ___aldiv->___wmul
    _map->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___ftadd->___ftpack
    _initSwitchBypass->_setSwitchBypassState
    _setSwitchBypassState->_wait_ms
    _wait_ms->___lmul
    ___altoft->___ftpack
    _ReadSavedSettings->_set_leds_top

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_set_subdivision
    _set_subdivision->___fttol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   48976
                                             10 BANK1     25    25      0
                _ConfigureOscillator
                            _InitApp
                     _InitializeTaps
                  _ReadSavedSettings
                            ___aldiv
                           ___altoft
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                        _adc_convert
                   _initSwitchBypass
                                _map
                         _modulation
                _read_bottom_tactile
                   _read_top_tactile
                    _set_subdivision
                   _showBootSequence
                 _updateSwitchBypass
                        _update_mode
 ---------------------------------------------------------------------------------
 (1) _update_mode                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _updateSwitchBypass                                   1     1      0    3648
                                             18 BANK0      1     1      0
                   _setFeedbackState
               _setSwitchBypassState
 ---------------------------------------------------------------------------------
 (2) _setFeedbackState                                     2     0      2    1760
                                             14 BANK0      2     0      2
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _showBootSequence                                     1     1      0    6591
                                             21 BANK0      1     1      0
                 _getCurrentLEDState
                    _restoreLEDState
                 _solidring_tactiles
                      _star_tactiles
 ---------------------------------------------------------------------------------
 (2) _star_tactiles                                        7     7      0    3374
                                             14 BANK0      7     7      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _solidring_tactiles                                   3     3      0    3217
                                             14 BANK0      3     3      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _restoreLEDState                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurrentLEDState                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_subdivision                                      4     0      4    7414
                                              6 BANK1      4     0      4
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4    1020
                                             71 BANK0      8     4      4
                                              0 BANK1      6     6      0
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2904
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _read_top_tactile                                     1     1      0    2702
                                             14 BANK0      1     1      0
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _read_bottom_tactile                                  1     1      0    1992
                                             14 BANK0      1     1      0
                    _set_leds_bottom
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _modulation                                          12     8      4     971
                                             21 BANK0     12     8      4
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     556
                                              6 BANK0     15     7      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _map                                                 18     3     15   11745
                                             53 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     237
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3203
                                             21 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2645
                                             37 BANK0     16    10      6
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3563
                                              8 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _initSwitchBypass                                     2     2      0    1911
                                             18 BANK0      2     2      0
               _getSwitchBypassState
               _setSwitchBypassState
 ---------------------------------------------------------------------------------
 (2) _setSwitchBypassState                                 4     2      2    1888
                                             14 BANK0      4     2      2
            _updateSwitchBypassState
                            _wait_ms
 ---------------------------------------------------------------------------------
 (3) _wait_ms                                              2     0      2    1522
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     220
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _updateSwitchBypassState                              2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getSwitchBypassState                                 2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_convert                                          4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___altoft                                             8     4      4    2311
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2109
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReadSavedSettings                                    0     0      0    1909
                     _FLASH_ReadWord
                    _set_leds_bottom
                       _set_leds_top
 ---------------------------------------------------------------------------------
 (3) _set_leds_top                                         4     0      4    1180
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _set_leds_bottom                                      2     0      2     470
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     259
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitializeTaps                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
                           _init_pwm
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
                        _init_timer0
                        _init_timer2
 ---------------------------------------------------------------------------------
 (3) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0     236
                                              4 COMMON     5     5      0
                     i1_set_leds_top
 ---------------------------------------------------------------------------------
 (6) i1_set_leds_top                                       4     0      4     236
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_adc
     _init_pwm
       _init_timer0
       _init_timer2
   _InitializeTaps
   _ReadSavedSettings
     _FLASH_ReadWord
     _set_leds_bottom
     _set_leds_top
   ___aldiv
     ___wmul (ARG)
   ___altoft
     ___ftpack
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___altoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___fttol
     ___altoft (ARG)
       ___ftpack
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     _map (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _adc_convert
   _initSwitchBypass
     _getSwitchBypassState
     _setSwitchBypassState
       _updateSwitchBypassState
       _wait_ms
         ___lmul
   _map
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   _modulation
     ___aldiv
       ___wmul (ARG)
     ___wmul
   _read_bottom_tactile
     _set_leds_bottom
     _wait_ms
       ___lmul
   _read_top_tactile
     _set_leds_top
     _wait_ms
       ___lmul
   _set_subdivision
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       _map (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
   _showBootSequence
     _getCurrentLEDState
     _restoreLEDState
     _solidring_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
     _star_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
   _updateSwitchBypass
     _setFeedbackState
       _wait_ms
         ___lmul
     _setSwitchBypassState
       _updateSwitchBypassState
       _wait_ms
         ___lmul
   _update_mode

 _isr (ROOT)
   i1_set_leds_top

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     23      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      34      11       65.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      3A      13       72.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3A      15       72.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0     2F9      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      3A      18       72.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      3A      24       72.5%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0      40      26       80.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     2F9      28        0.0%
BANK11               8      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12               0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Oct 17 22:45:42 2016

                     _update_mode 13CD                      ___altoft@exp 002E                       __CFG_CP$OFF 0000  
                   ___altoft@sign 002F                      ___awdiv@sign 0026               ___wmul@multiplicand 0022  
                    ___ftadd@exp1 0034                      ___ftadd@exp2 0033                      ___ftadd@sign 0032  
                             l260 095B                               l334 10F5                               l270 09C7  
                             l282 0AE9                               l276 09FB                               l640 15CA  
                             l641 15EE                               l650 126A                               l298 0DF9  
            __size_of_adc_convert 0019                               l483 055C                               l652 126D  
                             l653 1291                               l645 125E                               l647 1261  
                             l495 1FBA                               l648 1264                               l760 112B  
                             l649 1267                               l780 13F6                               l781 13FA  
                             l782 140A                               l768 1165                               l946 0766  
                             l778 13F3                               l947 0749                               _PR2 001B  
    solidring_tactiles@ring_delay 0030                               _map 16D6                               _isr 0004  
                             _tap 01A0                      __CFG_BORV$LO 0000                               wreg 0009  
                    __CFG_IESO$ON 0000                      __CFG_FOSC$HS 0000           __end_of_set_leds_bottom 1292  
                    __CFG_LVP$OFF 0000                      ___ftdiv@cntr 004F                      ___ftdiv@sign 0054  
                            _B25k 03A0                              l1127 1665                              l1240 1635  
                            l1072 1FCD                              l1241 163D                              l1233 1622  
                            l1324 17DE                              l3032 15FF                              l1264 05FC  
                            l4000 0EAA                              l3018 1274                              l3042 1627  
                            l3034 1609                              l3202 1FC7                              l3044 162F  
                            l3036 160E                              l3028 15F8                              l3300 05C8  
                            l3124 0843                              l4020 0EED                              l4012 0ECC  
                            l4004 0EB5                              l3302 05D2                              l4030 0F46  
                            l3312 05EE                              l3304 05D7                              l3232 1686  
                            l3224 1676                              l4008 0EC0                              l4024 0EF0  
                            l3170 143A                              l3322 0620                              l3314 05F8  
                            l3306 05DB                              l3402 06BB                              l3250 16CD  
                            l3242 16B4                              l3234 1694                              l4018 0EEA  
                            l4026 0F0A                              l3332 063B                              l4044 0FC2  
                            l3510 1521                              l3318 060E                              l3342 0894  
                            l3414 06D7                              l3406 06C3                              l3246 16BF  
                            l3262 100B                              l4046 0F6D                              l4400 127A  
                            l3272 0585                              l3192 1339                              l4048 0FC8  
                            l3282 059B                              l3370 0904                              l3362 08EB  
                            l3418 06DF                              l3442 177C                              l3610 071D  
                            l3276 058C                              l3348 08AA                              l3460 17B5  
                            l3700 0542                              l3294 05B5                              l3390 0680  
                            l3470 17E2                              l3462 17C6                              l3622 073C  
                            l3614 0730                              l3384 066A                              l3536 1120  
                            l3730 1554                              l3474 17F0                              l3570 140E  
                            l3716 12A7                              l3548 1151                              l3468 17D4  
                            l3644 0778                              l3718 12B7                              l3654 079A  
                            l3646 077C                              l3910 0AA7                              ?_map 0055  
                            l3736 155F                              l3568 13FE                              l3904 0A3B  
                            l3920 0AF0                              l3762 1596                              l3754 1585  
                            l3746 1567                              l2970 10AC                              l3690 0492  
                            l4394 0EF6                              l3906 0A89                              l3748 1573  
                            l4396 0548                              l3692 04BE                              l3940 0BFB  
                            l3860 095F                              l4398 15D7                              l2990 15BA  
                            l3758 158E                              l2974 10B6                              l3694 04EA  
                            l3934 0B66                              l3870 0988                              l3918 0AED  
                            l3862 0962                              l3846 0935                              l2992 15C2  
                            l2984 15A2                              l3696 0516                              l3688 0465  
                            l3952 0C95                              l3944 0C3B                              l3880 09A4  
                            l2986 15AA                              l3882 09CB                              l2988 15B2  
                            l2996 15D1                              l3972 0DB4                              l3964 0D2F  
                            l3956 0CD5                              l3884 09D9                              l3990 0E46  
                            l3976 0DF4                              l3968 0D6F                              l3896 0A2F  
                            l3888 09F3                              l3994 0E54                              l3986 0E3D  
                            l3996 0E95                              ?_isr 0070                              u3005 08EC  
                            u3015 08FB                              u3025 0905                              u3105 06CA  
                            u2315 10B7                              u3300 151F                              u2325 10BE  
                            u4005 0A8D                              u2415 162A                              u3135 06E0  
                            u3215 17B6                              u3145 06E6                              u3065 068C  
                            u2505 0850                              u4105 0DD2                              u4025 0B47  
                            u2530 1438                              u3075 069C                              u4123 0E21  
                            u4115 0DF2                              u4035 0B64                              u2525 141C  
                            u2605 1FD3                              u3245 17D5                              u4045 0C19  
                            u2455 1644                              u2375 1604                              u3095 06C4  
                            u3335 1119                              u4055 0C39                              u2560 1337  
                            u3185 1784                              u4065 0CB3                              u3275 102E  
                            u2395 161D                              u2555 1317                              u3435 0716  
                            u4075 0CD3                              u3285 1034                              u3365 114A  
                            u3525 0788                              u3445 0729                              u4165 0E4F  
                            u4085 0D4D                              u2655 1689                              u4095 0D6D  
                            u3625 156A                              u2825 05B6                              u4193 0FB3  
                            u4185 0F9B                              u2915 05EF                              u2675 1695  
                            u2595 1FCE                              u3395 13E0                              u3645 1574  
                            u2685 16A9                              u3575 12AC                              u3655 157E  
                            u2855 05C9                              u2695 16B5                              u3495 0750  
                            u3665 1586                              u3835 0951                              u2885 05DC  
                            u3925 09E3                              u2985 08BC                              u3945 0A0A  
                            u3865 0978                              i1l90 012C                              i1l75 0082  
                            u2995 08CC                              u3955 0A19                              u3965 0A48  
                            u3885 09B3                              u3975 0A5D                              u3895 09AD  
                            u3985 0A71                              u3995 0A42                     _star_tactiles 080E  
                    __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000                              _iCnt 00D5  
                            _mod1 04A0                              _mod2 0220                              _mod3 02A0  
                            _mod4 0320                              _mod5 2378                              _main 0926  
                    ___ftpack@arg 0020                      ___ftpack@exp 0023                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            fsr1l 0006                              map@x 0055                              btemp 007E  
                   __CFG_BOREN$ON 0000                              ltemp 007E          __end_of_setFeedbackState 134C  
                            start 0131                              ttemp 007E                              wtemp 007E  
    __end_of_getSwitchBypassState 1F1B      __end_of_setSwitchBypassState 1458                   ?i1_set_leds_top 0070  
                   __CFG_MCLRE$ON 0000                      ___ftmul@cntr 0043                      ___ftmul@sign 0044  
                 __end_of_InitApp 10A3                 ??_restoreLEDState 0020                      ___fttol@exp1 00A5  
                           ??_map 0064                      ___fttol@lval 00A1                             ??_isr 0074  
                 _switchBypass_up 016A         __size_of_initSwitchBypass 000F                   __end_of___aldiv 16D6  
                           ?_main 0070                   __end_of___awdiv 159B                   __end_of___ftadd 0653  
                           _CCPR1 0291                             _CCPR2 0298                             _CCPR3 0311  
                           _CCPR4 0318                             _CCPR5 031C                             _CCPR9 061A  
                   __CFG_WDTE$OFF 0000                   __end_of___ftdiv 0926                   __end_of___ftneg 1F34  
                 __end_of___ftmul 0707                   ___awdiv@divisor 0020                   __end_of___fttol 1800  
                           i1l640 07DC                             i1l641 07FE                   ___awdiv@counter 0025  
                           _iB25k 0420               _ConfigureOscillator 1F13                 main@tapCntDivisor 00BB  
                    ?_init_timer0 0070                      ?_init_timer2 0070               ___lmul@multiplicand 0024  
                 _switchTap_state 00EF                     ___awtoft@sign 002D                             _delay 23F2  
                           _myBuf 0520                     ___ftpack@sign 0024                             _timer 00C7  
                  ?_star_tactiles 0070                             main@i 00B9                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                 __end_of_wait_ms 1104                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003       __end_of_read_bottom_tactile 1135                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
            ?_ConfigureOscillator 0070                _getCurrentLEDState 1F59                _updateSwitchBypass 0707  
                 __initialization 0133           _updateSwitchBypassState 0002                      _switchTap_up 016C  
                    __end_of_main 1000           __size_of_InitializeTaps 0026               ?_getCurrentLEDState 0070  
             ?_updateSwitchBypass 0070                    __CFG_LPBOR$OFF 0000                   _set_subdivision 0464  
                          ??_main 00AA                     ___fttol@sign1 00A0           __size_of_FLASH_ReadWord 0020  
      __end_of_solidring_tactiles 138C                    _feedback_timer 00CB                    _feedback_state 015E  
                  _feedback_start 00D4                  ?_set_leds_bottom 0020                  __end_of___altoft 12CF  
                          _ADRESH 009C                            _ADRESL 009B                  ___awdiv@dividend 0022  
             _baseline_delay_time 00DB              ??_getCurrentLEDState 0020                  __end_of___awtoft 1022  
                __end_of___ftpack 1654              ??_updateSwitchBypass 0032                            i1l4402 07E7  
                          i1l3802 00A2                            i1l3820 00FB                            i1l3812 00D6  
                          i1l3804 00B1                            i1l3814 00DF                            i1l3806 00B3  
                          i1l3832 0125                            i1l3816 00EE                            i1l3770 07C4  
                          i1l3772 07CA                            i1l3780 07E2                            i1l3836 012A  
                          i1l3774 07D0                            i1l3776 07D6                            i1l3768 07BE  
                          i1l3796 0081                            _PMADRH 0192                            _PMADRL 0191  
                          _PMDATH 0194                            _PMDATL 0193                            u371_25 007B  
                          _PMCON2 0196                            u372_23 0095                            u380_25 0120  
                          u374_23 00C6                            u379_25 010C                    _debounce_count 0140  
                  _debounce_mode1 0142                    _debounce_mode2 0144                         ??_InitApp 0020  
           ??_ConfigureOscillator 0020          __end_of_read_top_tactile 116F                    __CFG_PWRTE$OFF 0000  
                          ___lmul 10A3                         ??___aldiv 002E                  _switchTap_toggle 0158  
                          ___wmul 1FC4                         ??___awdiv 0024                         ??___ftadd 002E  
                  __CFG_STVREN$ON 0000                         ??___ftdiv 004B                         ??___ftneg 0023  
                       ??___ftmul 003B                         ??___fttol 006B                  __end_of_init_adc 1F3E  
                __end_of_init_pwm 13CD         __size_of_showBootSequence 002B                  ___awdiv@quotient 0027  
           ___ftmul@f3_as_product 0040                      __pdataBIGRAM 2378           FLASH_ReadWord@flashAddr 0020  
                    __pdataCOMMON 007D              _getSwitchBypassState 1F17                         ??_wait_ms 002E  
            _setSwitchBypassState 1412                   ??_star_tactiles 002E           __end_of__initialization 01E8  
                      ___altoft@c 0028                        ___ftadd@f1 0028                        ___ftadd@f2 002B  
               _bypass_turning_on 00D3                        ___ftdiv@f1 0048                        ___ftdiv@f2 0045  
                      ___ftdiv@f3 0050                    _top_push_state 00ED         ??_updateSwitchBypassState 0022  
                      ___ftneg@f1 0020               _switchBypass_toggle 0156                        ___awtoft@c 0028  
         __end_of_set_subdivision 055D                        ___ftmul@f1 0035                        ___ftmul@f2 0038  
                      ___fttol@f1 0067                      ?_update_mode 0070                    __pcstackCOMMON 0070  
                    __pidataBANK0 0003                      __pidataBANK1 1F80                      __pidataBANK2 1F6B  
                    __pidataBANK4 121D                      __pidataBANK5 11E3                      __pidataBANK6 11A9  
                    __pidataBANK7 14A8                      __pidataBANK8 1458                      __pidataBANK9 116F  
                _initSwitchBypass 1F4A                    _OPTION_REGbits 0095             ?_getSwitchBypassState 0020  
           ?_setSwitchBypassState 002E              __size_of_init_timer0 0007              __size_of_init_timer2 0009  
                      __pbssBANK1 00C3                        __pbssBANK2 0120                        __pbssBANK3 01A0  
                ??i1_set_leds_top 0074                   _restoreLEDState 1F95                   __CFG_VCAPEN$OFF 0000  
               ?_setFeedbackState 002E                        _delay_time 00DF                  _long_press_limit 00E7  
                      _delayfound 0148                        __pmaintext 0926                ??_setFeedbackState 0030  
                  _InitializeTaps 1022                           ?___lmul 0020                           ?___wmul 0020  
                      __pintentry 0004                        _blink_rate 007D                     ??_adc_convert 0022  
                       ?___altoft 0028                    ___lmul@product 0028                         ?___awtoft 0028  
                       ?___ftpack 0020                    _FLASH_ReadWord 1FE0   __end_of_updateSwitchBypassState 0003  
                     modulation@x 0035                       modulation@y 0037                   _debounce_bypass 013E  
                   _suspend_blink 00DA                         ?_init_adc 0070                         ?_init_pwm 0070  
                         _InitApp 1073            __end_of_InitializeTaps 1048                     ?_set_leds_top 0020  
                      _knob1_prev 00E5                        _knob2_prev 0160                        _knob3_prev 0162  
                      _knob4_prev 0164                        _knob5_prev 0166                  ?_set_subdivision 00A6  
                         ___aldiv 1654                           ___awdiv 1549                   __size_of___lmul 0030  
                         ___ftadd 055D                           ___ftdiv 087D                           ___ftneg 1F2B  
                      _knob_1_pos 014A                        _knob_2_pos 014C                   __size_of___wmul 001C  
                         ___ftmul 0653                        _knob_3_pos 014E                           ___fttol 1761  
                      _knob_4_pos 0150                        _knob_5_pos 0152                 _switchTap_pressed 00D1  
                      ??___altoft 002C                  _showBootSequence 1048            __end_of_FLASH_ReadWord 2000  
                      ??___awtoft 002B                        ??___ftpack 0025                InitializeTaps@itap 0021  
                         __ptext1 13CD                           __ptext2 0707                           __ptext3 130D  
                         __ptext4 1048                           __ptext5 080E                           __ptext6 134C  
                         __ptext7 1F95                           __ptext8 1F59                           __ptext9 0464  
          ??_getSwitchBypassState 0022                         _T2CONbits 001C                      __size_of_map 008B  
                    __size_of_isr 012D            ??_setSwitchBypassState 0030               __end_of_adc_convert 1FC4  
                ___aldiv@dividend 002A                           _wait_ms 10D3           __end_of_restoreLEDState 1FAB  
                         clrloop0 0803              end_of_initialization 01E8                        _modulation 12CF  
                         init_ram 1F3E                        ??_init_adc 0020                           initloop 1F3F  
                      ??_init_pwm 0020      updateSwitchBypassState@state 0020                _solidring_tactiles 134C  
                  ??_set_leds_top 0024                 ?_read_top_tactile 0070                   ?_InitializeTaps 0070  
          i1set_leds_top@ledState 0072                ??_read_top_tactile 002E                  ___aldiv@quotient 0031  
    __size_of_read_bottom_tactile 0031               ?_solidring_tactiles 0070                       wait_ms@time 002C  
       FLASH_ReadWord@GIEBitValue 0022              __size_of_update_mode 0045                   ?_FLASH_ReadWord 0020  
                       _PORTCbits 000E                         _PORTDbits 000F                         _PORTEbits 0010  
            star_tactiles@reverse 0030                         _TRISBbits 008D                         _TRISCbits 008E  
                       _TRISDbits 008F                         _TRISEbits 0090                         _TRISFbits 030C  
                       _TRISGbits 030D                         _SPI_Value 013C           setFeedbackState@f_state 002E  
            ??_solidring_tactiles 002E       __end_of_ConfigureOscillator 1F17       __size_of_getCurrentLEDState 0012  
                      map@out_max 0061                        map@out_min 005E       __size_of_updateSwitchBypass 00B0  
        __end_of_initSwitchBypass 1F59                       _CCP1CONbits 0293                       ___ftdiv@exp 0053  
        __size_of_set_leds_bottom 003B                       _CCP2CONbits 029A              _switchBypass_pressed 00CF  
                     _CCP3CONbits 0313                       _CCP4CONbits 031A                       _CCP5CONbits 031E  
                     _CCP6CONbits 0613                       _CCP7CONbits 0616                       ___ftmul@exp 003F  
              adc_convert@channel 0023                       _CCP8CONbits 0619                       _CCP9CONbits 061C  
            set_leds_top@ledState 0022                    __end_of___lmul 10D3                     __pidataBIGRAM 01EC  
                  __end_of___wmul 1FE0                       _adc_convert 1FAB                     __pidataCOMMON 07FF  
             start_initialization 0133                       __end_of_map 1761                       __end_of_isr 0131  
                ?_restoreLEDState 0070             __end_of_star_tactiles 087D                       ?_modulation 0035  
                        ??___lmul 0028                          ??___wmul 0024                       __pdataBANK0 006F  
                     __pdataBANK1 00DB                       __pdataBANK2 015A                       __pdataBANK4 0220  
                     __pdataBANK5 02A0                       __pdataBANK6 0320                       __pdataBANK7 03A0  
                     __pdataBANK8 0420                       __pdataBANK9 04A0                     _tap_iteration 00EB  
               __size_of___altoft 003D                       __pbssBANK10 0520         __size_of_setFeedbackState 003F  
               __size_of___awtoft 0022                 __size_of___ftpack 0065                     ??_init_timer0 0020  
                   ??_init_timer2 0020                       __pbssCOMMON 0079              __end_of_set_leds_top 15EF  
                       ___latbits 0003                _switchBypass_state 006F                     __pcstackBANK0 0020  
                   __pcstackBANK1 00A0                     _delay_counter 0146          __end_of_showBootSequence 1073  
        ?_updateSwitchBypassState 0020                          ?_InitApp 0070                 __size_of_init_adc 000A  
               __size_of_init_pwm 0041                          ?___aldiv 0026                 ??_set_leds_bottom 0022  
                        ?___awdiv 0020                          ?___ftadd 0028                          ?___ftdiv 0045  
                        ?___ftneg 0020                          ?___ftmul 0035                          ?___fttol 0067  
                     _blink_delay 015A               __size_of_modulation 003E                       _blink_state 016E  
                        _CCPTMRS0 029D                          _CCPTMRS1 029E                          _CCPTMRS2 029F  
                        ?_wait_ms 002C               _read_bottom_tactile 1104               __end_of_init_timer0 1F22  
             __end_of_init_timer2 1F2B                         _mod_value 0154                         _mod_timer 0138  
                ??_InitializeTaps 0020                   ___aldiv@divisor 0026                   ___aldiv@counter 002F  
                  ___wmul@product 0024                          _LATBbits 010D                          _LATDbits 010F  
                        _LATFbits 038C                          _LATGbits 038D                    _mod_delay_time 0168  
                       clear_ram0 0802                         _tap_timer 0079                         _tap_total 01CC  
                   set_leds_top@x 0020                  ??_FLASH_ReadWord 0022              ?_read_bottom_tactile 0070  
         __size_ofi1_set_leds_top 0048         initSwitchBypass@initState 0032                         map@in_max 005B  
                       map@in_min 0058                         _sub_timer 00C3                        _ADCON0bits 009D  
                      _ADCON1bits 009E                         main@i_342 00BF                         main@i_343 00C1  
        __size_of_set_subdivision 00F9                 ___wmul@multiplier 0020                  set_subdivision@x 00A6  
                set_subdivision@y 00A8         __size_of_read_top_tactile 003A     __size_of_getSwitchBypassState 0004  
   __size_of_setSwitchBypassState 0046                 ___lmul@multiplier 0020                 _ReadSavedSettings 14F8  
               ?_initSwitchBypass 0070                ?_ReadSavedSettings 0070       setSwitchBypassState@f_state 002E  
              ??_initSwitchBypass 0032                  __size_of_InitApp 0030                       _mode1_state 00D6  
                   ??_update_mode 0020                       _mode2_state 00D7             ??_read_bottom_tactile 002E  
             ??_ReadSavedSettings 0024                        _APFCONbits 011D                 star_tactiles@iLed 0031  
                __size_of___aldiv 0082                  __size_of___awdiv 0052                  __size_of___ftadd 00F6  
                __size_of___ftdiv 00A9                      ?_adc_convert 0020                  __size_of___ftneg 0009  
                        ___altoft 1292                  __size_of___ftmul 00B4                  __size_of___fttol 009F  
                        ___awtoft 1000             __size_of_set_leds_top 0054                          ___ftpack 15EF  
                        _map$1988 0064            _preset_programmning_on 00D9                        _ANSELEbits 0190  
          star_tactiles@iLed_1388 0033                        _ANSELFbits 040C                  set_leds_bottom@x 0020  
                _setFeedbackState 130D                       _init_timer0 1F1B                       _init_timer2 1F22  
              _delay_time_changed 015C        __end_of_getCurrentLEDState 1F6B        __end_of_updateSwitchBypass 07B7  
                        __ptext10 1761                          __ptext11 1000                          __ptext20 087D  
                        __ptext12 1135                          __ptext21 055D                          __ptext13 1104  
                        __ptext30 1292                          __ptext22 1F4A                          __ptext14 12CF  
                        __ptext31 15EF                          __ptext23 1412                          __ptext15 1FC4  
                        __ptext40 1F1B                          __ptext32 14F8                          __ptext24 10D3  
                        __ptext16 1654                          __ptext41 1F34                          __ptext33 159B  
                        __ptext25 10A3                          __ptext17 16D6                          __ptext42 1F13  
                        __ptext34 1257                          __ptext26 0002                          __ptext18 1F2B  
                        __ptext35 1FE0                          __ptext27 1F17                          __ptext19 0653  
                        __ptext44 07B7                          __ptext36 1022                          __ptext28 1FAB  
                        __ptext37 1073                          __ptext29 1549                          __ptext38 138C  
                        __ptext39 1F22         __end_of_ReadSavedSettings 1549                  __size_of_wait_ms 0031  
     __size_of_solidring_tactiles 0040                          _ledState 0134                      ??_modulation 0039  
                     _mod_counter 00CD                          _init_adc 1F34                     __size_of_main 06DA  
                        _init_pwm 138C      __size_of_ConfigureOscillator 0004                      _set_leds_top 159B  
                        _num_taps 00E9                          int$flags 007E                   i1set_leds_top@x 0070  
             __end_of_update_mode 1412                __end_of_modulation 130D                        _INTCONbits 000B  
                     _tap_history 0120                 ??_set_subdivision 006F                          intlevel1 0000  
                 _set_leds_bottom 1257                        _PMCON1bits 0195                 ?_showBootSequence 0070  
               __CFG_CLKOUTEN$OFF 0000          __size_of_restoreLEDState 0016                ??_showBootSequence 0035  
                      _OSCCONbits 0099                      _preset_blink 00D8                    i1_set_leds_top 07B7  
__size_of_updateSwitchBypassState 0001                      wait_ms@timel 01D0            __size_of_star_tactiles 006F  
                _read_top_tactile 1135                      ___aldiv@sign 0030        __size_of_ReadSavedSettings 0051  
          main@adjusted_pot_value 00BD                      _CCP10CONbits 061F                 _bottom_push_state 00E3  
          __end_ofi1_set_leds_top 07FF  
