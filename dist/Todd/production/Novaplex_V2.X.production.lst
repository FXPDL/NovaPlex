

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Nov 09 13:41:33 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	idataBANK5,global,class=CODE,delta=2
     9                           	psect	idataBANK6,global,class=CODE,delta=2
    10                           	psect	idataBANK7,global,class=CODE,delta=2
    11                           	psect	idataBANK8,global,class=CODE,delta=2
    12                           	psect	idataBANK9,global,class=CODE,delta=2
    13                           	psect	idataBIGRAM,global,class=CODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	dataBIGRAM,global,delta=1
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    26                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    27                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1
    28                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1
    29                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2
    49                           	psect	text14,local,class=CODE,merge=1,delta=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2
    60                           	psect	text25,local,class=CODE,merge=1,delta=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2
    67                           	psect	text32,local,class=CODE,merge=1,delta=2
    68                           	psect	text33,local,class=CODE,merge=1,delta=2
    69                           	psect	text34,local,class=CODE,merge=1,delta=2
    70                           	psect	text35,local,class=CODE,merge=1,delta=2
    71                           	psect	text36,local,class=CODE,merge=1,delta=2
    72                           	psect	text37,local,class=CODE,merge=1,delta=2
    73                           	psect	text38,local,class=CODE,merge=1,delta=2
    74                           	psect	text39,local,class=CODE,merge=1,delta=2
    75                           	psect	text40,local,class=CODE,merge=1,delta=2
    76                           	psect	text41,local,class=CODE,merge=1,delta=2
    77                           	psect	text42,local,class=CODE,merge=1,delta=2
    78                           	psect	text43,local,class=CODE,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,merge=1,delta=2
    80                           	psect	text45,local,class=CODE,merge=1,delta=2
    81                           	psect	intentry,global,class=CODE,delta=2
    82                           	psect	text47,local,class=CODE,merge=1,delta=2
    83                           	dabs	1,0x920,80
    84                           	dabs	1,0x8A0,80
    85                           	dabs	1,0x820,80
    86                           	dabs	1,0x7A0,80
    87                           	dabs	1,0x720,80
    88                           	dabs	1,0x6A0,80
    89                           	dabs	1,0x652,30
    90                           	dabs	1,0x620,50
    91                           	dabs	1,0x5A8,72
    92                           	dabs	1,0x23F2,0,_delay
    93                           	dabs	1,0x2378,0,_mod5
    94                           	dabs	1,0x7E,2
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0110                     	;# 
   149  0116                     	;# 
   150  0117                     	;# 
   151  011D                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0197                     	;# 
   165  0199                     	;# 
   166  0199                     	;# 
   167  0199                     	;# 
   168  019A                     	;# 
   169  019A                     	;# 
   170  019A                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019C                     	;# 
   177  019C                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019D                     	;# 
   181  019D                     	;# 
   182  019E                     	;# 
   183  019E                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  020D                     	;# 
   189  020F                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  0219                     	;# 
   207  021A                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021D                     	;# 
   211  021E                     	;# 
   212  021F                     	;# 
   213  028C                     	;# 
   214  028D                     	;# 
   215  0291                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0298                     	;# 
   220  0298                     	;# 
   221  0299                     	;# 
   222  029A                     	;# 
   223  029D                     	;# 
   224  029E                     	;# 
   225  029F                     	;# 
   226  030C                     	;# 
   227  030D                     	;# 
   228  0311                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0318                     	;# 
   233  0318                     	;# 
   234  0319                     	;# 
   235  031A                     	;# 
   236  031C                     	;# 
   237  031C                     	;# 
   238  031D                     	;# 
   239  031E                     	;# 
   240  038C                     	;# 
   241  038D                     	;# 
   242  0394                     	;# 
   243  0395                     	;# 
   244  0396                     	;# 
   245  040C                     	;# 
   246  040D                     	;# 
   247  0411                     	;# 
   248  0411                     	;# 
   249  0412                     	;# 
   250  0413                     	;# 
   251  0414                     	;# 
   252  0415                     	;# 
   253  0416                     	;# 
   254  0417                     	;# 
   255  0418                     	;# 
   256  0418                     	;# 
   257  0419                     	;# 
   258  041A                     	;# 
   259  041B                     	;# 
   260  041C                     	;# 
   261  041D                     	;# 
   262  041E                     	;# 
   263  048D                     	;# 
   264  0491                     	;# 
   265  0491                     	;# 
   266  0492                     	;# 
   267  0492                     	;# 
   268  0493                     	;# 
   269  0493                     	;# 
   270  0493                     	;# 
   271  0494                     	;# 
   272  0494                     	;# 
   273  0495                     	;# 
   274  0495                     	;# 
   275  0496                     	;# 
   276  0496                     	;# 
   277  0497                     	;# 
   278  0497                     	;# 
   279  0595                     	;# 
   280  0596                     	;# 
   281  0597                     	;# 
   282  059C                     	;# 
   283  059D                     	;# 
   284  059E                     	;# 
   285  0611                     	;# 
   286  0611                     	;# 
   287  0612                     	;# 
   288  0613                     	;# 
   289  0614                     	;# 
   290  0614                     	;# 
   291  0615                     	;# 
   292  0616                     	;# 
   293  0617                     	;# 
   294  0617                     	;# 
   295  0618                     	;# 
   296  0619                     	;# 
   297  061A                     	;# 
   298  061A                     	;# 
   299  061B                     	;# 
   300  061C                     	;# 
   301  061D                     	;# 
   302  061D                     	;# 
   303  061E                     	;# 
   304  061F                     	;# 
   305  0FE4                     	;# 
   306  0FE5                     	;# 
   307  0FE6                     	;# 
   308  0FE7                     	;# 
   309  0FE8                     	;# 
   310  0FE9                     	;# 
   311  0FEA                     	;# 
   312  0FEB                     	;# 
   313  0FED                     	;# 
   314  0FEE                     	;# 
   315  0FEF                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0110                     	;# 
   370  0116                     	;# 
   371  0117                     	;# 
   372  011D                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  018F                     	;# 
   376  0190                     	;# 
   377  0191                     	;# 
   378  0191                     	;# 
   379  0192                     	;# 
   380  0193                     	;# 
   381  0193                     	;# 
   382  0194                     	;# 
   383  0195                     	;# 
   384  0196                     	;# 
   385  0197                     	;# 
   386  0199                     	;# 
   387  0199                     	;# 
   388  0199                     	;# 
   389  019A                     	;# 
   390  019A                     	;# 
   391  019A                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019B                     	;# 
   395  019B                     	;# 
   396  019B                     	;# 
   397  019C                     	;# 
   398  019C                     	;# 
   399  019C                     	;# 
   400  019D                     	;# 
   401  019D                     	;# 
   402  019D                     	;# 
   403  019E                     	;# 
   404  019E                     	;# 
   405  019E                     	;# 
   406  019F                     	;# 
   407  019F                     	;# 
   408  019F                     	;# 
   409  020D                     	;# 
   410  020F                     	;# 
   411  0210                     	;# 
   412  0211                     	;# 
   413  0211                     	;# 
   414  0212                     	;# 
   415  0212                     	;# 
   416  0213                     	;# 
   417  0213                     	;# 
   418  0214                     	;# 
   419  0214                     	;# 
   420  0215                     	;# 
   421  0215                     	;# 
   422  0215                     	;# 
   423  0216                     	;# 
   424  0216                     	;# 
   425  0217                     	;# 
   426  0217                     	;# 
   427  0219                     	;# 
   428  021A                     	;# 
   429  021B                     	;# 
   430  021C                     	;# 
   431  021D                     	;# 
   432  021E                     	;# 
   433  021F                     	;# 
   434  028C                     	;# 
   435  028D                     	;# 
   436  0291                     	;# 
   437  0291                     	;# 
   438  0292                     	;# 
   439  0293                     	;# 
   440  0298                     	;# 
   441  0298                     	;# 
   442  0299                     	;# 
   443  029A                     	;# 
   444  029D                     	;# 
   445  029E                     	;# 
   446  029F                     	;# 
   447  030C                     	;# 
   448  030D                     	;# 
   449  0311                     	;# 
   450  0311                     	;# 
   451  0312                     	;# 
   452  0313                     	;# 
   453  0318                     	;# 
   454  0318                     	;# 
   455  0319                     	;# 
   456  031A                     	;# 
   457  031C                     	;# 
   458  031C                     	;# 
   459  031D                     	;# 
   460  031E                     	;# 
   461  038C                     	;# 
   462  038D                     	;# 
   463  0394                     	;# 
   464  0395                     	;# 
   465  0396                     	;# 
   466  040C                     	;# 
   467  040D                     	;# 
   468  0411                     	;# 
   469  0411                     	;# 
   470  0412                     	;# 
   471  0413                     	;# 
   472  0414                     	;# 
   473  0415                     	;# 
   474  0416                     	;# 
   475  0417                     	;# 
   476  0418                     	;# 
   477  0418                     	;# 
   478  0419                     	;# 
   479  041A                     	;# 
   480  041B                     	;# 
   481  041C                     	;# 
   482  041D                     	;# 
   483  041E                     	;# 
   484  048D                     	;# 
   485  0491                     	;# 
   486  0491                     	;# 
   487  0492                     	;# 
   488  0492                     	;# 
   489  0493                     	;# 
   490  0493                     	;# 
   491  0493                     	;# 
   492  0494                     	;# 
   493  0494                     	;# 
   494  0495                     	;# 
   495  0495                     	;# 
   496  0496                     	;# 
   497  0496                     	;# 
   498  0497                     	;# 
   499  0497                     	;# 
   500  0595                     	;# 
   501  0596                     	;# 
   502  0597                     	;# 
   503  059C                     	;# 
   504  059D                     	;# 
   505  059E                     	;# 
   506  0611                     	;# 
   507  0611                     	;# 
   508  0612                     	;# 
   509  0613                     	;# 
   510  0614                     	;# 
   511  0614                     	;# 
   512  0615                     	;# 
   513  0616                     	;# 
   514  0617                     	;# 
   515  0617                     	;# 
   516  0618                     	;# 
   517  0619                     	;# 
   518  061A                     	;# 
   519  061A                     	;# 
   520  061B                     	;# 
   521  061C                     	;# 
   522  061D                     	;# 
   523  061D                     	;# 
   524  061E                     	;# 
   525  061F                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  000D                     	;# 
   551  000E                     	;# 
   552  000F                     	;# 
   553  0010                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  008E                     	;# 
   570  008F                     	;# 
   571  0090                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0094                     	;# 
   576  0095                     	;# 
   577  0096                     	;# 
   578  0097                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009B                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  010C                     	;# 
   587  010D                     	;# 
   588  010E                     	;# 
   589  010F                     	;# 
   590  0110                     	;# 
   591  0116                     	;# 
   592  0117                     	;# 
   593  011D                     	;# 
   594  018C                     	;# 
   595  018D                     	;# 
   596  018F                     	;# 
   597  0190                     	;# 
   598  0191                     	;# 
   599  0191                     	;# 
   600  0192                     	;# 
   601  0193                     	;# 
   602  0193                     	;# 
   603  0194                     	;# 
   604  0195                     	;# 
   605  0196                     	;# 
   606  0197                     	;# 
   607  0199                     	;# 
   608  0199                     	;# 
   609  0199                     	;# 
   610  019A                     	;# 
   611  019A                     	;# 
   612  019A                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019C                     	;# 
   621  019D                     	;# 
   622  019D                     	;# 
   623  019D                     	;# 
   624  019E                     	;# 
   625  019E                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  019F                     	;# 
   629  019F                     	;# 
   630  020D                     	;# 
   631  020F                     	;# 
   632  0210                     	;# 
   633  0211                     	;# 
   634  0211                     	;# 
   635  0212                     	;# 
   636  0212                     	;# 
   637  0213                     	;# 
   638  0213                     	;# 
   639  0214                     	;# 
   640  0214                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0216                     	;# 
   645  0216                     	;# 
   646  0217                     	;# 
   647  0217                     	;# 
   648  0219                     	;# 
   649  021A                     	;# 
   650  021B                     	;# 
   651  021C                     	;# 
   652  021D                     	;# 
   653  021E                     	;# 
   654  021F                     	;# 
   655  028C                     	;# 
   656  028D                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0298                     	;# 
   662  0298                     	;# 
   663  0299                     	;# 
   664  029A                     	;# 
   665  029D                     	;# 
   666  029E                     	;# 
   667  029F                     	;# 
   668  030C                     	;# 
   669  030D                     	;# 
   670  0311                     	;# 
   671  0311                     	;# 
   672  0312                     	;# 
   673  0313                     	;# 
   674  0318                     	;# 
   675  0318                     	;# 
   676  0319                     	;# 
   677  031A                     	;# 
   678  031C                     	;# 
   679  031C                     	;# 
   680  031D                     	;# 
   681  031E                     	;# 
   682  038C                     	;# 
   683  038D                     	;# 
   684  0394                     	;# 
   685  0395                     	;# 
   686  0396                     	;# 
   687  040C                     	;# 
   688  040D                     	;# 
   689  0411                     	;# 
   690  0411                     	;# 
   691  0412                     	;# 
   692  0413                     	;# 
   693  0414                     	;# 
   694  0415                     	;# 
   695  0416                     	;# 
   696  0417                     	;# 
   697  0418                     	;# 
   698  0418                     	;# 
   699  0419                     	;# 
   700  041A                     	;# 
   701  041B                     	;# 
   702  041C                     	;# 
   703  041D                     	;# 
   704  041E                     	;# 
   705  048D                     	;# 
   706  0491                     	;# 
   707  0491                     	;# 
   708  0492                     	;# 
   709  0492                     	;# 
   710  0493                     	;# 
   711  0493                     	;# 
   712  0493                     	;# 
   713  0494                     	;# 
   714  0494                     	;# 
   715  0495                     	;# 
   716  0495                     	;# 
   717  0496                     	;# 
   718  0496                     	;# 
   719  0497                     	;# 
   720  0497                     	;# 
   721  0595                     	;# 
   722  0596                     	;# 
   723  0597                     	;# 
   724  059C                     	;# 
   725  059D                     	;# 
   726  059E                     	;# 
   727  0611                     	;# 
   728  0611                     	;# 
   729  0612                     	;# 
   730  0613                     	;# 
   731  0614                     	;# 
   732  0614                     	;# 
   733  0615                     	;# 
   734  0616                     	;# 
   735  0617                     	;# 
   736  0617                     	;# 
   737  0618                     	;# 
   738  0619                     	;# 
   739  061A                     	;# 
   740  061A                     	;# 
   741  061B                     	;# 
   742  061C                     	;# 
   743  061D                     	;# 
   744  061D                     	;# 
   745  061E                     	;# 
   746  061F                     	;# 
   747  0FE4                     	;# 
   748  0FE5                     	;# 
   749  0FE6                     	;# 
   750  0FE7                     	;# 
   751  0FE8                     	;# 
   752  0FE9                     	;# 
   753  0FEA                     	;# 
   754  0FEB                     	;# 
   755  0FED                     	;# 
   756  0FEE                     	;# 
   757  0FEF                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0008                     	;# 
   767  0009                     	;# 
   768  000A                     	;# 
   769  000B                     	;# 
   770  000C                     	;# 
   771  000D                     	;# 
   772  000E                     	;# 
   773  000F                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  008C                     	;# 
   789  008D                     	;# 
   790  008E                     	;# 
   791  008F                     	;# 
   792  0090                     	;# 
   793  0091                     	;# 
   794  0092                     	;# 
   795  0093                     	;# 
   796  0094                     	;# 
   797  0095                     	;# 
   798  0096                     	;# 
   799  0097                     	;# 
   800  0099                     	;# 
   801  009A                     	;# 
   802  009B                     	;# 
   803  009B                     	;# 
   804  009C                     	;# 
   805  009D                     	;# 
   806  009E                     	;# 
   807  010C                     	;# 
   808  010D                     	;# 
   809  010E                     	;# 
   810  010F                     	;# 
   811  0110                     	;# 
   812  0116                     	;# 
   813  0117                     	;# 
   814  011D                     	;# 
   815  018C                     	;# 
   816  018D                     	;# 
   817  018F                     	;# 
   818  0190                     	;# 
   819  0191                     	;# 
   820  0191                     	;# 
   821  0192                     	;# 
   822  0193                     	;# 
   823  0193                     	;# 
   824  0194                     	;# 
   825  0195                     	;# 
   826  0196                     	;# 
   827  0197                     	;# 
   828  0199                     	;# 
   829  0199                     	;# 
   830  0199                     	;# 
   831  019A                     	;# 
   832  019A                     	;# 
   833  019A                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019C                     	;# 
   840  019C                     	;# 
   841  019C                     	;# 
   842  019D                     	;# 
   843  019D                     	;# 
   844  019D                     	;# 
   845  019E                     	;# 
   846  019E                     	;# 
   847  019E                     	;# 
   848  019F                     	;# 
   849  019F                     	;# 
   850  019F                     	;# 
   851  020D                     	;# 
   852  020F                     	;# 
   853  0210                     	;# 
   854  0211                     	;# 
   855  0211                     	;# 
   856  0212                     	;# 
   857  0212                     	;# 
   858  0213                     	;# 
   859  0213                     	;# 
   860  0214                     	;# 
   861  0214                     	;# 
   862  0215                     	;# 
   863  0215                     	;# 
   864  0215                     	;# 
   865  0216                     	;# 
   866  0216                     	;# 
   867  0217                     	;# 
   868  0217                     	;# 
   869  0219                     	;# 
   870  021A                     	;# 
   871  021B                     	;# 
   872  021C                     	;# 
   873  021D                     	;# 
   874  021E                     	;# 
   875  021F                     	;# 
   876  028C                     	;# 
   877  028D                     	;# 
   878  0291                     	;# 
   879  0291                     	;# 
   880  0292                     	;# 
   881  0293                     	;# 
   882  0298                     	;# 
   883  0298                     	;# 
   884  0299                     	;# 
   885  029A                     	;# 
   886  029D                     	;# 
   887  029E                     	;# 
   888  029F                     	;# 
   889  030C                     	;# 
   890  030D                     	;# 
   891  0311                     	;# 
   892  0311                     	;# 
   893  0312                     	;# 
   894  0313                     	;# 
   895  0318                     	;# 
   896  0318                     	;# 
   897  0319                     	;# 
   898  031A                     	;# 
   899  031C                     	;# 
   900  031C                     	;# 
   901  031D                     	;# 
   902  031E                     	;# 
   903  038C                     	;# 
   904  038D                     	;# 
   905  0394                     	;# 
   906  0395                     	;# 
   907  0396                     	;# 
   908  040C                     	;# 
   909  040D                     	;# 
   910  0411                     	;# 
   911  0411                     	;# 
   912  0412                     	;# 
   913  0413                     	;# 
   914  0414                     	;# 
   915  0415                     	;# 
   916  0416                     	;# 
   917  0417                     	;# 
   918  0418                     	;# 
   919  0418                     	;# 
   920  0419                     	;# 
   921  041A                     	;# 
   922  041B                     	;# 
   923  041C                     	;# 
   924  041D                     	;# 
   925  041E                     	;# 
   926  048D                     	;# 
   927  0491                     	;# 
   928  0491                     	;# 
   929  0492                     	;# 
   930  0492                     	;# 
   931  0493                     	;# 
   932  0493                     	;# 
   933  0493                     	;# 
   934  0494                     	;# 
   935  0494                     	;# 
   936  0495                     	;# 
   937  0495                     	;# 
   938  0496                     	;# 
   939  0496                     	;# 
   940  0497                     	;# 
   941  0497                     	;# 
   942  0595                     	;# 
   943  0596                     	;# 
   944  0597                     	;# 
   945  059C                     	;# 
   946  059D                     	;# 
   947  059E                     	;# 
   948  0611                     	;# 
   949  0611                     	;# 
   950  0612                     	;# 
   951  0613                     	;# 
   952  0614                     	;# 
   953  0614                     	;# 
   954  0615                     	;# 
   955  0616                     	;# 
   956  0617                     	;# 
   957  0617                     	;# 
   958  0618                     	;# 
   959  0619                     	;# 
   960  061A                     	;# 
   961  061A                     	;# 
   962  061B                     	;# 
   963  061C                     	;# 
   964  061D                     	;# 
   965  061D                     	;# 
   966  061E                     	;# 
   967  061F                     	;# 
   968  0FE4                     	;# 
   969  0FE5                     	;# 
   970  0FE6                     	;# 
   971  0FE7                     	;# 
   972  0FE8                     	;# 
   973  0FE9                     	;# 
   974  0FEA                     	;# 
   975  0FEB                     	;# 
   976  0FED                     	;# 
   977  0FEE                     	;# 
   978  0FEF                     	;# 
   979  0000                     	;# 
   980  0001                     	;# 
   981  0002                     	;# 
   982  0003                     	;# 
   983  0004                     	;# 
   984  0005                     	;# 
   985  0006                     	;# 
   986  0007                     	;# 
   987  0008                     	;# 
   988  0009                     	;# 
   989  000A                     	;# 
   990  000B                     	;# 
   991  000C                     	;# 
   992  000D                     	;# 
   993  000E                     	;# 
   994  000F                     	;# 
   995  0010                     	;# 
   996  0011                     	;# 
   997  0012                     	;# 
   998  0013                     	;# 
   999  0014                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0016                     	;# 
  1003  0017                     	;# 
  1004  0018                     	;# 
  1005  0019                     	;# 
  1006  001A                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  008C                     	;# 
  1010  008D                     	;# 
  1011  008E                     	;# 
  1012  008F                     	;# 
  1013  0090                     	;# 
  1014  0091                     	;# 
  1015  0092                     	;# 
  1016  0093                     	;# 
  1017  0094                     	;# 
  1018  0095                     	;# 
  1019  0096                     	;# 
  1020  0097                     	;# 
  1021  0099                     	;# 
  1022  009A                     	;# 
  1023  009B                     	;# 
  1024  009B                     	;# 
  1025  009C                     	;# 
  1026  009D                     	;# 
  1027  009E                     	;# 
  1028  010C                     	;# 
  1029  010D                     	;# 
  1030  010E                     	;# 
  1031  010F                     	;# 
  1032  0110                     	;# 
  1033  0116                     	;# 
  1034  0117                     	;# 
  1035  011D                     	;# 
  1036  018C                     	;# 
  1037  018D                     	;# 
  1038  018F                     	;# 
  1039  0190                     	;# 
  1040  0191                     	;# 
  1041  0191                     	;# 
  1042  0192                     	;# 
  1043  0193                     	;# 
  1044  0193                     	;# 
  1045  0194                     	;# 
  1046  0195                     	;# 
  1047  0196                     	;# 
  1048  0197                     	;# 
  1049  0199                     	;# 
  1050  0199                     	;# 
  1051  0199                     	;# 
  1052  019A                     	;# 
  1053  019A                     	;# 
  1054  019A                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019B                     	;# 
  1059  019B                     	;# 
  1060  019C                     	;# 
  1061  019C                     	;# 
  1062  019C                     	;# 
  1063  019D                     	;# 
  1064  019D                     	;# 
  1065  019D                     	;# 
  1066  019E                     	;# 
  1067  019E                     	;# 
  1068  019E                     	;# 
  1069  019F                     	;# 
  1070  019F                     	;# 
  1071  019F                     	;# 
  1072  020D                     	;# 
  1073  020F                     	;# 
  1074  0210                     	;# 
  1075  0211                     	;# 
  1076  0211                     	;# 
  1077  0212                     	;# 
  1078  0212                     	;# 
  1079  0213                     	;# 
  1080  0213                     	;# 
  1081  0214                     	;# 
  1082  0214                     	;# 
  1083  0215                     	;# 
  1084  0215                     	;# 
  1085  0215                     	;# 
  1086  0216                     	;# 
  1087  0216                     	;# 
  1088  0217                     	;# 
  1089  0217                     	;# 
  1090  0219                     	;# 
  1091  021A                     	;# 
  1092  021B                     	;# 
  1093  021C                     	;# 
  1094  021D                     	;# 
  1095  021E                     	;# 
  1096  021F                     	;# 
  1097  028C                     	;# 
  1098  028D                     	;# 
  1099  0291                     	;# 
  1100  0291                     	;# 
  1101  0292                     	;# 
  1102  0293                     	;# 
  1103  0298                     	;# 
  1104  0298                     	;# 
  1105  0299                     	;# 
  1106  029A                     	;# 
  1107  029D                     	;# 
  1108  029E                     	;# 
  1109  029F                     	;# 
  1110  030C                     	;# 
  1111  030D                     	;# 
  1112  0311                     	;# 
  1113  0311                     	;# 
  1114  0312                     	;# 
  1115  0313                     	;# 
  1116  0318                     	;# 
  1117  0318                     	;# 
  1118  0319                     	;# 
  1119  031A                     	;# 
  1120  031C                     	;# 
  1121  031C                     	;# 
  1122  031D                     	;# 
  1123  031E                     	;# 
  1124  038C                     	;# 
  1125  038D                     	;# 
  1126  0394                     	;# 
  1127  0395                     	;# 
  1128  0396                     	;# 
  1129  040C                     	;# 
  1130  040D                     	;# 
  1131  0411                     	;# 
  1132  0411                     	;# 
  1133  0412                     	;# 
  1134  0413                     	;# 
  1135  0414                     	;# 
  1136  0415                     	;# 
  1137  0416                     	;# 
  1138  0417                     	;# 
  1139  0418                     	;# 
  1140  0418                     	;# 
  1141  0419                     	;# 
  1142  041A                     	;# 
  1143  041B                     	;# 
  1144  041C                     	;# 
  1145  041D                     	;# 
  1146  041E                     	;# 
  1147  048D                     	;# 
  1148  0491                     	;# 
  1149  0491                     	;# 
  1150  0492                     	;# 
  1151  0492                     	;# 
  1152  0493                     	;# 
  1153  0493                     	;# 
  1154  0493                     	;# 
  1155  0494                     	;# 
  1156  0494                     	;# 
  1157  0495                     	;# 
  1158  0495                     	;# 
  1159  0496                     	;# 
  1160  0496                     	;# 
  1161  0497                     	;# 
  1162  0497                     	;# 
  1163  0595                     	;# 
  1164  0596                     	;# 
  1165  0597                     	;# 
  1166  059C                     	;# 
  1167  059D                     	;# 
  1168  059E                     	;# 
  1169  0611                     	;# 
  1170  0611                     	;# 
  1171  0612                     	;# 
  1172  0613                     	;# 
  1173  0614                     	;# 
  1174  0614                     	;# 
  1175  0615                     	;# 
  1176  0616                     	;# 
  1177  0617                     	;# 
  1178  0617                     	;# 
  1179  0618                     	;# 
  1180  0619                     	;# 
  1181  061A                     	;# 
  1182  061A                     	;# 
  1183  061B                     	;# 
  1184  061C                     	;# 
  1185  061D                     	;# 
  1186  061D                     	;# 
  1187  061E                     	;# 
  1188  061F                     	;# 
  1189  0FE4                     	;# 
  1190  0FE5                     	;# 
  1191  0FE6                     	;# 
  1192  0FE7                     	;# 
  1193  0FE8                     	;# 
  1194  0FE9                     	;# 
  1195  0FEA                     	;# 
  1196  0FEB                     	;# 
  1197  0FED                     	;# 
  1198  0FEE                     	;# 
  1199  0FEF                     	;# 
  1200  0000                     	;# 
  1201  0001                     	;# 
  1202  0002                     	;# 
  1203  0003                     	;# 
  1204  0004                     	;# 
  1205  0005                     	;# 
  1206  0006                     	;# 
  1207  0007                     	;# 
  1208  0008                     	;# 
  1209  0009                     	;# 
  1210  000A                     	;# 
  1211  000B                     	;# 
  1212  000C                     	;# 
  1213  000D                     	;# 
  1214  000E                     	;# 
  1215  000F                     	;# 
  1216  0010                     	;# 
  1217  0011                     	;# 
  1218  0012                     	;# 
  1219  0013                     	;# 
  1220  0014                     	;# 
  1221  0015                     	;# 
  1222  0016                     	;# 
  1223  0016                     	;# 
  1224  0017                     	;# 
  1225  0018                     	;# 
  1226  0019                     	;# 
  1227  001A                     	;# 
  1228  001B                     	;# 
  1229  001C                     	;# 
  1230  008C                     	;# 
  1231  008D                     	;# 
  1232  008E                     	;# 
  1233  008F                     	;# 
  1234  0090                     	;# 
  1235  0091                     	;# 
  1236  0092                     	;# 
  1237  0093                     	;# 
  1238  0094                     	;# 
  1239  0095                     	;# 
  1240  0096                     	;# 
  1241  0097                     	;# 
  1242  0099                     	;# 
  1243  009A                     	;# 
  1244  009B                     	;# 
  1245  009B                     	;# 
  1246  009C                     	;# 
  1247  009D                     	;# 
  1248  009E                     	;# 
  1249  010C                     	;# 
  1250  010D                     	;# 
  1251  010E                     	;# 
  1252  010F                     	;# 
  1253  0110                     	;# 
  1254  0116                     	;# 
  1255  0117                     	;# 
  1256  011D                     	;# 
  1257  018C                     	;# 
  1258  018D                     	;# 
  1259  018F                     	;# 
  1260  0190                     	;# 
  1261  0191                     	;# 
  1262  0191                     	;# 
  1263  0192                     	;# 
  1264  0193                     	;# 
  1265  0193                     	;# 
  1266  0194                     	;# 
  1267  0195                     	;# 
  1268  0196                     	;# 
  1269  0197                     	;# 
  1270  0199                     	;# 
  1271  0199                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019A                     	;# 
  1275  019A                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019B                     	;# 
  1280  019B                     	;# 
  1281  019C                     	;# 
  1282  019C                     	;# 
  1283  019C                     	;# 
  1284  019D                     	;# 
  1285  019D                     	;# 
  1286  019D                     	;# 
  1287  019E                     	;# 
  1288  019E                     	;# 
  1289  019E                     	;# 
  1290  019F                     	;# 
  1291  019F                     	;# 
  1292  019F                     	;# 
  1293  020D                     	;# 
  1294  020F                     	;# 
  1295  0210                     	;# 
  1296  0211                     	;# 
  1297  0211                     	;# 
  1298  0212                     	;# 
  1299  0212                     	;# 
  1300  0213                     	;# 
  1301  0213                     	;# 
  1302  0214                     	;# 
  1303  0214                     	;# 
  1304  0215                     	;# 
  1305  0215                     	;# 
  1306  0215                     	;# 
  1307  0216                     	;# 
  1308  0216                     	;# 
  1309  0217                     	;# 
  1310  0217                     	;# 
  1311  0219                     	;# 
  1312  021A                     	;# 
  1313  021B                     	;# 
  1314  021C                     	;# 
  1315  021D                     	;# 
  1316  021E                     	;# 
  1317  021F                     	;# 
  1318  028C                     	;# 
  1319  028D                     	;# 
  1320  0291                     	;# 
  1321  0291                     	;# 
  1322  0292                     	;# 
  1323  0293                     	;# 
  1324  0298                     	;# 
  1325  0298                     	;# 
  1326  0299                     	;# 
  1327  029A                     	;# 
  1328  029D                     	;# 
  1329  029E                     	;# 
  1330  029F                     	;# 
  1331  030C                     	;# 
  1332  030D                     	;# 
  1333  0311                     	;# 
  1334  0311                     	;# 
  1335  0312                     	;# 
  1336  0313                     	;# 
  1337  0318                     	;# 
  1338  0318                     	;# 
  1339  0319                     	;# 
  1340  031A                     	;# 
  1341  031C                     	;# 
  1342  031C                     	;# 
  1343  031D                     	;# 
  1344  031E                     	;# 
  1345  038C                     	;# 
  1346  038D                     	;# 
  1347  0394                     	;# 
  1348  0395                     	;# 
  1349  0396                     	;# 
  1350  040C                     	;# 
  1351  040D                     	;# 
  1352  0411                     	;# 
  1353  0411                     	;# 
  1354  0412                     	;# 
  1355  0413                     	;# 
  1356  0414                     	;# 
  1357  0415                     	;# 
  1358  0416                     	;# 
  1359  0417                     	;# 
  1360  0418                     	;# 
  1361  0418                     	;# 
  1362  0419                     	;# 
  1363  041A                     	;# 
  1364  041B                     	;# 
  1365  041C                     	;# 
  1366  041D                     	;# 
  1367  041E                     	;# 
  1368  048D                     	;# 
  1369  0491                     	;# 
  1370  0491                     	;# 
  1371  0492                     	;# 
  1372  0492                     	;# 
  1373  0493                     	;# 
  1374  0493                     	;# 
  1375  0493                     	;# 
  1376  0494                     	;# 
  1377  0494                     	;# 
  1378  0495                     	;# 
  1379  0495                     	;# 
  1380  0496                     	;# 
  1381  0496                     	;# 
  1382  0497                     	;# 
  1383  0497                     	;# 
  1384  0595                     	;# 
  1385  0596                     	;# 
  1386  0597                     	;# 
  1387  059C                     	;# 
  1388  059D                     	;# 
  1389  059E                     	;# 
  1390  0611                     	;# 
  1391  0611                     	;# 
  1392  0612                     	;# 
  1393  0613                     	;# 
  1394  0614                     	;# 
  1395  0614                     	;# 
  1396  0615                     	;# 
  1397  0616                     	;# 
  1398  0617                     	;# 
  1399  0617                     	;# 
  1400  0618                     	;# 
  1401  0619                     	;# 
  1402  061A                     	;# 
  1403  061A                     	;# 
  1404  061B                     	;# 
  1405  061C                     	;# 
  1406  061D                     	;# 
  1407  061D                     	;# 
  1408  061E                     	;# 
  1409  061F                     	;# 
  1410  0FE4                     	;# 
  1411  0FE5                     	;# 
  1412  0FE6                     	;# 
  1413  0FE7                     	;# 
  1414  0FE8                     	;# 
  1415  0FE9                     	;# 
  1416  0FEA                     	;# 
  1417  0FEB                     	;# 
  1418  0FED                     	;# 
  1419  0FEE                     	;# 
  1420  0FEF                     	;# 
  1421  0000                     	;# 
  1422  0001                     	;# 
  1423  0002                     	;# 
  1424  0003                     	;# 
  1425  0004                     	;# 
  1426  0005                     	;# 
  1427  0006                     	;# 
  1428  0007                     	;# 
  1429  0008                     	;# 
  1430  0009                     	;# 
  1431  000A                     	;# 
  1432  000B                     	;# 
  1433  000C                     	;# 
  1434  000D                     	;# 
  1435  000E                     	;# 
  1436  000F                     	;# 
  1437  0010                     	;# 
  1438  0011                     	;# 
  1439  0012                     	;# 
  1440  0013                     	;# 
  1441  0014                     	;# 
  1442  0015                     	;# 
  1443  0016                     	;# 
  1444  0016                     	;# 
  1445  0017                     	;# 
  1446  0018                     	;# 
  1447  0019                     	;# 
  1448  001A                     	;# 
  1449  001B                     	;# 
  1450  001C                     	;# 
  1451  008C                     	;# 
  1452  008D                     	;# 
  1453  008E                     	;# 
  1454  008F                     	;# 
  1455  0090                     	;# 
  1456  0091                     	;# 
  1457  0092                     	;# 
  1458  0093                     	;# 
  1459  0094                     	;# 
  1460  0095                     	;# 
  1461  0096                     	;# 
  1462  0097                     	;# 
  1463  0099                     	;# 
  1464  009A                     	;# 
  1465  009B                     	;# 
  1466  009B                     	;# 
  1467  009C                     	;# 
  1468  009D                     	;# 
  1469  009E                     	;# 
  1470  010C                     	;# 
  1471  010D                     	;# 
  1472  010E                     	;# 
  1473  010F                     	;# 
  1474  0110                     	;# 
  1475  0116                     	;# 
  1476  0117                     	;# 
  1477  011D                     	;# 
  1478  018C                     	;# 
  1479  018D                     	;# 
  1480  018F                     	;# 
  1481  0190                     	;# 
  1482  0191                     	;# 
  1483  0191                     	;# 
  1484  0192                     	;# 
  1485  0193                     	;# 
  1486  0193                     	;# 
  1487  0194                     	;# 
  1488  0195                     	;# 
  1489  0196                     	;# 
  1490  0197                     	;# 
  1491  0199                     	;# 
  1492  0199                     	;# 
  1493  0199                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019A                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019B                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019C                     	;# 
  1505  019D                     	;# 
  1506  019D                     	;# 
  1507  019D                     	;# 
  1508  019E                     	;# 
  1509  019E                     	;# 
  1510  019E                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  019F                     	;# 
  1514  020D                     	;# 
  1515  020F                     	;# 
  1516  0210                     	;# 
  1517  0211                     	;# 
  1518  0211                     	;# 
  1519  0212                     	;# 
  1520  0212                     	;# 
  1521  0213                     	;# 
  1522  0213                     	;# 
  1523  0214                     	;# 
  1524  0214                     	;# 
  1525  0215                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0216                     	;# 
  1529  0216                     	;# 
  1530  0217                     	;# 
  1531  0217                     	;# 
  1532  0219                     	;# 
  1533  021A                     	;# 
  1534  021B                     	;# 
  1535  021C                     	;# 
  1536  021D                     	;# 
  1537  021E                     	;# 
  1538  021F                     	;# 
  1539  028C                     	;# 
  1540  028D                     	;# 
  1541  0291                     	;# 
  1542  0291                     	;# 
  1543  0292                     	;# 
  1544  0293                     	;# 
  1545  0298                     	;# 
  1546  0298                     	;# 
  1547  0299                     	;# 
  1548  029A                     	;# 
  1549  029D                     	;# 
  1550  029E                     	;# 
  1551  029F                     	;# 
  1552  030C                     	;# 
  1553  030D                     	;# 
  1554  0311                     	;# 
  1555  0311                     	;# 
  1556  0312                     	;# 
  1557  0313                     	;# 
  1558  0318                     	;# 
  1559  0318                     	;# 
  1560  0319                     	;# 
  1561  031A                     	;# 
  1562  031C                     	;# 
  1563  031C                     	;# 
  1564  031D                     	;# 
  1565  031E                     	;# 
  1566  038C                     	;# 
  1567  038D                     	;# 
  1568  0394                     	;# 
  1569  0395                     	;# 
  1570  0396                     	;# 
  1571  040C                     	;# 
  1572  040D                     	;# 
  1573  0411                     	;# 
  1574  0411                     	;# 
  1575  0412                     	;# 
  1576  0413                     	;# 
  1577  0414                     	;# 
  1578  0415                     	;# 
  1579  0416                     	;# 
  1580  0417                     	;# 
  1581  0418                     	;# 
  1582  0418                     	;# 
  1583  0419                     	;# 
  1584  041A                     	;# 
  1585  041B                     	;# 
  1586  041C                     	;# 
  1587  041D                     	;# 
  1588  041E                     	;# 
  1589  048D                     	;# 
  1590  0491                     	;# 
  1591  0491                     	;# 
  1592  0492                     	;# 
  1593  0492                     	;# 
  1594  0493                     	;# 
  1595  0493                     	;# 
  1596  0493                     	;# 
  1597  0494                     	;# 
  1598  0494                     	;# 
  1599  0495                     	;# 
  1600  0495                     	;# 
  1601  0496                     	;# 
  1602  0496                     	;# 
  1603  0497                     	;# 
  1604  0497                     	;# 
  1605  0595                     	;# 
  1606  0596                     	;# 
  1607  0597                     	;# 
  1608  059C                     	;# 
  1609  059D                     	;# 
  1610  059E                     	;# 
  1611  0611                     	;# 
  1612  0611                     	;# 
  1613  0612                     	;# 
  1614  0613                     	;# 
  1615  0614                     	;# 
  1616  0614                     	;# 
  1617  0615                     	;# 
  1618  0616                     	;# 
  1619  0617                     	;# 
  1620  0617                     	;# 
  1621  0618                     	;# 
  1622  0619                     	;# 
  1623  061A                     	;# 
  1624  061A                     	;# 
  1625  061B                     	;# 
  1626  061C                     	;# 
  1627  061D                     	;# 
  1628  061D                     	;# 
  1629  061E                     	;# 
  1630  061F                     	;# 
  1631  0FE4                     	;# 
  1632  0FE5                     	;# 
  1633  0FE6                     	;# 
  1634  0FE7                     	;# 
  1635  0FE8                     	;# 
  1636  0FE9                     	;# 
  1637  0FEA                     	;# 
  1638  0FEB                     	;# 
  1639  0FED                     	;# 
  1640  0FEE                     	;# 
  1641  0FEF                     	;# 
  1642  0000                     	;# 
  1643  0001                     	;# 
  1644  0002                     	;# 
  1645  0003                     	;# 
  1646  0004                     	;# 
  1647  0005                     	;# 
  1648  0006                     	;# 
  1649  0007                     	;# 
  1650  0008                     	;# 
  1651  0009                     	;# 
  1652  000A                     	;# 
  1653  000B                     	;# 
  1654  000C                     	;# 
  1655  000D                     	;# 
  1656  000E                     	;# 
  1657  000F                     	;# 
  1658  0010                     	;# 
  1659  0011                     	;# 
  1660  0012                     	;# 
  1661  0013                     	;# 
  1662  0014                     	;# 
  1663  0015                     	;# 
  1664  0016                     	;# 
  1665  0016                     	;# 
  1666  0017                     	;# 
  1667  0018                     	;# 
  1668  0019                     	;# 
  1669  001A                     	;# 
  1670  001B                     	;# 
  1671  001C                     	;# 
  1672  008C                     	;# 
  1673  008D                     	;# 
  1674  008E                     	;# 
  1675  008F                     	;# 
  1676  0090                     	;# 
  1677  0091                     	;# 
  1678  0092                     	;# 
  1679  0093                     	;# 
  1680  0094                     	;# 
  1681  0095                     	;# 
  1682  0096                     	;# 
  1683  0097                     	;# 
  1684  0099                     	;# 
  1685  009A                     	;# 
  1686  009B                     	;# 
  1687  009B                     	;# 
  1688  009C                     	;# 
  1689  009D                     	;# 
  1690  009E                     	;# 
  1691  010C                     	;# 
  1692  010D                     	;# 
  1693  010E                     	;# 
  1694  010F                     	;# 
  1695  0110                     	;# 
  1696  0116                     	;# 
  1697  0117                     	;# 
  1698  011D                     	;# 
  1699  018C                     	;# 
  1700  018D                     	;# 
  1701  018F                     	;# 
  1702  0190                     	;# 
  1703  0191                     	;# 
  1704  0191                     	;# 
  1705  0192                     	;# 
  1706  0193                     	;# 
  1707  0193                     	;# 
  1708  0194                     	;# 
  1709  0195                     	;# 
  1710  0196                     	;# 
  1711  0197                     	;# 
  1712  0199                     	;# 
  1713  0199                     	;# 
  1714  0199                     	;# 
  1715  019A                     	;# 
  1716  019A                     	;# 
  1717  019A                     	;# 
  1718  019B                     	;# 
  1719  019B                     	;# 
  1720  019B                     	;# 
  1721  019B                     	;# 
  1722  019B                     	;# 
  1723  019C                     	;# 
  1724  019C                     	;# 
  1725  019C                     	;# 
  1726  019D                     	;# 
  1727  019D                     	;# 
  1728  019D                     	;# 
  1729  019E                     	;# 
  1730  019E                     	;# 
  1731  019E                     	;# 
  1732  019F                     	;# 
  1733  019F                     	;# 
  1734  019F                     	;# 
  1735  020D                     	;# 
  1736  020F                     	;# 
  1737  0210                     	;# 
  1738  0211                     	;# 
  1739  0211                     	;# 
  1740  0212                     	;# 
  1741  0212                     	;# 
  1742  0213                     	;# 
  1743  0213                     	;# 
  1744  0214                     	;# 
  1745  0214                     	;# 
  1746  0215                     	;# 
  1747  0215                     	;# 
  1748  0215                     	;# 
  1749  0216                     	;# 
  1750  0216                     	;# 
  1751  0217                     	;# 
  1752  0217                     	;# 
  1753  0219                     	;# 
  1754  021A                     	;# 
  1755  021B                     	;# 
  1756  021C                     	;# 
  1757  021D                     	;# 
  1758  021E                     	;# 
  1759  021F                     	;# 
  1760  028C                     	;# 
  1761  028D                     	;# 
  1762  0291                     	;# 
  1763  0291                     	;# 
  1764  0292                     	;# 
  1765  0293                     	;# 
  1766  0298                     	;# 
  1767  0298                     	;# 
  1768  0299                     	;# 
  1769  029A                     	;# 
  1770  029D                     	;# 
  1771  029E                     	;# 
  1772  029F                     	;# 
  1773  030C                     	;# 
  1774  030D                     	;# 
  1775  0311                     	;# 
  1776  0311                     	;# 
  1777  0312                     	;# 
  1778  0313                     	;# 
  1779  0318                     	;# 
  1780  0318                     	;# 
  1781  0319                     	;# 
  1782  031A                     	;# 
  1783  031C                     	;# 
  1784  031C                     	;# 
  1785  031D                     	;# 
  1786  031E                     	;# 
  1787  038C                     	;# 
  1788  038D                     	;# 
  1789  0394                     	;# 
  1790  0395                     	;# 
  1791  0396                     	;# 
  1792  040C                     	;# 
  1793  040D                     	;# 
  1794  0411                     	;# 
  1795  0411                     	;# 
  1796  0412                     	;# 
  1797  0413                     	;# 
  1798  0414                     	;# 
  1799  0415                     	;# 
  1800  0416                     	;# 
  1801  0417                     	;# 
  1802  0418                     	;# 
  1803  0418                     	;# 
  1804  0419                     	;# 
  1805  041A                     	;# 
  1806  041B                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  048D                     	;# 
  1811  0491                     	;# 
  1812  0491                     	;# 
  1813  0492                     	;# 
  1814  0492                     	;# 
  1815  0493                     	;# 
  1816  0493                     	;# 
  1817  0493                     	;# 
  1818  0494                     	;# 
  1819  0494                     	;# 
  1820  0495                     	;# 
  1821  0495                     	;# 
  1822  0496                     	;# 
  1823  0496                     	;# 
  1824  0497                     	;# 
  1825  0497                     	;# 
  1826  0595                     	;# 
  1827  0596                     	;# 
  1828  0597                     	;# 
  1829  059C                     	;# 
  1830  059D                     	;# 
  1831  059E                     	;# 
  1832  0611                     	;# 
  1833  0611                     	;# 
  1834  0612                     	;# 
  1835  0613                     	;# 
  1836  0614                     	;# 
  1837  0614                     	;# 
  1838  0615                     	;# 
  1839  0616                     	;# 
  1840  0617                     	;# 
  1841  0617                     	;# 
  1842  0618                     	;# 
  1843  0619                     	;# 
  1844  061A                     	;# 
  1845  061A                     	;# 
  1846  061B                     	;# 
  1847  061C                     	;# 
  1848  061D                     	;# 
  1849  061D                     	;# 
  1850  061E                     	;# 
  1851  061F                     	;# 
  1852  0FE4                     	;# 
  1853  0FE5                     	;# 
  1854  0FE6                     	;# 
  1855  0FE7                     	;# 
  1856  0FE8                     	;# 
  1857  0FE9                     	;# 
  1858  0FEA                     	;# 
  1859  0FEB                     	;# 
  1860  0FED                     	;# 
  1861  0FEE                     	;# 
  1862  0FEF                     	;# 
  1863  0000                     	;# 
  1864  0001                     	;# 
  1865  0002                     	;# 
  1866  0003                     	;# 
  1867  0004                     	;# 
  1868  0005                     	;# 
  1869  0006                     	;# 
  1870  0007                     	;# 
  1871  0008                     	;# 
  1872  0009                     	;# 
  1873  000A                     	;# 
  1874  000B                     	;# 
  1875  000C                     	;# 
  1876  000D                     	;# 
  1877  000E                     	;# 
  1878  000F                     	;# 
  1879  0010                     	;# 
  1880  0011                     	;# 
  1881  0012                     	;# 
  1882  0013                     	;# 
  1883  0014                     	;# 
  1884  0015                     	;# 
  1885  0016                     	;# 
  1886  0016                     	;# 
  1887  0017                     	;# 
  1888  0018                     	;# 
  1889  0019                     	;# 
  1890  001A                     	;# 
  1891  001B                     	;# 
  1892  001C                     	;# 
  1893  008C                     	;# 
  1894  008D                     	;# 
  1895  008E                     	;# 
  1896  008F                     	;# 
  1897  0090                     	;# 
  1898  0091                     	;# 
  1899  0092                     	;# 
  1900  0093                     	;# 
  1901  0094                     	;# 
  1902  0095                     	;# 
  1903  0096                     	;# 
  1904  0097                     	;# 
  1905  0099                     	;# 
  1906  009A                     	;# 
  1907  009B                     	;# 
  1908  009B                     	;# 
  1909  009C                     	;# 
  1910  009D                     	;# 
  1911  009E                     	;# 
  1912  010C                     	;# 
  1913  010D                     	;# 
  1914  010E                     	;# 
  1915  010F                     	;# 
  1916  0110                     	;# 
  1917  0116                     	;# 
  1918  0117                     	;# 
  1919  011D                     	;# 
  1920  018C                     	;# 
  1921  018D                     	;# 
  1922  018F                     	;# 
  1923  0190                     	;# 
  1924  0191                     	;# 
  1925  0191                     	;# 
  1926  0192                     	;# 
  1927  0193                     	;# 
  1928  0193                     	;# 
  1929  0194                     	;# 
  1930  0195                     	;# 
  1931  0196                     	;# 
  1932  0197                     	;# 
  1933  0199                     	;# 
  1934  0199                     	;# 
  1935  0199                     	;# 
  1936  019A                     	;# 
  1937  019A                     	;# 
  1938  019A                     	;# 
  1939  019B                     	;# 
  1940  019B                     	;# 
  1941  019B                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019C                     	;# 
  1945  019C                     	;# 
  1946  019C                     	;# 
  1947  019D                     	;# 
  1948  019D                     	;# 
  1949  019D                     	;# 
  1950  019E                     	;# 
  1951  019E                     	;# 
  1952  019E                     	;# 
  1953  019F                     	;# 
  1954  019F                     	;# 
  1955  019F                     	;# 
  1956  020D                     	;# 
  1957  020F                     	;# 
  1958  0210                     	;# 
  1959  0211                     	;# 
  1960  0211                     	;# 
  1961  0212                     	;# 
  1962  0212                     	;# 
  1963  0213                     	;# 
  1964  0213                     	;# 
  1965  0214                     	;# 
  1966  0214                     	;# 
  1967  0215                     	;# 
  1968  0215                     	;# 
  1969  0215                     	;# 
  1970  0216                     	;# 
  1971  0216                     	;# 
  1972  0217                     	;# 
  1973  0217                     	;# 
  1974  0219                     	;# 
  1975  021A                     	;# 
  1976  021B                     	;# 
  1977  021C                     	;# 
  1978  021D                     	;# 
  1979  021E                     	;# 
  1980  021F                     	;# 
  1981  028C                     	;# 
  1982  028D                     	;# 
  1983  0291                     	;# 
  1984  0291                     	;# 
  1985  0292                     	;# 
  1986  0293                     	;# 
  1987  0298                     	;# 
  1988  0298                     	;# 
  1989  0299                     	;# 
  1990  029A                     	;# 
  1991  029D                     	;# 
  1992  029E                     	;# 
  1993  029F                     	;# 
  1994  030C                     	;# 
  1995  030D                     	;# 
  1996  0311                     	;# 
  1997  0311                     	;# 
  1998  0312                     	;# 
  1999  0313                     	;# 
  2000  0318                     	;# 
  2001  0318                     	;# 
  2002  0319                     	;# 
  2003  031A                     	;# 
  2004  031C                     	;# 
  2005  031C                     	;# 
  2006  031D                     	;# 
  2007  031E                     	;# 
  2008  038C                     	;# 
  2009  038D                     	;# 
  2010  0394                     	;# 
  2011  0395                     	;# 
  2012  0396                     	;# 
  2013  040C                     	;# 
  2014  040D                     	;# 
  2015  0411                     	;# 
  2016  0411                     	;# 
  2017  0412                     	;# 
  2018  0413                     	;# 
  2019  0414                     	;# 
  2020  0415                     	;# 
  2021  0416                     	;# 
  2022  0417                     	;# 
  2023  0418                     	;# 
  2024  0418                     	;# 
  2025  0419                     	;# 
  2026  041A                     	;# 
  2027  041B                     	;# 
  2028  041C                     	;# 
  2029  041D                     	;# 
  2030  041E                     	;# 
  2031  048D                     	;# 
  2032  0491                     	;# 
  2033  0491                     	;# 
  2034  0492                     	;# 
  2035  0492                     	;# 
  2036  0493                     	;# 
  2037  0493                     	;# 
  2038  0493                     	;# 
  2039  0494                     	;# 
  2040  0494                     	;# 
  2041  0495                     	;# 
  2042  0495                     	;# 
  2043  0496                     	;# 
  2044  0496                     	;# 
  2045  0497                     	;# 
  2046  0497                     	;# 
  2047  0595                     	;# 
  2048  0596                     	;# 
  2049  0597                     	;# 
  2050  059C                     	;# 
  2051  059D                     	;# 
  2052  059E                     	;# 
  2053  0611                     	;# 
  2054  0611                     	;# 
  2055  0612                     	;# 
  2056  0613                     	;# 
  2057  0614                     	;# 
  2058  0614                     	;# 
  2059  0615                     	;# 
  2060  0616                     	;# 
  2061  0617                     	;# 
  2062  0617                     	;# 
  2063  0618                     	;# 
  2064  0619                     	;# 
  2065  061A                     	;# 
  2066  061A                     	;# 
  2067  061B                     	;# 
  2068  061C                     	;# 
  2069  061D                     	;# 
  2070  061D                     	;# 
  2071  061E                     	;# 
  2072  061F                     	;# 
  2073  0FE4                     	;# 
  2074  0FE5                     	;# 
  2075  0FE6                     	;# 
  2076  0FE7                     	;# 
  2077  0FE8                     	;# 
  2078  0FE9                     	;# 
  2079  0FEA                     	;# 
  2080  0FEB                     	;# 
  2081  0FED                     	;# 
  2082  0FEE                     	;# 
  2083  0FEF                     	;# 
  2084  0000                     	;# 
  2085  0001                     	;# 
  2086  0002                     	;# 
  2087  0003                     	;# 
  2088  0004                     	;# 
  2089  0005                     	;# 
  2090  0006                     	;# 
  2091  0007                     	;# 
  2092  0008                     	;# 
  2093  0009                     	;# 
  2094  000A                     	;# 
  2095  000B                     	;# 
  2096  000C                     	;# 
  2097  000D                     	;# 
  2098  000E                     	;# 
  2099  000F                     	;# 
  2100  0010                     	;# 
  2101  0011                     	;# 
  2102  0012                     	;# 
  2103  0013                     	;# 
  2104  0014                     	;# 
  2105  0015                     	;# 
  2106  0016                     	;# 
  2107  0016                     	;# 
  2108  0017                     	;# 
  2109  0018                     	;# 
  2110  0019                     	;# 
  2111  001A                     	;# 
  2112  001B                     	;# 
  2113  001C                     	;# 
  2114  008C                     	;# 
  2115  008D                     	;# 
  2116  008E                     	;# 
  2117  008F                     	;# 
  2118  0090                     	;# 
  2119  0091                     	;# 
  2120  0092                     	;# 
  2121  0093                     	;# 
  2122  0094                     	;# 
  2123  0095                     	;# 
  2124  0096                     	;# 
  2125  0097                     	;# 
  2126  0099                     	;# 
  2127  009A                     	;# 
  2128  009B                     	;# 
  2129  009B                     	;# 
  2130  009C                     	;# 
  2131  009D                     	;# 
  2132  009E                     	;# 
  2133  010C                     	;# 
  2134  010D                     	;# 
  2135  010E                     	;# 
  2136  010F                     	;# 
  2137  0110                     	;# 
  2138  0116                     	;# 
  2139  0117                     	;# 
  2140  011D                     	;# 
  2141  018C                     	;# 
  2142  018D                     	;# 
  2143  018F                     	;# 
  2144  0190                     	;# 
  2145  0191                     	;# 
  2146  0191                     	;# 
  2147  0192                     	;# 
  2148  0193                     	;# 
  2149  0193                     	;# 
  2150  0194                     	;# 
  2151  0195                     	;# 
  2152  0196                     	;# 
  2153  0197                     	;# 
  2154  0199                     	;# 
  2155  0199                     	;# 
  2156  0199                     	;# 
  2157  019A                     	;# 
  2158  019A                     	;# 
  2159  019A                     	;# 
  2160  019B                     	;# 
  2161  019B                     	;# 
  2162  019B                     	;# 
  2163  019B                     	;# 
  2164  019B                     	;# 
  2165  019C                     	;# 
  2166  019C                     	;# 
  2167  019C                     	;# 
  2168  019D                     	;# 
  2169  019D                     	;# 
  2170  019D                     	;# 
  2171  019E                     	;# 
  2172  019E                     	;# 
  2173  019E                     	;# 
  2174  019F                     	;# 
  2175  019F                     	;# 
  2176  019F                     	;# 
  2177  020D                     	;# 
  2178  020F                     	;# 
  2179  0210                     	;# 
  2180  0211                     	;# 
  2181  0211                     	;# 
  2182  0212                     	;# 
  2183  0212                     	;# 
  2184  0213                     	;# 
  2185  0213                     	;# 
  2186  0214                     	;# 
  2187  0214                     	;# 
  2188  0215                     	;# 
  2189  0215                     	;# 
  2190  0215                     	;# 
  2191  0216                     	;# 
  2192  0216                     	;# 
  2193  0217                     	;# 
  2194  0217                     	;# 
  2195  0219                     	;# 
  2196  021A                     	;# 
  2197  021B                     	;# 
  2198  021C                     	;# 
  2199  021D                     	;# 
  2200  021E                     	;# 
  2201  021F                     	;# 
  2202  028C                     	;# 
  2203  028D                     	;# 
  2204  0291                     	;# 
  2205  0291                     	;# 
  2206  0292                     	;# 
  2207  0293                     	;# 
  2208  0298                     	;# 
  2209  0298                     	;# 
  2210  0299                     	;# 
  2211  029A                     	;# 
  2212  029D                     	;# 
  2213  029E                     	;# 
  2214  029F                     	;# 
  2215  030C                     	;# 
  2216  030D                     	;# 
  2217  0311                     	;# 
  2218  0311                     	;# 
  2219  0312                     	;# 
  2220  0313                     	;# 
  2221  0318                     	;# 
  2222  0318                     	;# 
  2223  0319                     	;# 
  2224  031A                     	;# 
  2225  031C                     	;# 
  2226  031C                     	;# 
  2227  031D                     	;# 
  2228  031E                     	;# 
  2229  038C                     	;# 
  2230  038D                     	;# 
  2231  0394                     	;# 
  2232  0395                     	;# 
  2233  0396                     	;# 
  2234  040C                     	;# 
  2235  040D                     	;# 
  2236  0411                     	;# 
  2237  0411                     	;# 
  2238  0412                     	;# 
  2239  0413                     	;# 
  2240  0414                     	;# 
  2241  0415                     	;# 
  2242  0416                     	;# 
  2243  0417                     	;# 
  2244  0418                     	;# 
  2245  0418                     	;# 
  2246  0419                     	;# 
  2247  041A                     	;# 
  2248  041B                     	;# 
  2249  041C                     	;# 
  2250  041D                     	;# 
  2251  041E                     	;# 
  2252  048D                     	;# 
  2253  0491                     	;# 
  2254  0491                     	;# 
  2255  0492                     	;# 
  2256  0492                     	;# 
  2257  0493                     	;# 
  2258  0493                     	;# 
  2259  0493                     	;# 
  2260  0494                     	;# 
  2261  0494                     	;# 
  2262  0495                     	;# 
  2263  0495                     	;# 
  2264  0496                     	;# 
  2265  0496                     	;# 
  2266  0497                     	;# 
  2267  0497                     	;# 
  2268  0595                     	;# 
  2269  0596                     	;# 
  2270  0597                     	;# 
  2271  059C                     	;# 
  2272  059D                     	;# 
  2273  059E                     	;# 
  2274  0611                     	;# 
  2275  0611                     	;# 
  2276  0612                     	;# 
  2277  0613                     	;# 
  2278  0614                     	;# 
  2279  0614                     	;# 
  2280  0615                     	;# 
  2281  0616                     	;# 
  2282  0617                     	;# 
  2283  0617                     	;# 
  2284  0618                     	;# 
  2285  0619                     	;# 
  2286  061A                     	;# 
  2287  061A                     	;# 
  2288  061B                     	;# 
  2289  061C                     	;# 
  2290  061D                     	;# 
  2291  061D                     	;# 
  2292  061E                     	;# 
  2293  061F                     	;# 
  2294  0FE4                     	;# 
  2295  0FE5                     	;# 
  2296  0FE6                     	;# 
  2297  0FE7                     	;# 
  2298  0FE8                     	;# 
  2299  0FE9                     	;# 
  2300  0FEA                     	;# 
  2301  0FEB                     	;# 
  2302  0FED                     	;# 
  2303  0FEE                     	;# 
  2304  0FEF                     	;# 
  2305  0000                     	;# 
  2306  0001                     	;# 
  2307  0002                     	;# 
  2308  0003                     	;# 
  2309  0004                     	;# 
  2310  0005                     	;# 
  2311  0006                     	;# 
  2312  0007                     	;# 
  2313  0008                     	;# 
  2314  0009                     	;# 
  2315  000A                     	;# 
  2316  000B                     	;# 
  2317  000C                     	;# 
  2318  000D                     	;# 
  2319  000E                     	;# 
  2320  000F                     	;# 
  2321  0010                     	;# 
  2322  0011                     	;# 
  2323  0012                     	;# 
  2324  0013                     	;# 
  2325  0014                     	;# 
  2326  0015                     	;# 
  2327  0016                     	;# 
  2328  0016                     	;# 
  2329  0017                     	;# 
  2330  0018                     	;# 
  2331  0019                     	;# 
  2332  001A                     	;# 
  2333  001B                     	;# 
  2334  001C                     	;# 
  2335  008C                     	;# 
  2336  008D                     	;# 
  2337  008E                     	;# 
  2338  008F                     	;# 
  2339  0090                     	;# 
  2340  0091                     	;# 
  2341  0092                     	;# 
  2342  0093                     	;# 
  2343  0094                     	;# 
  2344  0095                     	;# 
  2345  0096                     	;# 
  2346  0097                     	;# 
  2347  0099                     	;# 
  2348  009A                     	;# 
  2349  009B                     	;# 
  2350  009B                     	;# 
  2351  009C                     	;# 
  2352  009D                     	;# 
  2353  009E                     	;# 
  2354  010C                     	;# 
  2355  010D                     	;# 
  2356  010E                     	;# 
  2357  010F                     	;# 
  2358  0110                     	;# 
  2359  0116                     	;# 
  2360  0117                     	;# 
  2361  011D                     	;# 
  2362  018C                     	;# 
  2363  018D                     	;# 
  2364  018F                     	;# 
  2365  0190                     	;# 
  2366  0191                     	;# 
  2367  0191                     	;# 
  2368  0192                     	;# 
  2369  0193                     	;# 
  2370  0193                     	;# 
  2371  0194                     	;# 
  2372  0195                     	;# 
  2373  0196                     	;# 
  2374  0197                     	;# 
  2375  0199                     	;# 
  2376  0199                     	;# 
  2377  0199                     	;# 
  2378  019A                     	;# 
  2379  019A                     	;# 
  2380  019A                     	;# 
  2381  019B                     	;# 
  2382  019B                     	;# 
  2383  019B                     	;# 
  2384  019B                     	;# 
  2385  019B                     	;# 
  2386  019C                     	;# 
  2387  019C                     	;# 
  2388  019C                     	;# 
  2389  019D                     	;# 
  2390  019D                     	;# 
  2391  019D                     	;# 
  2392  019E                     	;# 
  2393  019E                     	;# 
  2394  019E                     	;# 
  2395  019F                     	;# 
  2396  019F                     	;# 
  2397  019F                     	;# 
  2398  020D                     	;# 
  2399  020F                     	;# 
  2400  0210                     	;# 
  2401  0211                     	;# 
  2402  0211                     	;# 
  2403  0212                     	;# 
  2404  0212                     	;# 
  2405  0213                     	;# 
  2406  0213                     	;# 
  2407  0214                     	;# 
  2408  0214                     	;# 
  2409  0215                     	;# 
  2410  0215                     	;# 
  2411  0215                     	;# 
  2412  0216                     	;# 
  2413  0216                     	;# 
  2414  0217                     	;# 
  2415  0217                     	;# 
  2416  0219                     	;# 
  2417  021A                     	;# 
  2418  021B                     	;# 
  2419  021C                     	;# 
  2420  021D                     	;# 
  2421  021E                     	;# 
  2422  021F                     	;# 
  2423  028C                     	;# 
  2424  028D                     	;# 
  2425  0291                     	;# 
  2426  0291                     	;# 
  2427  0292                     	;# 
  2428  0293                     	;# 
  2429  0298                     	;# 
  2430  0298                     	;# 
  2431  0299                     	;# 
  2432  029A                     	;# 
  2433  029D                     	;# 
  2434  029E                     	;# 
  2435  029F                     	;# 
  2436  030C                     	;# 
  2437  030D                     	;# 
  2438  0311                     	;# 
  2439  0311                     	;# 
  2440  0312                     	;# 
  2441  0313                     	;# 
  2442  0318                     	;# 
  2443  0318                     	;# 
  2444  0319                     	;# 
  2445  031A                     	;# 
  2446  031C                     	;# 
  2447  031C                     	;# 
  2448  031D                     	;# 
  2449  031E                     	;# 
  2450  038C                     	;# 
  2451  038D                     	;# 
  2452  0394                     	;# 
  2453  0395                     	;# 
  2454  0396                     	;# 
  2455  040C                     	;# 
  2456  040D                     	;# 
  2457  0411                     	;# 
  2458  0411                     	;# 
  2459  0412                     	;# 
  2460  0413                     	;# 
  2461  0414                     	;# 
  2462  0415                     	;# 
  2463  0416                     	;# 
  2464  0417                     	;# 
  2465  0418                     	;# 
  2466  0418                     	;# 
  2467  0419                     	;# 
  2468  041A                     	;# 
  2469  041B                     	;# 
  2470  041C                     	;# 
  2471  041D                     	;# 
  2472  041E                     	;# 
  2473  048D                     	;# 
  2474  0491                     	;# 
  2475  0491                     	;# 
  2476  0492                     	;# 
  2477  0492                     	;# 
  2478  0493                     	;# 
  2479  0493                     	;# 
  2480  0493                     	;# 
  2481  0494                     	;# 
  2482  0494                     	;# 
  2483  0495                     	;# 
  2484  0495                     	;# 
  2485  0496                     	;# 
  2486  0496                     	;# 
  2487  0497                     	;# 
  2488  0497                     	;# 
  2489  0595                     	;# 
  2490  0596                     	;# 
  2491  0597                     	;# 
  2492  059C                     	;# 
  2493  059D                     	;# 
  2494  059E                     	;# 
  2495  0611                     	;# 
  2496  0611                     	;# 
  2497  0612                     	;# 
  2498  0613                     	;# 
  2499  0614                     	;# 
  2500  0614                     	;# 
  2501  0615                     	;# 
  2502  0616                     	;# 
  2503  0617                     	;# 
  2504  0617                     	;# 
  2505  0618                     	;# 
  2506  0619                     	;# 
  2507  061A                     	;# 
  2508  061A                     	;# 
  2509  061B                     	;# 
  2510  061C                     	;# 
  2511  061D                     	;# 
  2512  061D                     	;# 
  2513  061E                     	;# 
  2514  061F                     	;# 
  2515  0FE4                     	;# 
  2516  0FE5                     	;# 
  2517  0FE6                     	;# 
  2518  0FE7                     	;# 
  2519  0FE8                     	;# 
  2520  0FE9                     	;# 
  2521  0FEA                     	;# 
  2522  0FEB                     	;# 
  2523  0FED                     	;# 
  2524  0FEE                     	;# 
  2525  0FEF                     	;# 
  2526  0000                     	;# 
  2527  0001                     	;# 
  2528  0002                     	;# 
  2529  0003                     	;# 
  2530  0004                     	;# 
  2531  0005                     	;# 
  2532  0006                     	;# 
  2533  0007                     	;# 
  2534  0008                     	;# 
  2535  0009                     	;# 
  2536  000A                     	;# 
  2537  000B                     	;# 
  2538  000C                     	;# 
  2539  000D                     	;# 
  2540  000E                     	;# 
  2541  000F                     	;# 
  2542  0010                     	;# 
  2543  0011                     	;# 
  2544  0012                     	;# 
  2545  0013                     	;# 
  2546  0014                     	;# 
  2547  0015                     	;# 
  2548  0016                     	;# 
  2549  0016                     	;# 
  2550  0017                     	;# 
  2551  0018                     	;# 
  2552  0019                     	;# 
  2553  001A                     	;# 
  2554  001B                     	;# 
  2555  001C                     	;# 
  2556  008C                     	;# 
  2557  008D                     	;# 
  2558  008E                     	;# 
  2559  008F                     	;# 
  2560  0090                     	;# 
  2561  0091                     	;# 
  2562  0092                     	;# 
  2563  0093                     	;# 
  2564  0094                     	;# 
  2565  0095                     	;# 
  2566  0096                     	;# 
  2567  0097                     	;# 
  2568  0099                     	;# 
  2569  009A                     	;# 
  2570  009B                     	;# 
  2571  009B                     	;# 
  2572  009C                     	;# 
  2573  009D                     	;# 
  2574  009E                     	;# 
  2575  010C                     	;# 
  2576  010D                     	;# 
  2577  010E                     	;# 
  2578  010F                     	;# 
  2579  0110                     	;# 
  2580  0116                     	;# 
  2581  0117                     	;# 
  2582  011D                     	;# 
  2583  018C                     	;# 
  2584  018D                     	;# 
  2585  018F                     	;# 
  2586  0190                     	;# 
  2587  0191                     	;# 
  2588  0191                     	;# 
  2589  0192                     	;# 
  2590  0193                     	;# 
  2591  0193                     	;# 
  2592  0194                     	;# 
  2593  0195                     	;# 
  2594  0196                     	;# 
  2595  0197                     	;# 
  2596  0199                     	;# 
  2597  0199                     	;# 
  2598  0199                     	;# 
  2599  019A                     	;# 
  2600  019A                     	;# 
  2601  019A                     	;# 
  2602  019B                     	;# 
  2603  019B                     	;# 
  2604  019B                     	;# 
  2605  019B                     	;# 
  2606  019B                     	;# 
  2607  019C                     	;# 
  2608  019C                     	;# 
  2609  019C                     	;# 
  2610  019D                     	;# 
  2611  019D                     	;# 
  2612  019D                     	;# 
  2613  019E                     	;# 
  2614  019E                     	;# 
  2615  019E                     	;# 
  2616  019F                     	;# 
  2617  019F                     	;# 
  2618  019F                     	;# 
  2619  020D                     	;# 
  2620  020F                     	;# 
  2621  0210                     	;# 
  2622  0211                     	;# 
  2623  0211                     	;# 
  2624  0212                     	;# 
  2625  0212                     	;# 
  2626  0213                     	;# 
  2627  0213                     	;# 
  2628  0214                     	;# 
  2629  0214                     	;# 
  2630  0215                     	;# 
  2631  0215                     	;# 
  2632  0215                     	;# 
  2633  0216                     	;# 
  2634  0216                     	;# 
  2635  0217                     	;# 
  2636  0217                     	;# 
  2637  0219                     	;# 
  2638  021A                     	;# 
  2639  021B                     	;# 
  2640  021C                     	;# 
  2641  021D                     	;# 
  2642  021E                     	;# 
  2643  021F                     	;# 
  2644  028C                     	;# 
  2645  028D                     	;# 
  2646  0291                     	;# 
  2647  0291                     	;# 
  2648  0292                     	;# 
  2649  0293                     	;# 
  2650  0298                     	;# 
  2651  0298                     	;# 
  2652  0299                     	;# 
  2653  029A                     	;# 
  2654  029D                     	;# 
  2655  029E                     	;# 
  2656  029F                     	;# 
  2657  030C                     	;# 
  2658  030D                     	;# 
  2659  0311                     	;# 
  2660  0311                     	;# 
  2661  0312                     	;# 
  2662  0313                     	;# 
  2663  0318                     	;# 
  2664  0318                     	;# 
  2665  0319                     	;# 
  2666  031A                     	;# 
  2667  031C                     	;# 
  2668  031C                     	;# 
  2669  031D                     	;# 
  2670  031E                     	;# 
  2671  038C                     	;# 
  2672  038D                     	;# 
  2673  0394                     	;# 
  2674  0395                     	;# 
  2675  0396                     	;# 
  2676  040C                     	;# 
  2677  040D                     	;# 
  2678  0411                     	;# 
  2679  0411                     	;# 
  2680  0412                     	;# 
  2681  0413                     	;# 
  2682  0414                     	;# 
  2683  0415                     	;# 
  2684  0416                     	;# 
  2685  0417                     	;# 
  2686  0418                     	;# 
  2687  0418                     	;# 
  2688  0419                     	;# 
  2689  041A                     	;# 
  2690  041B                     	;# 
  2691  041C                     	;# 
  2692  041D                     	;# 
  2693  041E                     	;# 
  2694  048D                     	;# 
  2695  0491                     	;# 
  2696  0491                     	;# 
  2697  0492                     	;# 
  2698  0492                     	;# 
  2699  0493                     	;# 
  2700  0493                     	;# 
  2701  0493                     	;# 
  2702  0494                     	;# 
  2703  0494                     	;# 
  2704  0495                     	;# 
  2705  0495                     	;# 
  2706  0496                     	;# 
  2707  0496                     	;# 
  2708  0497                     	;# 
  2709  0497                     	;# 
  2710  0595                     	;# 
  2711  0596                     	;# 
  2712  0597                     	;# 
  2713  059C                     	;# 
  2714  059D                     	;# 
  2715  059E                     	;# 
  2716  0611                     	;# 
  2717  0611                     	;# 
  2718  0612                     	;# 
  2719  0613                     	;# 
  2720  0614                     	;# 
  2721  0614                     	;# 
  2722  0615                     	;# 
  2723  0616                     	;# 
  2724  0617                     	;# 
  2725  0617                     	;# 
  2726  0618                     	;# 
  2727  0619                     	;# 
  2728  061A                     	;# 
  2729  061A                     	;# 
  2730  061B                     	;# 
  2731  061C                     	;# 
  2732  061D                     	;# 
  2733  061D                     	;# 
  2734  061E                     	;# 
  2735  061F                     	;# 
  2736  0FE4                     	;# 
  2737  0FE5                     	;# 
  2738  0FE6                     	;# 
  2739  0FE7                     	;# 
  2740  0FE8                     	;# 
  2741  0FE9                     	;# 
  2742  0FEA                     	;# 
  2743  0FEB                     	;# 
  2744  0FED                     	;# 
  2745  0FEE                     	;# 
  2746  0FEF                     	;_mod5
  2747                           
  2748                           	psect	idataBANK0
  2749  07FD                     __pidataBANK0:	
  2750                           
  2751                           ;initializer for _feedback_state
  2752  07FD  34FF               	retlw	255
  2753                           
  2754                           	psect	idataBANK1
  2755  1F72                     __pidataBANK1:	
  2756                           
  2757                           ;initializer for _baseline_delay_time
  2758  1F72  34D0               	retlw	208
  2759  1F73  3407               	retlw	7
  2760  1F74  3400               	retlw	0
  2761  1F75  3400               	retlw	0
  2762                           
  2763                           ;initializer for _delay_time
  2764  1F76  34D0               	retlw	208
  2765  1F77  3407               	retlw	7
  2766  1F78  3400               	retlw	0
  2767  1F79  3400               	retlw	0
  2768                           
  2769                           ;initializer for _bottom_push_state
  2770  1F7A  3406               	retlw	6
  2771  1F7B  3400               	retlw	0
  2772                           
  2773                           ;initializer for _knob1_prev
  2774  1F7C  34D0               	retlw	208
  2775  1F7D  3407               	retlw	7
  2776                           
  2777                           ;initializer for _knob2_prev
  2778  1F7E  34D0               	retlw	208
  2779  1F7F  3407               	retlw	7
  2780                           
  2781                           ;initializer for _knob3_prev
  2782  1F80  34D0               	retlw	208
  2783  1F81  3407               	retlw	7
  2784                           
  2785                           ;initializer for _knob4_prev
  2786  1F82  34D0               	retlw	208
  2787  1F83  3407               	retlw	7
  2788                           
  2789                           ;initializer for _knob5_prev
  2790  1F84  34D0               	retlw	208
  2791  1F85  3407               	retlw	7
  2792                           
  2793                           ;initializer for _long_press_limit
  2794  1F86  34E8               	retlw	232
  2795  1F87  3403               	retlw	3
  2796                           
  2797                           ;initializer for _top_push_state
  2798  1F88  3406               	retlw	6
  2799  1F89  3400               	retlw	0
  2800                           
  2801                           ;initializer for _blink_rate
  2802  1F8A  3414               	retlw	20
  2803                           
  2804                           ;initializer for _longTap_state
  2805  1F8B  34FF               	retlw	255
  2806                           
  2807                           ;initializer for _num_taps
  2808  1F8C  3404               	retlw	4
  2809                           
  2810                           ;initializer for _switchBypass_state
  2811  1F8D  34FF               	retlw	255
  2812                           
  2813                           ;initializer for _switchTap_state
  2814  1F8E  34FF               	retlw	255
  2815                           
  2816                           	psect	idataBANK2
  2817  1EC9                     __pidataBANK2:	
  2818                           
  2819                           ;initializer for _blink_delay
  2820  1EC9  3464               	retlw	100
  2821  1ECA  3400               	retlw	0
  2822                           
  2823                           ;initializer for _delay_time_changed
  2824  1ECB  3401               	retlw	1
  2825  1ECC  3400               	retlw	0
  2826                           
  2827                           ;initializer for _mod_delay_time
  2828  1ECD  34D0               	retlw	208
  2829  1ECE  3407               	retlw	7
  2830                           
  2831                           ;initializer for _switchBypass_up
  2832  1ECF  3401               	retlw	1
  2833  1ED0  3400               	retlw	0
  2834                           
  2835                           ;initializer for _tap_iteration
  2836  1ED1  3401               	retlw	1
  2837  1ED2  3400               	retlw	0
  2838                           
  2839                           ;initializer for _blink_state
  2840  1ED3  3401               	retlw	1
  2841                           
  2842                           ;initializer for _currentBypassState
  2843  1ED4  34FF               	retlw	255
  2844                           
  2845                           	psect	idataBANK4
  2846  11E3                     __pidataBANK4:	
  2847                           
  2848                           ;initializer for _mod2
  2849  11E3  3400               	retlw	0
  2850  11E4  3400               	retlw	0
  2851  11E5  340D               	retlw	13
  2852  11E6  3400               	retlw	0
  2853  11E7  341B               	retlw	27
  2854  11E8  3400               	retlw	0
  2855  11E9  3428               	retlw	40
  2856  11EA  3400               	retlw	0
  2857  11EB  3435               	retlw	53
  2858  11EC  3400               	retlw	0
  2859  11ED  3443               	retlw	67
  2860  11EE  3400               	retlw	0
  2861  11EF  3450               	retlw	80
  2862  11F0  3400               	retlw	0
  2863  11F1  345D               	retlw	93
  2864  11F2  3400               	retlw	0
  2865  11F3  345D               	retlw	93
  2866  11F4  3400               	retlw	0
  2867  11F5  3450               	retlw	80
  2868  11F6  3400               	retlw	0
  2869  11F7  3443               	retlw	67
  2870  11F8  3400               	retlw	0
  2871  11F9  3435               	retlw	53
  2872  11FA  3400               	retlw	0
  2873  11FB  3428               	retlw	40
  2874  11FC  3400               	retlw	0
  2875  11FD  341B               	retlw	27
  2876  11FE  3400               	retlw	0
  2877  11FF  340D               	retlw	13
  2878  1200  3400               	retlw	0
  2879  1201  3400               	retlw	0
  2880  1202  3400               	retlw	0
  2881  1203  34F3               	retlw	243
  2882  1204  34FF               	retlw	255
  2883  1205  34E5               	retlw	229
  2884  1206  34FF               	retlw	255
  2885  1207  34D8               	retlw	216
  2886  1208  34FF               	retlw	255
  2887  1209  34CB               	retlw	203
  2888  120A  34FF               	retlw	255
  2889  120B  34BD               	retlw	189
  2890  120C  34FF               	retlw	255
  2891  120D  34B0               	retlw	176
  2892  120E  34FF               	retlw	255
  2893  120F  34A3               	retlw	163
  2894  1210  34FF               	retlw	255
  2895  1211  34A3               	retlw	163
  2896  1212  34FF               	retlw	255
  2897  1213  34B0               	retlw	176
  2898  1214  34FF               	retlw	255
  2899  1215  34BD               	retlw	189
  2900  1216  34FF               	retlw	255
  2901  1217  34CB               	retlw	203
  2902  1218  34FF               	retlw	255
  2903  1219  34D8               	retlw	216
  2904  121A  34FF               	retlw	255
  2905  121B  34E5               	retlw	229
  2906  121C  34FF               	retlw	255
  2907                           
  2908                           	psect	idataBANK5
  2909  11A9                     __pidataBANK5:	
  2910                           
  2911                           ;initializer for _mod3
  2912  11A9  3400               	retlw	0
  2913  11AA  3400               	retlw	0
  2914  11AB  3407               	retlw	7
  2915  11AC  3400               	retlw	0
  2916  11AD  340D               	retlw	13
  2917  11AE  3400               	retlw	0
  2918  11AF  3414               	retlw	20
  2919  11B0  3400               	retlw	0
  2920  11B1  341B               	retlw	27
  2921  11B2  3400               	retlw	0
  2922  11B3  3421               	retlw	33
  2923  11B4  3400               	retlw	0
  2924  11B5  3428               	retlw	40
  2925  11B6  3400               	retlw	0
  2926  11B7  342F               	retlw	47
  2927  11B8  3400               	retlw	0
  2928  11B9  3435               	retlw	53
  2929  11BA  3400               	retlw	0
  2930  11BB  343C               	retlw	60
  2931  11BC  3400               	retlw	0
  2932  11BD  3443               	retlw	67
  2933  11BE  3400               	retlw	0
  2934  11BF  3449               	retlw	73
  2935  11C0  3400               	retlw	0
  2936  11C1  3450               	retlw	80
  2937  11C2  3400               	retlw	0
  2938  11C3  3457               	retlw	87
  2939  11C4  3400               	retlw	0
  2940  11C5  345D               	retlw	93
  2941  11C6  3400               	retlw	0
  2942  11C7  349C               	retlw	156
  2943  11C8  34FF               	retlw	255
  2944  11C9  34A3               	retlw	163
  2945  11CA  34FF               	retlw	255
  2946  11CB  34A9               	retlw	169
  2947  11CC  34FF               	retlw	255
  2948  11CD  34B0               	retlw	176
  2949  11CE  34FF               	retlw	255
  2950  11CF  34B7               	retlw	183
  2951  11D0  34FF               	retlw	255
  2952  11D1  34BD               	retlw	189
  2953  11D2  34FF               	retlw	255
  2954  11D3  34C4               	retlw	196
  2955  11D4  34FF               	retlw	255
  2956  11D5  34CB               	retlw	203
  2957  11D6  34FF               	retlw	255
  2958  11D7  34D1               	retlw	209
  2959  11D8  34FF               	retlw	255
  2960  11D9  34D8               	retlw	216
  2961  11DA  34FF               	retlw	255
  2962  11DB  34DF               	retlw	223
  2963  11DC  34FF               	retlw	255
  2964  11DD  34E5               	retlw	229
  2965  11DE  34FF               	retlw	255
  2966  11DF  34EC               	retlw	236
  2967  11E0  34FF               	retlw	255
  2968  11E1  34F3               	retlw	243
  2969  11E2  34FF               	retlw	255
  2970                           
  2971                           	psect	idataBANK6
  2972  116F                     __pidataBANK6:	
  2973                           
  2974                           ;initializer for _mod4
  2975  116F  3464               	retlw	100
  2976  1170  3400               	retlw	0
  2977  1171  3464               	retlw	100
  2978  1172  3400               	retlw	0
  2979  1173  3464               	retlw	100
  2980  1174  3400               	retlw	0
  2981  1175  3464               	retlw	100
  2982  1176  3400               	retlw	0
  2983  1177  3464               	retlw	100
  2984  1178  3400               	retlw	0
  2985  1179  3464               	retlw	100
  2986  117A  3400               	retlw	0
  2987  117B  3464               	retlw	100
  2988  117C  3400               	retlw	0
  2989  117D  3464               	retlw	100
  2990  117E  3400               	retlw	0
  2991  117F  3464               	retlw	100
  2992  1180  3400               	retlw	0
  2993  1181  3464               	retlw	100
  2994  1182  3400               	retlw	0
  2995  1183  3464               	retlw	100
  2996  1184  3400               	retlw	0
  2997  1185  3464               	retlw	100
  2998  1186  3400               	retlw	0
  2999  1187  3464               	retlw	100
  3000  1188  3400               	retlw	0
  3001  1189  3464               	retlw	100
  3002  118A  3400               	retlw	0
  3003  118B  3464               	retlw	100
  3004  118C  3400               	retlw	0
  3005  118D  349C               	retlw	156
  3006  118E  34FF               	retlw	255
  3007  118F  349C               	retlw	156
  3008  1190  34FF               	retlw	255
  3009  1191  349C               	retlw	156
  3010  1192  34FF               	retlw	255
  3011  1193  349C               	retlw	156
  3012  1194  34FF               	retlw	255
  3013  1195  349C               	retlw	156
  3014  1196  34FF               	retlw	255
  3015  1197  349C               	retlw	156
  3016  1198  34FF               	retlw	255
  3017  1199  349C               	retlw	156
  3018  119A  34FF               	retlw	255
  3019  119B  349C               	retlw	156
  3020  119C  34FF               	retlw	255
  3021  119D  349C               	retlw	156
  3022  119E  34FF               	retlw	255
  3023  119F  349C               	retlw	156
  3024  11A0  34FF               	retlw	255
  3025  11A1  349C               	retlw	156
  3026  11A2  34FF               	retlw	255
  3027  11A3  349C               	retlw	156
  3028  11A4  34FF               	retlw	255
  3029  11A5  349C               	retlw	156
  3030  11A6  34FF               	retlw	255
  3031  11A7  349C               	retlw	156
  3032  11A8  34FF               	retlw	255
  3033                           
  3034                           	psect	idataBANK7
  3035  148A                     __pidataBANK7:	
  3036                           
  3037                           ;initializer for _B25k
  3038  148A  34FF               	retlw	255
  3039  148B  3400               	retlw	0
  3040  148C  34FF               	retlw	255
  3041  148D  3400               	retlw	0
  3042  148E  34FF               	retlw	255
  3043  148F  3400               	retlw	0
  3044  1490  34DF               	retlw	223
  3045  1491  3400               	retlw	0
  3046  1492  34AE               	retlw	174
  3047  1493  3400               	retlw	0
  3048  1494  348E               	retlw	142
  3049  1495  3400               	retlw	0
  3050  1496  3478               	retlw	120
  3051  1497  3400               	retlw	0
  3052  1498  3467               	retlw	103
  3053  1499  3400               	retlw	0
  3054  149A  345B               	retlw	91
  3055  149B  3400               	retlw	0
  3056  149C  3450               	retlw	80
  3057  149D  3400               	retlw	0
  3058  149E  3448               	retlw	72
  3059  149F  3400               	retlw	0
  3060  14A0  3442               	retlw	66
  3061  14A1  3400               	retlw	0
  3062  14A2  343C               	retlw	60
  3063  14A3  3400               	retlw	0
  3064  14A4  3437               	retlw	55
  3065  14A5  3400               	retlw	0
  3066  14A6  3433               	retlw	51
  3067  14A7  3400               	retlw	0
  3068  14A8  3430               	retlw	48
  3069  14A9  3400               	retlw	0
  3070  14AA  342D               	retlw	45
  3071  14AB  3400               	retlw	0
  3072  14AC  342A               	retlw	42
  3073  14AD  3400               	retlw	0
  3074  14AE  3427               	retlw	39
  3075  14AF  3400               	retlw	0
  3076  14B0  3425               	retlw	37
  3077  14B1  3400               	retlw	0
  3078  14B2  3423               	retlw	35
  3079  14B3  3400               	retlw	0
  3080  14B4  3421               	retlw	33
  3081  14B5  3400               	retlw	0
  3082  14B6  3420               	retlw	32
  3083  14B7  3400               	retlw	0
  3084  14B8  341E               	retlw	30
  3085  14B9  3400               	retlw	0
  3086  14BA  341D               	retlw	29
  3087  14BB  3400               	retlw	0
  3088  14BC  341C               	retlw	28
  3089  14BD  3400               	retlw	0
  3090  14BE  341B               	retlw	27
  3091  14BF  3400               	retlw	0
  3092  14C0  341A               	retlw	26
  3093  14C1  3400               	retlw	0
  3094  14C2  3419               	retlw	25
  3095  14C3  3400               	retlw	0
  3096  14C4  3418               	retlw	24
  3097  14C5  3400               	retlw	0
  3098  14C6  3417               	retlw	23
  3099  14C7  3400               	retlw	0
  3100  14C8  3416               	retlw	22
  3101  14C9  3400               	retlw	0
  3102  14CA  3415               	retlw	21
  3103  14CB  3400               	retlw	0
  3104  14CC  3415               	retlw	21
  3105  14CD  3400               	retlw	0
  3106  14CE  3414               	retlw	20
  3107  14CF  3400               	retlw	0
  3108  14D0  3413               	retlw	19
  3109  14D1  3400               	retlw	0
  3110  14D2  340F               	retlw	15
  3111  14D3  3400               	retlw	0
  3112  14D4  340B               	retlw	11
  3113  14D5  3400               	retlw	0
  3114  14D6  3407               	retlw	7
  3115  14D7  3400               	retlw	0
  3116  14D8  3407               	retlw	7
  3117  14D9  3400               	retlw	0
  3118                           
  3119                           	psect	idataBANK8
  3120  143A                     __pidataBANK8:	
  3121                           
  3122                           ;initializer for _iB25k
  3123  143A  3407               	retlw	7
  3124  143B  3400               	retlw	0
  3125  143C  3407               	retlw	7
  3126  143D  3400               	retlw	0
  3127  143E  340B               	retlw	11
  3128  143F  3400               	retlw	0
  3129  1440  340F               	retlw	15
  3130  1441  3400               	retlw	0
  3131  1442  3413               	retlw	19
  3132  1443  3400               	retlw	0
  3133  1444  3414               	retlw	20
  3134  1445  3400               	retlw	0
  3135  1446  3415               	retlw	21
  3136  1447  3400               	retlw	0
  3137  1448  3415               	retlw	21
  3138  1449  3400               	retlw	0
  3139  144A  3416               	retlw	22
  3140  144B  3400               	retlw	0
  3141  144C  3417               	retlw	23
  3142  144D  3400               	retlw	0
  3143  144E  3418               	retlw	24
  3144  144F  3400               	retlw	0
  3145  1450  3419               	retlw	25
  3146  1451  3400               	retlw	0
  3147  1452  341A               	retlw	26
  3148  1453  3400               	retlw	0
  3149  1454  341B               	retlw	27
  3150  1455  3400               	retlw	0
  3151  1456  341C               	retlw	28
  3152  1457  3400               	retlw	0
  3153  1458  341D               	retlw	29
  3154  1459  3400               	retlw	0
  3155  145A  341E               	retlw	30
  3156  145B  3400               	retlw	0
  3157  145C  3420               	retlw	32
  3158  145D  3400               	retlw	0
  3159  145E  3421               	retlw	33
  3160  145F  3400               	retlw	0
  3161  1460  3423               	retlw	35
  3162  1461  3400               	retlw	0
  3163  1462  3425               	retlw	37
  3164  1463  3400               	retlw	0
  3165  1464  3427               	retlw	39
  3166  1465  3400               	retlw	0
  3167  1466  342A               	retlw	42
  3168  1467  3400               	retlw	0
  3169  1468  342D               	retlw	45
  3170  1469  3400               	retlw	0
  3171  146A  3430               	retlw	48
  3172  146B  3400               	retlw	0
  3173  146C  3433               	retlw	51
  3174  146D  3400               	retlw	0
  3175  146E  3437               	retlw	55
  3176  146F  3400               	retlw	0
  3177  1470  343C               	retlw	60
  3178  1471  3400               	retlw	0
  3179  1472  3442               	retlw	66
  3180  1473  3400               	retlw	0
  3181  1474  3448               	retlw	72
  3182  1475  3400               	retlw	0
  3183  1476  3450               	retlw	80
  3184  1477  3400               	retlw	0
  3185  1478  345B               	retlw	91
  3186  1479  3400               	retlw	0
  3187  147A  3467               	retlw	103
  3188  147B  3400               	retlw	0
  3189  147C  3478               	retlw	120
  3190  147D  3400               	retlw	0
  3191  147E  348E               	retlw	142
  3192  147F  3400               	retlw	0
  3193  1480  34AE               	retlw	174
  3194  1481  3400               	retlw	0
  3195  1482  34DF               	retlw	223
  3196  1483  3400               	retlw	0
  3197  1484  34FF               	retlw	255
  3198  1485  3400               	retlw	0
  3199  1486  34FF               	retlw	255
  3200  1487  3400               	retlw	0
  3201  1488  34FF               	retlw	255
  3202  1489  3400               	retlw	0
  3203                           
  3204                           	psect	idataBANK9
  3205  1135                     __pidataBANK9:	
  3206                           
  3207                           ;initializer for _mod1
  3208  1135  3400               	retlw	0
  3209  1136  3400               	retlw	0
  3210  1137  3415               	retlw	21
  3211  1138  3400               	retlw	0
  3212  1139  3428               	retlw	40
  3213  113A  3400               	retlw	0
  3214  113B  343B               	retlw	59
  3215  113C  3400               	retlw	0
  3216  113D  344A               	retlw	74
  3217  113E  3400               	retlw	0
  3218  113F  3456               	retlw	86
  3219  1140  3400               	retlw	0
  3220  1141  345F               	retlw	95
  3221  1142  3400               	retlw	0
  3222  1143  3463               	retlw	99
  3223  1144  3400               	retlw	0
  3224  1145  3464               	retlw	100
  3225  1146  3400               	retlw	0
  3226  1147  345F               	retlw	95
  3227  1148  3400               	retlw	0
  3228  1149  3457               	retlw	87
  3229  114A  3400               	retlw	0
  3230  114B  344B               	retlw	75
  3231  114C  3400               	retlw	0
  3232  114D  343C               	retlw	60
  3233  114E  3400               	retlw	0
  3234  114F  342A               	retlw	42
  3235  1150  3400               	retlw	0
  3236  1151  3416               	retlw	22
  3237  1152  3400               	retlw	0
  3238  1153  3402               	retlw	2
  3239  1154  3400               	retlw	0
  3240  1155  34ED               	retlw	237
  3241  1156  34FF               	retlw	255
  3242  1157  34D9               	retlw	217
  3243  1158  34FF               	retlw	255
  3244  1159  34C7               	retlw	199
  3245  115A  34FF               	retlw	255
  3246  115B  34B7               	retlw	183
  3247  115C  34FF               	retlw	255
  3248  115D  34AB               	retlw	171
  3249  115E  34FF               	retlw	255
  3250  115F  34A2               	retlw	162
  3251  1160  34FF               	retlw	255
  3252  1161  349D               	retlw	157
  3253  1162  34FF               	retlw	255
  3254  1163  349C               	retlw	156
  3255  1164  34FF               	retlw	255
  3256  1165  34A8               	retlw	168
  3257  1166  34FF               	retlw	255
  3258  1167  34B4               	retlw	180
  3259  1168  34FF               	retlw	255
  3260  1169  34C3               	retlw	195
  3261  116A  34FF               	retlw	255
  3262  116B  34D5               	retlw	213
  3263  116C  34FF               	retlw	255
  3264  116D  34E8               	retlw	232
  3265  116E  34FF               	retlw	255
  3266                           
  3267                           	psect	idataBIGRAM
  3268  0D88                     __pidataBIGRAM:	
  3269                           
  3270                           ;initializer for _delay
  3271  0D88  3422               	retlw	34
  3272  0D89  3408               	retlw	8
  3273  0D8A  34FC               	retlw	252
  3274  0D8B  3407               	retlw	7
  3275  0D8C  34D8               	retlw	216
  3276  0D8D  3407               	retlw	7
  3277  0D8E  34B5               	retlw	181
  3278  0D8F  3407               	retlw	7
  3279  0D90  3493               	retlw	147
  3280  0D91  3407               	retlw	7
  3281  0D92  3472               	retlw	114
  3282  0D93  3407               	retlw	7
  3283  0D94  3452               	retlw	82
  3284  0D95  3407               	retlw	7
  3285  0D96  3434               	retlw	52
  3286  0D97  3407               	retlw	7
  3287  0D98  3416               	retlw	22
  3288  0D99  3407               	retlw	7
  3289  0D9A  34F9               	retlw	249
  3290  0D9B  3406               	retlw	6
  3291  0D9C  34DD               	retlw	221
  3292  0D9D  3406               	retlw	6
  3293  0D9E  34C2               	retlw	194
  3294  0D9F  3406               	retlw	6
  3295  0DA0  34A8               	retlw	168
  3296  0DA1  3406               	retlw	6
  3297  0DA2  348F               	retlw	143
  3298  0DA3  3406               	retlw	6
  3299  0DA4  3476               	retlw	118
  3300  0DA5  3406               	retlw	6
  3301  0DA6  345E               	retlw	94
  3302  0DA7  3406               	retlw	6
  3303  0DA8  3447               	retlw	71
  3304  0DA9  3406               	retlw	6
  3305  0DAA  3430               	retlw	48
  3306  0DAB  3406               	retlw	6
  3307  0DAC  341A               	retlw	26
  3308  0DAD  3406               	retlw	6
  3309  0DAE  3405               	retlw	5
  3310  0DAF  3406               	retlw	6
  3311  0DB0  34F0               	retlw	240
  3312  0DB1  3405               	retlw	5
  3313  0DB2  34DC               	retlw	220
  3314  0DB3  3405               	retlw	5
  3315  0DB4  34C8               	retlw	200
  3316  0DB5  3405               	retlw	5
  3317  0DB6  34B5               	retlw	181
  3318  0DB7  3405               	retlw	5
  3319  0DB8  34A3               	retlw	163
  3320  0DB9  3405               	retlw	5
  3321  0DBA  3490               	retlw	144
  3322  0DBB  3405               	retlw	5
  3323  0DBC  347F               	retlw	127
  3324  0DBD  3405               	retlw	5
  3325  0DBE  346D               	retlw	109
  3326  0DBF  3405               	retlw	5
  3327  0DC0  345C               	retlw	92
  3328  0DC1  3405               	retlw	5
  3329  0DC2  344C               	retlw	76
  3330  0DC3  3405               	retlw	5
  3331  0DC4  343C               	retlw	60
  3332  0DC5  3405               	retlw	5
  3333  0DC6  342C               	retlw	44
  3334  0DC7  3405               	retlw	5
  3335  0DC8  341D               	retlw	29
  3336  0DC9  3405               	retlw	5
  3337  0DCA  340E               	retlw	14
  3338  0DCB  3405               	retlw	5
  3339  0DCC  34FF               	retlw	255
  3340  0DCD  3404               	retlw	4
  3341  0DCE  34F1               	retlw	241
  3342  0DCF  3404               	retlw	4
  3343  0DD0  34E2               	retlw	226
  3344  0DD1  3404               	retlw	4
  3345  0DD2  34D5               	retlw	213
  3346  0DD3  3404               	retlw	4
  3347  0DD4  34C7               	retlw	199
  3348  0DD5  3404               	retlw	4
  3349  0DD6  34BA               	retlw	186
  3350  0DD7  3404               	retlw	4
  3351  0DD8  34AD               	retlw	173
  3352  0DD9  3404               	retlw	4
  3353  0DDA  34A1               	retlw	161
  3354  0DDB  3404               	retlw	4
  3355  0DDC  3494               	retlw	148
  3356  0DDD  3404               	retlw	4
  3357  0DDE  3488               	retlw	136
  3358  0DDF  3404               	retlw	4
  3359  0DE0  347D               	retlw	125
  3360  0DE1  3404               	retlw	4
  3361  0DE2  3471               	retlw	113
  3362  0DE3  3404               	retlw	4
  3363  0DE4  3466               	retlw	102
  3364  0DE5  3404               	retlw	4
  3365  0DE6  345A               	retlw	90
  3366  0DE7  3404               	retlw	4
  3367  0DE8  3450               	retlw	80
  3368  0DE9  3404               	retlw	4
  3369  0DEA  3445               	retlw	69
  3370  0DEB  3404               	retlw	4
  3371  0DEC  343A               	retlw	58
  3372  0DED  3404               	retlw	4
  3373  0DEE  3430               	retlw	48
  3374  0DEF  3404               	retlw	4
  3375  0DF0  3426               	retlw	38
  3376  0DF1  3404               	retlw	4
  3377  0DF2  341C               	retlw	28
  3378  0DF3  3404               	retlw	4
  3379  0DF4  3412               	retlw	18
  3380  0DF5  3404               	retlw	4
  3381  0DF6  3409               	retlw	9
  3382  0DF7  3404               	retlw	4
  3383  0DF8  34FF               	retlw	255
  3384  0DF9  3403               	retlw	3
  3385  0DFA  34F6               	retlw	246
  3386  0DFB  3403               	retlw	3
  3387  0DFC  34ED               	retlw	237
  3388  0DFD  3403               	retlw	3
  3389  0DFE  34E4               	retlw	228
  3390  0DFF  3403               	retlw	3
  3391  0E00  34DC               	retlw	220
  3392  0E01  3403               	retlw	3
  3393  0E02  34D3               	retlw	211
  3394  0E03  3403               	retlw	3
  3395  0E04  34CB               	retlw	203
  3396  0E05  3403               	retlw	3
  3397  0E06  34C2               	retlw	194
  3398  0E07  3403               	retlw	3
  3399  0E08  34BA               	retlw	186
  3400  0E09  3403               	retlw	3
  3401  0E0A  34B2               	retlw	178
  3402  0E0B  3403               	retlw	3
  3403  0E0C  34AA               	retlw	170
  3404  0E0D  3403               	retlw	3
  3405  0E0E  34A2               	retlw	162
  3406  0E0F  3403               	retlw	3
  3407  0E10  349B               	retlw	155
  3408  0E11  3403               	retlw	3
  3409  0E12  3493               	retlw	147
  3410  0E13  3403               	retlw	3
  3411  0E14  348C               	retlw	140
  3412  0E15  3403               	retlw	3
  3413  0E16  3485               	retlw	133
  3414  0E17  3403               	retlw	3
  3415  0E18  347E               	retlw	126
  3416  0E19  3403               	retlw	3
  3417  0E1A  3477               	retlw	119
  3418  0E1B  3403               	retlw	3
  3419  0E1C  3470               	retlw	112
  3420  0E1D  3403               	retlw	3
  3421  0E1E  3469               	retlw	105
  3422  0E1F  3403               	retlw	3
  3423  0E20  3462               	retlw	98
  3424  0E21  3403               	retlw	3
  3425  0E22  345C               	retlw	92
  3426  0E23  3403               	retlw	3
  3427  0E24  3455               	retlw	85
  3428  0E25  3403               	retlw	3
  3429  0E26  344F               	retlw	79
  3430  0E27  3403               	retlw	3
  3431  0E28  3448               	retlw	72
  3432  0E29  3403               	retlw	3
  3433  0E2A  3442               	retlw	66
  3434  0E2B  3403               	retlw	3
  3435  0E2C  343C               	retlw	60
  3436  0E2D  3403               	retlw	3
  3437  0E2E  3436               	retlw	54
  3438  0E2F  3403               	retlw	3
  3439  0E30  3430               	retlw	48
  3440  0E31  3403               	retlw	3
  3441  0E32  342A               	retlw	42
  3442  0E33  3403               	retlw	3
  3443  0E34  3424               	retlw	36
  3444  0E35  3403               	retlw	3
  3445  0E36  341F               	retlw	31
  3446  0E37  3403               	retlw	3
  3447  0E38  3419               	retlw	25
  3448  0E39  3403               	retlw	3
  3449  0E3A  3413               	retlw	19
  3450  0E3B  3403               	retlw	3
  3451  0E3C  340E               	retlw	14
  3452  0E3D  3403               	retlw	3
  3453  0E3E  3409               	retlw	9
  3454  0E3F  3403               	retlw	3
  3455  0E40  3403               	retlw	3
  3456  0E41  3403               	retlw	3
  3457  0E42  34FE               	retlw	254
  3458  0E43  3402               	retlw	2
  3459  0E44  34F9               	retlw	249
  3460  0E45  3402               	retlw	2
  3461  0E46  34F4               	retlw	244
  3462  0E47  3402               	retlw	2
  3463  0E48  34EF               	retlw	239
  3464  0E49  3402               	retlw	2
  3465  0E4A  34EA               	retlw	234
  3466  0E4B  3402               	retlw	2
  3467  0E4C  34E5               	retlw	229
  3468  0E4D  3402               	retlw	2
  3469  0E4E  34E0               	retlw	224
  3470  0E4F  3402               	retlw	2
  3471  0E50  34DB               	retlw	219
  3472  0E51  3402               	retlw	2
  3473  0E52  34D7               	retlw	215
  3474  0E53  3402               	retlw	2
  3475  0E54  34D2               	retlw	210
  3476  0E55  3402               	retlw	2
  3477  0E56  34CD               	retlw	205
  3478  0E57  3402               	retlw	2
  3479  0E58  34C9               	retlw	201
  3480  0E59  3402               	retlw	2
  3481  0E5A  34C4               	retlw	196
  3482  0E5B  3402               	retlw	2
  3483  0E5C  34C0               	retlw	192
  3484  0E5D  3402               	retlw	2
  3485  0E5E  34BC               	retlw	188
  3486  0E5F  3402               	retlw	2
  3487  0E60  34B7               	retlw	183
  3488  0E61  3402               	retlw	2
  3489  0E62  34B3               	retlw	179
  3490  0E63  3402               	retlw	2
  3491  0E64  34AF               	retlw	175
  3492  0E65  3402               	retlw	2
  3493  0E66  34AB               	retlw	171
  3494  0E67  3402               	retlw	2
  3495  0E68  34A6               	retlw	166
  3496  0E69  3402               	retlw	2
  3497  0E6A  34A2               	retlw	162
  3498  0E6B  3402               	retlw	2
  3499  0E6C  349E               	retlw	158
  3500  0E6D  3402               	retlw	2
  3501  0E6E  349A               	retlw	154
  3502  0E6F  3402               	retlw	2
  3503  0E70  3497               	retlw	151
  3504  0E71  3402               	retlw	2
  3505  0E72  3493               	retlw	147
  3506  0E73  3402               	retlw	2
  3507  0E74  348F               	retlw	143
  3508  0E75  3402               	retlw	2
  3509  0E76  348B               	retlw	139
  3510  0E77  3402               	retlw	2
  3511  0E78  3487               	retlw	135
  3512  0E79  3402               	retlw	2
  3513  0E7A  3484               	retlw	132
  3514  0E7B  3402               	retlw	2
  3515  0E7C  3480               	retlw	128
  3516  0E7D  3402               	retlw	2
  3517  0E7E  347C               	retlw	124
  3518  0E7F  3402               	retlw	2
  3519  0E80  3479               	retlw	121
  3520  0E81  3402               	retlw	2
  3521  0E82  3475               	retlw	117
  3522  0E83  3402               	retlw	2
  3523  0E84  3472               	retlw	114
  3524  0E85  3402               	retlw	2
  3525  0E86  346E               	retlw	110
  3526  0E87  3402               	retlw	2
  3527  0E88  346B               	retlw	107
  3528  0E89  3402               	retlw	2
  3529  0E8A  3467               	retlw	103
  3530  0E8B  3402               	retlw	2
  3531  0E8C  3464               	retlw	100
  3532  0E8D  3402               	retlw	2
  3533  0E8E  3461               	retlw	97
  3534  0E8F  3402               	retlw	2
  3535  0E90  345E               	retlw	94
  3536  0E91  3402               	retlw	2
  3537  0E92  345A               	retlw	90
  3538  0E93  3402               	retlw	2
  3539  0E94  3457               	retlw	87
  3540  0E95  3402               	retlw	2
  3541  0E96  3454               	retlw	84
  3542  0E97  3402               	retlw	2
  3543  0E98  3451               	retlw	81
  3544  0E99  3402               	retlw	2
  3545  0E9A  344E               	retlw	78
  3546  0E9B  3402               	retlw	2
  3547  0E9C  344B               	retlw	75
  3548  0E9D  3402               	retlw	2
  3549  0E9E  3448               	retlw	72
  3550  0E9F  3402               	retlw	2
  3551  0EA0  3445               	retlw	69
  3552  0EA1  3402               	retlw	2
  3553  0EA2  3442               	retlw	66
  3554  0EA3  3402               	retlw	2
  3555  0EA4  343F               	retlw	63
  3556  0EA5  3402               	retlw	2
  3557  0EA6  343C               	retlw	60
  3558  0EA7  3402               	retlw	2
  3559  0EA8  3439               	retlw	57
  3560  0EA9  3402               	retlw	2
  3561  0EAA  3436               	retlw	54
  3562  0EAB  3402               	retlw	2
  3563  0EAC  3433               	retlw	51
  3564  0EAD  3402               	retlw	2
  3565  0EAE  3430               	retlw	48
  3566  0EAF  3402               	retlw	2
  3567  0EB0  342E               	retlw	46
  3568  0EB1  3402               	retlw	2
  3569  0EB2  342B               	retlw	43
  3570  0EB3  3402               	retlw	2
  3571  0EB4  3428               	retlw	40
  3572  0EB5  3402               	retlw	2
  3573  0EB6  3425               	retlw	37
  3574  0EB7  3402               	retlw	2
  3575  0EB8  3423               	retlw	35
  3576  0EB9  3402               	retlw	2
  3577  0EBA  3420               	retlw	32
  3578  0EBB  3402               	retlw	2
  3579  0EBC  341E               	retlw	30
  3580  0EBD  3402               	retlw	2
  3581  0EBE  341B               	retlw	27
  3582  0EBF  3402               	retlw	2
  3583  0EC0  3418               	retlw	24
  3584  0EC1  3402               	retlw	2
  3585  0EC2  3416               	retlw	22
  3586  0EC3  3402               	retlw	2
  3587  0EC4  3413               	retlw	19
  3588  0EC5  3402               	retlw	2
  3589  0EC6  3411               	retlw	17
  3590  0EC7  3402               	retlw	2
  3591  0EC8  340E               	retlw	14
  3592  0EC9  3402               	retlw	2
  3593  0ECA  340C               	retlw	12
  3594  0ECB  3402               	retlw	2
  3595  0ECC  340A               	retlw	10
  3596  0ECD  3402               	retlw	2
  3597  0ECE  3407               	retlw	7
  3598  0ECF  3402               	retlw	2
  3599  0ED0  3405               	retlw	5
  3600  0ED1  3402               	retlw	2
  3601  0ED2  3402               	retlw	2
  3602  0ED3  3402               	retlw	2
  3603  0ED4  3400               	retlw	0
  3604  0ED5  3402               	retlw	2
  3605  0ED6  34FE               	retlw	254
  3606  0ED7  3401               	retlw	1
  3607  0ED8  34FB               	retlw	251
  3608  0ED9  3401               	retlw	1
  3609  0EDA  34F9               	retlw	249
  3610  0EDB  3401               	retlw	1
  3611  0EDC  34F7               	retlw	247
  3612  0EDD  3401               	retlw	1
  3613  0EDE  34F5               	retlw	245
  3614  0EDF  3401               	retlw	1
  3615  0EE0  34F2               	retlw	242
  3616  0EE1  3401               	retlw	1
  3617  0EE2  34F0               	retlw	240
  3618  0EE3  3401               	retlw	1
  3619  0EE4  34EE               	retlw	238
  3620  0EE5  3401               	retlw	1
  3621  0EE6  34EC               	retlw	236
  3622  0EE7  3401               	retlw	1
  3623  0EE8  34EA               	retlw	234
  3624  0EE9  3401               	retlw	1
  3625  0EEA  34E8               	retlw	232
  3626  0EEB  3401               	retlw	1
  3627  0EEC  34E6               	retlw	230
  3628  0EED  3401               	retlw	1
  3629  0EEE  34E3               	retlw	227
  3630  0EEF  3401               	retlw	1
  3631  0EF0  34E1               	retlw	225
  3632  0EF1  3401               	retlw	1
  3633  0EF2  34DF               	retlw	223
  3634  0EF3  3401               	retlw	1
  3635  0EF4  34DD               	retlw	221
  3636  0EF5  3401               	retlw	1
  3637  0EF6  34DB               	retlw	219
  3638  0EF7  3401               	retlw	1
  3639  0EF8  34D9               	retlw	217
  3640  0EF9  3401               	retlw	1
  3641  0EFA  34D7               	retlw	215
  3642  0EFB  3401               	retlw	1
  3643  0EFC  34D5               	retlw	213
  3644  0EFD  3401               	retlw	1
  3645  0EFE  34D3               	retlw	211
  3646  0EFF  3401               	retlw	1
  3647  0F00  34D2               	retlw	210
  3648  0F01  3401               	retlw	1
  3649  0F02  34D0               	retlw	208
  3650  0F03  3401               	retlw	1
  3651  0F04  34CE               	retlw	206
  3652  0F05  3401               	retlw	1
  3653  0F06  34CC               	retlw	204
  3654  0F07  3401               	retlw	1
  3655  0F08  34CA               	retlw	202
  3656  0F09  3401               	retlw	1
  3657  0F0A  34C8               	retlw	200
  3658  0F0B  3401               	retlw	1
  3659  0F0C  34C6               	retlw	198
  3660  0F0D  3401               	retlw	1
  3661  0F0E  34C4               	retlw	196
  3662  0F0F  3401               	retlw	1
  3663  0F10  34C3               	retlw	195
  3664  0F11  3401               	retlw	1
  3665  0F12  34C1               	retlw	193
  3666  0F13  3401               	retlw	1
  3667  0F14  34BF               	retlw	191
  3668  0F15  3401               	retlw	1
  3669  0F16  34BD               	retlw	189
  3670  0F17  3401               	retlw	1
  3671  0F18  34BC               	retlw	188
  3672  0F19  3401               	retlw	1
  3673  0F1A  34BA               	retlw	186
  3674  0F1B  3401               	retlw	1
  3675  0F1C  34B8               	retlw	184
  3676  0F1D  3401               	retlw	1
  3677  0F1E  34B6               	retlw	182
  3678  0F1F  3401               	retlw	1
  3679  0F20  34B5               	retlw	181
  3680  0F21  3401               	retlw	1
  3681  0F22  34B3               	retlw	179
  3682  0F23  3401               	retlw	1
  3683  0F24  34B1               	retlw	177
  3684  0F25  3401               	retlw	1
  3685  0F26  34B0               	retlw	176
  3686  0F27  3401               	retlw	1
  3687  0F28  34AE               	retlw	174
  3688  0F29  3401               	retlw	1
  3689  0F2A  34AC               	retlw	172
  3690  0F2B  3401               	retlw	1
  3691  0F2C  34AB               	retlw	171
  3692  0F2D  3401               	retlw	1
  3693  0F2E  34A9               	retlw	169
  3694  0F2F  3401               	retlw	1
  3695  0F30  34A8               	retlw	168
  3696  0F31  3401               	retlw	1
  3697  0F32  34A6               	retlw	166
  3698  0F33  3401               	retlw	1
  3699  0F34  34A4               	retlw	164
  3700  0F35  3401               	retlw	1
  3701  0F36  34A3               	retlw	163
  3702  0F37  3401               	retlw	1
  3703  0F38  34A1               	retlw	161
  3704  0F39  3401               	retlw	1
  3705  0F3A  34A0               	retlw	160
  3706  0F3B  3401               	retlw	1
  3707  0F3C  349E               	retlw	158
  3708  0F3D  3401               	retlw	1
  3709  0F3E  349D               	retlw	157
  3710  0F3F  3401               	retlw	1
  3711  0F40  349B               	retlw	155
  3712  0F41  3401               	retlw	1
  3713  0F42  349A               	retlw	154
  3714  0F43  3401               	retlw	1
  3715  0F44  3498               	retlw	152
  3716  0F45  3401               	retlw	1
  3717  0F46  3497               	retlw	151
  3718  0F47  3401               	retlw	1
  3719  0F48  3495               	retlw	149
  3720  0F49  3401               	retlw	1
  3721  0F4A  3494               	retlw	148
  3722  0F4B  3401               	retlw	1
  3723  0F4C  3492               	retlw	146
  3724  0F4D  3401               	retlw	1
  3725  0F4E  3491               	retlw	145
  3726  0F4F  3401               	retlw	1
  3727  0F50  3490               	retlw	144
  3728  0F51  3401               	retlw	1
  3729  0F52  348E               	retlw	142
  3730  0F53  3401               	retlw	1
  3731  0F54  348D               	retlw	141
  3732  0F55  3401               	retlw	1
  3733  0F56  348B               	retlw	139
  3734  0F57  3401               	retlw	1
  3735  0F58  348A               	retlw	138
  3736  0F59  3401               	retlw	1
  3737  0F5A  3489               	retlw	137
  3738  0F5B  3401               	retlw	1
  3739  0F5C  3487               	retlw	135
  3740  0F5D  3401               	retlw	1
  3741  0F5E  3486               	retlw	134
  3742  0F5F  3401               	retlw	1
  3743  0F60  3485               	retlw	133
  3744  0F61  3401               	retlw	1
  3745  0F62  3483               	retlw	131
  3746  0F63  3401               	retlw	1
  3747  0F64  3482               	retlw	130
  3748  0F65  3401               	retlw	1
  3749  0F66  3481               	retlw	129
  3750  0F67  3401               	retlw	1
  3751  0F68  347F               	retlw	127
  3752  0F69  3401               	retlw	1
  3753  0F6A  347E               	retlw	126
  3754  0F6B  3401               	retlw	1
  3755  0F6C  347D               	retlw	125
  3756  0F6D  3401               	retlw	1
  3757  0F6E  347B               	retlw	123
  3758  0F6F  3401               	retlw	1
  3759  0F70  347A               	retlw	122
  3760  0F71  3401               	retlw	1
  3761  0F72  3479               	retlw	121
  3762  0F73  3401               	retlw	1
  3763  0F74  3478               	retlw	120
  3764  0F75  3401               	retlw	1
  3765  0F76  3476               	retlw	118
  3766  0F77  3401               	retlw	1
  3767  0F78  3475               	retlw	117
  3768  0F79  3401               	retlw	1
  3769  0F7A  3474               	retlw	116
  3770  0F7B  3401               	retlw	1
  3771  0F7C  3473               	retlw	115
  3772  0F7D  3401               	retlw	1
  3773  0F7E  3471               	retlw	113
  3774  0F7F  3401               	retlw	1
  3775  0F80  3470               	retlw	112
  3776  0F81  3401               	retlw	1
  3777  0F82  346F               	retlw	111
  3778  0F83  3401               	retlw	1
  3779  0F84  346E               	retlw	110
  3780  0F85  3401               	retlw	1
  3781                           
  3782                           ;initializer for _mod5
  3783  0F86  3400               	retlw	0
  3784  0F87  3400               	retlw	0
  3785  0F88  340A               	retlw	10
  3786  0F89  3400               	retlw	0
  3787  0F8A  3414               	retlw	20
  3788  0F8B  3400               	retlw	0
  3789  0F8C  341E               	retlw	30
  3790  0F8D  3400               	retlw	0
  3791  0F8E  3428               	retlw	40
  3792  0F8F  3400               	retlw	0
  3793  0F90  3432               	retlw	50
  3794  0F91  3400               	retlw	0
  3795  0F92  343A               	retlw	58
  3796  0F93  3400               	retlw	0
  3797  0F94  3442               	retlw	66
  3798  0F95  3400               	retlw	0
  3799  0F96  344A               	retlw	74
  3800  0F97  3400               	retlw	0
  3801  0F98  3450               	retlw	80
  3802  0F99  3400               	retlw	0
  3803  0F9A  3456               	retlw	86
  3804  0F9B  3400               	retlw	0
  3805  0F9C  345B               	retlw	91
  3806  0F9D  3400               	retlw	0
  3807  0F9E  345F               	retlw	95
  3808  0F9F  3400               	retlw	0
  3809  0FA0  3461               	retlw	97
  3810  0FA1  3400               	retlw	0
  3811  0FA2  3463               	retlw	99
  3812  0FA3  3400               	retlw	0
  3813  0FA4  3464               	retlw	100
  3814  0FA5  3400               	retlw	0
  3815  0FA6  3463               	retlw	99
  3816  0FA7  3400               	retlw	0
  3817  0FA8  3461               	retlw	97
  3818  0FA9  3400               	retlw	0
  3819  0FAA  345F               	retlw	95
  3820  0FAB  3400               	retlw	0
  3821  0FAC  345B               	retlw	91
  3822  0FAD  3400               	retlw	0
  3823  0FAE  3456               	retlw	86
  3824  0FAF  3400               	retlw	0
  3825  0FB0  3450               	retlw	80
  3826  0FB1  3400               	retlw	0
  3827  0FB2  344A               	retlw	74
  3828  0FB3  3400               	retlw	0
  3829  0FB4  3442               	retlw	66
  3830  0FB5  3400               	retlw	0
  3831  0FB6  343A               	retlw	58
  3832  0FB7  3400               	retlw	0
  3833  0FB8  3432               	retlw	50
  3834  0FB9  3400               	retlw	0
  3835  0FBA  3428               	retlw	40
  3836  0FBB  3400               	retlw	0
  3837  0FBC  341E               	retlw	30
  3838  0FBD  3400               	retlw	0
  3839  0FBE  3414               	retlw	20
  3840  0FBF  3400               	retlw	0
  3841  0FC0  340A               	retlw	10
  3842  0FC1  3400               	retlw	0
  3843  0FC2  3400               	retlw	0
  3844  0FC3  3400               	retlw	0
  3845  0FC4  34F6               	retlw	246
  3846  0FC5  34FF               	retlw	255
  3847  0FC6  34EC               	retlw	236
  3848  0FC7  34FF               	retlw	255
  3849  0FC8  34E2               	retlw	226
  3850  0FC9  34FF               	retlw	255
  3851  0FCA  34D8               	retlw	216
  3852  0FCB  34FF               	retlw	255
  3853  0FCC  34CE               	retlw	206
  3854  0FCD  34FF               	retlw	255
  3855  0FCE  34C6               	retlw	198
  3856  0FCF  34FF               	retlw	255
  3857  0FD0  34BE               	retlw	190
  3858  0FD1  34FF               	retlw	255
  3859  0FD2  34B6               	retlw	182
  3860  0FD3  34FF               	retlw	255
  3861  0FD4  34B0               	retlw	176
  3862  0FD5  34FF               	retlw	255
  3863  0FD6  34AA               	retlw	170
  3864  0FD7  34FF               	retlw	255
  3865  0FD8  34A5               	retlw	165
  3866  0FD9  34FF               	retlw	255
  3867  0FDA  34A1               	retlw	161
  3868  0FDB  34FF               	retlw	255
  3869  0FDC  349F               	retlw	159
  3870  0FDD  34FF               	retlw	255
  3871  0FDE  349D               	retlw	157
  3872  0FDF  34FF               	retlw	255
  3873  0FE0  349C               	retlw	156
  3874  0FE1  34FF               	retlw	255
  3875  0FE2  349D               	retlw	157
  3876  0FE3  34FF               	retlw	255
  3877  0FE4  349F               	retlw	159
  3878  0FE5  34FF               	retlw	255
  3879  0FE6  34A1               	retlw	161
  3880  0FE7  34FF               	retlw	255
  3881  0FE8  34A5               	retlw	165
  3882  0FE9  34FF               	retlw	255
  3883  0FEA  34AA               	retlw	170
  3884  0FEB  34FF               	retlw	255
  3885  0FEC  34B0               	retlw	176
  3886  0FED  34FF               	retlw	255
  3887  0FEE  34B6               	retlw	182
  3888  0FEF  34FF               	retlw	255
  3889  0FF0  34BE               	retlw	190
  3890  0FF1  34FF               	retlw	255
  3891  0FF2  34C6               	retlw	198
  3892  0FF3  34FF               	retlw	255
  3893  0FF4  34CE               	retlw	206
  3894  0FF5  34FF               	retlw	255
  3895  0FF6  34D8               	retlw	216
  3896  0FF7  34FF               	retlw	255
  3897  0FF8  34E2               	retlw	226
  3898  0FF9  34FF               	retlw	255
  3899  0FFA  34EC               	retlw	236
  3900  0FFB  34FF               	retlw	255
  3901  0FFC  34F6               	retlw	246
  3902  0FFD  34FF               	retlw	255
  3903  0FFE  3400               	retlw	0
  3904  0FFF  3400               	retlw	0
  3905  000B                     _INTCONbits	set	11
  3906  000E                     _PORTCbits	set	14
  3907  000F                     _PORTDbits	set	15
  3908  0010                     _PORTEbits	set	16
  3909  001B                     _PR2	set	27
  3910  001C                     _T2CONbits	set	28
  3911  009D                     _ADCON0bits	set	157
  3912  009E                     _ADCON1bits	set	158
  3913  009C                     _ADRESH	set	156
  3914  009B                     _ADRESL	set	155
  3915  0095                     _OPTION_REGbits	set	149
  3916  0099                     _OSCCONbits	set	153
  3917  008D                     _TRISBbits	set	141
  3918  008E                     _TRISCbits	set	142
  3919  008F                     _TRISDbits	set	143
  3920  0090                     _TRISEbits	set	144
  3921  011D                     _APFCONbits	set	285
  3922  010D                     _LATBbits	set	269
  3923  010F                     _LATDbits	set	271
  3924  0190                     _ANSELEbits	set	400
  3925  0192                     _PMADRH	set	402
  3926  0191                     _PMADRL	set	401
  3927  0195                     _PMCON1bits	set	405
  3928  0196                     _PMCON2	set	406
  3929  0194                     _PMDATH	set	404
  3930  0193                     _PMDATL	set	403
  3931  0291                     _CCPR1	set	657
  3932  0298                     _CCPR2	set	664
  3933  0293                     _CCP1CONbits	set	659
  3934  029A                     _CCP2CONbits	set	666
  3935  029D                     _CCPTMRS0	set	669
  3936  029E                     _CCPTMRS1	set	670
  3937  029F                     _CCPTMRS2	set	671
  3938  0311                     _CCPR3	set	785
  3939  0318                     _CCPR4	set	792
  3940  031C                     _CCPR5	set	796
  3941  0313                     _CCP3CONbits	set	787
  3942  031A                     _CCP4CONbits	set	794
  3943  031E                     _CCP5CONbits	set	798
  3944  030C                     _TRISFbits	set	780
  3945  030D                     _TRISGbits	set	781
  3946  038C                     _LATFbits	set	908
  3947  038D                     _LATGbits	set	909
  3948  040C                     _ANSELFbits	set	1036
  3949  061A                     _CCPR9	set	1562
  3950  061F                     _CCP10CONbits	set	1567
  3951  0613                     _CCP6CONbits	set	1555
  3952  0616                     _CCP7CONbits	set	1558
  3953  0619                     _CCP8CONbits	set	1561
  3954  061C                     _CCP9CONbits	set	1564
  3955                           
  3956                           ; #config settings
  3957  0000                     
  3958                           	psect	cinit
  3959  015C                     start_initialization:	
  3960  015C                     __initialization:		;BIGRAM
  3961                           
  3962                           ; Clear objects allocated to COMMON
  3963  015C  01F9               	clrf	__pbssCOMMON& (0+127)
  3964  015D  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  3965  015E  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  3966  015F  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  3967  0160  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  3968                           
  3969                           ; Clear objects allocated to BANK1
  3970  0161  30DC               	movlw	low __pbssBANK1
  3971  0162  0084               	movwf	4
  3972  0163  3000               	movlw	high __pbssBANK1
  3973  0164  0085               	movwf	5
  3974  0165  3014               	movlw	20
  3975  0166  00FE               	movwf	btemp
  3976  0167  3000               	movlw	0
  3977  0168  00FF               	movwf	btemp+1
  3978  0169  319E  26BD  3181   	fcall	clear_ram0
  3979                           
  3980                           ; Clear objects allocated to BANK2
  3981  016C  3020               	movlw	low __pbssBANK2
  3982  016D  0084               	movwf	4
  3983  016E  3001               	movlw	high __pbssBANK2
  3984  016F  0085               	movwf	5
  3985  0170  3043               	movlw	67
  3986  0171  00FE               	movwf	btemp
  3987  0172  3000               	movlw	0
  3988  0173  00FF               	movwf	btemp+1
  3989  0174  319E  26BD  3181   	fcall	clear_ram0
  3990                           
  3991                           ; Clear objects allocated to BANK3
  3992  0177  30A0               	movlw	low __pbssBANK3
  3993  0178  0084               	movwf	4
  3994  0179  3001               	movlw	high __pbssBANK3
  3995  017A  0085               	movwf	5
  3996  017B  3030               	movlw	48
  3997  017C  00FE               	movwf	btemp
  3998  017D  3000               	movlw	0
  3999  017E  00FF               	movwf	btemp+1
  4000  017F  319E  26BD  3181   	fcall	clear_ram0
  4001                           
  4002                           ; Clear objects allocated to BANK10
  4003  0182  3020               	movlw	low __pbssBANK10
  4004  0183  0084               	movwf	4
  4005  0184  3005               	movlw	high __pbssBANK10
  4006  0185  0085               	movwf	5
  4007  0186  3040               	movlw	64
  4008  0187  00FE               	movwf	btemp
  4009  0188  3000               	movlw	0
  4010  0189  00FF               	movwf	btemp+1
  4011  018A  319E  26BD  3181   	fcall	clear_ram0
  4012                           
  4013                           ; Initialize objects allocated to BIGRAM
  4014  018D  3088               	movlw	low __pidataBIGRAM
  4015  018E  0084               	movwf	4
  4016  018F  308D               	movlw	(high __pidataBIGRAM)| (0+128)
  4017  0190  0085               	movwf	5
  4018  0191  3078               	movlw	low (0+9080)
  4019  0192  0086               	movwf	6
  4020  0193  3023               	movlw	high (0+9080)
  4021  0194  0087               	movwf	7
  4022  0195  3002               	movlw	2
  4023  0196  00FF               	movwf	btemp+1
  4024  0197  3078               	movlw	120
  4025  0198  319E  26B1  3181   	fcall	init_ram
  4026                           
  4027                           ; Initialize objects allocated to BANK0
  4028  019B  3187  27FD  3181   	fcall	__pidataBANK0	;fetch initializer
  4029  019E  00EF               	movwf	__pdataBANK0& (0+127)
  4030                           
  4031                           ; Initialize objects allocated to BANK1
  4032  019F  3072               	movlw	low __pidataBANK1
  4033  01A0  0084               	movwf	4
  4034  01A1  309F               	movlw	(high __pidataBANK1)| (0+128)
  4035  01A2  0085               	movwf	5
  4036  01A3  30BF               	movlw	low __pdataBANK1
  4037  01A4  0086               	movwf	6
  4038  01A5  3000               	movlw	high __pdataBANK1
  4039  01A6  0087               	movwf	7
  4040  01A7  3000               	movlw	0
  4041  01A8  00FF               	movwf	btemp+1
  4042  01A9  301D               	movlw	29
  4043  01AA  319E  26B1  3181   	fcall	init_ram
  4044                           
  4045                           ; Initialize objects allocated to BANK2
  4046  01AD  30C9               	movlw	low __pidataBANK2
  4047  01AE  0084               	movwf	4
  4048  01AF  309E               	movlw	(high __pidataBANK2)| (0+128)
  4049  01B0  0085               	movwf	5
  4050  01B1  3063               	movlw	low __pdataBANK2
  4051  01B2  0086               	movwf	6
  4052  01B3  3001               	movlw	high __pdataBANK2
  4053  01B4  0087               	movwf	7
  4054  01B5  3000               	movlw	0
  4055  01B6  00FF               	movwf	btemp+1
  4056  01B7  300C               	movlw	12
  4057  01B8  319E  26B1  3181   	fcall	init_ram
  4058                           
  4059                           ; Initialize objects allocated to BANK4
  4060  01BB  30E3               	movlw	low __pidataBANK4
  4061  01BC  0084               	movwf	4
  4062  01BD  3091               	movlw	(high __pidataBANK4)| (0+128)
  4063  01BE  0085               	movwf	5
  4064  01BF  3020               	movlw	low __pdataBANK4
  4065  01C0  0086               	movwf	6
  4066  01C1  3002               	movlw	high __pdataBANK4
  4067  01C2  0087               	movwf	7
  4068  01C3  3000               	movlw	0
  4069  01C4  00FF               	movwf	btemp+1
  4070  01C5  303A               	movlw	58
  4071  01C6  319E  26B1  3181   	fcall	init_ram
  4072                           
  4073                           ; Initialize objects allocated to BANK5
  4074  01C9  30A9               	movlw	low __pidataBANK5
  4075  01CA  0084               	movwf	4
  4076  01CB  3091               	movlw	(high __pidataBANK5)| (0+128)
  4077  01CC  0085               	movwf	5
  4078  01CD  30A0               	movlw	low __pdataBANK5
  4079  01CE  0086               	movwf	6
  4080  01CF  3002               	movlw	high __pdataBANK5
  4081  01D0  0087               	movwf	7
  4082  01D1  3000               	movlw	0
  4083  01D2  00FF               	movwf	btemp+1
  4084  01D3  303A               	movlw	58
  4085  01D4  319E  26B1  3181   	fcall	init_ram
  4086                           
  4087                           ; Initialize objects allocated to BANK6
  4088  01D7  306F               	movlw	low __pidataBANK6
  4089  01D8  0084               	movwf	4
  4090  01D9  3091               	movlw	(high __pidataBANK6)| (0+128)
  4091  01DA  0085               	movwf	5
  4092  01DB  3020               	movlw	low __pdataBANK6
  4093  01DC  0086               	movwf	6
  4094  01DD  3003               	movlw	high __pdataBANK6
  4095  01DE  0087               	movwf	7
  4096  01DF  3000               	movlw	0
  4097  01E0  00FF               	movwf	btemp+1
  4098  01E1  303A               	movlw	58
  4099  01E2  319E  26B1  3181   	fcall	init_ram
  4100                           
  4101                           ; Initialize objects allocated to BANK7
  4102  01E5  308A               	movlw	low __pidataBANK7
  4103  01E6  0084               	movwf	4
  4104  01E7  3094               	movlw	(high __pidataBANK7)| (0+128)
  4105  01E8  0085               	movwf	5
  4106  01E9  30A0               	movlw	low __pdataBANK7
  4107  01EA  0086               	movwf	6
  4108  01EB  3003               	movlw	high __pdataBANK7
  4109  01EC  0087               	movwf	7
  4110  01ED  3000               	movlw	0
  4111  01EE  00FF               	movwf	btemp+1
  4112  01EF  3050               	movlw	80
  4113  01F0  319E  26B1  3181   	fcall	init_ram
  4114                           
  4115                           ; Initialize objects allocated to BANK8
  4116  01F3  303A               	movlw	low __pidataBANK8
  4117  01F4  0084               	movwf	4
  4118  01F5  3094               	movlw	(high __pidataBANK8)| (0+128)
  4119  01F6  0085               	movwf	5
  4120  01F7  3020               	movlw	low __pdataBANK8
  4121  01F8  0086               	movwf	6
  4122  01F9  3004               	movlw	high __pdataBANK8
  4123  01FA  0087               	movwf	7
  4124  01FB  3000               	movlw	0
  4125  01FC  00FF               	movwf	btemp+1
  4126  01FD  3050               	movlw	80
  4127  01FE  319E  26B1  3181   	fcall	init_ram
  4128                           
  4129                           ; Initialize objects allocated to BANK9
  4130  0201  3035               	movlw	low __pidataBANK9
  4131  0202  0084               	movwf	4
  4132  0203  3091               	movlw	(high __pidataBANK9)| (0+128)
  4133  0204  0085               	movwf	5
  4134  0205  30A0               	movlw	low __pdataBANK9
  4135  0206  0086               	movwf	6
  4136  0207  3004               	movlw	high __pdataBANK9
  4137  0208  0087               	movwf	7
  4138  0209  3000               	movlw	0
  4139  020A  00FF               	movwf	btemp+1
  4140  020B  303A               	movlw	58
  4141  020C  319E  26B1         	fcall	init_ram
  4142  020E                     end_of_initialization:	
  4143                           ;End of C runtime variable initialization code
  4144                           
  4145  020E                     __end_of__initialization:	
  4146  020E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4147  020F  0020               	movlb	0
  4148  0210  3182  2A12         	ljmp	_main	;jump to C main() function
  4149                           
  4150                           	psect	bssCOMMON
  4151  0079                     __pbssCOMMON:	
  4152  0079                     _tap_timer:	
  4153  0079                     	ds	4
  4154  007D                     _doubleTap_state:	
  4155  007D                     	ds	1
  4156                           
  4157                           	psect	dataBANK0
  4158  006F                     __pdataBANK0:	
  4159  006F                     _feedback_state:	
  4160  006F                     	ds	1
  4161                           
  4162                           	psect	bssBANK1
  4163  00DC                     __pbssBANK1:	
  4164  00DC                     _sub_timer:	
  4165  00DC                     	ds	4
  4166  00E0                     _timer:	
  4167  00E0                     	ds	4
  4168  00E4                     _feedback_timer:	
  4169  00E4                     	ds	2
  4170  00E6                     _mod_counter:	
  4171  00E6                     	ds	2
  4172  00E8                     _bypass_turning_on:	
  4173  00E8                     	ds	1
  4174  00E9                     _feedback_start:	
  4175  00E9                     	ds	1
  4176  00EA                     _longTap_start:	
  4177  00EA                     	ds	1
  4178  00EB                     _mode2_state:	
  4179  00EB                     	ds	1
  4180  00EC                     _preset_blink:	
  4181  00EC                     	ds	1
  4182  00ED                     _preset_programmning_on:	
  4183  00ED                     	ds	1
  4184  00EE                     _suspend_blink:	
  4185  00EE                     	ds	1
  4186  00EF                     _switchTap_pressed:	
  4187  00EF                     	ds	1
  4188                           
  4189                           	psect	dataBANK1
  4190  00BF                     __pdataBANK1:	
  4191  00BF                     _baseline_delay_time:	
  4192  00BF                     	ds	4
  4193  00C3                     _delay_time:	
  4194  00C3                     	ds	4
  4195  00C7                     _bottom_push_state:	
  4196  00C7                     	ds	2
  4197  00C9                     _knob1_prev:	
  4198  00C9                     	ds	2
  4199  00CB                     _knob2_prev:	
  4200  00CB                     	ds	2
  4201  00CD                     _knob3_prev:	
  4202  00CD                     	ds	2
  4203  00CF                     _knob4_prev:	
  4204  00CF                     	ds	2
  4205  00D1                     _knob5_prev:	
  4206  00D1                     	ds	2
  4207  00D3                     _long_press_limit:	
  4208  00D3                     	ds	2
  4209  00D5                     _top_push_state:	
  4210  00D5                     	ds	2
  4211  00D7                     _blink_rate:	
  4212  00D7                     	ds	1
  4213  00D8                     _longTap_state:	
  4214  00D8                     	ds	1
  4215  00D9                     _num_taps:	
  4216  00D9                     	ds	1
  4217  00DA                     _switchBypass_state:	
  4218  00DA                     	ds	1
  4219  00DB                     _switchTap_state:	
  4220  00DB                     	ds	1
  4221                           
  4222                           	psect	bssBANK2
  4223  0120                     __pbssBANK2:	
  4224  0120                     _tap_history:	
  4225  0120                     	ds	20
  4226  0134                     _ledState:	
  4227  0134                     	ds	4
  4228  0138                     _mod_timer:	
  4229  0138                     	ds	4
  4230  013C                     _tap_total:	
  4231  013C                     	ds	4
  4232  0140                     _SPI_Value:	
  4233  0140                     	ds	2
  4234  0142                     _debounce_bypass:	
  4235  0142                     	ds	2
  4236  0144                     _debounce_count:	
  4237  0144                     	ds	2
  4238  0146                     _debounce_mode1:	
  4239  0146                     	ds	2
  4240  0148                     _debounce_mode2:	
  4241  0148                     	ds	2
  4242  014A                     _delay_counter:	
  4243  014A                     	ds	2
  4244  014C                     _delayfound:	
  4245  014C                     	ds	2
  4246  014E                     _knob_1_pos:	
  4247  014E                     	ds	2
  4248  0150                     _knob_2_pos:	
  4249  0150                     	ds	2
  4250  0152                     _knob_3_pos:	
  4251  0152                     	ds	2
  4252  0154                     _knob_4_pos:	
  4253  0154                     	ds	2
  4254  0156                     _knob_5_pos:	
  4255  0156                     	ds	2
  4256  0158                     _longTap_timer:	
  4257  0158                     	ds	2
  4258  015A                     _mod_value:	
  4259  015A                     	ds	2
  4260  015C                     _switchBypass_pressed:	
  4261  015C                     	ds	2
  4262  015E                     _switchBypass_toggle:	
  4263  015E                     	ds	2
  4264  0160                     _iCnt:	
  4265  0160                     	ds	1
  4266  0161                     _mode1_state:	
  4267  0161                     	ds	1
  4268  0162                     _switchTap_down:	
  4269  0162                     	ds	1
  4270                           
  4271                           	psect	dataBANK2
  4272  0163                     __pdataBANK2:	
  4273  0163                     _blink_delay:	
  4274  0163                     	ds	2
  4275  0165                     _delay_time_changed:	
  4276  0165                     	ds	2
  4277  0167                     _mod_delay_time:	
  4278  0167                     	ds	2
  4279  0169                     _switchBypass_up:	
  4280  0169                     	ds	2
  4281  016B                     _tap_iteration:	
  4282  016B                     	ds	2
  4283  016D                     _blink_state:	
  4284  016D                     	ds	1
  4285  016E                     _currentBypassState:	
  4286  016E                     	ds	1
  4287                           
  4288                           	psect	bssBANK3
  4289  01A0                     __pbssBANK3:	
  4290  01A0                     _tap:	
  4291  01A0                     	ds	44
  4292  01CC                     _test_timer:	
  4293  01CC                     	ds	4
  4294                           
  4295                           	psect	dataBANK4
  4296  0220                     __pdataBANK4:	
  4297  0220                     _mod2:	
  4298  0220                     	ds	58
  4299                           
  4300                           	psect	dataBANK5
  4301  02A0                     __pdataBANK5:	
  4302  02A0                     _mod3:	
  4303  02A0                     	ds	58
  4304                           
  4305                           	psect	dataBANK6
  4306  0320                     __pdataBANK6:	
  4307  0320                     _mod4:	
  4308  0320                     	ds	58
  4309                           
  4310                           	psect	dataBANK7
  4311  03A0                     __pdataBANK7:	
  4312  03A0                     _B25k:	
  4313  03A0                     	ds	80
  4314                           
  4315                           	psect	dataBANK8
  4316  0420                     __pdataBANK8:	
  4317  0420                     _iB25k:	
  4318  0420                     	ds	80
  4319                           
  4320                           	psect	dataBANK9
  4321  04A0                     __pdataBANK9:	
  4322  04A0                     _mod1:	
  4323  04A0                     	ds	58
  4324                           
  4325                           	psect	bssBANK10
  4326  0520                     __pbssBANK10:	
  4327  0520                     _myBuf:	
  4328  0520                     	ds	64
  4329                           
  4330                           	psect	clrtext
  4331  1EBD                     clear_ram0:	
  4332                           ;	Called with FSR0 containing the base address, and
  4333                           ;	btemp/btemp+1 has the size to clear
  4334                           
  4335  1EBD  0064               	clrwdt	;clear the watchdog before getting into this loop
  4336  1EBE                     clrloop0:	
  4337  1EBE  0180               	clrf	0	;clear RAM location pointed to by FSR
  4338  1EBF  3101               	addfsr 0,1
  4339  1EC0  3001               	movlw	1
  4340  1EC1  02FE               	subwf	126,f
  4341  1EC2  3000               	movlw	0
  4342  1EC3  3BFF               	subwfb	127,f
  4343  1EC4  087F               	movf	127,w
  4344  1EC5  047E               	iorwf	126,w
  4345  1EC6  1903               	btfsc	3,2
  4346  1EC7  3400               	retlw	0	;all done for this memory range, return
  4347  1EC8  2EBE               	goto	clrloop0	;have we reached the end yet?
  4348                           
  4349                           	psect	inittext
  4350  1EB1                     init_ram:	
  4351  1EB1  00FE               	movwf	126
  4352  1EB2                     initloop:	
  4353  1EB2  0012               	moviw fsr0++
  4354  1EB3  001E               	movwi fsr1++
  4355  1EB4  3001               	movlw	1
  4356  1EB5  02FE               	subwf	126,f
  4357  1EB6  3000               	movlw	0
  4358  1EB7  3BFF               	subwfb	127,f
  4359  1EB8  087F               	movf	127,w
  4360  1EB9  047E               	iorwf	126,w
  4361  1EBA  1903               	btfsc	3,2
  4362  1EBB  3400               	retlw	0
  4363  1EBC  2EB2               	goto	initloop
  4364                           
  4365                           	psect	cstackBANK1
  4366  00A0                     __pcstackBANK1:	
  4367  00A0                     ___fttol@sign1:	
  4368                           
  4369                           ; 1 bytes @ 0x0
  4370  00A0                     	ds	1
  4371  00A1                     ___fttol@lval:	
  4372                           
  4373                           ; 4 bytes @ 0x1
  4374  00A1                     	ds	4
  4375  00A5                     ___fttol@exp1:	
  4376                           
  4377                           ; 1 bytes @ 0x5
  4378  00A5                     	ds	1
  4379  00A6                     ?_set_subdivision:	
  4380  00A6                     set_subdivision@x:	
  4381                           ; 2 bytes @ 0x6
  4382                           
  4383                           
  4384                           ; 2 bytes @ 0x6
  4385  00A6                     	ds	2
  4386  00A8                     set_subdivision@y:	
  4387                           
  4388                           ; 2 bytes @ 0x8
  4389  00A8                     	ds	2
  4390  00AA                     ??_main:	
  4391                           
  4392                           ; 1 bytes @ 0xA
  4393  00AA                     	ds	15
  4394  00B9                     main@adjusted_pot_value:	
  4395                           
  4396                           ; 2 bytes @ 0x19
  4397  00B9                     	ds	2
  4398  00BB                     main@i:	
  4399                           
  4400                           ; 2 bytes @ 0x1B
  4401  00BB                     	ds	2
  4402  00BD                     main@i_392:	
  4403                           
  4404                           ; 2 bytes @ 0x1D
  4405  00BD                     	ds	2
  4406                           
  4407                           	psect	cstackCOMMON
  4408  0070                     __pcstackCOMMON:	
  4409  0070                     ?_ConfigureOscillator:	
  4410  0070                     ?_InitApp:	
  4411                           ; 1 bytes @ 0x0
  4412                           
  4413  0070                     ?_InitializeTaps:	
  4414                           ; 1 bytes @ 0x0
  4415                           
  4416  0070                     ?_initSwitchBypass:	
  4417                           ; 1 bytes @ 0x0
  4418                           
  4419  0070                     ?_ReadSavedSettings:	
  4420                           ; 1 bytes @ 0x0
  4421                           
  4422  0070                     ?_read_bottom_tactile:	
  4423                           ; 1 bytes @ 0x0
  4424                           
  4425  0070                     ?_read_top_tactile:	
  4426                           ; 1 bytes @ 0x0
  4427                           
  4428  0070                     ?_update_mode:	
  4429                           ; 1 bytes @ 0x0
  4430                           
  4431  0070                     ?_showBootSequence:	
  4432                           ; 1 bytes @ 0x0
  4433                           
  4434  0070                     ?_updateSwitchBypass:	
  4435                           ; 1 bytes @ 0x0
  4436                           
  4437  0070                     ?_updateSwitchTap:	
  4438                           ; 1 bytes @ 0x0
  4439                           
  4440  0070                     ?_init_adc:	
  4441                           ; 1 bytes @ 0x0
  4442                           
  4443  0070                     ?_init_pwm:	
  4444                           ; 1 bytes @ 0x0
  4445                           
  4446  0070                     ?_init_timer2:	
  4447                           ; 1 bytes @ 0x0
  4448                           
  4449  0070                     ?_init_timer0:	
  4450                           ; 1 bytes @ 0x0
  4451                           
  4452  0070                     ?_getCurrentLEDState:	
  4453                           ; 1 bytes @ 0x0
  4454                           
  4455  0070                     ?_star_tactiles:	
  4456                           ; 1 bytes @ 0x0
  4457                           
  4458  0070                     ?_solidring_tactiles:	
  4459                           ; 1 bytes @ 0x0
  4460                           
  4461  0070                     ?_restoreLEDState:	
  4462                           ; 1 bytes @ 0x0
  4463                           
  4464  0070                     ?_isr:	
  4465                           ; 1 bytes @ 0x0
  4466                           
  4467  0070                     ?_main:	
  4468                           ; 1 bytes @ 0x0
  4469                           
  4470  0070                     ?i1_set_leds_top:	
  4471                           ; 1 bytes @ 0x0
  4472                           
  4473  0070                     i1set_leds_top@x:	
  4474                           ; 1 bytes @ 0x0
  4475                           
  4476                           
  4477                           ; 2 bytes @ 0x0
  4478  0070                     	ds	2
  4479  0072                     i1set_leds_top@ledState:	
  4480                           
  4481                           ; 2 bytes @ 0x2
  4482  0072                     	ds	2
  4483  0074                     ??_isr:	
  4484  0074                     ??i1_set_leds_top:	
  4485                           ; 1 bytes @ 0x4
  4486                           
  4487                           
  4488                           ; 1 bytes @ 0x4
  4489  0074                     	ds	5
  4490                           
  4491                           	psect	cstackBANK0
  4492  0020                     __pcstackBANK0:	
  4493  0020                     ?_set_leds_top:	
  4494  0020                     ??_ConfigureOscillator:	
  4495                           ; 1 bytes @ 0x0
  4496                           
  4497  0020                     ??_InitApp:	
  4498                           ; 1 bytes @ 0x0
  4499                           
  4500  0020                     ??_InitializeTaps:	
  4501                           ; 1 bytes @ 0x0
  4502                           
  4503  0020                     ??_update_mode:	
  4504                           ; 1 bytes @ 0x0
  4505                           
  4506  0020                     ??_init_adc:	
  4507                           ; 1 bytes @ 0x0
  4508                           
  4509  0020                     ??_init_pwm:	
  4510                           ; 1 bytes @ 0x0
  4511                           
  4512  0020                     ??_init_timer2:	
  4513                           ; 1 bytes @ 0x0
  4514                           
  4515  0020                     ??_init_timer0:	
  4516                           ; 1 bytes @ 0x0
  4517                           
  4518  0020                     ?_set_leds_bottom:	
  4519                           ; 1 bytes @ 0x0
  4520                           
  4521  0020                     ??_getCurrentLEDState:	
  4522                           ; 1 bytes @ 0x0
  4523                           
  4524  0020                     ??_restoreLEDState:	
  4525                           ; 1 bytes @ 0x0
  4526                           
  4527  0020                     ?_setFeedbackState:	
  4528                           ; 1 bytes @ 0x0
  4529                           
  4530  0020                     ?_setLongTapState:	
  4531                           ; 1 bytes @ 0x0
  4532                           
  4533  0020                     ?_updateSwitchBypassState:	
  4534                           ; 1 bytes @ 0x0
  4535                           
  4536  0020                     ?_adc_convert:	
  4537                           ; 1 bytes @ 0x0
  4538                           
  4539  0020                     ?_FLASH_ReadWord:	
  4540                           ; 2 bytes @ 0x0
  4541                           
  4542  0020                     ?_getSwitchBypassState:	
  4543                           ; 2 bytes @ 0x0
  4544                           
  4545  0020                     ?___wmul:	
  4546                           ; 2 bytes @ 0x0
  4547                           
  4548  0020                     ?___awdiv:	
  4549                           ; 2 bytes @ 0x0
  4550                           
  4551  0020                     ?___ftpack:	
  4552                           ; 2 bytes @ 0x0
  4553                           
  4554  0020                     ?___ftneg:	
  4555                           ; 3 bytes @ 0x0
  4556                           
  4557  0020                     ?___lmul:	
  4558                           ; 3 bytes @ 0x0
  4559                           
  4560  0020                     FLASH_ReadWord@flashAddr:	
  4561                           ; 4 bytes @ 0x0
  4562                           
  4563  0020                     set_leds_top@x:	
  4564                           ; 2 bytes @ 0x0
  4565                           
  4566  0020                     set_leds_bottom@x:	
  4567                           ; 2 bytes @ 0x0
  4568                           
  4569  0020                     updateSwitchBypassState@state:	
  4570                           ; 2 bytes @ 0x0
  4571                           
  4572  0020                     setFeedbackState@f_state:	
  4573                           ; 2 bytes @ 0x0
  4574                           
  4575  0020                     setLongTapState@f_state:	
  4576                           ; 2 bytes @ 0x0
  4577                           
  4578  0020                     ___wmul@multiplier:	
  4579                           ; 2 bytes @ 0x0
  4580                           
  4581  0020                     ___awdiv@divisor:	
  4582                           ; 2 bytes @ 0x0
  4583                           
  4584  0020                     ___ftpack@arg:	
  4585                           ; 2 bytes @ 0x0
  4586                           
  4587  0020                     ___ftneg@f1:	
  4588                           ; 3 bytes @ 0x0
  4589                           
  4590  0020                     ___lmul@multiplier:	
  4591                           ; 3 bytes @ 0x0
  4592                           
  4593                           
  4594                           ; 4 bytes @ 0x0
  4595  0020                     	ds	1
  4596  0021                     InitializeTaps@itap:	
  4597                           
  4598                           ; 2 bytes @ 0x1
  4599  0021                     	ds	1
  4600  0022                     ??_adc_convert:	
  4601  0022                     ??_FLASH_ReadWord:	
  4602                           ; 1 bytes @ 0x2
  4603                           
  4604  0022                     ??_set_leds_bottom:	
  4605                           ; 1 bytes @ 0x2
  4606                           
  4607  0022                     ??_setFeedbackState:	
  4608                           ; 1 bytes @ 0x2
  4609                           
  4610  0022                     ??_setLongTapState:	
  4611                           ; 1 bytes @ 0x2
  4612                           
  4613  0022                     ??_updateSwitchBypassState:	
  4614                           ; 1 bytes @ 0x2
  4615                           
  4616  0022                     ??_getSwitchBypassState:	
  4617                           ; 1 bytes @ 0x2
  4618                           
  4619  0022                     FLASH_ReadWord@GIEBitValue:	
  4620                           ; 1 bytes @ 0x2
  4621                           
  4622  0022                     set_leds_top@ledState:	
  4623                           ; 1 bytes @ 0x2
  4624                           
  4625  0022                     ___wmul@multiplicand:	
  4626                           ; 2 bytes @ 0x2
  4627                           
  4628  0022                     ___awdiv@dividend:	
  4629                           ; 2 bytes @ 0x2
  4630                           
  4631                           
  4632                           ; 2 bytes @ 0x2
  4633  0022                     	ds	1
  4634  0023                     ??___ftneg:	
  4635  0023                     adc_convert@channel:	
  4636                           ; 1 bytes @ 0x3
  4637                           
  4638  0023                     ___ftpack@exp:	
  4639                           ; 1 bytes @ 0x3
  4640                           
  4641                           
  4642                           ; 1 bytes @ 0x3
  4643  0023                     	ds	1
  4644  0024                     ??_set_leds_top:	
  4645  0024                     ??_ReadSavedSettings:	
  4646                           ; 1 bytes @ 0x4
  4647                           
  4648  0024                     ??___wmul:	
  4649                           ; 1 bytes @ 0x4
  4650                           
  4651  0024                     ??___awdiv:	
  4652                           ; 1 bytes @ 0x4
  4653                           
  4654  0024                     ___ftpack@sign:	
  4655                           ; 1 bytes @ 0x4
  4656                           
  4657  0024                     ___wmul@product:	
  4658                           ; 1 bytes @ 0x4
  4659                           
  4660  0024                     ___lmul@multiplicand:	
  4661                           ; 2 bytes @ 0x4
  4662                           
  4663                           
  4664                           ; 4 bytes @ 0x4
  4665  0024                     	ds	1
  4666  0025                     ??___ftpack:	
  4667  0025                     ___awdiv@counter:	
  4668                           ; 1 bytes @ 0x5
  4669                           
  4670                           
  4671                           ; 1 bytes @ 0x5
  4672  0025                     	ds	1
  4673  0026                     ?___aldiv:	
  4674  0026                     ___awdiv@sign:	
  4675                           ; 4 bytes @ 0x6
  4676                           
  4677  0026                     ___aldiv@divisor:	
  4678                           ; 1 bytes @ 0x6
  4679                           
  4680                           
  4681                           ; 4 bytes @ 0x6
  4682  0026                     	ds	1
  4683  0027                     ___awdiv@quotient:	
  4684                           
  4685                           ; 2 bytes @ 0x7
  4686  0027                     	ds	1
  4687  0028                     ??___lmul:	
  4688  0028                     ?___altoft:	
  4689                           ; 1 bytes @ 0x8
  4690                           
  4691  0028                     ?___awtoft:	
  4692                           ; 3 bytes @ 0x8
  4693                           
  4694  0028                     ?___ftadd:	
  4695                           ; 3 bytes @ 0x8
  4696                           
  4697  0028                     ___awtoft@c:	
  4698                           ; 3 bytes @ 0x8
  4699                           
  4700  0028                     ___ftadd@f1:	
  4701                           ; 2 bytes @ 0x8
  4702                           
  4703  0028                     ___lmul@product:	
  4704                           ; 3 bytes @ 0x8
  4705                           
  4706  0028                     ___altoft@c:	
  4707                           ; 4 bytes @ 0x8
  4708                           
  4709                           
  4710                           ; 4 bytes @ 0x8
  4711  0028                     	ds	2
  4712  002A                     ___aldiv@dividend:	
  4713                           
  4714                           ; 4 bytes @ 0xA
  4715  002A                     	ds	1
  4716  002B                     ??___awtoft:	
  4717  002B                     ___ftadd@f2:	
  4718                           ; 1 bytes @ 0xB
  4719                           
  4720                           
  4721                           ; 3 bytes @ 0xB
  4722  002B                     	ds	1
  4723  002C                     ?_wait_ms:	
  4724  002C                     ??___altoft:	
  4725                           ; 1 bytes @ 0xC
  4726                           
  4727  002C                     wait_ms@timeSec:	
  4728                           ; 1 bytes @ 0xC
  4729                           
  4730                           
  4731                           ; 2 bytes @ 0xC
  4732  002C                     	ds	1
  4733  002D                     ___awtoft@sign:	
  4734                           
  4735                           ; 1 bytes @ 0xD
  4736  002D                     	ds	1
  4737  002E                     ??_wait_ms:	
  4738  002E                     ??___aldiv:	
  4739                           ; 1 bytes @ 0xE
  4740                           
  4741  002E                     ??___ftadd:	
  4742                           ; 1 bytes @ 0xE
  4743                           
  4744  002E                     ___altoft@exp:	
  4745                           ; 1 bytes @ 0xE
  4746                           
  4747  002E                     wait_ms@timemsl:	
  4748                           ; 1 bytes @ 0xE
  4749                           
  4750                           
  4751                           ; 4 bytes @ 0xE
  4752  002E                     	ds	1
  4753  002F                     ___aldiv@counter:	
  4754  002F                     ___altoft@sign:	
  4755                           ; 1 bytes @ 0xF
  4756                           
  4757                           
  4758                           ; 1 bytes @ 0xF
  4759  002F                     	ds	1
  4760  0030                     ___aldiv@sign:	
  4761                           
  4762                           ; 1 bytes @ 0x10
  4763  0030                     	ds	1
  4764  0031                     ___aldiv@quotient:	
  4765                           
  4766                           ; 4 bytes @ 0x11
  4767  0031                     	ds	1
  4768  0032                     ??_read_bottom_tactile:	
  4769  0032                     ??_read_top_tactile:	
  4770                           ; 1 bytes @ 0x12
  4771                           
  4772  0032                     ??_star_tactiles:	
  4773                           ; 1 bytes @ 0x12
  4774                           
  4775  0032                     ??_solidring_tactiles:	
  4776                           ; 1 bytes @ 0x12
  4777                           
  4778  0032                     ?_setSwitchBypassState:	
  4779                           ; 1 bytes @ 0x12
  4780                           
  4781  0032                     ?_setDoublePressState:	
  4782                           ; 1 bytes @ 0x12
  4783                           
  4784  0032                     ___ftadd@sign:	
  4785                           ; 1 bytes @ 0x12
  4786                           
  4787  0032                     setSwitchBypassState@f_state:	
  4788                           ; 1 bytes @ 0x12
  4789                           
  4790  0032                     setDoublePressState@f_state:	
  4791                           ; 2 bytes @ 0x12
  4792                           
  4793                           
  4794                           ; 2 bytes @ 0x12
  4795  0032                     	ds	1
  4796  0033                     ___ftadd@exp2:	
  4797                           
  4798                           ; 1 bytes @ 0x13
  4799  0033                     	ds	1
  4800  0034                     ??_setSwitchBypassState:	
  4801  0034                     ??_setDoublePressState:	
  4802                           ; 1 bytes @ 0x14
  4803                           
  4804  0034                     star_tactiles@reverse:	
  4805                           ; 1 bytes @ 0x14
  4806                           
  4807  0034                     solidring_tactiles@ring_delay:	
  4808                           ; 1 bytes @ 0x14
  4809                           
  4810  0034                     ___ftadd@exp1:	
  4811                           ; 1 bytes @ 0x14
  4812                           
  4813                           
  4814                           ; 1 bytes @ 0x14
  4815  0034                     	ds	1
  4816  0035                     ?_modulation:	
  4817  0035                     ?___ftmul:	
  4818                           ; 2 bytes @ 0x15
  4819                           
  4820  0035                     modulation@x:	
  4821                           ; 3 bytes @ 0x15
  4822                           
  4823  0035                     star_tactiles@iLed:	
  4824                           ; 2 bytes @ 0x15
  4825                           
  4826  0035                     ___ftmul@f1:	
  4827                           ; 2 bytes @ 0x15
  4828                           
  4829                           
  4830                           ; 3 bytes @ 0x15
  4831  0035                     	ds	1
  4832  0036                     ??_initSwitchBypass:	
  4833  0036                     ??_updateSwitchBypass:	
  4834                           ; 1 bytes @ 0x16
  4835                           
  4836  0036                     ??_updateSwitchTap:	
  4837                           ; 1 bytes @ 0x16
  4838                           
  4839  0036                     initSwitchBypass@initState:	
  4840                           ; 1 bytes @ 0x16
  4841                           
  4842                           
  4843                           ; 2 bytes @ 0x16
  4844  0036                     	ds	1
  4845  0037                     modulation@y:	
  4846  0037                     star_tactiles@iLed_1422:	
  4847                           ; 2 bytes @ 0x17
  4848                           
  4849                           
  4850                           ; 2 bytes @ 0x17
  4851  0037                     	ds	1
  4852  0038                     ___ftmul@f2:	
  4853                           
  4854                           ; 3 bytes @ 0x18
  4855  0038                     	ds	1
  4856  0039                     ??_showBootSequence:	
  4857  0039                     ??_modulation:	
  4858                           ; 1 bytes @ 0x19
  4859                           
  4860                           
  4861                           ; 1 bytes @ 0x19
  4862  0039                     	ds	2
  4863  003B                     ??___ftmul:	
  4864                           
  4865                           ; 1 bytes @ 0x1B
  4866  003B                     	ds	1
  4867  003C                     updateSwitchTap@tapCntDivisor:	
  4868                           
  4869                           ; 2 bytes @ 0x1C
  4870  003C                     	ds	2
  4871  003E                     updateSwitchTap@iCnt:	
  4872                           
  4873                           ; 1 bytes @ 0x1E
  4874  003E                     	ds	1
  4875  003F                     ___ftmul@exp:	
  4876                           
  4877                           ; 1 bytes @ 0x1F
  4878  003F                     	ds	1
  4879  0040                     ___ftmul@f3_as_product:	
  4880                           
  4881                           ; 3 bytes @ 0x20
  4882  0040                     	ds	3
  4883  0043                     ___ftmul@cntr:	
  4884                           
  4885                           ; 1 bytes @ 0x23
  4886  0043                     	ds	1
  4887  0044                     ___ftmul@sign:	
  4888                           
  4889                           ; 1 bytes @ 0x24
  4890  0044                     	ds	1
  4891  0045                     ?___ftdiv:	
  4892  0045                     ___ftdiv@f2:	
  4893                           ; 3 bytes @ 0x25
  4894                           
  4895                           
  4896                           ; 3 bytes @ 0x25
  4897  0045                     	ds	3
  4898  0048                     ___ftdiv@f1:	
  4899                           
  4900                           ; 3 bytes @ 0x28
  4901  0048                     	ds	3
  4902  004B                     ??___ftdiv:	
  4903                           
  4904                           ; 1 bytes @ 0x2B
  4905  004B                     	ds	4
  4906  004F                     ___ftdiv@cntr:	
  4907                           
  4908                           ; 1 bytes @ 0x2F
  4909  004F                     	ds	1
  4910  0050                     ___ftdiv@f3:	
  4911                           
  4912                           ; 3 bytes @ 0x30
  4913  0050                     	ds	3
  4914  0053                     ___ftdiv@exp:	
  4915                           
  4916                           ; 1 bytes @ 0x33
  4917  0053                     	ds	1
  4918  0054                     ___ftdiv@sign:	
  4919                           
  4920                           ; 1 bytes @ 0x34
  4921  0054                     	ds	1
  4922  0055                     ?_map:	
  4923  0055                     map@x:	
  4924                           ; 3 bytes @ 0x35
  4925                           
  4926                           
  4927                           ; 3 bytes @ 0x35
  4928  0055                     	ds	3
  4929  0058                     map@in_min:	
  4930                           
  4931                           ; 3 bytes @ 0x38
  4932  0058                     	ds	3
  4933  005B                     map@in_max:	
  4934                           
  4935                           ; 3 bytes @ 0x3B
  4936  005B                     	ds	3
  4937  005E                     map@out_min:	
  4938                           
  4939                           ; 3 bytes @ 0x3E
  4940  005E                     	ds	3
  4941  0061                     map@out_max:	
  4942                           
  4943                           ; 3 bytes @ 0x41
  4944  0061                     	ds	3
  4945  0064                     ??_map:	
  4946  0064                     _map$2116:	
  4947                           ; 1 bytes @ 0x44
  4948                           
  4949                           
  4950                           ; 3 bytes @ 0x44
  4951  0064                     	ds	3
  4952  0067                     ?___fttol:	
  4953  0067                     ___fttol@f1:	
  4954                           ; 4 bytes @ 0x47
  4955                           
  4956                           
  4957                           ; 3 bytes @ 0x47
  4958  0067                     	ds	4
  4959  006B                     ??___fttol:	
  4960                           
  4961                           ; 1 bytes @ 0x4B
  4962  006B                     	ds	4
  4963  006F                     ??_set_subdivision:	
  4964                           
  4965                           	psect	maintext
  4966  0212                     __pmaintext:	
  4967                           ; 1 bytes @ 0x4F
  4968 ;;
  4969 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
  4970 ;;
  4971 ;; *************** function _main *****************
  4972 ;; Defined at:
  4973 ;;		line 82 in file "main.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  adjusted_pot    2   25[BANK1 ] int 
  4978 ;;  i               2   29[BANK1 ] int 
  4979 ;;  i               2   27[BANK1 ] int 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  1    wreg      void 
  4982 ;; Registers used:
  4983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4984 ;; Tracked objects:
  4985 ;;		On entry : B1F/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4990 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4991 ;;      Temps:          0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4992 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4993 ;;Total ram usage:       21 bytes
  4994 ;; Hardware stack levels required when called:    6
  4995 ;; This function calls:
  4996 ;;		_ConfigureOscillator
  4997 ;;		_InitApp
  4998 ;;		_InitializeTaps
  4999 ;;		_ReadSavedSettings
  5000 ;;		___altoft
  5001 ;;		___awdiv
  5002 ;;		___awtoft
  5003 ;;		___ftdiv
  5004 ;;		___fttol
  5005 ;;		_adc_convert
  5006 ;;		_initSwitchBypass
  5007 ;;		_map
  5008 ;;		_modulation
  5009 ;;		_read_bottom_tactile
  5010 ;;		_read_top_tactile
  5011 ;;		_set_subdivision
  5012 ;;		_showBootSequence
  5013 ;;		_updateSwitchBypass
  5014 ;;		_updateSwitchTap
  5015 ;;		_update_mode
  5016 ;; This function is called by:
  5017 ;;		Startup code after reset
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function _main
  5023  0212                     _main:	
  5024                           
  5025                           ;main.c: 83: ConfigureOscillator();
  5026                           
  5027                           ;incstack = 0
  5028                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5029  0212  319E  2690  3182   	fcall	_ConfigureOscillator
  5030                           
  5031                           ;main.c: 84: InitApp();
  5032  0215  3190  2038  3182   	fcall	_InitApp
  5033                           
  5034                           ;main.c: 86: PORTEbits.RE0 = 1;
  5035  0218  0020               	movlb	0	; select bank0
  5036  0219  1410               	bsf	16,0	;volatile
  5037                           
  5038                           ;main.c: 87: PORTEbits.RE1 = 1;
  5039  021A  1490               	bsf	16,1	;volatile
  5040                           
  5041                           ;main.c: 88: PORTDbits.RD6 = 1;
  5042  021B  170F               	bsf	15,6	;volatile
  5043                           
  5044                           ;main.c: 89: PORTDbits.RD5 = 1;
  5045  021C  168F               	bsf	15,5	;volatile
  5046                           
  5047                           ;main.c: 90: PORTCbits.RC0 = 1;
  5048  021D  140E               	bsf	14,0	;volatile
  5049                           
  5050                           ;main.c: 91: PORTDbits.RD7 = 1;
  5051  021E  178F               	bsf	15,7	;volatile
  5052                           
  5053                           ;main.c: 93: InitializeTaps();
  5054  021F  319F  27AF  3182   	fcall	_InitializeTaps
  5055                           
  5056                           ;main.c: 94: initSwitchBypass();
  5057  0222  319E  26D5  3182   	fcall	_initSwitchBypass
  5058                           
  5059                           ;main.c: 97: ReadSavedSettings();
  5060  0225  3193  23EA  3182   	fcall	_ReadSavedSettings
  5061  0228                     l4184:	
  5062                           ;main.c: 99: while (1) {
  5063                           
  5064                           
  5065                           ;main.c: 102: read_bottom_tactile();
  5066  0228  3190  2098  3182   	fcall	_read_bottom_tactile
  5067                           
  5068                           ;main.c: 103: read_top_tactile();
  5069  022B  3190  20FB  3182   	fcall	_read_top_tactile
  5070                           
  5071                           ;main.c: 106: update_mode();
  5072  022E  3193  2313  3182   	fcall	_update_mode
  5073                           
  5074                           ;main.c: 108: if (PORTDbits.RD7 == 0) {
  5075  0231  0020               	movlb	0	; select bank0
  5076  0232  1B8F               	btfsc	15,7	;volatile
  5077  0233  2A52               	goto	l4198
  5078                           
  5079                           ;main.c: 109: debounce_mode1++;
  5080  0234  3001               	movlw	1
  5081  0235  0022               	movlb	2	; select bank2
  5082  0236  07C6               	addwf	_debounce_mode1^(0+256),f
  5083  0237  3000               	movlw	0
  5084  0238  3DC7               	addwfc	(_debounce_mode1+1)^(0+256),f
  5085                           
  5086                           ;main.c: 110: if (debounce_mode1 > 25) {
  5087  0239  0847               	movf	(_debounce_mode1+1)^(0+256),w
  5088  023A  3A80               	xorlw	128
  5089  023B  0021               	movlb	1	; select bank1
  5090  023C  00AA               	movwf	??_main^(0+128)
  5091  023D  3080               	movlw	128
  5092  023E  022A               	subwf	??_main^(0+128),w
  5093  023F  1D03               	skipz
  5094  0240  2A44               	goto	u4175
  5095  0241  301A               	movlw	26
  5096  0242  0022               	movlb	2	; select bank2
  5097  0243  0246               	subwf	_debounce_mode1^(0+256),w
  5098  0244                     u4175:	
  5099  0244  1C03               	skipc
  5100  0245  2A55               	goto	l4200
  5101                           
  5102                           ;main.c: 111: debounce_mode1 = 25;
  5103  0246  3019               	movlw	25
  5104  0247  0022               	movlb	2	; select bank2
  5105  0248  00C6               	movwf	_debounce_mode1^(0+256)
  5106  0249  3000               	movlw	0
  5107  024A  00C7               	movwf	(_debounce_mode1^(0+256)+1)
  5108                           
  5109                           ;main.c: 115: showBootSequence();
  5110  024B  319F  27D5  3182   	fcall	_showBootSequence
  5111  024E                     l277:	
  5112                           ;main.c: 118: while (PORTDbits.RD7 == 0) {
  5113                           
  5114  024E  0020               	movlb	0	; select bank0
  5115  024F  1B8F               	btfsc	15,7	;volatile
  5116  0250  2A55               	goto	l4200
  5117  0251  2A4E               	goto	l277
  5118  0252                     l4198:	
  5119                           ;main.c: 119: }
  5120                           ;main.c: 120: }
  5121                           ;main.c: 121: } else {
  5122                           
  5123                           
  5124                           ;main.c: 122: debounce_mode1 = 0;
  5125  0252  0022               	movlb	2	; select bank2
  5126  0253  01C6               	clrf	_debounce_mode1^(0+256)
  5127  0254  01C7               	clrf	(_debounce_mode1+1)^(0+256)
  5128  0255                     l4200:	
  5129                           
  5130                           ;main.c: 123: }
  5131                           ;main.c: 125: updateSwitchBypass();
  5132  0255  3188  20EA  3182   	fcall	_updateSwitchBypass
  5133                           
  5134                           ;main.c: 126: updateSwitchTap();
  5135  0258  318B  23BB  3182   	fcall	_updateSwitchTap
  5136                           
  5137                           ;main.c: 215: knob_1_pos = adc_convert(0);
  5138  025B  3000               	movlw	0
  5139  025C  319F  2723  3182   	fcall	_adc_convert
  5140  025F  0020               	movlb	0	; select bank0
  5141  0260  0821               	movf	?_adc_convert+1,w
  5142  0261  0022               	movlb	2	; select bank2
  5143  0262  00CF               	movwf	(_knob_1_pos+1)^(0+256)
  5144  0263  0020               	movlb	0	; select bank0
  5145  0264  0820               	movf	?_adc_convert,w
  5146  0265  0022               	movlb	2	; select bank2
  5147  0266  00CE               	movwf	_knob_1_pos^(0+256)
  5148                           
  5149                           ;main.c: 216: knob_2_pos = adc_convert(1);
  5150  0267  3001               	movlw	1
  5151  0268  319F  2723  3182   	fcall	_adc_convert
  5152  026B  0020               	movlb	0	; select bank0
  5153  026C  0821               	movf	?_adc_convert+1,w
  5154  026D  0022               	movlb	2	; select bank2
  5155  026E  00D1               	movwf	(_knob_2_pos+1)^(0+256)
  5156  026F  0020               	movlb	0	; select bank0
  5157  0270  0820               	movf	?_adc_convert,w
  5158  0271  0022               	movlb	2	; select bank2
  5159  0272  00D0               	movwf	_knob_2_pos^(0+256)
  5160                           
  5161                           ;main.c: 217: knob_3_pos = adc_convert(2);
  5162  0273  3002               	movlw	2
  5163  0274  319F  2723  3182   	fcall	_adc_convert
  5164  0277  0020               	movlb	0	; select bank0
  5165  0278  0821               	movf	?_adc_convert+1,w
  5166  0279  0022               	movlb	2	; select bank2
  5167  027A  00D3               	movwf	(_knob_3_pos+1)^(0+256)
  5168  027B  0020               	movlb	0	; select bank0
  5169  027C  0820               	movf	?_adc_convert,w
  5170  027D  0022               	movlb	2	; select bank2
  5171  027E  00D2               	movwf	_knob_3_pos^(0+256)
  5172                           
  5173                           ;main.c: 218: knob_4_pos = adc_convert(3);
  5174  027F  3003               	movlw	3
  5175  0280  319F  2723  3182   	fcall	_adc_convert
  5176  0283  0020               	movlb	0	; select bank0
  5177  0284  0821               	movf	?_adc_convert+1,w
  5178  0285  0022               	movlb	2	; select bank2
  5179  0286  00D5               	movwf	(_knob_4_pos+1)^(0+256)
  5180  0287  0020               	movlb	0	; select bank0
  5181  0288  0820               	movf	?_adc_convert,w
  5182  0289  0022               	movlb	2	; select bank2
  5183  028A  00D4               	movwf	_knob_4_pos^(0+256)
  5184                           
  5185                           ;main.c: 219: knob_5_pos = adc_convert(4);
  5186  028B  3004               	movlw	4
  5187  028C  319F  2723  3182   	fcall	_adc_convert
  5188  028F  0020               	movlb	0	; select bank0
  5189  0290  0821               	movf	?_adc_convert+1,w
  5190  0291  0022               	movlb	2	; select bank2
  5191  0292  00D7               	movwf	(_knob_5_pos+1)^(0+256)
  5192  0293  0020               	movlb	0	; select bank0
  5193  0294  0820               	movf	?_adc_convert,w
  5194  0295  0022               	movlb	2	; select bank2
  5195  0296  00D6               	movwf	_knob_5_pos^(0+256)
  5196                           
  5197                           ;main.c: 246: if ((knob_1_pos - knob1_prev) >= 4 || (knob_1_pos - knob1_prev) <= -4) {
  5198  0297  0021               	movlb	1	; select bank1
  5199  0298  0949               	comf	_knob1_prev^(0+128),w	;volatile
  5200  0299  00AA               	movwf	??_main^(0+128)
  5201  029A  094A               	comf	(_knob1_prev+1)^(0+128),w	;volatile
  5202  029B  00AB               	movwf	(??_main^(0+128)+1)
  5203  029C  0AAA               	incf	??_main^(0+128),f
  5204  029D  1903               	skipnz
  5205  029E  0AAB               	incf	(??_main^(0+128)+1),f
  5206  029F  0022               	movlb	2	; select bank2
  5207  02A0  084E               	movf	_knob_1_pos^(0+256),w
  5208  02A1  0021               	movlb	1	; select bank1
  5209  02A2  072A               	addwf	??_main^(0+128),w
  5210  02A3  00AC               	movwf	(??_main+2)^(0+128)
  5211  02A4  0022               	movlb	2	; select bank2
  5212  02A5  084F               	movf	(_knob_1_pos+1)^(0+256),w
  5213  02A6  0021               	movlb	1	; select bank1
  5214  02A7  3D2B               	addwfc	(??_main+1)^(0+128),w
  5215  02A8  00AD               	movwf	(??_main+3)^(0+128)
  5216  02A9  082D               	movf	(??_main+3)^(0+128),w
  5217  02AA  3A80               	xorlw	128
  5218  02AB  00AE               	movwf	(??_main+4)^(0+128)
  5219  02AC  3080               	movlw	128
  5220  02AD  022E               	subwf	(??_main+4)^(0+128),w
  5221  02AE  1D03               	skipz
  5222  02AF  2AB2               	goto	u4195
  5223  02B0  3004               	movlw	4
  5224  02B1  022C               	subwf	(??_main+2)^(0+128),w
  5225  02B2                     u4195:	
  5226  02B2  1803               	skipnc
  5227  02B3  2AD1               	goto	l4218
  5228  02B4  0021               	movlb	1	; select bank1
  5229  02B5  0949               	comf	_knob1_prev^(0+128),w	;volatile
  5230  02B6  00AA               	movwf	??_main^(0+128)
  5231  02B7  094A               	comf	(_knob1_prev+1)^(0+128),w	;volatile
  5232  02B8  00AB               	movwf	(??_main^(0+128)+1)
  5233  02B9  0AAA               	incf	??_main^(0+128),f
  5234  02BA  1903               	skipnz
  5235  02BB  0AAB               	incf	(??_main^(0+128)+1),f
  5236  02BC  0022               	movlb	2	; select bank2
  5237  02BD  084E               	movf	_knob_1_pos^(0+256),w
  5238  02BE  0021               	movlb	1	; select bank1
  5239  02BF  072A               	addwf	??_main^(0+128),w
  5240  02C0  00AC               	movwf	(??_main+2)^(0+128)
  5241  02C1  0022               	movlb	2	; select bank2
  5242  02C2  084F               	movf	(_knob_1_pos+1)^(0+256),w
  5243  02C3  0021               	movlb	1	; select bank1
  5244  02C4  3D2B               	addwfc	(??_main+1)^(0+128),w
  5245  02C5  00AD               	movwf	(??_main+3)^(0+128)
  5246  02C6  082D               	movf	(??_main+3)^(0+128),w
  5247  02C7  3A80               	xorlw	128
  5248  02C8  00AE               	movwf	(??_main+4)^(0+128)
  5249  02C9  307F               	movlw	127
  5250  02CA  022E               	subwf	(??_main+4)^(0+128),w
  5251  02CB  1D03               	skipz
  5252  02CC  2ACF               	goto	u4205
  5253  02CD  30FD               	movlw	253
  5254  02CE  022C               	subwf	(??_main+2)^(0+128),w
  5255  02CF                     u4205:	
  5256  02CF  1803               	skipnc
  5257  02D0  2B28               	goto	l281
  5258  02D1                     l4218:	
  5259                           
  5260                           ;main.c: 247: knob1_prev = knob_1_pos;
  5261  02D1  0022               	movlb	2	; select bank2
  5262  02D2  084F               	movf	(_knob_1_pos+1)^(0+256),w
  5263  02D3  0021               	movlb	1	; select bank1
  5264  02D4  00CA               	movwf	(_knob1_prev+1)^(0+128)	;volatile
  5265  02D5  0022               	movlb	2	; select bank2
  5266  02D6  084E               	movf	_knob_1_pos^(0+256),w
  5267  02D7  0021               	movlb	1	; select bank1
  5268  02D8  00C9               	movwf	_knob1_prev^(0+128)	;volatile
  5269                           
  5270                           ;main.c: 248: baseline_delay_time = map(knob1_prev, 0, 1023, 1172, 200);
  5271  02D9  3000               	movlw	0
  5272  02DA  0020               	movlb	0	; select bank0
  5273  02DB  00E1               	movwf	map@out_max
  5274  02DC  3048               	movlw	72
  5275  02DD  00E2               	movwf	map@out_max+1
  5276  02DE  3043               	movlw	67
  5277  02DF  00E3               	movwf	map@out_max+2
  5278  02E0  3080               	movlw	128
  5279  02E1  00DE               	movwf	map@out_min
  5280  02E2  3092               	movlw	146
  5281  02E3  00DF               	movwf	map@out_min+1
  5282  02E4  3044               	movlw	68
  5283  02E5  00E0               	movwf	map@out_min+2
  5284  02E6  30C0               	movlw	192
  5285  02E7  00DB               	movwf	map@in_max
  5286  02E8  307F               	movlw	127
  5287  02E9  00DC               	movwf	map@in_max+1
  5288  02EA  3044               	movlw	68
  5289  02EB  00DD               	movwf	map@in_max+2
  5290  02EC  3000               	movlw	0
  5291  02ED  00D8               	movwf	map@in_min
  5292  02EE  3000               	movlw	0
  5293  02EF  00D9               	movwf	map@in_min+1
  5294  02F0  3000               	movlw	0
  5295  02F1  00DA               	movwf	map@in_min+2
  5296  02F2  0021               	movlb	1	; select bank1
  5297  02F3  084A               	movf	(_knob1_prev+1)^(0+128),w	;volatile
  5298  02F4  0020               	movlb	0	; select bank0
  5299  02F5  00A9               	movwf	___awtoft@c+1
  5300  02F6  0021               	movlb	1	; select bank1
  5301  02F7  0849               	movf	_knob1_prev^(0+128),w	;volatile
  5302  02F8  0020               	movlb	0	; select bank0
  5303  02F9  00A8               	movwf	___awtoft@c
  5304  02FA  3187  27DB  3182   	fcall	___awtoft
  5305  02FD  0020               	movlb	0	; select bank0
  5306  02FE  0828               	movf	?___awtoft,w
  5307  02FF  00D5               	movwf	map@x
  5308  0300  0829               	movf	?___awtoft+1,w
  5309  0301  00D6               	movwf	map@x+1
  5310  0302  082A               	movf	?___awtoft+2,w
  5311  0303  00D7               	movwf	map@x+2
  5312  0304  3196  26D6  3182   	fcall	_map
  5313  0307  0020               	movlb	0	; select bank0
  5314  0308  0855               	movf	?_map,w
  5315  0309  00E7               	movwf	___fttol@f1
  5316  030A  0856               	movf	?_map+1,w
  5317  030B  00E8               	movwf	___fttol@f1+1
  5318  030C  0857               	movf	?_map+2,w
  5319  030D  00E9               	movwf	___fttol@f1+2
  5320  030E  3197  2761  3182   	fcall	___fttol
  5321  0311  0020               	movlb	0	; select bank0
  5322  0312  086A               	movf	?___fttol+3,w
  5323  0313  0021               	movlb	1	; select bank1
  5324  0314  00C2               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  5325  0315  0020               	movlb	0	; select bank0
  5326  0316  0869               	movf	?___fttol+2,w
  5327  0317  0021               	movlb	1	; select bank1
  5328  0318  00C1               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  5329  0319  0020               	movlb	0	; select bank0
  5330  031A  0868               	movf	?___fttol+1,w
  5331  031B  0021               	movlb	1	; select bank1
  5332  031C  00C0               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  5333  031D  0020               	movlb	0	; select bank0
  5334  031E  0867               	movf	?___fttol,w
  5335  031F  0021               	movlb	1	; select bank1
  5336  0320  00BF               	movwf	_baseline_delay_time^(0+128)	;volatile
  5337                           
  5338                           ;main.c: 249: delay_time_changed = 1;
  5339  0321  3001               	movlw	1
  5340  0322  0022               	movlb	2	; select bank2
  5341  0323  00E5               	movwf	_delay_time_changed^(0+256)
  5342  0324  3000               	movlw	0
  5343  0325  00E6               	movwf	(_delay_time_changed^(0+256)+1)
  5344                           
  5345                           ;main.c: 250: LATDbits.LATD0 = 1;
  5346  0326  140F               	bsf	15,0	;volatile
  5347                           
  5348                           ;main.c: 251: } else {
  5349  0327  2B2A               	goto	l4226
  5350  0328                     l281:	
  5351                           
  5352                           ;main.c: 252: LATDbits.LATD0 = 0;
  5353  0328  0022               	movlb	2	; select bank2
  5354  0329  100F               	bcf	15,0	;volatile
  5355  032A                     l4226:	
  5356                           
  5357                           ;main.c: 253: }
  5358                           ;main.c: 263: if (knob_2_pos - knob2_prev >= 4 || knob_2_pos - knob2_prev <= -4) {
  5359  032A  0021               	movlb	1	; select bank1
  5360  032B  094B               	comf	_knob2_prev^(0+128),w	;volatile
  5361  032C  00AA               	movwf	??_main^(0+128)
  5362  032D  094C               	comf	(_knob2_prev+1)^(0+128),w	;volatile
  5363  032E  00AB               	movwf	(??_main^(0+128)+1)
  5364  032F  0AAA               	incf	??_main^(0+128),f
  5365  0330  1903               	skipnz
  5366  0331  0AAB               	incf	(??_main^(0+128)+1),f
  5367  0332  0022               	movlb	2	; select bank2
  5368  0333  0850               	movf	_knob_2_pos^(0+256),w
  5369  0334  0021               	movlb	1	; select bank1
  5370  0335  072A               	addwf	??_main^(0+128),w
  5371  0336  00AC               	movwf	(??_main+2)^(0+128)
  5372  0337  0022               	movlb	2	; select bank2
  5373  0338  0851               	movf	(_knob_2_pos+1)^(0+256),w
  5374  0339  0021               	movlb	1	; select bank1
  5375  033A  3D2B               	addwfc	(??_main+1)^(0+128),w
  5376  033B  00AD               	movwf	(??_main+3)^(0+128)
  5377  033C  082D               	movf	(??_main+3)^(0+128),w
  5378  033D  3A80               	xorlw	128
  5379  033E  00AE               	movwf	(??_main+4)^(0+128)
  5380  033F  3080               	movlw	128
  5381  0340  022E               	subwf	(??_main+4)^(0+128),w
  5382  0341  1D03               	skipz
  5383  0342  2B45               	goto	u4215
  5384  0343  3004               	movlw	4
  5385  0344  022C               	subwf	(??_main+2)^(0+128),w
  5386  0345                     u4215:	
  5387  0345  1803               	skipnc
  5388  0346  2B64               	goto	l4230
  5389  0347  0021               	movlb	1	; select bank1
  5390  0348  094B               	comf	_knob2_prev^(0+128),w	;volatile
  5391  0349  00AA               	movwf	??_main^(0+128)
  5392  034A  094C               	comf	(_knob2_prev+1)^(0+128),w	;volatile
  5393  034B  00AB               	movwf	(??_main^(0+128)+1)
  5394  034C  0AAA               	incf	??_main^(0+128),f
  5395  034D  1903               	skipnz
  5396  034E  0AAB               	incf	(??_main^(0+128)+1),f
  5397  034F  0022               	movlb	2	; select bank2
  5398  0350  0850               	movf	_knob_2_pos^(0+256),w
  5399  0351  0021               	movlb	1	; select bank1
  5400  0352  072A               	addwf	??_main^(0+128),w
  5401  0353  00AC               	movwf	(??_main+2)^(0+128)
  5402  0354  0022               	movlb	2	; select bank2
  5403  0355  0851               	movf	(_knob_2_pos+1)^(0+256),w
  5404  0356  0021               	movlb	1	; select bank1
  5405  0357  3D2B               	addwfc	(??_main+1)^(0+128),w
  5406  0358  00AD               	movwf	(??_main+3)^(0+128)
  5407  0359  082D               	movf	(??_main+3)^(0+128),w
  5408  035A  3A80               	xorlw	128
  5409  035B  00AE               	movwf	(??_main+4)^(0+128)
  5410  035C  307F               	movlw	127
  5411  035D  022E               	subwf	(??_main+4)^(0+128),w
  5412  035E  1D03               	skipz
  5413  035F  2B62               	goto	u4225
  5414  0360  30FD               	movlw	253
  5415  0361  022C               	subwf	(??_main+2)^(0+128),w
  5416  0362                     u4225:	
  5417  0362  1803               	skipnc
  5418  0363  2BC1               	goto	l4238
  5419  0364                     l4230:	
  5420                           
  5421                           ;main.c: 264: knob2_prev = knob_2_pos;
  5422  0364  0022               	movlb	2	; select bank2
  5423  0365  0851               	movf	(_knob_2_pos+1)^(0+256),w
  5424  0366  0021               	movlb	1	; select bank1
  5425  0367  00CC               	movwf	(_knob2_prev+1)^(0+128)	;volatile
  5426  0368  0022               	movlb	2	; select bank2
  5427  0369  0850               	movf	_knob_2_pos^(0+256),w
  5428  036A  0021               	movlb	1	; select bank1
  5429  036B  00CB               	movwf	_knob2_prev^(0+128)	;volatile
  5430                           
  5431                           ;main.c: 265: int i = map(knob2_prev, 0, 1023, 0, 39);
  5432  036C  3000               	movlw	0
  5433  036D  0020               	movlb	0	; select bank0
  5434  036E  00E1               	movwf	map@out_max
  5435  036F  301C               	movlw	28
  5436  0370  00E2               	movwf	map@out_max+1
  5437  0371  3042               	movlw	66
  5438  0372  00E3               	movwf	map@out_max+2
  5439  0373  3000               	movlw	0
  5440  0374  00DE               	movwf	map@out_min
  5441  0375  3000               	movlw	0
  5442  0376  00DF               	movwf	map@out_min+1
  5443  0377  3000               	movlw	0
  5444  0378  00E0               	movwf	map@out_min+2
  5445  0379  30C0               	movlw	192
  5446  037A  00DB               	movwf	map@in_max
  5447  037B  307F               	movlw	127
  5448  037C  00DC               	movwf	map@in_max+1
  5449  037D  3044               	movlw	68
  5450  037E  00DD               	movwf	map@in_max+2
  5451  037F  3000               	movlw	0
  5452  0380  00D8               	movwf	map@in_min
  5453  0381  3000               	movlw	0
  5454  0382  00D9               	movwf	map@in_min+1
  5455  0383  3000               	movlw	0
  5456  0384  00DA               	movwf	map@in_min+2
  5457  0385  0021               	movlb	1	; select bank1
  5458  0386  084C               	movf	(_knob2_prev+1)^(0+128),w	;volatile
  5459  0387  0020               	movlb	0	; select bank0
  5460  0388  00A9               	movwf	___awtoft@c+1
  5461  0389  0021               	movlb	1	; select bank1
  5462  038A  084B               	movf	_knob2_prev^(0+128),w	;volatile
  5463  038B  0020               	movlb	0	; select bank0
  5464  038C  00A8               	movwf	___awtoft@c
  5465  038D  3187  27DB  3182   	fcall	___awtoft
  5466  0390  0020               	movlb	0	; select bank0
  5467  0391  0828               	movf	?___awtoft,w
  5468  0392  00D5               	movwf	map@x
  5469  0393  0829               	movf	?___awtoft+1,w
  5470  0394  00D6               	movwf	map@x+1
  5471  0395  082A               	movf	?___awtoft+2,w
  5472  0396  00D7               	movwf	map@x+2
  5473  0397  3196  26D6  3182   	fcall	_map
  5474  039A  0020               	movlb	0	; select bank0
  5475  039B  0855               	movf	?_map,w
  5476  039C  00E7               	movwf	___fttol@f1
  5477  039D  0856               	movf	?_map+1,w
  5478  039E  00E8               	movwf	___fttol@f1+1
  5479  039F  0857               	movf	?_map+2,w
  5480  03A0  00E9               	movwf	___fttol@f1+2
  5481  03A1  3197  2761  3182   	fcall	___fttol
  5482  03A4  0020               	movlb	0	; select bank0
  5483  03A5  0868               	movf	?___fttol+1,w
  5484  03A6  0021               	movlb	1	; select bank1
  5485  03A7  00BC               	movwf	(main@i+1)^(0+128)
  5486  03A8  0020               	movlb	0	; select bank0
  5487  03A9  0867               	movf	?___fttol,w
  5488  03AA  0021               	movlb	1	; select bank1
  5489  03AB  00BB               	movwf	main@i^(0+128)
  5490                           
  5491                           ;main.c: 266: CCPR2 = iB25k[i];
  5492  03AC  353B               	lslf	main@i^(0+128),w
  5493  03AD  3E20               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5494  03AE  0086               	movwf	6
  5495  03AF  3004               	movlw	4	; select bank8/9
  5496  03B0  0087               	movwf	7
  5497  03B1  3F40               	moviw [0]fsr1
  5498  03B2  0025               	movlb	5	; select bank5
  5499  03B3  0098               	movwf	24	;volatile
  5500  03B4  3F41               	moviw [1]fsr1
  5501  03B5  0099               	movwf	25	;volatile
  5502                           
  5503                           ;main.c: 267: CCPR3 = B25k[i];
  5504  03B6  0021               	movlb	1	; select bank1
  5505  03B7  353B               	lslf	main@i^(0+128),w
  5506  03B8  3EA0               	addlw	(low (_B25k| (0+768)))& (0+255)
  5507  03B9  0086               	movwf	6
  5508  03BA  3003               	movlw	3	; select bank7/8
  5509  03BB  0087               	movwf	7
  5510  03BC  3F40               	moviw [0]fsr1
  5511  03BD  0026               	movlb	6	; select bank6
  5512  03BE  0091               	movwf	17	;volatile
  5513  03BF  3F41               	moviw [1]fsr1
  5514  03C0  0092               	movwf	18	;volatile
  5515  03C1                     l4238:	
  5516                           
  5517                           ;main.c: 268: }
  5518                           ;main.c: 278: if (knob_3_pos - knob3_prev >= 4 || knob_3_pos - knob3_prev <= -4) {
  5519  03C1  0021               	movlb	1	; select bank1
  5520  03C2  094D               	comf	_knob3_prev^(0+128),w	;volatile
  5521  03C3  00AA               	movwf	??_main^(0+128)
  5522  03C4  094E               	comf	(_knob3_prev+1)^(0+128),w	;volatile
  5523  03C5  00AB               	movwf	(??_main^(0+128)+1)
  5524  03C6  0AAA               	incf	??_main^(0+128),f
  5525  03C7  1903               	skipnz
  5526  03C8  0AAB               	incf	(??_main^(0+128)+1),f
  5527  03C9  0022               	movlb	2	; select bank2
  5528  03CA  0852               	movf	_knob_3_pos^(0+256),w
  5529  03CB  0021               	movlb	1	; select bank1
  5530  03CC  072A               	addwf	??_main^(0+128),w
  5531  03CD  00AC               	movwf	(??_main+2)^(0+128)
  5532  03CE  0022               	movlb	2	; select bank2
  5533  03CF  0853               	movf	(_knob_3_pos+1)^(0+256),w
  5534  03D0  0021               	movlb	1	; select bank1
  5535  03D1  3D2B               	addwfc	(??_main+1)^(0+128),w
  5536  03D2  00AD               	movwf	(??_main+3)^(0+128)
  5537  03D3  082D               	movf	(??_main+3)^(0+128),w
  5538  03D4  3A80               	xorlw	128
  5539  03D5  00AE               	movwf	(??_main+4)^(0+128)
  5540  03D6  3080               	movlw	128
  5541  03D7  022E               	subwf	(??_main+4)^(0+128),w
  5542  03D8  1D03               	skipz
  5543  03D9  2BDC               	goto	u4235
  5544  03DA  3004               	movlw	4
  5545  03DB  022C               	subwf	(??_main+2)^(0+128),w
  5546  03DC                     u4235:	
  5547  03DC  1803               	skipnc
  5548  03DD  2BFB               	goto	l4242
  5549  03DE  0021               	movlb	1	; select bank1
  5550  03DF  094D               	comf	_knob3_prev^(0+128),w	;volatile
  5551  03E0  00AA               	movwf	??_main^(0+128)
  5552  03E1  094E               	comf	(_knob3_prev+1)^(0+128),w	;volatile
  5553  03E2  00AB               	movwf	(??_main^(0+128)+1)
  5554  03E3  0AAA               	incf	??_main^(0+128),f
  5555  03E4  1903               	skipnz
  5556  03E5  0AAB               	incf	(??_main^(0+128)+1),f
  5557  03E6  0022               	movlb	2	; select bank2
  5558  03E7  0852               	movf	_knob_3_pos^(0+256),w
  5559  03E8  0021               	movlb	1	; select bank1
  5560  03E9  072A               	addwf	??_main^(0+128),w
  5561  03EA  00AC               	movwf	(??_main+2)^(0+128)
  5562  03EB  0022               	movlb	2	; select bank2
  5563  03EC  0853               	movf	(_knob_3_pos+1)^(0+256),w
  5564  03ED  0021               	movlb	1	; select bank1
  5565  03EE  3D2B               	addwfc	(??_main+1)^(0+128),w
  5566  03EF  00AD               	movwf	(??_main+3)^(0+128)
  5567  03F0  082D               	movf	(??_main+3)^(0+128),w
  5568  03F1  3A80               	xorlw	128
  5569  03F2  00AE               	movwf	(??_main+4)^(0+128)
  5570  03F3  307F               	movlw	127
  5571  03F4  022E               	subwf	(??_main+4)^(0+128),w
  5572  03F5  1D03               	skipz
  5573  03F6  2BF9               	goto	u4245
  5574  03F7  30FD               	movlw	253
  5575  03F8  022C               	subwf	(??_main+2)^(0+128),w
  5576  03F9                     u4245:	
  5577  03F9  1803               	skipnc
  5578  03FA  2C58               	goto	l4250
  5579  03FB                     l4242:	
  5580                           
  5581                           ;main.c: 279: knob3_prev = knob_3_pos;
  5582  03FB  0022               	movlb	2	; select bank2
  5583  03FC  0853               	movf	(_knob_3_pos+1)^(0+256),w
  5584  03FD  0021               	movlb	1	; select bank1
  5585  03FE  00CE               	movwf	(_knob3_prev+1)^(0+128)	;volatile
  5586  03FF  0022               	movlb	2	; select bank2
  5587  0400  0852               	movf	_knob_3_pos^(0+256),w
  5588  0401  0021               	movlb	1	; select bank1
  5589  0402  00CD               	movwf	_knob3_prev^(0+128)	;volatile
  5590                           
  5591                           ;main.c: 280: int i = map(knob3_prev, 0, 1023, 16, 0);
  5592  0403  3000               	movlw	0
  5593  0404  0020               	movlb	0	; select bank0
  5594  0405  00E1               	movwf	map@out_max
  5595  0406  3000               	movlw	0
  5596  0407  00E2               	movwf	map@out_max+1
  5597  0408  3000               	movlw	0
  5598  0409  00E3               	movwf	map@out_max+2
  5599  040A  3000               	movlw	0
  5600  040B  00DE               	movwf	map@out_min
  5601  040C  3080               	movlw	128
  5602  040D  00DF               	movwf	map@out_min+1
  5603  040E  3041               	movlw	65
  5604  040F  00E0               	movwf	map@out_min+2
  5605  0410  30C0               	movlw	192
  5606  0411  00DB               	movwf	map@in_max
  5607  0412  307F               	movlw	127
  5608  0413  00DC               	movwf	map@in_max+1
  5609  0414  3044               	movlw	68
  5610  0415  00DD               	movwf	map@in_max+2
  5611  0416  3000               	movlw	0
  5612  0417  00D8               	movwf	map@in_min
  5613  0418  3000               	movlw	0
  5614  0419  00D9               	movwf	map@in_min+1
  5615  041A  3000               	movlw	0
  5616  041B  00DA               	movwf	map@in_min+2
  5617  041C  0021               	movlb	1	; select bank1
  5618  041D  084E               	movf	(_knob3_prev+1)^(0+128),w	;volatile
  5619  041E  0020               	movlb	0	; select bank0
  5620  041F  00A9               	movwf	___awtoft@c+1
  5621  0420  0021               	movlb	1	; select bank1
  5622  0421  084D               	movf	_knob3_prev^(0+128),w	;volatile
  5623  0422  0020               	movlb	0	; select bank0
  5624  0423  00A8               	movwf	___awtoft@c
  5625  0424  3187  27DB  3182   	fcall	___awtoft
  5626  0427  0020               	movlb	0	; select bank0
  5627  0428  0828               	movf	?___awtoft,w
  5628  0429  00D5               	movwf	map@x
  5629  042A  0829               	movf	?___awtoft+1,w
  5630  042B  00D6               	movwf	map@x+1
  5631  042C  082A               	movf	?___awtoft+2,w
  5632  042D  00D7               	movwf	map@x+2
  5633  042E  3196  26D6  3182   	fcall	_map
  5634  0431  0020               	movlb	0	; select bank0
  5635  0432  0855               	movf	?_map,w
  5636  0433  00E7               	movwf	___fttol@f1
  5637  0434  0856               	movf	?_map+1,w
  5638  0435  00E8               	movwf	___fttol@f1+1
  5639  0436  0857               	movf	?_map+2,w
  5640  0437  00E9               	movwf	___fttol@f1+2
  5641  0438  3197  2761  3182   	fcall	___fttol
  5642  043B  0020               	movlb	0	; select bank0
  5643  043C  0868               	movf	?___fttol+1,w
  5644  043D  0021               	movlb	1	; select bank1
  5645  043E  00BE               	movwf	(main@i_392+1)^(0+128)
  5646  043F  0020               	movlb	0	; select bank0
  5647  0440  0867               	movf	?___fttol,w
  5648  0441  0021               	movlb	1	; select bank1
  5649  0442  00BD               	movwf	main@i_392^(0+128)
  5650                           
  5651                           ;main.c: 281: CCPR4 = iB25k[i];
  5652  0443  353D               	lslf	main@i_392^(0+128),w
  5653  0444  3E20               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5654  0445  0086               	movwf	6
  5655  0446  3004               	movlw	4	; select bank8/9
  5656  0447  0087               	movwf	7
  5657  0448  3F40               	moviw [0]fsr1
  5658  0449  0026               	movlb	6	; select bank6
  5659  044A  0098               	movwf	24	;volatile
  5660  044B  3F41               	moviw [1]fsr1
  5661  044C  0099               	movwf	25	;volatile
  5662                           
  5663                           ;main.c: 282: CCPR5 = B25k[i];
  5664  044D  0021               	movlb	1	; select bank1
  5665  044E  353D               	lslf	main@i_392^(0+128),w
  5666  044F  3EA0               	addlw	(low (_B25k| (0+768)))& (0+255)
  5667  0450  0086               	movwf	6
  5668  0451  3003               	movlw	3	; select bank7/8
  5669  0452  0087               	movwf	7
  5670  0453  3F40               	moviw [0]fsr1
  5671  0454  0026               	movlb	6	; select bank6
  5672  0455  009C               	movwf	28	;volatile
  5673  0456  3F41               	moviw [1]fsr1
  5674  0457  009D               	movwf	29	;volatile
  5675  0458                     l4250:	
  5676                           
  5677                           ;main.c: 283: }
  5678                           ;main.c: 293: if (knob_4_pos - knob4_prev >= 4 || knob_4_pos - knob4_prev <= -4) {
  5679  0458  0021               	movlb	1	; select bank1
  5680  0459  094F               	comf	_knob4_prev^(0+128),w	;volatile
  5681  045A  00AA               	movwf	??_main^(0+128)
  5682  045B  0950               	comf	(_knob4_prev+1)^(0+128),w	;volatile
  5683  045C  00AB               	movwf	(??_main^(0+128)+1)
  5684  045D  0AAA               	incf	??_main^(0+128),f
  5685  045E  1903               	skipnz
  5686  045F  0AAB               	incf	(??_main^(0+128)+1),f
  5687  0460  0022               	movlb	2	; select bank2
  5688  0461  0854               	movf	_knob_4_pos^(0+256),w
  5689  0462  0021               	movlb	1	; select bank1
  5690  0463  072A               	addwf	??_main^(0+128),w
  5691  0464  00AC               	movwf	(??_main+2)^(0+128)
  5692  0465  0022               	movlb	2	; select bank2
  5693  0466  0855               	movf	(_knob_4_pos+1)^(0+256),w
  5694  0467  0021               	movlb	1	; select bank1
  5695  0468  3D2B               	addwfc	(??_main+1)^(0+128),w
  5696  0469  00AD               	movwf	(??_main+3)^(0+128)
  5697  046A  082D               	movf	(??_main+3)^(0+128),w
  5698  046B  3A80               	xorlw	128
  5699  046C  00AE               	movwf	(??_main+4)^(0+128)
  5700  046D  3080               	movlw	128
  5701  046E  022E               	subwf	(??_main+4)^(0+128),w
  5702  046F  1D03               	skipz
  5703  0470  2C73               	goto	u4255
  5704  0471  3004               	movlw	4
  5705  0472  022C               	subwf	(??_main+2)^(0+128),w
  5706  0473                     u4255:	
  5707  0473  1803               	skipnc
  5708  0474  2C92               	goto	l4254
  5709  0475  0021               	movlb	1	; select bank1
  5710  0476  094F               	comf	_knob4_prev^(0+128),w	;volatile
  5711  0477  00AA               	movwf	??_main^(0+128)
  5712  0478  0950               	comf	(_knob4_prev+1)^(0+128),w	;volatile
  5713  0479  00AB               	movwf	(??_main^(0+128)+1)
  5714  047A  0AAA               	incf	??_main^(0+128),f
  5715  047B  1903               	skipnz
  5716  047C  0AAB               	incf	(??_main^(0+128)+1),f
  5717  047D  0022               	movlb	2	; select bank2
  5718  047E  0854               	movf	_knob_4_pos^(0+256),w
  5719  047F  0021               	movlb	1	; select bank1
  5720  0480  072A               	addwf	??_main^(0+128),w
  5721  0481  00AC               	movwf	(??_main+2)^(0+128)
  5722  0482  0022               	movlb	2	; select bank2
  5723  0483  0855               	movf	(_knob_4_pos+1)^(0+256),w
  5724  0484  0021               	movlb	1	; select bank1
  5725  0485  3D2B               	addwfc	(??_main+1)^(0+128),w
  5726  0486  00AD               	movwf	(??_main+3)^(0+128)
  5727  0487  082D               	movf	(??_main+3)^(0+128),w
  5728  0488  3A80               	xorlw	128
  5729  0489  00AE               	movwf	(??_main+4)^(0+128)
  5730  048A  307F               	movlw	127
  5731  048B  022E               	subwf	(??_main+4)^(0+128),w
  5732  048C  1D03               	skipz
  5733  048D  2C90               	goto	u4265
  5734  048E  30FD               	movlw	253
  5735  048F  022C               	subwf	(??_main+2)^(0+128),w
  5736  0490                     u4265:	
  5737  0490  1803               	skipnc
  5738  0491  2CDA               	goto	l4258
  5739  0492                     l4254:	
  5740                           
  5741                           ;main.c: 294: knob4_prev = knob_4_pos;
  5742  0492  0022               	movlb	2	; select bank2
  5743  0493  0855               	movf	(_knob_4_pos+1)^(0+256),w
  5744  0494  0021               	movlb	1	; select bank1
  5745  0495  00D0               	movwf	(_knob4_prev+1)^(0+128)	;volatile
  5746  0496  0022               	movlb	2	; select bank2
  5747  0497  0854               	movf	_knob_4_pos^(0+256),w
  5748  0498  0021               	movlb	1	; select bank1
  5749  0499  00CF               	movwf	_knob4_prev^(0+128)	;volatile
  5750                           
  5751                           ;main.c: 295: mod_delay_time = map(knob4_prev, 0, 1023, 60, 1000);
  5752  049A  3000               	movlw	0
  5753  049B  0020               	movlb	0	; select bank0
  5754  049C  00E1               	movwf	map@out_max
  5755  049D  307A               	movlw	122
  5756  049E  00E2               	movwf	map@out_max+1
  5757  049F  3044               	movlw	68
  5758  04A0  00E3               	movwf	map@out_max+2
  5759  04A1  3000               	movlw	0
  5760  04A2  00DE               	movwf	map@out_min
  5761  04A3  3070               	movlw	112
  5762  04A4  00DF               	movwf	map@out_min+1
  5763  04A5  3042               	movlw	66
  5764  04A6  00E0               	movwf	map@out_min+2
  5765  04A7  30C0               	movlw	192
  5766  04A8  00DB               	movwf	map@in_max
  5767  04A9  307F               	movlw	127
  5768  04AA  00DC               	movwf	map@in_max+1
  5769  04AB  3044               	movlw	68
  5770  04AC  00DD               	movwf	map@in_max+2
  5771  04AD  3000               	movlw	0
  5772  04AE  00D8               	movwf	map@in_min
  5773  04AF  3000               	movlw	0
  5774  04B0  00D9               	movwf	map@in_min+1
  5775  04B1  3000               	movlw	0
  5776  04B2  00DA               	movwf	map@in_min+2
  5777  04B3  0021               	movlb	1	; select bank1
  5778  04B4  0850               	movf	(_knob4_prev+1)^(0+128),w	;volatile
  5779  04B5  0020               	movlb	0	; select bank0
  5780  04B6  00A9               	movwf	___awtoft@c+1
  5781  04B7  0021               	movlb	1	; select bank1
  5782  04B8  084F               	movf	_knob4_prev^(0+128),w	;volatile
  5783  04B9  0020               	movlb	0	; select bank0
  5784  04BA  00A8               	movwf	___awtoft@c
  5785  04BB  3187  27DB  3182   	fcall	___awtoft
  5786  04BE  0020               	movlb	0	; select bank0
  5787  04BF  0828               	movf	?___awtoft,w
  5788  04C0  00D5               	movwf	map@x
  5789  04C1  0829               	movf	?___awtoft+1,w
  5790  04C2  00D6               	movwf	map@x+1
  5791  04C3  082A               	movf	?___awtoft+2,w
  5792  04C4  00D7               	movwf	map@x+2
  5793  04C5  3196  26D6  3182   	fcall	_map
  5794  04C8  0020               	movlb	0	; select bank0
  5795  04C9  0855               	movf	?_map,w
  5796  04CA  00E7               	movwf	___fttol@f1
  5797  04CB  0856               	movf	?_map+1,w
  5798  04CC  00E8               	movwf	___fttol@f1+1
  5799  04CD  0857               	movf	?_map+2,w
  5800  04CE  00E9               	movwf	___fttol@f1+2
  5801  04CF  3197  2761  3182   	fcall	___fttol
  5802  04D2  0020               	movlb	0	; select bank0
  5803  04D3  0868               	movf	?___fttol+1,w
  5804  04D4  0022               	movlb	2	; select bank2
  5805  04D5  00E8               	movwf	(_mod_delay_time+1)^(0+256)
  5806  04D6  0020               	movlb	0	; select bank0
  5807  04D7  0867               	movf	?___fttol,w
  5808  04D8  0022               	movlb	2	; select bank2
  5809  04D9  00E7               	movwf	_mod_delay_time^(0+256)
  5810  04DA                     l4258:	
  5811                           
  5812                           ;main.c: 296: }
  5813                           ;main.c: 304: if (knob_5_pos - knob5_prev >= 4 || knob_5_pos - knob5_prev <= -4) {
  5814  04DA  0021               	movlb	1	; select bank1
  5815  04DB  0951               	comf	_knob5_prev^(0+128),w	;volatile
  5816  04DC  00AA               	movwf	??_main^(0+128)
  5817  04DD  0952               	comf	(_knob5_prev+1)^(0+128),w	;volatile
  5818  04DE  00AB               	movwf	(??_main^(0+128)+1)
  5819  04DF  0AAA               	incf	??_main^(0+128),f
  5820  04E0  1903               	skipnz
  5821  04E1  0AAB               	incf	(??_main^(0+128)+1),f
  5822  04E2  0022               	movlb	2	; select bank2
  5823  04E3  0856               	movf	_knob_5_pos^(0+256),w
  5824  04E4  0021               	movlb	1	; select bank1
  5825  04E5  072A               	addwf	??_main^(0+128),w
  5826  04E6  00AC               	movwf	(??_main+2)^(0+128)
  5827  04E7  0022               	movlb	2	; select bank2
  5828  04E8  0857               	movf	(_knob_5_pos+1)^(0+256),w
  5829  04E9  0021               	movlb	1	; select bank1
  5830  04EA  3D2B               	addwfc	(??_main+1)^(0+128),w
  5831  04EB  00AD               	movwf	(??_main+3)^(0+128)
  5832  04EC  082D               	movf	(??_main+3)^(0+128),w
  5833  04ED  3A80               	xorlw	128
  5834  04EE  00AE               	movwf	(??_main+4)^(0+128)
  5835  04EF  3080               	movlw	128
  5836  04F0  022E               	subwf	(??_main+4)^(0+128),w
  5837  04F1  1D03               	skipz
  5838  04F2  2CF5               	goto	u4275
  5839  04F3  3004               	movlw	4
  5840  04F4  022C               	subwf	(??_main+2)^(0+128),w
  5841  04F5                     u4275:	
  5842  04F5  1803               	skipnc
  5843  04F6  2D14               	goto	l4262
  5844  04F7  0021               	movlb	1	; select bank1
  5845  04F8  0951               	comf	_knob5_prev^(0+128),w	;volatile
  5846  04F9  00AA               	movwf	??_main^(0+128)
  5847  04FA  0952               	comf	(_knob5_prev+1)^(0+128),w	;volatile
  5848  04FB  00AB               	movwf	(??_main^(0+128)+1)
  5849  04FC  0AAA               	incf	??_main^(0+128),f
  5850  04FD  1903               	skipnz
  5851  04FE  0AAB               	incf	(??_main^(0+128)+1),f
  5852  04FF  0022               	movlb	2	; select bank2
  5853  0500  0856               	movf	_knob_5_pos^(0+256),w
  5854  0501  0021               	movlb	1	; select bank1
  5855  0502  072A               	addwf	??_main^(0+128),w
  5856  0503  00AC               	movwf	(??_main+2)^(0+128)
  5857  0504  0022               	movlb	2	; select bank2
  5858  0505  0857               	movf	(_knob_5_pos+1)^(0+256),w
  5859  0506  0021               	movlb	1	; select bank1
  5860  0507  3D2B               	addwfc	(??_main+1)^(0+128),w
  5861  0508  00AD               	movwf	(??_main+3)^(0+128)
  5862  0509  082D               	movf	(??_main+3)^(0+128),w
  5863  050A  3A80               	xorlw	128
  5864  050B  00AE               	movwf	(??_main+4)^(0+128)
  5865  050C  307F               	movlw	127
  5866  050D  022E               	subwf	(??_main+4)^(0+128),w
  5867  050E  1D03               	skipz
  5868  050F  2D12               	goto	u4285
  5869  0510  30FD               	movlw	253
  5870  0511  022C               	subwf	(??_main+2)^(0+128),w
  5871  0512                     u4285:	
  5872  0512  1803               	skipnc
  5873  0513  2D1F               	goto	l294
  5874  0514                     l4262:	
  5875                           
  5876                           ;main.c: 305: knob5_prev = knob_5_pos;
  5877  0514  0022               	movlb	2	; select bank2
  5878  0515  0857               	movf	(_knob_5_pos+1)^(0+256),w
  5879  0516  0021               	movlb	1	; select bank1
  5880  0517  00D2               	movwf	(_knob5_prev+1)^(0+128)	;volatile
  5881  0518  0022               	movlb	2	; select bank2
  5882  0519  0856               	movf	_knob_5_pos^(0+256),w
  5883  051A  0021               	movlb	1	; select bank1
  5884  051B  00D1               	movwf	_knob5_prev^(0+128)	;volatile
  5885                           
  5886                           ;main.c: 306: LATDbits.LATD2 = 1;
  5887  051C  0022               	movlb	2	; select bank2
  5888  051D  150F               	bsf	15,2	;volatile
  5889                           
  5890                           ;main.c: 307: } else {
  5891  051E  2D21               	goto	l4266
  5892  051F                     l294:	
  5893                           
  5894                           ;main.c: 308: LATDbits.LATD2 = 0;
  5895  051F  0022               	movlb	2	; select bank2
  5896  0520  110F               	bcf	15,2	;volatile
  5897  0521                     l4266:	
  5898                           
  5899                           ;main.c: 309: }
  5900                           ;main.c: 322: if (mod_timer >= mod_delay_time) {
  5901  0521  0867               	movf	_mod_delay_time^(0+256),w
  5902  0522  0021               	movlb	1	; select bank1
  5903  0523  00AA               	movwf	??_main^(0+128)
  5904  0524  0022               	movlb	2	; select bank2
  5905  0525  0868               	movf	(_mod_delay_time+1)^(0+256),w
  5906  0526  0021               	movlb	1	; select bank1
  5907  0527  00AB               	movwf	(??_main^(0+128)+1)
  5908  0528  3000               	movlw	0
  5909  0529  1BAB               	btfsc	(??_main^(0+128)+1),7
  5910  052A  30FF               	movlw	255
  5911  052B  00AC               	movwf	(??_main^(0+128)+2)
  5912  052C  00AD               	movwf	(??_main^(0+128)+3)
  5913  052D  0022               	movlb	2	; select bank2
  5914  052E  083B               	movf	(_mod_timer+3)^(0+256),w	;volatile
  5915  052F  3A80               	xorlw	128
  5916  0530  0021               	movlb	1	; select bank1
  5917  0531  00AE               	movwf	(??_main+4)^(0+128)
  5918  0532  082D               	movf	(??_main+3)^(0+128),w
  5919  0533  3A80               	xorlw	128
  5920  0534  022E               	subwf	(??_main+4)^(0+128),w
  5921  0535  0022               	movlb	2	; select bank2
  5922  0536  1D03               	skipz
  5923  0537  2D48               	goto	u4293
  5924  0538  0021               	movlb	1	; select bank1
  5925  0539  082C               	movf	(??_main+2)^(0+128),w
  5926  053A  0022               	movlb	2	; select bank2
  5927  053B  023A               	subwf	(_mod_timer+2)^(0+256),w	;volatile
  5928  053C  1D03               	skipz
  5929  053D  2D48               	goto	u4293
  5930  053E  0021               	movlb	1	; select bank1
  5931  053F  082B               	movf	(??_main+1)^(0+128),w
  5932  0540  0022               	movlb	2	; select bank2
  5933  0541  0239               	subwf	(_mod_timer+1)^(0+256),w	;volatile
  5934  0542  1D03               	skipz
  5935  0543  2D48               	goto	u4293
  5936  0544  0021               	movlb	1	; select bank1
  5937  0545  082A               	movf	??_main^(0+128),w
  5938  0546  0022               	movlb	2	; select bank2
  5939  0547  0238               	subwf	_mod_timer^(0+256),w	;volatile
  5940  0548                     u4293:	
  5941  0548  1C03               	skipc
  5942  0549  2E6D               	goto	l4320
  5943                           
  5944                           ;main.c: 324: mod_counter = mod_counter + 1;
  5945  054A  0021               	movlb	1	; select bank1
  5946  054B  0866               	movf	_mod_counter^(0+128),w
  5947  054C  3E01               	addlw	1
  5948  054D  00E6               	movwf	_mod_counter^(0+128)
  5949  054E  3000               	movlw	0
  5950  054F  3D67               	addwfc	(_mod_counter+1)^(0+128),w
  5951  0550  00E7               	movwf	(_mod_counter+1)^(0+128)
  5952                           
  5953                           ;main.c: 325: mod_timer = 0;
  5954  0551  3000               	movlw	0
  5955  0552  0022               	movlb	2	; select bank2
  5956  0553  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
  5957  0554  3000               	movlw	0
  5958  0555  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
  5959  0556  3000               	movlw	0
  5960  0557  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
  5961  0558  3000               	movlw	0
  5962  0559  00B8               	movwf	_mod_timer^(0+256)	;volatile
  5963                           
  5964                           ;main.c: 327: if (bottom_push_state == 1 || bottom_push_state == 5) {
  5965  055A  0021               	movlb	1	; select bank1
  5966  055B  0347               	decf	_bottom_push_state^(0+128),w
  5967  055C  0448               	iorwf	(_bottom_push_state+1)^(0+128),w
  5968  055D  1903               	btfsc	3,2
  5969  055E  2D64               	goto	l4276
  5970  055F  3005               	movlw	5
  5971  0560  0647               	xorwf	_bottom_push_state^(0+128),w
  5972  0561  0448               	iorwf	(_bottom_push_state+1)^(0+128),w
  5973  0562  1D03               	btfss	3,2
  5974  0563  2D6D               	goto	l4280
  5975  0564                     l4276:	
  5976                           
  5977                           ;main.c: 328: if (mod_counter >= 61) {
  5978  0564  0867               	movf	(_mod_counter+1)^(0+128),w
  5979  0565  3A80               	xorlw	128
  5980  0566  00AA               	movwf	??_main^(0+128)
  5981  0567  3080               	movlw	128
  5982  0568  022A               	subwf	??_main^(0+128),w
  5983  0569  1D03               	skipz
  5984  056A  2D76               	goto	u4335
  5985  056B  303D               	movlw	61
  5986  056C  2D75               	goto	L1
  5987  056D                     l4280:	
  5988                           ;main.c: 330: }
  5989                           ;main.c: 331: } else {
  5990                           
  5991                           ;main.c: 329: mod_counter = 0;
  5992                           
  5993                           
  5994                           ;main.c: 332: if (mod_counter > 31) {
  5995  056D  0867               	movf	(_mod_counter+1)^(0+128),w
  5996  056E  3A80               	xorlw	128
  5997  056F  00AA               	movwf	??_main^(0+128)
  5998  0570  3080               	movlw	128
  5999  0571  022A               	subwf	??_main^(0+128),w
  6000  0572  1D03               	skipz
  6001  0573  2D76               	goto	u4335
  6002  0574  3020               	movlw	32
  6003  0575                     L1:	
  6004  0575  0266               	subwf	_mod_counter^(0+128),w
  6005  0576                     u4335:	
  6006  0576  1C03               	skipc
  6007  0577  2D7B               	goto	l4284
  6008                           
  6009                           ;main.c: 333: mod_counter = 0;
  6010  0578  0021               	movlb	1	; select bank1
  6011  0579  01E6               	clrf	_mod_counter^(0+128)
  6012  057A  01E7               	clrf	(_mod_counter+1)^(0+128)
  6013  057B                     l4284:	
  6014                           
  6015                           ;main.c: 334: }
  6016                           ;main.c: 335: }
  6017                           ;main.c: 338: signed int adjusted_pot_value = map(knob5_prev, 0, 1023, 1275, 0);
  6018  057B  3000               	movlw	0
  6019  057C  0020               	movlb	0	; select bank0
  6020  057D  00E1               	movwf	map@out_max
  6021  057E  3000               	movlw	0
  6022  057F  00E2               	movwf	map@out_max+1
  6023  0580  3000               	movlw	0
  6024  0581  00E3               	movwf	map@out_max+2
  6025  0582  3060               	movlw	96
  6026  0583  00DE               	movwf	map@out_min
  6027  0584  309F               	movlw	159
  6028  0585  00DF               	movwf	map@out_min+1
  6029  0586  3044               	movlw	68
  6030  0587  00E0               	movwf	map@out_min+2
  6031  0588  30C0               	movlw	192
  6032  0589  00DB               	movwf	map@in_max
  6033  058A  307F               	movlw	127
  6034  058B  00DC               	movwf	map@in_max+1
  6035  058C  3044               	movlw	68
  6036  058D  00DD               	movwf	map@in_max+2
  6037  058E  3000               	movlw	0
  6038  058F  00D8               	movwf	map@in_min
  6039  0590  3000               	movlw	0
  6040  0591  00D9               	movwf	map@in_min+1
  6041  0592  3000               	movlw	0
  6042  0593  00DA               	movwf	map@in_min+2
  6043  0594  0021               	movlb	1	; select bank1
  6044  0595  0852               	movf	(_knob5_prev+1)^(0+128),w	;volatile
  6045  0596  0020               	movlb	0	; select bank0
  6046  0597  00A9               	movwf	___awtoft@c+1
  6047  0598  0021               	movlb	1	; select bank1
  6048  0599  0851               	movf	_knob5_prev^(0+128),w	;volatile
  6049  059A  0020               	movlb	0	; select bank0
  6050  059B  00A8               	movwf	___awtoft@c
  6051  059C  3187  27DB  3182   	fcall	___awtoft
  6052  059F  0020               	movlb	0	; select bank0
  6053  05A0  0828               	movf	?___awtoft,w
  6054  05A1  00D5               	movwf	map@x
  6055  05A2  0829               	movf	?___awtoft+1,w
  6056  05A3  00D6               	movwf	map@x+1
  6057  05A4  082A               	movf	?___awtoft+2,w
  6058  05A5  00D7               	movwf	map@x+2
  6059  05A6  3196  26D6  3182   	fcall	_map
  6060  05A9  0020               	movlb	0	; select bank0
  6061  05AA  0855               	movf	?_map,w
  6062  05AB  00E7               	movwf	___fttol@f1
  6063  05AC  0856               	movf	?_map+1,w
  6064  05AD  00E8               	movwf	___fttol@f1+1
  6065  05AE  0857               	movf	?_map+2,w
  6066  05AF  00E9               	movwf	___fttol@f1+2
  6067  05B0  3197  2761  3182   	fcall	___fttol
  6068  05B3  0020               	movlb	0	; select bank0
  6069  05B4  0868               	movf	?___fttol+1,w
  6070  05B5  0021               	movlb	1	; select bank1
  6071  05B6  00BA               	movwf	(main@adjusted_pot_value+1)^(0+128)
  6072  05B7  0020               	movlb	0	; select bank0
  6073  05B8  0867               	movf	?___fttol,w
  6074  05B9  0021               	movlb	1	; select bank1
  6075  05BA  00B9               	movwf	main@adjusted_pot_value^(0+128)
  6076                           
  6077                           ;main.c: 339: switch (bottom_push_state) {
  6078  05BB  2E17               	goto	l4314
  6079  05BC                     l4286:	
  6080                           ;main.c: 340: case 1:
  6081                           
  6082                           
  6083                           ;main.c: 341: mod_value = mod5[mod_counter];
  6084  05BC  0867               	movf	(_mod_counter+1)^(0+128),w
  6085  05BD  00AB               	movwf	(??_main^(0+128)+1)
  6086  05BE  0866               	movf	_mod_counter^(0+128),w
  6087  05BF  00AA               	movwf	??_main^(0+128)
  6088  05C0  35AA               	lslf	??_main^(0+128),f
  6089  05C1  0DAB               	rlf	(??_main^(0+128)+1),f
  6090  05C2  3078               	movlw	120
  6091  05C3  00AC               	movwf	(??_main+2)^(0+128)
  6092  05C4  3023               	movlw	35
  6093  05C5  00AD               	movwf	((??_main+2)^(0+128)+1)
  6094  05C6  082A               	movf	??_main^(0+128),w
  6095  05C7  072C               	addwf	(??_main+2)^(0+128),w
  6096  05C8  0086               	movwf	6
  6097  05C9  082B               	movf	(??_main+1)^(0+128),w
  6098  05CA  3D2D               	addwfc	(??_main+3)^(0+128),w
  6099  05CB  0087               	movwf	7
  6100  05CC  3F40               	moviw [0]fsr1
  6101  05CD  0022               	movlb	2	; select bank2
  6102  05CE  00DA               	movwf	_mod_value^(0+256)
  6103  05CF  3F41               	moviw [1]fsr1
  6104  05D0  2DF1               	goto	L4
  6105  05D1                     l4290:	
  6106                           ;main.c: 344: case 2:
  6107                           
  6108                           ;main.c: 343: break;
  6109                           
  6110                           ;main.c: 342: PORTCbits.RC4 = 0;
  6111                           
  6112                           
  6113                           ;main.c: 345: mod_value = mod2[mod_counter];
  6114  05D1  0021               	movlb	1	; select bank1
  6115  05D2  3566               	lslf	_mod_counter^(0+128),w
  6116  05D3  3E20               	addlw	(low (_mod2| (0+512)))& (0+255)
  6117  05D4  0086               	movwf	6
  6118  05D5  3002               	movlw	2	; select bank4/5
  6119  05D6  0087               	movwf	7
  6120  05D7  3F40               	moviw [0]fsr1
  6121  05D8  0022               	movlb	2	; select bank2
  6122  05D9  00DA               	movwf	_mod_value^(0+256)
  6123  05DA  3F41               	moviw [1]fsr1
  6124  05DB  2DF1               	goto	L4
  6125  05DC                     l4294:	
  6126                           ;main.c: 348: case 3:
  6127                           
  6128                           ;main.c: 347: break;
  6129                           
  6130                           ;main.c: 346: PORTCbits.RC4 = 0;
  6131                           
  6132                           
  6133                           ;main.c: 349: mod_value = mod3[mod_counter];
  6134  05DC  0021               	movlb	1	; select bank1
  6135  05DD  3566               	lslf	_mod_counter^(0+128),w
  6136  05DE  3EA0               	addlw	(low (_mod3| (0+512)))& (0+255)
  6137  05DF  0086               	movwf	6
  6138  05E0  3002               	movlw	2	; select bank5/6
  6139  05E1  0087               	movwf	7
  6140  05E2  3F40               	moviw [0]fsr1
  6141  05E3  0022               	movlb	2	; select bank2
  6142  05E4  00DA               	movwf	_mod_value^(0+256)
  6143  05E5  3F41               	moviw [1]fsr1
  6144  05E6  2DF1               	goto	L4
  6145  05E7                     l4298:	
  6146                           ;main.c: 352: case 4:
  6147                           
  6148                           ;main.c: 351: break;
  6149                           
  6150                           ;main.c: 350: PORTCbits.RC4 = 0;
  6151                           
  6152                           
  6153                           ;main.c: 353: mod_value = mod4[mod_counter];
  6154  05E7  0021               	movlb	1	; select bank1
  6155  05E8  3566               	lslf	_mod_counter^(0+128),w
  6156  05E9  3E20               	addlw	(low (_mod4| (0+768)))& (0+255)
  6157  05EA  0086               	movwf	6
  6158  05EB  3003               	movlw	3	; select bank6/7
  6159  05EC  0087               	movwf	7
  6160  05ED  3F40               	moviw [0]fsr1
  6161  05EE  0022               	movlb	2	; select bank2
  6162  05EF  00DA               	movwf	_mod_value^(0+256)
  6163  05F0  3F41               	moviw [1]fsr1
  6164  05F1                     L4:	
  6165  05F1  00DB               	movwf	(_mod_value+1)^(0+256)
  6166  05F2  2E14               	goto	l4310
  6167  05F3                     l4302:	
  6168                           ;main.c: 356: case 5:
  6169                           
  6170                           ;main.c: 355: break;
  6171                           
  6172                           ;main.c: 354: PORTCbits.RC4 = 0;
  6173                           
  6174                           
  6175                           ;main.c: 357: mod_value = mod5[mod_counter];
  6176  05F3  0021               	movlb	1	; select bank1
  6177  05F4  0867               	movf	(_mod_counter+1)^(0+128),w
  6178  05F5  00AB               	movwf	(??_main^(0+128)+1)
  6179  05F6  0866               	movf	_mod_counter^(0+128),w
  6180  05F7  00AA               	movwf	??_main^(0+128)
  6181  05F8  35AA               	lslf	??_main^(0+128),f
  6182  05F9  0DAB               	rlf	(??_main^(0+128)+1),f
  6183  05FA  3078               	movlw	120
  6184  05FB  00AC               	movwf	(??_main+2)^(0+128)
  6185  05FC  3023               	movlw	35
  6186  05FD  00AD               	movwf	((??_main+2)^(0+128)+1)
  6187  05FE  082A               	movf	??_main^(0+128),w
  6188  05FF  072C               	addwf	(??_main+2)^(0+128),w
  6189  0600  0086               	movwf	6
  6190  0601  082B               	movf	(??_main+1)^(0+128),w
  6191  0602  3D2D               	addwfc	(??_main+3)^(0+128),w
  6192  0603  0087               	movwf	7
  6193  0604  3F40               	moviw [0]fsr1
  6194  0605  0022               	movlb	2	; select bank2
  6195  0606  00DA               	movwf	_mod_value^(0+256)
  6196  0607  3F41               	moviw [1]fsr1
  6197  0608  00DB               	movwf	(_mod_value+1)^(0+256)
  6198                           
  6199                           ;main.c: 358: adjusted_pot_value = 1275;
  6200  0609  30FB               	movlw	251
  6201  060A  0021               	movlb	1	; select bank1
  6202  060B  00B9               	movwf	main@adjusted_pot_value^(0+128)
  6203  060C  3004               	movlw	4
  6204  060D  00BA               	movwf	(main@adjusted_pot_value^(0+128)+1)
  6205                           
  6206                           ;main.c: 359: PORTCbits.RC4 = 1;
  6207  060E  0020               	movlb	0	; select bank0
  6208  060F  160E               	bsf	14,4	;volatile
  6209                           
  6210                           ;main.c: 360: break;
  6211  0610  2E31               	goto	l4316
  6212  0611                     l4308:	
  6213                           ;main.c: 361: case 6:
  6214                           
  6215                           
  6216                           ;main.c: 362: mod_value = 0;
  6217  0611  0022               	movlb	2	; select bank2
  6218  0612  01DA               	clrf	_mod_value^(0+256)
  6219  0613  01DB               	clrf	(_mod_value+1)^(0+256)
  6220  0614                     l4310:	
  6221                           
  6222                           ;main.c: 363: PORTCbits.RC4 = 0;
  6223  0614  0020               	movlb	0	; select bank0
  6224  0615  120E               	bcf	14,4	;volatile
  6225                           
  6226                           ;main.c: 365: }
  6227                           
  6228                           ;main.c: 364: break;
  6229  0616  2E31               	goto	l4316
  6230  0617                     l4314:	
  6231                           
  6232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6233                           ; Switch size 1, requested type "space"
  6234                           ; Number of cases is 1, Range of values is 0 to 0
  6235                           ; switch strategies available:
  6236                           ; Name         Instructions Cycles
  6237                           ; simple_byte            4     3 (average)
  6238                           ; direct_byte            8     6 (fixed)
  6239                           ; jumptable            260     6 (fixed)
  6240                           ;	Chosen strategy is simple_byte
  6241  0617  0021               	movlb	1	; select bank1
  6242  0618  0848               	movf	(_bottom_push_state+1)^(0+128),w
  6243  0619  3A00               	xorlw	0	; case 0
  6244  061A  1903               	skipnz
  6245  061B  2E1D               	goto	l4592
  6246  061C  2E31               	goto	l4316
  6247  061D                     l4592:	
  6248                           
  6249                           ; Switch size 1, requested type "space"
  6250                           ; Number of cases is 6, Range of values is 1 to 6
  6251                           ; switch strategies available:
  6252                           ; Name         Instructions Cycles
  6253                           ; simple_byte           19    10 (average)
  6254                           ; direct_byte           21     9 (fixed)
  6255                           ; jumptable            263     9 (fixed)
  6256                           ;	Chosen strategy is simple_byte
  6257  061D  0847               	movf	_bottom_push_state^(0+128),w
  6258  061E  3A01               	xorlw	1	; case 1
  6259  061F  1903               	skipnz
  6260  0620  2DBC               	goto	l4286
  6261  0621  3A03               	xorlw	3	; case 2
  6262  0622  1903               	skipnz
  6263  0623  2DD1               	goto	l4290
  6264  0624  3A01               	xorlw	1	; case 3
  6265  0625  1903               	skipnz
  6266  0626  2DDC               	goto	l4294
  6267  0627  3A07               	xorlw	7	; case 4
  6268  0628  1903               	skipnz
  6269  0629  2DE7               	goto	l4298
  6270  062A  3A01               	xorlw	1	; case 5
  6271  062B  1903               	skipnz
  6272  062C  2DF3               	goto	l4302
  6273  062D  3A03               	xorlw	3	; case 6
  6274  062E  1903               	skipnz
  6275  062F  2E11               	goto	l4308
  6276  0630  2E31               	goto	l4316
  6277  0631                     l4316:	
  6278                           
  6279                           ;main.c: 366: mod_value = modulation(mod_value, adjusted_pot_value);
  6280  0631  0022               	movlb	2	; select bank2
  6281  0632  085B               	movf	(_mod_value+1)^(0+256),w
  6282  0633  0020               	movlb	0	; select bank0
  6283  0634  00B6               	movwf	modulation@x+1
  6284  0635  0022               	movlb	2	; select bank2
  6285  0636  085A               	movf	_mod_value^(0+256),w
  6286  0637  0020               	movlb	0	; select bank0
  6287  0638  00B5               	movwf	modulation@x
  6288  0639  0021               	movlb	1	; select bank1
  6289  063A  083A               	movf	(main@adjusted_pot_value+1)^(0+128),w
  6290  063B  0020               	movlb	0	; select bank0
  6291  063C  00B8               	movwf	modulation@y+1
  6292  063D  0021               	movlb	1	; select bank1
  6293  063E  0839               	movf	main@adjusted_pot_value^(0+128),w
  6294  063F  0020               	movlb	0	; select bank0
  6295  0640  00B7               	movwf	modulation@y
  6296  0641  3192  2295  3182   	fcall	_modulation
  6297  0644  0020               	movlb	0	; select bank0
  6298  0645  0836               	movf	?_modulation+1,w
  6299  0646  0022               	movlb	2	; select bank2
  6300  0647  00DB               	movwf	(_mod_value+1)^(0+256)
  6301  0648  0020               	movlb	0	; select bank0
  6302  0649  0835               	movf	?_modulation,w
  6303  064A  0022               	movlb	2	; select bank2
  6304  064B  00DA               	movwf	_mod_value^(0+256)
  6305                           
  6306                           ;main.c: 367: CCPR9 = mod_value / 2;
  6307  064C  3002               	movlw	2
  6308  064D  0020               	movlb	0	; select bank0
  6309  064E  00A0               	movwf	___awdiv@divisor
  6310  064F  3000               	movlw	0
  6311  0650  00A1               	movwf	___awdiv@divisor+1
  6312  0651  0022               	movlb	2	; select bank2
  6313  0652  085B               	movf	(_mod_value+1)^(0+256),w
  6314  0653  0020               	movlb	0	; select bank0
  6315  0654  00A3               	movwf	___awdiv@dividend+1
  6316  0655  0022               	movlb	2	; select bank2
  6317  0656  085A               	movf	_mod_value^(0+256),w
  6318  0657  0020               	movlb	0	; select bank0
  6319  0658  00A2               	movwf	___awdiv@dividend
  6320  0659  3194  24DA  3182   	fcall	___awdiv
  6321  065C  0020               	movlb	0	; select bank0
  6322  065D  0821               	movf	?___awdiv+1,w
  6323  065E  002C               	movlb	12	; select bank12
  6324  065F  009B               	movwf	27	;volatile
  6325  0660  0020               	movlb	0	; select bank0
  6326  0661  0820               	movf	?___awdiv,w
  6327  0662  002C               	movlb	12	; select bank12
  6328  0663  009A               	movwf	26	;volatile
  6329                           
  6330                           ;main.c: 368: mod_timer = 0;
  6331  0664  3000               	movlw	0
  6332  0665  0022               	movlb	2	; select bank2
  6333  0666  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
  6334  0667  3000               	movlw	0
  6335  0668  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
  6336  0669  3000               	movlw	0
  6337  066A  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
  6338  066B  3000               	movlw	0
  6339  066C  00B8               	movwf	_mod_timer^(0+256)	;volatile
  6340  066D                     l4320:	
  6341                           
  6342                           ;main.c: 369: }
  6343                           ;main.c: 374: if (delay_time_changed == 1) {
  6344  066D  0365               	decf	_delay_time_changed^(0+256),w
  6345  066E  0466               	iorwf	(_delay_time_changed+1)^(0+256),w
  6346  066F  1D03               	btfss	3,2
  6347  0670  2A28               	goto	l4184
  6348                           
  6349                           ;main.c: 375: delay_time = baseline_delay_time;
  6350  0671  0021               	movlb	1	; select bank1
  6351  0672  0842               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
  6352  0673  00C6               	movwf	(_delay_time+3)^(0+128)	;volatile
  6353  0674  0841               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
  6354  0675  00C5               	movwf	(_delay_time+2)^(0+128)	;volatile
  6355  0676  0840               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6356  0677  00C4               	movwf	(_delay_time+1)^(0+128)	;volatile
  6357  0678  083F               	movf	_baseline_delay_time^(0+128),w	;volatile
  6358  0679  00C3               	movwf	_delay_time^(0+128)	;volatile
  6359                           
  6360                           ;main.c: 376: delay_time = set_subdivision(baseline_delay_time, top_push_state);
  6361  067A  0840               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
  6362  067B  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  6363  067C  083F               	movf	_baseline_delay_time^(0+128),w	;volatile
  6364  067D  00A6               	movwf	set_subdivision@x^(0+128)
  6365  067E  0856               	movf	(_top_push_state+1)^(0+128),w
  6366  067F  00A9               	movwf	(set_subdivision@y+1)^(0+128)
  6367  0680  0855               	movf	_top_push_state^(0+128),w
  6368  0681  00A8               	movwf	set_subdivision@y^(0+128)
  6369  0682  318A  22C2  3182   	fcall	_set_subdivision
  6370  0685  0021               	movlb	1	; select bank1
  6371  0686  0826               	movf	?_set_subdivision^(0+128),w
  6372  0687  00C3               	movwf	_delay_time^(0+128)	;volatile
  6373  0688  0827               	movf	(?_set_subdivision+1)^(0+128),w
  6374  0689  00C4               	movwf	(_delay_time+1)^(0+128)	;volatile
  6375  068A  0D89               	rlf	9,f
  6376  068B  3B89               	subwfb	9,f
  6377  068C  0989               	comf	9,f
  6378  068D  00C5               	movwf	(_delay_time+2)^(0+128)	;volatile
  6379  068E  00C6               	movwf	(_delay_time+3)^(0+128)	;volatile
  6380                           
  6381                           ;main.c: 377: delayfound = 0;
  6382  068F  0022               	movlb	2	; select bank2
  6383  0690  01CC               	clrf	_delayfound^(0+256)
  6384  0691  01CD               	clrf	(_delayfound+1)^(0+256)
  6385                           
  6386                           ;main.c: 378: delay_counter = 0;
  6387  0692  01CA               	clrf	_delay_counter^(0+256)
  6388  0693  01CB               	clrf	(_delay_counter+1)^(0+256)
  6389  0694                     l4336:	
  6390                           ;main.c: 379: while (delayfound == 0) {
  6391                           
  6392  0694  0022               	movlb	2	; select bank2
  6393  0695  084C               	movf	_delayfound^(0+256),w
  6394  0696  044D               	iorwf	(_delayfound+1)^(0+256),w
  6395  0697  1D03               	btfss	3,2
  6396  0698  2EEF               	goto	l4338
  6397                           
  6398                           ;main.c: 380: if (delay[delay_counter] <= delay_time * 2) {
  6399  0699  084B               	movf	(_delay_counter+1)^(0+256),w
  6400  069A  0021               	movlb	1	; select bank1
  6401  069B  00AB               	movwf	(??_main^(0+128)+1)
  6402  069C  0022               	movlb	2	; select bank2
  6403  069D  084A               	movf	_delay_counter^(0+256),w
  6404  069E  0021               	movlb	1	; select bank1
  6405  069F  00AA               	movwf	??_main^(0+128)
  6406  06A0  35AA               	lslf	??_main^(0+128),f
  6407  06A1  0DAB               	rlf	(??_main^(0+128)+1),f
  6408  06A2  30F2               	movlw	242
  6409  06A3  00AC               	movwf	(??_main+2)^(0+128)
  6410  06A4  3023               	movlw	35
  6411  06A5  00AD               	movwf	((??_main+2)^(0+128)+1)
  6412  06A6  082A               	movf	??_main^(0+128),w
  6413  06A7  072C               	addwf	(??_main+2)^(0+128),w
  6414  06A8  0086               	movwf	6
  6415  06A9  082B               	movf	(??_main+1)^(0+128),w
  6416  06AA  3D2D               	addwfc	(??_main+3)^(0+128),w
  6417  06AB  0087               	movwf	7
  6418  06AC  3F40               	moviw [0]fsr1
  6419  06AD  00AE               	movwf	(??_main+4)^(0+128)
  6420  06AE  3F41               	moviw [1]fsr1
  6421  06AF  00AF               	movwf	((??_main+4)^(0+128)+1)
  6422  06B0  082E               	movf	(??_main+4)^(0+128),w
  6423  06B1  00B0               	movwf	(??_main+6)^(0+128)
  6424  06B2  082F               	movf	(??_main+5)^(0+128),w
  6425  06B3  00B1               	movwf	((??_main+6)^(0+128)+1)
  6426  06B4  3000               	movlw	0
  6427  06B5  1BB1               	btfsc	((??_main+6)^(0+128)+1),7
  6428  06B6  30FF               	movlw	255
  6429  06B7  00B2               	movwf	((??_main+6)^(0+128)+2)
  6430  06B8  00B3               	movwf	((??_main+6)^(0+128)+3)
  6431  06B9  0843               	movf	_delay_time^(0+128),w	;volatile
  6432  06BA  00B4               	movwf	(??_main+10)^(0+128)
  6433  06BB  0844               	movf	(_delay_time+1)^(0+128),w	;volatile
  6434  06BC  00B5               	movwf	((??_main+10)^(0+128)+1)
  6435  06BD  0845               	movf	(_delay_time+2)^(0+128),w	;volatile
  6436  06BE  00B6               	movwf	((??_main+10)^(0+128)+2)
  6437  06BF  0846               	movf	(_delay_time+3)^(0+128),w	;volatile
  6438  06C0  00B7               	movwf	((??_main+10)^(0+128)+3)
  6439  06C1  3001               	movlw	1
  6440  06C2                     u4355:	
  6441  06C2  35B4               	lslf	(??_main+10)^(0+128),f
  6442  06C3  0DB5               	rlf	((??_main+10)^(0+128)+1),f
  6443  06C4  0DB6               	rlf	((??_main+10)^(0+128)+2),f
  6444  06C5  0DB7               	rlf	((??_main+10)^(0+128)+3),f
  6445  06C6  0B89               	decfsz	9,f
  6446  06C7  2EC2               	goto	u4355
  6447  06C8  0837               	movf	(??_main+13)^(0+128),w
  6448  06C9  3A80               	xorlw	128
  6449  06CA  00B8               	movwf	(??_main+14)^(0+128)
  6450  06CB  0833               	movf	(??_main+9)^(0+128),w
  6451  06CC  3A80               	xorlw	128
  6452  06CD  0238               	subwf	(??_main+14)^(0+128),w
  6453  06CE  1D03               	skipz
  6454  06CF  2EDA               	goto	u4363
  6455  06D0  0832               	movf	(??_main+8)^(0+128),w
  6456  06D1  0236               	subwf	(??_main+12)^(0+128),w
  6457  06D2  1D03               	skipz
  6458  06D3  2EDA               	goto	u4363
  6459  06D4  0831               	movf	(??_main+7)^(0+128),w
  6460  06D5  0235               	subwf	(??_main+11)^(0+128),w
  6461  06D6  1D03               	skipz
  6462  06D7  2EDA               	goto	u4363
  6463  06D8  0830               	movf	(??_main+6)^(0+128),w
  6464  06D9  0234               	subwf	(??_main+10)^(0+128),w
  6465  06DA                     u4363:	
  6466  06DA  1C03               	skipc
  6467  06DB  2EE9               	goto	l4334
  6468                           
  6469                           ;main.c: 381: delayfound = 1;
  6470  06DC  3001               	movlw	1
  6471  06DD  0022               	movlb	2	; select bank2
  6472  06DE  00CC               	movwf	_delayfound^(0+256)
  6473  06DF  3000               	movlw	0
  6474  06E0  00CD               	movwf	(_delayfound^(0+256)+1)
  6475                           
  6476                           ;main.c: 382: CCPR1 = delay_counter;
  6477  06E1  084B               	movf	(_delay_counter+1)^(0+256),w
  6478  06E2  0025               	movlb	5	; select bank5
  6479  06E3  0092               	movwf	18	;volatile
  6480  06E4  0022               	movlb	2	; select bank2
  6481  06E5  084A               	movf	_delay_counter^(0+256),w
  6482  06E6  0025               	movlb	5	; select bank5
  6483  06E7  0091               	movwf	17	;volatile
  6484                           
  6485                           ;main.c: 383: } else {
  6486  06E8  2E94               	goto	l4336
  6487  06E9                     l4334:	
  6488                           
  6489                           ;main.c: 384: delay_counter++;
  6490  06E9  3001               	movlw	1
  6491  06EA  0022               	movlb	2	; select bank2
  6492  06EB  07CA               	addwf	_delay_counter^(0+256),f
  6493  06EC  3000               	movlw	0
  6494  06ED  3DCB               	addwfc	(_delay_counter+1)^(0+256),f
  6495  06EE  2E94               	goto	l4336
  6496  06EF                     l4338:	
  6497                           
  6498                           ;main.c: 385: }
  6499                           ;main.c: 386: }
  6500                           ;main.c: 387: mod_delay_time = delay_time / 7.5;
  6501  06EF  0021               	movlb	1	; select bank1
  6502  06F0  0846               	movf	(_delay_time+3)^(0+128),w	;volatile
  6503  06F1  0020               	movlb	0	; select bank0
  6504  06F2  00AB               	movwf	___altoft@c+3
  6505  06F3  0021               	movlb	1	; select bank1
  6506  06F4  0845               	movf	(_delay_time+2)^(0+128),w	;volatile
  6507  06F5  0020               	movlb	0	; select bank0
  6508  06F6  00AA               	movwf	___altoft@c+2
  6509  06F7  0021               	movlb	1	; select bank1
  6510  06F8  0844               	movf	(_delay_time+1)^(0+128),w	;volatile
  6511  06F9  0020               	movlb	0	; select bank0
  6512  06FA  00A9               	movwf	___altoft@c+1
  6513  06FB  0021               	movlb	1	; select bank1
  6514  06FC  0843               	movf	_delay_time^(0+128),w	;volatile
  6515  06FD  0020               	movlb	0	; select bank0
  6516  06FE  00A8               	movwf	___altoft@c
  6517  06FF  3192  2258  3182   	fcall	___altoft
  6518  0702  0020               	movlb	0	; select bank0
  6519  0703  0828               	movf	?___altoft,w
  6520  0704  00C8               	movwf	___ftdiv@f1
  6521  0705  0829               	movf	?___altoft+1,w
  6522  0706  00C9               	movwf	___ftdiv@f1+1
  6523  0707  082A               	movf	?___altoft+2,w
  6524  0708  00CA               	movwf	___ftdiv@f1+2
  6525  0709  3000               	movlw	0
  6526  070A  00C5               	movwf	___ftdiv@f2
  6527  070B  30F0               	movlw	240
  6528  070C  00C6               	movwf	___ftdiv@f2+1
  6529  070D  3040               	movlw	64
  6530  070E  00C7               	movwf	___ftdiv@f2+2
  6531  070F  3188  2041  3182   	fcall	___ftdiv
  6532  0712  0020               	movlb	0	; select bank0
  6533  0713  0845               	movf	?___ftdiv,w
  6534  0714  00E7               	movwf	___fttol@f1
  6535  0715  0846               	movf	?___ftdiv+1,w
  6536  0716  00E8               	movwf	___fttol@f1+1
  6537  0717  0847               	movf	?___ftdiv+2,w
  6538  0718  00E9               	movwf	___fttol@f1+2
  6539  0719  3197  2761  3182   	fcall	___fttol
  6540  071C  0020               	movlb	0	; select bank0
  6541  071D  0868               	movf	?___fttol+1,w
  6542  071E  0022               	movlb	2	; select bank2
  6543  071F  00E8               	movwf	(_mod_delay_time+1)^(0+256)
  6544  0720  0020               	movlb	0	; select bank0
  6545  0721  0867               	movf	?___fttol,w
  6546  0722  0022               	movlb	2	; select bank2
  6547  0723  00E7               	movwf	_mod_delay_time^(0+256)
  6548                           
  6549                           ;main.c: 389: delay_time_changed = 0;
  6550  0724  01E5               	clrf	_delay_time_changed^(0+256)
  6551  0725  01E6               	clrf	(_delay_time_changed+1)^(0+256)
  6552  0726  2A28               	goto	l4184
  6553  0727                     __end_of_main:	
  6554                           
  6555                           	psect	text1
  6556  1313                     __ptext1:	
  6557 ;; *************** function _update_mode *****************
  6558 ;; Defined at:
  6559 ;;		line 58 in file "tactiles.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;		None
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      void 
  6566 ;; Registers used:
  6567 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6575 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6576 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6577 ;;Total ram usage:        1 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:    2
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_main
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           
  6588                           ;psect for function _update_mode
  6589  1313                     _update_mode:	
  6590                           
  6591                           ;tactiles.c: 63: if (PORTCbits.RC0 == 0) {
  6592                           
  6593                           ;incstack = 0
  6594                           ; Regs used in _update_mode: [wreg-fsr0h+status,2+status,0]
  6595  1313  0020               	movlb	0	; select bank0
  6596  1314  180E               	btfsc	14,0	;volatile
  6597  1315  2B54               	goto	l3760
  6598                           
  6599                           ;tactiles.c: 64: debounce_mode2++;
  6600  1316  3001               	movlw	1
  6601  1317  0022               	movlb	2	; select bank2
  6602  1318  07C8               	addwf	_debounce_mode2^(0+256),f
  6603  1319  3000               	movlw	0
  6604  131A  3DC9               	addwfc	(_debounce_mode2+1)^(0+256),f
  6605                           
  6606                           ;tactiles.c: 65: if (debounce_mode2 > 25) {
  6607  131B  0849               	movf	(_debounce_mode2+1)^(0+256),w
  6608  131C  3A80               	xorlw	128
  6609  131D  0020               	movlb	0	; select bank0
  6610  131E  00A0               	movwf	??_update_mode
  6611  131F  3080               	movlw	128
  6612  1320  0220               	subwf	??_update_mode,w
  6613  1321  1D03               	skipz
  6614  1322  2B26               	goto	u3385
  6615  1323  301A               	movlw	26
  6616  1324  0022               	movlb	2	; select bank2
  6617  1325  0248               	subwf	_debounce_mode2^(0+256),w
  6618  1326                     u3385:	
  6619  1326  1C03               	skipc
  6620  1327  0008               	return
  6621                           
  6622                           ;tactiles.c: 66: debounce_mode2 = 25;
  6623  1328  3019               	movlw	25
  6624  1329  0022               	movlb	2	; select bank2
  6625  132A  00C8               	movwf	_debounce_mode2^(0+256)
  6626  132B  3000               	movlw	0
  6627  132C  00C9               	movwf	(_debounce_mode2^(0+256)+1)
  6628                           
  6629                           ;tactiles.c: 67: mode2_state++;
  6630  132D  3001               	movlw	1
  6631  132E  0020               	movlb	0	; select bank0
  6632  132F  00A0               	movwf	??_update_mode
  6633  1330  0820               	movf	??_update_mode,w
  6634  1331  0021               	movlb	1	; select bank1
  6635  1332  07EB               	addwf	_mode2_state^(0+128),f
  6636                           
  6637                           ;tactiles.c: 68: if (mode2_state > 2) {
  6638  1333  3003               	movlw	3
  6639  1334  026B               	subwf	_mode2_state^(0+128),w
  6640  1335  1C03               	skipc
  6641  1336  2B44               	goto	l3758
  6642                           
  6643                           ;tactiles.c: 69: mode2_state = 0;
  6644  1337  01EB               	clrf	_mode2_state^(0+128)
  6645                           
  6646                           ;tactiles.c: 70: }
  6647                           ;tactiles.c: 71: switch(mode2_state) {
  6648  1338  2B44               	goto	l3758
  6649  1339                     l809:	
  6650                           ;tactiles.c: 72: case 0:
  6651                           
  6652                           
  6653                           ;tactiles.c: 73: LATBbits.LATB1 = 0;
  6654  1339  0022               	movlb	2	; select bank2
  6655  133A  108D               	bcf	13,1	;volatile
  6656  133B  2B42               	goto	L5
  6657  133C                     l811:	
  6658                           ;tactiles.c: 76: case 1:
  6659                           
  6660                           ;tactiles.c: 75: break;
  6661                           
  6662                           ;tactiles.c: 74: LATBbits.LATB0 = 0;
  6663                           
  6664                           
  6665                           ;tactiles.c: 77: LATBbits.LATB1 = 0;
  6666  133C  0022               	movlb	2	; select bank2
  6667  133D  108D               	bcf	13,1	;volatile
  6668                           
  6669                           ;tactiles.c: 78: LATBbits.LATB0 = 1;
  6670  133E  140D               	bsf	13,0	;volatile
  6671                           
  6672                           ;tactiles.c: 79: break;
  6673  133F  2B50               	goto	l813
  6674  1340                     l812:	
  6675                           ;tactiles.c: 80: case 2:
  6676                           
  6677                           
  6678                           ;tactiles.c: 81: LATBbits.LATB1 = 1;
  6679  1340  0022               	movlb	2	; select bank2
  6680  1341  148D               	bsf	13,1	;volatile
  6681  1342                     L5:	
  6682                           
  6683                           ;tactiles.c: 82: LATBbits.LATB0 = 0;
  6684  1342  100D               	bcf	13,0	;volatile
  6685                           
  6686                           ;tactiles.c: 84: }
  6687                           
  6688                           ;tactiles.c: 83: break;
  6689  1343  2B50               	goto	l813
  6690  1344                     l3758:	
  6691  1344  0021               	movlb	1	; select bank1
  6692  1345  086B               	movf	_mode2_state^(0+128),w
  6693                           
  6694                           ; Switch size 1, requested type "space"
  6695                           ; Number of cases is 3, Range of values is 0 to 2
  6696                           ; switch strategies available:
  6697                           ; Name         Instructions Cycles
  6698                           ; simple_byte           10     6 (average)
  6699                           ; direct_byte           12     6 (fixed)
  6700                           ; jumptable            260     6 (fixed)
  6701                           ;	Chosen strategy is simple_byte
  6702  1346  3A00               	xorlw	0	; case 0
  6703  1347  1903               	skipnz
  6704  1348  2B39               	goto	l809
  6705  1349  3A01               	xorlw	1	; case 1
  6706  134A  1903               	skipnz
  6707  134B  2B3C               	goto	l811
  6708  134C  3A03               	xorlw	3	; case 2
  6709  134D  1903               	skipnz
  6710  134E  2B40               	goto	l812
  6711  134F  2B50               	goto	l813
  6712  1350                     l813:	
  6713                           ;tactiles.c: 85: while (PORTCbits.RC0 == 0) {
  6714                           
  6715  1350  0020               	movlb	0	; select bank0
  6716  1351  180E               	btfsc	14,0	;volatile
  6717  1352  0008               	return
  6718  1353  2B50               	goto	l813
  6719  1354                     l3760:	
  6720                           ;tactiles.c: 86: }
  6721                           ;tactiles.c: 87: }
  6722                           ;tactiles.c: 88: } else {
  6723                           
  6724                           
  6725                           ;tactiles.c: 89: debounce_mode2 = 0;
  6726  1354  0022               	movlb	2	; select bank2
  6727  1355  01C8               	clrf	_debounce_mode2^(0+256)
  6728  1356  01C9               	clrf	(_debounce_mode2+1)^(0+256)
  6729  1357  0008               	return
  6730  1358                     __end_of_update_mode:	
  6731                           
  6732                           	psect	text2
  6733  0BBB                     __ptext2:	
  6734 ;; *************** function _updateSwitchTap *****************
  6735 ;; Defined at:
  6736 ;;		line 48 in file "SwitchTap.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;		None
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  tapCntDiviso    2   28[BANK0 ] int 
  6741 ;;  iCnt            1   30[BANK0 ] unsigned char 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  1    wreg      void 
  6744 ;; Registers used:
  6745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6752 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6753 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6754 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6755 ;;Total ram usage:        9 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:    5
  6758 ;; This function calls:
  6759 ;;		___aldiv
  6760 ;;		_setDoublePressState
  6761 ;;		_setLongTapState
  6762 ;; This function is called by:
  6763 ;;		_main
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           
  6768                           ;psect for function _updateSwitchTap
  6769  0BBB                     _updateSwitchTap:	
  6770                           
  6771                           ;SwitchTap.c: 49: uint8_t iCnt = 0;
  6772                           
  6773                           ;incstack = 0
  6774                           ; Regs used in _updateSwitchTap: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6775  0BBB  0020               	movlb	0	; select bank0
  6776  0BBC  01BE               	clrf	updateSwitchTap@iCnt
  6777                           
  6778                           ;SwitchTap.c: 57: if (PORTEbits.RE0 == 0) {
  6779  0BBD  1810               	btfsc	16,0	;volatile
  6780  0BBE  2BC6               	goto	l3888
  6781                           
  6782                           ;SwitchTap.c: 58: if (switchTap_pressed > 0) {
  6783  0BBF  0021               	movlb	1	; select bank1
  6784  0BC0  086F               	movf	_switchTap_pressed^(0+128),w
  6785  0BC1  1903               	btfsc	3,2
  6786  0BC2  2BD1               	goto	l1124
  6787                           
  6788                           ;SwitchTap.c: 59: switchTap_pressed--;
  6789  0BC3  3001               	movlw	1
  6790  0BC4  02EF               	subwf	_switchTap_pressed^(0+128),f
  6791                           
  6792                           ;SwitchTap.c: 60: }
  6793                           ;SwitchTap.c: 61: } else if (switchTap_pressed < 25) {
  6794  0BC5  2BD1               	goto	l1124
  6795  0BC6                     l3888:	
  6796  0BC6  3019               	movlw	25
  6797  0BC7  0021               	movlb	1	; select bank1
  6798  0BC8  026F               	subwf	_switchTap_pressed^(0+128),w
  6799  0BC9  1803               	skipnc
  6800  0BCA  2BD1               	goto	l1124
  6801                           
  6802                           ;SwitchTap.c: 62: switchTap_pressed++;
  6803  0BCB  3001               	movlw	1
  6804  0BCC  0020               	movlb	0	; select bank0
  6805  0BCD  00B6               	movwf	??_updateSwitchTap
  6806  0BCE  0836               	movf	??_updateSwitchTap,w
  6807  0BCF  0021               	movlb	1	; select bank1
  6808  0BD0  07EF               	addwf	_switchTap_pressed^(0+128),f
  6809  0BD1                     l1124:	
  6810                           
  6811                           ;SwitchTap.c: 63: }
  6812                           ;SwitchTap.c: 69: if (switchTap_pressed == 0) {
  6813  0BD1  086F               	movf	_switchTap_pressed^(0+128),w
  6814  0BD2  1D03               	btfss	3,2
  6815  0BD3  2D6D               	goto	l3970
  6816                           
  6817                           ;SwitchTap.c: 73: if (tap_timer >= 1563) {
  6818  0BD4  1BFC               	btfsc	_tap_timer+3,7	;volatile
  6819  0BD5  2C51               	goto	l3930
  6820  0BD6  087C               	movf	_tap_timer+3,w	;volatile
  6821  0BD7  1D03               	btfss	3,2
  6822  0BD8  2BE2               	goto	l3894
  6823  0BD9  087B               	movf	_tap_timer+2,w	;volatile
  6824  0BDA  1D03               	btfss	3,2
  6825  0BDB  2BE2               	goto	l3894
  6826  0BDC  301B               	movlw	27
  6827  0BDD  0279               	subwf	_tap_timer,w	;volatile
  6828  0BDE  3006               	movlw	6
  6829  0BDF  3B7A               	subwfb	_tap_timer+1,w	;volatile
  6830  0BE0  1C03               	btfss	3,0
  6831  0BE1  2C51               	goto	l3930
  6832  0BE2                     l3894:	
  6833                           
  6834                           ;SwitchTap.c: 76: switchTap_down = 1;
  6835  0BE2  0022               	movlb	2	; select bank2
  6836  0BE3  01E2               	clrf	_switchTap_down^(0+256)
  6837  0BE4  0AE2               	incf	_switchTap_down^(0+256),f
  6838                           
  6839                           ;SwitchTap.c: 77: tap_timer = 0;
  6840  0BE5  3000               	movlw	0
  6841  0BE6  00FC               	movwf	_tap_timer+3	;volatile
  6842  0BE7  3000               	movlw	0
  6843  0BE8  00FB               	movwf	_tap_timer+2	;volatile
  6844  0BE9  3000               	movlw	0
  6845  0BEA  00FA               	movwf	_tap_timer+1	;volatile
  6846  0BEB  3000               	movlw	0
  6847  0BEC  00F9               	movwf	_tap_timer	;volatile
  6848                           
  6849                           ;SwitchTap.c: 78: tap_iteration = 1;
  6850  0BED  3001               	movlw	1
  6851  0BEE  00EB               	movwf	_tap_iteration^(0+256)
  6852  0BEF  3000               	movlw	0
  6853  0BF0  00EC               	movwf	(_tap_iteration^(0+256)+1)
  6854                           
  6855                           ;SwitchTap.c: 79: tap_total = 0;
  6856  0BF1  3000               	movlw	0
  6857  0BF2  00BF               	movwf	(_tap_total+3)^(0+256)
  6858  0BF3  3000               	movlw	0
  6859  0BF4  00BE               	movwf	(_tap_total+2)^(0+256)
  6860  0BF5  3000               	movlw	0
  6861  0BF6  00BD               	movwf	(_tap_total+1)^(0+256)
  6862  0BF7  3000               	movlw	0
  6863  0BF8  00BC               	movwf	_tap_total^(0+256)
  6864                           
  6865                           ;SwitchTap.c: 80: delay_time_changed = 0;
  6866  0BF9  01E5               	clrf	_delay_time_changed^(0+256)
  6867  0BFA  01E6               	clrf	(_delay_time_changed+1)^(0+256)
  6868                           
  6869                           ;SwitchTap.c: 81: LATDbits.LATD0 = 0;
  6870  0BFB  100F               	bcf	15,0	;volatile
  6871                           
  6872                           ;SwitchTap.c: 83: for (iCnt = 1; iCnt <= num_taps; iCnt++) {
  6873  0BFC  0020               	movlb	0	; select bank0
  6874  0BFD  01BE               	clrf	updateSwitchTap@iCnt
  6875  0BFE  0ABE               	incf	updateSwitchTap@iCnt,f
  6876  0BFF                     l3908:	
  6877  0BFF  083E               	movf	updateSwitchTap@iCnt,w
  6878  0C00  0021               	movlb	1	; select bank1
  6879  0C01  0259               	subwf	_num_taps^(0+128),w
  6880  0C02  1C03               	btfss	3,0
  6881  0C03  2C1C               	goto	l3910
  6882                           
  6883                           ;SwitchTap.c: 84: tap_history[iCnt] = 0;
  6884  0C04  0020               	movlb	0	; select bank0
  6885  0C05  083E               	movf	updateSwitchTap@iCnt,w
  6886  0C06  00B6               	movwf	??_updateSwitchTap
  6887  0C07  3001               	movlw	1
  6888  0C08                     u3675:	
  6889  0C08  35B6               	lslf	??_updateSwitchTap,f
  6890  0C09  3EFF               	addlw	-1
  6891  0C0A  1D03               	skipz
  6892  0C0B  2C08               	goto	u3675
  6893  0C0C  3536               	lslf	??_updateSwitchTap,w
  6894  0C0D  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  6895  0C0E  0086               	movwf	6
  6896  0C0F  3001               	movlw	1	; select bank2/3
  6897  0C10  0087               	movwf	7
  6898  0C11  3000               	movlw	0
  6899  0C12  3FC0               	movwi [0]fsr1
  6900  0C13  3000               	movlw	0
  6901  0C14  3FC1               	movwi [1]fsr1
  6902  0C15  3FC2               	movwi [2]fsr1
  6903  0C16  3FC3               	movwi [3]fsr1
  6904  0C17  3001               	movlw	1
  6905  0C18  00B6               	movwf	??_updateSwitchTap
  6906  0C19  0836               	movf	??_updateSwitchTap,w
  6907  0C1A  07BE               	addwf	updateSwitchTap@iCnt,f
  6908  0C1B  2BFF               	goto	l3908
  6909  0C1C                     l3910:	
  6910                           
  6911                           ;SwitchTap.c: 85: }
  6912                           ;SwitchTap.c: 88: if (longTap_start == 0) {
  6913  0C1C  086A               	movf	_longTap_start^(0+128),w
  6914  0C1D  1D03               	btfss	3,2
  6915  0C1E  2C25               	goto	l3916
  6916                           
  6917                           ;SwitchTap.c: 89: longTap_start = 1;
  6918  0C1F  01EA               	clrf	_longTap_start^(0+128)
  6919  0C20  0AEA               	incf	_longTap_start^(0+128),f
  6920                           
  6921                           ;SwitchTap.c: 90: longTap_state = 0;
  6922  0C21  01D8               	clrf	_longTap_state^(0+128)	;volatile
  6923                           
  6924                           ;SwitchTap.c: 91: longTap_timer = 0;
  6925  0C22  0022               	movlb	2	; select bank2
  6926  0C23  01D8               	clrf	_longTap_timer^(0+256)	;volatile
  6927  0C24  01D9               	clrf	(_longTap_timer+1)^(0+256)	;volatile
  6928  0C25                     l3916:	
  6929                           
  6930                           ;SwitchTap.c: 92: }
  6931                           ;SwitchTap.c: 96: if (longTap_timer >= long_press_limit && longTap_state == 0) {
  6932  0C25  0021               	movlb	1	; select bank1
  6933  0C26  0854               	movf	(_long_press_limit+1)^(0+128),w
  6934  0C27  0022               	movlb	2	; select bank2
  6935  0C28  0259               	subwf	(_longTap_timer+1)^(0+256),w	;volatile
  6936  0C29  1D03               	skipz
  6937  0C2A  2C2F               	goto	u3705
  6938  0C2B  0021               	movlb	1	; select bank1
  6939  0C2C  0853               	movf	_long_press_limit^(0+128),w
  6940  0C2D  0022               	movlb	2	; select bank2
  6941  0C2E  0258               	subwf	_longTap_timer^(0+256),w	;volatile
  6942  0C2F                     u3705:	
  6943  0C2F  1C03               	skipc
  6944  0C30  0008               	return
  6945  0C31  0021               	movlb	1	; select bank1
  6946  0C32  0858               	movf	_longTap_state^(0+128),w	;volatile
  6947  0C33  1D03               	btfss	3,2
  6948  0C34  0008               	return
  6949                           
  6950                           ;SwitchTap.c: 98: longTap_timer = long_press_limit;
  6951  0C35  0854               	movf	(_long_press_limit+1)^(0+128),w
  6952  0C36  0022               	movlb	2	; select bank2
  6953  0C37  00D9               	movwf	(_longTap_timer+1)^(0+256)	;volatile
  6954  0C38  0021               	movlb	1	; select bank1
  6955  0C39  0853               	movf	_long_press_limit^(0+128),w
  6956  0C3A  0022               	movlb	2	; select bank2
  6957  0C3B  00D8               	movwf	_longTap_timer^(0+256)	;volatile
  6958                           
  6959                           ;SwitchTap.c: 99: LATBbits.LATB4 = 0;
  6960  0C3C  120D               	bcf	13,4	;volatile
  6961                           
  6962                           ;SwitchTap.c: 101: if (feedback_start != 1) {
  6963  0C3D  0021               	movlb	1	; select bank1
  6964  0C3E  0369               	decf	_feedback_start^(0+128),w
  6965  0C3F  1903               	btfsc	3,2
  6966  0C40  2C49               	goto	l3928
  6967                           
  6968                           ;SwitchTap.c: 102: setLongTapState(1);
  6969  0C41  3001               	movlw	1
  6970  0C42  0020               	movlb	0	; select bank0
  6971  0C43  00A0               	movwf	setLongTapState@f_state
  6972  0C44  3000               	movlw	0
  6973  0C45  00A1               	movwf	setLongTapState@f_state+1
  6974  0C46  319F  273C         	fcall	_setLongTapState
  6975                           
  6976                           ;SwitchTap.c: 103: } else {
  6977  0C48  0008               	return
  6978  0C49                     l3928:	
  6979                           
  6980                           ;SwitchTap.c: 104: setDoublePressState(1);
  6981  0C49  3001               	movlw	1
  6982  0C4A  0020               	movlb	0	; select bank0
  6983  0C4B  00B2               	movwf	setDoublePressState@f_state
  6984  0C4C  3000               	movlw	0
  6985  0C4D  00B3               	movwf	setDoublePressState@f_state+1
  6986  0C4E  3190  200B         	fcall	_setDoublePressState
  6987                           
  6988                           ;SwitchTap.c: 105: }
  6989                           ;SwitchTap.c: 106: }
  6990                           ;SwitchTap.c: 108: } else if (tap_timer < 1563 && longTap_state == 0 && switchTap_down !
      +                          = 1) {
  6991  0C50  0008               	return
  6992  0C51                     l3930:	
  6993  0C51  1BFC               	btfsc	_tap_timer+3,7	;volatile
  6994  0C52  2C5F               	goto	l3932
  6995  0C53  087C               	movf	_tap_timer+3,w	;volatile
  6996  0C54  1D03               	btfss	3,2
  6997  0C55  0008               	return
  6998  0C56  087B               	movf	_tap_timer+2,w	;volatile
  6999  0C57  1D03               	btfss	3,2
  7000  0C58  0008               	return
  7001  0C59  301B               	movlw	27
  7002  0C5A  0279               	subwf	_tap_timer,w	;volatile
  7003  0C5B  3006               	movlw	6
  7004  0C5C  3B7A               	subwfb	_tap_timer+1,w	;volatile
  7005  0C5D  1803               	btfsc	3,0
  7006  0C5E  0008               	return
  7007  0C5F                     l3932:	
  7008  0C5F  0021               	movlb	1	; select bank1
  7009  0C60  0858               	movf	_longTap_state^(0+128),w	;volatile
  7010  0C61  1D03               	btfss	3,2
  7011  0C62  0008               	return
  7012  0C63  0022               	movlb	2	; select bank2
  7013  0C64  0362               	decf	_switchTap_down^(0+256),w
  7014  0C65  1903               	btfsc	3,2
  7015  0C66  0008               	return
  7016                           
  7017                           ;SwitchTap.c: 110: switchTap_down = 1;
  7018  0C67  01E2               	clrf	_switchTap_down^(0+256)
  7019  0C68  0AE2               	incf	_switchTap_down^(0+256),f
  7020                           
  7021                           ;SwitchTap.c: 111: if (tap_timer >= 1563-10) {
  7022  0C69  1BFC               	btfsc	_tap_timer+3,7	;volatile
  7023  0C6A  2C7F               	goto	l1137
  7024  0C6B  087C               	movf	_tap_timer+3,w	;volatile
  7025  0C6C  1D03               	btfss	3,2
  7026  0C6D  2C77               	goto	l3940
  7027  0C6E  087B               	movf	_tap_timer+2,w	;volatile
  7028  0C6F  1D03               	btfss	3,2
  7029  0C70  2C77               	goto	l3940
  7030  0C71  3011               	movlw	17
  7031  0C72  0279               	subwf	_tap_timer,w	;volatile
  7032  0C73  3006               	movlw	6
  7033  0C74  3B7A               	subwfb	_tap_timer+1,w	;volatile
  7034  0C75  1C03               	btfss	3,0
  7035  0C76  2C7F               	goto	l1137
  7036  0C77                     l3940:	
  7037                           
  7038                           ;SwitchTap.c: 112: tap_timer = 1563-10;
  7039  0C77  3000               	movlw	0
  7040  0C78  00FC               	movwf	_tap_timer+3	;volatile
  7041  0C79  3000               	movlw	0
  7042  0C7A  00FB               	movwf	_tap_timer+2	;volatile
  7043  0C7B  3006               	movlw	6
  7044  0C7C  00FA               	movwf	_tap_timer+1	;volatile
  7045  0C7D  3011               	movlw	17
  7046  0C7E  00F9               	movwf	_tap_timer	;volatile
  7047  0C7F                     l1137:	
  7048                           
  7049                           ;SwitchTap.c: 113: }
  7050                           ;SwitchTap.c: 115: int tapCntDivisor = num_taps;
  7051  0C7F  0021               	movlb	1	; select bank1
  7052  0C80  0859               	movf	_num_taps^(0+128),w
  7053  0C81  0020               	movlb	0	; select bank0
  7054  0C82  00B6               	movwf	??_updateSwitchTap
  7055  0C83  01B7               	clrf	??_updateSwitchTap+1
  7056  0C84  0836               	movf	??_updateSwitchTap,w
  7057  0C85  00BC               	movwf	updateSwitchTap@tapCntDivisor
  7058  0C86  0837               	movf	??_updateSwitchTap+1,w
  7059  0C87  00BD               	movwf	updateSwitchTap@tapCntDivisor+1
  7060                           
  7061                           ;SwitchTap.c: 116: if (tap_iteration <= num_taps) {
  7062  0C88  0022               	movlb	2	; select bank2
  7063  0C89  086C               	movf	(_tap_iteration+1)^(0+256),w
  7064  0C8A  3A80               	xorlw	128
  7065  0C8B  3C80               	sublw	128
  7066  0C8C  1D03               	skipz
  7067  0C8D  2C91               	goto	u3775
  7068  0C8E  086B               	movf	_tap_iteration^(0+256),w
  7069  0C8F  0021               	movlb	1	; select bank1
  7070  0C90  0259               	subwf	_num_taps^(0+128),w
  7071  0C91                     u3775:	
  7072  0C91  1C03               	skipc
  7073  0C92  2CBA               	goto	l3948
  7074                           
  7075                           ;SwitchTap.c: 117: tap_total += tap_timer;
  7076  0C93  0879               	movf	_tap_timer,w	;volatile
  7077  0C94  0022               	movlb	2	; select bank2
  7078  0C95  07BC               	addwf	_tap_total^(0+256),f
  7079  0C96  087A               	movf	_tap_timer+1,w	;volatile
  7080  0C97  3DBD               	addwfc	(_tap_total+1)^(0+256),f
  7081  0C98  087B               	movf	_tap_timer+2,w	;volatile
  7082  0C99  3DBE               	addwfc	(_tap_total+2)^(0+256),f
  7083  0C9A  087C               	movf	_tap_timer+3,w	;volatile
  7084  0C9B  3DBF               	addwfc	(_tap_total+3)^(0+256),f
  7085                           
  7086                           ;SwitchTap.c: 118: tap_history[tap_iteration] = tap_timer;
  7087  0C9C  086B               	movf	_tap_iteration^(0+256),w
  7088  0C9D  0020               	movlb	0	; select bank0
  7089  0C9E  00B6               	movwf	??_updateSwitchTap
  7090  0C9F  3001               	movlw	1
  7091  0CA0                     u3785:	
  7092  0CA0  35B6               	lslf	??_updateSwitchTap,f
  7093  0CA1  3EFF               	addlw	-1
  7094  0CA2  1D03               	skipz
  7095  0CA3  2CA0               	goto	u3785
  7096  0CA4  3536               	lslf	??_updateSwitchTap,w
  7097  0CA5  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7098  0CA6  0086               	movwf	6
  7099  0CA7  3001               	movlw	1	; select bank2/3
  7100  0CA8  0087               	movwf	7
  7101  0CA9  0879               	movf	_tap_timer,w	;volatile
  7102  0CAA  3FC0               	movwi [0]fsr1
  7103  0CAB  087A               	movf	_tap_timer+1,w	;volatile
  7104  0CAC  3FC1               	movwi [1]fsr1
  7105  0CAD  087B               	movf	_tap_timer+2,w	;volatile
  7106  0CAE  3FC2               	movwi [2]fsr1
  7107  0CAF  087C               	movf	_tap_timer+3,w	;volatile
  7108  0CB0  3FC3               	movwi [3]fsr1
  7109                           
  7110                           ;SwitchTap.c: 119: tapCntDivisor = tap_iteration;
  7111  0CB1  0022               	movlb	2	; select bank2
  7112  0CB2  086C               	movf	(_tap_iteration+1)^(0+256),w
  7113  0CB3  0020               	movlb	0	; select bank0
  7114  0CB4  00BD               	movwf	updateSwitchTap@tapCntDivisor+1
  7115  0CB5  0022               	movlb	2	; select bank2
  7116  0CB6  086B               	movf	_tap_iteration^(0+256),w
  7117  0CB7  0020               	movlb	0	; select bank0
  7118  0CB8  00BC               	movwf	updateSwitchTap@tapCntDivisor
  7119                           
  7120                           ;SwitchTap.c: 120: } else {
  7121  0CB9  2D2F               	goto	l3962
  7122  0CBA                     l3948:	
  7123                           
  7124                           ;SwitchTap.c: 121: tap_total = 0;
  7125  0CBA  3000               	movlw	0
  7126  0CBB  0022               	movlb	2	; select bank2
  7127  0CBC  00BF               	movwf	(_tap_total+3)^(0+256)
  7128  0CBD  3000               	movlw	0
  7129  0CBE  00BE               	movwf	(_tap_total+2)^(0+256)
  7130  0CBF  3000               	movlw	0
  7131  0CC0  00BD               	movwf	(_tap_total+1)^(0+256)
  7132  0CC1  3000               	movlw	0
  7133  0CC2  00BC               	movwf	_tap_total^(0+256)
  7134                           
  7135                           ;SwitchTap.c: 122: for (iCnt = 1; iCnt < num_taps; iCnt++) {
  7136  0CC3  0020               	movlb	0	; select bank0
  7137  0CC4  01BE               	clrf	updateSwitchTap@iCnt
  7138  0CC5  0ABE               	incf	updateSwitchTap@iCnt,f
  7139  0CC6                     l3956:	
  7140  0CC6  0021               	movlb	1	; select bank1
  7141  0CC7  0859               	movf	_num_taps^(0+128),w
  7142  0CC8  0020               	movlb	0	; select bank0
  7143  0CC9  023E               	subwf	updateSwitchTap@iCnt,w
  7144  0CCA  1803               	btfsc	3,0
  7145  0CCB  2D10               	goto	l3958
  7146                           
  7147                           ;SwitchTap.c: 123: tap_history[iCnt] = tap_history[iCnt + 1];
  7148  0CCC  083E               	movf	updateSwitchTap@iCnt,w
  7149  0CCD  00B6               	movwf	??_updateSwitchTap
  7150  0CCE  3001               	movlw	1
  7151  0CCF                     u3795:	
  7152  0CCF  35B6               	lslf	??_updateSwitchTap,f
  7153  0CD0  3EFF               	addlw	-1
  7154  0CD1  1D03               	skipz
  7155  0CD2  2CCF               	goto	u3795
  7156  0CD3  3536               	lslf	??_updateSwitchTap,w
  7157  0CD4  3E04               	addlw	4
  7158  0CD5  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7159  0CD6  0086               	movwf	6
  7160  0CD7  3001               	movlw	1	; select bank2/3
  7161  0CD8  0087               	movwf	7
  7162  0CD9  3F40               	moviw [0]fsr1
  7163  0CDA  00B7               	movwf	??_updateSwitchTap+1
  7164  0CDB  3F41               	moviw [1]fsr1
  7165  0CDC  00B8               	movwf	??_updateSwitchTap+2
  7166  0CDD  3F42               	moviw [2]fsr1
  7167  0CDE  00B9               	movwf	??_updateSwitchTap+3
  7168  0CDF  3F43               	moviw [3]fsr1
  7169  0CE0  00BA               	movwf	??_updateSwitchTap+4
  7170  0CE1  083E               	movf	updateSwitchTap@iCnt,w
  7171  0CE2  00BB               	movwf	??_updateSwitchTap+5
  7172  0CE3  3001               	movlw	1
  7173  0CE4                     u3805:	
  7174  0CE4  35BB               	lslf	??_updateSwitchTap+5,f
  7175  0CE5  3EFF               	addlw	-1
  7176  0CE6  1D03               	skipz
  7177  0CE7  2CE4               	goto	u3805
  7178  0CE8  353B               	lslf	??_updateSwitchTap+5,w
  7179  0CE9  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7180  0CEA  0086               	movwf	6
  7181  0CEB  3001               	movlw	1	; select bank2/3
  7182  0CEC  0087               	movwf	7
  7183  0CED  0837               	movf	??_updateSwitchTap+1,w
  7184  0CEE  3FC0               	movwi [0]fsr1
  7185  0CEF  0838               	movf	??_updateSwitchTap+2,w
  7186  0CF0  3FC1               	movwi [1]fsr1
  7187  0CF1  0839               	movf	??_updateSwitchTap+3,w
  7188  0CF2  3FC2               	movwi [2]fsr1
  7189  0CF3  083A               	movf	??_updateSwitchTap+4,w
  7190  0CF4  3FC3               	movwi [3]fsr1
  7191                           
  7192                           ;SwitchTap.c: 124: tap_total += tap_history[iCnt];
  7193  0CF5  083E               	movf	updateSwitchTap@iCnt,w
  7194  0CF6  00B6               	movwf	??_updateSwitchTap
  7195  0CF7  3001               	movlw	1
  7196  0CF8                     u3815:	
  7197  0CF8  35B6               	lslf	??_updateSwitchTap,f
  7198  0CF9  3EFF               	addlw	-1
  7199  0CFA  1D03               	skipz
  7200  0CFB  2CF8               	goto	u3815
  7201  0CFC  3536               	lslf	??_updateSwitchTap,w
  7202  0CFD  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7203  0CFE  0086               	movwf	6
  7204  0CFF  3001               	movlw	1	; select bank2/3
  7205  0D00  0087               	movwf	7
  7206  0D01  3F40               	moviw [0]fsr1
  7207  0D02  0022               	movlb	2	; select bank2
  7208  0D03  07BC               	addwf	_tap_total^(0+256),f
  7209  0D04  3F41               	moviw [1]fsr1
  7210  0D05  3DBD               	addwfc	(_tap_total+1)^(0+256),f
  7211  0D06  3F42               	moviw [2]fsr1
  7212  0D07  3DBE               	addwfc	(_tap_total+2)^(0+256),f
  7213  0D08  3F43               	moviw [3]fsr1
  7214  0D09  3DBF               	addwfc	(_tap_total+3)^(0+256),f
  7215  0D0A  3001               	movlw	1
  7216  0D0B  0020               	movlb	0	; select bank0
  7217  0D0C  00B6               	movwf	??_updateSwitchTap
  7218  0D0D  0836               	movf	??_updateSwitchTap,w
  7219  0D0E  07BE               	addwf	updateSwitchTap@iCnt,f
  7220  0D0F  2CC6               	goto	l3956
  7221  0D10                     l3958:	
  7222                           
  7223                           ;SwitchTap.c: 125: }
  7224                           ;SwitchTap.c: 126: tap_history[num_taps] = tap_timer;
  7225  0D10  0021               	movlb	1	; select bank1
  7226  0D11  0859               	movf	_num_taps^(0+128),w
  7227  0D12  0020               	movlb	0	; select bank0
  7228  0D13  00B6               	movwf	??_updateSwitchTap
  7229  0D14  3001               	movlw	1
  7230  0D15                     u3835:	
  7231  0D15  35B6               	lslf	??_updateSwitchTap,f
  7232  0D16  3EFF               	addlw	-1
  7233  0D17  1D03               	skipz
  7234  0D18  2D15               	goto	u3835
  7235  0D19  3536               	lslf	??_updateSwitchTap,w
  7236  0D1A  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  7237  0D1B  0086               	movwf	6
  7238  0D1C  3001               	movlw	1	; select bank2/3
  7239  0D1D  0087               	movwf	7
  7240  0D1E  0879               	movf	_tap_timer,w	;volatile
  7241  0D1F  3FC0               	movwi [0]fsr1
  7242  0D20  087A               	movf	_tap_timer+1,w	;volatile
  7243  0D21  3FC1               	movwi [1]fsr1
  7244  0D22  087B               	movf	_tap_timer+2,w	;volatile
  7245  0D23  3FC2               	movwi [2]fsr1
  7246  0D24  087C               	movf	_tap_timer+3,w	;volatile
  7247  0D25  3FC3               	movwi [3]fsr1
  7248                           
  7249                           ;SwitchTap.c: 127: tap_total += tap_timer;
  7250  0D26  0879               	movf	_tap_timer,w	;volatile
  7251  0D27  0022               	movlb	2	; select bank2
  7252  0D28  07BC               	addwf	_tap_total^(0+256),f
  7253  0D29  087A               	movf	_tap_timer+1,w	;volatile
  7254  0D2A  3DBD               	addwfc	(_tap_total+1)^(0+256),f
  7255  0D2B  087B               	movf	_tap_timer+2,w	;volatile
  7256  0D2C  3DBE               	addwfc	(_tap_total+2)^(0+256),f
  7257  0D2D  087C               	movf	_tap_timer+3,w	;volatile
  7258  0D2E  3DBF               	addwfc	(_tap_total+3)^(0+256),f
  7259  0D2F                     l3962:	
  7260                           
  7261                           ;SwitchTap.c: 128: }
  7262                           ;SwitchTap.c: 130: baseline_delay_time = tap_total / tapCntDivisor;
  7263  0D2F  0020               	movlb	0	; select bank0
  7264  0D30  083C               	movf	updateSwitchTap@tapCntDivisor,w
  7265  0D31  00A6               	movwf	___aldiv@divisor
  7266  0D32  083D               	movf	updateSwitchTap@tapCntDivisor+1,w
  7267  0D33  00A7               	movwf	___aldiv@divisor+1
  7268  0D34  0D89               	rlf	9,f
  7269  0D35  3B89               	subwfb	9,f
  7270  0D36  0989               	comf	9,f
  7271  0D37  00A8               	movwf	___aldiv@divisor+2
  7272  0D38  00A9               	movwf	___aldiv@divisor+3
  7273  0D39  0022               	movlb	2	; select bank2
  7274  0D3A  083F               	movf	(_tap_total+3)^(0+256),w
  7275  0D3B  0020               	movlb	0	; select bank0
  7276  0D3C  00AD               	movwf	___aldiv@dividend+3
  7277  0D3D  0022               	movlb	2	; select bank2
  7278  0D3E  083E               	movf	(_tap_total+2)^(0+256),w
  7279  0D3F  0020               	movlb	0	; select bank0
  7280  0D40  00AC               	movwf	___aldiv@dividend+2
  7281  0D41  0022               	movlb	2	; select bank2
  7282  0D42  083D               	movf	(_tap_total+1)^(0+256),w
  7283  0D43  0020               	movlb	0	; select bank0
  7284  0D44  00AB               	movwf	___aldiv@dividend+1
  7285  0D45  0022               	movlb	2	; select bank2
  7286  0D46  083C               	movf	_tap_total^(0+256),w
  7287  0D47  0020               	movlb	0	; select bank0
  7288  0D48  00AA               	movwf	___aldiv@dividend
  7289  0D49  3196  2654         	fcall	___aldiv
  7290  0D4B  0020               	movlb	0	; select bank0
  7291  0D4C  0829               	movf	?___aldiv+3,w
  7292  0D4D  0021               	movlb	1	; select bank1
  7293  0D4E  00C2               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  7294  0D4F  0020               	movlb	0	; select bank0
  7295  0D50  0828               	movf	?___aldiv+2,w
  7296  0D51  0021               	movlb	1	; select bank1
  7297  0D52  00C1               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  7298  0D53  0020               	movlb	0	; select bank0
  7299  0D54  0827               	movf	?___aldiv+1,w
  7300  0D55  0021               	movlb	1	; select bank1
  7301  0D56  00C0               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  7302  0D57  0020               	movlb	0	; select bank0
  7303  0D58  0826               	movf	?___aldiv,w
  7304  0D59  0021               	movlb	1	; select bank1
  7305  0D5A  00BF               	movwf	_baseline_delay_time^(0+128)	;volatile
  7306                           
  7307                           ;SwitchTap.c: 131: delay_time_changed = 1;
  7308  0D5B  3001               	movlw	1
  7309  0D5C  0022               	movlb	2	; select bank2
  7310  0D5D  00E5               	movwf	_delay_time_changed^(0+256)
  7311  0D5E  3000               	movlw	0
  7312  0D5F  00E6               	movwf	(_delay_time_changed^(0+256)+1)
  7313                           
  7314                           ;SwitchTap.c: 132: tap_timer = 0;
  7315  0D60  3000               	movlw	0
  7316  0D61  00FC               	movwf	_tap_timer+3	;volatile
  7317  0D62  3000               	movlw	0
  7318  0D63  00FB               	movwf	_tap_timer+2	;volatile
  7319  0D64  3000               	movlw	0
  7320  0D65  00FA               	movwf	_tap_timer+1	;volatile
  7321  0D66  3000               	movlw	0
  7322  0D67  00F9               	movwf	_tap_timer	;volatile
  7323                           
  7324                           ;SwitchTap.c: 134: tap_iteration++;
  7325  0D68  3001               	movlw	1
  7326  0D69  07EB               	addwf	_tap_iteration^(0+256),f
  7327  0D6A  3000               	movlw	0
  7328  0D6B  3DEC               	addwfc	(_tap_iteration+1)^(0+256),f
  7329                           
  7330                           ;SwitchTap.c: 135: }
  7331                           ;SwitchTap.c: 137: } else if (switchTap_pressed >= 25) {
  7332  0D6C  0008               	return
  7333  0D6D                     l3970:	
  7334  0D6D  3019               	movlw	25
  7335  0D6E  0021               	movlb	1	; select bank1
  7336  0D6F  026F               	subwf	_switchTap_pressed^(0+128),w
  7337  0D70  1C03               	skipc
  7338  0D71  0008               	return
  7339                           
  7340                           ;SwitchTap.c: 138: switchTap_down = 0;
  7341  0D72  0022               	movlb	2	; select bank2
  7342  0D73  01E2               	clrf	_switchTap_down^(0+256)
  7343                           
  7344                           ;SwitchTap.c: 139: switchTap_state = 0;
  7345  0D74  0021               	movlb	1	; select bank1
  7346  0D75  01DB               	clrf	_switchTap_state^(0+128)
  7347                           
  7348                           ;SwitchTap.c: 145: setLongTapState(0);
  7349  0D76  3000               	movlw	0
  7350  0D77  0020               	movlb	0	; select bank0
  7351  0D78  00A0               	movwf	setLongTapState@f_state
  7352  0D79  00A1               	movwf	setLongTapState@f_state+1
  7353  0D7A  319F  273C         	fcall	_setLongTapState
  7354                           
  7355                           ;SwitchTap.c: 147: longTap_timer = 0;
  7356  0D7C  0022               	movlb	2	; select bank2
  7357  0D7D  01D8               	clrf	_longTap_timer^(0+256)	;volatile
  7358  0D7E  01D9               	clrf	(_longTap_timer+1)^(0+256)	;volatile
  7359                           
  7360                           ;SwitchTap.c: 148: longTap_start = 0;
  7361  0D7F  0021               	movlb	1	; select bank1
  7362  0D80  01EA               	clrf	_longTap_start^(0+128)
  7363                           
  7364                           ;SwitchTap.c: 150: switchTap_pressed = 25;
  7365  0D81  3019               	movlw	25
  7366  0D82  0020               	movlb	0	; select bank0
  7367  0D83  00B6               	movwf	??_updateSwitchTap
  7368  0D84  0836               	movf	??_updateSwitchTap,w
  7369  0D85  0021               	movlb	1	; select bank1
  7370  0D86  00EF               	movwf	_switchTap_pressed^(0+128)
  7371  0D87  0008               	return
  7372  0D88                     __end_of_updateSwitchTap:	
  7373                           
  7374                           	psect	text3
  7375  1F3C                     __ptext3:	
  7376 ;; *************** function _setLongTapState *****************
  7377 ;; Defined at:
  7378 ;;		line 165 in file "SwitchTap.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  f_state         2    0[BANK0 ] int 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, status,0
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7392 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7394 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7395 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7396 ;;Total ram usage:        4 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    2
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_updateSwitchTap
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           
  7407                           ;psect for function _setLongTapState
  7408  1F3C                     _setLongTapState:	
  7409                           
  7410                           ;SwitchTap.c: 166: if (longTap_state == f_state) {return;}
  7411                           
  7412                           ;incstack = 0
  7413                           ; Regs used in _setLongTapState: [wreg+status,0]
  7414  1F3C  0021               	movlb	1	; select bank1
  7415  1F3D  0858               	movf	_longTap_state^(0+128),w	;volatile
  7416  1F3E  0020               	movlb	0	; select bank0
  7417  1F3F  00A2               	movwf	??_setLongTapState
  7418  1F40  01A3               	clrf	??_setLongTapState+1
  7419  1F41  0821               	movf	setLongTapState@f_state+1,w
  7420  1F42  0623               	xorwf	??_setLongTapState+1,w
  7421  1F43  1D03               	skipz
  7422  1F44  2F47               	goto	u2565
  7423  1F45  0820               	movf	setLongTapState@f_state,w
  7424  1F46  0622               	xorwf	??_setLongTapState,w
  7425  1F47                     u2565:	
  7426  1F47  1903               	btfsc	3,2
  7427  1F48  0008               	return
  7428                           
  7429                           ;SwitchTap.c: 167: longTap_state = f_state;
  7430  1F49  0820               	movf	setLongTapState@f_state,w
  7431  1F4A  00A2               	movwf	??_setLongTapState
  7432  1F4B  0822               	movf	??_setLongTapState,w
  7433  1F4C  0021               	movlb	1	; select bank1
  7434  1F4D  00D8               	movwf	_longTap_state^(0+128)	;volatile
  7435                           
  7436                           ;SwitchTap.c: 168: LATBbits.LATB5 = f_state;
  7437  1F4E  0020               	movlb	0	; select bank0
  7438  1F4F  0C20               	rrf	setLongTapState@f_state,w
  7439  1F50  0022               	movlb	2	; select bank2
  7440  1F51  1C03               	skipc
  7441  1F52  128D               	bcf	13,5	;volatile
  7442  1F53  1803               	skipnc
  7443  1F54  168D               	bsf	13,5	;volatile
  7444  1F55  0008               	return
  7445  1F56                     __end_of_setLongTapState:	
  7446                           
  7447                           	psect	text4
  7448  08EA                     __ptext4:	
  7449 ;; *************** function _updateSwitchBypass *****************
  7450 ;; Defined at:
  7451 ;;		line 34 in file "SwitchBypass.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;		None
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      void 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0, pclath, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7467 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7468 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7469 ;;Total ram usage:        2 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:    5
  7472 ;; This function calls:
  7473 ;;		_setDoublePressState
  7474 ;;		_setFeedbackState
  7475 ;;		_setSwitchBypassState
  7476 ;; This function is called by:
  7477 ;;		_main
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           
  7482                           ;psect for function _updateSwitchBypass
  7483  08EA                     _updateSwitchBypass:	
  7484                           
  7485                           ;SwitchBypass.c: 41: if (PORTEbits.RE1 == 0) {
  7486                           
  7487                           ;incstack = 0
  7488                           ; Regs used in _updateSwitchBypass: [wreg+status,2+status,0+pclath+cstack]
  7489  08EA  0020               	movlb	0	; select bank0
  7490  08EB  1890               	btfsc	16,1	;volatile
  7491  08EC  2900               	goto	l3800
  7492                           
  7493                           ;SwitchBypass.c: 42: if (switchBypass_pressed > 0) {
  7494  08ED  0022               	movlb	2	; select bank2
  7495  08EE  085D               	movf	(_switchBypass_pressed+1)^(0+256),w
  7496  08EF  3A80               	xorlw	128
  7497  08F0  0020               	movlb	0	; select bank0
  7498  08F1  00B6               	movwf	??_updateSwitchBypass
  7499  08F2  3080               	movlw	128
  7500  08F3  0236               	subwf	??_updateSwitchBypass,w
  7501  08F4  1D03               	skipz
  7502  08F5  28F9               	goto	u3425
  7503  08F6  3001               	movlw	1
  7504  08F7  0022               	movlb	2	; select bank2
  7505  08F8  025C               	subwf	_switchBypass_pressed^(0+256),w
  7506  08F9                     u3425:	
  7507  08F9  1C03               	skipc
  7508  08FA  2913               	goto	l3804
  7509                           
  7510                           ;SwitchBypass.c: 43: switchBypass_pressed--;
  7511  08FB  30FF               	movlw	255
  7512  08FC  0022               	movlb	2	; select bank2
  7513  08FD  07DC               	addwf	_switchBypass_pressed^(0+256),f
  7514  08FE  30FF               	movlw	255
  7515  08FF  2912               	goto	L6
  7516  0900                     l3800:	
  7517                           ;SwitchBypass.c: 44: }
  7518                           ;SwitchBypass.c: 45: } else if (switchBypass_pressed < 25) {
  7519                           
  7520  0900  0022               	movlb	2	; select bank2
  7521  0901  085D               	movf	(_switchBypass_pressed+1)^(0+256),w
  7522  0902  3A80               	xorlw	128
  7523  0903  0020               	movlb	0	; select bank0
  7524  0904  00B6               	movwf	??_updateSwitchBypass
  7525  0905  3080               	movlw	128
  7526  0906  0236               	subwf	??_updateSwitchBypass,w
  7527  0907  1D03               	skipz
  7528  0908  290C               	goto	u3435
  7529  0909  3019               	movlw	25
  7530  090A  0022               	movlb	2	; select bank2
  7531  090B  025C               	subwf	_switchBypass_pressed^(0+256),w
  7532  090C                     u3435:	
  7533  090C  1803               	skipnc
  7534  090D  2913               	goto	l3804
  7535                           
  7536                           ;SwitchBypass.c: 46: switchBypass_pressed++;
  7537  090E  3001               	movlw	1
  7538  090F  0022               	movlb	2	; select bank2
  7539  0910  07DC               	addwf	_switchBypass_pressed^(0+256),f
  7540  0911  3000               	movlw	0
  7541  0912                     L6:	
  7542  0912  3DDD               	addwfc	(_switchBypass_pressed+1)^(0+256),f
  7543  0913                     l3804:	
  7544                           
  7545                           ;SwitchBypass.c: 47: }
  7546                           ;SwitchBypass.c: 53: if (switchBypass_pressed == 0) {
  7547  0913  0022               	movlb	2	; select bank2
  7548  0914  085C               	movf	_switchBypass_pressed^(0+256),w
  7549  0915  045D               	iorwf	(_switchBypass_pressed+1)^(0+256),w
  7550  0916  1D03               	btfss	3,2
  7551  0917  2971               	goto	l3844
  7552                           
  7553                           ;SwitchBypass.c: 56: if (feedback_start == 0) {
  7554  0918  0021               	movlb	1	; select bank1
  7555  0919  0869               	movf	_feedback_start^(0+128),w
  7556  091A  1D03               	btfss	3,2
  7557  091B  2920               	goto	l3812
  7558                           
  7559                           ;SwitchBypass.c: 57: feedback_start = 1;
  7560  091C  01E9               	clrf	_feedback_start^(0+128)
  7561  091D  0AE9               	incf	_feedback_start^(0+128),f
  7562                           
  7563                           ;SwitchBypass.c: 58: feedback_timer = 0;
  7564  091E  01E4               	clrf	_feedback_timer^(0+128)	;volatile
  7565  091F  01E5               	clrf	(_feedback_timer+1)^(0+128)	;volatile
  7566  0920                     l3812:	
  7567                           
  7568                           ;SwitchBypass.c: 59: }
  7569                           ;SwitchBypass.c: 61: if (feedback_timer >= long_press_limit && feedback_state == 0 && do
      +                          ubleTap_state == 0) {
  7570  0920  0854               	movf	(_long_press_limit+1)^(0+128),w
  7571  0921  0265               	subwf	(_feedback_timer+1)^(0+128),w	;volatile
  7572  0922  1D03               	skipz
  7573  0923  2926               	goto	u3465
  7574  0924  0853               	movf	_long_press_limit^(0+128),w
  7575  0925  0264               	subwf	_feedback_timer^(0+128),w	;volatile
  7576  0926                     u3465:	
  7577  0926  1C03               	skipc
  7578  0927  2946               	goto	l3826
  7579  0928  0020               	movlb	0	; select bank0
  7580  0929  086F               	movf	_feedback_state,w	;volatile
  7581  092A  1D03               	btfss	3,2
  7582  092B  2946               	goto	l3826
  7583  092C  087D               	movf	_doubleTap_state,w	;volatile
  7584  092D  1D03               	btfss	3,2
  7585  092E  2946               	goto	l3826
  7586                           
  7587                           ;SwitchBypass.c: 64: LATBbits.LATB2 = 0;
  7588  092F  0022               	movlb	2	; select bank2
  7589  0930  110D               	bcf	13,2	;volatile
  7590                           
  7591                           ;SwitchBypass.c: 65: if (longTap_start != 1) {
  7592  0931  0021               	movlb	1	; select bank1
  7593  0932  036A               	decf	_longTap_start^(0+128),w
  7594  0933  1903               	btfsc	3,2
  7595  0934  293E               	goto	l3824
  7596                           
  7597                           ;SwitchBypass.c: 66: setFeedbackState(1);
  7598  0935  3001               	movlw	1
  7599  0936  0020               	movlb	0	; select bank0
  7600  0937  00A0               	movwf	setFeedbackState@f_state
  7601  0938  3000               	movlw	0
  7602  0939  00A1               	movwf	setFeedbackState@f_state+1
  7603  093A  319F  270C  3188   	fcall	_setFeedbackState
  7604                           
  7605                           ;SwitchBypass.c: 67: } else {
  7606  093D  2946               	goto	l3826
  7607  093E                     l3824:	
  7608                           
  7609                           ;SwitchBypass.c: 68: setDoublePressState(1);
  7610  093E  3001               	movlw	1
  7611  093F  0020               	movlb	0	; select bank0
  7612  0940  00B2               	movwf	setDoublePressState@f_state
  7613  0941  3000               	movlw	0
  7614  0942  00B3               	movwf	setDoublePressState@f_state+1
  7615  0943  3190  200B  3188   	fcall	_setDoublePressState
  7616  0946                     l3826:	
  7617                           
  7618                           ;SwitchBypass.c: 69: }
  7619                           ;SwitchBypass.c: 70: }
  7620                           ;SwitchBypass.c: 72: if (doubleTap_state == 0 && feedback_state == 0) {
  7621  0946  087D               	movf	_doubleTap_state,w	;volatile
  7622  0947  1D03               	btfss	3,2
  7623  0948  296D               	goto	l1006
  7624  0949  0020               	movlb	0	; select bank0
  7625  094A  086F               	movf	_feedback_state,w	;volatile
  7626  094B  1D03               	btfss	3,2
  7627  094C  296D               	goto	l1006
  7628                           
  7629                           ;SwitchBypass.c: 73: if (switchBypass_state == 1) {
  7630  094D  0021               	movlb	1	; select bank1
  7631  094E  035A               	decf	_switchBypass_state^(0+128),w
  7632  094F  1D03               	btfss	3,2
  7633  0950  295D               	goto	l3838
  7634                           
  7635                           ;SwitchBypass.c: 75: if (switchBypass_up == 1) {
  7636  0951  0022               	movlb	2	; select bank2
  7637  0952  0369               	decf	_switchBypass_up^(0+256),w
  7638  0953  046A               	iorwf	(_switchBypass_up+1)^(0+256),w
  7639  0954  1D03               	btfss	3,2
  7640  0955  296D               	goto	l1006
  7641                           
  7642                           ;SwitchBypass.c: 76: currentBypassState = 1;
  7643  0956  01EE               	clrf	_currentBypassState^(0+256)
  7644  0957  0AEE               	incf	_currentBypassState^(0+256),f
  7645                           
  7646                           ;SwitchBypass.c: 77: switchBypass_toggle = 1;
  7647  0958  3001               	movlw	1
  7648  0959  00DE               	movwf	_switchBypass_toggle^(0+256)
  7649  095A  3000               	movlw	0
  7650  095B  00DF               	movwf	(_switchBypass_toggle^(0+256)+1)
  7651                           
  7652                           ;SwitchBypass.c: 78: }
  7653                           ;SwitchBypass.c: 93: } else {
  7654  095C  296D               	goto	l1006
  7655  095D                     l3838:	
  7656                           
  7657                           ;SwitchBypass.c: 94: if (bypass_turning_on != 1) {
  7658  095D  0021               	movlb	1	; select bank1
  7659  095E  0368               	decf	_bypass_turning_on^(0+128),w
  7660  095F  1903               	btfsc	3,2
  7661  0960  296D               	goto	l1006
  7662                           
  7663                           ;SwitchBypass.c: 96: currentBypassState = 0;
  7664  0961  0022               	movlb	2	; select bank2
  7665  0962  01EE               	clrf	_currentBypassState^(0+256)
  7666                           
  7667                           ;SwitchBypass.c: 98: bypass_turning_on = 1;
  7668  0963  0021               	movlb	1	; select bank1
  7669  0964  01E8               	clrf	_bypass_turning_on^(0+128)
  7670  0965  0AE8               	incf	_bypass_turning_on^(0+128),f
  7671                           
  7672                           ;SwitchBypass.c: 99: switchBypass_toggle = 0;
  7673  0966  0022               	movlb	2	; select bank2
  7674  0967  01DE               	clrf	_switchBypass_toggle^(0+256)
  7675  0968  01DF               	clrf	(_switchBypass_toggle+1)^(0+256)
  7676                           
  7677                           ;SwitchBypass.c: 101: feedback_state = 0;
  7678  0969  0020               	movlb	0	; select bank0
  7679  096A  01EF               	clrf	_feedback_state	;volatile
  7680                           
  7681                           ;SwitchBypass.c: 102: feedback_start = 0;
  7682  096B  0021               	movlb	1	; select bank1
  7683  096C  01E9               	clrf	_feedback_start^(0+128)
  7684  096D                     l1006:	
  7685                           
  7686                           ;SwitchBypass.c: 103: }
  7687                           ;SwitchBypass.c: 104: }
  7688                           ;SwitchBypass.c: 106: }
  7689                           ;SwitchBypass.c: 107: switchBypass_up = 0;
  7690  096D  0022               	movlb	2	; select bank2
  7691  096E  01E9               	clrf	_switchBypass_up^(0+256)
  7692  096F  01EA               	clrf	(_switchBypass_up+1)^(0+256)
  7693                           
  7694                           ;SwitchBypass.c: 108: } else if (switchBypass_pressed >= 25) {
  7695  0970  0008               	return
  7696  0971                     l3844:	
  7697  0971  085D               	movf	(_switchBypass_pressed+1)^(0+256),w
  7698  0972  3A80               	xorlw	128
  7699  0973  0020               	movlb	0	; select bank0
  7700  0974  00B6               	movwf	??_updateSwitchBypass
  7701  0975  3080               	movlw	128
  7702  0976  0236               	subwf	??_updateSwitchBypass,w
  7703  0977  1D03               	skipz
  7704  0978  297C               	goto	u3555
  7705  0979  3019               	movlw	25
  7706  097A  0022               	movlb	2	; select bank2
  7707  097B  025C               	subwf	_switchBypass_pressed^(0+256),w
  7708  097C                     u3555:	
  7709  097C  1C03               	skipc
  7710  097D  0008               	return
  7711                           
  7712                           ;SwitchBypass.c: 109: if (doubleTap_state == 1) {
  7713  097E  037D               	decf	_doubleTap_state,w	;volatile
  7714  097F  1D03               	btfss	3,2
  7715  0980  298A               	goto	l3850
  7716                           
  7717                           ;SwitchBypass.c: 110: setSwitchBypassState(currentBypassState);
  7718  0981  0022               	movlb	2	; select bank2
  7719  0982  086E               	movf	_currentBypassState^(0+256),w
  7720  0983  0020               	movlb	0	; select bank0
  7721  0984  00B6               	movwf	??_updateSwitchBypass
  7722  0985  01B7               	clrf	??_updateSwitchBypass+1
  7723  0986  0836               	movf	??_updateSwitchBypass,w
  7724  0987  00B2               	movwf	setSwitchBypassState@f_state
  7725  0988  0837               	movf	??_updateSwitchBypass+1,w
  7726  0989  29A5               	goto	L7
  7727  098A                     l3850:	
  7728                           ;SwitchBypass.c: 111: } else if (bypass_turning_on == 1 || feedback_state == 1) {
  7729                           
  7730  098A  0021               	movlb	1	; select bank1
  7731  098B  0368               	decf	_bypass_turning_on^(0+128),w
  7732  098C  1903               	btfsc	3,2
  7733  098D  2992               	goto	l3854
  7734  098E  0020               	movlb	0	; select bank0
  7735  098F  036F               	decf	_feedback_state,w	;volatile
  7736  0990  1D03               	btfss	3,2
  7737  0991  2997               	goto	l3856
  7738  0992                     l3854:	
  7739                           
  7740                           ;SwitchBypass.c: 112: setSwitchBypassState(1);
  7741  0992  3001               	movlw	1
  7742  0993  0020               	movlb	0	; select bank0
  7743  0994  00B2               	movwf	setSwitchBypassState@f_state
  7744  0995  3000               	movlw	0
  7745  0996  29A5               	goto	L7
  7746  0997                     l3856:	
  7747                           ;SwitchBypass.c: 113: } else if (switchBypass_toggle == 1 && feedback_state == 0 && doub
      +                          leTap_state == 0) {
  7748                           
  7749  0997  0022               	movlb	2	; select bank2
  7750  0998  035E               	decf	_switchBypass_toggle^(0+256),w
  7751  0999  045F               	iorwf	(_switchBypass_toggle+1)^(0+256),w
  7752  099A  1D03               	btfss	3,2
  7753  099B  29A9               	goto	l3864
  7754  099C  0020               	movlb	0	; select bank0
  7755  099D  086F               	movf	_feedback_state,w	;volatile
  7756  099E  1D03               	btfss	3,2
  7757  099F  29A9               	goto	l3864
  7758  09A0  087D               	movf	_doubleTap_state,w	;volatile
  7759  09A1  1D03               	btfss	3,2
  7760  09A2  29A9               	goto	l3864
  7761                           
  7762                           ;SwitchBypass.c: 114: setSwitchBypassState(0);
  7763  09A3  3000               	movlw	0
  7764  09A4  00B2               	movwf	setSwitchBypassState@f_state
  7765  09A5                     L7:	
  7766  09A5  00B3               	movwf	setSwitchBypassState@f_state+1
  7767  09A6  3193  23A0  3188   	fcall	_setSwitchBypassState
  7768  09A9                     l3864:	
  7769                           
  7770                           ;SwitchBypass.c: 115: }
  7771                           ;SwitchBypass.c: 118: LATBbits.LATB2 = switchBypass_state;
  7772  09A9  0021               	movlb	1	; select bank1
  7773  09AA  0C5A               	rrf	_switchBypass_state^(0+128),w
  7774  09AB  0022               	movlb	2	; select bank2
  7775  09AC  1C03               	skipc
  7776  09AD  110D               	bcf	13,2	;volatile
  7777  09AE  1803               	skipnc
  7778  09AF  150D               	bsf	13,2	;volatile
  7779                           
  7780                           ;SwitchBypass.c: 120: setFeedbackState(0);
  7781  09B0  3000               	movlw	0
  7782  09B1  0020               	movlb	0	; select bank0
  7783  09B2  00A0               	movwf	setFeedbackState@f_state
  7784  09B3  00A1               	movwf	setFeedbackState@f_state+1
  7785  09B4  319F  270C  3188   	fcall	_setFeedbackState
  7786                           
  7787                           ;SwitchBypass.c: 121: setDoublePressState(0);
  7788  09B7  3000               	movlw	0
  7789  09B8  0020               	movlb	0	; select bank0
  7790  09B9  00B2               	movwf	setDoublePressState@f_state
  7791  09BA  00B3               	movwf	setDoublePressState@f_state+1
  7792  09BB  3190  200B         	fcall	_setDoublePressState
  7793                           
  7794                           ;SwitchBypass.c: 122: feedback_start = 0;
  7795  09BD  0021               	movlb	1	; select bank1
  7796  09BE  01E9               	clrf	_feedback_start^(0+128)
  7797                           
  7798                           ;SwitchBypass.c: 123: bypass_turning_on = 0;
  7799  09BF  01E8               	clrf	_bypass_turning_on^(0+128)
  7800                           
  7801                           ;SwitchBypass.c: 124: switchBypass_toggle = 0;
  7802  09C0  0022               	movlb	2	; select bank2
  7803  09C1  01DE               	clrf	_switchBypass_toggle^(0+256)
  7804  09C2  01DF               	clrf	(_switchBypass_toggle+1)^(0+256)
  7805                           
  7806                           ;SwitchBypass.c: 125: switchBypass_up = 1;
  7807  09C3  3001               	movlw	1
  7808  09C4  00E9               	movwf	_switchBypass_up^(0+256)
  7809  09C5  3000               	movlw	0
  7810  09C6  00EA               	movwf	(_switchBypass_up^(0+256)+1)
  7811                           
  7812                           ;SwitchBypass.c: 127: switchBypass_pressed = 25;
  7813  09C7  3019               	movlw	25
  7814  09C8  00DC               	movwf	_switchBypass_pressed^(0+256)
  7815  09C9  3000               	movlw	0
  7816  09CA  00DD               	movwf	(_switchBypass_pressed^(0+256)+1)
  7817  09CB  0008               	return
  7818  09CC                     __end_of_updateSwitchBypass:	
  7819                           
  7820                           	psect	text5
  7821  1F0C                     __ptext5:	
  7822 ;; *************** function _setFeedbackState *****************
  7823 ;; Defined at:
  7824 ;;		line 151 in file "SwitchBypass.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  f_state         2    0[BANK0 ] int 
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      void 
  7831 ;; Registers used:
  7832 ;;		wreg, status,0
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7840 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7841 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7842 ;;Total ram usage:        4 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    2
  7845 ;; This function calls:
  7846 ;;		Nothing
  7847 ;; This function is called by:
  7848 ;;		_updateSwitchBypass
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           
  7853                           ;psect for function _setFeedbackState
  7854  1F0C                     _setFeedbackState:	
  7855                           
  7856                           ;SwitchBypass.c: 152: if (feedback_state == f_state) {return;}
  7857                           
  7858                           ;incstack = 0
  7859                           ; Regs used in _setFeedbackState: [wreg+status,0]
  7860  1F0C  0020               	movlb	0	; select bank0
  7861  1F0D  086F               	movf	_feedback_state,w	;volatile
  7862  1F0E  00A2               	movwf	??_setFeedbackState
  7863  1F0F  01A3               	clrf	??_setFeedbackState+1
  7864  1F10  0821               	movf	setFeedbackState@f_state+1,w
  7865  1F11  0623               	xorwf	??_setFeedbackState+1,w
  7866  1F12  1D03               	skipz
  7867  1F13  2F16               	goto	u2535
  7868  1F14  0820               	movf	setFeedbackState@f_state,w
  7869  1F15  0622               	xorwf	??_setFeedbackState,w
  7870  1F16                     u2535:	
  7871  1F16  1903               	btfsc	3,2
  7872  1F17  0008               	return
  7873                           
  7874                           ;SwitchBypass.c: 153: feedback_state = f_state;
  7875  1F18  0820               	movf	setFeedbackState@f_state,w
  7876  1F19  00A2               	movwf	??_setFeedbackState
  7877  1F1A  0822               	movf	??_setFeedbackState,w
  7878  1F1B  00EF               	movwf	_feedback_state	;volatile
  7879                           
  7880                           ;SwitchBypass.c: 154: LATBbits.LATB3 = f_state;
  7881  1F1C  0C20               	rrf	setFeedbackState@f_state,w
  7882  1F1D  0022               	movlb	2	; select bank2
  7883  1F1E  1C03               	skipc
  7884  1F1F  118D               	bcf	13,3	;volatile
  7885  1F20  1803               	skipnc
  7886  1F21  158D               	bsf	13,3	;volatile
  7887  1F22  0008               	return
  7888  1F23                     __end_of_setFeedbackState:	
  7889                           
  7890                           	psect	text6
  7891  100B                     __ptext6:	
  7892 ;; *************** function _setDoublePressState *****************
  7893 ;; Defined at:
  7894 ;;		line 20 in file "preset_programming.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  f_state         2   18[BANK0 ] int 
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;		None
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  1    wreg      void 
  7901 ;; Registers used:
  7902 ;;		wreg, status,2, status,0, pclath, cstack
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7911 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7912 ;;Total ram usage:        4 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:    4
  7915 ;; This function calls:
  7916 ;;		_wait_ms
  7917 ;; This function is called by:
  7918 ;;		_updateSwitchBypass
  7919 ;;		_updateSwitchTap
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           
  7924                           ;psect for function _setDoublePressState
  7925  100B                     _setDoublePressState:	
  7926                           
  7927                           ;preset_programming.c: 21: if (doubleTap_state == f_state) {return;}
  7928                           
  7929                           ;incstack = 0
  7930                           ; Regs used in _setDoublePressState: [wreg+status,2+status,0+pclath+cstack]
  7931  100B  087D               	movf	_doubleTap_state,w	;volatile
  7932  100C  0020               	movlb	0	; select bank0
  7933  100D  00B4               	movwf	??_setDoublePressState
  7934  100E  01B5               	clrf	??_setDoublePressState+1
  7935  100F  0833               	movf	setDoublePressState@f_state+1,w
  7936  1010  0635               	xorwf	??_setDoublePressState+1,w
  7937  1011  1D03               	skipz
  7938  1012  2815               	goto	u2545
  7939  1013  0832               	movf	setDoublePressState@f_state,w
  7940  1014  0634               	xorwf	??_setDoublePressState,w
  7941  1015                     u2545:	
  7942  1015  1903               	btfsc	3,2
  7943  1016  0008               	return
  7944                           
  7945                           ;preset_programming.c: 22: doubleTap_state = f_state;
  7946  1017  0832               	movf	setDoublePressState@f_state,w
  7947  1018  00B4               	movwf	??_setDoublePressState
  7948  1019  0834               	movf	??_setDoublePressState,w
  7949  101A  00FD               	movwf	_doubleTap_state	;volatile
  7950                           
  7951                           ;preset_programming.c: 23: if (f_state == 1) {
  7952  101B  0332               	decf	setDoublePressState@f_state,w
  7953  101C  0433               	iorwf	setDoublePressState@f_state+1,w
  7954  101D  1D03               	btfss	3,2
  7955  101E  2822               	goto	l3378
  7956                           
  7957                           ;preset_programming.c: 24: LATBbits.LATB4 = 0;
  7958  101F  0022               	movlb	2	; select bank2
  7959  1020  120D               	bcf	13,4	;volatile
  7960                           
  7961                           ;preset_programming.c: 25: LATBbits.LATB2 = 0;
  7962  1021  110D               	bcf	13,2	;volatile
  7963  1022                     l3378:	
  7964                           
  7965                           ;preset_programming.c: 26: }
  7966                           ;preset_programming.c: 28: LATBbits.LATB1 = f_state;
  7967  1022  0020               	movlb	0	; select bank0
  7968  1023  0C32               	rrf	setDoublePressState@f_state,w
  7969  1024  0022               	movlb	2	; select bank2
  7970  1025  1C03               	skipc
  7971  1026  108D               	bcf	13,1	;volatile
  7972  1027  1803               	skipnc
  7973  1028  148D               	bsf	13,1	;volatile
  7974                           
  7975                           ;preset_programming.c: 29: LATBbits.LATB0 = f_state;
  7976  1029  0020               	movlb	0	; select bank0
  7977  102A  0C32               	rrf	setDoublePressState@f_state,w
  7978  102B  0022               	movlb	2	; select bank2
  7979  102C  1C03               	skipc
  7980  102D  100D               	bcf	13,0	;volatile
  7981  102E  1803               	skipnc
  7982  102F  140D               	bsf	13,0	;volatile
  7983                           
  7984                           ;preset_programming.c: 31: wait_ms(20);
  7985  1030  3014               	movlw	20
  7986  1031  0020               	movlb	0	; select bank0
  7987  1032  00AC               	movwf	wait_ms@timeSec
  7988  1033  3000               	movlw	0
  7989  1034  00AD               	movwf	wait_ms@timeSec+1
  7990  1035  3190  20C9         	fcall	_wait_ms
  7991  1037  0008               	return
  7992  1038                     __end_of_setDoublePressState:	
  7993                           
  7994                           	psect	text7
  7995  1FD5                     __ptext7:	
  7996 ;; *************** function _showBootSequence *****************
  7997 ;; Defined at:
  7998 ;;		line 86 in file "LEDs.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;		None
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;		None
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  1    wreg      void 
  8005 ;; Registers used:
  8006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8015 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8016 ;;Total ram usage:        1 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:    5
  8019 ;; This function calls:
  8020 ;;		_getCurrentLEDState
  8021 ;;		_restoreLEDState
  8022 ;;		_solidring_tactiles
  8023 ;;		_star_tactiles
  8024 ;; This function is called by:
  8025 ;;		_main
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           
  8030                           ;psect for function _showBootSequence
  8031  1FD5                     _showBootSequence:	
  8032                           
  8033                           ;LEDs.c: 87: getCurrentLEDState();
  8034                           
  8035                           ;incstack = 0
  8036                           ; Regs used in _showBootSequence: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8037  1FD5  319E  26E4  319F   	fcall	_getCurrentLEDState
  8038                           
  8039                           ;LEDs.c: 88: suspend_blink = 1;
  8040  1FD8  3001               	movlw	1
  8041  1FD9  0020               	movlb	0	; select bank0
  8042  1FDA  00B9               	movwf	??_showBootSequence
  8043  1FDB  0839               	movf	??_showBootSequence,w
  8044  1FDC  0021               	movlb	1	; select bank1
  8045  1FDD  00EE               	movwf	_suspend_blink^(0+128)	;volatile
  8046                           
  8047                           ;LEDs.c: 90: LATBbits.LATB4 = 0;
  8048  1FDE  0022               	movlb	2	; select bank2
  8049  1FDF  120D               	bcf	13,4	;volatile
  8050                           
  8051                           ;LEDs.c: 91: LATBbits.LATB2 = 0;
  8052  1FE0  110D               	bcf	13,2	;volatile
  8053                           
  8054                           ;LEDs.c: 92: LATBbits.LATB5 = 0;
  8055  1FE1  128D               	bcf	13,5	;volatile
  8056                           
  8057                           ;LEDs.c: 93: LATBbits.LATB3 = 0;
  8058  1FE2  118D               	bcf	13,3	;volatile
  8059                           
  8060                           ;LEDs.c: 94: LATBbits.LATB0 = 0;
  8061  1FE3  100D               	bcf	13,0	;volatile
  8062                           
  8063                           ;LEDs.c: 95: LATBbits.LATB1 = 0;
  8064  1FE4  108D               	bcf	13,1	;volatile
  8065                           
  8066                           ;LEDs.c: 113: star_tactiles(0);
  8067  1FE5  3000               	movlw	0
  8068  1FE6  3195  25E5  319F   	fcall	_star_tactiles
  8069                           
  8070                           ;LEDs.c: 114: star_tactiles(0);
  8071  1FE9  3000               	movlw	0
  8072  1FEA  3195  25E5  319F   	fcall	_star_tactiles
  8073                           
  8074                           ;LEDs.c: 115: star_tactiles(1);
  8075  1FED  3001               	movlw	1
  8076  1FEE  3195  25E5  319F   	fcall	_star_tactiles
  8077                           
  8078                           ;LEDs.c: 116: star_tactiles(1);
  8079  1FF1  3001               	movlw	1
  8080  1FF2  3195  25E5  319F   	fcall	_star_tactiles
  8081                           
  8082                           ;LEDs.c: 118: solidring_tactiles();
  8083  1FF5  3192  22D3  319F   	fcall	_solidring_tactiles
  8084                           
  8085                           ;LEDs.c: 119: solidring_tactiles();
  8086  1FF8  3192  22D3  319F   	fcall	_solidring_tactiles
  8087                           
  8088                           ;LEDs.c: 122: suspend_blink = 0;
  8089  1FFB  0021               	movlb	1	; select bank1
  8090  1FFC  01EE               	clrf	_suspend_blink^(0+128)	;volatile
  8091                           
  8092                           ;LEDs.c: 123: restoreLEDState();
  8093  1FFD  319E  26F6         	fcall	_restoreLEDState
  8094  1FFF  0008               	return
  8095  2000                     __end_of_showBootSequence:	
  8096                           
  8097                           	psect	text8
  8098  15E5                     __ptext8:	
  8099 ;; *************** function _star_tactiles *****************
  8100 ;; Defined at:
  8101 ;;		line 194 in file "LEDs.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  reverse         1    wreg     unsigned char 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;  reverse         1   20[BANK0 ] unsigned char 
  8106 ;;  iLed            2   23[BANK0 ] int 
  8107 ;;  iLed            2   21[BANK0 ] int 
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  1    wreg      void 
  8110 ;; Registers used:
  8111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8118 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8119 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8120 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8121 ;;Total ram usage:        7 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:    4
  8124 ;; This function calls:
  8125 ;;		_set_leds_bottom
  8126 ;;		_set_leds_top
  8127 ;;		_wait_ms
  8128 ;; This function is called by:
  8129 ;;		_showBootSequence
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           
  8134                           ;psect for function _star_tactiles
  8135  15E5                     _star_tactiles:	
  8136                           
  8137                           ;incstack = 0
  8138                           ; Regs used in _star_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8139                           ;star_tactiles@reverse stored from wreg
  8140  15E5  0020               	movlb	0	; select bank0
  8141  15E6  00B4               	movwf	star_tactiles@reverse
  8142                           
  8143                           ;LEDs.c: 195: if (reverse == 1) {
  8144  15E7  0334               	decf	star_tactiles@reverse,w
  8145  15E8  1D03               	btfss	3,2
  8146  15E9  2E1A               	goto	l3304
  8147                           
  8148                           ;LEDs.c: 196: for (int iLed = 5; iLed > -1; iLed--) {
  8149  15EA  3005               	movlw	5
  8150  15EB  00B5               	movwf	star_tactiles@iLed
  8151  15EC  3000               	movlw	0
  8152  15ED  00B6               	movwf	star_tactiles@iLed+1
  8153  15EE                     L8:	
  8154  15EE  1BB6               	btfsc	star_tactiles@iLed+1,7
  8155  15EF  0008               	return
  8156                           
  8157                           ;LEDs.c: 197: set_leds_top(iLed, 1);
  8158  15F0  0836               	movf	star_tactiles@iLed+1,w
  8159  15F1  00A1               	movwf	set_leds_top@x+1
  8160  15F2  0835               	movf	star_tactiles@iLed,w
  8161  15F3  00A0               	movwf	set_leds_top@x
  8162  15F4  3001               	movlw	1
  8163  15F5  00A2               	movwf	set_leds_top@ledState
  8164  15F6  3000               	movlw	0
  8165  15F7  00A3               	movwf	set_leds_top@ledState+1
  8166  15F8  3195  252C  3195   	fcall	_set_leds_top
  8167                           
  8168                           ;LEDs.c: 198: set_leds_bottom(6 - iLed);
  8169  15FB  0020               	movlb	0	; select bank0
  8170  15FC  0935               	comf	star_tactiles@iLed,w
  8171  15FD  00B2               	movwf	??_star_tactiles
  8172  15FE  0936               	comf	star_tactiles@iLed+1,w
  8173  15FF  00B3               	movwf	??_star_tactiles+1
  8174  1600  0AB2               	incf	??_star_tactiles,f
  8175  1601  1903               	skipnz
  8176  1602  0AB3               	incf	??_star_tactiles+1,f
  8177  1603  0832               	movf	??_star_tactiles,w
  8178  1604  3E06               	addlw	6
  8179  1605  00A0               	movwf	set_leds_bottom@x
  8180  1606  3000               	movlw	0
  8181  1607  3D33               	addwfc	??_star_tactiles+1,w
  8182  1608  00A1               	movwf	set_leds_bottom@x+1
  8183  1609  3192  221D  3195   	fcall	_set_leds_bottom
  8184                           
  8185                           ;LEDs.c: 199: wait_ms(5);
  8186  160C  3005               	movlw	5
  8187  160D  0020               	movlb	0	; select bank0
  8188  160E  00AC               	movwf	wait_ms@timeSec
  8189  160F  3000               	movlw	0
  8190  1610  00AD               	movwf	wait_ms@timeSec+1
  8191  1611  3190  20C9  3195   	fcall	_wait_ms
  8192  1614  30FF               	movlw	255
  8193  1615  0020               	movlb	0	; select bank0
  8194  1616  07B5               	addwf	star_tactiles@iLed,f
  8195  1617  30FF               	movlw	255
  8196  1618  3DB6               	addwfc	star_tactiles@iLed+1,f
  8197  1619  2DEE               	goto	L8
  8198  161A                     l3304:	
  8199                           ;LEDs.c: 200: }
  8200                           ;LEDs.c: 201: } else {
  8201                           
  8202                           
  8203                           ;LEDs.c: 202: for (int iLed = 1; iLed < 7; iLed++) {
  8204  161A  3001               	movlw	1
  8205  161B  00B7               	movwf	star_tactiles@iLed_1422
  8206  161C  3000               	movlw	0
  8207  161D  00B8               	movwf	star_tactiles@iLed_1422+1
  8208  161E                     L9:	
  8209  161E  0838               	movf	star_tactiles@iLed_1422+1,w
  8210  161F  3A80               	xorlw	128
  8211  1620  00B2               	movwf	??_star_tactiles
  8212  1621  3080               	movlw	128
  8213  1622  0232               	subwf	??_star_tactiles,w
  8214  1623  1D03               	skipz
  8215  1624  2E27               	goto	u2485
  8216  1625  3007               	movlw	7
  8217  1626  0237               	subwf	star_tactiles@iLed_1422,w
  8218  1627                     u2485:	
  8219  1627  1803               	btfsc	3,0
  8220  1628  0008               	return
  8221                           
  8222                           ;LEDs.c: 203: set_leds_top(iLed, 1);
  8223  1629  0020               	movlb	0	; select bank0
  8224  162A  0838               	movf	star_tactiles@iLed_1422+1,w
  8225  162B  00A1               	movwf	set_leds_top@x+1
  8226  162C  0837               	movf	star_tactiles@iLed_1422,w
  8227  162D  00A0               	movwf	set_leds_top@x
  8228  162E  3001               	movlw	1
  8229  162F  00A2               	movwf	set_leds_top@ledState
  8230  1630  3000               	movlw	0
  8231  1631  00A3               	movwf	set_leds_top@ledState+1
  8232  1632  3195  252C  3195   	fcall	_set_leds_top
  8233                           
  8234                           ;LEDs.c: 204: set_leds_bottom(6 - iLed);
  8235  1635  0020               	movlb	0	; select bank0
  8236  1636  0937               	comf	star_tactiles@iLed_1422,w
  8237  1637  00B2               	movwf	??_star_tactiles
  8238  1638  0938               	comf	star_tactiles@iLed_1422+1,w
  8239  1639  00B3               	movwf	??_star_tactiles+1
  8240  163A  0AB2               	incf	??_star_tactiles,f
  8241  163B  1903               	skipnz
  8242  163C  0AB3               	incf	??_star_tactiles+1,f
  8243  163D  0832               	movf	??_star_tactiles,w
  8244  163E  3E06               	addlw	6
  8245  163F  00A0               	movwf	set_leds_bottom@x
  8246  1640  3000               	movlw	0
  8247  1641  3D33               	addwfc	??_star_tactiles+1,w
  8248  1642  00A1               	movwf	set_leds_bottom@x+1
  8249  1643  3192  221D  3195   	fcall	_set_leds_bottom
  8250                           
  8251                           ;LEDs.c: 205: wait_ms(5);
  8252  1646  3005               	movlw	5
  8253  1647  0020               	movlb	0	; select bank0
  8254  1648  00AC               	movwf	wait_ms@timeSec
  8255  1649  3000               	movlw	0
  8256  164A  00AD               	movwf	wait_ms@timeSec+1
  8257  164B  3190  20C9  3195   	fcall	_wait_ms
  8258  164E  3001               	movlw	1
  8259  164F  0020               	movlb	0	; select bank0
  8260  1650  07B7               	addwf	star_tactiles@iLed_1422,f
  8261  1651  3000               	movlw	0
  8262  1652  3DB8               	addwfc	star_tactiles@iLed_1422+1,f
  8263  1653  2E1E               	goto	L9
  8264  1654                     __end_of_star_tactiles:	
  8265                           
  8266                           	psect	text9
  8267  12D3                     __ptext9:	
  8268 ;; *************** function _solidring_tactiles *****************
  8269 ;; Defined at:
  8270 ;;		line 223 in file "LEDs.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;		None
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  ring_delay      1   20[BANK0 ] unsigned char 
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  1    wreg      void 
  8277 ;; Registers used:
  8278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8287 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8288 ;;Total ram usage:        3 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; Hardware stack levels required when called:    4
  8291 ;; This function calls:
  8292 ;;		_set_leds_bottom
  8293 ;;		_set_leds_top
  8294 ;;		_wait_ms
  8295 ;; This function is called by:
  8296 ;;		_showBootSequence
  8297 ;;		_showSave
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           
  8302                           ;psect for function _solidring_tactiles
  8303  12D3                     _solidring_tactiles:	
  8304                           
  8305                           ;LEDs.c: 224: uint8_t ring_delay = 30;
  8306                           
  8307                           ;incstack = 0
  8308                           ; Regs used in _solidring_tactiles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8309  12D3  301E               	movlw	30
  8310  12D4  0020               	movlb	0	; select bank0
  8311  12D5  00B2               	movwf	??_solidring_tactiles
  8312  12D6  0832               	movf	??_solidring_tactiles,w
  8313  12D7  00B4               	movwf	solidring_tactiles@ring_delay
  8314                           
  8315                           ;LEDs.c: 225: set_leds_top(100, 1);
  8316  12D8  3064               	movlw	100
  8317  12D9  00A0               	movwf	set_leds_top@x
  8318  12DA  3000               	movlw	0
  8319  12DB  00A1               	movwf	set_leds_top@x+1
  8320  12DC  3001               	movlw	1
  8321  12DD  00A2               	movwf	set_leds_top@ledState
  8322  12DE  3000               	movlw	0
  8323  12DF  00A3               	movwf	set_leds_top@ledState+1
  8324  12E0  3195  252C  3192   	fcall	_set_leds_top
  8325                           
  8326                           ;LEDs.c: 226: set_leds_bottom(100);
  8327  12E3  3064               	movlw	100
  8328  12E4  0020               	movlb	0	; select bank0
  8329  12E5  00A0               	movwf	set_leds_bottom@x
  8330  12E6  3000               	movlw	0
  8331  12E7  00A1               	movwf	set_leds_bottom@x+1
  8332  12E8  3192  221D  3192   	fcall	_set_leds_bottom
  8333                           
  8334                           ;LEDs.c: 227: wait_ms(ring_delay);
  8335  12EB  0020               	movlb	0	; select bank0
  8336  12EC  0834               	movf	solidring_tactiles@ring_delay,w
  8337  12ED  00B2               	movwf	??_solidring_tactiles
  8338  12EE  01B3               	clrf	??_solidring_tactiles+1
  8339  12EF  0832               	movf	??_solidring_tactiles,w
  8340  12F0  00AC               	movwf	wait_ms@timeSec
  8341  12F1  0833               	movf	??_solidring_tactiles+1,w
  8342  12F2  00AD               	movwf	wait_ms@timeSec+1
  8343  12F3  3190  20C9  3192   	fcall	_wait_ms
  8344                           
  8345                           ;LEDs.c: 229: set_leds_top(0, 1);
  8346  12F6  3000               	movlw	0
  8347  12F7  0020               	movlb	0	; select bank0
  8348  12F8  00A0               	movwf	set_leds_top@x
  8349  12F9  00A1               	movwf	set_leds_top@x+1
  8350  12FA  3001               	movlw	1
  8351  12FB  00A2               	movwf	set_leds_top@ledState
  8352  12FC  3000               	movlw	0
  8353  12FD  00A3               	movwf	set_leds_top@ledState+1
  8354  12FE  3195  252C  3192   	fcall	_set_leds_top
  8355                           
  8356                           ;LEDs.c: 230: set_leds_bottom(0);
  8357  1301  3000               	movlw	0
  8358  1302  0020               	movlb	0	; select bank0
  8359  1303  00A0               	movwf	set_leds_bottom@x
  8360  1304  00A1               	movwf	set_leds_bottom@x+1
  8361  1305  3192  221D  3192   	fcall	_set_leds_bottom
  8362                           
  8363                           ;LEDs.c: 231: wait_ms(ring_delay);
  8364  1308  0020               	movlb	0	; select bank0
  8365  1309  0834               	movf	solidring_tactiles@ring_delay,w
  8366  130A  00B2               	movwf	??_solidring_tactiles
  8367  130B  01B3               	clrf	??_solidring_tactiles+1
  8368  130C  0832               	movf	??_solidring_tactiles,w
  8369  130D  00AC               	movwf	wait_ms@timeSec
  8370  130E  0833               	movf	??_solidring_tactiles+1,w
  8371  130F  00AD               	movwf	wait_ms@timeSec+1
  8372  1310  3190  20C9         	fcall	_wait_ms
  8373  1312  0008               	return
  8374  1313                     __end_of_solidring_tactiles:	
  8375                           
  8376                           	psect	text10
  8377  1EF6                     __ptext10:	
  8378 ;; *************** function _restoreLEDState *****************
  8379 ;; Defined at:
  8380 ;;		line 89 in file "state_manager.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;		None
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      void 
  8387 ;; Registers used:
  8388 ;;		wreg, status,0
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8398 ;;Total ram usage:        0 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:    2
  8401 ;; This function calls:
  8402 ;;		Nothing
  8403 ;; This function is called by:
  8404 ;;		_showBootSequence
  8405 ;;		_showError_Alternating
  8406 ;;		_show_error
  8407 ;;		_show_cancel
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           
  8412                           ;psect for function _restoreLEDState
  8413  1EF6                     _restoreLEDState:	
  8414                           
  8415                           ;state_manager.c: 90: LATBbits.LATB4 = ledState.tap_A;
  8416                           
  8417                           ;incstack = 0
  8418                           ; Regs used in _restoreLEDState: [wreg+status,0]
  8419  1EF6  0022               	movlb	2	; select bank2
  8420  1EF7  0C34               	rrf	_ledState^(0+256),w
  8421  1EF8  1C03               	skipc
  8422  1EF9  120D               	bcf	13,4	;volatile
  8423  1EFA  1803               	skipnc
  8424  1EFB  160D               	bsf	13,4	;volatile
  8425                           
  8426                           ;state_manager.c: 91: LATBbits.LATB2 = ledState.bypass_A;
  8427  1EFC  0C36               	rrf	(_ledState^(0+256)+2),w
  8428  1EFD  1C03               	skipc
  8429  1EFE  110D               	bcf	13,2	;volatile
  8430  1EFF  1803               	skipnc
  8431  1F00  150D               	bsf	13,2	;volatile
  8432                           
  8433                           ;state_manager.c: 92: LATBbits.LATB5 = ledState.tap_B;
  8434  1F01  0C35               	rrf	(_ledState^(0+256)+1),w
  8435  1F02  1C03               	skipc
  8436  1F03  128D               	bcf	13,5	;volatile
  8437  1F04  1803               	skipnc
  8438  1F05  168D               	bsf	13,5	;volatile
  8439                           
  8440                           ;state_manager.c: 93: LATBbits.LATB3 = ledState.bypass_B;
  8441  1F06  0C37               	rrf	(_ledState^(0+256)+3),w
  8442  1F07  1C03               	skipc
  8443  1F08  118D               	bcf	13,3	;volatile
  8444  1F09  1803               	skipnc
  8445  1F0A  158D               	bsf	13,3	;volatile
  8446  1F0B  0008               	return
  8447  1F0C                     __end_of_restoreLEDState:	
  8448                           
  8449                           	psect	text11
  8450  1EE4                     __ptext11:	
  8451 ;; *************** function _getCurrentLEDState *****************
  8452 ;; Defined at:
  8453 ;;		line 83 in file "state_manager.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;		None
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;		None
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  1    wreg      void 
  8460 ;; Registers used:
  8461 ;;		wreg, status,2
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8471 ;;Total ram usage:        0 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    2
  8474 ;; This function calls:
  8475 ;;		Nothing
  8476 ;; This function is called by:
  8477 ;;		_showBootSequence
  8478 ;;		_showError_Alternating
  8479 ;;		_show_error
  8480 ;;		_show_cancel
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           
  8485                           ;psect for function _getCurrentLEDState
  8486  1EE4                     _getCurrentLEDState:	
  8487                           
  8488                           ;state_manager.c: 84: ledState.tap_A = LATBbits.LATB4;
  8489                           
  8490                           ;incstack = 0
  8491                           ; Regs used in _getCurrentLEDState: [wreg+status,2]
  8492  1EE4  3000               	movlw	0
  8493  1EE5  0022               	movlb	2	; select bank2
  8494  1EE6  1A0D               	btfsc	13,4	;volatile
  8495  1EE7  3001               	movlw	1
  8496  1EE8  00B4               	movwf	_ledState^(0+256)
  8497                           
  8498                           ;state_manager.c: 85: ledState.bypass_A = LATBbits.LATB2 ;
  8499  1EE9  3000               	movlw	0
  8500  1EEA  190D               	btfsc	13,2	;volatile
  8501  1EEB  3001               	movlw	1
  8502  1EEC  00B6               	movwf	(_ledState^(0+256)+2)
  8503                           
  8504                           ;state_manager.c: 86: ledState.tap_B = LATBbits.LATB5 ;
  8505  1EED  3000               	movlw	0
  8506  1EEE  1A8D               	btfsc	13,5	;volatile
  8507  1EEF  3001               	movlw	1
  8508  1EF0  00B5               	movwf	(_ledState^(0+256)+1)
  8509                           
  8510                           ;state_manager.c: 87: ledState.bypass_B = LATBbits.LATB3 ;
  8511  1EF1  3000               	movlw	0
  8512  1EF2  198D               	btfsc	13,3	;volatile
  8513  1EF3  3001               	movlw	1
  8514  1EF4  00B7               	movwf	(_ledState^(0+256)+3)
  8515  1EF5  0008               	return
  8516  1EF6                     __end_of_getCurrentLEDState:	
  8517                           
  8518                           	psect	text12
  8519  0AC2                     __ptext12:	
  8520 ;; *************** function _set_subdivision *****************
  8521 ;; Defined at:
  8522 ;;		line 77 in file "user.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  x               2    6[BANK1 ] int 
  8525 ;;  y               2    8[BANK1 ] int 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  2    6[BANK1 ] int 
  8530 ;; Registers used:
  8531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8537 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8540 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8541 ;;Total ram usage:        4 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    4
  8544 ;; This function calls:
  8545 ;;		___awtoft
  8546 ;;		___ftmul
  8547 ;;		___fttol
  8548 ;; This function is called by:
  8549 ;;		_main
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           
  8554                           ;psect for function _set_subdivision
  8555  0AC2                     _set_subdivision:	
  8556                           
  8557                           ;user.c: 80: switch (y) {
  8558                           
  8559                           ;incstack = 0
  8560                           ; Regs used in _set_subdivision: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8561  0AC2  2BA0               	goto	l4014
  8562  0AC3                     l4002:	
  8563                           ;user.c: 81: case 1:
  8564                           
  8565                           
  8566                           ;user.c: 82: x = x * .75;
  8567  0AC3  0021               	movlb	1	; select bank1
  8568  0AC4  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8569  0AC5  0020               	movlb	0	; select bank0
  8570  0AC6  00A9               	movwf	___awtoft@c+1
  8571  0AC7  0021               	movlb	1	; select bank1
  8572  0AC8  0826               	movf	set_subdivision@x^(0+128),w
  8573  0AC9  0020               	movlb	0	; select bank0
  8574  0ACA  00A8               	movwf	___awtoft@c
  8575  0ACB  3187  27DB  318A   	fcall	___awtoft
  8576  0ACE  0020               	movlb	0	; select bank0
  8577  0ACF  0828               	movf	?___awtoft,w
  8578  0AD0  00B8               	movwf	___ftmul@f2
  8579  0AD1  0829               	movf	?___awtoft+1,w
  8580  0AD2  00B9               	movwf	___ftmul@f2+1
  8581  0AD3  082A               	movf	?___awtoft+2,w
  8582  0AD4  00BA               	movwf	___ftmul@f2+2
  8583  0AD5  3000               	movlw	0
  8584  0AD6  00B5               	movwf	___ftmul@f1
  8585  0AD7  3040               	movlw	64
  8586  0AD8  00B6               	movwf	___ftmul@f1+1
  8587  0AD9  303F               	movlw	63
  8588  0ADA  00B7               	movwf	___ftmul@f1+2
  8589  0ADB  3187  2727  318A   	fcall	___ftmul
  8590  0ADE  0020               	movlb	0	; select bank0
  8591  0ADF  0835               	movf	?___ftmul,w
  8592  0AE0  00E7               	movwf	___fttol@f1
  8593  0AE1  0836               	movf	?___ftmul+1,w
  8594  0AE2  00E8               	movwf	___fttol@f1+1
  8595  0AE3  0837               	movf	?___ftmul+2,w
  8596  0AE4  00E9               	movwf	___fttol@f1+2
  8597  0AE5  3197  2761         	fcall	___fttol
  8598  0AE7  0020               	movlb	0	; select bank0
  8599  0AE8  0868               	movf	?___fttol+1,w
  8600  0AE9  0021               	movlb	1	; select bank1
  8601  0AEA  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8602  0AEB  0020               	movlb	0	; select bank0
  8603  0AEC  0867               	movf	?___fttol,w
  8604  0AED  0021               	movlb	1	; select bank1
  8605  0AEE  00A6               	movwf	set_subdivision@x^(0+128)
  8606                           
  8607                           ;user.c: 83: break;
  8608  0AEF  0008               	return
  8609  0AF0                     l4004:	
  8610                           ;user.c: 84: case 2:
  8611                           
  8612                           
  8613                           ;user.c: 85: x = x * .66666;
  8614  0AF0  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8615  0AF1  0020               	movlb	0	; select bank0
  8616  0AF2  00A9               	movwf	___awtoft@c+1
  8617  0AF3  0021               	movlb	1	; select bank1
  8618  0AF4  0826               	movf	set_subdivision@x^(0+128),w
  8619  0AF5  0020               	movlb	0	; select bank0
  8620  0AF6  00A8               	movwf	___awtoft@c
  8621  0AF7  3187  27DB  318A   	fcall	___awtoft
  8622  0AFA  0020               	movlb	0	; select bank0
  8623  0AFB  0828               	movf	?___awtoft,w
  8624  0AFC  00B8               	movwf	___ftmul@f2
  8625  0AFD  0829               	movf	?___awtoft+1,w
  8626  0AFE  00B9               	movwf	___ftmul@f2+1
  8627  0AFF  082A               	movf	?___awtoft+2,w
  8628  0B00  00BA               	movwf	___ftmul@f2+2
  8629  0B01  30AA               	movlw	170
  8630  0B02  00B5               	movwf	___ftmul@f1
  8631  0B03  302A               	movlw	42
  8632  0B04  00B6               	movwf	___ftmul@f1+1
  8633  0B05  303F               	movlw	63
  8634  0B06  00B7               	movwf	___ftmul@f1+2
  8635  0B07  3187  2727  318A   	fcall	___ftmul
  8636  0B0A  0020               	movlb	0	; select bank0
  8637  0B0B  0835               	movf	?___ftmul,w
  8638  0B0C  00E7               	movwf	___fttol@f1
  8639  0B0D  0836               	movf	?___ftmul+1,w
  8640  0B0E  00E8               	movwf	___fttol@f1+1
  8641  0B0F  0837               	movf	?___ftmul+2,w
  8642  0B10  00E9               	movwf	___fttol@f1+2
  8643  0B11  3197  2761         	fcall	___fttol
  8644  0B13  0020               	movlb	0	; select bank0
  8645  0B14  0868               	movf	?___fttol+1,w
  8646  0B15  0021               	movlb	1	; select bank1
  8647  0B16  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8648  0B17  0020               	movlb	0	; select bank0
  8649  0B18  0867               	movf	?___fttol,w
  8650  0B19  0021               	movlb	1	; select bank1
  8651  0B1A  00A6               	movwf	set_subdivision@x^(0+128)
  8652                           
  8653                           ;user.c: 86: break;
  8654  0B1B  0008               	return
  8655  0B1C                     l4006:	
  8656                           ;user.c: 87: case 3:
  8657                           
  8658                           
  8659                           ;user.c: 88: x = x * .5;
  8660  0B1C  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8661  0B1D  0020               	movlb	0	; select bank0
  8662  0B1E  00A9               	movwf	___awtoft@c+1
  8663  0B1F  0021               	movlb	1	; select bank1
  8664  0B20  0826               	movf	set_subdivision@x^(0+128),w
  8665  0B21  0020               	movlb	0	; select bank0
  8666  0B22  00A8               	movwf	___awtoft@c
  8667  0B23  3187  27DB  318A   	fcall	___awtoft
  8668  0B26  0020               	movlb	0	; select bank0
  8669  0B27  0828               	movf	?___awtoft,w
  8670  0B28  00B8               	movwf	___ftmul@f2
  8671  0B29  0829               	movf	?___awtoft+1,w
  8672  0B2A  00B9               	movwf	___ftmul@f2+1
  8673  0B2B  082A               	movf	?___awtoft+2,w
  8674  0B2C  00BA               	movwf	___ftmul@f2+2
  8675  0B2D  3000               	movlw	0
  8676  0B2E  00B5               	movwf	___ftmul@f1
  8677  0B2F  3000               	movlw	0
  8678  0B30  00B6               	movwf	___ftmul@f1+1
  8679  0B31  303F               	movlw	63
  8680  0B32  00B7               	movwf	___ftmul@f1+2
  8681  0B33  3187  2727  318A   	fcall	___ftmul
  8682  0B36  0020               	movlb	0	; select bank0
  8683  0B37  0835               	movf	?___ftmul,w
  8684  0B38  00E7               	movwf	___fttol@f1
  8685  0B39  0836               	movf	?___ftmul+1,w
  8686  0B3A  00E8               	movwf	___fttol@f1+1
  8687  0B3B  0837               	movf	?___ftmul+2,w
  8688  0B3C  00E9               	movwf	___fttol@f1+2
  8689  0B3D  3197  2761         	fcall	___fttol
  8690  0B3F  0020               	movlb	0	; select bank0
  8691  0B40  0868               	movf	?___fttol+1,w
  8692  0B41  0021               	movlb	1	; select bank1
  8693  0B42  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8694  0B43  0020               	movlb	0	; select bank0
  8695  0B44  0867               	movf	?___fttol,w
  8696  0B45  0021               	movlb	1	; select bank1
  8697  0B46  00A6               	movwf	set_subdivision@x^(0+128)
  8698                           
  8699                           ;user.c: 89: break;
  8700  0B47  0008               	return
  8701  0B48                     l4008:	
  8702                           ;user.c: 90: case 4:
  8703                           
  8704                           
  8705                           ;user.c: 91: x = x * .3333;
  8706  0B48  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8707  0B49  0020               	movlb	0	; select bank0
  8708  0B4A  00A9               	movwf	___awtoft@c+1
  8709  0B4B  0021               	movlb	1	; select bank1
  8710  0B4C  0826               	movf	set_subdivision@x^(0+128),w
  8711  0B4D  0020               	movlb	0	; select bank0
  8712  0B4E  00A8               	movwf	___awtoft@c
  8713  0B4F  3187  27DB  318A   	fcall	___awtoft
  8714  0B52  0020               	movlb	0	; select bank0
  8715  0B53  0828               	movf	?___awtoft,w
  8716  0B54  00B8               	movwf	___ftmul@f2
  8717  0B55  0829               	movf	?___awtoft+1,w
  8718  0B56  00B9               	movwf	___ftmul@f2+1
  8719  0B57  082A               	movf	?___awtoft+2,w
  8720  0B58  00BA               	movwf	___ftmul@f2+2
  8721  0B59  30A6               	movlw	166
  8722  0B5A  00B5               	movwf	___ftmul@f1
  8723  0B5B  30AA               	movlw	170
  8724  0B5C  00B6               	movwf	___ftmul@f1+1
  8725  0B5D  303E               	movlw	62
  8726  0B5E  00B7               	movwf	___ftmul@f1+2
  8727  0B5F  3187  2727  318A   	fcall	___ftmul
  8728  0B62  0020               	movlb	0	; select bank0
  8729  0B63  0835               	movf	?___ftmul,w
  8730  0B64  00E7               	movwf	___fttol@f1
  8731  0B65  0836               	movf	?___ftmul+1,w
  8732  0B66  00E8               	movwf	___fttol@f1+1
  8733  0B67  0837               	movf	?___ftmul+2,w
  8734  0B68  00E9               	movwf	___fttol@f1+2
  8735  0B69  3197  2761         	fcall	___fttol
  8736  0B6B  0020               	movlb	0	; select bank0
  8737  0B6C  0868               	movf	?___fttol+1,w
  8738  0B6D  0021               	movlb	1	; select bank1
  8739  0B6E  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8740  0B6F  0020               	movlb	0	; select bank0
  8741  0B70  0867               	movf	?___fttol,w
  8742  0B71  0021               	movlb	1	; select bank1
  8743  0B72  00A6               	movwf	set_subdivision@x^(0+128)
  8744                           
  8745                           ;user.c: 92: break;
  8746  0B73  0008               	return
  8747  0B74                     l4010:	
  8748                           ;user.c: 93: case 5:
  8749                           
  8750                           
  8751                           ;user.c: 94: x = x * .25;
  8752  0B74  0827               	movf	(set_subdivision@x+1)^(0+128),w
  8753  0B75  0020               	movlb	0	; select bank0
  8754  0B76  00A9               	movwf	___awtoft@c+1
  8755  0B77  0021               	movlb	1	; select bank1
  8756  0B78  0826               	movf	set_subdivision@x^(0+128),w
  8757  0B79  0020               	movlb	0	; select bank0
  8758  0B7A  00A8               	movwf	___awtoft@c
  8759  0B7B  3187  27DB  318A   	fcall	___awtoft
  8760  0B7E  0020               	movlb	0	; select bank0
  8761  0B7F  0828               	movf	?___awtoft,w
  8762  0B80  00B8               	movwf	___ftmul@f2
  8763  0B81  0829               	movf	?___awtoft+1,w
  8764  0B82  00B9               	movwf	___ftmul@f2+1
  8765  0B83  082A               	movf	?___awtoft+2,w
  8766  0B84  00BA               	movwf	___ftmul@f2+2
  8767  0B85  3000               	movlw	0
  8768  0B86  00B5               	movwf	___ftmul@f1
  8769  0B87  3080               	movlw	128
  8770  0B88  00B6               	movwf	___ftmul@f1+1
  8771  0B89  303E               	movlw	62
  8772  0B8A  00B7               	movwf	___ftmul@f1+2
  8773  0B8B  3187  2727  318A   	fcall	___ftmul
  8774  0B8E  0020               	movlb	0	; select bank0
  8775  0B8F  0835               	movf	?___ftmul,w
  8776  0B90  00E7               	movwf	___fttol@f1
  8777  0B91  0836               	movf	?___ftmul+1,w
  8778  0B92  00E8               	movwf	___fttol@f1+1
  8779  0B93  0837               	movf	?___ftmul+2,w
  8780  0B94  00E9               	movwf	___fttol@f1+2
  8781  0B95  3197  2761         	fcall	___fttol
  8782  0B97  0020               	movlb	0	; select bank0
  8783  0B98  0868               	movf	?___fttol+1,w
  8784  0B99  0021               	movlb	1	; select bank1
  8785  0B9A  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  8786  0B9B  0020               	movlb	0	; select bank0
  8787  0B9C  0867               	movf	?___fttol,w
  8788  0B9D  0021               	movlb	1	; select bank1
  8789  0B9E  00A6               	movwf	set_subdivision@x^(0+128)
  8790                           
  8791                           ;user.c: 99: }
  8792                           
  8793                           ;user.c: 98: break;
  8794                           
  8795                           ;user.c: 96: case 6:
  8796                           
  8797                           ;user.c: 95: break;
  8798  0B9F  0008               	return
  8799  0BA0                     l4014:	
  8800                           
  8801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8802                           ; Switch size 1, requested type "space"
  8803                           ; Number of cases is 1, Range of values is 0 to 0
  8804                           ; switch strategies available:
  8805                           ; Name         Instructions Cycles
  8806                           ; simple_byte            4     3 (average)
  8807                           ; direct_byte            8     6 (fixed)
  8808                           ; jumptable            260     6 (fixed)
  8809                           ;	Chosen strategy is simple_byte
  8810  0BA0  0021               	movlb	1	; select bank1
  8811  0BA1  0829               	movf	(set_subdivision@y+1)^(0+128),w
  8812  0BA2  3A00               	xorlw	0	; case 0
  8813  0BA3  1903               	skipnz
  8814  0BA4  2BA6               	goto	l4594
  8815  0BA5  2BBA               	goto	l490
  8816  0BA6                     l4594:	
  8817                           
  8818                           ; Switch size 1, requested type "space"
  8819                           ; Number of cases is 6, Range of values is 1 to 6
  8820                           ; switch strategies available:
  8821                           ; Name         Instructions Cycles
  8822                           ; simple_byte           19    10 (average)
  8823                           ; direct_byte           21     9 (fixed)
  8824                           ; jumptable            263     9 (fixed)
  8825                           ;	Chosen strategy is simple_byte
  8826  0BA6  0828               	movf	set_subdivision@y^(0+128),w
  8827  0BA7  3A01               	xorlw	1	; case 1
  8828  0BA8  1903               	skipnz
  8829  0BA9  2AC3               	goto	l4002
  8830  0BAA  3A03               	xorlw	3	; case 2
  8831  0BAB  1903               	skipnz
  8832  0BAC  2AF0               	goto	l4004
  8833  0BAD  3A01               	xorlw	1	; case 3
  8834  0BAE  1903               	skipnz
  8835  0BAF  2B1C               	goto	l4006
  8836  0BB0  3A07               	xorlw	7	; case 4
  8837  0BB1  1903               	skipnz
  8838  0BB2  2B48               	goto	l4008
  8839  0BB3  3A01               	xorlw	1	; case 5
  8840  0BB4  1903               	skipnz
  8841  0BB5  2B74               	goto	l4010
  8842  0BB6  3A03               	xorlw	3	; case 6
  8843  0BB7  1903               	skipnz
  8844  0BB8  2BBA               	goto	l490
  8845  0BB9  2BBA               	goto	l490
  8846  0BBA                     l490:	
  8847                           
  8848                           ;user.c: 100: return x;
  8849  0BBA  0008               	return
  8850  0BBB                     __end_of_set_subdivision:	
  8851                           
  8852                           	psect	text13
  8853  1761                     __ptext13:	
  8854 ;; *************** function ___fttol *****************
  8855 ;; Defined at:
  8856 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  f1              3   71[BANK0 ] float 
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;  lval            4    1[BANK1 ] unsigned long 
  8861 ;;  exp1            1    5[BANK1 ] unsigned char 
  8862 ;;  sign1           1    0[BANK1 ] unsigned char 
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  4   71[BANK0 ] long 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8872 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8873 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8874 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8875 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8876 ;;Total ram usage:       14 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:    2
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_main
  8883 ;;		_set_subdivision
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           
  8888                           ;psect for function ___fttol
  8889  1761                     ___fttol:	
  8890                           
  8891                           ;incstack = 0
  8892                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8893  1761  0020               	movlb	0	; select bank0
  8894  1762  0867               	movf	___fttol@f1,w
  8895  1763  00EB               	movwf	??___fttol
  8896  1764  0868               	movf	___fttol@f1+1,w
  8897  1765  00EC               	movwf	??___fttol+1
  8898  1766  0869               	movf	___fttol@f1+2,w
  8899  1767  00ED               	movwf	??___fttol+2
  8900  1768  1003               	clrc
  8901  1769  0D6C               	rlf	??___fttol+1,w
  8902  176A  0D6D               	rlf	??___fttol+2,w
  8903  176B  00EE               	movwf	??___fttol+3
  8904  176C  086E               	movf	??___fttol+3,w
  8905  176D  0021               	movlb	1	; select bank1
  8906  176E  00A5               	movwf	___fttol@exp1^(0+128)
  8907  176F  0825               	movf	___fttol@exp1^(0+128),w
  8908  1770  1D03               	btfss	3,2
  8909  1771  2F7C               	goto	l3632
  8910  1772  3000               	movlw	0
  8911  1773  0020               	movlb	0	; select bank0
  8912  1774  00EA               	movwf	?___fttol+3
  8913  1775  3000               	movlw	0
  8914  1776  00E9               	movwf	?___fttol+2
  8915  1777  3000               	movlw	0
  8916  1778  00E8               	movwf	?___fttol+1
  8917  1779  3000               	movlw	0
  8918  177A  00E7               	movwf	?___fttol
  8919  177B  0008               	return
  8920  177C                     l3632:	
  8921  177C  0020               	movlb	0	; select bank0
  8922  177D  0867               	movf	___fttol@f1,w
  8923  177E  00EB               	movwf	??___fttol
  8924  177F  0868               	movf	___fttol@f1+1,w
  8925  1780  00EC               	movwf	??___fttol+1
  8926  1781  0869               	movf	___fttol@f1+2,w
  8927  1782  00ED               	movwf	??___fttol+2
  8928  1783  3017               	movlw	23
  8929  1784                     u3175:	
  8930  1784  36ED               	lsrf	??___fttol+2,f
  8931  1785  0CEC               	rrf	??___fttol+1,f
  8932  1786  0CEB               	rrf	??___fttol,f
  8933  1787  0B89               	decfsz	9,f
  8934  1788  2F84               	goto	u3175
  8935  1789  086B               	movf	??___fttol,w
  8936  178A  00EE               	movwf	??___fttol+3
  8937  178B  086E               	movf	??___fttol+3,w
  8938  178C  0021               	movlb	1	; select bank1
  8939  178D  00A0               	movwf	___fttol@sign1^(0+128)
  8940  178E  0020               	movlb	0	; select bank0
  8941  178F  17E8               	bsf	___fttol@f1+1,7
  8942  1790  30FF               	movlw	255
  8943  1791  05E7               	andwf	___fttol@f1,f
  8944  1792  30FF               	movlw	255
  8945  1793  05E8               	andwf	___fttol@f1+1,f
  8946  1794  3000               	movlw	0
  8947  1795  05E9               	andwf	___fttol@f1+2,f
  8948  1796  0867               	movf	___fttol@f1,w
  8949  1797  0021               	movlb	1	; select bank1
  8950  1798  00A1               	movwf	___fttol@lval^(0+128)
  8951  1799  0020               	movlb	0	; select bank0
  8952  179A  0868               	movf	___fttol@f1+1,w
  8953  179B  0021               	movlb	1	; select bank1
  8954  179C  00A2               	movwf	(___fttol@lval^(0+128)+1)
  8955  179D  0020               	movlb	0	; select bank0
  8956  179E  0869               	movf	___fttol@f1+2,w
  8957  179F  0021               	movlb	1	; select bank1
  8958  17A0  00A3               	movwf	(___fttol@lval^(0+128)+2)
  8959  17A1  01A4               	clrf	(___fttol@lval^(0+128)+3)
  8960  17A2  308E               	movlw	142
  8961  17A3  02A5               	subwf	___fttol@exp1^(0+128),f
  8962  17A4  1FA5               	btfss	___fttol@exp1^(0+128),7
  8963  17A5  2FC6               	goto	l3652
  8964  17A6  0825               	movf	___fttol@exp1^(0+128),w
  8965  17A7  3A80               	xorlw	128
  8966  17A8  3E8F               	addlw	143
  8967  17A9  1803               	skipnc
  8968  17AA  2FB5               	goto	l3650
  8969  17AB  3000               	movlw	0
  8970  17AC  0020               	movlb	0	; select bank0
  8971  17AD  00EA               	movwf	?___fttol+3
  8972  17AE  3000               	movlw	0
  8973  17AF  00E9               	movwf	?___fttol+2
  8974  17B0  3000               	movlw	0
  8975  17B1  00E8               	movwf	?___fttol+1
  8976  17B2  3000               	movlw	0
  8977  17B3  00E7               	movwf	?___fttol
  8978  17B4  0008               	return
  8979  17B5                     l3650:	
  8980  17B5  3001               	movlw	1
  8981  17B6                     u3205:	
  8982  17B6  0021               	movlb	1	; select bank1
  8983  17B7  36A4               	lsrf	(___fttol@lval+3)^(0+128),f
  8984  17B8  0CA3               	rrf	(___fttol@lval+2)^(0+128),f
  8985  17B9  0CA2               	rrf	(___fttol@lval+1)^(0+128),f
  8986  17BA  0CA1               	rrf	___fttol@lval^(0+128),f
  8987  17BB  0B89               	decfsz	9,f
  8988  17BC  2FB6               	goto	u3205
  8989  17BD  3001               	movlw	1
  8990  17BE  0020               	movlb	0	; select bank0
  8991  17BF  00EB               	movwf	??___fttol
  8992  17C0  086B               	movf	??___fttol,w
  8993  17C1  0021               	movlb	1	; select bank1
  8994  17C2  07A5               	addwf	___fttol@exp1^(0+128),f
  8995  17C3  1903               	btfsc	3,2
  8996  17C4  2FE2               	goto	l3660
  8997  17C5  2FB5               	goto	l3650
  8998  17C6                     l3652:	
  8999  17C6  3018               	movlw	24
  9000  17C7  0225               	subwf	___fttol@exp1^(0+128),w
  9001  17C8  1C03               	skipc
  9002  17C9  2FDE               	goto	l1480
  9003  17CA  3000               	movlw	0
  9004  17CB  0020               	movlb	0	; select bank0
  9005  17CC  00EA               	movwf	?___fttol+3
  9006  17CD  3000               	movlw	0
  9007  17CE  00E9               	movwf	?___fttol+2
  9008  17CF  3000               	movlw	0
  9009  17D0  00E8               	movwf	?___fttol+1
  9010  17D1  3000               	movlw	0
  9011  17D2  00E7               	movwf	?___fttol
  9012  17D3  0008               	return
  9013  17D4                     l3658:	
  9014  17D4  3001               	movlw	1
  9015  17D5                     u3235:	
  9016  17D5  0021               	movlb	1	; select bank1
  9017  17D6  35A1               	lslf	___fttol@lval^(0+128),f
  9018  17D7  0DA2               	rlf	(___fttol@lval+1)^(0+128),f
  9019  17D8  0DA3               	rlf	(___fttol@lval+2)^(0+128),f
  9020  17D9  0DA4               	rlf	(___fttol@lval+3)^(0+128),f
  9021  17DA  0B89               	decfsz	9,f
  9022  17DB  2FD5               	goto	u3235
  9023  17DC  3001               	movlw	1
  9024  17DD  02A5               	subwf	___fttol@exp1^(0+128),f
  9025  17DE                     l1480:	
  9026  17DE  0021               	movlb	1	; select bank1
  9027  17DF  0825               	movf	___fttol@exp1^(0+128),w
  9028  17E0  1D03               	btfss	3,2
  9029  17E1  2FD4               	goto	l3658
  9030  17E2                     l3660:	
  9031  17E2  0820               	movf	___fttol@sign1^(0+128),w
  9032  17E3  1903               	btfsc	3,2
  9033  17E4  2FF0               	goto	l3664
  9034  17E5  09A1               	comf	___fttol@lval^(0+128),f
  9035  17E6  09A2               	comf	(___fttol@lval+1)^(0+128),f
  9036  17E7  09A3               	comf	(___fttol@lval+2)^(0+128),f
  9037  17E8  09A4               	comf	(___fttol@lval+3)^(0+128),f
  9038  17E9  0AA1               	incf	___fttol@lval^(0+128),f
  9039  17EA  1903               	skipnz
  9040  17EB  0AA2               	incf	(___fttol@lval+1)^(0+128),f
  9041  17EC  1903               	skipnz
  9042  17ED  0AA3               	incf	(___fttol@lval+2)^(0+128),f
  9043  17EE  1903               	skipnz
  9044  17EF  0AA4               	incf	(___fttol@lval+3)^(0+128),f
  9045  17F0                     l3664:	
  9046  17F0  0824               	movf	(___fttol@lval+3)^(0+128),w
  9047  17F1  0020               	movlb	0	; select bank0
  9048  17F2  00EA               	movwf	?___fttol+3
  9049  17F3  0021               	movlb	1	; select bank1
  9050  17F4  0823               	movf	(___fttol@lval+2)^(0+128),w
  9051  17F5  0020               	movlb	0	; select bank0
  9052  17F6  00E9               	movwf	?___fttol+2
  9053  17F7  0021               	movlb	1	; select bank1
  9054  17F8  0822               	movf	(___fttol@lval+1)^(0+128),w
  9055  17F9  0020               	movlb	0	; select bank0
  9056  17FA  00E8               	movwf	?___fttol+1
  9057  17FB  0021               	movlb	1	; select bank1
  9058  17FC  0821               	movf	___fttol@lval^(0+128),w
  9059  17FD  0020               	movlb	0	; select bank0
  9060  17FE  00E7               	movwf	?___fttol
  9061  17FF  0008               	return
  9062  1800                     __end_of___fttol:	
  9063                           
  9064                           	psect	text14
  9065  07DB                     __ptext14:	
  9066 ;; *************** function ___awtoft *****************
  9067 ;; Defined at:
  9068 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  c               2    8[BANK0 ] int 
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;  sign            1   13[BANK0 ] unsigned char 
  9073 ;; Return value:  Size  Location     Type
  9074 ;;                  3    8[BANK0 ] float 
  9075 ;; Registers used:
  9076 ;;		wreg, status,2, status,0, pclath, cstack
  9077 ;; Tracked objects:
  9078 ;;		On entry : 0/0
  9079 ;;		On exit  : 0/0
  9080 ;;		Unchanged: 0/0
  9081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9082 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9085 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9086 ;;Total ram usage:        6 bytes
  9087 ;; Hardware stack levels used:    1
  9088 ;; Hardware stack levels required when called:    3
  9089 ;; This function calls:
  9090 ;;		___ftpack
  9091 ;; This function is called by:
  9092 ;;		_main
  9093 ;;		_set_subdivision
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           
  9098                           ;psect for function ___awtoft
  9099  07DB                     ___awtoft:	
  9100                           
  9101                           ;incstack = 0
  9102                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9103  07DB  0020               	movlb	0	; select bank0
  9104  07DC  01AD               	clrf	___awtoft@sign
  9105  07DD  1FA9               	btfss	___awtoft@c+1,7
  9106  07DE  2FE6               	goto	l3452
  9107  07DF  09A8               	comf	___awtoft@c,f
  9108  07E0  09A9               	comf	___awtoft@c+1,f
  9109  07E1  0AA8               	incf	___awtoft@c,f
  9110  07E2  1903               	skipnz
  9111  07E3  0AA9               	incf	___awtoft@c+1,f
  9112  07E4  01AD               	clrf	___awtoft@sign
  9113  07E5  0AAD               	incf	___awtoft@sign,f
  9114  07E6                     l3452:	
  9115  07E6  0828               	movf	___awtoft@c,w
  9116  07E7  00A0               	movwf	___ftpack@arg
  9117  07E8  0829               	movf	___awtoft@c+1,w
  9118  07E9  00A1               	movwf	___ftpack@arg+1
  9119  07EA  01A2               	clrf	___ftpack@arg+2
  9120  07EB  308E               	movlw	142
  9121  07EC  00AB               	movwf	??___awtoft
  9122  07ED  082B               	movf	??___awtoft,w
  9123  07EE  00A3               	movwf	___ftpack@exp
  9124  07EF  082D               	movf	___awtoft@sign,w
  9125  07F0  00AC               	movwf	??___awtoft+1
  9126  07F1  082C               	movf	??___awtoft+1,w
  9127  07F2  00A4               	movwf	___ftpack@sign
  9128  07F3  3195  2580         	fcall	___ftpack
  9129  07F5  0020               	movlb	0	; select bank0
  9130  07F6  0820               	movf	?___ftpack,w
  9131  07F7  00A8               	movwf	?___awtoft
  9132  07F8  0821               	movf	?___ftpack+1,w
  9133  07F9  00A9               	movwf	?___awtoft+1
  9134  07FA  0822               	movf	?___ftpack+2,w
  9135  07FB  00AA               	movwf	?___awtoft+2
  9136  07FC  0008               	return
  9137  07FD                     __end_of___awtoft:	
  9138                           
  9139                           	psect	text15
  9140  10FB                     __ptext15:	
  9141 ;; *************** function _read_top_tactile *****************
  9142 ;; Defined at:
  9143 ;;		line 36 in file "tactiles.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;		None
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;		None
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  1    wreg      void 
  9150 ;; Registers used:
  9151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9161 ;;Total ram usage:        1 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; Hardware stack levels required when called:    4
  9164 ;; This function calls:
  9165 ;;		_set_leds_top
  9166 ;;		_wait_ms
  9167 ;; This function is called by:
  9168 ;;		_main
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           
  9173                           ;psect for function _read_top_tactile
  9174  10FB                     _read_top_tactile:	
  9175                           
  9176                           ;tactiles.c: 44: if (PORTDbits.RD5 == 0) {
  9177                           
  9178                           ;incstack = 0
  9179                           ; Regs used in _read_top_tactile: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9180  10FB  0020               	movlb	0	; select bank0
  9181  10FC  1A8F               	btfsc	15,5	;volatile
  9182  10FD  0008               	return
  9183                           
  9184                           ;tactiles.c: 45: top_push_state = top_push_state + 1;
  9185  10FE  0021               	movlb	1	; select bank1
  9186  10FF  0855               	movf	_top_push_state^(0+128),w
  9187  1100  3E01               	addlw	1
  9188  1101  00D5               	movwf	_top_push_state^(0+128)
  9189  1102  3000               	movlw	0
  9190  1103  3D56               	addwfc	(_top_push_state+1)^(0+128),w
  9191  1104  00D6               	movwf	(_top_push_state+1)^(0+128)
  9192                           
  9193                           ;tactiles.c: 46: if (top_push_state >= 7) {
  9194  1105  0856               	movf	(_top_push_state+1)^(0+128),w
  9195  1106  3A80               	xorlw	128
  9196  1107  0020               	movlb	0	; select bank0
  9197  1108  00B2               	movwf	??_read_top_tactile
  9198  1109  3080               	movlw	128
  9199  110A  0232               	subwf	??_read_top_tactile,w
  9200  110B  1D03               	skipz
  9201  110C  2910               	goto	u3355
  9202  110D  3007               	movlw	7
  9203  110E  0021               	movlb	1	; select bank1
  9204  110F  0255               	subwf	_top_push_state^(0+128),w
  9205  1110                     u3355:	
  9206  1110  1C03               	skipc
  9207  1111  2917               	goto	l3738
  9208                           
  9209                           ;tactiles.c: 47: top_push_state = 1;
  9210  1112  3001               	movlw	1
  9211  1113  0021               	movlb	1	; select bank1
  9212  1114  00D5               	movwf	_top_push_state^(0+128)
  9213  1115  3000               	movlw	0
  9214  1116  00D6               	movwf	(_top_push_state^(0+128)+1)
  9215  1117                     l3738:	
  9216                           
  9217                           ;tactiles.c: 48: }
  9218                           ;tactiles.c: 49: set_leds_top(top_push_state, 1);
  9219  1117  0021               	movlb	1	; select bank1
  9220  1118  0856               	movf	(_top_push_state+1)^(0+128),w
  9221  1119  0020               	movlb	0	; select bank0
  9222  111A  00A1               	movwf	set_leds_top@x+1
  9223  111B  0021               	movlb	1	; select bank1
  9224  111C  0855               	movf	_top_push_state^(0+128),w
  9225  111D  0020               	movlb	0	; select bank0
  9226  111E  00A0               	movwf	set_leds_top@x
  9227  111F  3001               	movlw	1
  9228  1120  00A2               	movwf	set_leds_top@ledState
  9229  1121  3000               	movlw	0
  9230  1122  00A3               	movwf	set_leds_top@ledState+1
  9231  1123  3195  252C  3190   	fcall	_set_leds_top
  9232                           
  9233                           ;tactiles.c: 50: delay_time_changed = 1;
  9234  1126  3001               	movlw	1
  9235  1127  0022               	movlb	2	; select bank2
  9236  1128  00E5               	movwf	_delay_time_changed^(0+256)
  9237  1129  3000               	movlw	0
  9238  112A  00E6               	movwf	(_delay_time_changed^(0+256)+1)
  9239  112B                     l799:	
  9240                           ;tactiles.c: 52: while (PORTDbits.RD5 == 0) {
  9241                           
  9242  112B  0020               	movlb	0	; select bank0
  9243  112C  1E8F               	btfss	15,5	;volatile
  9244  112D  292B               	goto	l799
  9245                           
  9246                           ;tactiles.c: 53: }
  9247                           ;tactiles.c: 54: wait_ms(20);
  9248  112E  3014               	movlw	20
  9249  112F  00AC               	movwf	wait_ms@timeSec
  9250  1130  3000               	movlw	0
  9251  1131  00AD               	movwf	wait_ms@timeSec+1
  9252  1132  3190  20C9         	fcall	_wait_ms
  9253  1134  0008               	return
  9254  1135                     __end_of_read_top_tactile:	
  9255                           
  9256                           	psect	text16
  9257  1098                     __ptext16:	
  9258 ;; *************** function _read_bottom_tactile *****************
  9259 ;; Defined at:
  9260 ;;		line 16 in file "tactiles.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;		None
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;		None
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  1    wreg      void 
  9267 ;; Registers used:
  9268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9276 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9277 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9278 ;;Total ram usage:        1 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:    4
  9281 ;; This function calls:
  9282 ;;		_set_leds_bottom
  9283 ;;		_wait_ms
  9284 ;; This function is called by:
  9285 ;;		_main
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           
  9290                           ;psect for function _read_bottom_tactile
  9291  1098                     _read_bottom_tactile:	
  9292                           
  9293                           ;tactiles.c: 23: if (PORTDbits.RD6 == 0) {
  9294                           
  9295                           ;incstack = 0
  9296                           ; Regs used in _read_bottom_tactile: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9297  1098  0020               	movlb	0	; select bank0
  9298  1099  1B0F               	btfsc	15,6	;volatile
  9299  109A  0008               	return
  9300                           
  9301                           ;tactiles.c: 24: bottom_push_state = bottom_push_state + 1;
  9302  109B  0021               	movlb	1	; select bank1
  9303  109C  0847               	movf	_bottom_push_state^(0+128),w
  9304  109D  3E01               	addlw	1
  9305  109E  00C7               	movwf	_bottom_push_state^(0+128)
  9306  109F  3000               	movlw	0
  9307  10A0  3D48               	addwfc	(_bottom_push_state+1)^(0+128),w
  9308  10A1  00C8               	movwf	(_bottom_push_state+1)^(0+128)
  9309                           
  9310                           ;tactiles.c: 25: if (bottom_push_state > 6) {
  9311  10A2  0848               	movf	(_bottom_push_state+1)^(0+128),w
  9312  10A3  3A80               	xorlw	128
  9313  10A4  0020               	movlb	0	; select bank0
  9314  10A5  00B2               	movwf	??_read_bottom_tactile
  9315  10A6  3080               	movlw	128
  9316  10A7  0232               	subwf	??_read_bottom_tactile,w
  9317  10A8  1D03               	skipz
  9318  10A9  28AD               	goto	u3325
  9319  10AA  3007               	movlw	7
  9320  10AB  0021               	movlb	1	; select bank1
  9321  10AC  0247               	subwf	_bottom_push_state^(0+128),w
  9322  10AD                     u3325:	
  9323  10AD  1C03               	skipc
  9324  10AE  28B4               	goto	l3726
  9325                           
  9326                           ;tactiles.c: 26: bottom_push_state = 1;
  9327  10AF  3001               	movlw	1
  9328  10B0  0021               	movlb	1	; select bank1
  9329  10B1  00C7               	movwf	_bottom_push_state^(0+128)
  9330  10B2  3000               	movlw	0
  9331  10B3  00C8               	movwf	(_bottom_push_state^(0+128)+1)
  9332  10B4                     l3726:	
  9333                           
  9334                           ;tactiles.c: 27: }
  9335                           ;tactiles.c: 28: set_leds_bottom(bottom_push_state);
  9336  10B4  0021               	movlb	1	; select bank1
  9337  10B5  0848               	movf	(_bottom_push_state+1)^(0+128),w
  9338  10B6  0020               	movlb	0	; select bank0
  9339  10B7  00A1               	movwf	set_leds_bottom@x+1
  9340  10B8  0021               	movlb	1	; select bank1
  9341  10B9  0847               	movf	_bottom_push_state^(0+128),w
  9342  10BA  0020               	movlb	0	; select bank0
  9343  10BB  00A0               	movwf	set_leds_bottom@x
  9344  10BC  3192  221D  3190   	fcall	_set_leds_bottom
  9345  10BF                     l791:	
  9346                           ;tactiles.c: 30: while (PORTDbits.RD6 == 0) {
  9347                           
  9348  10BF  0020               	movlb	0	; select bank0
  9349  10C0  1F0F               	btfss	15,6	;volatile
  9350  10C1  28BF               	goto	l791
  9351                           
  9352                           ;tactiles.c: 31: }
  9353                           ;tactiles.c: 32: wait_ms(20);
  9354  10C2  3014               	movlw	20
  9355  10C3  00AC               	movwf	wait_ms@timeSec
  9356  10C4  3000               	movlw	0
  9357  10C5  00AD               	movwf	wait_ms@timeSec+1
  9358  10C6  3190  20C9         	fcall	_wait_ms
  9359  10C8  0008               	return
  9360  10C9                     __end_of_read_bottom_tactile:	
  9361                           
  9362                           	psect	text17
  9363  1295                     __ptext17:	
  9364 ;; *************** function _modulation *****************
  9365 ;; Defined at:
  9366 ;;		line 169 in file "user.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;  x               2   21[BANK0 ] int 
  9369 ;;  y               2   23[BANK0 ] int 
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;		None
  9372 ;; Return value:  Size  Location     Type
  9373 ;;                  2   21[BANK0 ] int 
  9374 ;; Registers used:
  9375 ;;		wreg, status,2, status,0, pclath, cstack
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9381 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9383 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9384 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9385 ;;Total ram usage:       12 bytes
  9386 ;; Hardware stack levels used:    1
  9387 ;; Hardware stack levels required when called:    3
  9388 ;; This function calls:
  9389 ;;		___aldiv
  9390 ;;		___wmul
  9391 ;; This function is called by:
  9392 ;;		_main
  9393 ;; This function uses a non-reentrant model
  9394 ;;
  9395                           
  9396                           
  9397                           ;psect for function _modulation
  9398  1295                     _modulation:	
  9399                           
  9400                           ;user.c: 171: x = (127500 + (y * x)) / 1000;
  9401                           
  9402                           ;incstack = 0
  9403                           ; Regs used in _modulation: [wreg+status,2+status,0+pclath+cstack]
  9404  1295  3000               	movlw	0
  9405  1296  0020               	movlb	0	; select bank0
  9406  1297  00A9               	movwf	___aldiv@divisor+3
  9407  1298  3000               	movlw	0
  9408  1299  00A8               	movwf	___aldiv@divisor+2
  9409  129A  3003               	movlw	3
  9410  129B  00A7               	movwf	___aldiv@divisor+1
  9411  129C  30E8               	movlw	232
  9412  129D  00A6               	movwf	___aldiv@divisor
  9413  129E  300C               	movlw	12
  9414  129F  00B9               	movwf	??_modulation
  9415  12A0  30F2               	movlw	242
  9416  12A1  00BA               	movwf	??_modulation+1
  9417  12A2  3001               	movlw	1
  9418  12A3  00BB               	movwf	??_modulation+2
  9419  12A4  3000               	movlw	0
  9420  12A5  00BC               	movwf	??_modulation+3
  9421  12A6  0838               	movf	modulation@y+1,w
  9422  12A7  00A1               	movwf	___wmul@multiplier+1
  9423  12A8  0837               	movf	modulation@y,w
  9424  12A9  00A0               	movwf	___wmul@multiplier
  9425  12AA  0836               	movf	modulation@x+1,w
  9426  12AB  00A3               	movwf	___wmul@multiplicand+1
  9427  12AC  0835               	movf	modulation@x,w
  9428  12AD  00A2               	movwf	___wmul@multiplicand
  9429  12AE  319F  2756  3192   	fcall	___wmul
  9430  12B1  0020               	movlb	0	; select bank0
  9431  12B2  0820               	movf	?___wmul,w
  9432  12B3  00BD               	movwf	??_modulation+4
  9433  12B4  0821               	movf	?___wmul+1,w
  9434  12B5  00BE               	movwf	??_modulation+5
  9435  12B6  3000               	movlw	0
  9436  12B7  1BBE               	btfsc	??_modulation+5,7
  9437  12B8  30FF               	movlw	255
  9438  12B9  00BF               	movwf	??_modulation+6
  9439  12BA  00C0               	movwf	??_modulation+7
  9440  12BB  083D               	movf	??_modulation+4,w
  9441  12BC  07B9               	addwf	??_modulation,f
  9442  12BD  083E               	movf	??_modulation+5,w
  9443  12BE  3DBA               	addwfc	??_modulation+1,f
  9444  12BF  083F               	movf	??_modulation+6,w
  9445  12C0  3DBB               	addwfc	??_modulation+2,f
  9446  12C1  0840               	movf	??_modulation+7,w
  9447  12C2  3DBC               	addwfc	??_modulation+3,f
  9448  12C3  083C               	movf	??_modulation+3,w
  9449  12C4  00AD               	movwf	___aldiv@dividend+3
  9450  12C5  083B               	movf	??_modulation+2,w
  9451  12C6  00AC               	movwf	___aldiv@dividend+2
  9452  12C7  083A               	movf	??_modulation+1,w
  9453  12C8  00AB               	movwf	___aldiv@dividend+1
  9454  12C9  0839               	movf	??_modulation,w
  9455  12CA  00AA               	movwf	___aldiv@dividend
  9456  12CB  3196  2654         	fcall	___aldiv
  9457  12CD  0020               	movlb	0	; select bank0
  9458  12CE  0827               	movf	?___aldiv+1,w
  9459  12CF  00B6               	movwf	modulation@x+1
  9460  12D0  0826               	movf	?___aldiv,w
  9461  12D1  00B5               	movwf	modulation@x
  9462                           
  9463                           ;user.c: 172: return x;
  9464  12D2  0008               	return
  9465  12D3                     __end_of_modulation:	
  9466                           
  9467                           	psect	text18
  9468  1F56                     __ptext18:	
  9469 ;; *************** function ___wmul *****************
  9470 ;; Defined at:
  9471 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9474 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;  product         2    4[BANK0 ] unsigned int 
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  2    0[BANK0 ] unsigned int 
  9479 ;; Registers used:
  9480 ;;		wreg, status,2, status,0
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9486 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9487 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9489 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9490 ;;Total ram usage:        6 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:    2
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_modulation
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           
  9501                           ;psect for function ___wmul
  9502  1F56                     ___wmul:	
  9503                           
  9504                           ;incstack = 0
  9505                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9506  1F56  0020               	movlb	0	; select bank0
  9507  1F57  01A4               	clrf	___wmul@product
  9508  1F58  01A5               	clrf	___wmul@product+1
  9509  1F59                     l3392:	
  9510  1F59  1C20               	btfss	___wmul@multiplier,0
  9511  1F5A  2F5F               	goto	l1228
  9512  1F5B  0822               	movf	___wmul@multiplicand,w
  9513  1F5C  07A4               	addwf	___wmul@product,f
  9514  1F5D  0823               	movf	___wmul@multiplicand+1,w
  9515  1F5E  3DA5               	addwfc	___wmul@product+1,f
  9516  1F5F                     l1228:	
  9517  1F5F  3001               	movlw	1
  9518  1F60                     u2585:	
  9519  1F60  35A2               	lslf	___wmul@multiplicand,f
  9520  1F61  0DA3               	rlf	___wmul@multiplicand+1,f
  9521  1F62  0B89               	decfsz	9,f
  9522  1F63  2F60               	goto	u2585
  9523  1F64  3001               	movlw	1
  9524  1F65                     u2595:	
  9525  1F65  36A1               	lsrf	___wmul@multiplier+1,f
  9526  1F66  0CA0               	rrf	___wmul@multiplier,f
  9527  1F67  0B89               	decfsz	9,f
  9528  1F68  2F65               	goto	u2595
  9529  1F69  0820               	movf	___wmul@multiplier,w
  9530  1F6A  0421               	iorwf	___wmul@multiplier+1,w
  9531  1F6B  1D03               	btfss	3,2
  9532  1F6C  2F59               	goto	l3392
  9533  1F6D  0825               	movf	___wmul@product+1,w
  9534  1F6E  00A1               	movwf	?___wmul+1
  9535  1F6F  0824               	movf	___wmul@product,w
  9536  1F70  00A0               	movwf	?___wmul
  9537  1F71  0008               	return
  9538  1F72                     __end_of___wmul:	
  9539                           
  9540                           	psect	text19
  9541  1654                     __ptext19:	
  9542 ;; *************** function ___aldiv *****************
  9543 ;; Defined at:
  9544 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  divisor         4    6[BANK0 ] long 
  9547 ;;  dividend        4   10[BANK0 ] long 
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;  quotient        4   17[BANK0 ] long 
  9550 ;;  sign            1   16[BANK0 ] unsigned char 
  9551 ;;  counter         1   15[BANK0 ] unsigned char 
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  4    6[BANK0 ] long 
  9554 ;; Registers used:
  9555 ;;		wreg, status,2, status,0
  9556 ;; Tracked objects:
  9557 ;;		On entry : 0/0
  9558 ;;		On exit  : 0/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9561 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9562 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9563 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9564 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9565 ;;Total ram usage:       15 bytes
  9566 ;; Hardware stack levels used:    1
  9567 ;; Hardware stack levels required when called:    2
  9568 ;; This function calls:
  9569 ;;		Nothing
  9570 ;; This function is called by:
  9571 ;;		_modulation
  9572 ;;		_updateSwitchTap
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           
  9577                           ;psect for function ___aldiv
  9578  1654                     ___aldiv:	
  9579                           
  9580                           ;incstack = 0
  9581                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9582  1654  0020               	movlb	0	; select bank0
  9583  1655  01B0               	clrf	___aldiv@sign
  9584  1656  1FA9               	btfss	___aldiv@divisor+3,7
  9585  1657  2E65               	goto	l1283
  9586  1658  09A6               	comf	___aldiv@divisor,f
  9587  1659  09A7               	comf	___aldiv@divisor+1,f
  9588  165A  09A8               	comf	___aldiv@divisor+2,f
  9589  165B  09A9               	comf	___aldiv@divisor+3,f
  9590  165C  0AA6               	incf	___aldiv@divisor,f
  9591  165D  1903               	skipnz
  9592  165E  0AA7               	incf	___aldiv@divisor+1,f
  9593  165F  1903               	skipnz
  9594  1660  0AA8               	incf	___aldiv@divisor+2,f
  9595  1661  1903               	skipnz
  9596  1662  0AA9               	incf	___aldiv@divisor+3,f
  9597  1663  01B0               	clrf	___aldiv@sign
  9598  1664  0AB0               	incf	___aldiv@sign,f
  9599  1665                     l1283:	
  9600  1665  1FAD               	btfss	___aldiv@dividend+3,7
  9601  1666  2E76               	goto	l3414
  9602  1667  09AA               	comf	___aldiv@dividend,f
  9603  1668  09AB               	comf	___aldiv@dividend+1,f
  9604  1669  09AC               	comf	___aldiv@dividend+2,f
  9605  166A  09AD               	comf	___aldiv@dividend+3,f
  9606  166B  0AAA               	incf	___aldiv@dividend,f
  9607  166C  1903               	skipnz
  9608  166D  0AAB               	incf	___aldiv@dividend+1,f
  9609  166E  1903               	skipnz
  9610  166F  0AAC               	incf	___aldiv@dividend+2,f
  9611  1670  1903               	skipnz
  9612  1671  0AAD               	incf	___aldiv@dividend+3,f
  9613  1672  3001               	movlw	1
  9614  1673  00AE               	movwf	??___aldiv
  9615  1674  082E               	movf	??___aldiv,w
  9616  1675  06B0               	xorwf	___aldiv@sign,f
  9617  1676                     l3414:	
  9618  1676  3000               	movlw	0
  9619  1677  00B4               	movwf	___aldiv@quotient+3
  9620  1678  3000               	movlw	0
  9621  1679  00B3               	movwf	___aldiv@quotient+2
  9622  167A  3000               	movlw	0
  9623  167B  00B2               	movwf	___aldiv@quotient+1
  9624  167C  3000               	movlw	0
  9625  167D  00B1               	movwf	___aldiv@quotient
  9626  167E  0829               	movf	___aldiv@divisor+3,w
  9627  167F  0428               	iorwf	___aldiv@divisor+2,w
  9628  1680  0427               	iorwf	___aldiv@divisor+1,w
  9629  1681  0426               	iorwf	___aldiv@divisor,w
  9630  1682  1903               	skipnz
  9631  1683  2EBF               	goto	l3436
  9632  1684  01AF               	clrf	___aldiv@counter
  9633  1685  0AAF               	incf	___aldiv@counter,f
  9634  1686                     l3422:	
  9635  1686  1BA9               	btfsc	___aldiv@divisor+3,7
  9636  1687  2E94               	goto	l3424
  9637  1688  3001               	movlw	1
  9638  1689                     u2645:	
  9639  1689  35A6               	lslf	___aldiv@divisor,f
  9640  168A  0DA7               	rlf	___aldiv@divisor+1,f
  9641  168B  0DA8               	rlf	___aldiv@divisor+2,f
  9642  168C  0DA9               	rlf	___aldiv@divisor+3,f
  9643  168D  0B89               	decfsz	9,f
  9644  168E  2E89               	goto	u2645
  9645  168F  3001               	movlw	1
  9646  1690  00AE               	movwf	??___aldiv
  9647  1691  082E               	movf	??___aldiv,w
  9648  1692  07AF               	addwf	___aldiv@counter,f
  9649  1693  2E86               	goto	l3422
  9650  1694                     l3424:	
  9651  1694  3001               	movlw	1
  9652  1695                     u2665:	
  9653  1695  35B1               	lslf	___aldiv@quotient,f
  9654  1696  0DB2               	rlf	___aldiv@quotient+1,f
  9655  1697  0DB3               	rlf	___aldiv@quotient+2,f
  9656  1698  0DB4               	rlf	___aldiv@quotient+3,f
  9657  1699  0B89               	decfsz	9,f
  9658  169A  2E95               	goto	u2665
  9659  169B  0829               	movf	___aldiv@divisor+3,w
  9660  169C  022D               	subwf	___aldiv@dividend+3,w
  9661  169D  1D03               	skipz
  9662  169E  2EA9               	goto	u2675
  9663  169F  0828               	movf	___aldiv@divisor+2,w
  9664  16A0  022C               	subwf	___aldiv@dividend+2,w
  9665  16A1  1D03               	skipz
  9666  16A2  2EA9               	goto	u2675
  9667  16A3  0827               	movf	___aldiv@divisor+1,w
  9668  16A4  022B               	subwf	___aldiv@dividend+1,w
  9669  16A5  1D03               	skipz
  9670  16A6  2EA9               	goto	u2675
  9671  16A7  0826               	movf	___aldiv@divisor,w
  9672  16A8  022A               	subwf	___aldiv@dividend,w
  9673  16A9                     u2675:	
  9674  16A9  1C03               	skipc
  9675  16AA  2EB4               	goto	l3432
  9676  16AB  0826               	movf	___aldiv@divisor,w
  9677  16AC  02AA               	subwf	___aldiv@dividend,f
  9678  16AD  0827               	movf	___aldiv@divisor+1,w
  9679  16AE  3BAB               	subwfb	___aldiv@dividend+1,f
  9680  16AF  0828               	movf	___aldiv@divisor+2,w
  9681  16B0  3BAC               	subwfb	___aldiv@dividend+2,f
  9682  16B1  0829               	movf	___aldiv@divisor+3,w
  9683  16B2  3BAD               	subwfb	___aldiv@dividend+3,f
  9684  16B3  1431               	bsf	___aldiv@quotient,0
  9685  16B4                     l3432:	
  9686  16B4  3001               	movlw	1
  9687  16B5                     u2685:	
  9688  16B5  36A9               	lsrf	___aldiv@divisor+3,f
  9689  16B6  0CA8               	rrf	___aldiv@divisor+2,f
  9690  16B7  0CA7               	rrf	___aldiv@divisor+1,f
  9691  16B8  0CA6               	rrf	___aldiv@divisor,f
  9692  16B9  0B89               	decfsz	9,f
  9693  16BA  2EB5               	goto	u2685
  9694  16BB  3001               	movlw	1
  9695  16BC  02AF               	subwf	___aldiv@counter,f
  9696  16BD  1D03               	btfss	3,2
  9697  16BE  2E94               	goto	l3424
  9698  16BF                     l3436:	
  9699  16BF  0830               	movf	___aldiv@sign,w
  9700  16C0  1903               	btfsc	3,2
  9701  16C1  2ECD               	goto	l3440
  9702  16C2  09B1               	comf	___aldiv@quotient,f
  9703  16C3  09B2               	comf	___aldiv@quotient+1,f
  9704  16C4  09B3               	comf	___aldiv@quotient+2,f
  9705  16C5  09B4               	comf	___aldiv@quotient+3,f
  9706  16C6  0AB1               	incf	___aldiv@quotient,f
  9707  16C7  1903               	skipnz
  9708  16C8  0AB2               	incf	___aldiv@quotient+1,f
  9709  16C9  1903               	skipnz
  9710  16CA  0AB3               	incf	___aldiv@quotient+2,f
  9711  16CB  1903               	skipnz
  9712  16CC  0AB4               	incf	___aldiv@quotient+3,f
  9713  16CD                     l3440:	
  9714  16CD  0834               	movf	___aldiv@quotient+3,w
  9715  16CE  00A9               	movwf	?___aldiv+3
  9716  16CF  0833               	movf	___aldiv@quotient+2,w
  9717  16D0  00A8               	movwf	?___aldiv+2
  9718  16D1  0832               	movf	___aldiv@quotient+1,w
  9719  16D2  00A7               	movwf	?___aldiv+1
  9720  16D3  0831               	movf	___aldiv@quotient,w
  9721  16D4  00A6               	movwf	?___aldiv
  9722  16D5  0008               	return
  9723  16D6                     __end_of___aldiv:	
  9724                           
  9725                           	psect	text20
  9726  16D6                     __ptext20:	
  9727 ;; *************** function _map *****************
  9728 ;; Defined at:
  9729 ;;		line 165 in file "user.c"
  9730 ;; Parameters:    Size  Location     Type
  9731 ;;  x               3   53[BANK0 ] float 
  9732 ;;  in_min          3   56[BANK0 ] float 
  9733 ;;  in_max          3   59[BANK0 ] float 
  9734 ;;  out_min         3   62[BANK0 ] float 
  9735 ;;  out_max         3   65[BANK0 ] float 
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;		None
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  3   53[BANK0 ] float 
  9740 ;; Registers used:
  9741 ;;		wreg, status,2, status,0, pclath, cstack
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9747 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9748 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9750 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9751 ;;Total ram usage:       18 bytes
  9752 ;; Hardware stack levels used:    1
  9753 ;; Hardware stack levels required when called:    4
  9754 ;; This function calls:
  9755 ;;		___ftadd
  9756 ;;		___ftdiv
  9757 ;;		___ftmul
  9758 ;;		___ftneg
  9759 ;; This function is called by:
  9760 ;;		_main
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           
  9765                           ;psect for function _map
  9766  16D6                     _map:	
  9767                           
  9768                           ;user.c: 166: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  9769                           
  9770                           ;incstack = 0
  9771                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  9772  16D6  0020               	movlb	0	; select bank0
  9773  16D7  085B               	movf	map@in_max,w
  9774  16D8  00A8               	movwf	___ftadd@f1
  9775  16D9  085C               	movf	map@in_max+1,w
  9776  16DA  00A9               	movwf	___ftadd@f1+1
  9777  16DB  085D               	movf	map@in_max+2,w
  9778  16DC  00AA               	movwf	___ftadd@f1+2
  9779  16DD  0858               	movf	map@in_min,w
  9780  16DE  00A0               	movwf	___ftneg@f1
  9781  16DF  0859               	movf	map@in_min+1,w
  9782  16E0  00A1               	movwf	___ftneg@f1+1
  9783  16E1  085A               	movf	map@in_min+2,w
  9784  16E2  00A2               	movwf	___ftneg@f1+2
  9785  16E3  319E  26A8  3196   	fcall	___ftneg
  9786  16E6  0020               	movlb	0	; select bank0
  9787  16E7  0820               	movf	?___ftneg,w
  9788  16E8  00AB               	movwf	___ftadd@f2
  9789  16E9  0821               	movf	?___ftneg+1,w
  9790  16EA  00AC               	movwf	___ftadd@f2+1
  9791  16EB  0822               	movf	?___ftneg+2,w
  9792  16EC  00AD               	movwf	___ftadd@f2+2
  9793  16ED  3189  21CC  3196   	fcall	___ftadd
  9794  16F0  0020               	movlb	0	; select bank0
  9795  16F1  0828               	movf	?___ftadd,w
  9796  16F2  00C5               	movwf	___ftdiv@f2
  9797  16F3  0829               	movf	?___ftadd+1,w
  9798  16F4  00C6               	movwf	___ftdiv@f2+1
  9799  16F5  082A               	movf	?___ftadd+2,w
  9800  16F6  00C7               	movwf	___ftdiv@f2+2
  9801  16F7  0861               	movf	map@out_max,w
  9802  16F8  00A8               	movwf	___ftadd@f1
  9803  16F9  0862               	movf	map@out_max+1,w
  9804  16FA  00A9               	movwf	___ftadd@f1+1
  9805  16FB  0863               	movf	map@out_max+2,w
  9806  16FC  00AA               	movwf	___ftadd@f1+2
  9807  16FD  085E               	movf	map@out_min,w
  9808  16FE  00A0               	movwf	___ftneg@f1
  9809  16FF  085F               	movf	map@out_min+1,w
  9810  1700  00A1               	movwf	___ftneg@f1+1
  9811  1701  0860               	movf	map@out_min+2,w
  9812  1702  00A2               	movwf	___ftneg@f1+2
  9813  1703  319E  26A8  3196   	fcall	___ftneg
  9814  1706  0020               	movlb	0	; select bank0
  9815  1707  0820               	movf	?___ftneg,w
  9816  1708  00AB               	movwf	___ftadd@f2
  9817  1709  0821               	movf	?___ftneg+1,w
  9818  170A  00AC               	movwf	___ftadd@f2+1
  9819  170B  0822               	movf	?___ftneg+2,w
  9820  170C  00AD               	movwf	___ftadd@f2+2
  9821  170D  3189  21CC  3196   	fcall	___ftadd
  9822  1710  0020               	movlb	0	; select bank0
  9823  1711  0828               	movf	?___ftadd,w
  9824  1712  00B5               	movwf	___ftmul@f1
  9825  1713  0829               	movf	?___ftadd+1,w
  9826  1714  00B6               	movwf	___ftmul@f1+1
  9827  1715  082A               	movf	?___ftadd+2,w
  9828  1716  00B7               	movwf	___ftmul@f1+2
  9829  1717  0855               	movf	map@x,w
  9830  1718  00A8               	movwf	___ftadd@f1
  9831  1719  0856               	movf	map@x+1,w
  9832  171A  00A9               	movwf	___ftadd@f1+1
  9833  171B  0857               	movf	map@x+2,w
  9834  171C  00AA               	movwf	___ftadd@f1+2
  9835  171D  0858               	movf	map@in_min,w
  9836  171E  00A0               	movwf	___ftneg@f1
  9837  171F  0859               	movf	map@in_min+1,w
  9838  1720  00A1               	movwf	___ftneg@f1+1
  9839  1721  085A               	movf	map@in_min+2,w
  9840  1722  00A2               	movwf	___ftneg@f1+2
  9841  1723  319E  26A8  3196   	fcall	___ftneg
  9842  1726  0020               	movlb	0	; select bank0
  9843  1727  0820               	movf	?___ftneg,w
  9844  1728  00AB               	movwf	___ftadd@f2
  9845  1729  0821               	movf	?___ftneg+1,w
  9846  172A  00AC               	movwf	___ftadd@f2+1
  9847  172B  0822               	movf	?___ftneg+2,w
  9848  172C  00AD               	movwf	___ftadd@f2+2
  9849  172D  3189  21CC  3196   	fcall	___ftadd
  9850  1730  0020               	movlb	0	; select bank0
  9851  1731  0828               	movf	?___ftadd,w
  9852  1732  00B8               	movwf	___ftmul@f2
  9853  1733  0829               	movf	?___ftadd+1,w
  9854  1734  00B9               	movwf	___ftmul@f2+1
  9855  1735  082A               	movf	?___ftadd+2,w
  9856  1736  00BA               	movwf	___ftmul@f2+2
  9857  1737  3187  2727  3196   	fcall	___ftmul
  9858  173A  0020               	movlb	0	; select bank0
  9859  173B  0835               	movf	?___ftmul,w
  9860  173C  00C8               	movwf	___ftdiv@f1
  9861  173D  0836               	movf	?___ftmul+1,w
  9862  173E  00C9               	movwf	___ftdiv@f1+1
  9863  173F  0837               	movf	?___ftmul+2,w
  9864  1740  00CA               	movwf	___ftdiv@f1+2
  9865  1741  3188  2041  3196   	fcall	___ftdiv
  9866  1744  0020               	movlb	0	; select bank0
  9867  1745  0845               	movf	?___ftdiv,w
  9868  1746  00E4               	movwf	_map$2116
  9869  1747  0846               	movf	?___ftdiv+1,w
  9870  1748  00E5               	movwf	_map$2116+1
  9871  1749  0847               	movf	?___ftdiv+2,w
  9872  174A  00E6               	movwf	_map$2116+2
  9873                           
  9874                           ;user.c: 166: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  9875  174B  085E               	movf	map@out_min,w
  9876  174C  00A8               	movwf	___ftadd@f1
  9877  174D  085F               	movf	map@out_min+1,w
  9878  174E  00A9               	movwf	___ftadd@f1+1
  9879  174F  0860               	movf	map@out_min+2,w
  9880  1750  00AA               	movwf	___ftadd@f1+2
  9881  1751  0864               	movf	_map$2116,w
  9882  1752  00AB               	movwf	___ftadd@f2
  9883  1753  0865               	movf	_map$2116+1,w
  9884  1754  00AC               	movwf	___ftadd@f2+1
  9885  1755  0866               	movf	_map$2116+2,w
  9886  1756  00AD               	movwf	___ftadd@f2+2
  9887  1757  3189  21CC         	fcall	___ftadd
  9888  1759  0020               	movlb	0	; select bank0
  9889  175A  0828               	movf	?___ftadd,w
  9890  175B  00D5               	movwf	?_map
  9891  175C  0829               	movf	?___ftadd+1,w
  9892  175D  00D6               	movwf	?_map+1
  9893  175E  082A               	movf	?___ftadd+2,w
  9894  175F  00D7               	movwf	?_map+2
  9895  1760  0008               	return
  9896  1761                     __end_of_map:	
  9897                           
  9898                           	psect	text21
  9899  1EA8                     __ptext21:	
  9900 ;; *************** function ___ftneg *****************
  9901 ;; Defined at:
  9902 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  f1              3    0[BANK0 ] float 
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;		None
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  3    0[BANK0 ] float 
  9909 ;; Registers used:
  9910 ;;		wreg
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9916 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9919 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9920 ;;Total ram usage:        3 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; Hardware stack levels required when called:    2
  9923 ;; This function calls:
  9924 ;;		Nothing
  9925 ;; This function is called by:
  9926 ;;		_map
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           
  9931                           ;psect for function ___ftneg
  9932  1EA8                     ___ftneg:	
  9933                           
  9934                           ;incstack = 0
  9935                           ; Regs used in ___ftneg: [wreg]
  9936  1EA8  0020               	movlb	0	; select bank0
  9937  1EA9  0822               	movf	___ftneg@f1+2,w
  9938  1EAA  0421               	iorwf	___ftneg@f1+1,w
  9939  1EAB  0420               	iorwf	___ftneg@f1,w
  9940  1EAC  1903               	skipnz
  9941  1EAD  0008               	return
  9942  1EAE  3080               	movlw	128
  9943  1EAF  06A2               	xorwf	___ftneg@f1+2,f
  9944  1EB0  0008               	return
  9945  1EB1                     __end_of___ftneg:	
  9946                           
  9947                           	psect	text22
  9948  0727                     __ptext22:	
  9949 ;; *************** function ___ftmul *****************
  9950 ;; Defined at:
  9951 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;  f1              3   21[BANK0 ] float 
  9954 ;;  f2              3   24[BANK0 ] float 
  9955 ;; Auto vars:     Size  Location     Type
  9956 ;;  f3_as_produc    3   32[BANK0 ] unsigned um
  9957 ;;  sign            1   36[BANK0 ] unsigned char 
  9958 ;;  cntr            1   35[BANK0 ] unsigned char 
  9959 ;;  exp             1   31[BANK0 ] unsigned char 
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  3   21[BANK0 ] float 
  9962 ;; Registers used:
  9963 ;;		wreg, status,2, status,0, pclath, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9969 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9970 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9971 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9972 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9973 ;;Total ram usage:       16 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:    3
  9976 ;; This function calls:
  9977 ;;		___ftpack
  9978 ;; This function is called by:
  9979 ;;		_set_subdivision
  9980 ;;		_map
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984                           
  9985                           ;psect for function ___ftmul
  9986  0727                     ___ftmul:	
  9987                           
  9988                           ;incstack = 0
  9989                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9990  0727  0020               	movlb	0	; select bank0
  9991  0728  0835               	movf	___ftmul@f1,w
  9992  0729  00BB               	movwf	??___ftmul
  9993  072A  0836               	movf	___ftmul@f1+1,w
  9994  072B  00BC               	movwf	??___ftmul+1
  9995  072C  0837               	movf	___ftmul@f1+2,w
  9996  072D  00BD               	movwf	??___ftmul+2
  9997  072E  1003               	clrc
  9998  072F  0D3C               	rlf	??___ftmul+1,w
  9999  0730  0D3D               	rlf	??___ftmul+2,w
 10000  0731  00BE               	movwf	??___ftmul+3
 10001  0732  083E               	movf	??___ftmul+3,w
 10002  0733  00BF               	movwf	___ftmul@exp
 10003  0734  083F               	movf	___ftmul@exp,w
 10004  0735  1D03               	btfss	3,2
 10005  0736  2F3E               	goto	l3574
 10006  0737  3000               	movlw	0
 10007  0738  00B5               	movwf	?___ftmul
 10008  0739  3000               	movlw	0
 10009  073A  00B6               	movwf	?___ftmul+1
 10010  073B  3000               	movlw	0
 10011  073C  00B7               	movwf	?___ftmul+2
 10012  073D  0008               	return
 10013  073E                     l3574:	
 10014  073E  0838               	movf	___ftmul@f2,w
 10015  073F  00BB               	movwf	??___ftmul
 10016  0740  0839               	movf	___ftmul@f2+1,w
 10017  0741  00BC               	movwf	??___ftmul+1
 10018  0742  083A               	movf	___ftmul@f2+2,w
 10019  0743  00BD               	movwf	??___ftmul+2
 10020  0744  1003               	clrc
 10021  0745  0D3C               	rlf	??___ftmul+1,w
 10022  0746  0D3D               	rlf	??___ftmul+2,w
 10023  0747  00BE               	movwf	??___ftmul+3
 10024  0748  083E               	movf	??___ftmul+3,w
 10025  0749  00C4               	movwf	___ftmul@sign
 10026  074A  0844               	movf	___ftmul@sign,w
 10027  074B  1D03               	btfss	3,2
 10028  074C  2F54               	goto	l3580
 10029  074D  3000               	movlw	0
 10030  074E  00B5               	movwf	?___ftmul
 10031  074F  3000               	movlw	0
 10032  0750  00B6               	movwf	?___ftmul+1
 10033  0751  3000               	movlw	0
 10034  0752  00B7               	movwf	?___ftmul+2
 10035  0753  0008               	return
 10036  0754                     l3580:	
 10037  0754  0844               	movf	___ftmul@sign,w
 10038  0755  3E7B               	addlw	123
 10039  0756  00BB               	movwf	??___ftmul
 10040  0757  083B               	movf	??___ftmul,w
 10041  0758  07BF               	addwf	___ftmul@exp,f
 10042  0759  0835               	movf	___ftmul@f1,w
 10043  075A  00BB               	movwf	??___ftmul
 10044  075B  0836               	movf	___ftmul@f1+1,w
 10045  075C  00BC               	movwf	??___ftmul+1
 10046  075D  0837               	movf	___ftmul@f1+2,w
 10047  075E  00BD               	movwf	??___ftmul+2
 10048  075F  3010               	movlw	16
 10049  0760                     u3055:	
 10050  0760  36BD               	lsrf	??___ftmul+2,f
 10051  0761  0CBC               	rrf	??___ftmul+1,f
 10052  0762  0CBB               	rrf	??___ftmul,f
 10053  0763  0B89               	decfsz	9,f
 10054  0764  2F60               	goto	u3055
 10055  0765  083B               	movf	??___ftmul,w
 10056  0766  00BE               	movwf	??___ftmul+3
 10057  0767  083E               	movf	??___ftmul+3,w
 10058  0768  00C4               	movwf	___ftmul@sign
 10059  0769  0838               	movf	___ftmul@f2,w
 10060  076A  00BB               	movwf	??___ftmul
 10061  076B  0839               	movf	___ftmul@f2+1,w
 10062  076C  00BC               	movwf	??___ftmul+1
 10063  076D  083A               	movf	___ftmul@f2+2,w
 10064  076E  00BD               	movwf	??___ftmul+2
 10065  076F  3010               	movlw	16
 10066  0770                     u3065:	
 10067  0770  36BD               	lsrf	??___ftmul+2,f
 10068  0771  0CBC               	rrf	??___ftmul+1,f
 10069  0772  0CBB               	rrf	??___ftmul,f
 10070  0773  0B89               	decfsz	9,f
 10071  0774  2F70               	goto	u3065
 10072  0775  083B               	movf	??___ftmul,w
 10073  0776  00BE               	movwf	??___ftmul+3
 10074  0777  083E               	movf	??___ftmul+3,w
 10075  0778  06C4               	xorwf	___ftmul@sign,f
 10076  0779  3080               	movlw	128
 10077  077A  00BB               	movwf	??___ftmul
 10078  077B  083B               	movf	??___ftmul,w
 10079  077C  05C4               	andwf	___ftmul@sign,f
 10080  077D  17B6               	bsf	___ftmul@f1+1,7
 10081  077E  17B9               	bsf	___ftmul@f2+1,7
 10082  077F  30FF               	movlw	255
 10083  0780  05B8               	andwf	___ftmul@f2,f
 10084  0781  30FF               	movlw	255
 10085  0782  05B9               	andwf	___ftmul@f2+1,f
 10086  0783  3000               	movlw	0
 10087  0784  05BA               	andwf	___ftmul@f2+2,f
 10088  0785  3000               	movlw	0
 10089  0786  00C0               	movwf	___ftmul@f3_as_product
 10090  0787  3000               	movlw	0
 10091  0788  00C1               	movwf	___ftmul@f3_as_product+1
 10092  0789  3000               	movlw	0
 10093  078A  00C2               	movwf	___ftmul@f3_as_product+2
 10094  078B  3007               	movlw	7
 10095  078C  00BB               	movwf	??___ftmul
 10096  078D  083B               	movf	??___ftmul,w
 10097  078E  00C3               	movwf	___ftmul@cntr
 10098  078F                     l3592:	
 10099  078F  1C35               	btfss	___ftmul@f1,0
 10100  0790  2F97               	goto	l3596
 10101  0791  0838               	movf	___ftmul@f2,w
 10102  0792  07C0               	addwf	___ftmul@f3_as_product,f
 10103  0793  0839               	movf	___ftmul@f2+1,w
 10104  0794  3DC1               	addwfc	___ftmul@f3_as_product+1,f
 10105  0795  083A               	movf	___ftmul@f2+2,w
 10106  0796  3DC2               	addwfc	___ftmul@f3_as_product+2,f
 10107  0797                     l3596:	
 10108  0797  3001               	movlw	1
 10109  0798                     u3085:	
 10110  0798  36B7               	lsrf	___ftmul@f1+2,f
 10111  0799  0CB6               	rrf	___ftmul@f1+1,f
 10112  079A  0CB5               	rrf	___ftmul@f1,f
 10113  079B  0B89               	decfsz	9,f
 10114  079C  2F98               	goto	u3085
 10115  079D  3001               	movlw	1
 10116  079E                     u3095:	
 10117  079E  35B8               	lslf	___ftmul@f2,f
 10118  079F  0DB9               	rlf	___ftmul@f2+1,f
 10119  07A0  0DBA               	rlf	___ftmul@f2+2,f
 10120  07A1  0B89               	decfsz	9,f
 10121  07A2  2F9E               	goto	u3095
 10122  07A3  3001               	movlw	1
 10123  07A4  02C3               	subwf	___ftmul@cntr,f
 10124  07A5  1D03               	btfss	3,2
 10125  07A6  2F8F               	goto	l3592
 10126  07A7  3009               	movlw	9
 10127  07A8  00BB               	movwf	??___ftmul
 10128  07A9  083B               	movf	??___ftmul,w
 10129  07AA  00C3               	movwf	___ftmul@cntr
 10130  07AB                     l3604:	
 10131  07AB  1C35               	btfss	___ftmul@f1,0
 10132  07AC  2FB3               	goto	l3608
 10133  07AD  0838               	movf	___ftmul@f2,w
 10134  07AE  07C0               	addwf	___ftmul@f3_as_product,f
 10135  07AF  0839               	movf	___ftmul@f2+1,w
 10136  07B0  3DC1               	addwfc	___ftmul@f3_as_product+1,f
 10137  07B1  083A               	movf	___ftmul@f2+2,w
 10138  07B2  3DC2               	addwfc	___ftmul@f3_as_product+2,f
 10139  07B3                     l3608:	
 10140  07B3  3001               	movlw	1
 10141  07B4                     u3125:	
 10142  07B4  36B7               	lsrf	___ftmul@f1+2,f
 10143  07B5  0CB6               	rrf	___ftmul@f1+1,f
 10144  07B6  0CB5               	rrf	___ftmul@f1,f
 10145  07B7  0B89               	decfsz	9,f
 10146  07B8  2FB4               	goto	u3125
 10147  07B9  3001               	movlw	1
 10148  07BA                     u3135:	
 10149  07BA  36C2               	lsrf	___ftmul@f3_as_product+2,f
 10150  07BB  0CC1               	rrf	___ftmul@f3_as_product+1,f
 10151  07BC  0CC0               	rrf	___ftmul@f3_as_product,f
 10152  07BD  0B89               	decfsz	9,f
 10153  07BE  2FBA               	goto	u3135
 10154  07BF  3001               	movlw	1
 10155  07C0  02C3               	subwf	___ftmul@cntr,f
 10156  07C1  1D03               	btfss	3,2
 10157  07C2  2FAB               	goto	l3604
 10158  07C3  0840               	movf	___ftmul@f3_as_product,w
 10159  07C4  00A0               	movwf	___ftpack@arg
 10160  07C5  0841               	movf	___ftmul@f3_as_product+1,w
 10161  07C6  00A1               	movwf	___ftpack@arg+1
 10162  07C7  0842               	movf	___ftmul@f3_as_product+2,w
 10163  07C8  00A2               	movwf	___ftpack@arg+2
 10164  07C9  083F               	movf	___ftmul@exp,w
 10165  07CA  00BB               	movwf	??___ftmul
 10166  07CB  083B               	movf	??___ftmul,w
 10167  07CC  00A3               	movwf	___ftpack@exp
 10168  07CD  0844               	movf	___ftmul@sign,w
 10169  07CE  00BC               	movwf	??___ftmul+1
 10170  07CF  083C               	movf	??___ftmul+1,w
 10171  07D0  00A4               	movwf	___ftpack@sign
 10172  07D1  3195  2580         	fcall	___ftpack
 10173  07D3  0020               	movlb	0	; select bank0
 10174  07D4  0820               	movf	?___ftpack,w
 10175  07D5  00B5               	movwf	?___ftmul
 10176  07D6  0821               	movf	?___ftpack+1,w
 10177  07D7  00B6               	movwf	?___ftmul+1
 10178  07D8  0822               	movf	?___ftpack+2,w
 10179  07D9  00B7               	movwf	?___ftmul+2
 10180  07DA  0008               	return
 10181  07DB                     __end_of___ftmul:	
 10182                           
 10183                           	psect	text23
 10184  0841                     __ptext23:	
 10185 ;; *************** function ___ftdiv *****************
 10186 ;; Defined at:
 10187 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;  f2              3   37[BANK0 ] float 
 10190 ;;  f1              3   40[BANK0 ] float 
 10191 ;; Auto vars:     Size  Location     Type
 10192 ;;  f3              3   48[BANK0 ] float 
 10193 ;;  sign            1   52[BANK0 ] unsigned char 
 10194 ;;  exp             1   51[BANK0 ] unsigned char 
 10195 ;;  cntr            1   47[BANK0 ] unsigned char 
 10196 ;; Return value:  Size  Location     Type
 10197 ;;                  3   37[BANK0 ] float 
 10198 ;; Registers used:
 10199 ;;		wreg, status,2, status,0, pclath, cstack
 10200 ;; Tracked objects:
 10201 ;;		On entry : 0/0
 10202 ;;		On exit  : 0/0
 10203 ;;		Unchanged: 0/0
 10204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10205 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10206 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10207 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10208 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10209 ;;Total ram usage:       16 bytes
 10210 ;; Hardware stack levels used:    1
 10211 ;; Hardware stack levels required when called:    3
 10212 ;; This function calls:
 10213 ;;		___ftpack
 10214 ;; This function is called by:
 10215 ;;		_main
 10216 ;;		_map
 10217 ;; This function uses a non-reentrant model
 10218 ;;
 10219                           
 10220                           
 10221                           ;psect for function ___ftdiv
 10222  0841                     ___ftdiv:	
 10223                           
 10224                           ;incstack = 0
 10225                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 10226  0841  0020               	movlb	0	; select bank0
 10227  0842  0848               	movf	___ftdiv@f1,w
 10228  0843  00CB               	movwf	??___ftdiv
 10229  0844  0849               	movf	___ftdiv@f1+1,w
 10230  0845  00CC               	movwf	??___ftdiv+1
 10231  0846  084A               	movf	___ftdiv@f1+2,w
 10232  0847  00CD               	movwf	??___ftdiv+2
 10233  0848  1003               	clrc
 10234  0849  0D4C               	rlf	??___ftdiv+1,w
 10235  084A  0D4D               	rlf	??___ftdiv+2,w
 10236  084B  00CE               	movwf	??___ftdiv+3
 10237  084C  084E               	movf	??___ftdiv+3,w
 10238  084D  00D3               	movwf	___ftdiv@exp
 10239  084E  0853               	movf	___ftdiv@exp,w
 10240  084F  1D03               	btfss	3,2
 10241  0850  2858               	goto	l3532
 10242  0851  3000               	movlw	0
 10243  0852  00C5               	movwf	?___ftdiv
 10244  0853  3000               	movlw	0
 10245  0854  00C6               	movwf	?___ftdiv+1
 10246  0855  3000               	movlw	0
 10247  0856  00C7               	movwf	?___ftdiv+2
 10248  0857  0008               	return
 10249  0858                     l3532:	
 10250  0858  0845               	movf	___ftdiv@f2,w
 10251  0859  00CB               	movwf	??___ftdiv
 10252  085A  0846               	movf	___ftdiv@f2+1,w
 10253  085B  00CC               	movwf	??___ftdiv+1
 10254  085C  0847               	movf	___ftdiv@f2+2,w
 10255  085D  00CD               	movwf	??___ftdiv+2
 10256  085E  1003               	clrc
 10257  085F  0D4C               	rlf	??___ftdiv+1,w
 10258  0860  0D4D               	rlf	??___ftdiv+2,w
 10259  0861  00CE               	movwf	??___ftdiv+3
 10260  0862  084E               	movf	??___ftdiv+3,w
 10261  0863  00D4               	movwf	___ftdiv@sign
 10262  0864  0854               	movf	___ftdiv@sign,w
 10263  0865  1D03               	btfss	3,2
 10264  0866  286E               	goto	l3538
 10265  0867  3000               	movlw	0
 10266  0868  00C5               	movwf	?___ftdiv
 10267  0869  3000               	movlw	0
 10268  086A  00C6               	movwf	?___ftdiv+1
 10269  086B  3000               	movlw	0
 10270  086C  00C7               	movwf	?___ftdiv+2
 10271  086D  0008               	return
 10272  086E                     l3538:	
 10273  086E  3000               	movlw	0
 10274  086F  00D0               	movwf	___ftdiv@f3
 10275  0870  3000               	movlw	0
 10276  0871  00D1               	movwf	___ftdiv@f3+1
 10277  0872  3000               	movlw	0
 10278  0873  00D2               	movwf	___ftdiv@f3+2
 10279  0874  3089               	movlw	137
 10280  0875  0754               	addwf	___ftdiv@sign,w
 10281  0876  00CB               	movwf	??___ftdiv
 10282  0877  084B               	movf	??___ftdiv,w
 10283  0878  02D3               	subwf	___ftdiv@exp,f
 10284  0879  0848               	movf	___ftdiv@f1,w
 10285  087A  00CB               	movwf	??___ftdiv
 10286  087B  0849               	movf	___ftdiv@f1+1,w
 10287  087C  00CC               	movwf	??___ftdiv+1
 10288  087D  084A               	movf	___ftdiv@f1+2,w
 10289  087E  00CD               	movwf	??___ftdiv+2
 10290  087F  3010               	movlw	16
 10291  0880                     u2975:	
 10292  0880  36CD               	lsrf	??___ftdiv+2,f
 10293  0881  0CCC               	rrf	??___ftdiv+1,f
 10294  0882  0CCB               	rrf	??___ftdiv,f
 10295  0883  0B89               	decfsz	9,f
 10296  0884  2880               	goto	u2975
 10297  0885  084B               	movf	??___ftdiv,w
 10298  0886  00CE               	movwf	??___ftdiv+3
 10299  0887  084E               	movf	??___ftdiv+3,w
 10300  0888  00D4               	movwf	___ftdiv@sign
 10301  0889  0845               	movf	___ftdiv@f2,w
 10302  088A  00CB               	movwf	??___ftdiv
 10303  088B  0846               	movf	___ftdiv@f2+1,w
 10304  088C  00CC               	movwf	??___ftdiv+1
 10305  088D  0847               	movf	___ftdiv@f2+2,w
 10306  088E  00CD               	movwf	??___ftdiv+2
 10307  088F  3010               	movlw	16
 10308  0890                     u2985:	
 10309  0890  36CD               	lsrf	??___ftdiv+2,f
 10310  0891  0CCC               	rrf	??___ftdiv+1,f
 10311  0892  0CCB               	rrf	??___ftdiv,f
 10312  0893  0B89               	decfsz	9,f
 10313  0894  2890               	goto	u2985
 10314  0895  084B               	movf	??___ftdiv,w
 10315  0896  00CE               	movwf	??___ftdiv+3
 10316  0897  084E               	movf	??___ftdiv+3,w
 10317  0898  06D4               	xorwf	___ftdiv@sign,f
 10318  0899  3080               	movlw	128
 10319  089A  00CB               	movwf	??___ftdiv
 10320  089B  084B               	movf	??___ftdiv,w
 10321  089C  05D4               	andwf	___ftdiv@sign,f
 10322  089D  17C9               	bsf	___ftdiv@f1+1,7
 10323  089E  30FF               	movlw	255
 10324  089F  05C8               	andwf	___ftdiv@f1,f
 10325  08A0  30FF               	movlw	255
 10326  08A1  05C9               	andwf	___ftdiv@f1+1,f
 10327  08A2  3000               	movlw	0
 10328  08A3  05CA               	andwf	___ftdiv@f1+2,f
 10329  08A4  17C6               	bsf	___ftdiv@f2+1,7
 10330  08A5  30FF               	movlw	255
 10331  08A6  05C5               	andwf	___ftdiv@f2,f
 10332  08A7  30FF               	movlw	255
 10333  08A8  05C6               	andwf	___ftdiv@f2+1,f
 10334  08A9  3000               	movlw	0
 10335  08AA  05C7               	andwf	___ftdiv@f2+2,f
 10336  08AB  3018               	movlw	24
 10337  08AC  00CB               	movwf	??___ftdiv
 10338  08AD  084B               	movf	??___ftdiv,w
 10339  08AE  00CF               	movwf	___ftdiv@cntr
 10340  08AF                     l3552:	
 10341  08AF  3001               	movlw	1
 10342  08B0                     u2995:	
 10343  08B0  35D0               	lslf	___ftdiv@f3,f
 10344  08B1  0DD1               	rlf	___ftdiv@f3+1,f
 10345  08B2  0DD2               	rlf	___ftdiv@f3+2,f
 10346  08B3  0B89               	decfsz	9,f
 10347  08B4  28B0               	goto	u2995
 10348  08B5  0847               	movf	___ftdiv@f2+2,w
 10349  08B6  024A               	subwf	___ftdiv@f1+2,w
 10350  08B7  1D03               	skipz
 10351  08B8  28BF               	goto	u3005
 10352  08B9  0846               	movf	___ftdiv@f2+1,w
 10353  08BA  0249               	subwf	___ftdiv@f1+1,w
 10354  08BB  1D03               	skipz
 10355  08BC  28BF               	goto	u3005
 10356  08BD  0845               	movf	___ftdiv@f2,w
 10357  08BE  0248               	subwf	___ftdiv@f1,w
 10358  08BF                     u3005:	
 10359  08BF  1C03               	skipc
 10360  08C0  28C8               	goto	l3560
 10361  08C1  0845               	movf	___ftdiv@f2,w
 10362  08C2  02C8               	subwf	___ftdiv@f1,f
 10363  08C3  0846               	movf	___ftdiv@f2+1,w
 10364  08C4  3BC9               	subwfb	___ftdiv@f1+1,f
 10365  08C5  0847               	movf	___ftdiv@f2+2,w
 10366  08C6  3BCA               	subwfb	___ftdiv@f1+2,f
 10367  08C7  1450               	bsf	___ftdiv@f3,0
 10368  08C8                     l3560:	
 10369  08C8  3001               	movlw	1
 10370  08C9                     u3015:	
 10371  08C9  35C8               	lslf	___ftdiv@f1,f
 10372  08CA  0DC9               	rlf	___ftdiv@f1+1,f
 10373  08CB  0DCA               	rlf	___ftdiv@f1+2,f
 10374  08CC  0B89               	decfsz	9,f
 10375  08CD  28C9               	goto	u3015
 10376  08CE  3001               	movlw	1
 10377  08CF  02CF               	subwf	___ftdiv@cntr,f
 10378  08D0  1D03               	btfss	3,2
 10379  08D1  28AF               	goto	l3552
 10380  08D2  0850               	movf	___ftdiv@f3,w
 10381  08D3  00A0               	movwf	___ftpack@arg
 10382  08D4  0851               	movf	___ftdiv@f3+1,w
 10383  08D5  00A1               	movwf	___ftpack@arg+1
 10384  08D6  0852               	movf	___ftdiv@f3+2,w
 10385  08D7  00A2               	movwf	___ftpack@arg+2
 10386  08D8  0853               	movf	___ftdiv@exp,w
 10387  08D9  00CB               	movwf	??___ftdiv
 10388  08DA  084B               	movf	??___ftdiv,w
 10389  08DB  00A3               	movwf	___ftpack@exp
 10390  08DC  0854               	movf	___ftdiv@sign,w
 10391  08DD  00CC               	movwf	??___ftdiv+1
 10392  08DE  084C               	movf	??___ftdiv+1,w
 10393  08DF  00A4               	movwf	___ftpack@sign
 10394  08E0  3195  2580         	fcall	___ftpack
 10395  08E2  0020               	movlb	0	; select bank0
 10396  08E3  0820               	movf	?___ftpack,w
 10397  08E4  00C5               	movwf	?___ftdiv
 10398  08E5  0821               	movf	?___ftpack+1,w
 10399  08E6  00C6               	movwf	?___ftdiv+1
 10400  08E7  0822               	movf	?___ftpack+2,w
 10401  08E8  00C7               	movwf	?___ftdiv+2
 10402  08E9  0008               	return
 10403  08EA                     __end_of___ftdiv:	
 10404                           
 10405                           	psect	text24
 10406  09CC                     __ptext24:	
 10407 ;; *************** function ___ftadd *****************
 10408 ;; Defined at:
 10409 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;  f1              3    8[BANK0 ] float 
 10412 ;;  f2              3   11[BANK0 ] float 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;  exp1            1   20[BANK0 ] unsigned char 
 10415 ;;  exp2            1   19[BANK0 ] unsigned char 
 10416 ;;  sign            1   18[BANK0 ] unsigned char 
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  3    8[BANK0 ] float 
 10419 ;; Registers used:
 10420 ;;		wreg, status,2, status,0, pclath, cstack
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10426 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10427 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10428 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10429 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10430 ;;Total ram usage:       13 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:    3
 10433 ;; This function calls:
 10434 ;;		___ftpack
 10435 ;; This function is called by:
 10436 ;;		_map
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           
 10441                           ;psect for function ___ftadd
 10442  09CC                     ___ftadd:	
 10443                           
 10444                           ;incstack = 0
 10445                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 10446  09CC  0020               	movlb	0	; select bank0
 10447  09CD  0828               	movf	___ftadd@f1,w
 10448  09CE  00AE               	movwf	??___ftadd
 10449  09CF  0829               	movf	___ftadd@f1+1,w
 10450  09D0  00AF               	movwf	??___ftadd+1
 10451  09D1  082A               	movf	___ftadd@f1+2,w
 10452  09D2  00B0               	movwf	??___ftadd+2
 10453  09D3  1003               	clrc
 10454  09D4  0D2F               	rlf	??___ftadd+1,w
 10455  09D5  0D30               	rlf	??___ftadd+2,w
 10456  09D6  00B1               	movwf	??___ftadd+3
 10457  09D7  0831               	movf	??___ftadd+3,w
 10458  09D8  00B4               	movwf	___ftadd@exp1
 10459  09D9  082B               	movf	___ftadd@f2,w
 10460  09DA  00AE               	movwf	??___ftadd
 10461  09DB  082C               	movf	___ftadd@f2+1,w
 10462  09DC  00AF               	movwf	??___ftadd+1
 10463  09DD  082D               	movf	___ftadd@f2+2,w
 10464  09DE  00B0               	movwf	??___ftadd+2
 10465  09DF  1003               	clrc
 10466  09E0  0D2F               	rlf	??___ftadd+1,w
 10467  09E1  0D30               	rlf	??___ftadd+2,w
 10468  09E2  00B1               	movwf	??___ftadd+3
 10469  09E3  0831               	movf	??___ftadd+3,w
 10470  09E4  00B3               	movwf	___ftadd@exp2
 10471  09E5  0834               	movf	___ftadd@exp1,w
 10472  09E6  1903               	btfsc	3,2
 10473  09E7  29F4               	goto	l3462
 10474  09E8  0833               	movf	___ftadd@exp2,w
 10475  09E9  0234               	subwf	___ftadd@exp1,w
 10476  09EA  1803               	skipnc
 10477  09EB  29FB               	goto	l3466
 10478  09EC  0334               	decf	___ftadd@exp1,w
 10479  09ED  3AFF               	xorlw	255
 10480  09EE  0733               	addwf	___ftadd@exp2,w
 10481  09EF  00AE               	movwf	??___ftadd
 10482  09F0  3019               	movlw	25
 10483  09F1  022E               	subwf	??___ftadd,w
 10484  09F2  1C03               	skipc
 10485  09F3  29FB               	goto	l3466
 10486  09F4                     l3462:	
 10487  09F4  082B               	movf	___ftadd@f2,w
 10488  09F5  00A8               	movwf	?___ftadd
 10489  09F6  082C               	movf	___ftadd@f2+1,w
 10490  09F7  00A9               	movwf	?___ftadd+1
 10491  09F8  082D               	movf	___ftadd@f2+2,w
 10492  09F9  00AA               	movwf	?___ftadd+2
 10493  09FA  0008               	return
 10494  09FB                     l3466:	
 10495  09FB  0833               	movf	___ftadd@exp2,w
 10496  09FC  1903               	btfsc	3,2
 10497  09FD  0008               	return
 10498  09FE  0834               	movf	___ftadd@exp1,w
 10499  09FF  0233               	subwf	___ftadd@exp2,w
 10500  0A00  1803               	skipnc
 10501  0A01  2A0A               	goto	l3472
 10502  0A02  0333               	decf	___ftadd@exp2,w
 10503  0A03  3AFF               	xorlw	255
 10504  0A04  0734               	addwf	___ftadd@exp1,w
 10505  0A05  00AE               	movwf	??___ftadd
 10506  0A06  3019               	movlw	25
 10507  0A07  022E               	subwf	??___ftadd,w
 10508  0A08  1803               	btfsc	3,0
 10509  0A09  0008               	return
 10510  0A0A                     l3472:	
 10511  0A0A  3006               	movlw	6
 10512  0A0B  00AE               	movwf	??___ftadd
 10513  0A0C  082E               	movf	??___ftadd,w
 10514  0A0D  00B2               	movwf	___ftadd@sign
 10515  0A0E  1BAA               	btfsc	___ftadd@f1+2,7
 10516  0A0F  17B2               	bsf	___ftadd@sign,7
 10517  0A10  1BAD               	btfsc	___ftadd@f2+2,7
 10518  0A11  1732               	bsf	___ftadd@sign,6
 10519  0A12  17A9               	bsf	___ftadd@f1+1,7
 10520  0A13  30FF               	movlw	255
 10521  0A14  05A8               	andwf	___ftadd@f1,f
 10522  0A15  30FF               	movlw	255
 10523  0A16  05A9               	andwf	___ftadd@f1+1,f
 10524  0A17  3000               	movlw	0
 10525  0A18  05AA               	andwf	___ftadd@f1+2,f
 10526  0A19  17AC               	bsf	___ftadd@f2+1,7
 10527  0A1A  30FF               	movlw	255
 10528  0A1B  05AB               	andwf	___ftadd@f2,f
 10529  0A1C  30FF               	movlw	255
 10530  0A1D  05AC               	andwf	___ftadd@f2+1,f
 10531  0A1E  3000               	movlw	0
 10532  0A1F  05AD               	andwf	___ftadd@f2+2,f
 10533  0A20  0833               	movf	___ftadd@exp2,w
 10534  0A21  0234               	subwf	___ftadd@exp1,w
 10535  0A22  1803               	skipnc
 10536  0A23  2A46               	goto	l3494
 10537  0A24                     l3484:	
 10538  0A24  3001               	movlw	1
 10539  0A25                     u2815:	
 10540  0A25  35AB               	lslf	___ftadd@f2,f
 10541  0A26  0DAC               	rlf	___ftadd@f2+1,f
 10542  0A27  0DAD               	rlf	___ftadd@f2+2,f
 10543  0A28  0B89               	decfsz	9,f
 10544  0A29  2A25               	goto	u2815
 10545  0A2A  3001               	movlw	1
 10546  0A2B  02B3               	subwf	___ftadd@exp2,f
 10547  0A2C  0833               	movf	___ftadd@exp2,w
 10548  0A2D  0634               	xorwf	___ftadd@exp1,w
 10549  0A2E  1903               	skipnz
 10550  0A2F  2A41               	goto	l3492
 10551  0A30  3001               	movlw	1
 10552  0A31  02B2               	subwf	___ftadd@sign,f
 10553  0A32  0832               	movf	___ftadd@sign,w
 10554  0A33  3907               	andlw	7
 10555  0A34  1903               	btfsc	3,2
 10556  0A35  2A41               	goto	l3492
 10557  0A36  2A24               	goto	l3484
 10558  0A37                     l3490:	
 10559  0A37  3001               	movlw	1
 10560  0A38                     u2845:	
 10561  0A38  36AA               	lsrf	___ftadd@f1+2,f
 10562  0A39  0CA9               	rrf	___ftadd@f1+1,f
 10563  0A3A  0CA8               	rrf	___ftadd@f1,f
 10564  0A3B  0B89               	decfsz	9,f
 10565  0A3C  2A38               	goto	u2845
 10566  0A3D  3001               	movlw	1
 10567  0A3E  00AE               	movwf	??___ftadd
 10568  0A3F  082E               	movf	??___ftadd,w
 10569  0A40  07B4               	addwf	___ftadd@exp1,f
 10570  0A41                     l3492:	
 10571  0A41  0834               	movf	___ftadd@exp1,w
 10572  0A42  0633               	xorwf	___ftadd@exp2,w
 10573  0A43  1903               	btfsc	3,2
 10574  0A44  2A6B               	goto	l1420
 10575  0A45  2A37               	goto	l3490
 10576  0A46                     l3494:	
 10577  0A46  0834               	movf	___ftadd@exp1,w
 10578  0A47  0233               	subwf	___ftadd@exp2,w
 10579  0A48  1803               	skipnc
 10580  0A49  2A6B               	goto	l1420
 10581  0A4A                     l3496:	
 10582  0A4A  3001               	movlw	1
 10583  0A4B                     u2875:	
 10584  0A4B  35A8               	lslf	___ftadd@f1,f
 10585  0A4C  0DA9               	rlf	___ftadd@f1+1,f
 10586  0A4D  0DAA               	rlf	___ftadd@f1+2,f
 10587  0A4E  0B89               	decfsz	9,f
 10588  0A4F  2A4B               	goto	u2875
 10589  0A50  3001               	movlw	1
 10590  0A51  02B4               	subwf	___ftadd@exp1,f
 10591  0A52  0833               	movf	___ftadd@exp2,w
 10592  0A53  0634               	xorwf	___ftadd@exp1,w
 10593  0A54  1903               	skipnz
 10594  0A55  2A67               	goto	l3504
 10595  0A56  3001               	movlw	1
 10596  0A57  02B2               	subwf	___ftadd@sign,f
 10597  0A58  0832               	movf	___ftadd@sign,w
 10598  0A59  3907               	andlw	7
 10599  0A5A  1903               	btfsc	3,2
 10600  0A5B  2A67               	goto	l3504
 10601  0A5C  2A4A               	goto	l3496
 10602  0A5D                     l3502:	
 10603  0A5D  3001               	movlw	1
 10604  0A5E                     u2905:	
 10605  0A5E  36AD               	lsrf	___ftadd@f2+2,f
 10606  0A5F  0CAC               	rrf	___ftadd@f2+1,f
 10607  0A60  0CAB               	rrf	___ftadd@f2,f
 10608  0A61  0B89               	decfsz	9,f
 10609  0A62  2A5E               	goto	u2905
 10610  0A63  3001               	movlw	1
 10611  0A64  00AE               	movwf	??___ftadd
 10612  0A65  082E               	movf	??___ftadd,w
 10613  0A66  07B3               	addwf	___ftadd@exp2,f
 10614  0A67                     l3504:	
 10615  0A67  0834               	movf	___ftadd@exp1,w
 10616  0A68  0633               	xorwf	___ftadd@exp2,w
 10617  0A69  1D03               	skipz
 10618  0A6A  2A5D               	goto	l3502
 10619  0A6B                     l1420:	
 10620  0A6B  1FB2               	btfss	___ftadd@sign,7
 10621  0A6C  2A7D               	goto	l3508
 10622  0A6D  30FF               	movlw	255
 10623  0A6E  06A8               	xorwf	___ftadd@f1,f
 10624  0A6F  30FF               	movlw	255
 10625  0A70  06A9               	xorwf	___ftadd@f1+1,f
 10626  0A71  30FF               	movlw	255
 10627  0A72  06AA               	xorwf	___ftadd@f1+2,f
 10628  0A73  3001               	movlw	1
 10629  0A74  07A8               	addwf	___ftadd@f1,f
 10630  0A75  3000               	movlw	0
 10631  0A76  1803               	skipnc
 10632  0A77  3001               	movlw	1
 10633  0A78  07A9               	addwf	___ftadd@f1+1,f
 10634  0A79  3000               	movlw	0
 10635  0A7A  1803               	skipnc
 10636  0A7B  3001               	movlw	1
 10637  0A7C  07AA               	addwf	___ftadd@f1+2,f
 10638  0A7D                     l3508:	
 10639  0A7D  1F32               	btfss	___ftadd@sign,6
 10640  0A7E  2A8F               	goto	l3512
 10641  0A7F  30FF               	movlw	255
 10642  0A80  06AB               	xorwf	___ftadd@f2,f
 10643  0A81  30FF               	movlw	255
 10644  0A82  06AC               	xorwf	___ftadd@f2+1,f
 10645  0A83  30FF               	movlw	255
 10646  0A84  06AD               	xorwf	___ftadd@f2+2,f
 10647  0A85  3001               	movlw	1
 10648  0A86  07AB               	addwf	___ftadd@f2,f
 10649  0A87  3000               	movlw	0
 10650  0A88  1803               	skipnc
 10651  0A89  3001               	movlw	1
 10652  0A8A  07AC               	addwf	___ftadd@f2+1,f
 10653  0A8B  3000               	movlw	0
 10654  0A8C  1803               	skipnc
 10655  0A8D  3001               	movlw	1
 10656  0A8E  07AD               	addwf	___ftadd@f2+2,f
 10657  0A8F                     l3512:	
 10658  0A8F  01B2               	clrf	___ftadd@sign
 10659  0A90  0828               	movf	___ftadd@f1,w
 10660  0A91  07AB               	addwf	___ftadd@f2,f
 10661  0A92  0829               	movf	___ftadd@f1+1,w
 10662  0A93  3DAC               	addwfc	___ftadd@f2+1,f
 10663  0A94  082A               	movf	___ftadd@f1+2,w
 10664  0A95  3DAD               	addwfc	___ftadd@f2+2,f
 10665  0A96  1FAD               	btfss	___ftadd@f2+2,7
 10666  0A97  2AAA               	goto	l3522
 10667  0A98  30FF               	movlw	255
 10668  0A99  06AB               	xorwf	___ftadd@f2,f
 10669  0A9A  30FF               	movlw	255
 10670  0A9B  06AC               	xorwf	___ftadd@f2+1,f
 10671  0A9C  30FF               	movlw	255
 10672  0A9D  06AD               	xorwf	___ftadd@f2+2,f
 10673  0A9E  3001               	movlw	1
 10674  0A9F  07AB               	addwf	___ftadd@f2,f
 10675  0AA0  3000               	movlw	0
 10676  0AA1  1803               	skipnc
 10677  0AA2  3001               	movlw	1
 10678  0AA3  07AC               	addwf	___ftadd@f2+1,f
 10679  0AA4  3000               	movlw	0
 10680  0AA5  1803               	skipnc
 10681  0AA6  3001               	movlw	1
 10682  0AA7  07AD               	addwf	___ftadd@f2+2,f
 10683  0AA8  01B2               	clrf	___ftadd@sign
 10684  0AA9  0AB2               	incf	___ftadd@sign,f
 10685  0AAA                     l3522:	
 10686  0AAA  082B               	movf	___ftadd@f2,w
 10687  0AAB  00A0               	movwf	___ftpack@arg
 10688  0AAC  082C               	movf	___ftadd@f2+1,w
 10689  0AAD  00A1               	movwf	___ftpack@arg+1
 10690  0AAE  082D               	movf	___ftadd@f2+2,w
 10691  0AAF  00A2               	movwf	___ftpack@arg+2
 10692  0AB0  0834               	movf	___ftadd@exp1,w
 10693  0AB1  00AE               	movwf	??___ftadd
 10694  0AB2  082E               	movf	??___ftadd,w
 10695  0AB3  00A3               	movwf	___ftpack@exp
 10696  0AB4  0832               	movf	___ftadd@sign,w
 10697  0AB5  00AF               	movwf	??___ftadd+1
 10698  0AB6  082F               	movf	??___ftadd+1,w
 10699  0AB7  00A4               	movwf	___ftpack@sign
 10700  0AB8  3195  2580         	fcall	___ftpack
 10701  0ABA  0020               	movlb	0	; select bank0
 10702  0ABB  0820               	movf	?___ftpack,w
 10703  0ABC  00A8               	movwf	?___ftadd
 10704  0ABD  0821               	movf	?___ftpack+1,w
 10705  0ABE  00A9               	movwf	?___ftadd+1
 10706  0ABF  0822               	movf	?___ftpack+2,w
 10707  0AC0  00AA               	movwf	?___ftadd+2
 10708  0AC1  0008               	return
 10709  0AC2                     __end_of___ftadd:	
 10710                           
 10711                           	psect	text25
 10712  1ED5                     __ptext25:	
 10713 ;; *************** function _initSwitchBypass *****************
 10714 ;; Defined at:
 10715 ;;		line 29 in file "SwitchBypass.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;  initState       2   22[BANK0 ] int 
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		wreg, status,2, status,0, pclath, cstack
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10730 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10732 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10733 ;;Total ram usage:        2 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    5
 10736 ;; This function calls:
 10737 ;;		_getSwitchBypassState
 10738 ;;		_setSwitchBypassState
 10739 ;; This function is called by:
 10740 ;;		_main
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           
 10745                           ;psect for function _initSwitchBypass
 10746  1ED5                     _initSwitchBypass:	
 10747                           
 10748                           ;SwitchBypass.c: 30: int initState = getSwitchBypassState();
 10749                           
 10750                           ;incstack = 0
 10751                           ; Regs used in _initSwitchBypass: [wreg+status,2+status,0+pclath+cstack]
 10752  1ED5  319E  2694  319E   	fcall	_getSwitchBypassState
 10753  1ED8  0020               	movlb	0	; select bank0
 10754  1ED9  0821               	movf	?_getSwitchBypassState+1,w
 10755  1EDA  00B7               	movwf	initSwitchBypass@initState+1
 10756  1EDB  0820               	movf	?_getSwitchBypassState,w
 10757  1EDC  00B6               	movwf	initSwitchBypass@initState
 10758                           
 10759                           ;SwitchBypass.c: 31: setSwitchBypassState(initState);
 10760  1EDD  0837               	movf	initSwitchBypass@initState+1,w
 10761  1EDE  00B3               	movwf	setSwitchBypassState@f_state+1
 10762  1EDF  0836               	movf	initSwitchBypass@initState,w
 10763  1EE0  00B2               	movwf	setSwitchBypassState@f_state
 10764  1EE1  3193  23A0         	fcall	_setSwitchBypassState
 10765  1EE3  0008               	return
 10766  1EE4                     __end_of_initSwitchBypass:	
 10767                           
 10768                           	psect	text26
 10769  13A0                     __ptext26:	
 10770 ;; *************** function _setSwitchBypassState *****************
 10771 ;; Defined at:
 10772 ;;		line 134 in file "SwitchBypass.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;  f_state         2   18[BANK0 ] int 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;		None
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, status,2, status,0, pclath, cstack
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10786 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10789 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10790 ;;Total ram usage:        4 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:    4
 10793 ;; This function calls:
 10794 ;;		_updateSwitchBypassState
 10795 ;;		_wait_ms
 10796 ;; This function is called by:
 10797 ;;		_initSwitchBypass
 10798 ;;		_updateSwitchBypass
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           
 10803                           ;psect for function _setSwitchBypassState
 10804  13A0                     _setSwitchBypassState:	
 10805                           
 10806                           ;SwitchBypass.c: 135: if (switchBypass_state == f_state) {return;}
 10807                           
 10808                           ;incstack = 0
 10809                           ; Regs used in _setSwitchBypassState: [wreg+status,2+status,0+pclath+cstack]
 10810  13A0  0021               	movlb	1	; select bank1
 10811  13A1  085A               	movf	_switchBypass_state^(0+128),w
 10812  13A2  0020               	movlb	0	; select bank0
 10813  13A3  00B4               	movwf	??_setSwitchBypassState
 10814  13A4  01B5               	clrf	??_setSwitchBypassState+1
 10815  13A5  0833               	movf	setSwitchBypassState@f_state+1,w
 10816  13A6  0635               	xorwf	??_setSwitchBypassState+1,w
 10817  13A7  1D03               	skipz
 10818  13A8  2BAB               	goto	u2505
 10819  13A9  0832               	movf	setSwitchBypassState@f_state,w
 10820  13AA  0634               	xorwf	??_setSwitchBypassState,w
 10821  13AB                     u2505:	
 10822  13AB  1903               	btfsc	3,2
 10823  13AC  0008               	return
 10824                           
 10825                           ;SwitchBypass.c: 136: switchBypass_state = f_state;
 10826  13AD  0832               	movf	setSwitchBypassState@f_state,w
 10827  13AE  00B4               	movwf	??_setSwitchBypassState
 10828  13AF  0834               	movf	??_setSwitchBypassState,w
 10829  13B0  0021               	movlb	1	; select bank1
 10830  13B1  00DA               	movwf	_switchBypass_state^(0+128)
 10831                           
 10832                           ;SwitchBypass.c: 137: LATBbits.LATB2 = f_state;
 10833  13B2  0020               	movlb	0	; select bank0
 10834  13B3  0C32               	rrf	setSwitchBypassState@f_state,w
 10835  13B4  0022               	movlb	2	; select bank2
 10836  13B5  1C03               	skipc
 10837  13B6  110D               	bcf	13,2	;volatile
 10838  13B7  1803               	skipnc
 10839  13B8  150D               	bsf	13,2	;volatile
 10840                           
 10841                           ;SwitchBypass.c: 138: LATBbits.LATB3 = 0;
 10842  13B9  118D               	bcf	13,3	;volatile
 10843                           
 10844                           ;SwitchBypass.c: 139: LATGbits.LATG2 = f_state;
 10845  13BA  0020               	movlb	0	; select bank0
 10846  13BB  0C32               	rrf	setSwitchBypassState@f_state,w
 10847  13BC  0027               	movlb	7	; select bank7
 10848  13BD  1C03               	skipc
 10849  13BE  110D               	bcf	13,2	;volatile
 10850  13BF  1803               	skipnc
 10851  13C0  150D               	bsf	13,2	;volatile
 10852                           
 10853                           ;SwitchBypass.c: 140: LATGbits.LATG1 = !f_state;
 10854  13C1  0020               	movlb	0	; select bank0
 10855  13C2  0832               	movf	setSwitchBypassState@f_state,w
 10856  13C3  0433               	iorwf	setSwitchBypassState@f_state+1,w
 10857  13C4  1D03               	btfss	3,2
 10858  13C5  2BC9               	goto	u2510
 10859  13C6  0027               	movlb	7	; select bank7
 10860  13C7  148D               	bsf	13,1	;volatile
 10861  13C8  2BCB               	goto	l3350
 10862  13C9                     u2510:	
 10863  13C9  0027               	movlb	7	; select bank7
 10864  13CA  108D               	bcf	13,1	;volatile
 10865  13CB                     l3350:	
 10866                           
 10867                           ;SwitchBypass.c: 142: wait_ms(20);
 10868  13CB  3014               	movlw	20
 10869  13CC  0020               	movlb	0	; select bank0
 10870  13CD  00AC               	movwf	wait_ms@timeSec
 10871  13CE  3000               	movlw	0
 10872  13CF  00AD               	movwf	wait_ms@timeSec+1
 10873  13D0  3190  20C9  3193   	fcall	_wait_ms
 10874                           
 10875                           ;SwitchBypass.c: 144: LATGbits.LATG2 = 0;
 10876  13D3  0027               	movlb	7	; select bank7
 10877  13D4  110D               	bcf	13,2	;volatile
 10878                           
 10879                           ;SwitchBypass.c: 145: LATGbits.LATG1 = 0;
 10880  13D5  108D               	bcf	13,1	;volatile
 10881                           
 10882                           ;SwitchBypass.c: 147: updateSwitchBypassState(switchBypass_state);
 10883  13D6  0021               	movlb	1	; select bank1
 10884  13D7  085A               	movf	_switchBypass_state^(0+128),w
 10885  13D8  0020               	movlb	0	; select bank0
 10886  13D9  00B4               	movwf	??_setSwitchBypassState
 10887  13DA  01B5               	clrf	??_setSwitchBypassState+1
 10888  13DB  0834               	movf	??_setSwitchBypassState,w
 10889  13DC  00A0               	movwf	updateSwitchBypassState@state
 10890  13DD  0835               	movf	??_setSwitchBypassState+1,w
 10891  13DE  00A1               	movwf	updateSwitchBypassState@state+1
 10892  13DF  3187  27FE  3193   	fcall	_updateSwitchBypassState
 10893                           
 10894                           ;SwitchBypass.c: 148: wait_ms(20);
 10895  13E2  3014               	movlw	20
 10896  13E3  0020               	movlb	0	; select bank0
 10897  13E4  00AC               	movwf	wait_ms@timeSec
 10898  13E5  3000               	movlw	0
 10899  13E6  00AD               	movwf	wait_ms@timeSec+1
 10900  13E7  3190  20C9         	fcall	_wait_ms
 10901  13E9  0008               	return
 10902  13EA                     __end_of_setSwitchBypassState:	
 10903                           
 10904                           	psect	text27
 10905  10C9                     __ptext27:	
 10906 ;; *************** function _wait_ms *****************
 10907 ;; Defined at:
 10908 ;;		line 23 in file "system.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;  timeSec         2   12[BANK0 ] unsigned int 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  timemsl         4   14[BANK0 ] long 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, status,2, status,0, pclath, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10922 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10923 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10925 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10926 ;;Total ram usage:        6 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:    3
 10929 ;; This function calls:
 10930 ;;		___lmul
 10931 ;; This function is called by:
 10932 ;;		_star_tactiles
 10933 ;;		_solidring_tactiles
 10934 ;;		_read_bottom_tactile
 10935 ;;		_read_top_tactile
 10936 ;;		_setSwitchBypassState
 10937 ;;		_setDoublePressState
 10938 ;;		_showError_Alternating
 10939 ;;		_show_error
 10940 ;;		_show_cancel
 10941 ;;		_ring_tactiles
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           
 10946                           ;psect for function _wait_ms
 10947  10C9                     _wait_ms:	
 10948                           
 10949                           ;system.c: 25: long timemsl = 0;
 10950                           
 10951                           ;incstack = 0
 10952                           ; Regs used in _wait_ms: [wreg+status,2+status,0+pclath+cstack]
 10953  10C9  3000               	movlw	0
 10954  10CA  0020               	movlb	0	; select bank0
 10955  10CB  00B1               	movwf	wait_ms@timemsl+3
 10956  10CC  3000               	movlw	0
 10957  10CD  00B0               	movwf	wait_ms@timemsl+2
 10958  10CE  3000               	movlw	0
 10959  10CF  00AF               	movwf	wait_ms@timemsl+1
 10960  10D0  3000               	movlw	0
 10961  10D1  00AE               	movwf	wait_ms@timemsl
 10962                           
 10963                           ;system.c: 26: timemsl = timeSec * 1000l;
 10964  10D2  082C               	movf	wait_ms@timeSec,w
 10965  10D3  00A0               	movwf	___lmul@multiplier
 10966  10D4  082D               	movf	wait_ms@timeSec+1,w
 10967  10D5  00A1               	movwf	___lmul@multiplier+1
 10968  10D6  01A2               	clrf	___lmul@multiplier+2
 10969  10D7  01A3               	clrf	___lmul@multiplier+3
 10970  10D8  3000               	movlw	0
 10971  10D9  00A7               	movwf	___lmul@multiplicand+3
 10972  10DA  3000               	movlw	0
 10973  10DB  00A6               	movwf	___lmul@multiplicand+2
 10974  10DC  3003               	movlw	3
 10975  10DD  00A5               	movwf	___lmul@multiplicand+1
 10976  10DE  30E8               	movlw	232
 10977  10DF  00A4               	movwf	___lmul@multiplicand
 10978  10E0  3190  2068  3190   	fcall	___lmul
 10979  10E3  0020               	movlb	0	; select bank0
 10980  10E4  0823               	movf	?___lmul+3,w
 10981  10E5  00B1               	movwf	wait_ms@timemsl+3
 10982  10E6  0822               	movf	?___lmul+2,w
 10983  10E7  00B0               	movwf	wait_ms@timemsl+2
 10984  10E8  0821               	movf	?___lmul+1,w
 10985  10E9  00AF               	movwf	wait_ms@timemsl+1
 10986  10EA  0820               	movf	?___lmul,w
 10987  10EB  00AE               	movwf	wait_ms@timemsl
 10988  10EC                     l329:	
 10989                           ;system.c: 27: for( ; timemsl; timemsl--);
 10990                           
 10991  10EC  0831               	movf	wait_ms@timemsl+3,w
 10992  10ED  0430               	iorwf	wait_ms@timemsl+2,w
 10993  10EE  042F               	iorwf	wait_ms@timemsl+1,w
 10994  10EF  042E               	iorwf	wait_ms@timemsl,w
 10995  10F0  1903               	btfsc	3,2
 10996  10F1  0008               	return
 10997  10F2  30FF               	movlw	255
 10998  10F3  07AE               	addwf	wait_ms@timemsl,f
 10999  10F4  30FF               	movlw	255
 11000  10F5  3DAF               	addwfc	wait_ms@timemsl+1,f
 11001  10F6  30FF               	movlw	255
 11002  10F7  3DB0               	addwfc	wait_ms@timemsl+2,f
 11003  10F8  30FF               	movlw	255
 11004  10F9  3DB1               	addwfc	wait_ms@timemsl+3,f
 11005  10FA  28EC               	goto	l329
 11006  10FB                     __end_of_wait_ms:	
 11007                           
 11008                           	psect	text28
 11009  1068                     __ptext28:	
 11010 ;; *************** function ___lmul *****************
 11011 ;; Defined at:
 11012 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  multiplier      4    0[BANK0 ] unsigned long 
 11015 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;  product         4    8[BANK0 ] unsigned long 
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  4    0[BANK0 ] unsigned long 
 11020 ;; Registers used:
 11021 ;;		wreg, status,2, status,0
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11027 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11028 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11030 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11031 ;;Total ram usage:       12 bytes
 11032 ;; Hardware stack levels used:    1
 11033 ;; Hardware stack levels required when called:    2
 11034 ;; This function calls:
 11035 ;;		Nothing
 11036 ;; This function is called by:
 11037 ;;		_wait_ms
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           
 11042                           ;psect for function ___lmul
 11043  1068                     ___lmul:	
 11044                           
 11045                           ;incstack = 0
 11046                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11047  1068  3000               	movlw	0
 11048  1069  0020               	movlb	0	; select bank0
 11049  106A  00AB               	movwf	___lmul@product+3
 11050  106B  3000               	movlw	0
 11051  106C  00AA               	movwf	___lmul@product+2
 11052  106D  3000               	movlw	0
 11053  106E  00A9               	movwf	___lmul@product+1
 11054  106F  3000               	movlw	0
 11055  1070  00A8               	movwf	___lmul@product
 11056  1071                     l3148:	
 11057  1071  1C20               	btfss	___lmul@multiplier,0
 11058  1072  287B               	goto	l3152
 11059  1073  0824               	movf	___lmul@multiplicand,w
 11060  1074  07A8               	addwf	___lmul@product,f
 11061  1075  0825               	movf	___lmul@multiplicand+1,w
 11062  1076  3DA9               	addwfc	___lmul@product+1,f
 11063  1077  0826               	movf	___lmul@multiplicand+2,w
 11064  1078  3DAA               	addwfc	___lmul@product+2,f
 11065  1079  0827               	movf	___lmul@multiplicand+3,w
 11066  107A  3DAB               	addwfc	___lmul@product+3,f
 11067  107B                     l3152:	
 11068  107B  3001               	movlw	1
 11069  107C                     u2295:	
 11070  107C  35A4               	lslf	___lmul@multiplicand,f
 11071  107D  0DA5               	rlf	___lmul@multiplicand+1,f
 11072  107E  0DA6               	rlf	___lmul@multiplicand+2,f
 11073  107F  0DA7               	rlf	___lmul@multiplicand+3,f
 11074  1080  0B89               	decfsz	9,f
 11075  1081  287C               	goto	u2295
 11076  1082  3001               	movlw	1
 11077  1083                     u2305:	
 11078  1083  36A3               	lsrf	___lmul@multiplier+3,f
 11079  1084  0CA2               	rrf	___lmul@multiplier+2,f
 11080  1085  0CA1               	rrf	___lmul@multiplier+1,f
 11081  1086  0CA0               	rrf	___lmul@multiplier,f
 11082  1087  0B89               	decfsz	9,f
 11083  1088  2883               	goto	u2305
 11084  1089  0823               	movf	___lmul@multiplier+3,w
 11085  108A  0422               	iorwf	___lmul@multiplier+2,w
 11086  108B  0421               	iorwf	___lmul@multiplier+1,w
 11087  108C  0420               	iorwf	___lmul@multiplier,w
 11088  108D  1D03               	skipz
 11089  108E  2871               	goto	l3148
 11090  108F  082B               	movf	___lmul@product+3,w
 11091  1090  00A3               	movwf	?___lmul+3
 11092  1091  082A               	movf	___lmul@product+2,w
 11093  1092  00A2               	movwf	?___lmul+2
 11094  1093  0829               	movf	___lmul@product+1,w
 11095  1094  00A1               	movwf	?___lmul+1
 11096  1095  0828               	movf	___lmul@product,w
 11097  1096  00A0               	movwf	?___lmul
 11098  1097  0008               	return
 11099  1098                     __end_of___lmul:	
 11100                           
 11101                           	psect	text29
 11102  07FE                     __ptext29:	
 11103 ;; *************** function _updateSwitchBypassState *****************
 11104 ;; Defined at:
 11105 ;;		line 96 in file "state_manager.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;  state           2    0[BANK0 ] int 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		None
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11119 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11123 ;;Total ram usage:        2 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:    2
 11126 ;; This function calls:
 11127 ;;		Nothing
 11128 ;; This function is called by:
 11129 ;;		_setSwitchBypassState
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           
 11134                           ;psect for function _updateSwitchBypassState
 11135  07FE                     _updateSwitchBypassState:	
 11136                           
 11137                           ;incstack = 0
 11138                           ; Regs used in _updateSwitchBypassState: []
 11139  07FE  0008               	return
 11140  07FF                     __end_of_updateSwitchBypassState:	
 11141                           
 11142                           	psect	text30
 11143  1E94                     __ptext30:	
 11144 ;; *************** function _getSwitchBypassState *****************
 11145 ;; Defined at:
 11146 ;;		line 103 in file "state_manager.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;		None
 11149 ;; Auto vars:     Size  Location     Type
 11150 ;;		None
 11151 ;; Return value:  Size  Location     Type
 11152 ;;                  2    0[BANK0 ] int 
 11153 ;; Registers used:
 11154 ;;		status,2
 11155 ;; Tracked objects:
 11156 ;;		On entry : 0/0
 11157 ;;		On exit  : 0/0
 11158 ;;		Unchanged: 0/0
 11159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11163 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11164 ;;Total ram usage:        2 bytes
 11165 ;; Hardware stack levels used:    1
 11166 ;; Hardware stack levels required when called:    2
 11167 ;; This function calls:
 11168 ;;		Nothing
 11169 ;; This function is called by:
 11170 ;;		_initSwitchBypass
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           
 11175                           ;psect for function _getSwitchBypassState
 11176  1E94                     _getSwitchBypassState:	
 11177                           
 11178                           ;state_manager.c: 108: return 0;
 11179                           
 11180                           ;incstack = 0
 11181                           ; Regs used in _getSwitchBypassState: [status,2]
 11182  1E94  0020               	movlb	0	; select bank0
 11183  1E95  01A0               	clrf	?_getSwitchBypassState
 11184  1E96  01A1               	clrf	?_getSwitchBypassState+1
 11185  1E97  0008               	return
 11186  1E98                     __end_of_getSwitchBypassState:	
 11187                           
 11188                           	psect	text31
 11189  1F23                     __ptext31:	
 11190 ;; *************** function _adc_convert *****************
 11191 ;; Defined at:
 11192 ;;		line 110 in file "user.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;  channel         1    wreg     unsigned char 
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;  channel         1    3[BANK0 ] unsigned char 
 11197 ;; Return value:  Size  Location     Type
 11198 ;;                  2    0[BANK0 ] unsigned int 
 11199 ;; Registers used:
 11200 ;;		wreg, status,2, status,0
 11201 ;; Tracked objects:
 11202 ;;		On entry : 0/0
 11203 ;;		On exit  : 0/0
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11207 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11208 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11209 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11210 ;;Total ram usage:        4 bytes
 11211 ;; Hardware stack levels used:    1
 11212 ;; Hardware stack levels required when called:    2
 11213 ;; This function calls:
 11214 ;;		Nothing
 11215 ;; This function is called by:
 11216 ;;		_main
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220                           
 11221                           ;psect for function _adc_convert
 11222  1F23                     _adc_convert:	
 11223                           
 11224                           ;incstack = 0
 11225                           ; Regs used in _adc_convert: [wreg+status,2+status,0]
 11226                           ;adc_convert@channel stored from wreg
 11227  1F23  0020               	movlb	0	; select bank0
 11228  1F24  00A3               	movwf	adc_convert@channel
 11229                           
 11230                           ;user.c: 111: ADCON0bits.CHS = channel;
 11231  1F25  0823               	movf	adc_convert@channel,w
 11232  1F26  00A2               	movwf	??_adc_convert
 11233  1F27  0DA2               	rlf	??_adc_convert,f
 11234  1F28  0DA2               	rlf	??_adc_convert,f
 11235  1F29  0021               	movlb	1	; select bank1
 11236  1F2A  081D               	movf	29,w	;volatile
 11237  1F2B  0020               	movlb	0	; select bank0
 11238  1F2C  0622               	xorwf	??_adc_convert,w
 11239  1F2D  3983               	andlw	-125
 11240  1F2E  0622               	xorwf	??_adc_convert,w
 11241  1F2F  0021               	movlb	1	; select bank1
 11242  1F30  009D               	movwf	29	;volatile
 11243                           
 11244                           ;user.c: 112: ADCON0bits.GO = 0b1;
 11245  1F31  149D               	bsf	29,1	;volatile
 11246  1F32                     l502:	
 11247                           ;user.c: 113: while (ADCON0bits.GO_nDONE);
 11248                           
 11249  1F32  189D               	btfsc	29,1	;volatile
 11250  1F33  2F32               	goto	l502
 11251                           
 11252                           ;user.c: 114: return (ADRESH << 8) | ADRESL;
 11253  1F34  081C               	movf	28,w	;volatile
 11254  1F35  0020               	movlb	0	; select bank0
 11255  1F36  00A1               	movwf	?_adc_convert+1
 11256  1F37  0021               	movlb	1	; select bank1
 11257  1F38  081B               	movf	27,w	;volatile
 11258  1F39  0020               	movlb	0	; select bank0
 11259  1F3A  00A0               	movwf	?_adc_convert
 11260  1F3B  0008               	return
 11261  1F3C                     __end_of_adc_convert:	
 11262                           
 11263                           	psect	text32
 11264  14DA                     __ptext32:	
 11265 ;; *************** function ___awdiv *****************
 11266 ;; Defined at:
 11267 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 11268 ;; Parameters:    Size  Location     Type
 11269 ;;  divisor         2    0[BANK0 ] int 
 11270 ;;  dividend        2    2[BANK0 ] int 
 11271 ;; Auto vars:     Size  Location     Type
 11272 ;;  quotient        2    7[BANK0 ] int 
 11273 ;;  sign            1    6[BANK0 ] unsigned char 
 11274 ;;  counter         1    5[BANK0 ] unsigned char 
 11275 ;; Return value:  Size  Location     Type
 11276 ;;                  2    0[BANK0 ] int 
 11277 ;; Registers used:
 11278 ;;		wreg, status,2, status,0
 11279 ;; Tracked objects:
 11280 ;;		On entry : 0/0
 11281 ;;		On exit  : 0/0
 11282 ;;		Unchanged: 0/0
 11283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11284 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11285 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11286 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11287 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11288 ;;Total ram usage:        9 bytes
 11289 ;; Hardware stack levels used:    1
 11290 ;; Hardware stack levels required when called:    2
 11291 ;; This function calls:
 11292 ;;		Nothing
 11293 ;; This function is called by:
 11294 ;;		_main
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           
 11299                           ;psect for function ___awdiv
 11300  14DA                     ___awdiv:	
 11301                           
 11302                           ;incstack = 0
 11303                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11304  14DA  0020               	movlb	0	; select bank0
 11305  14DB  01A6               	clrf	___awdiv@sign
 11306  14DC  1FA1               	btfss	___awdiv@divisor+1,7
 11307  14DD  2CE5               	goto	l4044
 11308  14DE  09A0               	comf	___awdiv@divisor,f
 11309  14DF  09A1               	comf	___awdiv@divisor+1,f
 11310  14E0  0AA0               	incf	___awdiv@divisor,f
 11311  14E1  1903               	skipnz
 11312  14E2  0AA1               	incf	___awdiv@divisor+1,f
 11313  14E3  01A6               	clrf	___awdiv@sign
 11314  14E4  0AA6               	incf	___awdiv@sign,f
 11315  14E5                     l4044:	
 11316  14E5  1FA3               	btfss	___awdiv@dividend+1,7
 11317  14E6  2CF0               	goto	l4050
 11318  14E7  09A2               	comf	___awdiv@dividend,f
 11319  14E8  09A3               	comf	___awdiv@dividend+1,f
 11320  14E9  0AA2               	incf	___awdiv@dividend,f
 11321  14EA  1903               	skipnz
 11322  14EB  0AA3               	incf	___awdiv@dividend+1,f
 11323  14EC  3001               	movlw	1
 11324  14ED  00A4               	movwf	??___awdiv
 11325  14EE  0824               	movf	??___awdiv,w
 11326  14EF  06A6               	xorwf	___awdiv@sign,f
 11327  14F0                     l4050:	
 11328  14F0  01A7               	clrf	___awdiv@quotient
 11329  14F1  01A8               	clrf	___awdiv@quotient+1
 11330  14F2  0820               	movf	___awdiv@divisor,w
 11331  14F3  0421               	iorwf	___awdiv@divisor+1,w
 11332  14F4  1903               	btfsc	3,2
 11333  14F5  2D1F               	goto	l4072
 11334  14F6  01A5               	clrf	___awdiv@counter
 11335  14F7  0AA5               	incf	___awdiv@counter,f
 11336  14F8                     l4060:	
 11337  14F8  1BA1               	btfsc	___awdiv@divisor+1,7
 11338  14F9  2D04               	goto	l4062
 11339  14FA  3001               	movlw	1
 11340  14FB                     u3925:	
 11341  14FB  35A0               	lslf	___awdiv@divisor,f
 11342  14FC  0DA1               	rlf	___awdiv@divisor+1,f
 11343  14FD  0B89               	decfsz	9,f
 11344  14FE  2CFB               	goto	u3925
 11345  14FF  3001               	movlw	1
 11346  1500  00A4               	movwf	??___awdiv
 11347  1501  0824               	movf	??___awdiv,w
 11348  1502  07A5               	addwf	___awdiv@counter,f
 11349  1503  2CF8               	goto	l4060
 11350  1504                     l4062:	
 11351  1504  3001               	movlw	1
 11352  1505                     u3945:	
 11353  1505  35A7               	lslf	___awdiv@quotient,f
 11354  1506  0DA8               	rlf	___awdiv@quotient+1,f
 11355  1507  0B89               	decfsz	9,f
 11356  1508  2D05               	goto	u3945
 11357  1509  0821               	movf	___awdiv@divisor+1,w
 11358  150A  0223               	subwf	___awdiv@dividend+1,w
 11359  150B  1D03               	skipz
 11360  150C  2D0F               	goto	u3955
 11361  150D  0820               	movf	___awdiv@divisor,w
 11362  150E  0222               	subwf	___awdiv@dividend,w
 11363  150F                     u3955:	
 11364  150F  1C03               	skipc
 11365  1510  2D16               	goto	l4068
 11366  1511  0820               	movf	___awdiv@divisor,w
 11367  1512  02A2               	subwf	___awdiv@dividend,f
 11368  1513  0821               	movf	___awdiv@divisor+1,w
 11369  1514  3BA3               	subwfb	___awdiv@dividend+1,f
 11370  1515  1427               	bsf	___awdiv@quotient,0
 11371  1516                     l4068:	
 11372  1516  3001               	movlw	1
 11373  1517                     u3965:	
 11374  1517  36A1               	lsrf	___awdiv@divisor+1,f
 11375  1518  0CA0               	rrf	___awdiv@divisor,f
 11376  1519  0B89               	decfsz	9,f
 11377  151A  2D17               	goto	u3965
 11378  151B  3001               	movlw	1
 11379  151C  02A5               	subwf	___awdiv@counter,f
 11380  151D  1D03               	btfss	3,2
 11381  151E  2D04               	goto	l4062
 11382  151F                     l4072:	
 11383  151F  0826               	movf	___awdiv@sign,w
 11384  1520  1903               	btfsc	3,2
 11385  1521  2D27               	goto	l4076
 11386  1522  09A7               	comf	___awdiv@quotient,f
 11387  1523  09A8               	comf	___awdiv@quotient+1,f
 11388  1524  0AA7               	incf	___awdiv@quotient,f
 11389  1525  1903               	skipnz
 11390  1526  0AA8               	incf	___awdiv@quotient+1,f
 11391  1527                     l4076:	
 11392  1527  0828               	movf	___awdiv@quotient+1,w
 11393  1528  00A1               	movwf	?___awdiv+1
 11394  1529  0827               	movf	___awdiv@quotient,w
 11395  152A  00A0               	movwf	?___awdiv
 11396  152B  0008               	return
 11397  152C                     __end_of___awdiv:	
 11398                           
 11399                           	psect	text33
 11400  1258                     __ptext33:	
 11401 ;; *************** function ___altoft *****************
 11402 ;; Defined at:
 11403 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;  c               4    8[BANK0 ] long 
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;  sign            1   15[BANK0 ] unsigned char 
 11408 ;;  exp             1   14[BANK0 ] unsigned char 
 11409 ;; Return value:  Size  Location     Type
 11410 ;;                  3    8[BANK0 ] float 
 11411 ;; Registers used:
 11412 ;;		wreg, status,2, status,0, pclath, cstack
 11413 ;; Tracked objects:
 11414 ;;		On entry : 0/0
 11415 ;;		On exit  : 0/0
 11416 ;;		Unchanged: 0/0
 11417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11418 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11421 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11422 ;;Total ram usage:        8 bytes
 11423 ;; Hardware stack levels used:    1
 11424 ;; Hardware stack levels required when called:    3
 11425 ;; This function calls:
 11426 ;;		___ftpack
 11427 ;; This function is called by:
 11428 ;;		_main
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           
 11432                           
 11433                           ;psect for function ___altoft
 11434  1258                     ___altoft:	
 11435                           
 11436                           ;incstack = 0
 11437                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
 11438  1258  0020               	movlb	0	; select bank0
 11439  1259  01AF               	clrf	___altoft@sign
 11440  125A  308E               	movlw	142
 11441  125B  00AC               	movwf	??___altoft
 11442  125C  082C               	movf	??___altoft,w
 11443  125D  00AE               	movwf	___altoft@exp
 11444  125E  1FAB               	btfss	___altoft@c+3,7
 11445  125F  2A6D               	goto	l4030
 11446  1260  09A8               	comf	___altoft@c,f
 11447  1261  09A9               	comf	___altoft@c+1,f
 11448  1262  09AA               	comf	___altoft@c+2,f
 11449  1263  09AB               	comf	___altoft@c+3,f
 11450  1264  0AA8               	incf	___altoft@c,f
 11451  1265  1903               	skipnz
 11452  1266  0AA9               	incf	___altoft@c+1,f
 11453  1267  1903               	skipnz
 11454  1268  0AAA               	incf	___altoft@c+2,f
 11455  1269  1903               	skipnz
 11456  126A  0AAB               	incf	___altoft@c+3,f
 11457  126B  01AF               	clrf	___altoft@sign
 11458  126C  0AAF               	incf	___altoft@sign,f
 11459  126D                     l4030:	
 11460  126D  30FF               	movlw	255
 11461  126E  052B               	andwf	___altoft@c+3,w
 11462  126F  1903               	btfsc	3,2
 11463  1270  2A7D               	goto	l4032
 11464  1271  3001               	movlw	1
 11465  1272                     u3875:	
 11466  1272  36AB               	lsrf	___altoft@c+3,f
 11467  1273  0CAA               	rrf	___altoft@c+2,f
 11468  1274  0CA9               	rrf	___altoft@c+1,f
 11469  1275  0CA8               	rrf	___altoft@c,f
 11470  1276  0B89               	decfsz	9,f
 11471  1277  2A72               	goto	u3875
 11472  1278  3001               	movlw	1
 11473  1279  00AC               	movwf	??___altoft
 11474  127A  082C               	movf	??___altoft,w
 11475  127B  07AE               	addwf	___altoft@exp,f
 11476  127C  2A6D               	goto	l4030
 11477  127D                     l4032:	
 11478  127D  0828               	movf	___altoft@c,w
 11479  127E  00A0               	movwf	___ftpack@arg
 11480  127F  0829               	movf	___altoft@c+1,w
 11481  1280  00A1               	movwf	___ftpack@arg+1
 11482  1281  082A               	movf	___altoft@c+2,w
 11483  1282  00A2               	movwf	___ftpack@arg+2
 11484  1283  082E               	movf	___altoft@exp,w
 11485  1284  00AC               	movwf	??___altoft
 11486  1285  082C               	movf	??___altoft,w
 11487  1286  00A3               	movwf	___ftpack@exp
 11488  1287  082F               	movf	___altoft@sign,w
 11489  1288  00AD               	movwf	??___altoft+1
 11490  1289  082D               	movf	??___altoft+1,w
 11491  128A  00A4               	movwf	___ftpack@sign
 11492  128B  3195  2580         	fcall	___ftpack
 11493  128D  0020               	movlb	0	; select bank0
 11494  128E  0820               	movf	?___ftpack,w
 11495  128F  00A8               	movwf	?___altoft
 11496  1290  0821               	movf	?___ftpack+1,w
 11497  1291  00A9               	movwf	?___altoft+1
 11498  1292  0822               	movf	?___ftpack+2,w
 11499  1293  00AA               	movwf	?___altoft+2
 11500  1294  0008               	return
 11501  1295                     __end_of___altoft:	
 11502                           
 11503                           	psect	text34
 11504  1580                     __ptext34:	
 11505 ;; *************** function ___ftpack *****************
 11506 ;; Defined at:
 11507 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;  arg             3    0[BANK0 ] unsigned um
 11510 ;;  exp             1    3[BANK0 ] unsigned char 
 11511 ;;  sign            1    4[BANK0 ] unsigned char 
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;		None
 11514 ;; Return value:  Size  Location     Type
 11515 ;;                  3    0[BANK0 ] float 
 11516 ;; Registers used:
 11517 ;;		wreg, status,2, status,0
 11518 ;; Tracked objects:
 11519 ;;		On entry : 0/0
 11520 ;;		On exit  : 0/0
 11521 ;;		Unchanged: 0/0
 11522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11523 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11525 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11526 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11527 ;;Total ram usage:        8 bytes
 11528 ;; Hardware stack levels used:    1
 11529 ;; Hardware stack levels required when called:    2
 11530 ;; This function calls:
 11531 ;;		Nothing
 11532 ;; This function is called by:
 11533 ;;		___altoft
 11534 ;;		___awtoft
 11535 ;;		___ftadd
 11536 ;;		___ftdiv
 11537 ;;		___ftmul
 11538 ;; This function uses a non-reentrant model
 11539 ;;
 11540                           
 11541                           
 11542                           ;psect for function ___ftpack
 11543  1580                     ___ftpack:	
 11544                           
 11545                           ;incstack = 0
 11546                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11547  1580  0020               	movlb	0	; select bank0
 11548  1581  0823               	movf	___ftpack@exp,w
 11549  1582  1903               	btfsc	3,2
 11550  1583  2D89               	goto	l3208
 11551  1584  0822               	movf	___ftpack@arg+2,w
 11552  1585  0421               	iorwf	___ftpack@arg+1,w
 11553  1586  0420               	iorwf	___ftpack@arg,w
 11554  1587  1D03               	skipz
 11555  1588  2D9A               	goto	l3214
 11556  1589                     l3208:	
 11557  1589  3000               	movlw	0
 11558  158A  00A0               	movwf	?___ftpack
 11559  158B  3000               	movlw	0
 11560  158C  00A1               	movwf	?___ftpack+1
 11561  158D  3000               	movlw	0
 11562  158E  00A2               	movwf	?___ftpack+2
 11563  158F  0008               	return
 11564  1590                     l3212:	
 11565  1590  3001               	movlw	1
 11566  1591  00A5               	movwf	??___ftpack
 11567  1592  0825               	movf	??___ftpack,w
 11568  1593  07A3               	addwf	___ftpack@exp,f
 11569  1594  3001               	movlw	1
 11570  1595                     u2355:	
 11571  1595  36A2               	lsrf	___ftpack@arg+2,f
 11572  1596  0CA1               	rrf	___ftpack@arg+1,f
 11573  1597  0CA0               	rrf	___ftpack@arg,f
 11574  1598  0B89               	decfsz	9,f
 11575  1599  2D95               	goto	u2355
 11576  159A                     l3214:	
 11577  159A  30FE               	movlw	254
 11578  159B  0522               	andwf	___ftpack@arg+2,w
 11579  159C  1903               	btfsc	3,2
 11580  159D  2DB3               	goto	l1389
 11581  159E  2D90               	goto	l3212
 11582  159F                     l3216:	
 11583  159F  3001               	movlw	1
 11584  15A0  00A5               	movwf	??___ftpack
 11585  15A1  0825               	movf	??___ftpack,w
 11586  15A2  07A3               	addwf	___ftpack@exp,f
 11587  15A3  3001               	movlw	1
 11588  15A4  07A0               	addwf	___ftpack@arg,f
 11589  15A5  3000               	movlw	0
 11590  15A6  1803               	skipnc
 11591  15A7  3001               	movlw	1
 11592  15A8  07A1               	addwf	___ftpack@arg+1,f
 11593  15A9  3000               	movlw	0
 11594  15AA  1803               	skipnc
 11595  15AB  3001               	movlw	1
 11596  15AC  07A2               	addwf	___ftpack@arg+2,f
 11597  15AD  3001               	movlw	1
 11598  15AE                     u2375:	
 11599  15AE  36A2               	lsrf	___ftpack@arg+2,f
 11600  15AF  0CA1               	rrf	___ftpack@arg+1,f
 11601  15B0  0CA0               	rrf	___ftpack@arg,f
 11602  15B1  0B89               	decfsz	9,f
 11603  15B2  2DAE               	goto	u2375
 11604  15B3                     l1389:	
 11605  15B3  30FF               	movlw	255
 11606  15B4  0522               	andwf	___ftpack@arg+2,w
 11607  15B5  1903               	btfsc	3,2
 11608  15B6  2DC0               	goto	l3224
 11609  15B7  2D9F               	goto	l3216
 11610  15B8                     l3222:	
 11611  15B8  3001               	movlw	1
 11612  15B9  02A3               	subwf	___ftpack@exp,f
 11613  15BA  3001               	movlw	1
 11614  15BB                     u2395:	
 11615  15BB  35A0               	lslf	___ftpack@arg,f
 11616  15BC  0DA1               	rlf	___ftpack@arg+1,f
 11617  15BD  0DA2               	rlf	___ftpack@arg+2,f
 11618  15BE  0B89               	decfsz	9,f
 11619  15BF  2DBB               	goto	u2395
 11620  15C0                     l3224:	
 11621  15C0  1BA1               	btfsc	___ftpack@arg+1,7
 11622  15C1  2DC6               	goto	l1396
 11623  15C2  3002               	movlw	2
 11624  15C3  0223               	subwf	___ftpack@exp,w
 11625  15C4  1803               	skipnc
 11626  15C5  2DB8               	goto	l3222
 11627  15C6                     l1396:	
 11628  15C6  1823               	btfsc	___ftpack@exp,0
 11629  15C7  2DCE               	goto	l1397
 11630  15C8  30FF               	movlw	255
 11631  15C9  05A0               	andwf	___ftpack@arg,f
 11632  15CA  307F               	movlw	127
 11633  15CB  05A1               	andwf	___ftpack@arg+1,f
 11634  15CC  30FF               	movlw	255
 11635  15CD  05A2               	andwf	___ftpack@arg+2,f
 11636  15CE                     l1397:	
 11637  15CE  1003               	clrc
 11638  15CF  0CA3               	rrf	___ftpack@exp,f
 11639  15D0  0823               	movf	___ftpack@exp,w
 11640  15D1  00A5               	movwf	??___ftpack
 11641  15D2  01A6               	clrf	??___ftpack+1
 11642  15D3  01A7               	clrf	??___ftpack+2
 11643  15D4  3010               	movlw	16
 11644  15D5                     u2435:	
 11645  15D5  35A5               	lslf	??___ftpack,f
 11646  15D6  0DA6               	rlf	??___ftpack+1,f
 11647  15D7  0DA7               	rlf	??___ftpack+2,f
 11648  15D8  0B89               	decfsz	9,f
 11649  15D9  2DD5               	goto	u2435
 11650  15DA  0825               	movf	??___ftpack,w
 11651  15DB  04A0               	iorwf	___ftpack@arg,f
 11652  15DC  0826               	movf	??___ftpack+1,w
 11653  15DD  04A1               	iorwf	___ftpack@arg+1,f
 11654  15DE  0827               	movf	??___ftpack+2,w
 11655  15DF  04A2               	iorwf	___ftpack@arg+2,f
 11656  15E0  0824               	movf	___ftpack@sign,w
 11657  15E1  1903               	btfsc	3,2
 11658  15E2  0008               	return
 11659  15E3  17A2               	bsf	___ftpack@arg+2,7
 11660  15E4  0008               	return
 11661  15E5                     __end_of___ftpack:	
 11662                           
 11663                           	psect	text35
 11664  13EA                     __ptext35:	
 11665 ;; *************** function _ReadSavedSettings *****************
 11666 ;; Defined at:
 11667 ;;		line 181 in file "user.c"
 11668 ;; Parameters:    Size  Location     Type
 11669 ;;		None
 11670 ;; Auto vars:     Size  Location     Type
 11671 ;;		None
 11672 ;; Return value:  Size  Location     Type
 11673 ;;                  1    wreg      void 
 11674 ;; Registers used:
 11675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11676 ;; Tracked objects:
 11677 ;;		On entry : 0/0
 11678 ;;		On exit  : 0/0
 11679 ;;		Unchanged: 0/0
 11680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11685 ;;Total ram usage:        0 bytes
 11686 ;; Hardware stack levels used:    1
 11687 ;; Hardware stack levels required when called:    3
 11688 ;; This function calls:
 11689 ;;		_FLASH_ReadWord
 11690 ;;		_set_leds_bottom
 11691 ;;		_set_leds_top
 11692 ;; This function is called by:
 11693 ;;		_main
 11694 ;; This function uses a non-reentrant model
 11695 ;;
 11696                           
 11697                           
 11698                           ;psect for function _ReadSavedSettings
 11699  13EA                     _ReadSavedSettings:	
 11700                           
 11701                           ;user.c: 183: top_push_state = FLASH_ReadWord(0x1F81);
 11702                           
 11703                           ;incstack = 0
 11704                           ; Regs used in _ReadSavedSettings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11705  13EA  3081               	movlw	129
 11706  13EB  0020               	movlb	0	; select bank0
 11707  13EC  00A0               	movwf	FLASH_ReadWord@flashAddr
 11708  13ED  301F               	movlw	31
 11709  13EE  00A1               	movwf	FLASH_ReadWord@flashAddr+1
 11710  13EF  319F  278F  3193   	fcall	_FLASH_ReadWord
 11711  13F2  0020               	movlb	0	; select bank0
 11712  13F3  0821               	movf	?_FLASH_ReadWord+1,w
 11713  13F4  0021               	movlb	1	; select bank1
 11714  13F5  00D6               	movwf	(_top_push_state+1)^(0+128)
 11715  13F6  0020               	movlb	0	; select bank0
 11716  13F7  0820               	movf	?_FLASH_ReadWord,w
 11717  13F8  0021               	movlb	1	; select bank1
 11718  13F9  00D5               	movwf	_top_push_state^(0+128)
 11719                           
 11720                           ;user.c: 184: bottom_push_state = FLASH_ReadWord(0x1F82);
 11721  13FA  3082               	movlw	130
 11722  13FB  0020               	movlb	0	; select bank0
 11723  13FC  00A0               	movwf	FLASH_ReadWord@flashAddr
 11724  13FD  301F               	movlw	31
 11725  13FE  00A1               	movwf	FLASH_ReadWord@flashAddr+1
 11726  13FF  319F  278F  3193   	fcall	_FLASH_ReadWord
 11727  1402  0020               	movlb	0	; select bank0
 11728  1403  0821               	movf	?_FLASH_ReadWord+1,w
 11729  1404  0021               	movlb	1	; select bank1
 11730  1405  00C8               	movwf	(_bottom_push_state+1)^(0+128)
 11731  1406  0020               	movlb	0	; select bank0
 11732  1407  0820               	movf	?_FLASH_ReadWord,w
 11733  1408  0021               	movlb	1	; select bank1
 11734  1409  00C7               	movwf	_bottom_push_state^(0+128)
 11735                           
 11736                           ;user.c: 187: LATGbits.LATG1 = !switchBypass_state;
 11737  140A  085A               	movf	_switchBypass_state^(0+128),w
 11738  140B  1D03               	btfss	3,2
 11739  140C  2C10               	goto	u3290
 11740  140D  0027               	movlb	7	; select bank7
 11741  140E  148D               	bsf	13,1	;volatile
 11742  140F  2C12               	goto	l3700
 11743  1410                     u3290:	
 11744  1410  0027               	movlb	7	; select bank7
 11745  1411  108D               	bcf	13,1	;volatile
 11746  1412                     l3700:	
 11747                           
 11748                           ;user.c: 188: LATGbits.LATG2 = switchBypass_state;
 11749  1412  0021               	movlb	1	; select bank1
 11750  1413  0C5A               	rrf	_switchBypass_state^(0+128),w
 11751  1414  0027               	movlb	7	; select bank7
 11752  1415  1C03               	skipc
 11753  1416  110D               	bcf	13,2	;volatile
 11754  1417  1803               	skipnc
 11755  1418  150D               	bsf	13,2	;volatile
 11756                           
 11757                           ;user.c: 189: LATBbits.LATB2 = 0;
 11758  1419  0022               	movlb	2	; select bank2
 11759  141A  110D               	bcf	13,2	;volatile
 11760                           
 11761                           ;user.c: 190: LATBbits.LATB3 = 0;
 11762  141B  118D               	bcf	13,3	;volatile
 11763                           
 11764                           ;user.c: 192: LATBbits.LATB4 = 0;
 11765  141C  120D               	bcf	13,4	;volatile
 11766                           
 11767                           ;user.c: 193: LATBbits.LATB5 = 0;
 11768  141D  128D               	bcf	13,5	;volatile
 11769                           
 11770                           ;user.c: 195: LATBbits.LATB1 = 0;
 11771  141E  108D               	bcf	13,1	;volatile
 11772                           
 11773                           ;user.c: 196: LATBbits.LATB0 = 0;
 11774  141F  100D               	bcf	13,0	;volatile
 11775                           
 11776                           ;user.c: 199: set_leds_top(top_push_state, 1);
 11777  1420  0021               	movlb	1	; select bank1
 11778  1421  0856               	movf	(_top_push_state+1)^(0+128),w
 11779  1422  0020               	movlb	0	; select bank0
 11780  1423  00A1               	movwf	set_leds_top@x+1
 11781  1424  0021               	movlb	1	; select bank1
 11782  1425  0855               	movf	_top_push_state^(0+128),w
 11783  1426  0020               	movlb	0	; select bank0
 11784  1427  00A0               	movwf	set_leds_top@x
 11785  1428  3001               	movlw	1
 11786  1429  00A2               	movwf	set_leds_top@ledState
 11787  142A  3000               	movlw	0
 11788  142B  00A3               	movwf	set_leds_top@ledState+1
 11789  142C  3195  252C  3193   	fcall	_set_leds_top
 11790                           
 11791                           ;user.c: 200: set_leds_bottom(bottom_push_state);
 11792  142F  0021               	movlb	1	; select bank1
 11793  1430  0848               	movf	(_bottom_push_state+1)^(0+128),w
 11794  1431  0020               	movlb	0	; select bank0
 11795  1432  00A1               	movwf	set_leds_bottom@x+1
 11796  1433  0021               	movlb	1	; select bank1
 11797  1434  0847               	movf	_bottom_push_state^(0+128),w
 11798  1435  0020               	movlb	0	; select bank0
 11799  1436  00A0               	movwf	set_leds_bottom@x
 11800  1437  3192  221D         	fcall	_set_leds_bottom
 11801  1439  0008               	return
 11802  143A                     __end_of_ReadSavedSettings:	
 11803                           
 11804                           	psect	text36
 11805  152C                     __ptext36:	
 11806 ;; *************** function _set_leds_top *****************
 11807 ;; Defined at:
 11808 ;;		line 16 in file "LEDs.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;  x               2    0[BANK0 ] int 
 11811 ;;  ledState        2    2[BANK0 ] int 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;		None
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      void 
 11816 ;; Registers used:
 11817 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 11823 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11826 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 11827 ;;Total ram usage:        4 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:    2
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		_ReadSavedSettings
 11834 ;;		_star_tactiles
 11835 ;;		_solidring_tactiles
 11836 ;;		_read_top_tactile
 11837 ;;		_ring_tactiles
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           
 11842                           ;psect for function _set_leds_top
 11843  152C                     _set_leds_top:	
 11844                           
 11845                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 11846                           
 11847                           ;incstack = 0
 11848                           ; Regs used in _set_leds_top: [wreg-fsr0h+status,2+status,0]
 11849  152C  0027               	movlb	7	; select bank7
 11850  152D  100C               	bcf	12,0	;volatile
 11851                           
 11852                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 11853  152E  108C               	bcf	12,1	;volatile
 11854                           
 11855                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 11856  152F  110C               	bcf	12,2	;volatile
 11857                           
 11858                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 11859  1530  118C               	bcf	12,3	;volatile
 11860                           
 11861                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 11862  1531  120C               	bcf	12,4	;volatile
 11863                           
 11864                           ;LEDs.c: 22: switch (x) {
 11865  1532  2D62               	goto	l3174
 11866  1533                     l3162:	
 11867                           ;LEDs.c: 23: case 1:
 11868                           
 11869                           
 11870                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 11871  1533  0020               	movlb	0	; select bank0
 11872  1534  0C22               	rrf	set_leds_top@ledState,w
 11873  1535  0027               	movlb	7	; select bank7
 11874  1536  1C03               	skipc
 11875  1537  100C               	bcf	12,0	;volatile
 11876  1538  1803               	skipnc
 11877  1539  140C               	bsf	12,0	;volatile
 11878                           
 11879                           ;LEDs.c: 25: break;
 11880  153A  0008               	return
 11881  153B                     l3164:	
 11882                           ;LEDs.c: 26: case 2:
 11883                           
 11884                           
 11885                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 11886  153B  0020               	movlb	0	; select bank0
 11887  153C  0C22               	rrf	set_leds_top@ledState,w
 11888  153D  0027               	movlb	7	; select bank7
 11889  153E  1C03               	skipc
 11890  153F  108C               	bcf	12,1	;volatile
 11891  1540  1803               	skipnc
 11892  1541  148C               	bsf	12,1	;volatile
 11893                           
 11894                           ;LEDs.c: 28: break;
 11895  1542  0008               	return
 11896  1543                     l3166:	
 11897                           ;LEDs.c: 29: case 3:
 11898                           
 11899                           
 11900                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 11901  1543  0020               	movlb	0	; select bank0
 11902  1544  0C22               	rrf	set_leds_top@ledState,w
 11903  1545  0027               	movlb	7	; select bank7
 11904  1546  1C03               	skipc
 11905  1547  110C               	bcf	12,2	;volatile
 11906  1548  1803               	skipnc
 11907  1549  150C               	bsf	12,2	;volatile
 11908                           
 11909                           ;LEDs.c: 31: break;
 11910  154A  0008               	return
 11911  154B                     l3168:	
 11912                           ;LEDs.c: 32: case 4:
 11913                           
 11914                           
 11915                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 11916  154B  0020               	movlb	0	; select bank0
 11917  154C  0C22               	rrf	set_leds_top@ledState,w
 11918  154D  0027               	movlb	7	; select bank7
 11919  154E  1C03               	skipc
 11920  154F  118C               	bcf	12,3	;volatile
 11921  1550  1803               	skipnc
 11922  1551  158C               	bsf	12,3	;volatile
 11923                           
 11924                           ;LEDs.c: 34: break;
 11925  1552  0008               	return
 11926  1553                     l3170:	
 11927                           ;LEDs.c: 35: case 5:
 11928                           
 11929                           
 11930                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 11931  1553  0020               	movlb	0	; select bank0
 11932  1554  0C22               	rrf	set_leds_top@ledState,w
 11933  1555  0027               	movlb	7	; select bank7
 11934  1556  1C03               	skipc
 11935  1557  120C               	bcf	12,4	;volatile
 11936  1558  1803               	skipnc
 11937  1559  160C               	bsf	12,4	;volatile
 11938                           
 11939                           ;LEDs.c: 39: break;
 11940                           
 11941                           ;LEDs.c: 38: case 6:
 11942                           
 11943                           ;LEDs.c: 37: break;
 11944  155A  0008               	return
 11945  155B                     l659:	
 11946                           ;LEDs.c: 40: case 100:
 11947                           
 11948                           
 11949                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 11950  155B  0027               	movlb	7	; select bank7
 11951  155C  140C               	bsf	12,0	;volatile
 11952                           
 11953                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 11954  155D  148C               	bsf	12,1	;volatile
 11955                           
 11956                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 11957  155E  150C               	bsf	12,2	;volatile
 11958                           
 11959                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 11960  155F  158C               	bsf	12,3	;volatile
 11961                           
 11962                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 11963  1560  160C               	bsf	12,4	;volatile
 11964                           
 11965                           ;LEDs.c: 47: }
 11966                           
 11967                           ;LEDs.c: 46: break;
 11968  1561  0008               	return
 11969  1562                     l3174:	
 11970                           
 11971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11972                           ; Switch size 1, requested type "space"
 11973                           ; Number of cases is 1, Range of values is 0 to 0
 11974                           ; switch strategies available:
 11975                           ; Name         Instructions Cycles
 11976                           ; simple_byte            4     3 (average)
 11977                           ; direct_byte            8     6 (fixed)
 11978                           ; jumptable            260     6 (fixed)
 11979                           ;	Chosen strategy is simple_byte
 11980  1562  0020               	movlb	0	; select bank0
 11981  1563  0821               	movf	set_leds_top@x+1,w
 11982  1564  3A00               	xorlw	0	; case 0
 11983  1565  1903               	skipnz
 11984  1566  2D68               	goto	l4596
 11985  1567  2D7F               	goto	l660
 11986  1568                     l4596:	
 11987                           
 11988                           ; Switch size 1, requested type "space"
 11989                           ; Number of cases is 7, Range of values is 1 to 100
 11990                           ; switch strategies available:
 11991                           ; Name         Instructions Cycles
 11992                           ; simple_byte           22    12 (average)
 11993                           ; direct_byte          209     9 (fixed)
 11994                           ; jumptable            263     9 (fixed)
 11995                           ;	Chosen strategy is simple_byte
 11996  1568  0820               	movf	set_leds_top@x,w
 11997  1569  3A01               	xorlw	1	; case 1
 11998  156A  1903               	skipnz
 11999  156B  2D33               	goto	l3162
 12000  156C  3A03               	xorlw	3	; case 2
 12001  156D  1903               	skipnz
 12002  156E  2D3B               	goto	l3164
 12003  156F  3A01               	xorlw	1	; case 3
 12004  1570  1903               	skipnz
 12005  1571  2D43               	goto	l3166
 12006  1572  3A07               	xorlw	7	; case 4
 12007  1573  1903               	skipnz
 12008  1574  2D4B               	goto	l3168
 12009  1575  3A01               	xorlw	1	; case 5
 12010  1576  1903               	skipnz
 12011  1577  2D53               	goto	l3170
 12012  1578  3A03               	xorlw	3	; case 6
 12013  1579  1903               	skipnz
 12014  157A  2D7F               	goto	l660
 12015  157B  3A62               	xorlw	98	; case 100
 12016  157C  1903               	skipnz
 12017  157D  2D5B               	goto	l659
 12018  157E  2D7F               	goto	l660
 12019  157F                     l660:	
 12020  157F  0008               	return
 12021  1580                     __end_of_set_leds_top:	
 12022                           
 12023                           	psect	text37
 12024  121D                     __ptext37:	
 12025 ;; *************** function _set_leds_bottom *****************
 12026 ;; Defined at:
 12027 ;;		line 51 in file "LEDs.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;  x               2    0[BANK0 ] int 
 12030 ;; Auto vars:     Size  Location     Type
 12031 ;;		None
 12032 ;; Return value:  Size  Location     Type
 12033 ;;                  1    wreg      void 
 12034 ;; Registers used:
 12035 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12036 ;; Tracked objects:
 12037 ;;		On entry : 0/0
 12038 ;;		On exit  : 0/0
 12039 ;;		Unchanged: 0/0
 12040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12041 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12044 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12045 ;;Total ram usage:        2 bytes
 12046 ;; Hardware stack levels used:    1
 12047 ;; Hardware stack levels required when called:    2
 12048 ;; This function calls:
 12049 ;;		Nothing
 12050 ;; This function is called by:
 12051 ;;		_ReadSavedSettings
 12052 ;;		_star_tactiles
 12053 ;;		_solidring_tactiles
 12054 ;;		_read_bottom_tactile
 12055 ;;		_ring_tactiles
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           
 12060                           ;psect for function _set_leds_bottom
 12061  121D                     _set_leds_bottom:	
 12062                           
 12063                           ;LEDs.c: 52: LATDbits.LATD0 = 0;
 12064                           
 12065                           ;incstack = 0
 12066                           ; Regs used in _set_leds_bottom: [wreg-fsr0h+status,2+status,0]
 12067  121D  0022               	movlb	2	; select bank2
 12068  121E  100F               	bcf	15,0	;volatile
 12069                           
 12070                           ;LEDs.c: 53: LATDbits.LATD1 = 0;
 12071  121F  108F               	bcf	15,1	;volatile
 12072                           
 12073                           ;LEDs.c: 54: LATDbits.LATD2 = 0;
 12074  1220  110F               	bcf	15,2	;volatile
 12075                           
 12076                           ;LEDs.c: 55: LATDbits.LATD3 = 0;
 12077  1221  118F               	bcf	15,3	;volatile
 12078                           
 12079                           ;LEDs.c: 56: LATDbits.LATD4 = 0;
 12080  1222  120F               	bcf	15,4	;volatile
 12081                           
 12082                           ;LEDs.c: 57: switch (x) {
 12083  1223  2A3A               	goto	l3198
 12084  1224                     l664:	
 12085                           ;LEDs.c: 58: case 1:
 12086                           
 12087                           
 12088                           ;LEDs.c: 59: LATDbits.LATD0 = 1;
 12089  1224  0022               	movlb	2	; select bank2
 12090  1225  140F               	bsf	15,0	;volatile
 12091                           
 12092                           ;LEDs.c: 60: break;
 12093  1226  0008               	return
 12094  1227                     l666:	
 12095                           ;LEDs.c: 61: case 2:
 12096                           
 12097                           
 12098                           ;LEDs.c: 62: LATDbits.LATD1 = 1;
 12099  1227  0022               	movlb	2	; select bank2
 12100  1228  148F               	bsf	15,1	;volatile
 12101                           
 12102                           ;LEDs.c: 63: break;
 12103  1229  0008               	return
 12104  122A                     l667:	
 12105                           ;LEDs.c: 64: case 3:
 12106                           
 12107                           
 12108                           ;LEDs.c: 65: LATDbits.LATD2 = 1;
 12109  122A  0022               	movlb	2	; select bank2
 12110  122B  150F               	bsf	15,2	;volatile
 12111                           
 12112                           ;LEDs.c: 66: break;
 12113  122C  0008               	return
 12114  122D                     l668:	
 12115                           ;LEDs.c: 67: case 4:
 12116                           
 12117                           
 12118                           ;LEDs.c: 68: LATDbits.LATD3 = 1;
 12119  122D  0022               	movlb	2	; select bank2
 12120  122E  158F               	bsf	15,3	;volatile
 12121                           
 12122                           ;LEDs.c: 69: break;
 12123  122F  0008               	return
 12124  1230                     l669:	
 12125                           ;LEDs.c: 70: case 5:
 12126                           
 12127                           
 12128                           ;LEDs.c: 71: LATDbits.LATD4 = 1;
 12129  1230  0022               	movlb	2	; select bank2
 12130  1231  160F               	bsf	15,4	;volatile
 12131                           
 12132                           ;LEDs.c: 74: break;
 12133                           
 12134                           ;LEDs.c: 73: case 6:
 12135                           
 12136                           ;LEDs.c: 72: break;
 12137  1232  0008               	return
 12138  1233                     l671:	
 12139                           ;LEDs.c: 75: case 100:
 12140                           
 12141                           
 12142                           ;LEDs.c: 76: LATDbits.LATD0 = 1;
 12143  1233  0022               	movlb	2	; select bank2
 12144  1234  140F               	bsf	15,0	;volatile
 12145                           
 12146                           ;LEDs.c: 77: LATDbits.LATD1 = 1;
 12147  1235  148F               	bsf	15,1	;volatile
 12148                           
 12149                           ;LEDs.c: 78: LATDbits.LATD2 = 1;
 12150  1236  150F               	bsf	15,2	;volatile
 12151                           
 12152                           ;LEDs.c: 79: LATDbits.LATD3 = 1;
 12153  1237  158F               	bsf	15,3	;volatile
 12154                           
 12155                           ;LEDs.c: 80: LATDbits.LATD4 = 1;
 12156  1238  160F               	bsf	15,4	;volatile
 12157                           
 12158                           ;LEDs.c: 82: }
 12159                           
 12160                           ;LEDs.c: 81: break;
 12161  1239  0008               	return
 12162  123A                     l3198:	
 12163                           
 12164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12165                           ; Switch size 1, requested type "space"
 12166                           ; Number of cases is 1, Range of values is 0 to 0
 12167                           ; switch strategies available:
 12168                           ; Name         Instructions Cycles
 12169                           ; simple_byte            4     3 (average)
 12170                           ; direct_byte            8     6 (fixed)
 12171                           ; jumptable            260     6 (fixed)
 12172                           ;	Chosen strategy is simple_byte
 12173  123A  0020               	movlb	0	; select bank0
 12174  123B  0821               	movf	set_leds_bottom@x+1,w
 12175  123C  3A00               	xorlw	0	; case 0
 12176  123D  1903               	skipnz
 12177  123E  2A40               	goto	l4598
 12178  123F  2A57               	goto	l672
 12179  1240                     l4598:	
 12180                           
 12181                           ; Switch size 1, requested type "space"
 12182                           ; Number of cases is 7, Range of values is 1 to 100
 12183                           ; switch strategies available:
 12184                           ; Name         Instructions Cycles
 12185                           ; simple_byte           22    12 (average)
 12186                           ; direct_byte          209     9 (fixed)
 12187                           ; jumptable            263     9 (fixed)
 12188                           ;	Chosen strategy is simple_byte
 12189  1240  0820               	movf	set_leds_bottom@x,w
 12190  1241  3A01               	xorlw	1	; case 1
 12191  1242  1903               	skipnz
 12192  1243  2A24               	goto	l664
 12193  1244  3A03               	xorlw	3	; case 2
 12194  1245  1903               	skipnz
 12195  1246  2A27               	goto	l666
 12196  1247  3A01               	xorlw	1	; case 3
 12197  1248  1903               	skipnz
 12198  1249  2A2A               	goto	l667
 12199  124A  3A07               	xorlw	7	; case 4
 12200  124B  1903               	skipnz
 12201  124C  2A2D               	goto	l668
 12202  124D  3A01               	xorlw	1	; case 5
 12203  124E  1903               	skipnz
 12204  124F  2A30               	goto	l669
 12205  1250  3A03               	xorlw	3	; case 6
 12206  1251  1903               	skipnz
 12207  1252  2A57               	goto	l672
 12208  1253  3A62               	xorlw	98	; case 100
 12209  1254  1903               	skipnz
 12210  1255  2A33               	goto	l671
 12211  1256  2A57               	goto	l672
 12212  1257                     l672:	
 12213  1257  0008               	return
 12214  1258                     __end_of_set_leds_bottom:	
 12215                           
 12216                           	psect	text38
 12217  1F8F                     __ptext38:	
 12218 ;; *************** function _FLASH_ReadWord *****************
 12219 ;; Defined at:
 12220 ;;		line 58 in file "memory.c"
 12221 ;; Parameters:    Size  Location     Type
 12222 ;;  flashAddr       2    0[BANK0 ] unsigned int 
 12223 ;; Auto vars:     Size  Location     Type
 12224 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 12225 ;; Return value:  Size  Location     Type
 12226 ;;                  2    0[BANK0 ] unsigned int 
 12227 ;; Registers used:
 12228 ;;		wreg, status,2, status,0
 12229 ;; Tracked objects:
 12230 ;;		On entry : 0/0
 12231 ;;		On exit  : 0/0
 12232 ;;		Unchanged: 0/0
 12233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12235 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12237 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12238 ;;Total ram usage:        3 bytes
 12239 ;; Hardware stack levels used:    1
 12240 ;; Hardware stack levels required when called:    2
 12241 ;; This function calls:
 12242 ;;		Nothing
 12243 ;; This function is called by:
 12244 ;;		_ReadSavedSettings
 12245 ;;		_FLASH_WriteWord
 12246 ;; This function uses a non-reentrant model
 12247 ;;
 12248                           
 12249                           
 12250                           ;psect for function _FLASH_ReadWord
 12251  1F8F                     _FLASH_ReadWord:	
 12252                           
 12253                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
 12254                           
 12255                           ;incstack = 0
 12256                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
 12257  1F8F  3000               	movlw	0
 12258  1F90  1B8B               	btfsc	11,7	;volatile
 12259  1F91  3001               	movlw	1
 12260  1F92  0020               	movlb	0	; select bank0
 12261  1F93  00A2               	movwf	FLASH_ReadWord@GIEBitValue
 12262                           
 12263                           ;memory.c: 61: INTCONbits.GIE = 0;
 12264  1F94  138B               	bcf	11,7	;volatile
 12265                           
 12266                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
 12267  1F95  0820               	movf	FLASH_ReadWord@flashAddr,w
 12268  1F96  0023               	movlb	3	; select bank3
 12269  1F97  0091               	movwf	17	;volatile
 12270                           
 12271                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
 12272  1F98  0020               	movlb	0	; select bank0
 12273  1F99  0821               	movf	FLASH_ReadWord@flashAddr+1,w
 12274  1F9A  0023               	movlb	3	; select bank3
 12275  1F9B  0092               	movwf	18	;volatile
 12276                           
 12277                           ;memory.c: 65: PMCON1bits.CFGS = 0;
 12278  1F9C  1315               	bcf	21,6	;volatile
 12279                           
 12280                           ;memory.c: 66: PMCON1bits.RD = 1;
 12281  1F9D  1415               	bsf	21,0	;volatile
 12282                           
 12283                           ;memory.c: 67: __nop();
 12284  1F9E  0000               	nop
 12285                           
 12286                           ;memory.c: 68: __nop();
 12287  1F9F  0000               	nop
 12288                           
 12289                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
 12290  1FA0  0020               	movlb	0	; select bank0
 12291  1FA1  0C22               	rrf	FLASH_ReadWord@GIEBitValue,w
 12292  1FA2  1C03               	skipc
 12293  1FA3  138B               	bcf	11,7	;volatile
 12294  1FA4  1803               	skipnc
 12295  1FA5  178B               	bsf	11,7	;volatile
 12296                           
 12297                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
 12298  1FA6  0023               	movlb	3	; select bank3
 12299  1FA7  0814               	movf	20,w	;volatile
 12300  1FA8  0020               	movlb	0	; select bank0
 12301  1FA9  00A1               	movwf	?_FLASH_ReadWord+1
 12302  1FAA  0023               	movlb	3	; select bank3
 12303  1FAB  0813               	movf	19,w	;volatile
 12304  1FAC  0020               	movlb	0	; select bank0
 12305  1FAD  00A0               	movwf	?_FLASH_ReadWord
 12306  1FAE  0008               	return
 12307  1FAF                     __end_of_FLASH_ReadWord:	
 12308                           
 12309                           	psect	text39
 12310  1FAF                     __ptext39:	
 12311 ;; *************** function _InitializeTaps *****************
 12312 ;; Defined at:
 12313 ;;		line 175 in file "user.c"
 12314 ;; Parameters:    Size  Location     Type
 12315 ;;		None
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;  itap            2    1[BANK0 ] int 
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  1    wreg      void 
 12320 ;; Registers used:
 12321 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12328 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12329 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12330 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12331 ;;Total ram usage:        3 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:    2
 12334 ;; This function calls:
 12335 ;;		Nothing
 12336 ;; This function is called by:
 12337 ;;		_main
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           
 12341                           
 12342                           ;psect for function _InitializeTaps
 12343  1FAF                     _InitializeTaps:	
 12344                           
 12345                           ;user.c: 176: for (int itap = 0; itap < 12; itap++) {
 12346                           
 12347                           ;incstack = 0
 12348                           ; Regs used in _InitializeTaps: [wreg+fsr1l+fsr1h+status,2+status,0]
 12349  1FAF  0020               	movlb	0	; select bank0
 12350  1FB0  01A1               	clrf	InitializeTaps@itap
 12351  1FB1  01A2               	clrf	InitializeTaps@itap+1
 12352  1FB2                     L10:	
 12353  1FB2  0822               	movf	InitializeTaps@itap+1,w
 12354  1FB3  3A80               	xorlw	128
 12355  1FB4  00A0               	movwf	??_InitializeTaps
 12356  1FB5  3080               	movlw	128
 12357  1FB6  0220               	subwf	??_InitializeTaps,w
 12358  1FB7  1D03               	skipz
 12359  1FB8  2FBB               	goto	u3265
 12360  1FB9  300C               	movlw	12
 12361  1FBA  0221               	subwf	InitializeTaps@itap,w
 12362  1FBB                     u3265:	
 12363  1FBB  1803               	btfsc	3,0
 12364  1FBC  0008               	return
 12365                           
 12366                           ;user.c: 177: tap[itap] = 0;
 12367  1FBD  0020               	movlb	0	; select bank0
 12368  1FBE  0821               	movf	InitializeTaps@itap,w
 12369  1FBF  00A0               	movwf	??_InitializeTaps
 12370  1FC0  3001               	movlw	1
 12371  1FC1                     u3275:	
 12372  1FC1  35A0               	lslf	??_InitializeTaps,f
 12373  1FC2  3EFF               	addlw	-1
 12374  1FC3  1D03               	skipz
 12375  1FC4  2FC1               	goto	u3275
 12376  1FC5  3520               	lslf	??_InitializeTaps,w
 12377  1FC6  3EA0               	addlw	(low (_tap| (0+256)))& (0+255)
 12378  1FC7  0086               	movwf	6
 12379  1FC8  3001               	movlw	1	; select bank3/4
 12380  1FC9  0087               	movwf	7
 12381  1FCA  3000               	movlw	0
 12382  1FCB  3FC0               	movwi [0]fsr1
 12383  1FCC  3000               	movlw	0
 12384  1FCD  3FC1               	movwi [1]fsr1
 12385  1FCE  3FC2               	movwi [2]fsr1
 12386  1FCF  3FC3               	movwi [3]fsr1
 12387  1FD0  3001               	movlw	1
 12388  1FD1  07A1               	addwf	InitializeTaps@itap,f
 12389  1FD2  3000               	movlw	0
 12390  1FD3  3DA2               	addwfc	InitializeTaps@itap+1,f
 12391  1FD4  2FB2               	goto	L10
 12392  1FD5                     __end_of_InitializeTaps:	
 12393                           
 12394                           	psect	text40
 12395  1038                     __ptext40:	
 12396 ;; *************** function _InitApp *****************
 12397 ;; Defined at:
 12398 ;;		line 23 in file "user.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;		None
 12401 ;; Auto vars:     Size  Location     Type
 12402 ;;		None
 12403 ;; Return value:  Size  Location     Type
 12404 ;;                  1    wreg      void 
 12405 ;; Registers used:
 12406 ;;		wreg, status,2, status,0, pclath, cstack
 12407 ;; Tracked objects:
 12408 ;;		On entry : 0/0
 12409 ;;		On exit  : 0/0
 12410 ;;		Unchanged: 0/0
 12411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12416 ;;Total ram usage:        0 bytes
 12417 ;; Hardware stack levels used:    1
 12418 ;; Hardware stack levels required when called:    4
 12419 ;; This function calls:
 12420 ;;		_init_adc
 12421 ;;		_init_pwm
 12422 ;; This function is called by:
 12423 ;;		_main
 12424 ;; This function uses a non-reentrant model
 12425 ;;
 12426                           
 12427                           
 12428                           ;psect for function _InitApp
 12429  1038                     _InitApp:	
 12430                           
 12431                           ;user.c: 24: TRISBbits.TRISB0 = 0;
 12432                           
 12433                           ;incstack = 0
 12434                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
 12435  1038  0021               	movlb	1	; select bank1
 12436  1039  100D               	bcf	13,0	;volatile
 12437                           
 12438                           ;user.c: 25: TRISBbits.TRISB1 = 0;
 12439  103A  108D               	bcf	13,1	;volatile
 12440                           
 12441                           ;user.c: 26: TRISBbits.TRISB2 = 0;
 12442  103B  110D               	bcf	13,2	;volatile
 12443                           
 12444                           ;user.c: 27: TRISBbits.TRISB3 = 0;
 12445  103C  118D               	bcf	13,3	;volatile
 12446                           
 12447                           ;user.c: 28: TRISBbits.TRISB4 = 0;
 12448  103D  120D               	bcf	13,4	;volatile
 12449                           
 12450                           ;user.c: 29: TRISBbits.TRISB5 = 0;
 12451  103E  128D               	bcf	13,5	;volatile
 12452                           
 12453                           ;user.c: 31: TRISCbits.TRISC0 = 1;
 12454  103F  140E               	bsf	14,0	;volatile
 12455                           
 12456                           ;user.c: 32: TRISCbits.TRISC4 = 0;
 12457  1040  120E               	bcf	14,4	;volatile
 12458                           
 12459                           ;user.c: 33: TRISCbits.TRISC5 = 0;
 12460  1041  128E               	bcf	14,5	;volatile
 12461                           
 12462                           ;user.c: 36: TRISDbits.TRISD0 = 0;
 12463  1042  100F               	bcf	15,0	;volatile
 12464                           
 12465                           ;user.c: 37: TRISDbits.TRISD1 = 0;
 12466  1043  108F               	bcf	15,1	;volatile
 12467                           
 12468                           ;user.c: 38: TRISDbits.TRISD2 = 0;
 12469  1044  110F               	bcf	15,2	;volatile
 12470                           
 12471                           ;user.c: 39: TRISDbits.TRISD3 = 0;
 12472  1045  118F               	bcf	15,3	;volatile
 12473                           
 12474                           ;user.c: 40: TRISDbits.TRISD4 = 0;
 12475  1046  120F               	bcf	15,4	;volatile
 12476                           
 12477                           ;user.c: 41: TRISDbits.TRISD5 = 1;
 12478  1047  168F               	bsf	15,5	;volatile
 12479                           
 12480                           ;user.c: 42: TRISDbits.TRISD6 = 1;
 12481  1048  170F               	bsf	15,6	;volatile
 12482                           
 12483                           ;user.c: 43: TRISDbits.TRISD7 = 1;
 12484  1049  178F               	bsf	15,7	;volatile
 12485                           
 12486                           ;user.c: 49: TRISEbits.TRISE0 = 1;
 12487  104A  1410               	bsf	16,0	;volatile
 12488                           
 12489                           ;user.c: 50: TRISEbits.TRISE1 = 1;
 12490  104B  1490               	bsf	16,1	;volatile
 12491                           
 12492                           ;user.c: 51: ANSELEbits.ANSE0 = 0;
 12493  104C  0023               	movlb	3	; select bank3
 12494  104D  1010               	bcf	16,0	;volatile
 12495                           
 12496                           ;user.c: 52: ANSELEbits.ANSE1 = 0;
 12497  104E  1090               	bcf	16,1	;volatile
 12498                           
 12499                           ;user.c: 53: PORTEbits.RE0 = 0;
 12500  104F  0020               	movlb	0	; select bank0
 12501  1050  1010               	bcf	16,0	;volatile
 12502                           
 12503                           ;user.c: 54: PORTEbits.RE1 = 0;
 12504  1051  1090               	bcf	16,1	;volatile
 12505                           
 12506                           ;user.c: 56: TRISFbits.TRISF0 = 0;
 12507  1052  0026               	movlb	6	; select bank6
 12508  1053  100C               	bcf	12,0	;volatile
 12509                           
 12510                           ;user.c: 57: TRISFbits.TRISF1 = 0;
 12511  1054  108C               	bcf	12,1	;volatile
 12512                           
 12513                           ;user.c: 58: TRISFbits.TRISF2 = 0;
 12514  1055  110C               	bcf	12,2	;volatile
 12515                           
 12516                           ;user.c: 59: TRISFbits.TRISF3 = 0;
 12517  1056  118C               	bcf	12,3	;volatile
 12518                           
 12519                           ;user.c: 60: TRISFbits.TRISF4 = 0;
 12520  1057  120C               	bcf	12,4	;volatile
 12521                           
 12522                           ;user.c: 61: TRISFbits.TRISF5 = 0;
 12523  1058  128C               	bcf	12,5	;volatile
 12524                           
 12525                           ;user.c: 62: TRISFbits.TRISF6 = 1;
 12526  1059  170C               	bsf	12,6	;volatile
 12527                           
 12528                           ;user.c: 63: ANSELFbits.ANSF6 = 0;
 12529  105A  0028               	movlb	8	; select bank8
 12530  105B  130C               	bcf	12,6	;volatile
 12531                           
 12532                           ;user.c: 65: TRISGbits.TRISG1 = 0;
 12533  105C  0026               	movlb	6	; select bank6
 12534  105D  108D               	bcf	13,1	;volatile
 12535                           
 12536                           ;user.c: 66: TRISGbits.TRISG2 = 0;
 12537  105E  110D               	bcf	13,2	;volatile
 12538                           
 12539                           ;user.c: 68: init_adc();
 12540  105F  3190  2001  3190   	fcall	_init_adc
 12541                           
 12542                           ;user.c: 69: init_pwm();
 12543  1062  3188  2000         	fcall	_init_pwm
 12544                           
 12545                           ;user.c: 71: INTCONbits.GIE = 0b1;
 12546  1064  178B               	bsf	11,7	;volatile
 12547                           
 12548                           ;user.c: 72: INTCONbits.TMR0IE = 0b1;
 12549  1065  168B               	bsf	11,5	;volatile
 12550                           
 12551                           ;user.c: 73: INTCONbits.TMR0IF = 0b0;
 12552  1066  110B               	bcf	11,2	;volatile
 12553  1067  0008               	return
 12554  1068                     __end_of_InitApp:	
 12555                           
 12556                           	psect	text41
 12557  0800                     __ptext41:	
 12558 ;; *************** function _init_pwm *****************
 12559 ;; Defined at:
 12560 ;;		line 117 in file "user.c"
 12561 ;; Parameters:    Size  Location     Type
 12562 ;;		None
 12563 ;; Auto vars:     Size  Location     Type
 12564 ;;		None
 12565 ;; Return value:  Size  Location     Type
 12566 ;;                  1    wreg      void 
 12567 ;; Registers used:
 12568 ;;		wreg, status,2, status,0, pclath, cstack
 12569 ;; Tracked objects:
 12570 ;;		On entry : 0/0
 12571 ;;		On exit  : 0/0
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12578 ;;Total ram usage:        0 bytes
 12579 ;; Hardware stack levels used:    1
 12580 ;; Hardware stack levels required when called:    3
 12581 ;; This function calls:
 12582 ;;		_init_timer0
 12583 ;;		_init_timer2
 12584 ;; This function is called by:
 12585 ;;		_InitApp
 12586 ;; This function uses a non-reentrant model
 12587 ;;
 12588                           
 12589                           
 12590                           ;psect for function _init_pwm
 12591  0800                     _init_pwm:	
 12592                           
 12593                           ;user.c: 118: APFCONbits.CCP2SEL = 0;
 12594                           
 12595                           ;incstack = 0
 12596                           ; Regs used in _init_pwm: [wreg+status,2+status,0+pclath+cstack]
 12597  0800  0022               	movlb	2	; select bank2
 12598  0801  101D               	bcf	29,0	;volatile
 12599                           
 12600                           ;user.c: 119: TRISCbits.TRISC2 = 0;
 12601  0802  0021               	movlb	1	; select bank1
 12602  0803  110E               	bcf	14,2	;volatile
 12603                           
 12604                           ;user.c: 120: TRISCbits.TRISC1 = 0;
 12605  0804  108E               	bcf	14,1	;volatile
 12606                           
 12607                           ;user.c: 121: TRISGbits.TRISG0 = 0;
 12608  0805  0026               	movlb	6	; select bank6
 12609  0806  100D               	bcf	13,0	;volatile
 12610                           
 12611                           ;user.c: 122: TRISGbits.TRISG3 = 0;
 12612  0807  118D               	bcf	13,3	;volatile
 12613                           
 12614                           ;user.c: 123: TRISGbits.TRISG4 = 0;
 12615  0808  120D               	bcf	13,4	;volatile
 12616                           
 12617                           ;user.c: 124: TRISEbits.TRISE6 = 0;
 12618  0809  0021               	movlb	1	; select bank1
 12619  080A  1310               	bcf	16,6	;volatile
 12620                           
 12621                           ;user.c: 125: TRISEbits.TRISE5 = 0;
 12622  080B  1290               	bcf	16,5	;volatile
 12623                           
 12624                           ;user.c: 126: TRISEbits.TRISE4 = 0;
 12625  080C  1210               	bcf	16,4	;volatile
 12626                           
 12627                           ;user.c: 127: TRISEbits.TRISE3 = 0;
 12628  080D  1190               	bcf	16,3	;volatile
 12629                           
 12630                           ;user.c: 128: TRISEbits.TRISE2 = 0;
 12631  080E  1110               	bcf	16,2	;volatile
 12632                           
 12633                           ;user.c: 129: CCP1CONbits.CCP1M = 0b1111;
 12634  080F  300F               	movlw	15
 12635  0810  0025               	movlb	5	; select bank5
 12636  0811  0493               	iorwf	19,f	;volatile
 12637                           
 12638                           ;user.c: 130: CCP2CONbits.CCP2M = 0b1111;
 12639  0812  300F               	movlw	15
 12640  0813  049A               	iorwf	26,f	;volatile
 12641                           
 12642                           ;user.c: 131: CCP3CONbits.CCP3M = 0b1111;
 12643  0814  300F               	movlw	15
 12644  0815  0026               	movlb	6	; select bank6
 12645  0816  0493               	iorwf	19,f	;volatile
 12646                           
 12647                           ;user.c: 132: CCP4CONbits.CCP4M = 0b1111;
 12648  0817  300F               	movlw	15
 12649  0818  049A               	iorwf	26,f	;volatile
 12650                           
 12651                           ;user.c: 133: CCP5CONbits.CCP5M = 0b1111;
 12652  0819  300F               	movlw	15
 12653  081A  049E               	iorwf	30,f	;volatile
 12654                           
 12655                           ;user.c: 134: CCP6CONbits.CCP6M = 0b1111;
 12656  081B  300F               	movlw	15
 12657  081C  002C               	movlb	12	; select bank12
 12658  081D  0493               	iorwf	19,f	;volatile
 12659                           
 12660                           ;user.c: 135: CCP7CONbits.CCP7M = 0b1111;
 12661  081E  300F               	movlw	15
 12662  081F  0496               	iorwf	22,f	;volatile
 12663                           
 12664                           ;user.c: 136: CCP8CONbits.CCP8M = 0b1111;
 12665  0820  300F               	movlw	15
 12666  0821  0499               	iorwf	25,f	;volatile
 12667                           
 12668                           ;user.c: 137: CCP9CONbits.CCP9M = 0b1111;
 12669  0822  300F               	movlw	15
 12670  0823  049C               	iorwf	28,f	;volatile
 12671                           
 12672                           ;user.c: 138: CCP10CONbits.CCP10M = 0b1111;
 12673  0824  300F               	movlw	15
 12674  0825  049F               	iorwf	31,f	;volatile
 12675                           
 12676                           ;user.c: 139: CCPTMRS0 = 0b00000000;
 12677  0826  0025               	movlb	5	; select bank5
 12678  0827  019D               	clrf	29	;volatile
 12679                           
 12680                           ;user.c: 140: CCPTMRS1 = 0b00000000;
 12681  0828  019E               	clrf	30	;volatile
 12682                           
 12683                           ;user.c: 141: CCPTMRS2 = 0b00000000;
 12684  0829  019F               	clrf	31	;volatile
 12685                           
 12686                           ;user.c: 142: CCPR1 = 50;
 12687  082A  3000               	movlw	0
 12688  082B  0092               	movwf	18	;volatile
 12689  082C  3032               	movlw	50
 12690  082D  0091               	movwf	17	;volatile
 12691                           
 12692                           ;user.c: 143: CCPR2 = 100;
 12693  082E  3000               	movlw	0
 12694  082F  0099               	movwf	25	;volatile
 12695  0830  3064               	movlw	100
 12696  0831  0098               	movwf	24	;volatile
 12697                           
 12698                           ;user.c: 144: CCPR3 = 150;
 12699  0832  3000               	movlw	0
 12700  0833  0026               	movlb	6	; select bank6
 12701  0834  0092               	movwf	18	;volatile
 12702  0835  3096               	movlw	150
 12703  0836  0091               	movwf	17	;volatile
 12704                           
 12705                           ;user.c: 145: CCPR4 = 200;
 12706  0837  3000               	movlw	0
 12707  0838  0099               	movwf	25	;volatile
 12708  0839  30C8               	movlw	200
 12709  083A  0098               	movwf	24	;volatile
 12710                           
 12711                           ;user.c: 146: init_timer2();
 12712  083B  319E  269F  3188   	fcall	_init_timer2
 12713                           
 12714                           ;user.c: 147: init_timer0();
 12715  083E  319E  2698         	fcall	_init_timer0
 12716  0840  0008               	return
 12717  0841                     __end_of_init_pwm:	
 12718                           
 12719                           	psect	text42
 12720  1E9F                     __ptext42:	
 12721 ;; *************** function _init_timer2 *****************
 12722 ;; Defined at:
 12723 ;;		line 150 in file "user.c"
 12724 ;; Parameters:    Size  Location     Type
 12725 ;;		None
 12726 ;; Auto vars:     Size  Location     Type
 12727 ;;		None
 12728 ;; Return value:  Size  Location     Type
 12729 ;;                  1    wreg      void 
 12730 ;; Registers used:
 12731 ;;		wreg, status,2, status,0
 12732 ;; Tracked objects:
 12733 ;;		On entry : 0/0
 12734 ;;		On exit  : 0/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12741 ;;Total ram usage:        0 bytes
 12742 ;; Hardware stack levels used:    1
 12743 ;; Hardware stack levels required when called:    2
 12744 ;; This function calls:
 12745 ;;		Nothing
 12746 ;; This function is called by:
 12747 ;;		_init_pwm
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           
 12752                           ;psect for function _init_timer2
 12753  1E9F                     _init_timer2:	
 12754                           
 12755                           ;user.c: 151: T2CONbits.T2OUTPS = 0b0000;
 12756                           
 12757                           ;incstack = 0
 12758                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
 12759  1E9F  3087               	movlw	-121
 12760  1EA0  0020               	movlb	0	; select bank0
 12761  1EA1  059C               	andwf	28,f	;volatile
 12762                           
 12763                           ;user.c: 152: T2CONbits.T2CKPS = 0b00;
 12764  1EA2  30FC               	movlw	-4
 12765  1EA3  059C               	andwf	28,f	;volatile
 12766                           
 12767                           ;user.c: 153: PR2 = 0xFF;
 12768  1EA4  30FF               	movlw	255
 12769  1EA5  009B               	movwf	27	;volatile
 12770                           
 12771                           ;user.c: 154: T2CONbits.TMR2ON = 1;
 12772  1EA6  151C               	bsf	28,2	;volatile
 12773  1EA7  0008               	return
 12774  1EA8                     __end_of_init_timer2:	
 12775                           
 12776                           	psect	text43
 12777  1E98                     __ptext43:	
 12778 ;; *************** function _init_timer0 *****************
 12779 ;; Defined at:
 12780 ;;		line 157 in file "user.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;		None
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;		None
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  1    wreg      void 
 12787 ;; Registers used:
 12788 ;;		None
 12789 ;; Tracked objects:
 12790 ;;		On entry : 0/0
 12791 ;;		On exit  : 0/0
 12792 ;;		Unchanged: 0/0
 12793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12798 ;;Total ram usage:        0 bytes
 12799 ;; Hardware stack levels used:    1
 12800 ;; Hardware stack levels required when called:    2
 12801 ;; This function calls:
 12802 ;;		Nothing
 12803 ;; This function is called by:
 12804 ;;		_init_pwm
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           
 12809                           ;psect for function _init_timer0
 12810  1E98                     _init_timer0:	
 12811                           
 12812                           ;user.c: 158: OPTION_REGbits.TMR0CS = 0b0;
 12813                           
 12814                           ;incstack = 0
 12815                           ; Regs used in _init_timer0: []
 12816  1E98  0021               	movlb	1	; select bank1
 12817  1E99  1295               	bcf	21,5	;volatile
 12818                           
 12819                           ;user.c: 159: OPTION_REGbits.PSA = 0b0;
 12820  1E9A  1195               	bcf	21,3	;volatile
 12821                           
 12822                           ;user.c: 160: OPTION_REGbits.PS0 = 0b0;
 12823  1E9B  1015               	bcf	21,0	;volatile
 12824                           
 12825                           ;user.c: 161: OPTION_REGbits.PS1 = 0b1;
 12826  1E9C  1495               	bsf	21,1	;volatile
 12827                           
 12828                           ;user.c: 162: OPTION_REGbits.PS2 = 0b0;
 12829  1E9D  1115               	bcf	21,2	;volatile
 12830  1E9E  0008               	return
 12831  1E9F                     __end_of_init_timer0:	
 12832                           
 12833                           	psect	text44
 12834  1001                     __ptext44:	
 12835 ;; *************** function _init_adc *****************
 12836 ;; Defined at:
 12837 ;;		line 103 in file "user.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;		None
 12840 ;; Auto vars:     Size  Location     Type
 12841 ;;		None
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  1    wreg      void 
 12844 ;; Registers used:
 12845 ;;		wreg, status,2, status,0
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12855 ;;Total ram usage:        0 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:    2
 12858 ;; This function calls:
 12859 ;;		Nothing
 12860 ;; This function is called by:
 12861 ;;		_InitApp
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           
 12865                           
 12866                           ;psect for function _init_adc
 12867  1001                     _init_adc:	
 12868                           
 12869                           ;user.c: 104: ADCON1bits.ADFM = 0b1;
 12870                           
 12871                           ;incstack = 0
 12872                           ; Regs used in _init_adc: [wreg+status,2+status,0]
 12873  1001  0021               	movlb	1	; select bank1
 12874  1002  179E               	bsf	30,7	;volatile
 12875                           
 12876                           ;user.c: 105: ADCON1bits.ADCS = 0b110;
 12877  1003  081E               	movf	30,w	;volatile
 12878  1004  398F               	andlw	-113
 12879  1005  3860               	iorlw	96
 12880  1006  009E               	movwf	30	;volatile
 12881                           
 12882                           ;user.c: 106: ADCON1bits.ADPREF = 0b00;
 12883  1007  30FC               	movlw	-4
 12884  1008  059E               	andwf	30,f	;volatile
 12885                           
 12886                           ;user.c: 107: ADCON0bits.ADON = 0b1;
 12887  1009  141D               	bsf	29,0	;volatile
 12888  100A  0008               	return
 12889  100B                     __end_of_init_adc:	
 12890                           
 12891                           	psect	text45
 12892  1E90                     __ptext45:	
 12893 ;; *************** function _ConfigureOscillator *****************
 12894 ;; Defined at:
 12895 ;;		line 18 in file "system.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;		None
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;		None
 12900 ;; Return value:  Size  Location     Type
 12901 ;;                  1    wreg      void 
 12902 ;; Registers used:
 12903 ;;		wreg, status,2, status,0
 12904 ;; Tracked objects:
 12905 ;;		On entry : 0/0
 12906 ;;		On exit  : 0/0
 12907 ;;		Unchanged: 0/0
 12908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12913 ;;Total ram usage:        0 bytes
 12914 ;; Hardware stack levels used:    1
 12915 ;; Hardware stack levels required when called:    2
 12916 ;; This function calls:
 12917 ;;		Nothing
 12918 ;; This function is called by:
 12919 ;;		_main
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           
 12923                           
 12924                           ;psect for function _ConfigureOscillator
 12925  1E90                     _ConfigureOscillator:	
 12926                           
 12927                           ;system.c: 20: OSCCONbits.SCS = 0b00;
 12928                           
 12929                           ;incstack = 0
 12930                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
 12931  1E90  30FC               	movlw	-4
 12932  1E91  0021               	movlb	1	; select bank1
 12933  1E92  0599               	andwf	25,f	;volatile
 12934  1E93  0008               	return
 12935  1E94                     __end_of_ConfigureOscillator:	
 12936                           
 12937                           	psect	intentry
 12938  0004                     __pintentry:	
 12939 ;; *************** function _isr *****************
 12940 ;; Defined at:
 12941 ;;		line 23 in file "interrupts.c"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;		None
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;		None
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  1    wreg      void 
 12948 ;; Registers used:
 12949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12950 ;; Tracked objects:
 12951 ;;		On entry : 0/0
 12952 ;;		On exit  : 0/0
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 12955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12957 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12958 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 12959 ;;Total ram usage:        5 bytes
 12960 ;; Hardware stack levels used:    1
 12961 ;; Hardware stack levels required when called:    1
 12962 ;; This function calls:
 12963 ;;		i1_set_leds_top
 12964 ;; This function is called by:
 12965 ;;		Interrupt level 1
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           
 12969  0004                     _isr:	
 12970                           
 12971                           ;incstack = 0
 12972                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12973  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12974  0005  3180               	pagesel	$
 12975  0006  0020               	movlb	0	; select bank0
 12976  0007  087F               	movf	127,w
 12977  0008  00F8               	movwf	??_isr+4
 12978                           
 12979                           ;interrupts.c: 24: extern volatile long timer;
 12980                           ;interrupts.c: 25: extern volatile long sub_timer;
 12981                           ;interrupts.c: 26: extern volatile long tap_timer;
 12982                           ;interrupts.c: 28: extern volatile long baseline_delay_time;
 12983                           ;interrupts.c: 30: extern int top_push_state;
 12984                           ;interrupts.c: 31: extern uint8_t feedback_start;
 12985                           ;interrupts.c: 32: extern volatile long mod_timer;
 12986                           ;interrupts.c: 33: extern volatile long delay_time;
 12987                           ;interrupts.c: 34: if (INTCONbits.TMR0IF == 1) {
 12988  0009  1D0B               	btfss	11,2	;volatile
 12989  000A  28A5               	goto	i1l4118
 12990                           
 12991                           ;interrupts.c: 35: timer = timer + 1;
 12992  000B  3001               	movlw	1
 12993  000C  00F4               	movwf	??_isr
 12994  000D  3000               	movlw	0
 12995  000E  00F5               	movwf	??_isr+1
 12996  000F  3000               	movlw	0
 12997  0010  00F6               	movwf	??_isr+2
 12998  0011  3000               	movlw	0
 12999  0012  00F7               	movwf	??_isr+3
 13000  0013  0021               	movlb	1	; select bank1
 13001  0014  0860               	movf	_timer^(0+128),w	;volatile
 13002  0015  07F4               	addwf	??_isr,f
 13003  0016  0861               	movf	(_timer+1)^(0+128),w	;volatile
 13004  0017  3DF5               	addwfc	??_isr+1,f
 13005  0018  0862               	movf	(_timer+2)^(0+128),w	;volatile
 13006  0019  3DF6               	addwfc	??_isr+2,f
 13007  001A  0863               	movf	(_timer+3)^(0+128),w	;volatile
 13008  001B  3DF7               	addwfc	??_isr+3,f
 13009  001C  0877               	movf	??_isr+3,w
 13010  001D  00E3               	movwf	(_timer+3)^(0+128)	;volatile
 13011  001E  0876               	movf	??_isr+2,w
 13012  001F  00E2               	movwf	(_timer+2)^(0+128)	;volatile
 13013  0020  0875               	movf	??_isr+1,w
 13014  0021  00E1               	movwf	(_timer+1)^(0+128)	;volatile
 13015  0022  0874               	movf	??_isr,w
 13016  0023  00E0               	movwf	_timer^(0+128)	;volatile
 13017                           
 13018                           ;interrupts.c: 36: sub_timer = sub_timer + 1;
 13019  0024  3001               	movlw	1
 13020  0025  00F4               	movwf	??_isr
 13021  0026  3000               	movlw	0
 13022  0027  00F5               	movwf	??_isr+1
 13023  0028  3000               	movlw	0
 13024  0029  00F6               	movwf	??_isr+2
 13025  002A  3000               	movlw	0
 13026  002B  00F7               	movwf	??_isr+3
 13027  002C  085C               	movf	_sub_timer^(0+128),w	;volatile
 13028  002D  07F4               	addwf	??_isr,f
 13029  002E  085D               	movf	(_sub_timer+1)^(0+128),w	;volatile
 13030  002F  3DF5               	addwfc	??_isr+1,f
 13031  0030  085E               	movf	(_sub_timer+2)^(0+128),w	;volatile
 13032  0031  3DF6               	addwfc	??_isr+2,f
 13033  0032  085F               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13034  0033  3DF7               	addwfc	??_isr+3,f
 13035  0034  0877               	movf	??_isr+3,w
 13036  0035  00DF               	movwf	(_sub_timer+3)^(0+128)	;volatile
 13037  0036  0876               	movf	??_isr+2,w
 13038  0037  00DE               	movwf	(_sub_timer+2)^(0+128)	;volatile
 13039  0038  0875               	movf	??_isr+1,w
 13040  0039  00DD               	movwf	(_sub_timer+1)^(0+128)	;volatile
 13041  003A  0874               	movf	??_isr,w
 13042  003B  00DC               	movwf	_sub_timer^(0+128)	;volatile
 13043                           
 13044                           ;interrupts.c: 37: tap_timer = tap_timer + 1;
 13045  003C  3001               	movlw	1
 13046  003D  00F4               	movwf	??_isr
 13047  003E  3000               	movlw	0
 13048  003F  00F5               	movwf	??_isr+1
 13049  0040  3000               	movlw	0
 13050  0041  00F6               	movwf	??_isr+2
 13051  0042  3000               	movlw	0
 13052  0043  00F7               	movwf	??_isr+3
 13053  0044  0879               	movf	_tap_timer,w	;volatile
 13054  0045  07F4               	addwf	??_isr,f
 13055  0046  087A               	movf	_tap_timer+1,w	;volatile
 13056  0047  3DF5               	addwfc	??_isr+1,f
 13057  0048  087B               	movf	_tap_timer+2,w	;volatile
 13058  0049  3DF6               	addwfc	??_isr+2,f
 13059  004A  087C               	movf	_tap_timer+3,w	;volatile
 13060  004B  3DF7               	addwfc	??_isr+3,f
 13061  004C  0877               	movf	??_isr+3,w
 13062  004D  00FC               	movwf	_tap_timer+3	;volatile
 13063  004E  0876               	movf	??_isr+2,w
 13064  004F  00FB               	movwf	_tap_timer+2	;volatile
 13065  0050  0875               	movf	??_isr+1,w
 13066  0051  00FA               	movwf	_tap_timer+1	;volatile
 13067  0052  0874               	movf	??_isr,w
 13068  0053  00F9               	movwf	_tap_timer	;volatile
 13069                           
 13070                           ;interrupts.c: 38: mod_timer = mod_timer + 1;
 13071  0054  3001               	movlw	1
 13072  0055  00F4               	movwf	??_isr
 13073  0056  3000               	movlw	0
 13074  0057  00F5               	movwf	??_isr+1
 13075  0058  3000               	movlw	0
 13076  0059  00F6               	movwf	??_isr+2
 13077  005A  3000               	movlw	0
 13078  005B  00F7               	movwf	??_isr+3
 13079  005C  0022               	movlb	2	; select bank2
 13080  005D  0838               	movf	_mod_timer^(0+256),w	;volatile
 13081  005E  07F4               	addwf	??_isr,f
 13082  005F  0839               	movf	(_mod_timer+1)^(0+256),w	;volatile
 13083  0060  3DF5               	addwfc	??_isr+1,f
 13084  0061  083A               	movf	(_mod_timer+2)^(0+256),w	;volatile
 13085  0062  3DF6               	addwfc	??_isr+2,f
 13086  0063  083B               	movf	(_mod_timer+3)^(0+256),w	;volatile
 13087  0064  3DF7               	addwfc	??_isr+3,f
 13088  0065  0877               	movf	??_isr+3,w
 13089  0066  00BB               	movwf	(_mod_timer+3)^(0+256)	;volatile
 13090  0067  0876               	movf	??_isr+2,w
 13091  0068  00BA               	movwf	(_mod_timer+2)^(0+256)	;volatile
 13092  0069  0875               	movf	??_isr+1,w
 13093  006A  00B9               	movwf	(_mod_timer+1)^(0+256)	;volatile
 13094  006B  0874               	movf	??_isr,w
 13095  006C  00B8               	movwf	_mod_timer^(0+256)	;volatile
 13096                           
 13097                           ;interrupts.c: 39: test_timer++;
 13098  006D  3001               	movlw	1
 13099  006E  0023               	movlb	3	; select bank3
 13100  006F  07CC               	addwf	_test_timer^(0+384),f	;volatile
 13101  0070  3000               	movlw	0
 13102  0071  3DCD               	addwfc	(_test_timer+1)^(0+384),f	;volatile
 13103  0072  3000               	movlw	0
 13104  0073  3DCE               	addwfc	(_test_timer+2)^(0+384),f	;volatile
 13105  0074  3000               	movlw	0
 13106  0075  3DCF               	addwfc	(_test_timer+3)^(0+384),f	;volatile
 13107                           
 13108                           ;interrupts.c: 40: if (feedback_start == 1) {
 13109  0076  0021               	movlb	1	; select bank1
 13110  0077  0369               	decf	_feedback_start^(0+128),w
 13111  0078  1D03               	btfss	3,2
 13112  0079  288A               	goto	i1l4110
 13113                           
 13114                           ;interrupts.c: 41: feedback_timer++;
 13115  007A  3001               	movlw	1
 13116  007B  07E4               	addwf	_feedback_timer^(0+128),f	;volatile
 13117  007C  3000               	movlw	0
 13118  007D  3DE5               	addwfc	(_feedback_timer+1)^(0+128),f	;volatile
 13119                           
 13120                           ;interrupts.c: 42: if (feedback_timer > long_press_limit) {feedback_timer = long_press_l
      +                          imit;}
 13121  007E  0865               	movf	(_feedback_timer+1)^(0+128),w	;volatile
 13122  007F  0254               	subwf	(_long_press_limit+1)^(0+128),w
 13123  0080  1D03               	skipz
 13124  0081  2884               	goto	u401_25
 13125  0082  0864               	movf	_feedback_timer^(0+128),w	;volatile
 13126  0083  0253               	subwf	_long_press_limit^(0+128),w
 13127  0084                     u401_25:	
 13128  0084  1803               	skipnc
 13129  0085  288A               	goto	i1l4110
 13130  0086  0854               	movf	(_long_press_limit+1)^(0+128),w
 13131  0087  00E5               	movwf	(_feedback_timer+1)^(0+128)	;volatile
 13132  0088  0853               	movf	_long_press_limit^(0+128),w
 13133  0089  00E4               	movwf	_feedback_timer^(0+128)	;volatile
 13134  008A                     i1l4110:	
 13135                           
 13136                           ;interrupts.c: 43: }
 13137                           ;interrupts.c: 44: if (longTap_start == 1) {
 13138  008A  036A               	decf	_longTap_start^(0+128),w
 13139  008B  1D03               	btfss	3,2
 13140  008C  28A4               	goto	i1l4116
 13141                           
 13142                           ;interrupts.c: 45: longTap_timer++;
 13143  008D  3001               	movlw	1
 13144  008E  0022               	movlb	2	; select bank2
 13145  008F  07D8               	addwf	_longTap_timer^(0+256),f	;volatile
 13146  0090  3000               	movlw	0
 13147  0091  3DD9               	addwfc	(_longTap_timer+1)^(0+256),f	;volatile
 13148                           
 13149                           ;interrupts.c: 46: if (longTap_timer > long_press_limit) {
 13150  0092  0859               	movf	(_longTap_timer+1)^(0+256),w	;volatile
 13151  0093  0021               	movlb	1	; select bank1
 13152  0094  0254               	subwf	(_long_press_limit+1)^(0+128),w
 13153  0095  1D03               	skipz
 13154  0096  289B               	goto	u403_25
 13155  0097  0022               	movlb	2	; select bank2
 13156  0098  0858               	movf	_longTap_timer^(0+256),w	;volatile
 13157  0099  0021               	movlb	1	; select bank1
 13158  009A  0253               	subwf	_long_press_limit^(0+128),w
 13159  009B                     u403_25:	
 13160  009B  1803               	skipnc
 13161  009C  28A4               	goto	i1l4116
 13162                           
 13163                           ;interrupts.c: 47: longTap_timer = long_press_limit;
 13164  009D  0854               	movf	(_long_press_limit+1)^(0+128),w
 13165  009E  0022               	movlb	2	; select bank2
 13166  009F  00D9               	movwf	(_longTap_timer+1)^(0+256)	;volatile
 13167  00A0  0021               	movlb	1	; select bank1
 13168  00A1  0853               	movf	_long_press_limit^(0+128),w
 13169  00A2  0022               	movlb	2	; select bank2
 13170  00A3  00D8               	movwf	_longTap_timer^(0+256)	;volatile
 13171  00A4                     i1l4116:	
 13172                           
 13173                           ;interrupts.c: 48: }
 13174                           ;interrupts.c: 49: }
 13175                           ;interrupts.c: 51: INTCONbits.TMR0IF = 0;
 13176  00A4  110B               	bcf	11,2	;volatile
 13177  00A5                     i1l4118:	
 13178                           
 13179                           ;interrupts.c: 52: }
 13180                           ;interrupts.c: 65: if (longTap_state < 1 && doubleTap_state < 1) {
 13181  00A5  0021               	movlb	1	; select bank1
 13182  00A6  0858               	movf	_longTap_state^(0+128),w	;volatile
 13183  00A7  1D03               	btfss	3,2
 13184  00A8  28DC               	goto	i1l4132
 13185  00A9  087D               	movf	_doubleTap_state,w	;volatile
 13186  00AA  1D03               	btfss	3,2
 13187  00AB  28DC               	goto	i1l4132
 13188                           
 13189                           ;interrupts.c: 67: if (timer >= baseline_delay_time) {
 13190  00AC  0863               	movf	(_timer+3)^(0+128),w	;volatile
 13191  00AD  3A80               	xorlw	128
 13192  00AE  00F4               	movwf	??_isr
 13193  00AF  0842               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
 13194  00B0  3A80               	xorlw	128
 13195  00B1  0274               	subwf	??_isr,w
 13196  00B2  1D03               	skipz
 13197  00B3  28BE               	goto	u406_23
 13198  00B4  0841               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
 13199  00B5  0262               	subwf	(_timer+2)^(0+128),w	;volatile
 13200  00B6  1D03               	skipz
 13201  00B7  28BE               	goto	u406_23
 13202  00B8  0840               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 13203  00B9  0261               	subwf	(_timer+1)^(0+128),w	;volatile
 13204  00BA  1D03               	skipz
 13205  00BB  28BE               	goto	u406_23
 13206  00BC  083F               	movf	_baseline_delay_time^(0+128),w	;volatile
 13207  00BD  0260               	subwf	_timer^(0+128),w	;volatile
 13208  00BE                     u406_23:	
 13209  00BE  1C03               	skipc
 13210  00BF  28CB               	goto	i1l4128
 13211                           
 13212                           ;interrupts.c: 70: LATBbits.LATB4 = 1;
 13213  00C0  0022               	movlb	2	; select bank2
 13214  00C1  160D               	bsf	13,4	;volatile
 13215                           
 13216                           ;interrupts.c: 72: timer = 0;
 13217  00C2  3000               	movlw	0
 13218  00C3  0021               	movlb	1	; select bank1
 13219  00C4  00E3               	movwf	(_timer+3)^(0+128)	;volatile
 13220  00C5  3000               	movlw	0
 13221  00C6  00E2               	movwf	(_timer+2)^(0+128)	;volatile
 13222  00C7  3000               	movlw	0
 13223  00C8  00E1               	movwf	(_timer+1)^(0+128)	;volatile
 13224  00C9  3000               	movlw	0
 13225  00CA  00E0               	movwf	_timer^(0+128)	;volatile
 13226  00CB                     i1l4128:	
 13227                           
 13228                           ;interrupts.c: 73: }
 13229                           ;interrupts.c: 75: if (timer >= 20) {
 13230  00CB  1BE3               	btfsc	(_timer+3)^(0+128),7	;volatile
 13231  00CC  28DC               	goto	i1l4132
 13232  00CD  0863               	movf	(_timer+3)^(0+128),w	;volatile
 13233  00CE  1D03               	btfss	3,2
 13234  00CF  28DA               	goto	i1l4130
 13235  00D0  0862               	movf	(_timer+2)^(0+128),w	;volatile
 13236  00D1  1D03               	btfss	3,2
 13237  00D2  28DA               	goto	i1l4130
 13238  00D3  0861               	movf	(_timer+1)^(0+128),w	;volatile
 13239  00D4  1D03               	btfss	3,2
 13240  00D5  28DA               	goto	i1l4130
 13241  00D6  3014               	movlw	20
 13242  00D7  0260               	subwf	_timer^(0+128),w	;volatile
 13243  00D8  1C03               	btfss	3,0
 13244  00D9  28DC               	goto	i1l4132
 13245  00DA                     i1l4130:	
 13246                           
 13247                           ;interrupts.c: 77: LATBbits.LATB4 = 0;
 13248  00DA  0022               	movlb	2	; select bank2
 13249  00DB  120D               	bcf	13,4	;volatile
 13250  00DC                     i1l4132:	
 13251                           
 13252                           ;interrupts.c: 79: }
 13253                           ;interrupts.c: 80: }
 13254                           ;interrupts.c: 83: if (sub_timer >= delay_time) {
 13255  00DC  0021               	movlb	1	; select bank1
 13256  00DD  085F               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13257  00DE  3A80               	xorlw	128
 13258  00DF  00F4               	movwf	??_isr
 13259  00E0  0846               	movf	(_delay_time+3)^(0+128),w	;volatile
 13260  00E1  3A80               	xorlw	128
 13261  00E2  0274               	subwf	??_isr,w
 13262  00E3  1D03               	skipz
 13263  00E4  28EF               	goto	u408_23
 13264  00E5  0845               	movf	(_delay_time+2)^(0+128),w	;volatile
 13265  00E6  025E               	subwf	(_sub_timer+2)^(0+128),w	;volatile
 13266  00E7  1D03               	skipz
 13267  00E8  28EF               	goto	u408_23
 13268  00E9  0844               	movf	(_delay_time+1)^(0+128),w	;volatile
 13269  00EA  025D               	subwf	(_sub_timer+1)^(0+128),w	;volatile
 13270  00EB  1D03               	skipz
 13271  00EC  28EF               	goto	u408_23
 13272  00ED  0843               	movf	_delay_time^(0+128),w	;volatile
 13273  00EE  025C               	subwf	_sub_timer^(0+128),w	;volatile
 13274  00EF                     u408_23:	
 13275  00EF  1C03               	skipc
 13276  00F0  2908               	goto	i1l4140
 13277                           
 13278                           ;interrupts.c: 84: if (suspend_blink == 0) {
 13279  00F1  086E               	movf	_suspend_blink^(0+128),w	;volatile
 13280  00F2  1D03               	btfss	3,2
 13281  00F3  28FF               	goto	i1l4138
 13282                           
 13283                           ;interrupts.c: 85: set_leds_top(top_push_state, 1);
 13284  00F4  0856               	movf	(_top_push_state+1)^(0+128),w
 13285  00F5  00F1               	movwf	i1set_leds_top@x+1
 13286  00F6  0855               	movf	_top_push_state^(0+128),w
 13287  00F7  00F0               	movwf	i1set_leds_top@x
 13288  00F8  3001               	movlw	1
 13289  00F9  00F2               	movwf	i1set_leds_top@ledState
 13290  00FA  3000               	movlw	0
 13291  00FB  00F3               	movwf	i1set_leds_top@ledState+1
 13292  00FC  3193  2358  3180   	fcall	i1_set_leds_top
 13293  00FF                     i1l4138:	
 13294                           
 13295                           ;interrupts.c: 86: }
 13296                           ;interrupts.c: 87: sub_timer = 0;
 13297  00FF  3000               	movlw	0
 13298  0100  0021               	movlb	1	; select bank1
 13299  0101  00DF               	movwf	(_sub_timer+3)^(0+128)	;volatile
 13300  0102  3000               	movlw	0
 13301  0103  00DE               	movwf	(_sub_timer+2)^(0+128)	;volatile
 13302  0104  3000               	movlw	0
 13303  0105  00DD               	movwf	(_sub_timer+1)^(0+128)	;volatile
 13304  0106  3000               	movlw	0
 13305  0107  00DC               	movwf	_sub_timer^(0+128)	;volatile
 13306  0108                     i1l4140:	
 13307                           
 13308                           ;interrupts.c: 88: }
 13309                           ;interrupts.c: 90: if (sub_timer >= 20) {
 13310  0108  1BDF               	btfsc	(_sub_timer+3)^(0+128),7	;volatile
 13311  0109  2924               	goto	i1l4146
 13312  010A  085F               	movf	(_sub_timer+3)^(0+128),w	;volatile
 13313  010B  1D03               	btfss	3,2
 13314  010C  2917               	goto	i1l4142
 13315  010D  085E               	movf	(_sub_timer+2)^(0+128),w	;volatile
 13316  010E  1D03               	btfss	3,2
 13317  010F  2917               	goto	i1l4142
 13318  0110  085D               	movf	(_sub_timer+1)^(0+128),w	;volatile
 13319  0111  1D03               	btfss	3,2
 13320  0112  2917               	goto	i1l4142
 13321  0113  3014               	movlw	20
 13322  0114  025C               	subwf	_sub_timer^(0+128),w	;volatile
 13323  0115  1C03               	btfss	3,0
 13324  0116  2924               	goto	i1l4146
 13325  0117                     i1l4142:	
 13326                           
 13327                           ;interrupts.c: 91: if (suspend_blink == 0) {
 13328  0117  086E               	movf	_suspend_blink^(0+128),w	;volatile
 13329  0118  1D03               	btfss	3,2
 13330  0119  2924               	goto	i1l4146
 13331                           
 13332                           ;interrupts.c: 92: set_leds_top(top_push_state, 0);
 13333  011A  0856               	movf	(_top_push_state+1)^(0+128),w
 13334  011B  00F1               	movwf	i1set_leds_top@x+1
 13335  011C  0855               	movf	_top_push_state^(0+128),w
 13336  011D  00F0               	movwf	i1set_leds_top@x
 13337  011E  3000               	movlw	0
 13338  011F  00F2               	movwf	i1set_leds_top@ledState
 13339  0120  00F3               	movwf	i1set_leds_top@ledState+1
 13340  0121  3193  2358  3180   	fcall	i1_set_leds_top
 13341  0124                     i1l4146:	
 13342                           
 13343                           ;interrupts.c: 93: }
 13344                           ;interrupts.c: 94: }
 13345                           ;interrupts.c: 97: if (preset_programmning_on == 1) {
 13346  0124  0021               	movlb	1	; select bank1
 13347  0125  036D               	decf	_preset_programmning_on^(0+128),w
 13348  0126  1D03               	btfss	3,2
 13349  0127  294E               	goto	i1l4158
 13350                           
 13351                           ;interrupts.c: 98: preset_blink++;
 13352  0128  3001               	movlw	1
 13353  0129  00F4               	movwf	??_isr
 13354  012A  0874               	movf	??_isr,w
 13355  012B  07EC               	addwf	_preset_blink^(0+128),f
 13356                           
 13357                           ;interrupts.c: 100: if (preset_blink >= blink_delay) {
 13358  012C  0022               	movlb	2	; select bank2
 13359  012D  0864               	movf	(_blink_delay+1)^(0+256),w
 13360  012E  3A80               	xorlw	128
 13361  012F  3C80               	sublw	128
 13362  0130  1D03               	skipz
 13363  0131  2935               	goto	u413_25
 13364  0132  0863               	movf	_blink_delay^(0+256),w
 13365  0133  0021               	movlb	1	; select bank1
 13366  0134  026C               	subwf	_preset_blink^(0+128),w
 13367  0135                     u413_25:	
 13368  0135  1C03               	skipc
 13369  0136  2953               	goto	i1l4162
 13370                           
 13371                           ;interrupts.c: 101: LATBbits.LATB1 = 1;
 13372  0137  0022               	movlb	2	; select bank2
 13373  0138  148D               	bsf	13,1	;volatile
 13374                           
 13375                           ;interrupts.c: 102: if (preset_blink > blink_delay*2) {
 13376  0139  0864               	movf	(_blink_delay+1)^(0+256),w
 13377  013A  00F5               	movwf	??_isr+1
 13378  013B  0863               	movf	_blink_delay^(0+256),w
 13379  013C  00F4               	movwf	??_isr
 13380  013D  35F4               	lslf	??_isr,f
 13381  013E  0DF5               	rlf	??_isr+1,f
 13382  013F  0875               	movf	??_isr+1,w
 13383  0140  3A80               	xorlw	128
 13384  0141  00F6               	movwf	??_isr+2
 13385  0142  3080               	movlw	128
 13386  0143  0276               	subwf	??_isr+2,w
 13387  0144  1D03               	skipz
 13388  0145  2949               	goto	u414_25
 13389  0146  0021               	movlb	1	; select bank1
 13390  0147  086C               	movf	_preset_blink^(0+128),w
 13391  0148  0274               	subwf	??_isr,w
 13392  0149                     u414_25:	
 13393  0149  1803               	skipnc
 13394  014A  2955               	goto	i1l105
 13395                           
 13396                           ;interrupts.c: 103: preset_blink = 0;
 13397  014B  0021               	movlb	1	; select bank1
 13398  014C  01EC               	clrf	_preset_blink^(0+128)
 13399                           
 13400                           ;interrupts.c: 104: }
 13401                           ;interrupts.c: 106: } else {
 13402  014D  2955               	goto	i1l105
 13403  014E                     i1l4158:	
 13404                           ;interrupts.c: 108: }
 13405                           ;interrupts.c: 110: } else {
 13406                           
 13407                           ;interrupts.c: 107: LATBbits.LATB1 = 0;
 13408                           
 13409                           
 13410                           ;interrupts.c: 111: if (preset_blink > 0) {
 13411  014E  0021               	movlb	1	; select bank1
 13412  014F  086C               	movf	_preset_blink^(0+128),w
 13413  0150  1903               	btfsc	3,2
 13414  0151  2955               	goto	i1l105
 13415                           
 13416                           ;interrupts.c: 112: preset_blink = 0;
 13417  0152  01EC               	clrf	_preset_blink^(0+128)
 13418  0153                     i1l4162:	
 13419                           
 13420                           ;interrupts.c: 113: LATBbits.LATB1 = 0;
 13421  0153  0022               	movlb	2	; select bank2
 13422  0154  108D               	bcf	13,1	;volatile
 13423  0155                     i1l105:	
 13424  0155  0878               	movf	??_isr+4,w
 13425  0156  0020               	movlb	0	; select bank0
 13426  0157  00FF               	movwf	127
 13427  0158  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13428  0159  0009               	retfie
 13429  015A                     __end_of_isr:	
 13430                           
 13431                           	psect	text47
 13432  1358                     __ptext47:	
 13433 ;; *************** function i1_set_leds_top *****************
 13434 ;; Defined at:
 13435 ;;		line 16 in file "LEDs.c"
 13436 ;; Parameters:    Size  Location     Type
 13437 ;;  x               2    0[COMMON] int 
 13438 ;;  ledState        2    2[COMMON] int 
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;		None
 13441 ;; Return value:  Size  Location     Type
 13442 ;;                  1    wreg      void 
 13443 ;; Registers used:
 13444 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13445 ;; Tracked objects:
 13446 ;;		On entry : 0/0
 13447 ;;		On exit  : 0/0
 13448 ;;		Unchanged: 0/0
 13449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 13450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 13454 ;;Total ram usage:        4 bytes
 13455 ;; Hardware stack levels used:    1
 13456 ;; This function calls:
 13457 ;;		Nothing
 13458 ;; This function is called by:
 13459 ;;		_isr
 13460 ;; This function uses a non-reentrant model
 13461 ;;
 13462                           
 13463                           
 13464                           ;psect for function i1_set_leds_top
 13465  1358                     i1_set_leds_top:	
 13466                           
 13467                           ;LEDs.c: 17: LATFbits.LATF0 = 0;
 13468                           
 13469                           ;incstack = 0
 13470                           ; Regs used in i1_set_leds_top: [wreg-fsr0h+status,2+status,0]
 13471  1358  0027               	movlb	7	; select bank7
 13472  1359  100C               	bcf	12,0	;volatile
 13473                           
 13474                           ;LEDs.c: 18: LATFbits.LATF1 = 0;
 13475  135A  108C               	bcf	12,1	;volatile
 13476                           
 13477                           ;LEDs.c: 19: LATFbits.LATF2 = 0;
 13478  135B  110C               	bcf	12,2	;volatile
 13479                           
 13480                           ;LEDs.c: 20: LATFbits.LATF3 = 0;
 13481  135C  118C               	bcf	12,3	;volatile
 13482                           
 13483                           ;LEDs.c: 21: LATFbits.LATF4 = 0;
 13484  135D  120C               	bcf	12,4	;volatile
 13485                           
 13486                           ;LEDs.c: 22: switch (x) {
 13487  135E  2B83               	goto	i1l4094
 13488  135F                     i1l4082:	
 13489                           ;LEDs.c: 23: case 1:
 13490                           
 13491                           
 13492                           ;LEDs.c: 24: LATFbits.LATF0 = ledState;
 13493  135F  0C72               	rrf	i1set_leds_top@ledState,w
 13494  1360  1C03               	skipc
 13495  1361  100C               	bcf	12,0	;volatile
 13496  1362  1803               	skipnc
 13497  1363  140C               	bsf	12,0	;volatile
 13498                           
 13499                           ;LEDs.c: 25: break;
 13500  1364  0008               	return
 13501  1365                     i1l4084:	
 13502                           ;LEDs.c: 26: case 2:
 13503                           
 13504                           
 13505                           ;LEDs.c: 27: LATFbits.LATF1 = ledState;
 13506  1365  0C72               	rrf	i1set_leds_top@ledState,w
 13507  1366  1C03               	skipc
 13508  1367  108C               	bcf	12,1	;volatile
 13509  1368  1803               	skipnc
 13510  1369  148C               	bsf	12,1	;volatile
 13511                           
 13512                           ;LEDs.c: 28: break;
 13513  136A  0008               	return
 13514  136B                     i1l4086:	
 13515                           ;LEDs.c: 29: case 3:
 13516                           
 13517                           
 13518                           ;LEDs.c: 30: LATFbits.LATF2 = ledState;
 13519  136B  0C72               	rrf	i1set_leds_top@ledState,w
 13520  136C  1C03               	skipc
 13521  136D  110C               	bcf	12,2	;volatile
 13522  136E  1803               	skipnc
 13523  136F  150C               	bsf	12,2	;volatile
 13524                           
 13525                           ;LEDs.c: 31: break;
 13526  1370  0008               	return
 13527  1371                     i1l4088:	
 13528                           ;LEDs.c: 32: case 4:
 13529                           
 13530                           
 13531                           ;LEDs.c: 33: LATFbits.LATF3 = ledState;
 13532  1371  0C72               	rrf	i1set_leds_top@ledState,w
 13533  1372  1C03               	skipc
 13534  1373  118C               	bcf	12,3	;volatile
 13535  1374  1803               	skipnc
 13536  1375  158C               	bsf	12,3	;volatile
 13537                           
 13538                           ;LEDs.c: 34: break;
 13539  1376  0008               	return
 13540  1377                     i1l4090:	
 13541                           ;LEDs.c: 35: case 5:
 13542                           
 13543                           
 13544                           ;LEDs.c: 36: LATFbits.LATF4 = ledState;
 13545  1377  0C72               	rrf	i1set_leds_top@ledState,w
 13546  1378  1C03               	skipc
 13547  1379  120C               	bcf	12,4	;volatile
 13548  137A  1803               	skipnc
 13549  137B  160C               	bsf	12,4	;volatile
 13550                           
 13551                           ;LEDs.c: 39: break;
 13552                           
 13553                           ;LEDs.c: 38: case 6:
 13554                           
 13555                           ;LEDs.c: 37: break;
 13556  137C  0008               	return
 13557  137D                     i1l659:	
 13558                           ;LEDs.c: 40: case 100:
 13559                           
 13560                           
 13561                           ;LEDs.c: 41: LATFbits.LATF0 = 1;
 13562  137D  140C               	bsf	12,0	;volatile
 13563                           
 13564                           ;LEDs.c: 42: LATFbits.LATF1 = 1;
 13565  137E  148C               	bsf	12,1	;volatile
 13566                           
 13567                           ;LEDs.c: 43: LATFbits.LATF2 = 1;
 13568  137F  150C               	bsf	12,2	;volatile
 13569                           
 13570                           ;LEDs.c: 44: LATFbits.LATF3 = 1;
 13571  1380  158C               	bsf	12,3	;volatile
 13572                           
 13573                           ;LEDs.c: 45: LATFbits.LATF4 = 1;
 13574  1381  160C               	bsf	12,4	;volatile
 13575                           
 13576                           ;LEDs.c: 47: }
 13577                           
 13578                           ;LEDs.c: 46: break;
 13579  1382  0008               	return
 13580  1383                     i1l4094:	
 13581                           
 13582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13583                           ; Switch size 1, requested type "space"
 13584                           ; Number of cases is 1, Range of values is 0 to 0
 13585                           ; switch strategies available:
 13586                           ; Name         Instructions Cycles
 13587                           ; simple_byte            4     3 (average)
 13588                           ; direct_byte            8     6 (fixed)
 13589                           ; jumptable            260     6 (fixed)
 13590                           ;	Chosen strategy is simple_byte
 13591  1383  0871               	movf	i1set_leds_top@x+1,w
 13592  1384  3A00               	xorlw	0	; case 0
 13593  1385  1903               	skipnz
 13594  1386  2B88               	goto	i1l4600
 13595  1387  2B9F               	goto	i1l660
 13596  1388                     i1l4600:	
 13597                           
 13598                           ; Switch size 1, requested type "space"
 13599                           ; Number of cases is 7, Range of values is 1 to 100
 13600                           ; switch strategies available:
 13601                           ; Name         Instructions Cycles
 13602                           ; simple_byte           22    12 (average)
 13603                           ; direct_byte          209     9 (fixed)
 13604                           ; jumptable            263     9 (fixed)
 13605                           ;	Chosen strategy is simple_byte
 13606  1388  0870               	movf	i1set_leds_top@x,w
 13607  1389  3A01               	xorlw	1	; case 1
 13608  138A  1903               	skipnz
 13609  138B  2B5F               	goto	i1l4082
 13610  138C  3A03               	xorlw	3	; case 2
 13611  138D  1903               	skipnz
 13612  138E  2B65               	goto	i1l4084
 13613  138F  3A01               	xorlw	1	; case 3
 13614  1390  1903               	skipnz
 13615  1391  2B6B               	goto	i1l4086
 13616  1392  3A07               	xorlw	7	; case 4
 13617  1393  1903               	skipnz
 13618  1394  2B71               	goto	i1l4088
 13619  1395  3A01               	xorlw	1	; case 5
 13620  1396  1903               	skipnz
 13621  1397  2B77               	goto	i1l4090
 13622  1398  3A03               	xorlw	3	; case 6
 13623  1399  1903               	skipnz
 13624  139A  2B9F               	goto	i1l660
 13625  139B  3A62               	xorlw	98	; case 100
 13626  139C  1903               	skipnz
 13627  139D  2B7D               	goto	i1l659
 13628  139E  2B9F               	goto	i1l660
 13629  139F                     i1l660:	
 13630  139F  0008               	return
 13631  13A0                     __end_ofi1_set_leds_top:	
 13632  007E                     btemp	set	126	;btemp
 13633  007E                     int$flags	set	126
 13634  007E                     wtemp	set	126
 13635  007E                     wtemp0	set	126
 13636  0080                     wtemp1	set	128
 13637  0082                     wtemp2	set	130
 13638  0084                     wtemp3	set	132
 13639  0086                     wtemp4	set	134
 13640  0088                     wtemp5	set	136
 13641  007F                     wtemp6	set	127
 13642  007E                     ttemp	set	126
 13643  007E                     ttemp0	set	126
 13644  0081                     ttemp1	set	129
 13645  0084                     ttemp2	set	132
 13646  0087                     ttemp3	set	135
 13647  007F                     ttemp4	set	127
 13648  007E                     ltemp	set	126
 13649  007E                     ltemp0	set	126
 13650  0082                     ltemp1	set	130
 13651  0086                     ltemp2	set	134
 13652  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1066
    BSS         204
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     79      80
    BANK1            80     31      80
    BANK2            80      0      79
    BANK3            80      0      48
    BANK4            80      0      58
    BANK5            80      0      58
    BANK6            80      0      58
    BANK7            80      0      80
    BANK8            80      0      80
    BANK9            80      0      58
    BANK10           80      0      64
    BANK11            8      0       0
    BANK12            0      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_set_leds_top

Critical Paths under _main in BANK0

    _main->___fttol
    _updateSwitchTap->_setDoublePressState
    _updateSwitchBypass->_setDoublePressState
    _updateSwitchBypass->_setSwitchBypassState
    _setDoublePressState->_wait_ms
    _showBootSequence->_star_tactiles
    _star_tactiles->_wait_ms
    _solidring_tactiles->_wait_ms
    _set_subdivision->___fttol
    ___fttol->_map
    ___awtoft->___ftpack
    _read_top_tactile->_wait_ms
    _read_bottom_tactile->_wait_ms
    _modulation->___aldiv
    ___aldiv->___wmul
    _map->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___ftadd->___ftpack
    _initSwitchBypass->_setSwitchBypassState
    _setSwitchBypassState->_wait_ms
    _wait_ms->___lmul
    ___altoft->___ftpack
    _ReadSavedSettings->_set_leds_top

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_set_subdivision
    _set_subdivision->___fttol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   49604
                                             10 BANK1     21    21      0
                _ConfigureOscillator
                            _InitApp
                     _InitializeTaps
                  _ReadSavedSettings
                           ___altoft
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                        _adc_convert
                   _initSwitchBypass
                                _map
                         _modulation
                _read_bottom_tactile
                   _read_top_tactile
                    _set_subdivision
                   _showBootSequence
                 _updateSwitchBypass
                    _updateSwitchTap
                        _update_mode
 ---------------------------------------------------------------------------------
 (1) _update_mode                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _updateSwitchTap                                      9     9      0    2568
                                             22 BANK0      9     9      0
                            ___aldiv
                _setDoublePressState
                    _setLongTapState
 ---------------------------------------------------------------------------------
 (2) _setLongTapState                                      4     2      2     194
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _updateSwitchBypass                                   2     2      0    3636
                                             22 BANK0      2     2      0
                _setDoublePressState
                   _setFeedbackState
               _setSwitchBypassState
 ---------------------------------------------------------------------------------
 (2) _setFeedbackState                                     4     2      2     194
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _setDoublePressState                                  4     2      2    1657
                                             18 BANK0      4     2      2
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _showBootSequence                                     1     1      0    6257
                                             25 BANK0      1     1      0
                 _getCurrentLEDState
                    _restoreLEDState
                 _solidring_tactiles
                      _star_tactiles
 ---------------------------------------------------------------------------------
 (2) _star_tactiles                                        7     7      0    3207
                                             18 BANK0      7     7      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _solidring_tactiles                                   3     3      0    3050
                                             18 BANK0      3     3      0
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (2) _restoreLEDState                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurrentLEDState                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_subdivision                                      4     0      4    7286
                                              6 BANK1      4     0      4
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     956
                                             71 BANK0      8     4      4
                                              0 BANK1      6     6      0
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2840
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _read_top_tactile                                     1     1      0    2535
                                             18 BANK0      1     1      0
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _read_bottom_tactile                                  1     1      0    1825
                                             18 BANK0      1     1      0
                    _set_leds_bottom
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _modulation                                          12     8      4     971
                                             21 BANK0     12     8      4
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     556
                                              6 BANK0     15     7      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _map                                                 18     3     15   11425
                                             53 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     237
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3203
                                             21 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2645
                                             37 BANK0     16    10      6
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3563
                                              8 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _initSwitchBypass                                     2     2      0    1808
                                             22 BANK0      2     2      0
               _getSwitchBypassState
               _setSwitchBypassState
 ---------------------------------------------------------------------------------
 (2) _setSwitchBypassState                                 4     2      2    1785
                                             18 BANK0      4     2      2
            _updateSwitchBypassState
                            _wait_ms
 ---------------------------------------------------------------------------------
 (3) _wait_ms                                              6     4      2    1355
                                             12 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     220
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _updateSwitchBypassState                              2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getSwitchBypassState                                 2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_convert                                          4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___altoft                                             8     4      4    2311
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2109
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReadSavedSettings                                    0     0      0    1909
                     _FLASH_ReadWord
                    _set_leds_bottom
                       _set_leds_top
 ---------------------------------------------------------------------------------
 (3) _set_leds_top                                         4     0      4    1180
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _set_leds_bottom                                      2     0      2     470
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     259
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitializeTaps                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
                           _init_pwm
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
                        _init_timer0
                        _init_timer2
 ---------------------------------------------------------------------------------
 (3) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0     236
                                              4 COMMON     5     5      0
                     i1_set_leds_top
 ---------------------------------------------------------------------------------
 (6) i1_set_leds_top                                       4     0      4     236
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_adc
     _init_pwm
       _init_timer0
       _init_timer2
   _InitializeTaps
   _ReadSavedSettings
     _FLASH_ReadWord
     _set_leds_bottom
     _set_leds_top
   ___altoft
     ___ftpack
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___altoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___fttol
     ___altoft (ARG)
       ___ftpack
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     _map (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _adc_convert
   _initSwitchBypass
     _getSwitchBypassState
     _setSwitchBypassState
       _updateSwitchBypassState
       _wait_ms
         ___lmul
   _map
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   _modulation
     ___aldiv
       ___wmul (ARG)
     ___wmul
   _read_bottom_tactile
     _set_leds_bottom
     _wait_ms
       ___lmul
   _read_top_tactile
     _set_leds_top
     _wait_ms
       ___lmul
   _set_subdivision
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       _map (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
   _showBootSequence
     _getCurrentLEDState
     _restoreLEDState
     _solidring_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
     _star_tactiles
       _set_leds_bottom
       _set_leds_top
       _wait_ms
         ___lmul
   _updateSwitchBypass
     _setDoublePressState
       _wait_ms
         ___lmul
     _setFeedbackState
     _setSwitchBypassState
       _updateSwitchBypassState
       _wait_ms
         ___lmul
   _updateSwitchTap
     ___aldiv
       ___wmul (ARG)
     _setDoublePressState
       _wait_ms
         ___lmul
     _setLongTapState
   _update_mode

 _isr (ROOT)
   i1_set_leds_top

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      3A      13       72.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3A      15       72.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0     2F5      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      3A      18       72.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      3A      24       72.5%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0      40      26       80.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     2F5      28        0.0%
BANK11               8      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12               0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Nov 09 13:41:33 2016

                     _update_mode 1313                      ___altoft@exp 002E                       __CFG_CP$OFF 0000  
                   ___altoft@sign 002F                      ___awdiv@sign 0026        setDoublePressState@f_state 0032  
             ___wmul@multiplicand 0022                   _updateSwitchTap 0BBB                      ___ftadd@exp1 0034  
                    ___ftadd@exp2 0033                      ___ftadd@sign 0032                               l502 1F32  
                             l329 10EC                               l281 0328                               l277 024E  
                             l294 051F                               l490 0BBA              __size_of_adc_convert 0019  
                             l811 133C                               l660 157F                               l812 1340  
                             l813 1350                               l671 1233                               l672 1257  
                             l664 1224                               l809 1339                               l666 1227  
                             l667 122A                               l659 155B                               l668 122D  
                             l669 1230                               l791 10BF                               l799 112B  
                             _PR2 001B      solidring_tactiles@ring_delay 0034                               _map 16D6  
                             _isr 0004                               _tap 01A0                      __CFG_BORV$LO 0000  
                             wreg 0009                      __CFG_IESO$ON 0000                      __CFG_FOSC$HS 0000  
         __end_of_set_leds_bottom 1258                      __CFG_LVP$OFF 0000                      ___ftdiv@cntr 004F  
                    ___ftdiv@sign 0054                              _B25k 03A0                              l1006 096D  
                            l1124 0BD1                              l1137 0C7F                              l1420 0A6B  
                            l1228 1F5F                              l4010 0B74                              l4002 0AC3  
                            l1283 1665                              l3212 1590                              l4004 0AF0  
                            l3222 15B8                              l3214 159A                              l4030 126D  
                            l4006 0B1C                              l4014 0BA0                              l3224 15C0  
                            l3216 159F                              l3208 1589                              l4032 127D  
                            l3152 107B                              l1480 17DE                              l4008 0B48  
                            l3304 161A                              l4200 0255                              l3170 1553  
                            l3162 1533                              l4050 14F0                              l3164 153B  
                            l1396 15C6                              l4060 14F8                              l4044 14E5  
                            l3148 1071                              l1397 15CE                              l1389 15B3  
                            l3166 1543                              l3174 1562                              l4062 1504  
                            l3350 13CB                              l3502 0A5D                              l3422 1686  
                            l3414 1676                              l4310 0614                              l4302 05F3  
                            l4230 0364                              l3168 154B                              l4072 151F  
                            l3512 0A8F                              l3504 0A67                              l3440 16CD  
                            l3432 16B4                              l3424 1694                              l4320 066D  
                            l3522 0AAA                              l4314 0617                              l4250 0458  
                            l4242 03FB                              l4226 032A                              l4218 02D1  
                            l3700 1412                              l4076 1527                              l4068 1516  
                            l3508 0A7D                              l3532 0858                              l3604 07AB  
                            l3436 16BF                              l3452 07E6                              l4308 0611  
                            l4316 0631                              l3198 123A                              l3462 09F4  
                            l4334 06E9                              l4262 0514                              l4254 0492  
                            l4238 03C1                              l3472 0A0A                              l3560 08C8  
                            l3552 08AF                              l3608 07B3                              l3392 1F59  
                            l3632 177C                              l3800 0900                              l4336 0694  
                            l4280 056D                              l4184 0228                              l3490 0A37  
                            l3466 09FB                              l3538 086E                              l3650 17B5  
                            l3378 1022                              l4338 06EF                              l4290 05D1  
                            l4266 0521                              l4258 04DA                              l3492 0A41  
                            l3484 0A24                              l3580 0754                              l3660 17E2  
                            l3652 17C6                              l3812 0920                              l3804 0913  
                            l4284 057B                              l4276 0564                              l3494 0A46  
                            l3574 073E                              l3726 10B4                              l3910 0C1C  
                            l4294 05DC                              l4286 05BC                              l4198 0252  
                            ?_map 0055                              l3496 0A4A                              l3592 078F  
                            l3664 17F0                              l3824 093E                              l3760 1354  
                            l3738 1117                              l3658 17D4                              l3850 098A  
                            l3826 0946                              l3930 0C51                              l4298 05E7  
                            l3596 0797                              l3844 0971                              l3940 0C77  
                            l3932 0C5F                              l3916 0C25                              l3908 0BFF  
                            l3854 0992                              l3838 095D                              l3758 1344  
                            l3856 0997                              l3864 09A9                              l3928 0C49  
                            l4592 061D                              l4594 0BA6                              l3962 0D2F  
                            l3970 0D6D                              l4596 1568                              l3956 0CC6  
                            l3948 0CBA                              l4598 1240                              l3958 0D10  
                            l3894 0BE2                              l3888 0BC6                              ?_isr 0070  
                            u3005 08BF                              u3015 08C9                              u2305 1083  
                            u3125 07B4                              u3205 17B6                              u2510 13C9  
                            u3135 07BA                              u3055 0760                              u2505 13AB  
                            u3065 0770                              u2435 15D5                              u2355 1595  
                            u3235 17D5                              u3085 0798                              u3325 10AD  
                            u4205 02CF                              u2375 15AE                              u2295 107C  
                            u3095 079E                              u3175 1784                              u2535 1F16  
                            u4215 0345                              u3265 1FBB                              u2545 1015  
                            u3425 08F9                              u4225 0362                              u3290 1410  
                            u3275 1FC1                              u2395 15BB                              u3355 1110  
                            u3435 090C                              u4235 03DC                              u2645 1689  
                            u2485 1627                              u2565 1F47                              u4245 03F9  
                            u2815 0A25                              u4335 0576                              u4255 0473  
                            u4175 0244                              u2905 0A5E                              u2665 1695  
                            u2585 1F60                              u3465 0926                              u3705 0C2F  
                            u3385 1326                              u4265 0490                              u2675 16A9  
                            u2595 1F65                              u3555 097C                              u4363 06DA  
                            u4355 06C2                              u4275 04F5                              u4195 02B2  
                            u2845 0A38                              u2685 16B5                              u3805 0CE4  
                            u4293 0548                              u4285 0512                              u3815 0CF8  
                            u2875 0A4B                              u3835 0D15                              u3675 0C08  
                            u3925 14FB                              u2975 0880                              u3775 0C91  
                            u3945 1505                              u2985 0890                              u3785 0CA0  
                            u3875 1272                              u3955 150F                              u2995 08B0  
                            u3795 0CCF                              u3965 1517                     _star_tactiles 15E5  
                    __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000                              _iCnt 0160  
                            _mod1 04A0                              _mod2 0220                              _mod3 02A0  
                            _mod4 0320                              _mod5 2378                              _main 0212  
                    ___ftpack@arg 0020                      ___ftpack@exp 0023                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            fsr1l 0006                              map@x 0055                              btemp 007E  
                   __CFG_BOREN$ON 0000                              ltemp 007E          __end_of_setFeedbackState 1F23  
                            start 015A                              ttemp 007E                              wtemp 007E  
    __end_of_getSwitchBypassState 1E98      updateSwitchTap@tapCntDivisor 003C      __end_of_setSwitchBypassState 13EA  
                 ?i1_set_leds_top 0070                     __CFG_MCLRE$ON 0000                      ___ftmul@cntr 0043  
                    ___ftmul@sign 0044                   __end_of_InitApp 1068                 ??_restoreLEDState 0020  
                    ___fttol@exp1 00A5                             ??_map 0064                      ___fttol@lval 00A1  
                           ??_isr 0074                   _switchBypass_up 0169         __size_of_initSwitchBypass 000F  
                 __end_of___aldiv 16D6                             ?_main 0070                   __end_of___awdiv 152C  
                 __end_of___ftadd 0AC2                             _CCPR1 0291                             _CCPR2 0298  
                           _CCPR3 0311                             _CCPR4 0318                             _CCPR5 031C  
                           _CCPR9 061A                     __CFG_WDTE$OFF 0000                   __end_of___ftdiv 08EA  
                 __end_of___ftneg 1EB1                   __end_of___ftmul 07DB                   ___awdiv@divisor 0020  
                 __end_of___fttol 1800                             i1l105 0155                             i1l660 139F  
                           i1l659 137D                   ___awdiv@counter 0025                             _iB25k 0420  
             _ConfigureOscillator 1E90                      ?_init_timer0 0070                      ?_init_timer2 0070  
             ___lmul@multiplicand 0024                   _switchTap_state 00DB                 ??_setLongTapState 0022  
                   ___awtoft@sign 002D                             _delay 23F2                             _myBuf 0520  
                   ___ftpack@sign 0024                             _timer 00E0                    ?_star_tactiles 0070  
                           main@i 00BB                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080                   __end_of_wait_ms 10FB  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
     __end_of_read_bottom_tactile 10C9                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F              ?_ConfigureOscillator 0070  
              _getCurrentLEDState 1EE4                _updateSwitchBypass 08EA           __end_of_updateSwitchTap 0D88  
                 __initialization 015C           _updateSwitchBypassState 07FE                      __end_of_main 0727  
         __size_of_InitializeTaps 0026               ?_getCurrentLEDState 0070               ?_updateSwitchBypass 0070  
                  __CFG_LPBOR$OFF 0000                   _set_subdivision 0AC2                            ??_main 00AA  
                   ___fttol@sign1 00A0           __size_of_FLASH_ReadWord 0020        __end_of_solidring_tactiles 1313  
                  _feedback_timer 00E4                    _feedback_state 006F                    _feedback_start 00E9  
                ?_set_leds_bottom 0020                  __end_of___altoft 1295                            _ADRESH 009C  
                          _ADRESL 009B                  ___awdiv@dividend 0022               _baseline_delay_time 00BF  
            ??_getCurrentLEDState 0020                  __end_of___awtoft 07FD                  __end_of___ftpack 15E5  
            ??_updateSwitchBypass 0036                            i1l4110 008A                            i1l4130 00DA  
                          i1l4140 0108                            i1l4132 00DC                            i1l4116 00A4  
                          i1l4142 0117                            i1l4118 00A5                            i1l4128 00CB  
                          i1l4090 1377                            i1l4082 135F                            i1l4162 0153  
                          i1l4146 0124                            i1l4138 00FF                            i1l4084 1365  
                          i1l4086 136B                            i1l4094 1383                            i1l4158 014E  
                          i1l4600 1388                            i1l4088 1371                            u401_25 0084  
                          u403_25 009B                            u413_25 0135                            u406_23 00BE  
                          u414_25 0149                            u408_23 00EF                            _PMADRH 0192  
                          _PMADRL 0191                            _PMDATH 0194                            _PMDATL 0193  
                          _PMCON2 0196                    _debounce_count 0144                    _debounce_mode1 0146  
                  _debounce_mode2 0148                         ??_InitApp 0020             ??_ConfigureOscillator 0020  
        __end_of_read_top_tactile 1135                    __CFG_PWRTE$OFF 0000                            ___lmul 1068  
                       ??___aldiv 002E                            ___wmul 1F56                         ??___awdiv 0024  
                       ??___ftadd 002E                    __CFG_STVREN$ON 0000                         ??___ftdiv 004B  
                       ??___ftneg 0023                         ??___ftmul 003B                         ??___fttol 006B  
                __end_of_init_adc 100B                  __end_of_init_pwm 0841         __size_of_showBootSequence 002B  
                ___awdiv@quotient 0027             ___ftmul@f3_as_product 0040                      __pdataBIGRAM 2378  
         FLASH_ReadWord@flashAddr 0020              _getSwitchBypassState 1E94                         ??_wait_ms 002E  
            _setSwitchBypassState 13A0                   ??_star_tactiles 0032            setLongTapState@f_state 0020  
         __end_of__initialization 020E                        ___altoft@c 0028                        ___ftadd@f1 0028  
                      ___ftadd@f2 002B                 _bypass_turning_on 00E8                        ___ftdiv@f1 0048  
                      ___ftdiv@f2 0045                        ___ftdiv@f3 0050                    _top_push_state 00D5  
       ??_updateSwitchBypassState 0022                        ___ftneg@f1 0020               _switchBypass_toggle 015E  
                      ___awtoft@c 0028           __end_of_set_subdivision 0BBB                        ___ftmul@f1 0035  
                      ___ftmul@f2 0038                        ___fttol@f1 0067                  ?_updateSwitchTap 0070  
                    ?_update_mode 0070                    __pcstackCOMMON 0070                      __pidataBANK0 07FD  
                    __pidataBANK1 1F72                      __pidataBANK2 1EC9                      __pidataBANK4 11E3  
                    __pidataBANK5 11A9                      __pidataBANK6 116F                      __pidataBANK7 148A  
                    __pidataBANK8 143A                      __pidataBANK9 1135                  _initSwitchBypass 1ED5  
                 _doubleTap_state 007D                    _OPTION_REGbits 0095             ?_getSwitchBypassState 0020  
           ?_setSwitchBypassState 0032              __size_of_init_timer0 0007              __size_of_init_timer2 0009  
                      __pbssBANK1 00DC                        __pbssBANK2 0120                        __pbssBANK3 01A0  
                ??i1_set_leds_top 0074                   _restoreLEDState 1EF6                   __CFG_VCAPEN$OFF 0000  
               ?_setFeedbackState 0020                        _delay_time 00C3                  _long_press_limit 00D3  
    __size_of_setDoublePressState 002D                        _delayfound 014C                        __pmaintext 0212  
              ??_setFeedbackState 0022                    _InitializeTaps 1FAF                           ?___lmul 0020  
                         ?___wmul 0020                        __pintentry 0004                        _blink_rate 00D7  
                   ??_adc_convert 0022                         ?___altoft 0028                    ___lmul@product 0028  
                 _setLongTapState 1F3C                         ?___awtoft 0028                         ?___ftpack 0020  
                  _FLASH_ReadWord 1F8F   __end_of_updateSwitchBypassState 07FF                       modulation@x 0035  
                     modulation@y 0037                   _debounce_bypass 0142                     _suspend_blink 00EE  
                       ?_init_adc 0070                         ?_init_pwm 0070                           _InitApp 1038  
          __end_of_InitializeTaps 1FD5                     ?_set_leds_top 0020                        _knob1_prev 00C9  
                      _knob2_prev 00CB                        _knob3_prev 00CD                        _knob4_prev 00CF  
                      _knob5_prev 00D1                  ?_set_subdivision 00A6                           ___aldiv 1654  
                         ___awdiv 14DA                   __size_of___lmul 0030                           ___ftadd 09CC  
                         ___ftdiv 0841                           ___ftneg 1EA8                        _knob_1_pos 014E  
                      _knob_2_pos 0150                   __size_of___wmul 001C                           ___ftmul 0727  
                      _knob_3_pos 0152                           ___fttol 1761                        _knob_4_pos 0154  
                      _knob_5_pos 0156                 _switchTap_pressed 00EF                        ??___altoft 002C  
                _showBootSequence 1FD5            __end_of_FLASH_ReadWord 1FAF                        ??___awtoft 002B  
                      ??___ftpack 0025                InitializeTaps@itap 0021                           __ptext1 1313  
                         __ptext2 0BBB                           __ptext3 1F3C                           __ptext4 08EA  
                         __ptext5 1F0C                           __ptext6 100B                           __ptext7 1FD5  
                         __ptext8 15E5                           __ptext9 12D3            ??_getSwitchBypassState 0022  
                       _T2CONbits 001C                      __size_of_map 008B                      __size_of_isr 0156  
          ??_setSwitchBypassState 0034               __end_of_adc_convert 1F3C                  ___aldiv@dividend 002A  
                         _wait_ms 10C9           __end_of_restoreLEDState 1F0C                           clrloop0 1EBE  
            end_of_initialization 020E                        _modulation 1295                           init_ram 1EB1  
                      ??_init_adc 0020                           initloop 1EB2                        ??_init_pwm 0020  
    updateSwitchBypassState@state 0020                _solidring_tactiles 12D3                     _longTap_timer 0158  
                   _longTap_state 00D8                     _longTap_start 00EA                    ??_set_leds_top 0024  
               ?_read_top_tactile 0070                   ?_InitializeTaps 0070           __end_of_setLongTapState 1F56  
          i1set_leds_top@ledState 0072                ??_read_top_tactile 0032                  ___aldiv@quotient 0031  
    __size_of_read_bottom_tactile 0031               ?_solidring_tactiles 0070         FLASH_ReadWord@GIEBitValue 0022  
            __size_of_update_mode 0045                   ?_FLASH_ReadWord 0020                         _PORTCbits 000E  
                       _PORTDbits 000F                         _PORTEbits 0010              star_tactiles@reverse 0034  
                      _test_timer 01CC                         _TRISBbits 008D                         _TRISCbits 008E  
                       _TRISDbits 008F                         _TRISEbits 0090                         _TRISFbits 030C  
                       _TRISGbits 030D                         _SPI_Value 0140           setFeedbackState@f_state 0020  
            ??_solidring_tactiles 0032       __end_of_ConfigureOscillator 1E94       __size_of_getCurrentLEDState 0012  
                      map@out_max 0061                        map@out_min 005E       __size_of_updateSwitchBypass 00E2  
        __end_of_initSwitchBypass 1EE4                       _CCP1CONbits 0293                       ___ftdiv@exp 0053  
        __size_of_set_leds_bottom 003B                       _CCP2CONbits 029A              _switchBypass_pressed 015C  
                     _CCP3CONbits 0313                       _CCP4CONbits 031A                       _CCP5CONbits 031E  
                     _CCP6CONbits 0613                       _CCP7CONbits 0616                       ___ftmul@exp 003F  
              adc_convert@channel 0023                       _CCP8CONbits 0619                       _CCP9CONbits 061C  
            set_leds_top@ledState 0022                    __end_of___lmul 1098                     __pidataBIGRAM 0D88  
                  __end_of___wmul 1F72                       _adc_convert 1F23                    _switchTap_down 0162  
             start_initialization 015C               _setDoublePressState 100B                       __end_of_map 1761  
                     __end_of_isr 015A                  ?_restoreLEDState 0070             __end_of_star_tactiles 1654  
                     ?_modulation 0035              ?_setDoublePressState 0032                  ?_setLongTapState 0020  
                        ??___lmul 0028                          ??___wmul 0024                       __pdataBANK0 006F  
                     __pdataBANK1 00BF                       __pdataBANK2 0163                       __pdataBANK4 0220  
                     __pdataBANK5 02A0                       __pdataBANK6 0320                       __pdataBANK7 03A0  
                     __pdataBANK8 0420                       __pdataBANK9 04A0                     _tap_iteration 016B  
        __size_of_updateSwitchTap 01CD                 __size_of___altoft 003D                       __pbssBANK10 0520  
       __size_of_setFeedbackState 0017                 __size_of___awtoft 0022                 __size_of___ftpack 0065  
                   ??_init_timer0 0020                     ??_init_timer2 0020                       __pbssCOMMON 0079  
            __end_of_set_leds_top 1580                         ___latbits 0003                _switchBypass_state 00DA  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                     _delay_counter 014A  
        __end_of_showBootSequence 2000          ?_updateSwitchBypassState 0020                          ?_InitApp 0070  
           ??_setDoublePressState 0034                 __size_of_init_adc 000A                 __size_of_init_pwm 0041  
                        ?___aldiv 0026                 ??_set_leds_bottom 0022                _currentBypassState 016E  
                        ?___awdiv 0020                          ?___ftadd 0028                          ?___ftdiv 0045  
                        ?___ftneg 0020                          ?___ftmul 0035                          ?___fttol 0067  
                     _blink_delay 0163               __size_of_modulation 003E                       _blink_state 016D  
                        _CCPTMRS0 029D                          _CCPTMRS1 029E                          _CCPTMRS2 029F  
                        ?_wait_ms 002C               _read_bottom_tactile 1098               __end_of_init_timer0 1E9F  
             __end_of_init_timer2 1EA8                         _mod_value 015A                         _mod_timer 0138  
                ??_InitializeTaps 0020                   ___aldiv@divisor 0026                   ___aldiv@counter 002F  
                  ___wmul@product 0024                          _LATBbits 010D                          _LATDbits 010F  
                        _LATFbits 038C                          _LATGbits 038D                    _mod_delay_time 0167  
                       clear_ram0 1EBD                         _tap_timer 0079                         _tap_total 013C  
                   set_leds_top@x 0020                  ??_FLASH_ReadWord 0022              ?_read_bottom_tactile 0070  
         __size_ofi1_set_leds_top 0048         initSwitchBypass@initState 0036                         map@in_max 005B  
                       map@in_min 0058                         _sub_timer 00DC                        _ADCON0bits 009D  
                      _ADCON1bits 009E                         main@i_392 00BD          __size_of_set_subdivision 00F9  
               ___wmul@multiplier 0020                  set_subdivision@x 00A6                  set_subdivision@y 00A8  
       __size_of_read_top_tactile 003A     __size_of_getSwitchBypassState 0004     __size_of_setSwitchBypassState 004A  
               ??_updateSwitchTap 0036                 ___lmul@multiplier 0020                 _ReadSavedSettings 13EA  
               ?_initSwitchBypass 0070                    wait_ms@timeSec 002C                ?_ReadSavedSettings 0070  
                  wait_ms@timemsl 002E       setSwitchBypassState@f_state 0032                ??_initSwitchBypass 0036  
                __size_of_InitApp 0030                       _mode1_state 0161                     ??_update_mode 0020  
                     _mode2_state 00EB             ??_read_bottom_tactile 0032               updateSwitchTap@iCnt 003E  
             ??_ReadSavedSettings 0024                        _APFCONbits 011D                 star_tactiles@iLed 0035  
                __size_of___aldiv 0082                  __size_of___awdiv 0052                  __size_of___ftadd 00F6  
                __size_of___ftdiv 00A9                      ?_adc_convert 0020                  __size_of___ftneg 0009  
                        ___altoft 1258                  __size_of___ftmul 00B4                  __size_of___fttol 009F  
                        ___awtoft 07DB             __size_of_set_leds_top 0054                          ___ftpack 1580  
                        _map$2116 0064            _preset_programmning_on 00ED            star_tactiles@iLed_1422 0037  
                      _ANSELEbits 0190                        _ANSELFbits 040C                  set_leds_bottom@x 0020  
                _setFeedbackState 1F0C                       _init_timer0 1E98                       _init_timer2 1E9F  
              _delay_time_changed 0165        __end_of_getCurrentLEDState 1EF6        __end_of_updateSwitchBypass 09CC  
                        __ptext10 1EF6                          __ptext11 1EE4                          __ptext20 16D6  
                        __ptext12 0AC2                          __ptext21 1EA8                          __ptext13 1761  
                        __ptext30 1E94                          __ptext22 0727                          __ptext14 07DB  
                        __ptext31 1F23                          __ptext23 0841                          __ptext15 10FB  
                        __ptext40 1038                          __ptext32 14DA                          __ptext24 09CC  
                        __ptext16 1098                          __ptext41 0800                          __ptext33 1258  
                        __ptext25 1ED5                          __ptext17 1295                          __ptext42 1E9F  
                        __ptext34 1580                          __ptext26 13A0                          __ptext18 1F56  
                        __ptext43 1E98                          __ptext35 13EA                          __ptext27 10C9  
                        __ptext19 1654                          __ptext44 1001                          __ptext36 152C  
                        __ptext28 1068                          __ptext45 1E90                          __ptext37 121D  
                        __ptext29 07FE                          __ptext38 1F8F                          __ptext47 1358  
                        __ptext39 1FAF         __end_of_ReadSavedSettings 143A                  __size_of_wait_ms 0032  
     __size_of_solidring_tactiles 0040                          _ledState 0134                      ??_modulation 0039  
                     _mod_counter 00E6                          _init_adc 1001                     __size_of_main 0515  
                        _init_pwm 0800      __size_of_ConfigureOscillator 0004                      _set_leds_top 152C  
                        _num_taps 00D9                          int$flags 007E                   i1set_leds_top@x 0070  
             __end_of_update_mode 1358                __end_of_modulation 12D3                        _INTCONbits 000B  
                     _tap_history 0120                 ??_set_subdivision 006F                          intlevel1 0000  
                 _set_leds_bottom 121D                        _PMCON1bits 0195                 ?_showBootSequence 0070  
               __CFG_CLKOUTEN$OFF 0000          __size_of_restoreLEDState 0016                ??_showBootSequence 0039  
                      _OSCCONbits 0099                      _preset_blink 00EC                    i1_set_leds_top 1358  
__size_of_updateSwitchBypassState 0001            __size_of_star_tactiles 006F          __size_of_setLongTapState 001A  
                _read_top_tactile 10FB                      ___aldiv@sign 0030        __size_of_ReadSavedSettings 0050  
          main@adjusted_pot_value 00B9       __end_of_setDoublePressState 1038                      _CCP10CONbits 061F  
               _bottom_push_state 00C7            __end_ofi1_set_leds_top 13A0  
