

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Oct 09 18:26:16 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	idataBANK5,global,class=CODE,delta=2
     9                           	psect	idataBANK6,global,class=CODE,delta=2
    10                           	psect	idataBANK7,global,class=CODE,delta=2
    11                           	psect	idataBANK8,global,class=CODE,delta=2
    12                           	psect	idataBANK9,global,class=CODE,delta=2
    13                           	psect	idataBIGRAM,global,class=CODE,delta=2
    14                           	psect	stringtext,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	dataBIGRAM,global,delta=1
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    25                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    27                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    28                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    29                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1
    30                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1
    31                           	psect	clrtext,global,class=CODE,delta=2
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2
    49                           	psect	text14,local,class=CODE,merge=1,delta=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x920,80
    60                           	dabs	1,0x8A0,80
    61                           	dabs	1,0x820,80
    62                           	dabs	1,0x7A0,80
    63                           	dabs	1,0x720,80
    64                           	dabs	1,0x6A0,80
    65                           	dabs	1,0x652,30
    66                           	dabs	1,0x620,50
    67                           	dabs	1,0x5A8,72
    68                           	dabs	1,0x23F2,0,_delay
    69                           	dabs	1,0x2378,0,_mod5
    70                           	dabs	1,0x7E,2
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0110                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  018F                     	;# 
   131  0190                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  020D                     	;# 
   165  020F                     	;# 
   166  0210                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  0219                     	;# 
   183  021A                     	;# 
   184  021B                     	;# 
   185  021C                     	;# 
   186  021D                     	;# 
   187  021E                     	;# 
   188  021F                     	;# 
   189  028C                     	;# 
   190  028D                     	;# 
   191  0291                     	;# 
   192  0291                     	;# 
   193  0292                     	;# 
   194  0293                     	;# 
   195  0298                     	;# 
   196  0298                     	;# 
   197  0299                     	;# 
   198  029A                     	;# 
   199  029D                     	;# 
   200  029E                     	;# 
   201  029F                     	;# 
   202  030C                     	;# 
   203  030D                     	;# 
   204  0311                     	;# 
   205  0311                     	;# 
   206  0312                     	;# 
   207  0313                     	;# 
   208  0318                     	;# 
   209  0318                     	;# 
   210  0319                     	;# 
   211  031A                     	;# 
   212  031C                     	;# 
   213  031C                     	;# 
   214  031D                     	;# 
   215  031E                     	;# 
   216  038C                     	;# 
   217  038D                     	;# 
   218  0394                     	;# 
   219  0395                     	;# 
   220  0396                     	;# 
   221  040C                     	;# 
   222  040D                     	;# 
   223  0411                     	;# 
   224  0411                     	;# 
   225  0412                     	;# 
   226  0413                     	;# 
   227  0414                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  0418                     	;# 
   232  0418                     	;# 
   233  0419                     	;# 
   234  041A                     	;# 
   235  041B                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  048D                     	;# 
   240  0491                     	;# 
   241  0491                     	;# 
   242  0492                     	;# 
   243  0492                     	;# 
   244  0493                     	;# 
   245  0493                     	;# 
   246  0493                     	;# 
   247  0494                     	;# 
   248  0494                     	;# 
   249  0495                     	;# 
   250  0495                     	;# 
   251  0496                     	;# 
   252  0496                     	;# 
   253  0497                     	;# 
   254  0497                     	;# 
   255  0595                     	;# 
   256  0596                     	;# 
   257  0597                     	;# 
   258  059C                     	;# 
   259  059D                     	;# 
   260  059E                     	;# 
   261  0611                     	;# 
   262  0611                     	;# 
   263  0612                     	;# 
   264  0613                     	;# 
   265  0614                     	;# 
   266  0614                     	;# 
   267  0615                     	;# 
   268  0616                     	;# 
   269  0617                     	;# 
   270  0617                     	;# 
   271  0618                     	;# 
   272  0619                     	;# 
   273  061A                     	;# 
   274  061A                     	;# 
   275  061B                     	;# 
   276  061C                     	;# 
   277  061D                     	;# 
   278  061D                     	;# 
   279  061E                     	;# 
   280  061F                     	;# 
   281  0FE4                     	;# 
   282  0FE5                     	;# 
   283  0FE6                     	;# 
   284  0FE7                     	;# 
   285  0FE8                     	;# 
   286  0FE9                     	;# 
   287  0FEA                     	;# 
   288  0FEB                     	;# 
   289  0FED                     	;# 
   290  0FEE                     	;# 
   291  0FEF                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  008F                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0094                     	;# 
   331  0095                     	;# 
   332  0096                     	;# 
   333  0097                     	;# 
   334  0099                     	;# 
   335  009A                     	;# 
   336  009B                     	;# 
   337  009B                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009E                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  010F                     	;# 
   345  0110                     	;# 
   346  0116                     	;# 
   347  0117                     	;# 
   348  011D                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  018F                     	;# 
   352  0190                     	;# 
   353  0191                     	;# 
   354  0191                     	;# 
   355  0192                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0194                     	;# 
   359  0195                     	;# 
   360  0196                     	;# 
   361  0197                     	;# 
   362  0199                     	;# 
   363  0199                     	;# 
   364  0199                     	;# 
   365  019A                     	;# 
   366  019A                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019C                     	;# 
   376  019D                     	;# 
   377  019D                     	;# 
   378  019D                     	;# 
   379  019E                     	;# 
   380  019E                     	;# 
   381  019E                     	;# 
   382  019F                     	;# 
   383  019F                     	;# 
   384  019F                     	;# 
   385  020D                     	;# 
   386  020F                     	;# 
   387  0210                     	;# 
   388  0211                     	;# 
   389  0211                     	;# 
   390  0212                     	;# 
   391  0212                     	;# 
   392  0213                     	;# 
   393  0213                     	;# 
   394  0214                     	;# 
   395  0214                     	;# 
   396  0215                     	;# 
   397  0215                     	;# 
   398  0215                     	;# 
   399  0216                     	;# 
   400  0216                     	;# 
   401  0217                     	;# 
   402  0217                     	;# 
   403  0219                     	;# 
   404  021A                     	;# 
   405  021B                     	;# 
   406  021C                     	;# 
   407  021D                     	;# 
   408  021E                     	;# 
   409  021F                     	;# 
   410  028C                     	;# 
   411  028D                     	;# 
   412  0291                     	;# 
   413  0291                     	;# 
   414  0292                     	;# 
   415  0293                     	;# 
   416  0298                     	;# 
   417  0298                     	;# 
   418  0299                     	;# 
   419  029A                     	;# 
   420  029D                     	;# 
   421  029E                     	;# 
   422  029F                     	;# 
   423  030C                     	;# 
   424  030D                     	;# 
   425  0311                     	;# 
   426  0311                     	;# 
   427  0312                     	;# 
   428  0313                     	;# 
   429  0318                     	;# 
   430  0318                     	;# 
   431  0319                     	;# 
   432  031A                     	;# 
   433  031C                     	;# 
   434  031C                     	;# 
   435  031D                     	;# 
   436  031E                     	;# 
   437  038C                     	;# 
   438  038D                     	;# 
   439  0394                     	;# 
   440  0395                     	;# 
   441  0396                     	;# 
   442  040C                     	;# 
   443  040D                     	;# 
   444  0411                     	;# 
   445  0411                     	;# 
   446  0412                     	;# 
   447  0413                     	;# 
   448  0414                     	;# 
   449  0415                     	;# 
   450  0416                     	;# 
   451  0417                     	;# 
   452  0418                     	;# 
   453  0418                     	;# 
   454  0419                     	;# 
   455  041A                     	;# 
   456  041B                     	;# 
   457  041C                     	;# 
   458  041D                     	;# 
   459  041E                     	;# 
   460  048D                     	;# 
   461  0491                     	;# 
   462  0491                     	;# 
   463  0492                     	;# 
   464  0492                     	;# 
   465  0493                     	;# 
   466  0493                     	;# 
   467  0493                     	;# 
   468  0494                     	;# 
   469  0494                     	;# 
   470  0495                     	;# 
   471  0495                     	;# 
   472  0496                     	;# 
   473  0496                     	;# 
   474  0497                     	;# 
   475  0497                     	;# 
   476  0595                     	;# 
   477  0596                     	;# 
   478  0597                     	;# 
   479  059C                     	;# 
   480  059D                     	;# 
   481  059E                     	;# 
   482  0611                     	;# 
   483  0611                     	;# 
   484  0612                     	;# 
   485  0613                     	;# 
   486  0614                     	;# 
   487  0614                     	;# 
   488  0615                     	;# 
   489  0616                     	;# 
   490  0617                     	;# 
   491  0617                     	;# 
   492  0618                     	;# 
   493  0619                     	;# 
   494  061A                     	;# 
   495  061A                     	;# 
   496  061B                     	;# 
   497  061C                     	;# 
   498  061D                     	;# 
   499  061D                     	;# 
   500  061E                     	;# 
   501  061F                     	;# 
   502  0FE4                     	;# 
   503  0FE5                     	;# 
   504  0FE6                     	;# 
   505  0FE7                     	;# 
   506  0FE8                     	;# 
   507  0FE9                     	;# 
   508  0FEA                     	;# 
   509  0FEB                     	;# 
   510  0FED                     	;# 
   511  0FEE                     	;# 
   512  0FEF                     	;# 
   513  0000                     	;# 
   514  0001                     	;# 
   515  0002                     	;# 
   516  0003                     	;# 
   517  0004                     	;# 
   518  0005                     	;# 
   519  0006                     	;# 
   520  0007                     	;# 
   521  0008                     	;# 
   522  0009                     	;# 
   523  000A                     	;# 
   524  000B                     	;# 
   525  000C                     	;# 
   526  000D                     	;# 
   527  000E                     	;# 
   528  000F                     	;# 
   529  0010                     	;# 
   530  0011                     	;# 
   531  0012                     	;# 
   532  0013                     	;# 
   533  0014                     	;# 
   534  0015                     	;# 
   535  0016                     	;# 
   536  0016                     	;# 
   537  0017                     	;# 
   538  0018                     	;# 
   539  0019                     	;# 
   540  001A                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  008C                     	;# 
   544  008D                     	;# 
   545  008E                     	;# 
   546  008F                     	;# 
   547  0090                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0093                     	;# 
   551  0094                     	;# 
   552  0095                     	;# 
   553  0096                     	;# 
   554  0097                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  010C                     	;# 
   563  010D                     	;# 
   564  010E                     	;# 
   565  010F                     	;# 
   566  0110                     	;# 
   567  0116                     	;# 
   568  0117                     	;# 
   569  011D                     	;# 
   570  018C                     	;# 
   571  018D                     	;# 
   572  018F                     	;# 
   573  0190                     	;# 
   574  0191                     	;# 
   575  0191                     	;# 
   576  0192                     	;# 
   577  0193                     	;# 
   578  0193                     	;# 
   579  0194                     	;# 
   580  0195                     	;# 
   581  0196                     	;# 
   582  0197                     	;# 
   583  0199                     	;# 
   584  0199                     	;# 
   585  0199                     	;# 
   586  019A                     	;# 
   587  019A                     	;# 
   588  019A                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019C                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019D                     	;# 
   598  019D                     	;# 
   599  019D                     	;# 
   600  019E                     	;# 
   601  019E                     	;# 
   602  019E                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  020D                     	;# 
   607  020F                     	;# 
   608  0210                     	;# 
   609  0211                     	;# 
   610  0211                     	;# 
   611  0212                     	;# 
   612  0212                     	;# 
   613  0213                     	;# 
   614  0213                     	;# 
   615  0214                     	;# 
   616  0214                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0216                     	;# 
   621  0216                     	;# 
   622  0217                     	;# 
   623  0217                     	;# 
   624  0219                     	;# 
   625  021A                     	;# 
   626  021B                     	;# 
   627  021C                     	;# 
   628  021D                     	;# 
   629  021E                     	;# 
   630  021F                     	;# 
   631  028C                     	;# 
   632  028D                     	;# 
   633  0291                     	;# 
   634  0291                     	;# 
   635  0292                     	;# 
   636  0293                     	;# 
   637  0298                     	;# 
   638  0298                     	;# 
   639  0299                     	;# 
   640  029A                     	;# 
   641  029D                     	;# 
   642  029E                     	;# 
   643  029F                     	;# 
   644  030C                     	;# 
   645  030D                     	;# 
   646  0311                     	;# 
   647  0311                     	;# 
   648  0312                     	;# 
   649  0313                     	;# 
   650  0318                     	;# 
   651  0318                     	;# 
   652  0319                     	;# 
   653  031A                     	;# 
   654  031C                     	;# 
   655  031C                     	;# 
   656  031D                     	;# 
   657  031E                     	;# 
   658  038C                     	;# 
   659  038D                     	;# 
   660  0394                     	;# 
   661  0395                     	;# 
   662  0396                     	;# 
   663  040C                     	;# 
   664  040D                     	;# 
   665  0411                     	;# 
   666  0411                     	;# 
   667  0412                     	;# 
   668  0413                     	;# 
   669  0414                     	;# 
   670  0415                     	;# 
   671  0416                     	;# 
   672  0417                     	;# 
   673  0418                     	;# 
   674  0418                     	;# 
   675  0419                     	;# 
   676  041A                     	;# 
   677  041B                     	;# 
   678  041C                     	;# 
   679  041D                     	;# 
   680  041E                     	;# 
   681  048D                     	;# 
   682  0491                     	;# 
   683  0491                     	;# 
   684  0492                     	;# 
   685  0492                     	;# 
   686  0493                     	;# 
   687  0493                     	;# 
   688  0493                     	;# 
   689  0494                     	;# 
   690  0494                     	;# 
   691  0495                     	;# 
   692  0495                     	;# 
   693  0496                     	;# 
   694  0496                     	;# 
   695  0497                     	;# 
   696  0497                     	;# 
   697  0595                     	;# 
   698  0596                     	;# 
   699  0597                     	;# 
   700  059C                     	;# 
   701  059D                     	;# 
   702  059E                     	;# 
   703  0611                     	;# 
   704  0611                     	;# 
   705  0612                     	;# 
   706  0613                     	;# 
   707  0614                     	;# 
   708  0614                     	;# 
   709  0615                     	;# 
   710  0616                     	;# 
   711  0617                     	;# 
   712  0617                     	;# 
   713  0618                     	;# 
   714  0619                     	;# 
   715  061A                     	;# 
   716  061A                     	;# 
   717  061B                     	;# 
   718  061C                     	;# 
   719  061D                     	;# 
   720  061D                     	;# 
   721  061E                     	;# 
   722  061F                     	;# 
   723  0FE4                     	;# 
   724  0FE5                     	;# 
   725  0FE6                     	;# 
   726  0FE7                     	;# 
   727  0FE8                     	;# 
   728  0FE9                     	;# 
   729  0FEA                     	;# 
   730  0FEB                     	;# 
   731  0FED                     	;# 
   732  0FEE                     	;# 
   733  0FEF                     	;# 
   734  0000                     	;# 
   735  0001                     	;# 
   736  0002                     	;# 
   737  0003                     	;# 
   738  0004                     	;# 
   739  0005                     	;# 
   740  0006                     	;# 
   741  0007                     	;# 
   742  0008                     	;# 
   743  0009                     	;# 
   744  000A                     	;# 
   745  000B                     	;# 
   746  000C                     	;# 
   747  000D                     	;# 
   748  000E                     	;# 
   749  000F                     	;# 
   750  0010                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0013                     	;# 
   754  0014                     	;# 
   755  0015                     	;# 
   756  0016                     	;# 
   757  0016                     	;# 
   758  0017                     	;# 
   759  0018                     	;# 
   760  0019                     	;# 
   761  001A                     	;# 
   762  001B                     	;# 
   763  001C                     	;# 
   764  008C                     	;# 
   765  008D                     	;# 
   766  008E                     	;# 
   767  008F                     	;# 
   768  0090                     	;# 
   769  0091                     	;# 
   770  0092                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0099                     	;# 
   777  009A                     	;# 
   778  009B                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  010C                     	;# 
   784  010D                     	;# 
   785  010E                     	;# 
   786  010F                     	;# 
   787  0110                     	;# 
   788  0116                     	;# 
   789  0117                     	;# 
   790  011D                     	;# 
   791  018C                     	;# 
   792  018D                     	;# 
   793  018F                     	;# 
   794  0190                     	;# 
   795  0191                     	;# 
   796  0191                     	;# 
   797  0192                     	;# 
   798  0193                     	;# 
   799  0193                     	;# 
   800  0194                     	;# 
   801  0195                     	;# 
   802  0196                     	;# 
   803  0197                     	;# 
   804  0199                     	;# 
   805  0199                     	;# 
   806  0199                     	;# 
   807  019A                     	;# 
   808  019A                     	;# 
   809  019A                     	;# 
   810  019B                     	;# 
   811  019B                     	;# 
   812  019B                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019C                     	;# 
   816  019C                     	;# 
   817  019C                     	;# 
   818  019D                     	;# 
   819  019D                     	;# 
   820  019D                     	;# 
   821  019E                     	;# 
   822  019E                     	;# 
   823  019E                     	;# 
   824  019F                     	;# 
   825  019F                     	;# 
   826  019F                     	;# 
   827  020D                     	;# 
   828  020F                     	;# 
   829  0210                     	;# 
   830  0211                     	;# 
   831  0211                     	;# 
   832  0212                     	;# 
   833  0212                     	;# 
   834  0213                     	;# 
   835  0213                     	;# 
   836  0214                     	;# 
   837  0214                     	;# 
   838  0215                     	;# 
   839  0215                     	;# 
   840  0215                     	;# 
   841  0216                     	;# 
   842  0216                     	;# 
   843  0217                     	;# 
   844  0217                     	;# 
   845  0219                     	;# 
   846  021A                     	;# 
   847  021B                     	;# 
   848  021C                     	;# 
   849  021D                     	;# 
   850  021E                     	;# 
   851  021F                     	;# 
   852  028C                     	;# 
   853  028D                     	;# 
   854  0291                     	;# 
   855  0291                     	;# 
   856  0292                     	;# 
   857  0293                     	;# 
   858  0298                     	;# 
   859  0298                     	;# 
   860  0299                     	;# 
   861  029A                     	;# 
   862  029D                     	;# 
   863  029E                     	;# 
   864  029F                     	;# 
   865  030C                     	;# 
   866  030D                     	;# 
   867  0311                     	;# 
   868  0311                     	;# 
   869  0312                     	;# 
   870  0313                     	;# 
   871  0318                     	;# 
   872  0318                     	;# 
   873  0319                     	;# 
   874  031A                     	;# 
   875  031C                     	;# 
   876  031C                     	;# 
   877  031D                     	;# 
   878  031E                     	;# 
   879  038C                     	;# 
   880  038D                     	;# 
   881  0394                     	;# 
   882  0395                     	;# 
   883  0396                     	;# 
   884  040C                     	;# 
   885  040D                     	;# 
   886  0411                     	;# 
   887  0411                     	;# 
   888  0412                     	;# 
   889  0413                     	;# 
   890  0414                     	;# 
   891  0415                     	;# 
   892  0416                     	;# 
   893  0417                     	;# 
   894  0418                     	;# 
   895  0418                     	;# 
   896  0419                     	;# 
   897  041A                     	;# 
   898  041B                     	;# 
   899  041C                     	;# 
   900  041D                     	;# 
   901  041E                     	;# 
   902  048D                     	;# 
   903  0491                     	;# 
   904  0491                     	;# 
   905  0492                     	;# 
   906  0492                     	;# 
   907  0493                     	;# 
   908  0493                     	;# 
   909  0493                     	;# 
   910  0494                     	;# 
   911  0494                     	;# 
   912  0495                     	;# 
   913  0495                     	;# 
   914  0496                     	;# 
   915  0496                     	;# 
   916  0497                     	;# 
   917  0497                     	;# 
   918  0595                     	;# 
   919  0596                     	;# 
   920  0597                     	;# 
   921  059C                     	;# 
   922  059D                     	;# 
   923  059E                     	;# 
   924  0611                     	;# 
   925  0611                     	;# 
   926  0612                     	;# 
   927  0613                     	;# 
   928  0614                     	;# 
   929  0614                     	;# 
   930  0615                     	;# 
   931  0616                     	;# 
   932  0617                     	;# 
   933  0617                     	;# 
   934  0618                     	;# 
   935  0619                     	;# 
   936  061A                     	;# 
   937  061A                     	;# 
   938  061B                     	;# 
   939  061C                     	;# 
   940  061D                     	;# 
   941  061D                     	;# 
   942  061E                     	;# 
   943  061F                     	;# 
   944  0FE4                     	;# 
   945  0FE5                     	;# 
   946  0FE6                     	;# 
   947  0FE7                     	;# 
   948  0FE8                     	;# 
   949  0FE9                     	;# 
   950  0FEA                     	;# 
   951  0FEB                     	;# 
   952  0FED                     	;# 
   953  0FEE                     	;# 
   954  0FEF                     	;# 
   955  0000                     	;# 
   956  0001                     	;# 
   957  0002                     	;# 
   958  0003                     	;# 
   959  0004                     	;# 
   960  0005                     	;# 
   961  0006                     	;# 
   962  0007                     	;# 
   963  0008                     	;# 
   964  0009                     	;# 
   965  000A                     	;# 
   966  000B                     	;# 
   967  000C                     	;# 
   968  000D                     	;# 
   969  000E                     	;# 
   970  000F                     	;# 
   971  0010                     	;# 
   972  0011                     	;# 
   973  0012                     	;# 
   974  0013                     	;# 
   975  0014                     	;# 
   976  0015                     	;# 
   977  0016                     	;# 
   978  0016                     	;# 
   979  0017                     	;# 
   980  0018                     	;# 
   981  0019                     	;# 
   982  001A                     	;# 
   983  001B                     	;# 
   984  001C                     	;# 
   985  008C                     	;# 
   986  008D                     	;# 
   987  008E                     	;# 
   988  008F                     	;# 
   989  0090                     	;# 
   990  0091                     	;# 
   991  0092                     	;# 
   992  0093                     	;# 
   993  0094                     	;# 
   994  0095                     	;# 
   995  0096                     	;# 
   996  0097                     	;# 
   997  0099                     	;# 
   998  009A                     	;# 
   999  009B                     	;# 
  1000  009B                     	;# 
  1001  009C                     	;# 
  1002  009D                     	;# 
  1003  009E                     	;# 
  1004  010C                     	;# 
  1005  010D                     	;# 
  1006  010E                     	;# 
  1007  010F                     	;# 
  1008  0110                     	;# 
  1009  0116                     	;# 
  1010  0117                     	;# 
  1011  011D                     	;# 
  1012  018C                     	;# 
  1013  018D                     	;# 
  1014  018F                     	;# 
  1015  0190                     	;# 
  1016  0191                     	;# 
  1017  0191                     	;# 
  1018  0192                     	;# 
  1019  0193                     	;# 
  1020  0193                     	;# 
  1021  0194                     	;# 
  1022  0195                     	;# 
  1023  0196                     	;# 
  1024  0197                     	;# 
  1025  0199                     	;# 
  1026  0199                     	;# 
  1027  0199                     	;# 
  1028  019A                     	;# 
  1029  019A                     	;# 
  1030  019A                     	;# 
  1031  019B                     	;# 
  1032  019B                     	;# 
  1033  019B                     	;# 
  1034  019B                     	;# 
  1035  019B                     	;# 
  1036  019C                     	;# 
  1037  019C                     	;# 
  1038  019C                     	;# 
  1039  019D                     	;# 
  1040  019D                     	;# 
  1041  019D                     	;# 
  1042  019E                     	;# 
  1043  019E                     	;# 
  1044  019E                     	;# 
  1045  019F                     	;# 
  1046  019F                     	;# 
  1047  019F                     	;# 
  1048  020D                     	;# 
  1049  020F                     	;# 
  1050  0210                     	;# 
  1051  0211                     	;# 
  1052  0211                     	;# 
  1053  0212                     	;# 
  1054  0212                     	;# 
  1055  0213                     	;# 
  1056  0213                     	;# 
  1057  0214                     	;# 
  1058  0214                     	;# 
  1059  0215                     	;# 
  1060  0215                     	;# 
  1061  0215                     	;# 
  1062  0216                     	;# 
  1063  0216                     	;# 
  1064  0217                     	;# 
  1065  0217                     	;# 
  1066  0219                     	;# 
  1067  021A                     	;# 
  1068  021B                     	;# 
  1069  021C                     	;# 
  1070  021D                     	;# 
  1071  021E                     	;# 
  1072  021F                     	;# 
  1073  028C                     	;# 
  1074  028D                     	;# 
  1075  0291                     	;# 
  1076  0291                     	;# 
  1077  0292                     	;# 
  1078  0293                     	;# 
  1079  0298                     	;# 
  1080  0298                     	;# 
  1081  0299                     	;# 
  1082  029A                     	;# 
  1083  029D                     	;# 
  1084  029E                     	;# 
  1085  029F                     	;# 
  1086  030C                     	;# 
  1087  030D                     	;# 
  1088  0311                     	;# 
  1089  0311                     	;# 
  1090  0312                     	;# 
  1091  0313                     	;# 
  1092  0318                     	;# 
  1093  0318                     	;# 
  1094  0319                     	;# 
  1095  031A                     	;# 
  1096  031C                     	;# 
  1097  031C                     	;# 
  1098  031D                     	;# 
  1099  031E                     	;# 
  1100  038C                     	;# 
  1101  038D                     	;# 
  1102  0394                     	;# 
  1103  0395                     	;# 
  1104  0396                     	;# 
  1105  040C                     	;# 
  1106  040D                     	;# 
  1107  0411                     	;# 
  1108  0411                     	;# 
  1109  0412                     	;# 
  1110  0413                     	;# 
  1111  0414                     	;# 
  1112  0415                     	;# 
  1113  0416                     	;# 
  1114  0417                     	;# 
  1115  0418                     	;# 
  1116  0418                     	;# 
  1117  0419                     	;# 
  1118  041A                     	;# 
  1119  041B                     	;# 
  1120  041C                     	;# 
  1121  041D                     	;# 
  1122  041E                     	;# 
  1123  048D                     	;# 
  1124  0491                     	;# 
  1125  0491                     	;# 
  1126  0492                     	;# 
  1127  0492                     	;# 
  1128  0493                     	;# 
  1129  0493                     	;# 
  1130  0493                     	;# 
  1131  0494                     	;# 
  1132  0494                     	;# 
  1133  0495                     	;# 
  1134  0495                     	;# 
  1135  0496                     	;# 
  1136  0496                     	;# 
  1137  0497                     	;# 
  1138  0497                     	;# 
  1139  0595                     	;# 
  1140  0596                     	;# 
  1141  0597                     	;# 
  1142  059C                     	;# 
  1143  059D                     	;# 
  1144  059E                     	;# 
  1145  0611                     	;# 
  1146  0611                     	;# 
  1147  0612                     	;# 
  1148  0613                     	;# 
  1149  0614                     	;# 
  1150  0614                     	;# 
  1151  0615                     	;# 
  1152  0616                     	;# 
  1153  0617                     	;# 
  1154  0617                     	;# 
  1155  0618                     	;# 
  1156  0619                     	;# 
  1157  061A                     	;# 
  1158  061A                     	;# 
  1159  061B                     	;# 
  1160  061C                     	;# 
  1161  061D                     	;# 
  1162  061D                     	;# 
  1163  061E                     	;# 
  1164  061F                     	;# 
  1165  0FE4                     	;# 
  1166  0FE5                     	;# 
  1167  0FE6                     	;# 
  1168  0FE7                     	;# 
  1169  0FE8                     	;# 
  1170  0FE9                     	;# 
  1171  0FEA                     	;# 
  1172  0FEB                     	;# 
  1173  0FED                     	;# 
  1174  0FEE                     	;# 
  1175  0FEF                     	;# 
  1176  0000                     	;# 
  1177  0001                     	;# 
  1178  0002                     	;# 
  1179  0003                     	;# 
  1180  0004                     	;# 
  1181  0005                     	;# 
  1182  0006                     	;# 
  1183  0007                     	;# 
  1184  0008                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  000D                     	;# 
  1190  000E                     	;# 
  1191  000F                     	;# 
  1192  0010                     	;# 
  1193  0011                     	;# 
  1194  0012                     	;# 
  1195  0013                     	;# 
  1196  0014                     	;# 
  1197  0015                     	;# 
  1198  0016                     	;# 
  1199  0016                     	;# 
  1200  0017                     	;# 
  1201  0018                     	;# 
  1202  0019                     	;# 
  1203  001A                     	;# 
  1204  001B                     	;# 
  1205  001C                     	;# 
  1206  008C                     	;# 
  1207  008D                     	;# 
  1208  008E                     	;# 
  1209  008F                     	;# 
  1210  0090                     	;# 
  1211  0091                     	;# 
  1212  0092                     	;# 
  1213  0093                     	;# 
  1214  0094                     	;# 
  1215  0095                     	;# 
  1216  0096                     	;# 
  1217  0097                     	;# 
  1218  0099                     	;# 
  1219  009A                     	;# 
  1220  009B                     	;# 
  1221  009B                     	;# 
  1222  009C                     	;# 
  1223  009D                     	;# 
  1224  009E                     	;# 
  1225  010C                     	;# 
  1226  010D                     	;# 
  1227  010E                     	;# 
  1228  010F                     	;# 
  1229  0110                     	;# 
  1230  0116                     	;# 
  1231  0117                     	;# 
  1232  011D                     	;# 
  1233  018C                     	;# 
  1234  018D                     	;# 
  1235  018F                     	;# 
  1236  0190                     	;# 
  1237  0191                     	;# 
  1238  0191                     	;# 
  1239  0192                     	;# 
  1240  0193                     	;# 
  1241  0193                     	;# 
  1242  0194                     	;# 
  1243  0195                     	;# 
  1244  0196                     	;# 
  1245  0197                     	;# 
  1246  0199                     	;# 
  1247  0199                     	;# 
  1248  0199                     	;# 
  1249  019A                     	;# 
  1250  019A                     	;# 
  1251  019A                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019C                     	;# 
  1258  019C                     	;# 
  1259  019C                     	;# 
  1260  019D                     	;# 
  1261  019D                     	;# 
  1262  019D                     	;# 
  1263  019E                     	;# 
  1264  019E                     	;# 
  1265  019E                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  020D                     	;# 
  1270  020F                     	;# 
  1271  0210                     	;# 
  1272  0211                     	;# 
  1273  0211                     	;# 
  1274  0212                     	;# 
  1275  0212                     	;# 
  1276  0213                     	;# 
  1277  0213                     	;# 
  1278  0214                     	;# 
  1279  0214                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0216                     	;# 
  1284  0216                     	;# 
  1285  0217                     	;# 
  1286  0217                     	;# 
  1287  0219                     	;# 
  1288  021A                     	;# 
  1289  021B                     	;# 
  1290  021C                     	;# 
  1291  021D                     	;# 
  1292  021E                     	;# 
  1293  021F                     	;# 
  1294  028C                     	;# 
  1295  028D                     	;# 
  1296  0291                     	;# 
  1297  0291                     	;# 
  1298  0292                     	;# 
  1299  0293                     	;# 
  1300  0298                     	;# 
  1301  0298                     	;# 
  1302  0299                     	;# 
  1303  029A                     	;# 
  1304  029D                     	;# 
  1305  029E                     	;# 
  1306  029F                     	;# 
  1307  030C                     	;# 
  1308  030D                     	;# 
  1309  0311                     	;# 
  1310  0311                     	;# 
  1311  0312                     	;# 
  1312  0313                     	;# 
  1313  0318                     	;# 
  1314  0318                     	;# 
  1315  0319                     	;# 
  1316  031A                     	;# 
  1317  031C                     	;# 
  1318  031C                     	;# 
  1319  031D                     	;# 
  1320  031E                     	;# 
  1321  038C                     	;# 
  1322  038D                     	;# 
  1323  0394                     	;# 
  1324  0395                     	;# 
  1325  0396                     	;# 
  1326  040C                     	;# 
  1327  040D                     	;# 
  1328  0411                     	;# 
  1329  0411                     	;# 
  1330  0412                     	;# 
  1331  0413                     	;# 
  1332  0414                     	;# 
  1333  0415                     	;# 
  1334  0416                     	;# 
  1335  0417                     	;# 
  1336  0418                     	;# 
  1337  0418                     	;# 
  1338  0419                     	;# 
  1339  041A                     	;# 
  1340  041B                     	;# 
  1341  041C                     	;# 
  1342  041D                     	;# 
  1343  041E                     	;# 
  1344  048D                     	;# 
  1345  0491                     	;# 
  1346  0491                     	;# 
  1347  0492                     	;# 
  1348  0492                     	;# 
  1349  0493                     	;# 
  1350  0493                     	;# 
  1351  0493                     	;# 
  1352  0494                     	;# 
  1353  0494                     	;# 
  1354  0495                     	;# 
  1355  0495                     	;# 
  1356  0496                     	;# 
  1357  0496                     	;# 
  1358  0497                     	;# 
  1359  0497                     	;# 
  1360  0595                     	;# 
  1361  0596                     	;# 
  1362  0597                     	;# 
  1363  059C                     	;# 
  1364  059D                     	;# 
  1365  059E                     	;# 
  1366  0611                     	;# 
  1367  0611                     	;# 
  1368  0612                     	;# 
  1369  0613                     	;# 
  1370  0614                     	;# 
  1371  0614                     	;# 
  1372  0615                     	;# 
  1373  0616                     	;# 
  1374  0617                     	;# 
  1375  0617                     	;# 
  1376  0618                     	;# 
  1377  0619                     	;# 
  1378  061A                     	;# 
  1379  061A                     	;# 
  1380  061B                     	;# 
  1381  061C                     	;# 
  1382  061D                     	;# 
  1383  061D                     	;# 
  1384  061E                     	;# 
  1385  061F                     	;# 
  1386  0FE4                     	;# 
  1387  0FE5                     	;# 
  1388  0FE6                     	;# 
  1389  0FE7                     	;# 
  1390  0FE8                     	;# 
  1391  0FE9                     	;# 
  1392  0FEA                     	;# 
  1393  0FEB                     	;# 
  1394  0FED                     	;# 
  1395  0FEE                     	;# 
  1396  0FEF                     	;# 
  1397  0000                     	;# 
  1398  0001                     	;# 
  1399  0002                     	;# 
  1400  0003                     	;# 
  1401  0004                     	;# 
  1402  0005                     	;# 
  1403  0006                     	;# 
  1404  0007                     	;# 
  1405  0008                     	;# 
  1406  0009                     	;# 
  1407  000A                     	;# 
  1408  000B                     	;# 
  1409  000C                     	;# 
  1410  000D                     	;# 
  1411  000E                     	;# 
  1412  000F                     	;# 
  1413  0010                     	;# 
  1414  0011                     	;# 
  1415  0012                     	;# 
  1416  0013                     	;# 
  1417  0014                     	;# 
  1418  0015                     	;# 
  1419  0016                     	;# 
  1420  0016                     	;# 
  1421  0017                     	;# 
  1422  0018                     	;# 
  1423  0019                     	;# 
  1424  001A                     	;# 
  1425  001B                     	;# 
  1426  001C                     	;# 
  1427  008C                     	;# 
  1428  008D                     	;# 
  1429  008E                     	;# 
  1430  008F                     	;# 
  1431  0090                     	;# 
  1432  0091                     	;# 
  1433  0092                     	;# 
  1434  0093                     	;# 
  1435  0094                     	;# 
  1436  0095                     	;# 
  1437  0096                     	;# 
  1438  0097                     	;# 
  1439  0099                     	;# 
  1440  009A                     	;# 
  1441  009B                     	;# 
  1442  009B                     	;# 
  1443  009C                     	;# 
  1444  009D                     	;# 
  1445  009E                     	;# 
  1446  010C                     	;# 
  1447  010D                     	;# 
  1448  010E                     	;# 
  1449  010F                     	;# 
  1450  0110                     	;# 
  1451  0116                     	;# 
  1452  0117                     	;# 
  1453  011D                     	;# 
  1454  018C                     	;# 
  1455  018D                     	;# 
  1456  018F                     	;# 
  1457  0190                     	;# 
  1458  0191                     	;# 
  1459  0191                     	;# 
  1460  0192                     	;# 
  1461  0193                     	;# 
  1462  0193                     	;# 
  1463  0194                     	;# 
  1464  0195                     	;# 
  1465  0196                     	;# 
  1466  0197                     	;# 
  1467  0199                     	;# 
  1468  0199                     	;# 
  1469  0199                     	;# 
  1470  019A                     	;# 
  1471  019A                     	;# 
  1472  019A                     	;# 
  1473  019B                     	;# 
  1474  019B                     	;# 
  1475  019B                     	;# 
  1476  019B                     	;# 
  1477  019B                     	;# 
  1478  019C                     	;# 
  1479  019C                     	;# 
  1480  019C                     	;# 
  1481  019D                     	;# 
  1482  019D                     	;# 
  1483  019D                     	;# 
  1484  019E                     	;# 
  1485  019E                     	;# 
  1486  019E                     	;# 
  1487  019F                     	;# 
  1488  019F                     	;# 
  1489  019F                     	;# 
  1490  020D                     	;# 
  1491  020F                     	;# 
  1492  0210                     	;# 
  1493  0211                     	;# 
  1494  0211                     	;# 
  1495  0212                     	;# 
  1496  0212                     	;# 
  1497  0213                     	;# 
  1498  0213                     	;# 
  1499  0214                     	;# 
  1500  0214                     	;# 
  1501  0215                     	;# 
  1502  0215                     	;# 
  1503  0215                     	;# 
  1504  0216                     	;# 
  1505  0216                     	;# 
  1506  0217                     	;# 
  1507  0217                     	;# 
  1508  0219                     	;# 
  1509  021A                     	;# 
  1510  021B                     	;# 
  1511  021C                     	;# 
  1512  021D                     	;# 
  1513  021E                     	;# 
  1514  021F                     	;# 
  1515  028C                     	;# 
  1516  028D                     	;# 
  1517  0291                     	;# 
  1518  0291                     	;# 
  1519  0292                     	;# 
  1520  0293                     	;# 
  1521  0298                     	;# 
  1522  0298                     	;# 
  1523  0299                     	;# 
  1524  029A                     	;# 
  1525  029D                     	;# 
  1526  029E                     	;# 
  1527  029F                     	;# 
  1528  030C                     	;# 
  1529  030D                     	;# 
  1530  0311                     	;# 
  1531  0311                     	;# 
  1532  0312                     	;# 
  1533  0313                     	;# 
  1534  0318                     	;# 
  1535  0318                     	;# 
  1536  0319                     	;# 
  1537  031A                     	;# 
  1538  031C                     	;# 
  1539  031C                     	;# 
  1540  031D                     	;# 
  1541  031E                     	;# 
  1542  038C                     	;# 
  1543  038D                     	;# 
  1544  0394                     	;# 
  1545  0395                     	;# 
  1546  0396                     	;# 
  1547  040C                     	;# 
  1548  040D                     	;# 
  1549  0411                     	;# 
  1550  0411                     	;# 
  1551  0412                     	;# 
  1552  0413                     	;# 
  1553  0414                     	;# 
  1554  0415                     	;# 
  1555  0416                     	;# 
  1556  0417                     	;# 
  1557  0418                     	;# 
  1558  0418                     	;# 
  1559  0419                     	;# 
  1560  041A                     	;# 
  1561  041B                     	;# 
  1562  041C                     	;# 
  1563  041D                     	;# 
  1564  041E                     	;# 
  1565  048D                     	;# 
  1566  0491                     	;# 
  1567  0491                     	;# 
  1568  0492                     	;# 
  1569  0492                     	;# 
  1570  0493                     	;# 
  1571  0493                     	;# 
  1572  0493                     	;# 
  1573  0494                     	;# 
  1574  0494                     	;# 
  1575  0495                     	;# 
  1576  0495                     	;# 
  1577  0496                     	;# 
  1578  0496                     	;# 
  1579  0497                     	;# 
  1580  0497                     	;# 
  1581  0595                     	;# 
  1582  0596                     	;# 
  1583  0597                     	;# 
  1584  059C                     	;# 
  1585  059D                     	;# 
  1586  059E                     	;# 
  1587  0611                     	;# 
  1588  0611                     	;# 
  1589  0612                     	;# 
  1590  0613                     	;# 
  1591  0614                     	;# 
  1592  0614                     	;# 
  1593  0615                     	;# 
  1594  0616                     	;# 
  1595  0617                     	;# 
  1596  0617                     	;# 
  1597  0618                     	;# 
  1598  0619                     	;# 
  1599  061A                     	;# 
  1600  061A                     	;# 
  1601  061B                     	;# 
  1602  061C                     	;# 
  1603  061D                     	;# 
  1604  061D                     	;# 
  1605  061E                     	;# 
  1606  061F                     	;# 
  1607  0FE4                     	;# 
  1608  0FE5                     	;# 
  1609  0FE6                     	;# 
  1610  0FE7                     	;# 
  1611  0FE8                     	;# 
  1612  0FE9                     	;# 
  1613  0FEA                     	;# 
  1614  0FEB                     	;# 
  1615  0FED                     	;# 
  1616  0FEE                     	;# 
  1617  0FEF                     	;_mod5
  1618                           
  1619                           	psect	idataCOMMON
  1620  0002                     __pidataCOMMON:	
  1621                           
  1622                           ;initializer for _top_push_state
  1623  0002  3406               	retlw	6
  1624  0003  3400               	retlw	0
  1625                           
  1626                           	psect	idataBANK0
  1627  0C5A                     __pidataBANK0:	
  1628                           
  1629                           ;initializer for _baseline_delay_time
  1630  0C5A  34D0               	retlw	208
  1631  0C5B  3407               	retlw	7
  1632  0C5C  3400               	retlw	0
  1633  0C5D  3400               	retlw	0
  1634                           
  1635                           ;initializer for _delay_time
  1636  0C5E  34D0               	retlw	208
  1637  0C5F  3407               	retlw	7
  1638  0C60  3400               	retlw	0
  1639  0C61  3400               	retlw	0
  1640                           
  1641                           ;initializer for _blink_state
  1642  0C62  3401               	retlw	1
  1643  0C63  3400               	retlw	0
  1644                           
  1645                           ;initializer for _bottom_push_state
  1646  0C64  3406               	retlw	6
  1647  0C65  3400               	retlw	0
  1648                           
  1649                           ;initializer for _tap_iteration
  1650  0C66  3401               	retlw	1
  1651  0C67  3400               	retlw	0
  1652                           
  1653                           	psect	idataBANK1
  1654  0C77                     __pidataBANK1:	
  1655                           
  1656                           ;initializer for _delay_time_changed
  1657  0C77  3401               	retlw	1
  1658  0C78  3400               	retlw	0
  1659                           
  1660                           ;initializer for _incoming_data
  1661  0C79  3401               	retlw	1
  1662  0C7A  3400               	retlw	0
  1663                           
  1664                           ;initializer for _knob1_prev
  1665  0C7B  34D0               	retlw	208
  1666  0C7C  3407               	retlw	7
  1667                           
  1668                           ;initializer for _knob2_prev
  1669  0C7D  34D0               	retlw	208
  1670  0C7E  3407               	retlw	7
  1671                           
  1672                           ;initializer for _knob3_prev
  1673  0C7F  34D0               	retlw	208
  1674  0C80  3407               	retlw	7
  1675                           
  1676                           ;initializer for _knob4_prev
  1677  0C81  34D0               	retlw	208
  1678  0C82  3407               	retlw	7
  1679                           
  1680                           ;initializer for _knob5_prev
  1681  0C83  34D0               	retlw	208
  1682  0C84  3407               	retlw	7
  1683                           
  1684                           ;initializer for _mod_delay_time
  1685  0C85  34D0               	retlw	208
  1686  0C86  3407               	retlw	7
  1687                           
  1688                           ;initializer for _num_taps
  1689  0C87  3404               	retlw	4
  1690  0C88  3400               	retlw	0
  1691                           
  1692                           	psect	idataBANK4
  1693  0EB7                     __pidataBANK4:	
  1694                           
  1695                           ;initializer for _mod1
  1696  0EB7  3400               	retlw	0
  1697  0EB8  3400               	retlw	0
  1698  0EB9  3415               	retlw	21
  1699  0EBA  3400               	retlw	0
  1700  0EBB  3428               	retlw	40
  1701  0EBC  3400               	retlw	0
  1702  0EBD  343B               	retlw	59
  1703  0EBE  3400               	retlw	0
  1704  0EBF  344A               	retlw	74
  1705  0EC0  3400               	retlw	0
  1706  0EC1  3456               	retlw	86
  1707  0EC2  3400               	retlw	0
  1708  0EC3  345F               	retlw	95
  1709  0EC4  3400               	retlw	0
  1710  0EC5  3463               	retlw	99
  1711  0EC6  3400               	retlw	0
  1712  0EC7  3464               	retlw	100
  1713  0EC8  3400               	retlw	0
  1714  0EC9  345F               	retlw	95
  1715  0ECA  3400               	retlw	0
  1716  0ECB  3457               	retlw	87
  1717  0ECC  3400               	retlw	0
  1718  0ECD  344B               	retlw	75
  1719  0ECE  3400               	retlw	0
  1720  0ECF  343C               	retlw	60
  1721  0ED0  3400               	retlw	0
  1722  0ED1  342A               	retlw	42
  1723  0ED2  3400               	retlw	0
  1724  0ED3  3416               	retlw	22
  1725  0ED4  3400               	retlw	0
  1726  0ED5  3402               	retlw	2
  1727  0ED6  3400               	retlw	0
  1728  0ED7  34ED               	retlw	237
  1729  0ED8  34FF               	retlw	255
  1730  0ED9  34D9               	retlw	217
  1731  0EDA  34FF               	retlw	255
  1732  0EDB  34C7               	retlw	199
  1733  0EDC  34FF               	retlw	255
  1734  0EDD  34B7               	retlw	183
  1735  0EDE  34FF               	retlw	255
  1736  0EDF  34AB               	retlw	171
  1737  0EE0  34FF               	retlw	255
  1738  0EE1  34A2               	retlw	162
  1739  0EE2  34FF               	retlw	255
  1740  0EE3  349D               	retlw	157
  1741  0EE4  34FF               	retlw	255
  1742  0EE5  349C               	retlw	156
  1743  0EE6  34FF               	retlw	255
  1744  0EE7  34A8               	retlw	168
  1745  0EE8  34FF               	retlw	255
  1746  0EE9  34B4               	retlw	180
  1747  0EEA  34FF               	retlw	255
  1748  0EEB  34C3               	retlw	195
  1749  0EEC  34FF               	retlw	255
  1750  0EED  34D5               	retlw	213
  1751  0EEE  34FF               	retlw	255
  1752  0EEF  34E8               	retlw	232
  1753  0EF0  34FF               	retlw	255
  1754                           
  1755                           	psect	idataBANK5
  1756  0E7D                     __pidataBANK5:	
  1757                           
  1758                           ;initializer for _mod2
  1759  0E7D  3400               	retlw	0
  1760  0E7E  3400               	retlw	0
  1761  0E7F  340D               	retlw	13
  1762  0E80  3400               	retlw	0
  1763  0E81  341B               	retlw	27
  1764  0E82  3400               	retlw	0
  1765  0E83  3428               	retlw	40
  1766  0E84  3400               	retlw	0
  1767  0E85  3435               	retlw	53
  1768  0E86  3400               	retlw	0
  1769  0E87  3443               	retlw	67
  1770  0E88  3400               	retlw	0
  1771  0E89  3450               	retlw	80
  1772  0E8A  3400               	retlw	0
  1773  0E8B  345D               	retlw	93
  1774  0E8C  3400               	retlw	0
  1775  0E8D  345D               	retlw	93
  1776  0E8E  3400               	retlw	0
  1777  0E8F  3450               	retlw	80
  1778  0E90  3400               	retlw	0
  1779  0E91  3443               	retlw	67
  1780  0E92  3400               	retlw	0
  1781  0E93  3435               	retlw	53
  1782  0E94  3400               	retlw	0
  1783  0E95  3428               	retlw	40
  1784  0E96  3400               	retlw	0
  1785  0E97  341B               	retlw	27
  1786  0E98  3400               	retlw	0
  1787  0E99  340D               	retlw	13
  1788  0E9A  3400               	retlw	0
  1789  0E9B  3400               	retlw	0
  1790  0E9C  3400               	retlw	0
  1791  0E9D  34F3               	retlw	243
  1792  0E9E  34FF               	retlw	255
  1793  0E9F  34E5               	retlw	229
  1794  0EA0  34FF               	retlw	255
  1795  0EA1  34D8               	retlw	216
  1796  0EA2  34FF               	retlw	255
  1797  0EA3  34CB               	retlw	203
  1798  0EA4  34FF               	retlw	255
  1799  0EA5  34BD               	retlw	189
  1800  0EA6  34FF               	retlw	255
  1801  0EA7  34B0               	retlw	176
  1802  0EA8  34FF               	retlw	255
  1803  0EA9  34A3               	retlw	163
  1804  0EAA  34FF               	retlw	255
  1805  0EAB  34A3               	retlw	163
  1806  0EAC  34FF               	retlw	255
  1807  0EAD  34B0               	retlw	176
  1808  0EAE  34FF               	retlw	255
  1809  0EAF  34BD               	retlw	189
  1810  0EB0  34FF               	retlw	255
  1811  0EB1  34CB               	retlw	203
  1812  0EB2  34FF               	retlw	255
  1813  0EB3  34D8               	retlw	216
  1814  0EB4  34FF               	retlw	255
  1815  0EB5  34E5               	retlw	229
  1816  0EB6  34FF               	retlw	255
  1817                           
  1818                           	psect	idataBANK6
  1819  0E43                     __pidataBANK6:	
  1820                           
  1821                           ;initializer for _mod3
  1822  0E43  3400               	retlw	0
  1823  0E44  3400               	retlw	0
  1824  0E45  3407               	retlw	7
  1825  0E46  3400               	retlw	0
  1826  0E47  340D               	retlw	13
  1827  0E48  3400               	retlw	0
  1828  0E49  3414               	retlw	20
  1829  0E4A  3400               	retlw	0
  1830  0E4B  341B               	retlw	27
  1831  0E4C  3400               	retlw	0
  1832  0E4D  3421               	retlw	33
  1833  0E4E  3400               	retlw	0
  1834  0E4F  3428               	retlw	40
  1835  0E50  3400               	retlw	0
  1836  0E51  342F               	retlw	47
  1837  0E52  3400               	retlw	0
  1838  0E53  3435               	retlw	53
  1839  0E54  3400               	retlw	0
  1840  0E55  343C               	retlw	60
  1841  0E56  3400               	retlw	0
  1842  0E57  3443               	retlw	67
  1843  0E58  3400               	retlw	0
  1844  0E59  3449               	retlw	73
  1845  0E5A  3400               	retlw	0
  1846  0E5B  3450               	retlw	80
  1847  0E5C  3400               	retlw	0
  1848  0E5D  3457               	retlw	87
  1849  0E5E  3400               	retlw	0
  1850  0E5F  345D               	retlw	93
  1851  0E60  3400               	retlw	0
  1852  0E61  349C               	retlw	156
  1853  0E62  34FF               	retlw	255
  1854  0E63  34A3               	retlw	163
  1855  0E64  34FF               	retlw	255
  1856  0E65  34A9               	retlw	169
  1857  0E66  34FF               	retlw	255
  1858  0E67  34B0               	retlw	176
  1859  0E68  34FF               	retlw	255
  1860  0E69  34B7               	retlw	183
  1861  0E6A  34FF               	retlw	255
  1862  0E6B  34BD               	retlw	189
  1863  0E6C  34FF               	retlw	255
  1864  0E6D  34C4               	retlw	196
  1865  0E6E  34FF               	retlw	255
  1866  0E6F  34CB               	retlw	203
  1867  0E70  34FF               	retlw	255
  1868  0E71  34D1               	retlw	209
  1869  0E72  34FF               	retlw	255
  1870  0E73  34D8               	retlw	216
  1871  0E74  34FF               	retlw	255
  1872  0E75  34DF               	retlw	223
  1873  0E76  34FF               	retlw	255
  1874  0E77  34E5               	retlw	229
  1875  0E78  34FF               	retlw	255
  1876  0E79  34EC               	retlw	236
  1877  0E7A  34FF               	retlw	255
  1878  0E7B  34F3               	retlw	243
  1879  0E7C  34FF               	retlw	255
  1880                           
  1881                           	psect	idataBANK7
  1882  0E09                     __pidataBANK7:	
  1883                           
  1884                           ;initializer for _mod4
  1885  0E09  3464               	retlw	100
  1886  0E0A  3400               	retlw	0
  1887  0E0B  3464               	retlw	100
  1888  0E0C  3400               	retlw	0
  1889  0E0D  3464               	retlw	100
  1890  0E0E  3400               	retlw	0
  1891  0E0F  3464               	retlw	100
  1892  0E10  3400               	retlw	0
  1893  0E11  3464               	retlw	100
  1894  0E12  3400               	retlw	0
  1895  0E13  3464               	retlw	100
  1896  0E14  3400               	retlw	0
  1897  0E15  3464               	retlw	100
  1898  0E16  3400               	retlw	0
  1899  0E17  3464               	retlw	100
  1900  0E18  3400               	retlw	0
  1901  0E19  3464               	retlw	100
  1902  0E1A  3400               	retlw	0
  1903  0E1B  3464               	retlw	100
  1904  0E1C  3400               	retlw	0
  1905  0E1D  3464               	retlw	100
  1906  0E1E  3400               	retlw	0
  1907  0E1F  3464               	retlw	100
  1908  0E20  3400               	retlw	0
  1909  0E21  3464               	retlw	100
  1910  0E22  3400               	retlw	0
  1911  0E23  3464               	retlw	100
  1912  0E24  3400               	retlw	0
  1913  0E25  3464               	retlw	100
  1914  0E26  3400               	retlw	0
  1915  0E27  349C               	retlw	156
  1916  0E28  34FF               	retlw	255
  1917  0E29  349C               	retlw	156
  1918  0E2A  34FF               	retlw	255
  1919  0E2B  349C               	retlw	156
  1920  0E2C  34FF               	retlw	255
  1921  0E2D  349C               	retlw	156
  1922  0E2E  34FF               	retlw	255
  1923  0E2F  349C               	retlw	156
  1924  0E30  34FF               	retlw	255
  1925  0E31  349C               	retlw	156
  1926  0E32  34FF               	retlw	255
  1927  0E33  349C               	retlw	156
  1928  0E34  34FF               	retlw	255
  1929  0E35  349C               	retlw	156
  1930  0E36  34FF               	retlw	255
  1931  0E37  349C               	retlw	156
  1932  0E38  34FF               	retlw	255
  1933  0E39  349C               	retlw	156
  1934  0E3A  34FF               	retlw	255
  1935  0E3B  349C               	retlw	156
  1936  0E3C  34FF               	retlw	255
  1937  0E3D  349C               	retlw	156
  1938  0E3E  34FF               	retlw	255
  1939  0E3F  349C               	retlw	156
  1940  0E40  34FF               	retlw	255
  1941  0E41  349C               	retlw	156
  1942  0E42  34FF               	retlw	255
  1943                           
  1944                           	psect	idataBANK8
  1945  0756                     __pidataBANK8:	
  1946                           
  1947                           ;initializer for _B25k
  1948  0756  34FF               	retlw	255
  1949  0757  3400               	retlw	0
  1950  0758  34FF               	retlw	255
  1951  0759  3400               	retlw	0
  1952  075A  34FF               	retlw	255
  1953  075B  3400               	retlw	0
  1954  075C  34DF               	retlw	223
  1955  075D  3400               	retlw	0
  1956  075E  34AE               	retlw	174
  1957  075F  3400               	retlw	0
  1958  0760  348E               	retlw	142
  1959  0761  3400               	retlw	0
  1960  0762  3478               	retlw	120
  1961  0763  3400               	retlw	0
  1962  0764  3467               	retlw	103
  1963  0765  3400               	retlw	0
  1964  0766  345B               	retlw	91
  1965  0767  3400               	retlw	0
  1966  0768  3450               	retlw	80
  1967  0769  3400               	retlw	0
  1968  076A  3448               	retlw	72
  1969  076B  3400               	retlw	0
  1970  076C  3442               	retlw	66
  1971  076D  3400               	retlw	0
  1972  076E  343C               	retlw	60
  1973  076F  3400               	retlw	0
  1974  0770  3437               	retlw	55
  1975  0771  3400               	retlw	0
  1976  0772  3433               	retlw	51
  1977  0773  3400               	retlw	0
  1978  0774  3430               	retlw	48
  1979  0775  3400               	retlw	0
  1980  0776  342D               	retlw	45
  1981  0777  3400               	retlw	0
  1982  0778  342A               	retlw	42
  1983  0779  3400               	retlw	0
  1984  077A  3427               	retlw	39
  1985  077B  3400               	retlw	0
  1986  077C  3425               	retlw	37
  1987  077D  3400               	retlw	0
  1988  077E  3423               	retlw	35
  1989  077F  3400               	retlw	0
  1990  0780  3421               	retlw	33
  1991  0781  3400               	retlw	0
  1992  0782  3420               	retlw	32
  1993  0783  3400               	retlw	0
  1994  0784  341E               	retlw	30
  1995  0785  3400               	retlw	0
  1996  0786  341D               	retlw	29
  1997  0787  3400               	retlw	0
  1998  0788  341C               	retlw	28
  1999  0789  3400               	retlw	0
  2000  078A  341B               	retlw	27
  2001  078B  3400               	retlw	0
  2002  078C  341A               	retlw	26
  2003  078D  3400               	retlw	0
  2004  078E  3419               	retlw	25
  2005  078F  3400               	retlw	0
  2006  0790  3418               	retlw	24
  2007  0791  3400               	retlw	0
  2008  0792  3417               	retlw	23
  2009  0793  3400               	retlw	0
  2010  0794  3416               	retlw	22
  2011  0795  3400               	retlw	0
  2012  0796  3415               	retlw	21
  2013  0797  3400               	retlw	0
  2014  0798  3415               	retlw	21
  2015  0799  3400               	retlw	0
  2016  079A  3414               	retlw	20
  2017  079B  3400               	retlw	0
  2018  079C  3413               	retlw	19
  2019  079D  3400               	retlw	0
  2020  079E  340F               	retlw	15
  2021  079F  3400               	retlw	0
  2022  07A0  340B               	retlw	11
  2023  07A1  3400               	retlw	0
  2024  07A2  3407               	retlw	7
  2025  07A3  3400               	retlw	0
  2026  07A4  3407               	retlw	7
  2027  07A5  3400               	retlw	0
  2028                           
  2029                           	psect	idataBANK9
  2030  07A6                     __pidataBANK9:	
  2031                           
  2032                           ;initializer for _iB25k
  2033  07A6  3407               	retlw	7
  2034  07A7  3400               	retlw	0
  2035  07A8  3407               	retlw	7
  2036  07A9  3400               	retlw	0
  2037  07AA  340B               	retlw	11
  2038  07AB  3400               	retlw	0
  2039  07AC  340F               	retlw	15
  2040  07AD  3400               	retlw	0
  2041  07AE  3413               	retlw	19
  2042  07AF  3400               	retlw	0
  2043  07B0  3414               	retlw	20
  2044  07B1  3400               	retlw	0
  2045  07B2  3415               	retlw	21
  2046  07B3  3400               	retlw	0
  2047  07B4  3415               	retlw	21
  2048  07B5  3400               	retlw	0
  2049  07B6  3416               	retlw	22
  2050  07B7  3400               	retlw	0
  2051  07B8  3417               	retlw	23
  2052  07B9  3400               	retlw	0
  2053  07BA  3418               	retlw	24
  2054  07BB  3400               	retlw	0
  2055  07BC  3419               	retlw	25
  2056  07BD  3400               	retlw	0
  2057  07BE  341A               	retlw	26
  2058  07BF  3400               	retlw	0
  2059  07C0  341B               	retlw	27
  2060  07C1  3400               	retlw	0
  2061  07C2  341C               	retlw	28
  2062  07C3  3400               	retlw	0
  2063  07C4  341D               	retlw	29
  2064  07C5  3400               	retlw	0
  2065  07C6  341E               	retlw	30
  2066  07C7  3400               	retlw	0
  2067  07C8  3420               	retlw	32
  2068  07C9  3400               	retlw	0
  2069  07CA  3421               	retlw	33
  2070  07CB  3400               	retlw	0
  2071  07CC  3423               	retlw	35
  2072  07CD  3400               	retlw	0
  2073  07CE  3425               	retlw	37
  2074  07CF  3400               	retlw	0
  2075  07D0  3427               	retlw	39
  2076  07D1  3400               	retlw	0
  2077  07D2  342A               	retlw	42
  2078  07D3  3400               	retlw	0
  2079  07D4  342D               	retlw	45
  2080  07D5  3400               	retlw	0
  2081  07D6  3430               	retlw	48
  2082  07D7  3400               	retlw	0
  2083  07D8  3433               	retlw	51
  2084  07D9  3400               	retlw	0
  2085  07DA  3437               	retlw	55
  2086  07DB  3400               	retlw	0
  2087  07DC  343C               	retlw	60
  2088  07DD  3400               	retlw	0
  2089  07DE  3442               	retlw	66
  2090  07DF  3400               	retlw	0
  2091  07E0  3448               	retlw	72
  2092  07E1  3400               	retlw	0
  2093  07E2  3450               	retlw	80
  2094  07E3  3400               	retlw	0
  2095  07E4  345B               	retlw	91
  2096  07E5  3400               	retlw	0
  2097  07E6  3467               	retlw	103
  2098  07E7  3400               	retlw	0
  2099  07E8  3478               	retlw	120
  2100  07E9  3400               	retlw	0
  2101  07EA  348E               	retlw	142
  2102  07EB  3400               	retlw	0
  2103  07EC  34AE               	retlw	174
  2104  07ED  3400               	retlw	0
  2105  07EE  34DF               	retlw	223
  2106  07EF  3400               	retlw	0
  2107  07F0  34FF               	retlw	255
  2108  07F1  3400               	retlw	0
  2109  07F2  34FF               	retlw	255
  2110  07F3  3400               	retlw	0
  2111  07F4  34FF               	retlw	255
  2112  07F5  3400               	retlw	0
  2113                           
  2114                           	psect	idataBIGRAM
  2115  019B                     __pidataBIGRAM:	
  2116                           
  2117                           ;initializer for _delay
  2118  019B  3422               	retlw	34
  2119  019C  3408               	retlw	8
  2120  019D  34FC               	retlw	252
  2121  019E  3407               	retlw	7
  2122  019F  34D8               	retlw	216
  2123  01A0  3407               	retlw	7
  2124  01A1  34B5               	retlw	181
  2125  01A2  3407               	retlw	7
  2126  01A3  3493               	retlw	147
  2127  01A4  3407               	retlw	7
  2128  01A5  3472               	retlw	114
  2129  01A6  3407               	retlw	7
  2130  01A7  3452               	retlw	82
  2131  01A8  3407               	retlw	7
  2132  01A9  3434               	retlw	52
  2133  01AA  3407               	retlw	7
  2134  01AB  3416               	retlw	22
  2135  01AC  3407               	retlw	7
  2136  01AD  34F9               	retlw	249
  2137  01AE  3406               	retlw	6
  2138  01AF  34DD               	retlw	221
  2139  01B0  3406               	retlw	6
  2140  01B1  34C2               	retlw	194
  2141  01B2  3406               	retlw	6
  2142  01B3  34A8               	retlw	168
  2143  01B4  3406               	retlw	6
  2144  01B5  348F               	retlw	143
  2145  01B6  3406               	retlw	6
  2146  01B7  3476               	retlw	118
  2147  01B8  3406               	retlw	6
  2148  01B9  345E               	retlw	94
  2149  01BA  3406               	retlw	6
  2150  01BB  3447               	retlw	71
  2151  01BC  3406               	retlw	6
  2152  01BD  3430               	retlw	48
  2153  01BE  3406               	retlw	6
  2154  01BF  341A               	retlw	26
  2155  01C0  3406               	retlw	6
  2156  01C1  3405               	retlw	5
  2157  01C2  3406               	retlw	6
  2158  01C3  34F0               	retlw	240
  2159  01C4  3405               	retlw	5
  2160  01C5  34DC               	retlw	220
  2161  01C6  3405               	retlw	5
  2162  01C7  34C8               	retlw	200
  2163  01C8  3405               	retlw	5
  2164  01C9  34B5               	retlw	181
  2165  01CA  3405               	retlw	5
  2166  01CB  34A3               	retlw	163
  2167  01CC  3405               	retlw	5
  2168  01CD  3490               	retlw	144
  2169  01CE  3405               	retlw	5
  2170  01CF  347F               	retlw	127
  2171  01D0  3405               	retlw	5
  2172  01D1  346D               	retlw	109
  2173  01D2  3405               	retlw	5
  2174  01D3  345C               	retlw	92
  2175  01D4  3405               	retlw	5
  2176  01D5  344C               	retlw	76
  2177  01D6  3405               	retlw	5
  2178  01D7  343C               	retlw	60
  2179  01D8  3405               	retlw	5
  2180  01D9  342C               	retlw	44
  2181  01DA  3405               	retlw	5
  2182  01DB  341D               	retlw	29
  2183  01DC  3405               	retlw	5
  2184  01DD  340E               	retlw	14
  2185  01DE  3405               	retlw	5
  2186  01DF  34FF               	retlw	255
  2187  01E0  3404               	retlw	4
  2188  01E1  34F1               	retlw	241
  2189  01E2  3404               	retlw	4
  2190  01E3  34E2               	retlw	226
  2191  01E4  3404               	retlw	4
  2192  01E5  34D5               	retlw	213
  2193  01E6  3404               	retlw	4
  2194  01E7  34C7               	retlw	199
  2195  01E8  3404               	retlw	4
  2196  01E9  34BA               	retlw	186
  2197  01EA  3404               	retlw	4
  2198  01EB  34AD               	retlw	173
  2199  01EC  3404               	retlw	4
  2200  01ED  34A1               	retlw	161
  2201  01EE  3404               	retlw	4
  2202  01EF  3494               	retlw	148
  2203  01F0  3404               	retlw	4
  2204  01F1  3488               	retlw	136
  2205  01F2  3404               	retlw	4
  2206  01F3  347D               	retlw	125
  2207  01F4  3404               	retlw	4
  2208  01F5  3471               	retlw	113
  2209  01F6  3404               	retlw	4
  2210  01F7  3466               	retlw	102
  2211  01F8  3404               	retlw	4
  2212  01F9  345A               	retlw	90
  2213  01FA  3404               	retlw	4
  2214  01FB  3450               	retlw	80
  2215  01FC  3404               	retlw	4
  2216  01FD  3445               	retlw	69
  2217  01FE  3404               	retlw	4
  2218  01FF  343A               	retlw	58
  2219  0200  3404               	retlw	4
  2220  0201  3430               	retlw	48
  2221  0202  3404               	retlw	4
  2222  0203  3426               	retlw	38
  2223  0204  3404               	retlw	4
  2224  0205  341C               	retlw	28
  2225  0206  3404               	retlw	4
  2226  0207  3412               	retlw	18
  2227  0208  3404               	retlw	4
  2228  0209  3409               	retlw	9
  2229  020A  3404               	retlw	4
  2230  020B  34FF               	retlw	255
  2231  020C  3403               	retlw	3
  2232  020D  34F6               	retlw	246
  2233  020E  3403               	retlw	3
  2234  020F  34ED               	retlw	237
  2235  0210  3403               	retlw	3
  2236  0211  34E4               	retlw	228
  2237  0212  3403               	retlw	3
  2238  0213  34DC               	retlw	220
  2239  0214  3403               	retlw	3
  2240  0215  34D3               	retlw	211
  2241  0216  3403               	retlw	3
  2242  0217  34CB               	retlw	203
  2243  0218  3403               	retlw	3
  2244  0219  34C2               	retlw	194
  2245  021A  3403               	retlw	3
  2246  021B  34BA               	retlw	186
  2247  021C  3403               	retlw	3
  2248  021D  34B2               	retlw	178
  2249  021E  3403               	retlw	3
  2250  021F  34AA               	retlw	170
  2251  0220  3403               	retlw	3
  2252  0221  34A2               	retlw	162
  2253  0222  3403               	retlw	3
  2254  0223  349B               	retlw	155
  2255  0224  3403               	retlw	3
  2256  0225  3493               	retlw	147
  2257  0226  3403               	retlw	3
  2258  0227  348C               	retlw	140
  2259  0228  3403               	retlw	3
  2260  0229  3485               	retlw	133
  2261  022A  3403               	retlw	3
  2262  022B  347E               	retlw	126
  2263  022C  3403               	retlw	3
  2264  022D  3477               	retlw	119
  2265  022E  3403               	retlw	3
  2266  022F  3470               	retlw	112
  2267  0230  3403               	retlw	3
  2268  0231  3469               	retlw	105
  2269  0232  3403               	retlw	3
  2270  0233  3462               	retlw	98
  2271  0234  3403               	retlw	3
  2272  0235  345C               	retlw	92
  2273  0236  3403               	retlw	3
  2274  0237  3455               	retlw	85
  2275  0238  3403               	retlw	3
  2276  0239  344F               	retlw	79
  2277  023A  3403               	retlw	3
  2278  023B  3448               	retlw	72
  2279  023C  3403               	retlw	3
  2280  023D  3442               	retlw	66
  2281  023E  3403               	retlw	3
  2282  023F  343C               	retlw	60
  2283  0240  3403               	retlw	3
  2284  0241  3436               	retlw	54
  2285  0242  3403               	retlw	3
  2286  0243  3430               	retlw	48
  2287  0244  3403               	retlw	3
  2288  0245  342A               	retlw	42
  2289  0246  3403               	retlw	3
  2290  0247  3424               	retlw	36
  2291  0248  3403               	retlw	3
  2292  0249  341F               	retlw	31
  2293  024A  3403               	retlw	3
  2294  024B  3419               	retlw	25
  2295  024C  3403               	retlw	3
  2296  024D  3413               	retlw	19
  2297  024E  3403               	retlw	3
  2298  024F  340E               	retlw	14
  2299  0250  3403               	retlw	3
  2300  0251  3409               	retlw	9
  2301  0252  3403               	retlw	3
  2302  0253  3403               	retlw	3
  2303  0254  3403               	retlw	3
  2304  0255  34FE               	retlw	254
  2305  0256  3402               	retlw	2
  2306  0257  34F9               	retlw	249
  2307  0258  3402               	retlw	2
  2308  0259  34F4               	retlw	244
  2309  025A  3402               	retlw	2
  2310  025B  34EF               	retlw	239
  2311  025C  3402               	retlw	2
  2312  025D  34EA               	retlw	234
  2313  025E  3402               	retlw	2
  2314  025F  34E5               	retlw	229
  2315  0260  3402               	retlw	2
  2316  0261  34E0               	retlw	224
  2317  0262  3402               	retlw	2
  2318  0263  34DB               	retlw	219
  2319  0264  3402               	retlw	2
  2320  0265  34D7               	retlw	215
  2321  0266  3402               	retlw	2
  2322  0267  34D2               	retlw	210
  2323  0268  3402               	retlw	2
  2324  0269  34CD               	retlw	205
  2325  026A  3402               	retlw	2
  2326  026B  34C9               	retlw	201
  2327  026C  3402               	retlw	2
  2328  026D  34C4               	retlw	196
  2329  026E  3402               	retlw	2
  2330  026F  34C0               	retlw	192
  2331  0270  3402               	retlw	2
  2332  0271  34BC               	retlw	188
  2333  0272  3402               	retlw	2
  2334  0273  34B7               	retlw	183
  2335  0274  3402               	retlw	2
  2336  0275  34B3               	retlw	179
  2337  0276  3402               	retlw	2
  2338  0277  34AF               	retlw	175
  2339  0278  3402               	retlw	2
  2340  0279  34AB               	retlw	171
  2341  027A  3402               	retlw	2
  2342  027B  34A6               	retlw	166
  2343  027C  3402               	retlw	2
  2344  027D  34A2               	retlw	162
  2345  027E  3402               	retlw	2
  2346  027F  349E               	retlw	158
  2347  0280  3402               	retlw	2
  2348  0281  349A               	retlw	154
  2349  0282  3402               	retlw	2
  2350  0283  3497               	retlw	151
  2351  0284  3402               	retlw	2
  2352  0285  3493               	retlw	147
  2353  0286  3402               	retlw	2
  2354  0287  348F               	retlw	143
  2355  0288  3402               	retlw	2
  2356  0289  348B               	retlw	139
  2357  028A  3402               	retlw	2
  2358  028B  3487               	retlw	135
  2359  028C  3402               	retlw	2
  2360  028D  3484               	retlw	132
  2361  028E  3402               	retlw	2
  2362  028F  3480               	retlw	128
  2363  0290  3402               	retlw	2
  2364  0291  347C               	retlw	124
  2365  0292  3402               	retlw	2
  2366  0293  3479               	retlw	121
  2367  0294  3402               	retlw	2
  2368  0295  3475               	retlw	117
  2369  0296  3402               	retlw	2
  2370  0297  3472               	retlw	114
  2371  0298  3402               	retlw	2
  2372  0299  346E               	retlw	110
  2373  029A  3402               	retlw	2
  2374  029B  346B               	retlw	107
  2375  029C  3402               	retlw	2
  2376  029D  3467               	retlw	103
  2377  029E  3402               	retlw	2
  2378  029F  3464               	retlw	100
  2379  02A0  3402               	retlw	2
  2380  02A1  3461               	retlw	97
  2381  02A2  3402               	retlw	2
  2382  02A3  345E               	retlw	94
  2383  02A4  3402               	retlw	2
  2384  02A5  345A               	retlw	90
  2385  02A6  3402               	retlw	2
  2386  02A7  3457               	retlw	87
  2387  02A8  3402               	retlw	2
  2388  02A9  3454               	retlw	84
  2389  02AA  3402               	retlw	2
  2390  02AB  3451               	retlw	81
  2391  02AC  3402               	retlw	2
  2392  02AD  344E               	retlw	78
  2393  02AE  3402               	retlw	2
  2394  02AF  344B               	retlw	75
  2395  02B0  3402               	retlw	2
  2396  02B1  3448               	retlw	72
  2397  02B2  3402               	retlw	2
  2398  02B3  3445               	retlw	69
  2399  02B4  3402               	retlw	2
  2400  02B5  3442               	retlw	66
  2401  02B6  3402               	retlw	2
  2402  02B7  343F               	retlw	63
  2403  02B8  3402               	retlw	2
  2404  02B9  343C               	retlw	60
  2405  02BA  3402               	retlw	2
  2406  02BB  3439               	retlw	57
  2407  02BC  3402               	retlw	2
  2408  02BD  3436               	retlw	54
  2409  02BE  3402               	retlw	2
  2410  02BF  3433               	retlw	51
  2411  02C0  3402               	retlw	2
  2412  02C1  3430               	retlw	48
  2413  02C2  3402               	retlw	2
  2414  02C3  342E               	retlw	46
  2415  02C4  3402               	retlw	2
  2416  02C5  342B               	retlw	43
  2417  02C6  3402               	retlw	2
  2418  02C7  3428               	retlw	40
  2419  02C8  3402               	retlw	2
  2420  02C9  3425               	retlw	37
  2421  02CA  3402               	retlw	2
  2422  02CB  3423               	retlw	35
  2423  02CC  3402               	retlw	2
  2424  02CD  3420               	retlw	32
  2425  02CE  3402               	retlw	2
  2426  02CF  341E               	retlw	30
  2427  02D0  3402               	retlw	2
  2428  02D1  341B               	retlw	27
  2429  02D2  3402               	retlw	2
  2430  02D3  3418               	retlw	24
  2431  02D4  3402               	retlw	2
  2432  02D5  3416               	retlw	22
  2433  02D6  3402               	retlw	2
  2434  02D7  3413               	retlw	19
  2435  02D8  3402               	retlw	2
  2436  02D9  3411               	retlw	17
  2437  02DA  3402               	retlw	2
  2438  02DB  340E               	retlw	14
  2439  02DC  3402               	retlw	2
  2440  02DD  340C               	retlw	12
  2441  02DE  3402               	retlw	2
  2442  02DF  340A               	retlw	10
  2443  02E0  3402               	retlw	2
  2444  02E1  3407               	retlw	7
  2445  02E2  3402               	retlw	2
  2446  02E3  3405               	retlw	5
  2447  02E4  3402               	retlw	2
  2448  02E5  3402               	retlw	2
  2449  02E6  3402               	retlw	2
  2450  02E7  3400               	retlw	0
  2451  02E8  3402               	retlw	2
  2452  02E9  34FE               	retlw	254
  2453  02EA  3401               	retlw	1
  2454  02EB  34FB               	retlw	251
  2455  02EC  3401               	retlw	1
  2456  02ED  34F9               	retlw	249
  2457  02EE  3401               	retlw	1
  2458  02EF  34F7               	retlw	247
  2459  02F0  3401               	retlw	1
  2460  02F1  34F5               	retlw	245
  2461  02F2  3401               	retlw	1
  2462  02F3  34F2               	retlw	242
  2463  02F4  3401               	retlw	1
  2464  02F5  34F0               	retlw	240
  2465  02F6  3401               	retlw	1
  2466  02F7  34EE               	retlw	238
  2467  02F8  3401               	retlw	1
  2468  02F9  34EC               	retlw	236
  2469  02FA  3401               	retlw	1
  2470  02FB  34EA               	retlw	234
  2471  02FC  3401               	retlw	1
  2472  02FD  34E8               	retlw	232
  2473  02FE  3401               	retlw	1
  2474  02FF  34E6               	retlw	230
  2475  0300  3401               	retlw	1
  2476  0301  34E3               	retlw	227
  2477  0302  3401               	retlw	1
  2478  0303  34E1               	retlw	225
  2479  0304  3401               	retlw	1
  2480  0305  34DF               	retlw	223
  2481  0306  3401               	retlw	1
  2482  0307  34DD               	retlw	221
  2483  0308  3401               	retlw	1
  2484  0309  34DB               	retlw	219
  2485  030A  3401               	retlw	1
  2486  030B  34D9               	retlw	217
  2487  030C  3401               	retlw	1
  2488  030D  34D7               	retlw	215
  2489  030E  3401               	retlw	1
  2490  030F  34D5               	retlw	213
  2491  0310  3401               	retlw	1
  2492  0311  34D3               	retlw	211
  2493  0312  3401               	retlw	1
  2494  0313  34D2               	retlw	210
  2495  0314  3401               	retlw	1
  2496  0315  34D0               	retlw	208
  2497  0316  3401               	retlw	1
  2498  0317  34CE               	retlw	206
  2499  0318  3401               	retlw	1
  2500  0319  34CC               	retlw	204
  2501  031A  3401               	retlw	1
  2502  031B  34CA               	retlw	202
  2503  031C  3401               	retlw	1
  2504  031D  34C8               	retlw	200
  2505  031E  3401               	retlw	1
  2506  031F  34C6               	retlw	198
  2507  0320  3401               	retlw	1
  2508  0321  34C4               	retlw	196
  2509  0322  3401               	retlw	1
  2510  0323  34C3               	retlw	195
  2511  0324  3401               	retlw	1
  2512  0325  34C1               	retlw	193
  2513  0326  3401               	retlw	1
  2514  0327  34BF               	retlw	191
  2515  0328  3401               	retlw	1
  2516  0329  34BD               	retlw	189
  2517  032A  3401               	retlw	1
  2518  032B  34BC               	retlw	188
  2519  032C  3401               	retlw	1
  2520  032D  34BA               	retlw	186
  2521  032E  3401               	retlw	1
  2522  032F  34B8               	retlw	184
  2523  0330  3401               	retlw	1
  2524  0331  34B6               	retlw	182
  2525  0332  3401               	retlw	1
  2526  0333  34B5               	retlw	181
  2527  0334  3401               	retlw	1
  2528  0335  34B3               	retlw	179
  2529  0336  3401               	retlw	1
  2530  0337  34B1               	retlw	177
  2531  0338  3401               	retlw	1
  2532  0339  34B0               	retlw	176
  2533  033A  3401               	retlw	1
  2534  033B  34AE               	retlw	174
  2535  033C  3401               	retlw	1
  2536  033D  34AC               	retlw	172
  2537  033E  3401               	retlw	1
  2538  033F  34AB               	retlw	171
  2539  0340  3401               	retlw	1
  2540  0341  34A9               	retlw	169
  2541  0342  3401               	retlw	1
  2542  0343  34A8               	retlw	168
  2543  0344  3401               	retlw	1
  2544  0345  34A6               	retlw	166
  2545  0346  3401               	retlw	1
  2546  0347  34A4               	retlw	164
  2547  0348  3401               	retlw	1
  2548  0349  34A3               	retlw	163
  2549  034A  3401               	retlw	1
  2550  034B  34A1               	retlw	161
  2551  034C  3401               	retlw	1
  2552  034D  34A0               	retlw	160
  2553  034E  3401               	retlw	1
  2554  034F  349E               	retlw	158
  2555  0350  3401               	retlw	1
  2556  0351  349D               	retlw	157
  2557  0352  3401               	retlw	1
  2558  0353  349B               	retlw	155
  2559  0354  3401               	retlw	1
  2560  0355  349A               	retlw	154
  2561  0356  3401               	retlw	1
  2562  0357  3498               	retlw	152
  2563  0358  3401               	retlw	1
  2564  0359  3497               	retlw	151
  2565  035A  3401               	retlw	1
  2566  035B  3495               	retlw	149
  2567  035C  3401               	retlw	1
  2568  035D  3494               	retlw	148
  2569  035E  3401               	retlw	1
  2570  035F  3492               	retlw	146
  2571  0360  3401               	retlw	1
  2572  0361  3491               	retlw	145
  2573  0362  3401               	retlw	1
  2574  0363  3490               	retlw	144
  2575  0364  3401               	retlw	1
  2576  0365  348E               	retlw	142
  2577  0366  3401               	retlw	1
  2578  0367  348D               	retlw	141
  2579  0368  3401               	retlw	1
  2580  0369  348B               	retlw	139
  2581  036A  3401               	retlw	1
  2582  036B  348A               	retlw	138
  2583  036C  3401               	retlw	1
  2584  036D  3489               	retlw	137
  2585  036E  3401               	retlw	1
  2586  036F  3487               	retlw	135
  2587  0370  3401               	retlw	1
  2588  0371  3486               	retlw	134
  2589  0372  3401               	retlw	1
  2590  0373  3485               	retlw	133
  2591  0374  3401               	retlw	1
  2592  0375  3483               	retlw	131
  2593  0376  3401               	retlw	1
  2594  0377  3482               	retlw	130
  2595  0378  3401               	retlw	1
  2596  0379  3481               	retlw	129
  2597  037A  3401               	retlw	1
  2598  037B  347F               	retlw	127
  2599  037C  3401               	retlw	1
  2600  037D  347E               	retlw	126
  2601  037E  3401               	retlw	1
  2602  037F  347D               	retlw	125
  2603  0380  3401               	retlw	1
  2604  0381  347B               	retlw	123
  2605  0382  3401               	retlw	1
  2606  0383  347A               	retlw	122
  2607  0384  3401               	retlw	1
  2608  0385  3479               	retlw	121
  2609  0386  3401               	retlw	1
  2610  0387  3478               	retlw	120
  2611  0388  3401               	retlw	1
  2612  0389  3476               	retlw	118
  2613  038A  3401               	retlw	1
  2614  038B  3475               	retlw	117
  2615  038C  3401               	retlw	1
  2616  038D  3474               	retlw	116
  2617  038E  3401               	retlw	1
  2618  038F  3473               	retlw	115
  2619  0390  3401               	retlw	1
  2620  0391  3471               	retlw	113
  2621  0392  3401               	retlw	1
  2622  0393  3470               	retlw	112
  2623  0394  3401               	retlw	1
  2624  0395  346F               	retlw	111
  2625  0396  3401               	retlw	1
  2626  0397  346E               	retlw	110
  2627  0398  3401               	retlw	1
  2628                           
  2629                           ;initializer for _mod5
  2630  0399  3400               	retlw	0
  2631  039A  3400               	retlw	0
  2632  039B  340A               	retlw	10
  2633  039C  3400               	retlw	0
  2634  039D  3414               	retlw	20
  2635  039E  3400               	retlw	0
  2636  039F  341E               	retlw	30
  2637  03A0  3400               	retlw	0
  2638  03A1  3428               	retlw	40
  2639  03A2  3400               	retlw	0
  2640  03A3  3432               	retlw	50
  2641  03A4  3400               	retlw	0
  2642  03A5  343A               	retlw	58
  2643  03A6  3400               	retlw	0
  2644  03A7  3442               	retlw	66
  2645  03A8  3400               	retlw	0
  2646  03A9  344A               	retlw	74
  2647  03AA  3400               	retlw	0
  2648  03AB  3450               	retlw	80
  2649  03AC  3400               	retlw	0
  2650  03AD  3456               	retlw	86
  2651  03AE  3400               	retlw	0
  2652  03AF  345B               	retlw	91
  2653  03B0  3400               	retlw	0
  2654  03B1  345F               	retlw	95
  2655  03B2  3400               	retlw	0
  2656  03B3  3461               	retlw	97
  2657  03B4  3400               	retlw	0
  2658  03B5  3463               	retlw	99
  2659  03B6  3400               	retlw	0
  2660  03B7  3464               	retlw	100
  2661  03B8  3400               	retlw	0
  2662  03B9  3463               	retlw	99
  2663  03BA  3400               	retlw	0
  2664  03BB  3461               	retlw	97
  2665  03BC  3400               	retlw	0
  2666  03BD  345F               	retlw	95
  2667  03BE  3400               	retlw	0
  2668  03BF  345B               	retlw	91
  2669  03C0  3400               	retlw	0
  2670  03C1  3456               	retlw	86
  2671  03C2  3400               	retlw	0
  2672  03C3  3450               	retlw	80
  2673  03C4  3400               	retlw	0
  2674  03C5  344A               	retlw	74
  2675  03C6  3400               	retlw	0
  2676  03C7  3442               	retlw	66
  2677  03C8  3400               	retlw	0
  2678  03C9  343A               	retlw	58
  2679  03CA  3400               	retlw	0
  2680  03CB  3432               	retlw	50
  2681  03CC  3400               	retlw	0
  2682  03CD  3428               	retlw	40
  2683  03CE  3400               	retlw	0
  2684  03CF  341E               	retlw	30
  2685  03D0  3400               	retlw	0
  2686  03D1  3414               	retlw	20
  2687  03D2  3400               	retlw	0
  2688  03D3  340A               	retlw	10
  2689  03D4  3400               	retlw	0
  2690  03D5  3400               	retlw	0
  2691  03D6  3400               	retlw	0
  2692  03D7  34F6               	retlw	246
  2693  03D8  34FF               	retlw	255
  2694  03D9  34EC               	retlw	236
  2695  03DA  34FF               	retlw	255
  2696  03DB  34E2               	retlw	226
  2697  03DC  34FF               	retlw	255
  2698  03DD  34D8               	retlw	216
  2699  03DE  34FF               	retlw	255
  2700  03DF  34CE               	retlw	206
  2701  03E0  34FF               	retlw	255
  2702  03E1  34C6               	retlw	198
  2703  03E2  34FF               	retlw	255
  2704  03E3  34BE               	retlw	190
  2705  03E4  34FF               	retlw	255
  2706  03E5  34B6               	retlw	182
  2707  03E6  34FF               	retlw	255
  2708  03E7  34B0               	retlw	176
  2709  03E8  34FF               	retlw	255
  2710  03E9  34AA               	retlw	170
  2711  03EA  34FF               	retlw	255
  2712  03EB  34A5               	retlw	165
  2713  03EC  34FF               	retlw	255
  2714  03ED  34A1               	retlw	161
  2715  03EE  34FF               	retlw	255
  2716  03EF  349F               	retlw	159
  2717  03F0  34FF               	retlw	255
  2718  03F1  349D               	retlw	157
  2719  03F2  34FF               	retlw	255
  2720  03F3  349C               	retlw	156
  2721  03F4  34FF               	retlw	255
  2722  03F5  349D               	retlw	157
  2723  03F6  34FF               	retlw	255
  2724  03F7  349F               	retlw	159
  2725  03F8  34FF               	retlw	255
  2726  03F9  34A1               	retlw	161
  2727  03FA  34FF               	retlw	255
  2728  03FB  34A5               	retlw	165
  2729  03FC  34FF               	retlw	255
  2730  03FD  34AA               	retlw	170
  2731  03FE  34FF               	retlw	255
  2732  03FF  34B0               	retlw	176
  2733  0400  34FF               	retlw	255
  2734  0401  34B6               	retlw	182
  2735  0402  34FF               	retlw	255
  2736  0403  34BE               	retlw	190
  2737  0404  34FF               	retlw	255
  2738  0405  34C6               	retlw	198
  2739  0406  34FF               	retlw	255
  2740  0407  34CE               	retlw	206
  2741  0408  34FF               	retlw	255
  2742  0409  34D8               	retlw	216
  2743  040A  34FF               	retlw	255
  2744  040B  34E2               	retlw	226
  2745  040C  34FF               	retlw	255
  2746  040D  34EC               	retlw	236
  2747  040E  34FF               	retlw	255
  2748  040F  34F6               	retlw	246
  2749  0410  34FF               	retlw	255
  2750  0411  3400               	retlw	0
  2751  0412  3400               	retlw	0
  2752                           
  2753                           	psect	stringtext
  2754  1000                     __pstringtext:	
  2755  1000                     _dpowers:	
  2756  1000  3401               	retlw	1
  2757  1001  3400               	retlw	0
  2758  1002  340A               	retlw	10
  2759  1003  3400               	retlw	0
  2760  1004  3464               	retlw	100
  2761  1005  3400               	retlw	0
  2762  1006  34E8               	retlw	232
  2763  1007  3403               	retlw	3
  2764  1008  3410               	retlw	16
  2765  1009  3427               	retlw	39
  2766  100A                     __end_of_dpowers:	
  2767  000B                     _INTCONbits	set	11
  2768  0011                     _PIR1bits	set	17
  2769  000F                     _PORTDbits	set	15
  2770  0010                     _PORTEbits	set	16
  2771  001B                     _PR2	set	27
  2772  001C                     _T2CONbits	set	28
  2773  009D                     _ADCON0bits	set	157
  2774  009E                     _ADCON1bits	set	158
  2775  009C                     _ADRESH	set	156
  2776  009B                     _ADRESL	set	155
  2777  0095                     _OPTION_REGbits	set	149
  2778  0099                     _OSCCONbits	set	153
  2779  008D                     _TRISBbits	set	141
  2780  008E                     _TRISCbits	set	142
  2781  008F                     _TRISDbits	set	143
  2782  0090                     _TRISEbits	set	144
  2783  011D                     _APFCONbits	set	285
  2784  010D                     _LATBbits	set	269
  2785  010F                     _LATDbits	set	271
  2786  0190                     _ANSELEbits	set	400
  2787  0192                     _PMADRH	set	402
  2788  0191                     _PMADRL	set	401
  2789  0195                     _PMCON1bits	set	405
  2790  0196                     _PMCON2	set	406
  2791  0194                     _PMDATH	set	404
  2792  0193                     _PMDATL	set	403
  2793  019D                     _RCSTAbits	set	413
  2794  019A                     _TXREG	set	410
  2795  019E                     _TXSTAbits	set	414
  2796  0291                     _CCPR1	set	657
  2797  0298                     _CCPR2	set	664
  2798  0293                     _CCP1CONbits	set	659
  2799  029A                     _CCP2CONbits	set	666
  2800  029D                     _CCPTMRS0	set	669
  2801  029E                     _CCPTMRS1	set	670
  2802  029F                     _CCPTMRS2	set	671
  2803  0311                     _CCPR3	set	785
  2804  0318                     _CCPR4	set	792
  2805  0313                     _CCP3CONbits	set	787
  2806  031A                     _CCP4CONbits	set	794
  2807  031E                     _CCP5CONbits	set	798
  2808  030C                     _TRISFbits	set	780
  2809  030D                     _TRISGbits	set	781
  2810  038C                     _LATFbits	set	908
  2811  038D                     _LATGbits	set	909
  2812  040C                     _ANSELFbits	set	1036
  2813  061F                     _CCP10CONbits	set	1567
  2814  0613                     _CCP6CONbits	set	1555
  2815  0616                     _CCP7CONbits	set	1558
  2816  0619                     _CCP8CONbits	set	1561
  2817  061C                     _CCP9CONbits	set	1564
  2818  100A                     STR_1:	
  2819  100A  3448               	retlw	72	;'H'
  2820  100B  3465               	retlw	101	;'e'
  2821  100C  346C               	retlw	108	;'l'
  2822  100D  346C               	retlw	108	;'l'
  2823  100E  346F               	retlw	111	;'o'
  2824  100F  3420               	retlw	32	;' '
  2825  1010  3477               	retlw	119	;'w'
  2826  1011  346F               	retlw	111	;'o'
  2827  1012  3472               	retlw	114	;'r'
  2828  1013  346C               	retlw	108	;'l'
  2829  1014  3464               	retlw	100	;'d'
  2830  1015  340A               	retlw	10
  2831  1016  3474               	retlw	116	;'t'
  2832  1017  3465               	retlw	101	;'e'
  2833  1018  3473               	retlw	115	;'s'
  2834  1019  3474               	retlw	116	;'t'
  2835  101A  3420               	retlw	32	;' '
  2836  101B  3476               	retlw	118	;'v'
  2837  101C  3461               	retlw	97	;'a'
  2838  101D  346C               	retlw	108	;'l'
  2839  101E  3475               	retlw	117	;'u'
  2840  101F  3465               	retlw	101	;'e'
  2841  1020  3420               	retlw	32	;' '
  2842  1021  3469               	retlw	105	;'i'
  2843  1022  3473               	retlw	115	;'s'
  2844  1023  3420               	retlw	32	;' '
  2845  1024  3425               	retlw	37	;'%'
  2846  1025  3430               	retlw	48	;'0'
  2847  1026  3434               	retlw	52	;'4'
  2848  1027  3464               	retlw	100	;'d'
  2849  1028  340A               	retlw	10
  2850  1029  3400               	retlw	0
  2851                           
  2852                           ; #config settings
  2853  0000                     
  2854                           	psect	cinit
  2855  00E4                     start_initialization:	
  2856  00E4                     __initialization:		;BIGRAM
  2857                           
  2858                           ; Clear objects allocated to COMMON
  2859  00E4  01F9               	clrf	__pbssCOMMON& (0+127)
  2860  00E5  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2861                           
  2862                           ; Clear objects allocated to BANK0
  2863  00E6  3020               	movlw	low __pbssBANK0
  2864  00E7  0084               	movwf	4
  2865  00E8  3000               	movlw	high __pbssBANK0
  2866  00E9  0085               	movwf	5
  2867  00EA  3022               	movlw	34
  2868  00EB  00FE               	movwf	btemp
  2869  00EC  3000               	movlw	0
  2870  00ED  00FF               	movwf	btemp+1
  2871  00EE  318C  244E  3180   	fcall	clear_ram0
  2872                           
  2873                           ; Clear objects allocated to BANK1
  2874  00F1  30A0               	movlw	low __pbssBANK1
  2875  00F2  0084               	movwf	4
  2876  00F3  3000               	movlw	high __pbssBANK1
  2877  00F4  0085               	movwf	5
  2878  00F5  303C               	movlw	60
  2879  00F6  00FE               	movwf	btemp
  2880  00F7  3000               	movlw	0
  2881  00F8  00FF               	movwf	btemp+1
  2882  00F9  318C  244E  3180   	fcall	clear_ram0
  2883                           
  2884                           ; Clear objects allocated to BANK2
  2885  00FC  3020               	movlw	low __pbssBANK2
  2886  00FD  0084               	movwf	4
  2887  00FE  3001               	movlw	high __pbssBANK2
  2888  00FF  0085               	movwf	5
  2889  0100  3048               	movlw	72
  2890  0101  00FE               	movwf	btemp
  2891  0102  3000               	movlw	0
  2892  0103  00FF               	movwf	btemp+1
  2893  0104  318C  244E  3180   	fcall	clear_ram0
  2894                           
  2895                           ; Clear objects allocated to BANK3
  2896  0107  30A0               	movlw	low __pbssBANK3
  2897  0108  0084               	movwf	4
  2898  0109  3001               	movlw	high __pbssBANK3
  2899  010A  0085               	movwf	5
  2900  010B  3040               	movlw	64
  2901  010C  00FE               	movwf	btemp
  2902  010D  3000               	movlw	0
  2903  010E  00FF               	movwf	btemp+1
  2904  010F  318C  244E  3180   	fcall	clear_ram0
  2905                           
  2906                           ; Initialize objects allocated to BIGRAM
  2907  0112  309B               	movlw	low __pidataBIGRAM
  2908  0113  0084               	movwf	4
  2909  0114  3081               	movlw	(high __pidataBIGRAM)| (0+128)
  2910  0115  0085               	movwf	5
  2911  0116  3078               	movlw	low (0+9080)
  2912  0117  0086               	movwf	6
  2913  0118  3023               	movlw	high (0+9080)
  2914  0119  0087               	movwf	7
  2915  011A  3002               	movlw	2
  2916  011B  00FF               	movwf	btemp+1
  2917  011C  3078               	movlw	120
  2918  011D  318C  2442  3180   	fcall	init_ram
  2919                           
  2920                           ; Initialize objects allocated to COMMON
  2921  0120  3180  2002  3180   	fcall	__pidataCOMMON	;fetch initializer
  2922  0123  00FB               	movwf	__pdataCOMMON& (0+127)
  2923  0124  3180  2003  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2924  0127  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
  2925                           
  2926                           ; Initialize objects allocated to BANK0
  2927  0128  305A               	movlw	low __pidataBANK0
  2928  0129  0084               	movwf	4
  2929  012A  308C               	movlw	(high __pidataBANK0)| (0+128)
  2930  012B  0085               	movwf	5
  2931  012C  3061               	movlw	low __pdataBANK0
  2932  012D  0086               	movwf	6
  2933  012E  3000               	movlw	high __pdataBANK0
  2934  012F  0087               	movwf	7
  2935  0130  3000               	movlw	0
  2936  0131  00FF               	movwf	btemp+1
  2937  0132  300E               	movlw	14
  2938  0133  318C  2442  3180   	fcall	init_ram
  2939                           
  2940                           ; Initialize objects allocated to BANK1
  2941  0136  3077               	movlw	low __pidataBANK1
  2942  0137  0084               	movwf	4
  2943  0138  308C               	movlw	(high __pidataBANK1)| (0+128)
  2944  0139  0085               	movwf	5
  2945  013A  30DC               	movlw	low __pdataBANK1
  2946  013B  0086               	movwf	6
  2947  013C  3000               	movlw	high __pdataBANK1
  2948  013D  0087               	movwf	7
  2949  013E  3000               	movlw	0
  2950  013F  00FF               	movwf	btemp+1
  2951  0140  3012               	movlw	18
  2952  0141  318C  2442  3180   	fcall	init_ram
  2953                           
  2954                           ; Initialize objects allocated to BANK4
  2955  0144  30B7               	movlw	low __pidataBANK4
  2956  0145  0084               	movwf	4
  2957  0146  308E               	movlw	(high __pidataBANK4)| (0+128)
  2958  0147  0085               	movwf	5
  2959  0148  3020               	movlw	low __pdataBANK4
  2960  0149  0086               	movwf	6
  2961  014A  3002               	movlw	high __pdataBANK4
  2962  014B  0087               	movwf	7
  2963  014C  3000               	movlw	0
  2964  014D  00FF               	movwf	btemp+1
  2965  014E  303A               	movlw	58
  2966  014F  318C  2442  3180   	fcall	init_ram
  2967                           
  2968                           ; Initialize objects allocated to BANK5
  2969  0152  307D               	movlw	low __pidataBANK5
  2970  0153  0084               	movwf	4
  2971  0154  308E               	movlw	(high __pidataBANK5)| (0+128)
  2972  0155  0085               	movwf	5
  2973  0156  30A0               	movlw	low __pdataBANK5
  2974  0157  0086               	movwf	6
  2975  0158  3002               	movlw	high __pdataBANK5
  2976  0159  0087               	movwf	7
  2977  015A  3000               	movlw	0
  2978  015B  00FF               	movwf	btemp+1
  2979  015C  303A               	movlw	58
  2980  015D  318C  2442  3180   	fcall	init_ram
  2981                           
  2982                           ; Initialize objects allocated to BANK6
  2983  0160  3043               	movlw	low __pidataBANK6
  2984  0161  0084               	movwf	4
  2985  0162  308E               	movlw	(high __pidataBANK6)| (0+128)
  2986  0163  0085               	movwf	5
  2987  0164  3020               	movlw	low __pdataBANK6
  2988  0165  0086               	movwf	6
  2989  0166  3003               	movlw	high __pdataBANK6
  2990  0167  0087               	movwf	7
  2991  0168  3000               	movlw	0
  2992  0169  00FF               	movwf	btemp+1
  2993  016A  303A               	movlw	58
  2994  016B  318C  2442  3180   	fcall	init_ram
  2995                           
  2996                           ; Initialize objects allocated to BANK7
  2997  016E  3009               	movlw	low __pidataBANK7
  2998  016F  0084               	movwf	4
  2999  0170  308E               	movlw	(high __pidataBANK7)| (0+128)
  3000  0171  0085               	movwf	5
  3001  0172  30A0               	movlw	low __pdataBANK7
  3002  0173  0086               	movwf	6
  3003  0174  3003               	movlw	high __pdataBANK7
  3004  0175  0087               	movwf	7
  3005  0176  3000               	movlw	0
  3006  0177  00FF               	movwf	btemp+1
  3007  0178  303A               	movlw	58
  3008  0179  318C  2442  3180   	fcall	init_ram
  3009                           
  3010                           ; Initialize objects allocated to BANK8
  3011  017C  3056               	movlw	low __pidataBANK8
  3012  017D  0084               	movwf	4
  3013  017E  3087               	movlw	(high __pidataBANK8)| (0+128)
  3014  017F  0085               	movwf	5
  3015  0180  3020               	movlw	low __pdataBANK8
  3016  0181  0086               	movwf	6
  3017  0182  3004               	movlw	high __pdataBANK8
  3018  0183  0087               	movwf	7
  3019  0184  3000               	movlw	0
  3020  0185  00FF               	movwf	btemp+1
  3021  0186  3050               	movlw	80
  3022  0187  318C  2442  3180   	fcall	init_ram
  3023                           
  3024                           ; Initialize objects allocated to BANK9
  3025  018A  30A6               	movlw	low __pidataBANK9
  3026  018B  0084               	movwf	4
  3027  018C  3087               	movlw	(high __pidataBANK9)| (0+128)
  3028  018D  0085               	movwf	5
  3029  018E  30A0               	movlw	low __pdataBANK9
  3030  018F  0086               	movwf	6
  3031  0190  3004               	movlw	high __pdataBANK9
  3032  0191  0087               	movwf	7
  3033  0192  3000               	movlw	0
  3034  0193  00FF               	movwf	btemp+1
  3035  0194  3050               	movlw	80
  3036  0195  318C  2442         	fcall	init_ram
  3037  0197                     end_of_initialization:	
  3038                           ;End of C runtime variable initialization code
  3039                           
  3040  0197                     __end_of__initialization:	
  3041  0197  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3042  0198  0020               	movlb	0
  3043  0199  3184  2C13         	ljmp	_main	;jump to C main() function
  3044                           
  3045                           	psect	bssCOMMON
  3046  0079                     __pbssCOMMON:	
  3047  0079                     _knob_1_pos:	
  3048  0079                     	ds	2
  3049                           
  3050                           	psect	dataCOMMON
  3051  007B                     __pdataCOMMON:	
  3052  007B                     _top_push_state:	
  3053  007B                     	ds	2
  3054                           
  3055                           	psect	bssBANK0
  3056  0020                     __pbssBANK0:	
  3057  0020                     _mod_timer:	
  3058  0020                     	ds	4
  3059  0024                     _sub_timer:	
  3060  0024                     	ds	4
  3061  0028                     _tap_timer:	
  3062  0028                     	ds	4
  3063  002C                     _timer:	
  3064  002C                     	ds	4
  3065  0030                     _bypass_state:	
  3066  0030                     	ds	2
  3067  0032                     _farkelSnuffle:	
  3068  0032                     	ds	2
  3069  0034                     _knob_2_pos:	
  3070  0034                     	ds	2
  3071  0036                     _knob_3_pos:	
  3072  0036                     	ds	2
  3073  0038                     _knob_4_pos:	
  3074  0038                     	ds	2
  3075  003A                     _knob_5_pos:	
  3076  003A                     	ds	2
  3077  003C                     _mod_counter:	
  3078  003C                     	ds	2
  3079  003E                     _mode1_state:	
  3080  003E                     	ds	2
  3081  0040                     _mode2_state:	
  3082  0040                     	ds	2
  3083                           
  3084                           	psect	dataBANK0
  3085  0061                     __pdataBANK0:	
  3086  0061                     _baseline_delay_time:	
  3087  0061                     	ds	4
  3088  0065                     _delay_time:	
  3089  0065                     	ds	4
  3090  0069                     _blink_state:	
  3091  0069                     	ds	2
  3092  006B                     _bottom_push_state:	
  3093  006B                     	ds	2
  3094  006D                     _tap_iteration:	
  3095  006D                     	ds	2
  3096                           
  3097                           	psect	bssBANK1
  3098  00A0                     __pbssBANK1:	
  3099  00A0                     _tap1:	
  3100  00A0                     	ds	4
  3101  00A4                     _tap2:	
  3102  00A4                     	ds	4
  3103  00A8                     _tap3:	
  3104  00A8                     	ds	4
  3105  00AC                     _tap4:	
  3106  00AC                     	ds	4
  3107  00B0                     _tap5:	
  3108  00B0                     	ds	4
  3109  00B4                     _tap6:	
  3110  00B4                     	ds	4
  3111  00B8                     _tap7:	
  3112  00B8                     	ds	4
  3113  00BC                     _tap8:	
  3114  00BC                     	ds	4
  3115  00C0                     _tap9:	
  3116  00C0                     	ds	4
  3117  00C4                     wait_ms@timel:	
  3118  00C4                     	ds	4
  3119  00C8                     _SPI_Value:	
  3120  00C8                     	ds	2
  3121  00CA                     _debounce_bypass:	
  3122  00CA                     	ds	2
  3123  00CC                     _debounce_count:	
  3124  00CC                     	ds	2
  3125  00CE                     _debounce_mode1:	
  3126  00CE                     	ds	2
  3127  00D0                     _debounce_mode2:	
  3128  00D0                     	ds	2
  3129  00D2                     _delay_counter:	
  3130  00D2                     	ds	2
  3131  00D4                     _delayfound:	
  3132  00D4                     	ds	2
  3133  00D6                     _iCnt:	
  3134  00D6                     	ds	2
  3135  00D8                     _mod_value:	
  3136  00D8                     	ds	2
  3137  00DA                     _preset:	
  3138  00DA                     	ds	2
  3139                           
  3140                           	psect	dataBANK1
  3141  00DC                     __pdataBANK1:	
  3142  00DC                     _delay_time_changed:	
  3143  00DC                     	ds	2
  3144  00DE                     _incoming_data:	
  3145  00DE                     	ds	2
  3146  00E0                     _knob1_prev:	
  3147  00E0                     	ds	2
  3148  00E2                     _knob2_prev:	
  3149  00E2                     	ds	2
  3150  00E4                     _knob3_prev:	
  3151  00E4                     	ds	2
  3152  00E6                     _knob4_prev:	
  3153  00E6                     	ds	2
  3154  00E8                     _knob5_prev:	
  3155  00E8                     	ds	2
  3156  00EA                     _mod_delay_time:	
  3157  00EA                     	ds	2
  3158  00EC                     _num_taps:	
  3159  00EC                     	ds	2
  3160                           
  3161                           	psect	bssBANK2
  3162  0120                     __pbssBANK2:	
  3163  0120                     _tap:	
  3164  0120                     	ds	44
  3165  014C                     _tap_history:	
  3166  014C                     	ds	20
  3167  0160                     _tap10:	
  3168  0160                     	ds	4
  3169  0164                     _tap_total:	
  3170  0164                     	ds	4
  3171                           
  3172                           	psect	bssBANK3
  3173  01A0                     __pbssBANK3:	
  3174  01A0                     _myBuf:	
  3175  01A0                     	ds	64
  3176                           
  3177                           	psect	dataBANK4
  3178  0220                     __pdataBANK4:	
  3179  0220                     _mod1:	
  3180  0220                     	ds	58
  3181                           
  3182                           	psect	dataBANK5
  3183  02A0                     __pdataBANK5:	
  3184  02A0                     _mod2:	
  3185  02A0                     	ds	58
  3186                           
  3187                           	psect	dataBANK6
  3188  0320                     __pdataBANK6:	
  3189  0320                     _mod3:	
  3190  0320                     	ds	58
  3191                           
  3192                           	psect	dataBANK7
  3193  03A0                     __pdataBANK7:	
  3194  03A0                     _mod4:	
  3195  03A0                     	ds	58
  3196                           
  3197                           	psect	dataBANK8
  3198  0420                     __pdataBANK8:	
  3199  0420                     _B25k:	
  3200  0420                     	ds	80
  3201                           
  3202                           	psect	dataBANK9
  3203  04A0                     __pdataBANK9:	
  3204  04A0                     _iB25k:	
  3205  04A0                     	ds	80
  3206                           
  3207                           	psect	clrtext
  3208  0C4E                     clear_ram0:	
  3209                           ;	Called with FSR0 containing the base address, and
  3210                           ;	btemp/btemp+1 has the size to clear
  3211                           
  3212  0C4E  0064               	clrwdt	;clear the watchdog before getting into this loop
  3213  0C4F                     clrloop0:	
  3214  0C4F  0180               	clrf	0	;clear RAM location pointed to by FSR
  3215  0C50  3101               	addfsr 0,1
  3216  0C51  3001               	movlw	1
  3217  0C52  02FE               	subwf	126,f
  3218  0C53  3000               	movlw	0
  3219  0C54  3BFF               	subwfb	127,f
  3220  0C55  087F               	movf	127,w
  3221  0C56  047E               	iorwf	126,w
  3222  0C57  1903               	btfsc	3,2
  3223  0C58  3400               	retlw	0	;all done for this memory range, return
  3224  0C59  2C4F               	goto	clrloop0	;have we reached the end yet?
  3225                           
  3226                           	psect	inittext
  3227  0C42                     init_ram:	
  3228  0C42  00FE               	movwf	126
  3229  0C43                     initloop:	
  3230  0C43  0012               	moviw fsr0++
  3231  0C44  001E               	movwi fsr1++
  3232  0C45  3001               	movlw	1
  3233  0C46  02FE               	subwf	126,f
  3234  0C47  3000               	movlw	0
  3235  0C48  3BFF               	subwfb	127,f
  3236  0C49  087F               	movf	127,w
  3237  0C4A  047E               	iorwf	126,w
  3238  0C4B  1903               	btfsc	3,2
  3239  0C4C  3400               	retlw	0
  3240  0C4D  2C43               	goto	initloop
  3241                           
  3242                           	psect	cstackCOMMON
  3243  0070                     __pcstackCOMMON:	
  3244  0070                     ?_isdigit:	
  3245  0070                     ?_init_uart:	
  3246                           ; 1 bit 
  3247                           
  3248  0070                     ?_ConfigureOscillator:	
  3249                           ; 1 bytes @ 0x0
  3250                           
  3251  0070                     ?_InitApp:	
  3252                           ; 1 bytes @ 0x0
  3253                           
  3254  0070                     ?_init_adc:	
  3255                           ; 1 bytes @ 0x0
  3256                           
  3257  0070                     ?_init_pwm:	
  3258                           ; 1 bytes @ 0x0
  3259                           
  3260  0070                     ?_init_timer2:	
  3261                           ; 1 bytes @ 0x0
  3262                           
  3263  0070                     ?_init_timer0:	
  3264                           ; 1 bytes @ 0x0
  3265                           
  3266  0070                     ?_isr:	
  3267                           ; 1 bytes @ 0x0
  3268                           
  3269  0070                     ?_main:	
  3270                           ; 1 bytes @ 0x0
  3271                           
  3272  0070                     ?_putch:	
  3273                           ; 1 bytes @ 0x0
  3274                           
  3275  0070                     ?i1_set_leds_top:	
  3276                           ; 1 bytes @ 0x0
  3277                           
  3278  0070                     i1set_leds_top@x:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281                           
  3282                           ; 2 bytes @ 0x0
  3283  0070                     	ds	2
  3284  0072                     i1set_leds_top@ledState:	
  3285                           
  3286                           ; 2 bytes @ 0x2
  3287  0072                     	ds	2
  3288  0074                     ??_isr:	
  3289  0074                     ??i1_set_leds_top:	
  3290                           ; 1 bytes @ 0x4
  3291                           
  3292                           
  3293                           ; 1 bytes @ 0x4
  3294  0074                     	ds	5
  3295                           
  3296                           	psect	cstackBANK0
  3297  0042                     __pcstackBANK0:	
  3298  0042                     ?_set_leds_top:	
  3299  0042                     ??_init_uart:	
  3300                           ; 1 bytes @ 0x0
  3301                           
  3302  0042                     ??_ConfigureOscillator:	
  3303                           ; 1 bytes @ 0x0
  3304                           
  3305  0042                     ??_InitApp:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308  0042                     ?_set_leds_bottom:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311  0042                     ??_init_adc:	
  3312                           ; 1 bytes @ 0x0
  3313                           
  3314  0042                     ??_init_pwm:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317  0042                     ??_init_timer2:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320  0042                     ??_init_timer0:	
  3321                           ; 1 bytes @ 0x0
  3322                           
  3323  0042                     ?_FLASH_EraseBlock:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326  0042                     ??_isdigit:	
  3327                           ; 1 bytes @ 0x0
  3328                           
  3329  0042                     ??_putch:	
  3330                           ; 1 bytes @ 0x0
  3331                           
  3332  0042                     ?_FLASH_ReadWord:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335  0042                     ?___wmul:	
  3336                           ; 2 bytes @ 0x0
  3337                           
  3338  0042                     ?___lwdiv:	
  3339                           ; 2 bytes @ 0x0
  3340                           
  3341  0042                     ?___lmul:	
  3342                           ; 2 bytes @ 0x0
  3343                           
  3344  0042                     putch@data:	
  3345                           ; 4 bytes @ 0x0
  3346                           
  3347  0042                     _isdigit$1435:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350  0042                     FLASH_ReadWord@flashAddr:	
  3351                           ; 1 bytes @ 0x0
  3352                           
  3353  0042                     FLASH_EraseBlock@startAddr:	
  3354                           ; 2 bytes @ 0x0
  3355                           
  3356  0042                     set_leds_top@x:	
  3357                           ; 2 bytes @ 0x0
  3358                           
  3359  0042                     set_leds_bottom@x:	
  3360                           ; 2 bytes @ 0x0
  3361                           
  3362  0042                     ___wmul@multiplier:	
  3363                           ; 2 bytes @ 0x0
  3364                           
  3365  0042                     ___lwdiv@divisor:	
  3366                           ; 2 bytes @ 0x0
  3367                           
  3368  0042                     ___lmul@multiplier:	
  3369                           ; 2 bytes @ 0x0
  3370                           
  3371                           
  3372                           ; 4 bytes @ 0x0
  3373  0042                     	ds	1
  3374  0043                     isdigit@c:	
  3375                           
  3376                           ; 1 bytes @ 0x1
  3377  0043                     	ds	1
  3378  0044                     ??_FLASH_ReadWord:	
  3379  0044                     ??_set_leds_bottom:	
  3380                           ; 1 bytes @ 0x2
  3381                           
  3382  0044                     ??_FLASH_EraseBlock:	
  3383                           ; 1 bytes @ 0x2
  3384                           
  3385  0044                     FLASH_ReadWord@GIEBitValue:	
  3386                           ; 1 bytes @ 0x2
  3387                           
  3388  0044                     FLASH_EraseBlock@GIEBitValue:	
  3389                           ; 1 bytes @ 0x2
  3390                           
  3391  0044                     set_leds_top@ledState:	
  3392                           ; 1 bytes @ 0x2
  3393                           
  3394  0044                     ___wmul@multiplicand:	
  3395                           ; 2 bytes @ 0x2
  3396                           
  3397  0044                     ___lwdiv@dividend:	
  3398                           ; 2 bytes @ 0x2
  3399                           
  3400                           
  3401                           ; 2 bytes @ 0x2
  3402  0044                     	ds	1
  3403  0045                     ?_FLASH_WriteBlock:	
  3404  0045                     FLASH_WriteBlock@writeAddr:	
  3405                           ; 1 bytes @ 0x3
  3406                           
  3407                           
  3408                           ; 2 bytes @ 0x3
  3409  0045                     	ds	1
  3410  0046                     ??_set_leds_top:	
  3411  0046                     ??___wmul:	
  3412                           ; 1 bytes @ 0x4
  3413                           
  3414  0046                     ??___lwdiv:	
  3415                           ; 1 bytes @ 0x4
  3416                           
  3417  0046                     ___wmul@product:	
  3418                           ; 1 bytes @ 0x4
  3419                           
  3420  0046                     ___lmul@multiplicand:	
  3421                           ; 2 bytes @ 0x4
  3422                           
  3423                           
  3424                           ; 4 bytes @ 0x4
  3425  0046                     	ds	1
  3426  0047                     FLASH_WriteBlock@flashWordArray:	
  3427  0047                     ___lwdiv@quotient:	
  3428                           ; 1 bytes @ 0x5
  3429                           
  3430                           
  3431                           ; 2 bytes @ 0x5
  3432  0047                     	ds	1
  3433  0048                     ??_FLASH_WriteBlock:	
  3434                           
  3435                           ; 1 bytes @ 0x6
  3436  0048                     	ds	1
  3437  0049                     ___lwdiv@counter:	
  3438                           
  3439                           ; 1 bytes @ 0x7
  3440  0049                     	ds	1
  3441  004A                     ??___lmul:	
  3442  004A                     ?___lwmod:	
  3443                           ; 1 bytes @ 0x8
  3444                           
  3445  004A                     ___lwmod@divisor:	
  3446                           ; 2 bytes @ 0x8
  3447                           
  3448  004A                     ___lmul@product:	
  3449                           ; 2 bytes @ 0x8
  3450                           
  3451                           
  3452                           ; 4 bytes @ 0x8
  3453  004A                     	ds	1
  3454  004B                     FLASH_WriteBlock@blockStartAddr:	
  3455                           
  3456                           ; 2 bytes @ 0x9
  3457  004B                     	ds	1
  3458  004C                     ___lwmod@dividend:	
  3459                           
  3460                           ; 2 bytes @ 0xA
  3461  004C                     	ds	1
  3462  004D                     FLASH_WriteBlock@GIEBitValue:	
  3463                           
  3464                           ; 1 bytes @ 0xB
  3465  004D                     	ds	1
  3466  004E                     ?_wait_ms:	
  3467  004E                     ??___lwmod:	
  3468                           ; 1 bytes @ 0xC
  3469                           
  3470  004E                     FLASH_WriteBlock@i:	
  3471                           ; 1 bytes @ 0xC
  3472                           
  3473  004E                     wait_ms@time:	
  3474                           ; 1 bytes @ 0xC
  3475                           
  3476                           
  3477                           ; 2 bytes @ 0xC
  3478  004E                     	ds	1
  3479  004F                     ?_FLASH_WriteWord:	
  3480  004F                     ___lwmod@counter:	
  3481                           ; 1 bytes @ 0xD
  3482                           
  3483  004F                     FLASH_WriteWord@flashAddr:	
  3484                           ; 1 bytes @ 0xD
  3485                           
  3486                           
  3487                           ; 2 bytes @ 0xD
  3488  004F                     	ds	1
  3489  0050                     ??_wait_ms:	
  3490  0050                     ?_printf:	
  3491                           ; 1 bytes @ 0xE
  3492                           
  3493  0050                     printf@f:	
  3494                           ; 2 bytes @ 0xE
  3495                           
  3496                           
  3497                           ; 2 bytes @ 0xE
  3498  0050                     	ds	1
  3499  0051                     FLASH_WriteWord@ramBuf:	
  3500                           
  3501                           ; 1 bytes @ 0xF
  3502  0051                     	ds	1
  3503  0052                     FLASH_WriteWord@word:	
  3504                           
  3505                           ; 2 bytes @ 0x10
  3506  0052                     	ds	2
  3507  0054                     ??_FLASH_WriteWord:	
  3508  0054                     ??_printf:	
  3509                           ; 1 bytes @ 0x12
  3510                           
  3511                           
  3512                           ; 1 bytes @ 0x12
  3513  0054                     	ds	1
  3514  0055                     FLASH_WriteWord@offset:	
  3515                           
  3516                           ; 1 bytes @ 0x13
  3517  0055                     	ds	1
  3518  0056                     FLASH_WriteWord@blockStartAddr:	
  3519                           
  3520                           ; 2 bytes @ 0x14
  3521  0056                     	ds	2
  3522  0058                     FLASH_WriteWord@i:	
  3523  0058                     printf@ap:	
  3524                           ; 1 bytes @ 0x16
  3525                           
  3526                           
  3527                           ; 1 bytes @ 0x16
  3528  0058                     	ds	1
  3529  0059                     printf@prec:	
  3530                           
  3531                           ; 1 bytes @ 0x17
  3532  0059                     	ds	1
  3533  005A                     printf@val:	
  3534                           
  3535                           ; 2 bytes @ 0x18
  3536  005A                     	ds	2
  3537  005C                     printf@flag:	
  3538                           
  3539                           ; 1 bytes @ 0x1A
  3540  005C                     	ds	1
  3541  005D                     printf@width:	
  3542                           
  3543                           ; 2 bytes @ 0x1B
  3544  005D                     	ds	2
  3545  005F                     printf@c:	
  3546                           
  3547                           ; 1 bytes @ 0x1D
  3548  005F                     	ds	1
  3549  0060                     ??_main:	
  3550                           
  3551                           ; 1 bytes @ 0x1E
  3552  0060                     	ds	1
  3553                           
  3554                           	psect	maintext
  3555  0413                     __pmaintext:	
  3556 ;;
  3557 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3558 ;;
  3559 ;; *************** function _main *****************
  3560 ;; Defined at:
  3561 ;;		line 115 in file "main.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : B1F/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3577 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3578 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3579 ;;Total ram usage:        1 bytes
  3580 ;; Hardware stack levels required when called:    5
  3581 ;; This function calls:
  3582 ;;		_ConfigureOscillator
  3583 ;;		_FLASH_ReadWord
  3584 ;;		_FLASH_WriteWord
  3585 ;;		_InitApp
  3586 ;;		_init_uart
  3587 ;;		_printf
  3588 ;;		_set_leds_bottom
  3589 ;;		_set_leds_top
  3590 ;;		_wait_ms
  3591 ;; This function is called by:
  3592 ;;		Startup code after reset
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _main
  3598  0413                     _main:	
  3599                           
  3600                           ;main.c: 116: init_uart();
  3601                           
  3602                           ;incstack = 0
  3603                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3604  0413  318C  2426  3184   	fcall	_init_uart
  3605                           
  3606                           ;main.c: 117: ConfigureOscillator();
  3607  0416  318C  2422  3184   	fcall	_ConfigureOscillator
  3608                           
  3609                           ;main.c: 118: InitApp();
  3610  0419  318D  2512  3184   	fcall	_InitApp
  3611                           
  3612                           ;main.c: 119: tap[0] = 0;
  3613  041C  3000               	movlw	0
  3614  041D  0022               	movlb	2	; select bank2
  3615  041E  00A3               	movwf	(_tap+3)^(0+256)
  3616  041F  3000               	movlw	0
  3617  0420  00A2               	movwf	(_tap+2)^(0+256)
  3618  0421  3000               	movlw	0
  3619  0422  00A1               	movwf	(_tap+1)^(0+256)
  3620  0423  3000               	movlw	0
  3621  0424  00A0               	movwf	_tap^(0+256)
  3622                           
  3623                           ;main.c: 120: tap[1] = 0;
  3624  0425  3000               	movlw	0
  3625  0426  00A7               	movwf	((_tap+3)^(0+256)+4)
  3626  0427  3000               	movlw	0
  3627  0428  00A6               	movwf	((_tap+2)^(0+256)+4)
  3628  0429  3000               	movlw	0
  3629  042A  00A5               	movwf	((_tap+1)^(0+256)+4)
  3630  042B  3000               	movlw	0
  3631  042C  00A4               	movwf	(_tap^(0+256)+4)
  3632                           
  3633                           ;main.c: 121: tap[2] = 0;
  3634  042D  3000               	movlw	0
  3635  042E  00AB               	movwf	((_tap+3)^(0+256)+8)
  3636  042F  3000               	movlw	0
  3637  0430  00AA               	movwf	((_tap+2)^(0+256)+8)
  3638  0431  3000               	movlw	0
  3639  0432  00A9               	movwf	((_tap+1)^(0+256)+8)
  3640  0433  3000               	movlw	0
  3641  0434  00A8               	movwf	(_tap^(0+256)+8)
  3642                           
  3643                           ;main.c: 122: tap[3] = 0;
  3644  0435  3000               	movlw	0
  3645  0436  00AF               	movwf	((_tap+3)^(0+256)+12)
  3646  0437  3000               	movlw	0
  3647  0438  00AE               	movwf	((_tap+2)^(0+256)+12)
  3648  0439  3000               	movlw	0
  3649  043A  00AD               	movwf	((_tap+1)^(0+256)+12)
  3650  043B  3000               	movlw	0
  3651  043C  00AC               	movwf	(_tap^(0+256)+12)
  3652                           
  3653                           ;main.c: 123: tap[4] = 0;
  3654  043D  3000               	movlw	0
  3655  043E  00B3               	movwf	((_tap+3)^(0+256)+16)
  3656  043F  3000               	movlw	0
  3657  0440  00B2               	movwf	((_tap+2)^(0+256)+16)
  3658  0441  3000               	movlw	0
  3659  0442  00B1               	movwf	((_tap+1)^(0+256)+16)
  3660  0443  3000               	movlw	0
  3661  0444  00B0               	movwf	(_tap^(0+256)+16)
  3662                           
  3663                           ;main.c: 124: tap[5] = 0;
  3664  0445  3000               	movlw	0
  3665  0446  00B7               	movwf	((_tap+3)^(0+256)+20)
  3666  0447  3000               	movlw	0
  3667  0448  00B6               	movwf	((_tap+2)^(0+256)+20)
  3668  0449  3000               	movlw	0
  3669  044A  00B5               	movwf	((_tap+1)^(0+256)+20)
  3670  044B  3000               	movlw	0
  3671  044C  00B4               	movwf	(_tap^(0+256)+20)
  3672                           
  3673                           ;main.c: 125: tap[6] = 0;
  3674  044D  3000               	movlw	0
  3675  044E  00BB               	movwf	((_tap+3)^(0+256)+24)
  3676  044F  3000               	movlw	0
  3677  0450  00BA               	movwf	((_tap+2)^(0+256)+24)
  3678  0451  3000               	movlw	0
  3679  0452  00B9               	movwf	((_tap+1)^(0+256)+24)
  3680  0453  3000               	movlw	0
  3681  0454  00B8               	movwf	(_tap^(0+256)+24)
  3682                           
  3683                           ;main.c: 126: tap[7] = 0;
  3684  0455  3000               	movlw	0
  3685  0456  00BF               	movwf	((_tap+3)^(0+256)+28)
  3686  0457  3000               	movlw	0
  3687  0458  00BE               	movwf	((_tap+2)^(0+256)+28)
  3688  0459  3000               	movlw	0
  3689  045A  00BD               	movwf	((_tap+1)^(0+256)+28)
  3690  045B  3000               	movlw	0
  3691  045C  00BC               	movwf	(_tap^(0+256)+28)
  3692                           
  3693                           ;main.c: 127: tap[8] = 0;
  3694  045D  3000               	movlw	0
  3695  045E  00C3               	movwf	((_tap+3)^(0+256)+32)
  3696  045F  3000               	movlw	0
  3697  0460  00C2               	movwf	((_tap+2)^(0+256)+32)
  3698  0461  3000               	movlw	0
  3699  0462  00C1               	movwf	((_tap+1)^(0+256)+32)
  3700  0463  3000               	movlw	0
  3701  0464  00C0               	movwf	(_tap^(0+256)+32)
  3702                           
  3703                           ;main.c: 128: tap[9] = 0;
  3704  0465  3000               	movlw	0
  3705  0466  00C7               	movwf	((_tap+3)^(0+256)+36)
  3706  0467  3000               	movlw	0
  3707  0468  00C6               	movwf	((_tap+2)^(0+256)+36)
  3708  0469  3000               	movlw	0
  3709  046A  00C5               	movwf	((_tap+1)^(0+256)+36)
  3710  046B  3000               	movlw	0
  3711  046C  00C4               	movwf	(_tap^(0+256)+36)
  3712                           
  3713                           ;main.c: 129: tap[10] = 0;
  3714  046D  3000               	movlw	0
  3715  046E  00CB               	movwf	((_tap+3)^(0+256)+40)
  3716  046F  3000               	movlw	0
  3717  0470  00CA               	movwf	((_tap+2)^(0+256)+40)
  3718  0471  3000               	movlw	0
  3719  0472  00C9               	movwf	((_tap+1)^(0+256)+40)
  3720  0473  3000               	movlw	0
  3721  0474  00C8               	movwf	(_tap^(0+256)+40)
  3722                           
  3723                           ;main.c: 132: top_push_state = FLASH_ReadWord(0x1F81);
  3724  0475  3081               	movlw	129
  3725  0476  0020               	movlb	0	; select bank0
  3726  0477  00C2               	movwf	FLASH_ReadWord@flashAddr
  3727  0478  301F               	movlw	31
  3728  0479  00C3               	movwf	FLASH_ReadWord@flashAddr+1
  3729  047A  318C  24A5  3184   	fcall	_FLASH_ReadWord
  3730  047D  0020               	movlb	0	; select bank0
  3731  047E  0843               	movf	?_FLASH_ReadWord+1,w
  3732  047F  00FC               	movwf	_top_push_state+1	;volatile
  3733  0480  0842               	movf	?_FLASH_ReadWord,w
  3734  0481  00FB               	movwf	_top_push_state	;volatile
  3735                           
  3736                           ;main.c: 133: bottom_push_state = FLASH_ReadWord(0x1F82);
  3737  0482  3082               	movlw	130
  3738  0483  00C2               	movwf	FLASH_ReadWord@flashAddr
  3739  0484  301F               	movlw	31
  3740  0485  00C3               	movwf	FLASH_ReadWord@flashAddr+1
  3741  0486  318C  24A5  3184   	fcall	_FLASH_ReadWord
  3742  0489  0020               	movlb	0	; select bank0
  3743  048A  0843               	movf	?_FLASH_ReadWord+1,w
  3744  048B  00EC               	movwf	_bottom_push_state+1
  3745  048C  0842               	movf	?_FLASH_ReadWord,w
  3746  048D  00EB               	movwf	_bottom_push_state
  3747                           
  3748                           ;main.c: 136: LATGbits.LATG1 = !bypass_state;
  3749  048E  0830               	movf	_bypass_state,w
  3750  048F  0431               	iorwf	_bypass_state+1,w
  3751  0490  1D03               	btfss	3,2
  3752  0491  2C95               	goto	u1240
  3753  0492  0027               	movlb	7	; select bank7
  3754  0493  148D               	bsf	13,1	;volatile
  3755  0494  2C97               	goto	l1954
  3756  0495                     u1240:	
  3757  0495  0027               	movlb	7	; select bank7
  3758  0496  108D               	bcf	13,1	;volatile
  3759  0497                     l1954:	
  3760                           
  3761                           ;main.c: 137: LATGbits.LATG2 = bypass_state;
  3762  0497  0020               	movlb	0	; select bank0
  3763  0498  0C30               	rrf	_bypass_state,w
  3764  0499  0027               	movlb	7	; select bank7
  3765  049A  1C03               	skipc
  3766  049B  110D               	bcf	13,2	;volatile
  3767  049C  1803               	skipnc
  3768  049D  150D               	bsf	13,2	;volatile
  3769                           
  3770                           ;main.c: 138: LATBbits.LATB2 = 0;
  3771  049E  0022               	movlb	2	; select bank2
  3772  049F  110D               	bcf	13,2	;volatile
  3773                           
  3774                           ;main.c: 139: LATBbits.LATB3 = 0;
  3775  04A0  118D               	bcf	13,3	;volatile
  3776                           
  3777                           ;main.c: 141: LATBbits.LATB4 = 0;
  3778  04A1  120D               	bcf	13,4	;volatile
  3779                           
  3780                           ;main.c: 142: LATBbits.LATB5 = 0;
  3781  04A2  128D               	bcf	13,5	;volatile
  3782                           
  3783                           ;main.c: 144: LATBbits.LATB1 = 0;
  3784  04A3  108D               	bcf	13,1	;volatile
  3785                           
  3786                           ;main.c: 145: LATBbits.LATB0 = 0;
  3787  04A4  100D               	bcf	13,0	;volatile
  3788                           
  3789                           ;main.c: 148: set_leds_top(top_push_state, 1);
  3790  04A5  087C               	movf	_top_push_state+1,w	;volatile
  3791  04A6  0020               	movlb	0	; select bank0
  3792  04A7  00C3               	movwf	set_leds_top@x+1
  3793  04A8  087B               	movf	_top_push_state,w	;volatile
  3794  04A9  00C2               	movwf	set_leds_top@x
  3795  04AA  3001               	movlw	1
  3796  04AB  00C4               	movwf	set_leds_top@ledState
  3797  04AC  3000               	movlw	0
  3798  04AD  00C5               	movwf	set_leds_top@ledState+1
  3799  04AE  318F  27B6  3184   	fcall	_set_leds_top
  3800                           
  3801                           ;main.c: 149: set_leds_bottom(bottom_push_state);
  3802  04B1  0020               	movlb	0	; select bank0
  3803  04B2  086C               	movf	_bottom_push_state+1,w
  3804  04B3  00C3               	movwf	set_leds_bottom@x+1
  3805  04B4  086B               	movf	_bottom_push_state,w
  3806  04B5  00C2               	movwf	set_leds_bottom@x
  3807  04B6  318D  2572  3184   	fcall	_set_leds_bottom
  3808  04B9                     l1972:	
  3809                           ;main.c: 151: while (1) {
  3810                           
  3811                           
  3812                           ;main.c: 158: if (PORTDbits.RD6 == 0) {
  3813  04B9  0020               	movlb	0	; select bank0
  3814  04BA  1B0F               	btfsc	15,6	;volatile
  3815  04BB  2CF4               	goto	l1986
  3816                           
  3817                           ;main.c: 159: bottom_push_state = bottom_push_state + 1;
  3818  04BC  086B               	movf	_bottom_push_state,w
  3819  04BD  3E01               	addlw	1
  3820  04BE  00EB               	movwf	_bottom_push_state
  3821  04BF  3000               	movlw	0
  3822  04C0  3D6C               	addwfc	_bottom_push_state+1,w
  3823  04C1  00EC               	movwf	_bottom_push_state+1
  3824                           
  3825                           ;main.c: 160: if (bottom_push_state >= 7) {
  3826  04C2  086C               	movf	_bottom_push_state+1,w
  3827  04C3  3A80               	xorlw	128
  3828  04C4  00E0               	movwf	??_main
  3829  04C5  3080               	movlw	128
  3830  04C6  0260               	subwf	??_main,w
  3831  04C7  1D03               	skipz
  3832  04C8  2CCB               	goto	u1275
  3833  04C9  3007               	movlw	7
  3834  04CA  026B               	subwf	_bottom_push_state,w
  3835  04CB                     u1275:	
  3836  04CB  1C03               	skipc
  3837  04CC  2CD2               	goto	l1980
  3838                           
  3839                           ;main.c: 161: bottom_push_state = 1;
  3840  04CD  3001               	movlw	1
  3841  04CE  0020               	movlb	0	; select bank0
  3842  04CF  00EB               	movwf	_bottom_push_state
  3843  04D0  3000               	movlw	0
  3844  04D1  00EC               	movwf	_bottom_push_state+1
  3845  04D2                     l1980:	
  3846                           
  3847                           ;main.c: 162: }
  3848                           ;main.c: 163: set_leds_bottom(bottom_push_state);
  3849  04D2  0020               	movlb	0	; select bank0
  3850  04D3  086C               	movf	_bottom_push_state+1,w
  3851  04D4  00C3               	movwf	set_leds_bottom@x+1
  3852  04D5  086B               	movf	_bottom_push_state,w
  3853  04D6  00C2               	movwf	set_leds_bottom@x
  3854  04D7  318D  2572  3184   	fcall	_set_leds_bottom
  3855                           
  3856                           ;main.c: 164: FLASH_WriteWord(0x1F82, myBuf, bottom_push_state);
  3857  04DA  3082               	movlw	130
  3858  04DB  0020               	movlb	0	; select bank0
  3859  04DC  00CF               	movwf	FLASH_WriteWord@flashAddr
  3860  04DD  301F               	movlw	31
  3861  04DE  00D0               	movwf	FLASH_WriteWord@flashAddr+1
  3862  04DF  30A0               	movlw	(low (_myBuf| (0+256)))& (0+255)
  3863  04E0  00E0               	movwf	??_main
  3864  04E1  0860               	movf	??_main,w
  3865  04E2  00D1               	movwf	FLASH_WriteWord@ramBuf
  3866  04E3  086C               	movf	_bottom_push_state+1,w
  3867  04E4  00D3               	movwf	FLASH_WriteWord@word+1
  3868  04E5  086B               	movf	_bottom_push_state,w
  3869  04E6  00D2               	movwf	FLASH_WriteWord@word
  3870  04E7  318F  2771  3184   	fcall	_FLASH_WriteWord
  3871  04EA                     l180:	
  3872                           ;main.c: 165: while (PORTDbits.RD6 == 0) {
  3873                           
  3874  04EA  0020               	movlb	0	; select bank0
  3875  04EB  1F0F               	btfss	15,6	;volatile
  3876  04EC  2CEA               	goto	l180
  3877                           
  3878                           ;main.c: 166: }
  3879                           ;main.c: 167: wait_ms(20);
  3880  04ED  3014               	movlw	20
  3881  04EE  00CE               	movwf	wait_ms@time
  3882  04EF  3000               	movlw	0
  3883  04F0  00CF               	movwf	wait_ms@time+1
  3884  04F1  318D  25A3  3184   	fcall	_wait_ms
  3885  04F4                     l1986:	
  3886                           
  3887                           ;main.c: 168: }
  3888                           ;main.c: 179: if (PORTDbits.RD5 == 0) {
  3889  04F4  0020               	movlb	0	; select bank0
  3890  04F5  1A8F               	btfsc	15,5	;volatile
  3891  04F6  2D37               	goto	l2002
  3892                           
  3893                           ;main.c: 180: top_push_state = top_push_state + 1;
  3894  04F7  087B               	movf	_top_push_state,w	;volatile
  3895  04F8  3E01               	addlw	1
  3896  04F9  00FB               	movwf	_top_push_state	;volatile
  3897  04FA  3000               	movlw	0
  3898  04FB  3D7C               	addwfc	_top_push_state+1,w	;volatile
  3899  04FC  00FC               	movwf	_top_push_state+1	;volatile
  3900                           
  3901                           ;main.c: 181: if (top_push_state >= 7) {
  3902  04FD  087C               	movf	_top_push_state+1,w	;volatile
  3903  04FE  3A80               	xorlw	128
  3904  04FF  00E0               	movwf	??_main
  3905  0500  3080               	movlw	128
  3906  0501  0260               	subwf	??_main,w
  3907  0502  1D03               	skipz
  3908  0503  2D06               	goto	u1305
  3909  0504  3007               	movlw	7
  3910  0505  027B               	subwf	_top_push_state,w	;volatile
  3911  0506                     u1305:	
  3912  0506  1C03               	skipc
  3913  0507  2D0C               	goto	l1994
  3914                           
  3915                           ;main.c: 182: top_push_state = 1;
  3916  0508  3001               	movlw	1
  3917  0509  00FB               	movwf	_top_push_state	;volatile
  3918  050A  3000               	movlw	0
  3919  050B  00FC               	movwf	_top_push_state+1	;volatile
  3920  050C                     l1994:	
  3921                           
  3922                           ;main.c: 183: }
  3923                           ;main.c: 184: set_leds_top(top_push_state, 1);
  3924  050C  087C               	movf	_top_push_state+1,w	;volatile
  3925  050D  0020               	movlb	0	; select bank0
  3926  050E  00C3               	movwf	set_leds_top@x+1
  3927  050F  087B               	movf	_top_push_state,w	;volatile
  3928  0510  00C2               	movwf	set_leds_top@x
  3929  0511  3001               	movlw	1
  3930  0512  00C4               	movwf	set_leds_top@ledState
  3931  0513  3000               	movlw	0
  3932  0514  00C5               	movwf	set_leds_top@ledState+1
  3933  0515  318F  27B6  3184   	fcall	_set_leds_top
  3934                           
  3935                           ;main.c: 185: delay_time_changed = 1;
  3936  0518  3001               	movlw	1
  3937  0519  0021               	movlb	1	; select bank1
  3938  051A  00DC               	movwf	_delay_time_changed^(0+128)
  3939  051B  3000               	movlw	0
  3940  051C  00DD               	movwf	(_delay_time_changed^(0+128)+1)
  3941                           
  3942                           ;main.c: 186: FLASH_WriteWord(0x1F81, myBuf, top_push_state);
  3943  051D  3081               	movlw	129
  3944  051E  0020               	movlb	0	; select bank0
  3945  051F  00CF               	movwf	FLASH_WriteWord@flashAddr
  3946  0520  301F               	movlw	31
  3947  0521  00D0               	movwf	FLASH_WriteWord@flashAddr+1
  3948  0522  30A0               	movlw	(low (_myBuf| (0+256)))& (0+255)
  3949  0523  00E0               	movwf	??_main
  3950  0524  0860               	movf	??_main,w
  3951  0525  00D1               	movwf	FLASH_WriteWord@ramBuf
  3952  0526  087C               	movf	_top_push_state+1,w	;volatile
  3953  0527  00D3               	movwf	FLASH_WriteWord@word+1
  3954  0528  087B               	movf	_top_push_state,w	;volatile
  3955  0529  00D2               	movwf	FLASH_WriteWord@word
  3956  052A  318F  2771  3184   	fcall	_FLASH_WriteWord
  3957  052D                     l185:	
  3958                           ;main.c: 187: while (PORTDbits.RD5 == 0) {
  3959                           
  3960  052D  0020               	movlb	0	; select bank0
  3961  052E  1E8F               	btfss	15,5	;volatile
  3962  052F  2D2D               	goto	l185
  3963                           
  3964                           ;main.c: 188: }
  3965                           ;main.c: 189: wait_ms(20);
  3966  0530  3014               	movlw	20
  3967  0531  00CE               	movwf	wait_ms@time
  3968  0532  3000               	movlw	0
  3969  0533  00CF               	movwf	wait_ms@time+1
  3970  0534  318D  25A3  3184   	fcall	_wait_ms
  3971  0537                     l2002:	
  3972                           
  3973                           ;main.c: 190: }
  3974                           ;main.c: 196: if (PORTDbits.RD7 == 0) {
  3975  0537  0020               	movlb	0	; select bank0
  3976  0538  1B8F               	btfsc	15,7	;volatile
  3977  0539  2D8D               	goto	l2016
  3978                           
  3979                           ;main.c: 197: farkelSnuffle++;
  3980  053A  3001               	movlw	1
  3981  053B  07B2               	addwf	_farkelSnuffle,f
  3982  053C  3000               	movlw	0
  3983  053D  3DB3               	addwfc	_farkelSnuffle+1,f
  3984                           
  3985                           ;main.c: 198: if (farkelSnuffle > 25) {
  3986  053E  0833               	movf	_farkelSnuffle+1,w
  3987  053F  3A80               	xorlw	128
  3988  0540  00E0               	movwf	??_main
  3989  0541  3080               	movlw	128
  3990  0542  0260               	subwf	??_main,w
  3991  0543  1D03               	skipz
  3992  0544  2D47               	goto	u1335
  3993  0545  301A               	movlw	26
  3994  0546  0232               	subwf	_farkelSnuffle,w
  3995  0547                     u1335:	
  3996  0547  1C03               	skipc
  3997  0548  2CB9               	goto	l1972
  3998                           
  3999                           ;main.c: 200: mode1_state = mode1_state++;
  4000  0549  3019               	movlw	25
  4001  054A  0020               	movlb	0	; select bank0
  4002  054B  00B2               	movwf	_farkelSnuffle
  4003  054C  3000               	movlw	0
  4004  054D  00B3               	movwf	_farkelSnuffle+1
  4005  054E  3001               	movlw	1
  4006  054F  07BE               	addwf	_mode1_state,f
  4007  0550  3000               	movlw	0
  4008  0551  3DBF               	addwfc	_mode1_state+1,f
  4009                           
  4010                           ;main.c: 201: if (mode1_state > 2) {
  4011  0552  083F               	movf	_mode1_state+1,w
  4012  0553  3A80               	xorlw	128
  4013  0554  00E0               	movwf	??_main
  4014  0555  3080               	movlw	128
  4015  0556  0260               	subwf	??_main,w
  4016  0557  1D03               	skipz
  4017  0558  2D5B               	goto	u1345
  4018  0559  3003               	movlw	3
  4019  055A  023E               	subwf	_mode1_state,w
  4020  055B                     u1345:	
  4021  055B  1C03               	skipc
  4022  055C  2D60               	goto	l2010
  4023                           
  4024                           ;main.c: 202: mode1_state = 0;
  4025  055D  0020               	movlb	0	; select bank0
  4026  055E  01BE               	clrf	_mode1_state
  4027  055F  01BF               	clrf	_mode1_state+1
  4028  0560                     l2010:	
  4029                           
  4030                           ;main.c: 203: }
  4031                           ;main.c: 204: printf("Hello world\ntest value is %04d\n", mode1_state);
  4032  0560  300A               	movlw	low (STR_1| (0+32768))
  4033  0561  0020               	movlb	0	; select bank0
  4034  0562  00D0               	movwf	printf@f
  4035  0563  3090               	movlw	high (STR_1| (0+32768))
  4036  0564  00D1               	movwf	printf@f+1
  4037  0565  083F               	movf	_mode1_state+1,w
  4038  0566  00D3               	movwf	?_printf+3
  4039  0567  083E               	movf	_mode1_state,w
  4040  0568  00D2               	movwf	?_printf+2
  4041  0569  3185  2590  3184   	fcall	_printf
  4042                           
  4043                           ;main.c: 205: switch(mode1_state) {
  4044  056C  2D78               	goto	l2014
  4045  056D                     l192:	
  4046                           ;main.c: 206: case 0:
  4047                           
  4048                           
  4049                           ;main.c: 207: LATBbits.LATB1 = 0;
  4050  056D  0022               	movlb	2	; select bank2
  4051  056E  108D               	bcf	13,1	;volatile
  4052  056F  2D72               	goto	L1
  4053  0570                     l194:	
  4054                           ;main.c: 210: case 1:
  4055                           
  4056                           ;main.c: 209: break;
  4057                           
  4058                           ;main.c: 208: LATBbits.LATB0 = 0;
  4059                           
  4060                           
  4061                           ;main.c: 211: LATBbits.LATB1 = 1;
  4062  0570  0022               	movlb	2	; select bank2
  4063  0571  148D               	bsf	13,1	;volatile
  4064  0572                     L1:	
  4065                           
  4066                           ;main.c: 212: LATBbits.LATB0 = 0;
  4067  0572  100D               	bcf	13,0	;volatile
  4068                           
  4069                           ;main.c: 213: break;
  4070  0573  2D89               	goto	l196
  4071  0574                     l195:	
  4072                           ;main.c: 214: case 2:
  4073                           
  4074                           
  4075                           ;main.c: 215: LATBbits.LATB1 = 0;
  4076  0574  0022               	movlb	2	; select bank2
  4077  0575  108D               	bcf	13,1	;volatile
  4078                           
  4079                           ;main.c: 216: LATBbits.LATB0 = 1;
  4080  0576  140D               	bsf	13,0	;volatile
  4081                           
  4082                           ;main.c: 218: }
  4083                           
  4084                           ;main.c: 217: break;
  4085  0577  2D89               	goto	l196
  4086  0578                     l2014:	
  4087                           
  4088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4089                           ; Switch size 1, requested type "space"
  4090                           ; Number of cases is 1, Range of values is 0 to 0
  4091                           ; switch strategies available:
  4092                           ; Name         Instructions Cycles
  4093                           ; simple_byte            4     3 (average)
  4094                           ; direct_byte            8     6 (fixed)
  4095                           ; jumptable            260     6 (fixed)
  4096                           ;	Chosen strategy is simple_byte
  4097  0578  0020               	movlb	0	; select bank0
  4098  0579  083F               	movf	_mode1_state+1,w
  4099  057A  3A00               	xorlw	0	; case 0
  4100  057B  1903               	skipnz
  4101  057C  2D7E               	goto	l2106
  4102  057D  2D89               	goto	l196
  4103  057E                     l2106:	
  4104                           
  4105                           ; Switch size 1, requested type "space"
  4106                           ; Number of cases is 3, Range of values is 0 to 2
  4107                           ; switch strategies available:
  4108                           ; Name         Instructions Cycles
  4109                           ; simple_byte           10     6 (average)
  4110                           ; direct_byte           12     6 (fixed)
  4111                           ; jumptable            260     6 (fixed)
  4112                           ;	Chosen strategy is simple_byte
  4113  057E  083E               	movf	_mode1_state,w
  4114  057F  3A00               	xorlw	0	; case 0
  4115  0580  1903               	skipnz
  4116  0581  2D6D               	goto	l192
  4117  0582  3A01               	xorlw	1	; case 1
  4118  0583  1903               	skipnz
  4119  0584  2D70               	goto	l194
  4120  0585  3A03               	xorlw	3	; case 2
  4121  0586  1903               	skipnz
  4122  0587  2D74               	goto	l195
  4123  0588  2D89               	goto	l196
  4124  0589                     l196:	
  4125                           ;main.c: 219: while (PORTDbits.RD7 == 0) {
  4126                           
  4127  0589  0020               	movlb	0	; select bank0
  4128  058A  1B8F               	btfsc	15,7	;volatile
  4129  058B  2CB9               	goto	l1972
  4130  058C  2D89               	goto	l196
  4131  058D                     l2016:	
  4132                           ;main.c: 220: }
  4133                           ;main.c: 221: }
  4134                           ;main.c: 222: } else {
  4135                           
  4136                           
  4137                           ;main.c: 223: farkelSnuffle = 0;
  4138  058D  01B2               	clrf	_farkelSnuffle
  4139  058E  01B3               	clrf	_farkelSnuffle+1
  4140  058F  2CB9               	goto	l1972
  4141  0590                     __end_of_main:	
  4142                           
  4143                           	psect	text1
  4144  0DA3                     __ptext1:	
  4145 ;; *************** function _wait_ms *****************
  4146 ;; Defined at:
  4147 ;;		line 23 in file "system.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  time            2   12[BANK0 ] unsigned int 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0, pclath, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4161 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4164 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4165 ;;Total ram usage:        2 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    3
  4168 ;; This function calls:
  4169 ;;		___lmul
  4170 ;; This function is called by:
  4171 ;;		_main
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           
  4176                           ;psect for function _wait_ms
  4177  0DA3                     _wait_ms:	
  4178                           
  4179                           ;system.c: 25: static long timel = 0;
  4180                           ;system.c: 26: timel = time * 1000l;
  4181                           
  4182                           ;incstack = 0
  4183                           ; Regs used in _wait_ms: [wreg+status,2+status,0+pclath+cstack]
  4184  0DA3  0020               	movlb	0	; select bank0
  4185  0DA4  084E               	movf	wait_ms@time,w
  4186  0DA5  00C2               	movwf	___lmul@multiplier
  4187  0DA6  084F               	movf	wait_ms@time+1,w
  4188  0DA7  00C3               	movwf	___lmul@multiplier+1
  4189  0DA8  01C4               	clrf	___lmul@multiplier+2
  4190  0DA9  01C5               	clrf	___lmul@multiplier+3
  4191  0DAA  3000               	movlw	0
  4192  0DAB  00C9               	movwf	___lmul@multiplicand+3
  4193  0DAC  3000               	movlw	0
  4194  0DAD  00C8               	movwf	___lmul@multiplicand+2
  4195  0DAE  3003               	movlw	3
  4196  0DAF  00C7               	movwf	___lmul@multiplicand+1
  4197  0DB0  30E8               	movlw	232
  4198  0DB1  00C6               	movwf	___lmul@multiplicand
  4199  0DB2  318D  2542  318D   	fcall	___lmul
  4200  0DB5  0020               	movlb	0	; select bank0
  4201  0DB6  0845               	movf	?___lmul+3,w
  4202  0DB7  0021               	movlb	1	; select bank1
  4203  0DB8  00C7               	movwf	(wait_ms@timel+3)^(0+128)
  4204  0DB9  0020               	movlb	0	; select bank0
  4205  0DBA  0844               	movf	?___lmul+2,w
  4206  0DBB  0021               	movlb	1	; select bank1
  4207  0DBC  00C6               	movwf	(wait_ms@timel+2)^(0+128)
  4208  0DBD  0020               	movlb	0	; select bank0
  4209  0DBE  0843               	movf	?___lmul+1,w
  4210  0DBF  0021               	movlb	1	; select bank1
  4211  0DC0  00C5               	movwf	(wait_ms@timel+1)^(0+128)
  4212  0DC1  0020               	movlb	0	; select bank0
  4213  0DC2  0842               	movf	?___lmul,w
  4214  0DC3  0021               	movlb	1	; select bank1
  4215  0DC4  00C4               	movwf	wait_ms@timel^(0+128)
  4216  0DC5                     l212:	
  4217                           ;system.c: 27: for( ; timel; timel--);
  4218                           
  4219  0DC5  0847               	movf	(wait_ms@timel+3)^(0+128),w
  4220  0DC6  0446               	iorwf	(wait_ms@timel+2)^(0+128),w
  4221  0DC7  0445               	iorwf	(wait_ms@timel+1)^(0+128),w
  4222  0DC8  0444               	iorwf	wait_ms@timel^(0+128),w
  4223  0DC9  1903               	btfsc	3,2
  4224  0DCA  0008               	return
  4225  0DCB  30FF               	movlw	255
  4226  0DCC  07C4               	addwf	wait_ms@timel^(0+128),f
  4227  0DCD  30FF               	movlw	255
  4228  0DCE  3DC5               	addwfc	(wait_ms@timel+1)^(0+128),f
  4229  0DCF  30FF               	movlw	255
  4230  0DD0  3DC6               	addwfc	(wait_ms@timel+2)^(0+128),f
  4231  0DD1  30FF               	movlw	255
  4232  0DD2  3DC7               	addwfc	(wait_ms@timel+3)^(0+128),f
  4233  0DD3  2DC5               	goto	l212
  4234  0DD4                     __end_of_wait_ms:	
  4235                           
  4236                           	psect	text2
  4237  0D42                     __ptext2:	
  4238 ;; *************** function ___lmul *****************
  4239 ;; Defined at:
  4240 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4243 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  product         4    8[BANK0 ] unsigned long 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  4    0[BANK0 ] unsigned long 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2, status,0
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4255 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4256 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4258 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4259 ;;Total ram usage:       12 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:    2
  4262 ;; This function calls:
  4263 ;;		Nothing
  4264 ;; This function is called by:
  4265 ;;		_wait_ms
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           
  4270                           ;psect for function ___lmul
  4271  0D42                     ___lmul:	
  4272                           
  4273                           ;incstack = 0
  4274                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4275  0D42  3000               	movlw	0
  4276  0D43  0020               	movlb	0	; select bank0
  4277  0D44  00CD               	movwf	___lmul@product+3
  4278  0D45  3000               	movlw	0
  4279  0D46  00CC               	movwf	___lmul@product+2
  4280  0D47  3000               	movlw	0
  4281  0D48  00CB               	movwf	___lmul@product+1
  4282  0D49  3000               	movlw	0
  4283  0D4A  00CA               	movwf	___lmul@product
  4284  0D4B                     l1660:	
  4285  0D4B  1C42               	btfss	___lmul@multiplier,0
  4286  0D4C  2D55               	goto	l1664
  4287  0D4D  0846               	movf	___lmul@multiplicand,w
  4288  0D4E  07CA               	addwf	___lmul@product,f
  4289  0D4F  0847               	movf	___lmul@multiplicand+1,w
  4290  0D50  3DCB               	addwfc	___lmul@product+1,f
  4291  0D51  0848               	movf	___lmul@multiplicand+2,w
  4292  0D52  3DCC               	addwfc	___lmul@product+2,f
  4293  0D53  0849               	movf	___lmul@multiplicand+3,w
  4294  0D54  3DCD               	addwfc	___lmul@product+3,f
  4295  0D55                     l1664:	
  4296  0D55  3001               	movlw	1
  4297  0D56                     u815:	
  4298  0D56  35C6               	lslf	___lmul@multiplicand,f
  4299  0D57  0DC7               	rlf	___lmul@multiplicand+1,f
  4300  0D58  0DC8               	rlf	___lmul@multiplicand+2,f
  4301  0D59  0DC9               	rlf	___lmul@multiplicand+3,f
  4302  0D5A  0B89               	decfsz	9,f
  4303  0D5B  2D56               	goto	u815
  4304  0D5C  3001               	movlw	1
  4305  0D5D                     u825:	
  4306  0D5D  36C5               	lsrf	___lmul@multiplier+3,f
  4307  0D5E  0CC4               	rrf	___lmul@multiplier+2,f
  4308  0D5F  0CC3               	rrf	___lmul@multiplier+1,f
  4309  0D60  0CC2               	rrf	___lmul@multiplier,f
  4310  0D61  0B89               	decfsz	9,f
  4311  0D62  2D5D               	goto	u825
  4312  0D63  0845               	movf	___lmul@multiplier+3,w
  4313  0D64  0444               	iorwf	___lmul@multiplier+2,w
  4314  0D65  0443               	iorwf	___lmul@multiplier+1,w
  4315  0D66  0442               	iorwf	___lmul@multiplier,w
  4316  0D67  1D03               	skipz
  4317  0D68  2D4B               	goto	l1660
  4318  0D69  084D               	movf	___lmul@product+3,w
  4319  0D6A  00C5               	movwf	?___lmul+3
  4320  0D6B  084C               	movf	___lmul@product+2,w
  4321  0D6C  00C4               	movwf	?___lmul+2
  4322  0D6D  084B               	movf	___lmul@product+1,w
  4323  0D6E  00C3               	movwf	?___lmul+1
  4324  0D6F  084A               	movf	___lmul@product,w
  4325  0D70  00C2               	movwf	?___lmul
  4326  0D71  0008               	return
  4327  0D72                     __end_of___lmul:	
  4328                           
  4329                           	psect	text3
  4330  0FB6                     __ptext3:	
  4331 ;; *************** function _set_leds_top *****************
  4332 ;; Defined at:
  4333 ;;		line 13 in file "LEDs.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  x               2    0[BANK0 ] int 
  4336 ;;  ledState        2    2[BANK0 ] int 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4351 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4352 ;;Total ram usage:        4 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    2
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_main
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           
  4363                           ;psect for function _set_leds_top
  4364  0FB6                     _set_leds_top:	
  4365                           
  4366                           ;LEDs.c: 14: LATFbits.LATF0 = 0;
  4367                           
  4368                           ;incstack = 0
  4369                           ; Regs used in _set_leds_top: [wreg-fsr0h+status,2+status,0]
  4370  0FB6  0027               	movlb	7	; select bank7
  4371  0FB7  100C               	bcf	12,0	;volatile
  4372                           
  4373                           ;LEDs.c: 15: LATFbits.LATF1 = 0;
  4374  0FB8  108C               	bcf	12,1	;volatile
  4375                           
  4376                           ;LEDs.c: 16: LATFbits.LATF2 = 0;
  4377  0FB9  110C               	bcf	12,2	;volatile
  4378                           
  4379                           ;LEDs.c: 17: LATFbits.LATF3 = 0;
  4380  0FBA  118C               	bcf	12,3	;volatile
  4381                           
  4382                           ;LEDs.c: 18: LATFbits.LATF4 = 0;
  4383  0FBB  120C               	bcf	12,4	;volatile
  4384                           
  4385                           ;LEDs.c: 19: switch (x) {
  4386  0FBC  2FE5               	goto	l1734
  4387  0FBD                     l1722:	
  4388                           ;LEDs.c: 20: case 1:
  4389                           
  4390                           
  4391                           ;LEDs.c: 21: LATFbits.LATF0 = ledState;
  4392  0FBD  0020               	movlb	0	; select bank0
  4393  0FBE  0C44               	rrf	set_leds_top@ledState,w
  4394  0FBF  0027               	movlb	7	; select bank7
  4395  0FC0  1C03               	skipc
  4396  0FC1  100C               	bcf	12,0	;volatile
  4397  0FC2  1803               	skipnc
  4398  0FC3  140C               	bsf	12,0	;volatile
  4399                           
  4400                           ;LEDs.c: 22: break;
  4401  0FC4  0008               	return
  4402  0FC5                     l1724:	
  4403                           ;LEDs.c: 23: case 2:
  4404                           
  4405                           
  4406                           ;LEDs.c: 24: LATFbits.LATF1 = ledState;
  4407  0FC5  0020               	movlb	0	; select bank0
  4408  0FC6  0C44               	rrf	set_leds_top@ledState,w
  4409  0FC7  0027               	movlb	7	; select bank7
  4410  0FC8  1C03               	skipc
  4411  0FC9  108C               	bcf	12,1	;volatile
  4412  0FCA  1803               	skipnc
  4413  0FCB  148C               	bsf	12,1	;volatile
  4414                           
  4415                           ;LEDs.c: 25: break;
  4416  0FCC  0008               	return
  4417  0FCD                     l1726:	
  4418                           ;LEDs.c: 26: case 3:
  4419                           
  4420                           
  4421                           ;LEDs.c: 27: LATFbits.LATF2 = ledState;
  4422  0FCD  0020               	movlb	0	; select bank0
  4423  0FCE  0C44               	rrf	set_leds_top@ledState,w
  4424  0FCF  0027               	movlb	7	; select bank7
  4425  0FD0  1C03               	skipc
  4426  0FD1  110C               	bcf	12,2	;volatile
  4427  0FD2  1803               	skipnc
  4428  0FD3  150C               	bsf	12,2	;volatile
  4429                           
  4430                           ;LEDs.c: 28: break;
  4431  0FD4  0008               	return
  4432  0FD5                     l1728:	
  4433                           ;LEDs.c: 29: case 4:
  4434                           
  4435                           
  4436                           ;LEDs.c: 30: LATFbits.LATF3 = ledState;
  4437  0FD5  0020               	movlb	0	; select bank0
  4438  0FD6  0C44               	rrf	set_leds_top@ledState,w
  4439  0FD7  0027               	movlb	7	; select bank7
  4440  0FD8  1C03               	skipc
  4441  0FD9  118C               	bcf	12,3	;volatile
  4442  0FDA  1803               	skipnc
  4443  0FDB  158C               	bsf	12,3	;volatile
  4444                           
  4445                           ;LEDs.c: 31: break;
  4446  0FDC  0008               	return
  4447  0FDD                     l1730:	
  4448                           ;LEDs.c: 32: case 5:
  4449                           
  4450                           
  4451                           ;LEDs.c: 33: LATFbits.LATF4 = ledState;
  4452  0FDD  0020               	movlb	0	; select bank0
  4453  0FDE  0C44               	rrf	set_leds_top@ledState,w
  4454  0FDF  0027               	movlb	7	; select bank7
  4455  0FE0  1C03               	skipc
  4456  0FE1  120C               	bcf	12,4	;volatile
  4457  0FE2  1803               	skipnc
  4458  0FE3  160C               	bsf	12,4	;volatile
  4459                           
  4460                           ;LEDs.c: 37: }
  4461                           
  4462                           ;LEDs.c: 36: break;
  4463                           
  4464                           ;LEDs.c: 35: case 6:
  4465                           
  4466                           ;LEDs.c: 34: break;
  4467  0FE4  0008               	return
  4468  0FE5                     l1734:	
  4469                           
  4470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4471                           ; Switch size 1, requested type "space"
  4472                           ; Number of cases is 1, Range of values is 0 to 0
  4473                           ; switch strategies available:
  4474                           ; Name         Instructions Cycles
  4475                           ; simple_byte            4     3 (average)
  4476                           ; direct_byte            8     6 (fixed)
  4477                           ; jumptable            260     6 (fixed)
  4478                           ;	Chosen strategy is simple_byte
  4479  0FE5  0020               	movlb	0	; select bank0
  4480  0FE6  0843               	movf	set_leds_top@x+1,w
  4481  0FE7  3A00               	xorlw	0	; case 0
  4482  0FE8  1903               	skipnz
  4483  0FE9  2FEB               	goto	l2108
  4484  0FEA  2FFF               	goto	l401
  4485  0FEB                     l2108:	
  4486                           
  4487                           ; Switch size 1, requested type "space"
  4488                           ; Number of cases is 6, Range of values is 1 to 6
  4489                           ; switch strategies available:
  4490                           ; Name         Instructions Cycles
  4491                           ; simple_byte           19    10 (average)
  4492                           ; direct_byte           21     9 (fixed)
  4493                           ; jumptable            263     9 (fixed)
  4494                           ;	Chosen strategy is simple_byte
  4495  0FEB  0842               	movf	set_leds_top@x,w
  4496  0FEC  3A01               	xorlw	1	; case 1
  4497  0FED  1903               	skipnz
  4498  0FEE  2FBD               	goto	l1722
  4499  0FEF  3A03               	xorlw	3	; case 2
  4500  0FF0  1903               	skipnz
  4501  0FF1  2FC5               	goto	l1724
  4502  0FF2  3A01               	xorlw	1	; case 3
  4503  0FF3  1903               	skipnz
  4504  0FF4  2FCD               	goto	l1726
  4505  0FF5  3A07               	xorlw	7	; case 4
  4506  0FF6  1903               	skipnz
  4507  0FF7  2FD5               	goto	l1728
  4508  0FF8  3A01               	xorlw	1	; case 5
  4509  0FF9  1903               	skipnz
  4510  0FFA  2FDD               	goto	l1730
  4511  0FFB  3A03               	xorlw	3	; case 6
  4512  0FFC  1903               	skipnz
  4513  0FFD  2FFF               	goto	l401
  4514  0FFE  2FFF               	goto	l401
  4515  0FFF                     l401:	
  4516  0FFF  0008               	return
  4517  1000                     __end_of_set_leds_top:	
  4518                           
  4519                           	psect	text4
  4520  0D72                     __ptext4:	
  4521 ;; *************** function _set_leds_bottom *****************
  4522 ;; Defined at:
  4523 ;;		line 41 in file "LEDs.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  x               2    0[BANK0 ] int 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;		None
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4537 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4540 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4541 ;;Total ram usage:        2 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    2
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function _set_leds_bottom
  4553  0D72                     _set_leds_bottom:	
  4554                           
  4555                           ;LEDs.c: 42: LATDbits.LATD0 = 0;
  4556                           
  4557                           ;incstack = 0
  4558                           ; Regs used in _set_leds_bottom: [wreg-fsr0h+status,2+status,0]
  4559  0D72  0022               	movlb	2	; select bank2
  4560  0D73  100F               	bcf	15,0	;volatile
  4561                           
  4562                           ;LEDs.c: 43: LATDbits.LATD1 = 0;
  4563  0D74  108F               	bcf	15,1	;volatile
  4564                           
  4565                           ;LEDs.c: 44: LATDbits.LATD2 = 0;
  4566  0D75  110F               	bcf	15,2	;volatile
  4567                           
  4568                           ;LEDs.c: 45: LATDbits.LATD3 = 0;
  4569  0D76  118F               	bcf	15,3	;volatile
  4570                           
  4571                           ;LEDs.c: 46: LATDbits.LATD4 = 0;
  4572  0D77  120F               	bcf	15,4	;volatile
  4573                           
  4574                           ;LEDs.c: 47: switch (x) {
  4575  0D78  2D88               	goto	l1758
  4576  0D79                     l405:	
  4577                           ;LEDs.c: 48: case 1:
  4578                           
  4579                           
  4580                           ;LEDs.c: 49: LATDbits.LATD0 = 1;
  4581  0D79  0022               	movlb	2	; select bank2
  4582  0D7A  140F               	bsf	15,0	;volatile
  4583                           
  4584                           ;LEDs.c: 50: break;
  4585  0D7B  0008               	return
  4586  0D7C                     l407:	
  4587                           ;LEDs.c: 51: case 2:
  4588                           
  4589                           
  4590                           ;LEDs.c: 52: LATDbits.LATD1 = 1;
  4591  0D7C  0022               	movlb	2	; select bank2
  4592  0D7D  148F               	bsf	15,1	;volatile
  4593                           
  4594                           ;LEDs.c: 53: break;
  4595  0D7E  0008               	return
  4596  0D7F                     l408:	
  4597                           ;LEDs.c: 54: case 3:
  4598                           
  4599                           
  4600                           ;LEDs.c: 55: LATDbits.LATD2 = 1;
  4601  0D7F  0022               	movlb	2	; select bank2
  4602  0D80  150F               	bsf	15,2	;volatile
  4603                           
  4604                           ;LEDs.c: 56: break;
  4605  0D81  0008               	return
  4606  0D82                     l409:	
  4607                           ;LEDs.c: 57: case 4:
  4608                           
  4609                           
  4610                           ;LEDs.c: 58: LATDbits.LATD3 = 1;
  4611  0D82  0022               	movlb	2	; select bank2
  4612  0D83  158F               	bsf	15,3	;volatile
  4613                           
  4614                           ;LEDs.c: 59: break;
  4615  0D84  0008               	return
  4616  0D85                     l410:	
  4617                           ;LEDs.c: 60: case 5:
  4618                           
  4619                           
  4620                           ;LEDs.c: 61: LATDbits.LATD4 = 1;
  4621  0D85  0022               	movlb	2	; select bank2
  4622  0D86  160F               	bsf	15,4	;volatile
  4623                           
  4624                           ;LEDs.c: 65: }
  4625                           
  4626                           ;LEDs.c: 64: break;
  4627                           
  4628                           ;LEDs.c: 63: case 6:
  4629                           
  4630                           ;LEDs.c: 62: break;
  4631  0D87  0008               	return
  4632  0D88                     l1758:	
  4633                           
  4634                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4635                           ; Switch size 1, requested type "space"
  4636                           ; Number of cases is 1, Range of values is 0 to 0
  4637                           ; switch strategies available:
  4638                           ; Name         Instructions Cycles
  4639                           ; simple_byte            4     3 (average)
  4640                           ; direct_byte            8     6 (fixed)
  4641                           ; jumptable            260     6 (fixed)
  4642                           ;	Chosen strategy is simple_byte
  4643  0D88  0020               	movlb	0	; select bank0
  4644  0D89  0843               	movf	set_leds_bottom@x+1,w
  4645  0D8A  3A00               	xorlw	0	; case 0
  4646  0D8B  1903               	skipnz
  4647  0D8C  2D8E               	goto	l2110
  4648  0D8D  2DA2               	goto	l412
  4649  0D8E                     l2110:	
  4650                           
  4651                           ; Switch size 1, requested type "space"
  4652                           ; Number of cases is 6, Range of values is 1 to 6
  4653                           ; switch strategies available:
  4654                           ; Name         Instructions Cycles
  4655                           ; simple_byte           19    10 (average)
  4656                           ; direct_byte           21     9 (fixed)
  4657                           ; jumptable            263     9 (fixed)
  4658                           ;	Chosen strategy is simple_byte
  4659  0D8E  0842               	movf	set_leds_bottom@x,w
  4660  0D8F  3A01               	xorlw	1	; case 1
  4661  0D90  1903               	skipnz
  4662  0D91  2D79               	goto	l405
  4663  0D92  3A03               	xorlw	3	; case 2
  4664  0D93  1903               	skipnz
  4665  0D94  2D7C               	goto	l407
  4666  0D95  3A01               	xorlw	1	; case 3
  4667  0D96  1903               	skipnz
  4668  0D97  2D7F               	goto	l408
  4669  0D98  3A07               	xorlw	7	; case 4
  4670  0D99  1903               	skipnz
  4671  0D9A  2D82               	goto	l409
  4672  0D9B  3A01               	xorlw	1	; case 5
  4673  0D9C  1903               	skipnz
  4674  0D9D  2D85               	goto	l410
  4675  0D9E  3A03               	xorlw	3	; case 6
  4676  0D9F  1903               	skipnz
  4677  0DA0  2DA2               	goto	l412
  4678  0DA1  2DA2               	goto	l412
  4679  0DA2                     l412:	
  4680  0DA2  0008               	return
  4681  0DA3                     __end_of_set_leds_bottom:	
  4682                           
  4683                           	psect	text5
  4684  0590                     __ptext5:	
  4685 ;; *************** function _printf *****************
  4686 ;; Defined at:
  4687 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4690 ;;		 -> STR_1(32), 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  tmpval          4    0        struct .
  4693 ;;  width           2   27[BANK0 ] int 
  4694 ;;  val             2   24[BANK0 ] unsigned int 
  4695 ;;  cp              2    0        PTR const unsigned char 
  4696 ;;  len             2    0        unsigned int 
  4697 ;;  c               1   29[BANK0 ] char 
  4698 ;;  flag            1   26[BANK0 ] unsigned char 
  4699 ;;  prec            1   23[BANK0 ] char 
  4700 ;;  ap              1   22[BANK0 ] PTR void [1]
  4701 ;;		 -> ?_printf(2), 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  2   14[BANK0 ] int 
  4704 ;; Registers used:
  4705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4711 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4712 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4713 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4714 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4715 ;;Total ram usage:       16 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    3
  4718 ;; This function calls:
  4719 ;;		___lwdiv
  4720 ;;		___lwmod
  4721 ;;		___wmul
  4722 ;;		_isdigit
  4723 ;;		_putch
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function _printf
  4731  0590                     _printf:	
  4732                           
  4733                           ;doprnt.c: 466: va_list ap;
  4734                           ;doprnt.c: 499: signed char c;
  4735                           ;doprnt.c: 501: int width;
  4736                           ;doprnt.c: 506: signed char prec;
  4737                           ;doprnt.c: 508: unsigned char flag;
  4738                           ;doprnt.c: 523: union {
  4739                           ;doprnt.c: 524: unsigned long vd;
  4740                           ;doprnt.c: 525: double integ;
  4741                           ;doprnt.c: 526: } tmpval;
  4742                           ;doprnt.c: 528: unsigned int val;
  4743                           ;doprnt.c: 529: unsigned len;
  4744                           ;doprnt.c: 530: const char * cp;
  4745                           ;doprnt.c: 533: *ap = __va_start();
  4746                           
  4747                           ;incstack = 0
  4748                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4749  0590  3052               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4750  0591  0020               	movlb	0	; select bank0
  4751  0592  00D4               	movwf	??_printf
  4752  0593  0854               	movf	??_printf,w
  4753  0594  00D8               	movwf	printf@ap
  4754  0595                     l1878:	
  4755                           ;doprnt.c: 536: while(c = *f++) {
  4756                           
  4757  0595  0020               	movlb	0	; select bank0
  4758  0596  0851               	movf	printf@f+1,w
  4759  0597  00D5               	movwf	??_printf+1
  4760  0598  0850               	movf	printf@f,w
  4761  0599  00D4               	movwf	??_printf
  4762  059A  0AD0               	incf	printf@f,f
  4763  059B  1903               	skipnz
  4764  059C  0AD1               	incf	printf@f+1,f
  4765  059D  0854               	movf	??_printf,w
  4766  059E  0084               	movwf	4
  4767  059F  0855               	movf	??_printf+1,w
  4768  05A0  0085               	movwf	5
  4769  05A1  0800               	movf	0,w	;code access
  4770  05A2  00D6               	movwf	??_printf+2
  4771  05A3  0856               	movf	??_printf+2,w
  4772  05A4  00DF               	movwf	printf@c
  4773  05A5  085F               	movf	printf@c,w
  4774  05A6  1903               	btfsc	3,2
  4775  05A7  0008               	return
  4776                           
  4777                           ;doprnt.c: 538: if(c != '%')
  4778  05A8  3025               	movlw	37
  4779  05A9  065F               	xorwf	printf@c,w
  4780  05AA  1903               	btfsc	3,2
  4781  05AB  2DB1               	goto	l1792
  4782                           
  4783                           ;doprnt.c: 540: {
  4784                           ;doprnt.c: 541: (putch(c) );
  4785  05AC  085F               	movf	printf@c,w
  4786  05AD  318C  2431  3185   	fcall	_putch
  4787                           
  4788                           ;doprnt.c: 542: continue;
  4789  05B0  2D95               	goto	l1878
  4790  05B1                     l1792:	
  4791                           
  4792                           ;doprnt.c: 543: }
  4793                           ;doprnt.c: 546: width = 0;
  4794  05B1  0020               	movlb	0	; select bank0
  4795  05B2  01DD               	clrf	printf@width
  4796  05B3  01DE               	clrf	printf@width+1
  4797                           
  4798                           ;doprnt.c: 548: flag = 0;
  4799  05B4  01DC               	clrf	printf@flag
  4800                           
  4801                           ;doprnt.c: 551: switch(*f) {
  4802                           
  4803                           ;doprnt.c: 550: for(;;) {
  4804  05B5  2DBB               	goto	l1798
  4805  05B6                     l430:	
  4806                           ;doprnt.c: 579: case '0':
  4807                           
  4808                           
  4809                           ;doprnt.c: 580: flag |= 0x04;
  4810  05B6  155C               	bsf	printf@flag,2
  4811                           
  4812                           ;doprnt.c: 581: f++;
  4813  05B7  3001               	movlw	1
  4814  05B8  07D0               	addwf	printf@f,f
  4815  05B9  3000               	movlw	0
  4816  05BA  3DD1               	addwfc	printf@f+1,f
  4817  05BB                     l1798:	
  4818                           ;doprnt.c: 584: }
  4819                           
  4820                           ;doprnt.c: 582: continue;
  4821                           
  4822  05BB  0850               	movf	printf@f,w
  4823  05BC  0084               	movwf	4
  4824  05BD  0851               	movf	printf@f+1,w
  4825  05BE  0085               	movwf	5
  4826  05BF  0800               	movf	0,w	;code access
  4827                           
  4828                           ; Switch size 1, requested type "space"
  4829                           ; Number of cases is 1, Range of values is 48 to 48
  4830                           ; switch strategies available:
  4831                           ; Name         Instructions Cycles
  4832                           ; simple_byte            4     3 (average)
  4833                           ; direct_byte           11     9 (fixed)
  4834                           ; jumptable            263     9 (fixed)
  4835                           ;	Chosen strategy is simple_byte
  4836  05C0  3A30               	xorlw	48	; case 48
  4837  05C1  1903               	skipnz
  4838  05C2  2DB6               	goto	l430
  4839  05C3  2DC4               	goto	l1800
  4840  05C4                     l1800:	
  4841                           ;doprnt.c: 586: }
  4842                           
  4843                           ;doprnt.c: 585: break;
  4844                           
  4845                           
  4846                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4847  05C4  0850               	movf	printf@f,w
  4848  05C5  0084               	movwf	4
  4849  05C6  0851               	movf	printf@f+1,w
  4850  05C7  0085               	movwf	5
  4851  05C8  0800               	movf	0,w	;code access
  4852  05C9  318C  2468  3185   	fcall	_isdigit
  4853  05CC  1C03               	btfss	3,0
  4854  05CD  2DFF               	goto	l1814
  4855                           
  4856                           ;doprnt.c: 598: width = 0;
  4857  05CE  0020               	movlb	0	; select bank0
  4858  05CF  01DD               	clrf	printf@width
  4859  05D0  01DE               	clrf	printf@width+1
  4860  05D1                     l1804:	
  4861                           ;doprnt.c: 599: do {
  4862                           
  4863                           
  4864                           ;doprnt.c: 600: width *= 10;
  4865  05D1  300A               	movlw	10
  4866  05D2  0020               	movlb	0	; select bank0
  4867  05D3  00C2               	movwf	___wmul@multiplier
  4868  05D4  3000               	movlw	0
  4869  05D5  00C3               	movwf	___wmul@multiplier+1
  4870  05D6  085E               	movf	printf@width+1,w
  4871  05D7  00C5               	movwf	___wmul@multiplicand+1
  4872  05D8  085D               	movf	printf@width,w
  4873  05D9  00C4               	movwf	___wmul@multiplicand
  4874  05DA  318C  2489  3185   	fcall	___wmul
  4875  05DD  0020               	movlb	0	; select bank0
  4876  05DE  0843               	movf	?___wmul+1,w
  4877  05DF  00DE               	movwf	printf@width+1
  4878  05E0  0842               	movf	?___wmul,w
  4879  05E1  00DD               	movwf	printf@width
  4880                           
  4881                           ;doprnt.c: 601: width += *f++ - '0';
  4882  05E2  0850               	movf	printf@f,w
  4883  05E3  0084               	movwf	4
  4884  05E4  0851               	movf	printf@f+1,w
  4885  05E5  0085               	movwf	5
  4886  05E6  0800               	movf	0,w	;code access
  4887  05E7  3ED0               	addlw	208
  4888  05E8  00D4               	movwf	??_printf
  4889  05E9  30FF               	movlw	255
  4890  05EA  1803               	skipnc
  4891  05EB  3000               	movlw	0
  4892  05EC  00D5               	movwf	??_printf+1
  4893  05ED  0854               	movf	??_printf,w
  4894  05EE  07DD               	addwf	printf@width,f
  4895  05EF  0855               	movf	??_printf+1,w
  4896  05F0  3DDE               	addwfc	printf@width+1,f
  4897  05F1  3001               	movlw	1
  4898  05F2  07D0               	addwf	printf@f,f
  4899  05F3  3000               	movlw	0
  4900  05F4  3DD1               	addwfc	printf@f+1,f
  4901                           
  4902                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4903  05F5  0850               	movf	printf@f,w
  4904  05F6  0084               	movwf	4
  4905  05F7  0851               	movf	printf@f+1,w
  4906  05F8  0085               	movwf	5
  4907  05F9  0800               	movf	0,w	;code access
  4908  05FA  318C  2468  3185   	fcall	_isdigit
  4909  05FD  1803               	btfsc	3,0
  4910  05FE  2DD1               	goto	l1804
  4911  05FF                     l1814:	
  4912                           ;doprnt.c: 822: }
  4913                           
  4914                           ;doprnt.c: 813: continue;
  4915                           
  4916                           ;doprnt.c: 802: default:
  4917                           
  4918                           ;doprnt.c: 698: case 'i':
  4919                           ;doprnt.c: 699: break;
  4920                           
  4921                           ;doprnt.c: 697: case 'd':
  4922                           
  4923                           ;doprnt.c: 638: goto alldone;
  4924                           
  4925                           ;doprnt.c: 637: case 0:
  4926                           
  4927                           ;doprnt.c: 608: }
  4928                           ;doprnt.c: 635: switch(c = *f++) {
  4929                           
  4930  05FF  0020               	movlb	0	; select bank0
  4931  0600  0851               	movf	printf@f+1,w
  4932  0601  00D5               	movwf	??_printf+1
  4933  0602  0850               	movf	printf@f,w
  4934  0603  00D4               	movwf	??_printf
  4935  0604  0AD0               	incf	printf@f,f
  4936  0605  1903               	skipnz
  4937  0606  0AD1               	incf	printf@f+1,f
  4938  0607  0854               	movf	??_printf,w
  4939  0608  0084               	movwf	4
  4940  0609  0855               	movf	??_printf+1,w
  4941  060A  0085               	movwf	5
  4942  060B  0800               	movf	0,w	;code access
  4943  060C  00DF               	movwf	printf@c
  4944                           
  4945                           ; Switch size 1, requested type "space"
  4946                           ; Number of cases is 3, Range of values is 0 to 105
  4947                           ; switch strategies available:
  4948                           ; Name         Instructions Cycles
  4949                           ; simple_byte           10     6 (average)
  4950                           ; direct_byte          218     6 (fixed)
  4951                           ; jumptable            260     6 (fixed)
  4952                           ;	Chosen strategy is simple_byte
  4953  060D  3A00               	xorlw	0	; case 0
  4954  060E  1903               	skipnz
  4955  060F  2EEA               	goto	l465
  4956  0610  3A64               	xorlw	100	; case 100
  4957  0611  1903               	skipnz
  4958  0612  2E17               	goto	l1816
  4959  0613  3A0D               	xorlw	13	; case 105
  4960  0614  1903               	skipnz
  4961  0615  2E17               	goto	l1816
  4962  0616  2D95               	goto	l1878
  4963  0617                     l1816:	
  4964                           
  4965                           ;doprnt.c: 1253: {
  4966                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4967  0617  0020               	movlb	0	; select bank0
  4968  0618  0858               	movf	printf@ap,w
  4969  0619  0086               	movwf	6
  4970  061A  0187               	clrf	7
  4971  061B  3F40               	moviw [0]fsr1
  4972  061C  00DA               	movwf	printf@val
  4973  061D  3F41               	moviw [1]fsr1
  4974  061E  00DB               	movwf	printf@val+1
  4975  061F  3002               	movlw	2
  4976  0620  00D4               	movwf	??_printf
  4977  0621  0854               	movf	??_printf,w
  4978  0622  07D8               	addwf	printf@ap,f
  4979                           
  4980                           ;doprnt.c: 1261: if((int)val < 0) {
  4981  0623  1FDB               	btfss	printf@val+1,7
  4982  0624  2E2E               	goto	l1826
  4983                           
  4984                           ;doprnt.c: 1262: flag |= 0x03;
  4985  0625  3003               	movlw	3
  4986  0626  00D4               	movwf	??_printf
  4987  0627  0854               	movf	??_printf,w
  4988  0628  04DC               	iorwf	printf@flag,f
  4989                           
  4990                           ;doprnt.c: 1263: val = -val;
  4991  0629  09DA               	comf	printf@val,f
  4992  062A  09DB               	comf	printf@val+1,f
  4993  062B  0ADA               	incf	printf@val,f
  4994  062C  1903               	skipnz
  4995  062D  0ADB               	incf	printf@val+1,f
  4996  062E                     l1826:	
  4997                           
  4998                           ;doprnt.c: 1264: }
  4999                           ;doprnt.c: 1266: }
  5000                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5001  062E  01DF               	clrf	printf@c
  5002  062F  0ADF               	incf	printf@c,f
  5003  0630  3005               	movlw	5
  5004  0631  065F               	xorwf	printf@c,w
  5005  0632  1903               	btfsc	3,2
  5006  0633  2E53               	goto	l1838
  5007  0634                     l1832:	
  5008                           
  5009                           ;doprnt.c: 1306: if(val < dpowers[c])
  5010  0634  085F               	movf	printf@c,w
  5011  0635  00D4               	movwf	??_printf
  5012  0636  01D5               	clrf	??_printf+1
  5013  0637  35D4               	lslf	??_printf,f
  5014  0638  0DD5               	rlf	??_printf+1,f
  5015  0639  3000               	movlw	low (_dpowers| (0+32768))
  5016  063A  0754               	addwf	??_printf,w
  5017  063B  0084               	movwf	4
  5018  063C  3090               	movlw	high (_dpowers| (0+32768))
  5019  063D  3D55               	addwfc	??_printf+1,w
  5020  063E  0085               	movwf	5
  5021  063F  3F00               	moviw [0]fsr0
  5022  0640  00D6               	movwf	??_printf+2
  5023  0641  3F01               	moviw [1]fsr0
  5024  0642  00D7               	movwf	??_printf+3
  5025  0643  0857               	movf	??_printf+3,w
  5026  0644  025B               	subwf	printf@val+1,w
  5027  0645  1D03               	skipz
  5028  0646  2E49               	goto	u1055
  5029  0647  0856               	movf	??_printf+2,w
  5030  0648  025A               	subwf	printf@val,w
  5031  0649                     u1055:	
  5032  0649  1C03               	btfss	3,0
  5033  064A  2E53               	goto	l1838
  5034                           
  5035                           ;doprnt.c: 1307: break;
  5036  064B  3001               	movlw	1
  5037  064C  00D4               	movwf	??_printf
  5038  064D  0854               	movf	??_printf,w
  5039  064E  07DF               	addwf	printf@c,f
  5040  064F  3005               	movlw	5
  5041  0650  065F               	xorwf	printf@c,w
  5042  0651  1D03               	btfss	3,2
  5043  0652  2E34               	goto	l1832
  5044  0653                     l1838:	
  5045                           
  5046                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5047  0653  085D               	movf	printf@width,w
  5048  0654  045E               	iorwf	printf@width+1,w
  5049  0655  1903               	btfsc	3,2
  5050  0656  2E5F               	goto	l448
  5051  0657  085C               	movf	printf@flag,w
  5052  0658  3903               	andlw	3
  5053  0659  1903               	btfsc	3,2
  5054  065A  2E5F               	goto	l448
  5055                           
  5056                           ;doprnt.c: 1346: width--;
  5057  065B  30FF               	movlw	255
  5058  065C  07DD               	addwf	printf@width,f
  5059  065D  30FF               	movlw	255
  5060  065E  3DDE               	addwfc	printf@width+1,f
  5061  065F                     l448:	
  5062                           
  5063                           ;doprnt.c: 1381: if(width > c)
  5064  065F  085F               	movf	printf@c,w
  5065  0660  00D4               	movwf	??_printf
  5066  0661  01D5               	clrf	??_printf+1
  5067  0662  1BD4               	btfsc	??_printf,7
  5068  0663  03D5               	decf	??_printf+1,f
  5069  0664  0855               	movf	??_printf+1,w
  5070  0665  3A80               	xorlw	128
  5071  0666  00D6               	movwf	??_printf+2
  5072  0667  085E               	movf	printf@width+1,w
  5073  0668  3A80               	xorlw	128
  5074  0669  0256               	subwf	??_printf+2,w
  5075  066A  1D03               	skipz
  5076  066B  2E6E               	goto	u1095
  5077  066C  085D               	movf	printf@width,w
  5078  066D  0254               	subwf	??_printf,w
  5079  066E                     u1095:	
  5080  066E  1803               	skipnc
  5081  066F  2E7B               	goto	l1846
  5082                           
  5083                           ;doprnt.c: 1382: width -= c;
  5084  0670  0020               	movlb	0	; select bank0
  5085  0671  085F               	movf	printf@c,w
  5086  0672  00D4               	movwf	??_printf
  5087  0673  01D5               	clrf	??_printf+1
  5088  0674  1BD4               	btfsc	??_printf,7
  5089  0675  03D5               	decf	??_printf+1,f
  5090  0676  0854               	movf	??_printf,w
  5091  0677  02DD               	subwf	printf@width,f
  5092  0678  0855               	movf	??_printf+1,w
  5093  0679  3BDE               	subwfb	printf@width+1,f
  5094  067A  2E7E               	goto	l1848
  5095  067B                     l1846:	
  5096                           
  5097                           ;doprnt.c: 1383: else
  5098                           ;doprnt.c: 1384: width = 0;
  5099  067B  0020               	movlb	0	; select bank0
  5100  067C  01DD               	clrf	printf@width
  5101  067D  01DE               	clrf	printf@width+1
  5102  067E                     l1848:	
  5103                           
  5104                           ;doprnt.c: 1387: if(flag & 0x04) {
  5105  067E  1D5C               	btfss	printf@flag,2
  5106  067F  2E97               	goto	l1860
  5107                           
  5108                           ;doprnt.c: 1392: if(flag & 0x03)
  5109  0680  085C               	movf	printf@flag,w
  5110  0681  3903               	andlw	3
  5111  0682  1903               	btfsc	3,2
  5112  0683  2E88               	goto	l1854
  5113                           
  5114                           ;doprnt.c: 1393: (putch('-') );
  5115  0684  302D               	movlw	45
  5116  0685  318C  2431  3185   	fcall	_putch
  5117  0688                     l1854:	
  5118                           
  5119                           ;doprnt.c: 1415: if(width)
  5120  0688  0020               	movlb	0	; select bank0
  5121  0689                     L3:	
  5122  0689  085D               	movf	printf@width,w
  5123  068A  045E               	iorwf	printf@width+1,w
  5124  068B  1903               	btfsc	3,2
  5125  068C  2EB0               	goto	l1870
  5126                           
  5127                           ;doprnt.c: 1417: (putch('0') );
  5128                           
  5129                           ;doprnt.c: 1416: do
  5130  068D  3030               	movlw	48
  5131  068E  318C  2431  3185   	fcall	_putch
  5132                           
  5133                           ;doprnt.c: 1418: while(--width);
  5134  0691  30FF               	movlw	255
  5135  0692  0020               	movlb	0	; select bank0
  5136  0693  07DD               	addwf	printf@width,f
  5137  0694  30FF               	movlw	255
  5138  0695  3DDE               	addwfc	printf@width+1,f
  5139  0696  2E89               	goto	L3
  5140  0697                     l1860:	
  5141                           ;doprnt.c: 1420: } else
  5142                           
  5143                           
  5144                           ;doprnt.c: 1422: {
  5145                           ;doprnt.c: 1424: if(width
  5146                           ;doprnt.c: 1428: )
  5147  0697  085D               	movf	printf@width,w
  5148  0698  045E               	iorwf	printf@width+1,w
  5149  0699  1903               	btfsc	3,2
  5150  069A  2EA8               	goto	l1866
  5151  069B                     l1862:	
  5152                           ;doprnt.c: 1429: do
  5153                           
  5154                           
  5155                           ;doprnt.c: 1430: (putch(' ') );
  5156  069B  3020               	movlw	32
  5157  069C  318C  2431  3185   	fcall	_putch
  5158                           
  5159                           ;doprnt.c: 1431: while(--width);
  5160  069F  30FF               	movlw	255
  5161  06A0  0020               	movlb	0	; select bank0
  5162  06A1  07DD               	addwf	printf@width,f
  5163  06A2  30FF               	movlw	255
  5164  06A3  3DDE               	addwfc	printf@width+1,f
  5165  06A4  085D               	movf	printf@width,w
  5166  06A5  045E               	iorwf	printf@width+1,w
  5167  06A6  1D03               	btfss	3,2
  5168  06A7  2E9B               	goto	l1862
  5169  06A8                     l1866:	
  5170                           
  5171                           ;doprnt.c: 1438: if(flag & 0x03)
  5172  06A8  085C               	movf	printf@flag,w
  5173  06A9  3903               	andlw	3
  5174  06AA  1903               	btfsc	3,2
  5175  06AB  2EB0               	goto	l1870
  5176                           
  5177                           ;doprnt.c: 1439: (putch('-') );
  5178  06AC  302D               	movlw	45
  5179  06AD  318C  2431  3185   	fcall	_putch
  5180  06B0                     l1870:	
  5181                           
  5182                           ;doprnt.c: 1469: }
  5183                           ;doprnt.c: 1472: prec = c;
  5184  06B0  0020               	movlb	0	; select bank0
  5185  06B1  085F               	movf	printf@c,w
  5186  06B2  00D4               	movwf	??_printf
  5187  06B3  0854               	movf	??_printf,w
  5188  06B4  00D9               	movwf	printf@prec
  5189  06B5                     l1876:	
  5190                           ;doprnt.c: 1474: while(prec--) {
  5191                           
  5192  06B5  30FF               	movlw	255
  5193  06B6  0020               	movlb	0	; select bank0
  5194  06B7  00D4               	movwf	??_printf
  5195  06B8  0854               	movf	??_printf,w
  5196  06B9  07D9               	addwf	printf@prec,f
  5197  06BA  0A59               	incf	printf@prec,w
  5198  06BB  1903               	btfsc	3,2
  5199  06BC  2D95               	goto	l1878
  5200                           
  5201                           ;doprnt.c: 1478: {
  5202                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5203  06BD  300A               	movlw	10
  5204  06BE  00CA               	movwf	___lwmod@divisor
  5205  06BF  3000               	movlw	0
  5206  06C0  00CB               	movwf	___lwmod@divisor+1
  5207  06C1  0859               	movf	printf@prec,w
  5208  06C2  00D4               	movwf	??_printf
  5209  06C3  01D5               	clrf	??_printf+1
  5210  06C4  35D4               	lslf	??_printf,f
  5211  06C5  0DD5               	rlf	??_printf+1,f
  5212  06C6  3000               	movlw	low (_dpowers| (0+32768))
  5213  06C7  0754               	addwf	??_printf,w
  5214  06C8  0084               	movwf	4
  5215  06C9  3090               	movlw	high (_dpowers| (0+32768))
  5216  06CA  3D55               	addwfc	??_printf+1,w
  5217  06CB  0085               	movwf	5
  5218  06CC  3F00               	moviw [0]fsr0
  5219  06CD  00C2               	movwf	___lwdiv@divisor
  5220  06CE  3F01               	moviw [1]fsr0
  5221  06CF  00C3               	movwf	___lwdiv@divisor+1
  5222  06D0  085B               	movf	printf@val+1,w
  5223  06D1  00C5               	movwf	___lwdiv@dividend+1
  5224  06D2  085A               	movf	printf@val,w
  5225  06D3  00C4               	movwf	___lwdiv@dividend
  5226  06D4  318D  25D4  3185   	fcall	___lwdiv
  5227  06D7  0020               	movlb	0	; select bank0
  5228  06D8  0843               	movf	?___lwdiv+1,w
  5229  06D9  00CD               	movwf	___lwmod@dividend+1
  5230  06DA  0842               	movf	?___lwdiv,w
  5231  06DB  00CC               	movwf	___lwmod@dividend
  5232  06DC  318C  24E5  3185   	fcall	___lwmod
  5233  06DF  0020               	movlb	0	; select bank0
  5234  06E0  084A               	movf	?___lwmod,w
  5235  06E1  3E30               	addlw	48
  5236  06E2  00D6               	movwf	??_printf+2
  5237  06E3  0856               	movf	??_printf+2,w
  5238  06E4  00DF               	movwf	printf@c
  5239                           
  5240                           ;doprnt.c: 1523: }
  5241                           ;doprnt.c: 1524: (putch(c) );
  5242  06E5  085F               	movf	printf@c,w
  5243  06E6  318C  2431  3185   	fcall	_putch
  5244  06E9  2EB5               	goto	l1876
  5245  06EA                     l465:	
  5246                           ;doprnt.c: 1540: return 0;
  5247                           ;	Return value of _printf is never used
  5248                           
  5249                           ;doprnt.c: 1525: }
  5250                           ;doprnt.c: 1533: }
  5251                           ;doprnt.c: 1535: alldone:
  5252                           
  5253  06EA  0008               	return
  5254  06EB                     __end_of_printf:	
  5255                           
  5256                           	psect	text6
  5257  0C31                     __ptext6:	
  5258 ;; *************** function _putch *****************
  5259 ;; Defined at:
  5260 ;;		line 176 in file "user.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  data            1    wreg     unsigned char 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  data            1    0[BANK0 ] unsigned char 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5277 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5278 ;;Total ram usage:        1 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    2
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_printf
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           
  5289                           ;psect for function _putch
  5290  0C31                     _putch:	
  5291                           
  5292                           ;incstack = 0
  5293                           ; Regs used in _putch: [wreg]
  5294                           ;putch@data stored from wreg
  5295  0C31  0020               	movlb	0	; select bank0
  5296  0C32  00C2               	movwf	putch@data
  5297  0C33                     l342:	
  5298                           ;user.c: 178: continue;
  5299                           
  5300                           ;user.c: 177: while(!PIR1bits.TXIF)
  5301                           
  5302  0C33  1E11               	btfss	17,4	;volatile
  5303  0C34  2C33               	goto	l342
  5304                           
  5305                           ;user.c: 179: TXREG = data;
  5306  0C35  0842               	movf	putch@data,w
  5307  0C36  0023               	movlb	3	; select bank3
  5308  0C37  009A               	movwf	26	;volatile
  5309  0C38  0008               	return
  5310  0C39                     __end_of_putch:	
  5311                           
  5312                           	psect	text7
  5313  0C68                     __ptext7:	
  5314 ;; *************** function _isdigit *****************
  5315 ;; Defined at:
  5316 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  c               1    wreg     unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  c               1    1[BANK0 ] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;		None               void
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5331 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5334 ;;Total ram usage:        2 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    2
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_printf
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           
  5345                           ;psect for function _isdigit
  5346  0C68                     _isdigit:	
  5347                           
  5348                           ;incstack = 0
  5349                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5350                           ;isdigit@c stored from wreg
  5351  0C68  0020               	movlb	0	; select bank0
  5352  0C69  00C3               	movwf	isdigit@c
  5353  0C6A  01C2               	clrf	_isdigit$1435
  5354  0C6B  303A               	movlw	58
  5355  0C6C  0243               	subwf	isdigit@c,w
  5356  0C6D  1803               	skipnc
  5357  0C6E  2C75               	goto	l1640
  5358  0C6F  3030               	movlw	48
  5359  0C70  0243               	subwf	isdigit@c,w
  5360  0C71  1C03               	skipc
  5361  0C72  2C75               	goto	l1640
  5362  0C73  01C2               	clrf	_isdigit$1435
  5363  0C74  0AC2               	incf	_isdigit$1435,f
  5364  0C75                     l1640:	
  5365  0C75  0C42               	rrf	_isdigit$1435,w
  5366  0C76  0008               	return
  5367  0C77                     __end_of_isdigit:	
  5368                           
  5369                           	psect	text8
  5370  0C89                     __ptext8:	
  5371 ;; *************** function ___wmul *****************
  5372 ;; Defined at:
  5373 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5376 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  product         2    4[BANK0 ] unsigned int 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  2    0[BANK0 ] unsigned int 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5388 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5389 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5391 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5392 ;;Total ram usage:        6 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    2
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_printf
  5399 ;;		_modulation
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           
  5404                           ;psect for function ___wmul
  5405  0C89                     ___wmul:	
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5409  0C89  0020               	movlb	0	; select bank0
  5410  0C8A  01C6               	clrf	___wmul@product
  5411  0C8B  01C7               	clrf	___wmul@product+1
  5412  0C8C                     l1646:	
  5413  0C8C  1C42               	btfss	___wmul@multiplier,0
  5414  0C8D  2C92               	goto	l469
  5415  0C8E  0844               	movf	___wmul@multiplicand,w
  5416  0C8F  07C6               	addwf	___wmul@product,f
  5417  0C90  0845               	movf	___wmul@multiplicand+1,w
  5418  0C91  3DC7               	addwfc	___wmul@product+1,f
  5419  0C92                     l469:	
  5420  0C92  3001               	movlw	1
  5421  0C93                     u775:	
  5422  0C93  35C4               	lslf	___wmul@multiplicand,f
  5423  0C94  0DC5               	rlf	___wmul@multiplicand+1,f
  5424  0C95  0B89               	decfsz	9,f
  5425  0C96  2C93               	goto	u775
  5426  0C97  3001               	movlw	1
  5427  0C98                     u785:	
  5428  0C98  36C3               	lsrf	___wmul@multiplier+1,f
  5429  0C99  0CC2               	rrf	___wmul@multiplier,f
  5430  0C9A  0B89               	decfsz	9,f
  5431  0C9B  2C98               	goto	u785
  5432  0C9C  0842               	movf	___wmul@multiplier,w
  5433  0C9D  0443               	iorwf	___wmul@multiplier+1,w
  5434  0C9E  1D03               	btfss	3,2
  5435  0C9F  2C8C               	goto	l1646
  5436  0CA0  0847               	movf	___wmul@product+1,w
  5437  0CA1  00C3               	movwf	?___wmul+1
  5438  0CA2  0846               	movf	___wmul@product,w
  5439  0CA3  00C2               	movwf	?___wmul
  5440  0CA4  0008               	return
  5441  0CA5                     __end_of___wmul:	
  5442                           
  5443                           	psect	text9
  5444  0CE5                     __ptext9:	
  5445 ;; *************** function ___lwmod *****************
  5446 ;; Defined at:
  5447 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  divisor         2    8[BANK0 ] unsigned int 
  5450 ;;  dividend        2   10[BANK0 ] unsigned int 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  counter         1   13[BANK0 ] unsigned char 
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  2    8[BANK0 ] unsigned int 
  5455 ;; Registers used:
  5456 ;;		wreg, status,2, status,0
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5464 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5465 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5466 ;;Total ram usage:        6 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; Hardware stack levels required when called:    2
  5469 ;; This function calls:
  5470 ;;		Nothing
  5471 ;; This function is called by:
  5472 ;;		_printf
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           
  5477                           ;psect for function ___lwmod
  5478  0CE5                     ___lwmod:	
  5479                           
  5480                           ;incstack = 0
  5481                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5482  0CE5  0020               	movlb	0	; select bank0
  5483  0CE6  084A               	movf	___lwmod@divisor,w
  5484  0CE7  044B               	iorwf	___lwmod@divisor+1,w
  5485  0CE8  1903               	btfsc	3,2
  5486  0CE9  2D0D               	goto	l1716
  5487  0CEA  01CF               	clrf	___lwmod@counter
  5488  0CEB  0ACF               	incf	___lwmod@counter,f
  5489  0CEC                     l1706:	
  5490  0CEC  1BCB               	btfsc	___lwmod@divisor+1,7
  5491  0CED  2CF8               	goto	l1708
  5492  0CEE  3001               	movlw	1
  5493  0CEF                     u925:	
  5494  0CEF  35CA               	lslf	___lwmod@divisor,f
  5495  0CF0  0DCB               	rlf	___lwmod@divisor+1,f
  5496  0CF1  0B89               	decfsz	9,f
  5497  0CF2  2CEF               	goto	u925
  5498  0CF3  3001               	movlw	1
  5499  0CF4  00CE               	movwf	??___lwmod
  5500  0CF5  084E               	movf	??___lwmod,w
  5501  0CF6  07CF               	addwf	___lwmod@counter,f
  5502  0CF7  2CEC               	goto	l1706
  5503  0CF8                     l1708:	
  5504  0CF8  084B               	movf	___lwmod@divisor+1,w
  5505  0CF9  024D               	subwf	___lwmod@dividend+1,w
  5506  0CFA  1D03               	skipz
  5507  0CFB  2CFE               	goto	u945
  5508  0CFC  084A               	movf	___lwmod@divisor,w
  5509  0CFD  024C               	subwf	___lwmod@dividend,w
  5510  0CFE                     u945:	
  5511  0CFE  1C03               	skipc
  5512  0CFF  2D04               	goto	l1712
  5513  0D00  084A               	movf	___lwmod@divisor,w
  5514  0D01  02CC               	subwf	___lwmod@dividend,f
  5515  0D02  084B               	movf	___lwmod@divisor+1,w
  5516  0D03  3BCD               	subwfb	___lwmod@dividend+1,f
  5517  0D04                     l1712:	
  5518  0D04  3001               	movlw	1
  5519  0D05                     u955:	
  5520  0D05  36CB               	lsrf	___lwmod@divisor+1,f
  5521  0D06  0CCA               	rrf	___lwmod@divisor,f
  5522  0D07  0B89               	decfsz	9,f
  5523  0D08  2D05               	goto	u955
  5524  0D09  3001               	movlw	1
  5525  0D0A  02CF               	subwf	___lwmod@counter,f
  5526  0D0B  1D03               	btfss	3,2
  5527  0D0C  2CF8               	goto	l1708
  5528  0D0D                     l1716:	
  5529  0D0D  084D               	movf	___lwmod@dividend+1,w
  5530  0D0E  00CB               	movwf	?___lwmod+1
  5531  0D0F  084C               	movf	___lwmod@dividend,w
  5532  0D10  00CA               	movwf	?___lwmod
  5533  0D11  0008               	return
  5534  0D12                     __end_of___lwmod:	
  5535                           
  5536                           	psect	text10
  5537  0DD4                     __ptext10:	
  5538 ;; *************** function ___lwdiv *****************
  5539 ;; Defined at:
  5540 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  divisor         2    0[BANK0 ] unsigned int 
  5543 ;;  dividend        2    2[BANK0 ] unsigned int 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  quotient        2    5[BANK0 ] unsigned int 
  5546 ;;  counter         1    7[BANK0 ] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  2    0[BANK0 ] unsigned int 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5556 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5557 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5558 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5559 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5560 ;;Total ram usage:        8 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    2
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_printf
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           
  5571                           ;psect for function ___lwdiv
  5572  0DD4                     ___lwdiv:	
  5573                           
  5574                           ;incstack = 0
  5575                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5576  0DD4  0020               	movlb	0	; select bank0
  5577  0DD5  01C7               	clrf	___lwdiv@quotient
  5578  0DD6  01C8               	clrf	___lwdiv@quotient+1
  5579  0DD7  0842               	movf	___lwdiv@divisor,w
  5580  0DD8  0443               	iorwf	___lwdiv@divisor+1,w
  5581  0DD9  1903               	btfsc	3,2
  5582  0DDA  2E04               	goto	l1694
  5583  0DDB  01C9               	clrf	___lwdiv@counter
  5584  0DDC  0AC9               	incf	___lwdiv@counter,f
  5585  0DDD                     l1682:	
  5586  0DDD  1BC3               	btfsc	___lwdiv@divisor+1,7
  5587  0DDE  2DE9               	goto	l1684
  5588  0DDF  3001               	movlw	1
  5589  0DE0                     u855:	
  5590  0DE0  35C2               	lslf	___lwdiv@divisor,f
  5591  0DE1  0DC3               	rlf	___lwdiv@divisor+1,f
  5592  0DE2  0B89               	decfsz	9,f
  5593  0DE3  2DE0               	goto	u855
  5594  0DE4  3001               	movlw	1
  5595  0DE5  00C6               	movwf	??___lwdiv
  5596  0DE6  0846               	movf	??___lwdiv,w
  5597  0DE7  07C9               	addwf	___lwdiv@counter,f
  5598  0DE8  2DDD               	goto	l1682
  5599  0DE9                     l1684:	
  5600  0DE9  3001               	movlw	1
  5601  0DEA                     u875:	
  5602  0DEA  35C7               	lslf	___lwdiv@quotient,f
  5603  0DEB  0DC8               	rlf	___lwdiv@quotient+1,f
  5604  0DEC  0B89               	decfsz	9,f
  5605  0DED  2DEA               	goto	u875
  5606  0DEE  0843               	movf	___lwdiv@divisor+1,w
  5607  0DEF  0245               	subwf	___lwdiv@dividend+1,w
  5608  0DF0  1D03               	skipz
  5609  0DF1  2DF4               	goto	u885
  5610  0DF2  0842               	movf	___lwdiv@divisor,w
  5611  0DF3  0244               	subwf	___lwdiv@dividend,w
  5612  0DF4                     u885:	
  5613  0DF4  1C03               	skipc
  5614  0DF5  2DFB               	goto	l1690
  5615  0DF6  0842               	movf	___lwdiv@divisor,w
  5616  0DF7  02C4               	subwf	___lwdiv@dividend,f
  5617  0DF8  0843               	movf	___lwdiv@divisor+1,w
  5618  0DF9  3BC5               	subwfb	___lwdiv@dividend+1,f
  5619  0DFA  1447               	bsf	___lwdiv@quotient,0
  5620  0DFB                     l1690:	
  5621  0DFB  3001               	movlw	1
  5622  0DFC                     u895:	
  5623  0DFC  36C3               	lsrf	___lwdiv@divisor+1,f
  5624  0DFD  0CC2               	rrf	___lwdiv@divisor,f
  5625  0DFE  0B89               	decfsz	9,f
  5626  0DFF  2DFC               	goto	u895
  5627  0E00  3001               	movlw	1
  5628  0E01  02C9               	subwf	___lwdiv@counter,f
  5629  0E02  1D03               	btfss	3,2
  5630  0E03  2DE9               	goto	l1684
  5631  0E04                     l1694:	
  5632  0E04  0848               	movf	___lwdiv@quotient+1,w
  5633  0E05  00C3               	movwf	?___lwdiv+1
  5634  0E06  0847               	movf	___lwdiv@quotient,w
  5635  0E07  00C2               	movwf	?___lwdiv
  5636  0E08  0008               	return
  5637  0E09                     __end_of___lwdiv:	
  5638                           
  5639                           	psect	text11
  5640  0C26                     __ptext11:	
  5641 ;; *************** function _init_uart *****************
  5642 ;; Defined at:
  5643 ;;		line 182 in file "user.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;		None
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;		None
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  1    wreg      void 
  5650 ;; Registers used:
  5651 ;;		None
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5661 ;;Total ram usage:        0 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    2
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_main
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           
  5672                           ;psect for function _init_uart
  5673  0C26                     _init_uart:	
  5674                           
  5675                           ;user.c: 183: TXSTAbits.TXEN = 1;
  5676                           
  5677                           ;incstack = 0
  5678                           ; Regs used in _init_uart: []
  5679  0C26  0023               	movlb	3	; select bank3
  5680  0C27  169E               	bsf	30,5	;volatile
  5681                           
  5682                           ;user.c: 184: RCSTAbits.SPEN = 1;
  5683  0C28  179D               	bsf	29,7	;volatile
  5684  0C29  0008               	return
  5685  0C2A                     __end_of_init_uart:	
  5686                           
  5687                           	psect	text12
  5688  0D12                     __ptext12:	
  5689 ;; *************** function _InitApp *****************
  5690 ;; Defined at:
  5691 ;;		line 23 in file "user.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;		None
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;		None
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  1    wreg      void 
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0, pclath, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5709 ;;Total ram usage:        0 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    4
  5712 ;; This function calls:
  5713 ;;		_init_adc
  5714 ;;		_init_pwm
  5715 ;; This function is called by:
  5716 ;;		_main
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           
  5721                           ;psect for function _InitApp
  5722  0D12                     _InitApp:	
  5723                           
  5724                           ;user.c: 24: TRISBbits.TRISB0 = 0;
  5725                           
  5726                           ;incstack = 0
  5727                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  5728  0D12  0021               	movlb	1	; select bank1
  5729  0D13  100D               	bcf	13,0	;volatile
  5730                           
  5731                           ;user.c: 25: TRISBbits.TRISB1 = 0;
  5732  0D14  108D               	bcf	13,1	;volatile
  5733                           
  5734                           ;user.c: 26: TRISBbits.TRISB2 = 0;
  5735  0D15  110D               	bcf	13,2	;volatile
  5736                           
  5737                           ;user.c: 27: TRISBbits.TRISB3 = 0;
  5738  0D16  118D               	bcf	13,3	;volatile
  5739                           
  5740                           ;user.c: 28: TRISBbits.TRISB4 = 0;
  5741  0D17  120D               	bcf	13,4	;volatile
  5742                           
  5743                           ;user.c: 29: TRISBbits.TRISB5 = 0;
  5744  0D18  128D               	bcf	13,5	;volatile
  5745                           
  5746                           ;user.c: 31: TRISCbits.TRISC0 = 1;
  5747  0D19  140E               	bsf	14,0	;volatile
  5748                           
  5749                           ;user.c: 32: TRISCbits.TRISC4 = 0;
  5750  0D1A  120E               	bcf	14,4	;volatile
  5751                           
  5752                           ;user.c: 33: TRISCbits.TRISC5 = 0;
  5753  0D1B  128E               	bcf	14,5	;volatile
  5754                           
  5755                           ;user.c: 36: TRISDbits.TRISD0 = 0;
  5756  0D1C  100F               	bcf	15,0	;volatile
  5757                           
  5758                           ;user.c: 37: TRISDbits.TRISD1 = 0;
  5759  0D1D  108F               	bcf	15,1	;volatile
  5760                           
  5761                           ;user.c: 38: TRISDbits.TRISD2 = 0;
  5762  0D1E  110F               	bcf	15,2	;volatile
  5763                           
  5764                           ;user.c: 39: TRISDbits.TRISD3 = 0;
  5765  0D1F  118F               	bcf	15,3	;volatile
  5766                           
  5767                           ;user.c: 40: TRISDbits.TRISD4 = 0;
  5768  0D20  120F               	bcf	15,4	;volatile
  5769                           
  5770                           ;user.c: 41: TRISDbits.TRISD5 = 1;
  5771  0D21  168F               	bsf	15,5	;volatile
  5772                           
  5773                           ;user.c: 42: TRISDbits.TRISD6 = 1;
  5774  0D22  170F               	bsf	15,6	;volatile
  5775                           
  5776                           ;user.c: 43: TRISDbits.TRISD7 = 1;
  5777  0D23  178F               	bsf	15,7	;volatile
  5778                           
  5779                           ;user.c: 49: TRISEbits.TRISE0 = 1;
  5780  0D24  1410               	bsf	16,0	;volatile
  5781                           
  5782                           ;user.c: 50: TRISEbits.TRISE1 = 1;
  5783  0D25  1490               	bsf	16,1	;volatile
  5784                           
  5785                           ;user.c: 51: ANSELEbits.ANSE0 = 0;
  5786  0D26  0023               	movlb	3	; select bank3
  5787  0D27  1010               	bcf	16,0	;volatile
  5788                           
  5789                           ;user.c: 52: ANSELEbits.ANSE1 = 0;
  5790  0D28  1090               	bcf	16,1	;volatile
  5791                           
  5792                           ;user.c: 53: PORTEbits.RE0 = 0;
  5793  0D29  0020               	movlb	0	; select bank0
  5794  0D2A  1010               	bcf	16,0	;volatile
  5795                           
  5796                           ;user.c: 54: PORTEbits.RE1 = 0;
  5797  0D2B  1090               	bcf	16,1	;volatile
  5798                           
  5799                           ;user.c: 56: TRISFbits.TRISF0 = 0;
  5800  0D2C  0026               	movlb	6	; select bank6
  5801  0D2D  100C               	bcf	12,0	;volatile
  5802                           
  5803                           ;user.c: 57: TRISFbits.TRISF1 = 0;
  5804  0D2E  108C               	bcf	12,1	;volatile
  5805                           
  5806                           ;user.c: 58: TRISFbits.TRISF2 = 0;
  5807  0D2F  110C               	bcf	12,2	;volatile
  5808                           
  5809                           ;user.c: 59: TRISFbits.TRISF3 = 0;
  5810  0D30  118C               	bcf	12,3	;volatile
  5811                           
  5812                           ;user.c: 60: TRISFbits.TRISF4 = 0;
  5813  0D31  120C               	bcf	12,4	;volatile
  5814                           
  5815                           ;user.c: 61: TRISFbits.TRISF5 = 0;
  5816  0D32  128C               	bcf	12,5	;volatile
  5817                           
  5818                           ;user.c: 62: TRISFbits.TRISF6 = 1;
  5819  0D33  170C               	bsf	12,6	;volatile
  5820                           
  5821                           ;user.c: 63: ANSELFbits.ANSF6 = 0;
  5822  0D34  0028               	movlb	8	; select bank8
  5823  0D35  130C               	bcf	12,6	;volatile
  5824                           
  5825                           ;user.c: 65: TRISGbits.TRISG1 = 0;
  5826  0D36  0026               	movlb	6	; select bank6
  5827  0D37  108D               	bcf	13,1	;volatile
  5828                           
  5829                           ;user.c: 66: TRISGbits.TRISG2 = 0;
  5830  0D38  110D               	bcf	13,2	;volatile
  5831                           
  5832                           ;user.c: 68: init_adc();
  5833  0D39  3187  27F6  318D   	fcall	_init_adc
  5834                           
  5835                           ;user.c: 69: init_pwm();
  5836  0D3C  318F  2730         	fcall	_init_pwm
  5837                           
  5838                           ;user.c: 71: INTCONbits.GIE = 0b1;
  5839  0D3E  178B               	bsf	11,7	;volatile
  5840                           
  5841                           ;user.c: 72: INTCONbits.TMR0IE = 0b1;
  5842  0D3F  168B               	bsf	11,5	;volatile
  5843                           
  5844                           ;user.c: 73: INTCONbits.TMR0IF = 0b0;
  5845  0D40  110B               	bcf	11,2	;volatile
  5846  0D41  0008               	return
  5847  0D42                     __end_of_InitApp:	
  5848                           
  5849                           	psect	text13
  5850  0F30                     __ptext13:	
  5851 ;; *************** function _init_pwm *****************
  5852 ;; Defined at:
  5853 ;;		line 117 in file "user.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;		None
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;		None
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      void 
  5860 ;; Registers used:
  5861 ;;		wreg, status,2, status,0, pclath, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5871 ;;Total ram usage:        0 bytes
  5872 ;; Hardware stack levels used:    1
  5873 ;; Hardware stack levels required when called:    3
  5874 ;; This function calls:
  5875 ;;		_init_timer0
  5876 ;;		_init_timer2
  5877 ;; This function is called by:
  5878 ;;		_InitApp
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           
  5883                           ;psect for function _init_pwm
  5884  0F30                     _init_pwm:	
  5885                           
  5886                           ;user.c: 118: APFCONbits.CCP2SEL = 0;
  5887                           
  5888                           ;incstack = 0
  5889                           ; Regs used in _init_pwm: [wreg+status,2+status,0+pclath+cstack]
  5890  0F30  0022               	movlb	2	; select bank2
  5891  0F31  101D               	bcf	29,0	;volatile
  5892                           
  5893                           ;user.c: 119: TRISCbits.TRISC2 = 0;
  5894  0F32  0021               	movlb	1	; select bank1
  5895  0F33  110E               	bcf	14,2	;volatile
  5896                           
  5897                           ;user.c: 120: TRISCbits.TRISC1 = 0;
  5898  0F34  108E               	bcf	14,1	;volatile
  5899                           
  5900                           ;user.c: 121: TRISGbits.TRISG0 = 0;
  5901  0F35  0026               	movlb	6	; select bank6
  5902  0F36  100D               	bcf	13,0	;volatile
  5903                           
  5904                           ;user.c: 122: TRISGbits.TRISG3 = 0;
  5905  0F37  118D               	bcf	13,3	;volatile
  5906                           
  5907                           ;user.c: 123: TRISGbits.TRISG4 = 0;
  5908  0F38  120D               	bcf	13,4	;volatile
  5909                           
  5910                           ;user.c: 124: TRISEbits.TRISE6 = 0;
  5911  0F39  0021               	movlb	1	; select bank1
  5912  0F3A  1310               	bcf	16,6	;volatile
  5913                           
  5914                           ;user.c: 125: TRISEbits.TRISE5 = 0;
  5915  0F3B  1290               	bcf	16,5	;volatile
  5916                           
  5917                           ;user.c: 126: TRISEbits.TRISE4 = 0;
  5918  0F3C  1210               	bcf	16,4	;volatile
  5919                           
  5920                           ;user.c: 127: TRISEbits.TRISE3 = 0;
  5921  0F3D  1190               	bcf	16,3	;volatile
  5922                           
  5923                           ;user.c: 128: TRISEbits.TRISE2 = 0;
  5924  0F3E  1110               	bcf	16,2	;volatile
  5925                           
  5926                           ;user.c: 129: CCP1CONbits.CCP1M = 0b1111;
  5927  0F3F  300F               	movlw	15
  5928  0F40  0025               	movlb	5	; select bank5
  5929  0F41  0493               	iorwf	19,f	;volatile
  5930                           
  5931                           ;user.c: 130: CCP2CONbits.CCP2M = 0b1111;
  5932  0F42  300F               	movlw	15
  5933  0F43  049A               	iorwf	26,f	;volatile
  5934                           
  5935                           ;user.c: 131: CCP3CONbits.CCP3M = 0b1111;
  5936  0F44  300F               	movlw	15
  5937  0F45  0026               	movlb	6	; select bank6
  5938  0F46  0493               	iorwf	19,f	;volatile
  5939                           
  5940                           ;user.c: 132: CCP4CONbits.CCP4M = 0b1111;
  5941  0F47  300F               	movlw	15
  5942  0F48  049A               	iorwf	26,f	;volatile
  5943                           
  5944                           ;user.c: 133: CCP5CONbits.CCP5M = 0b1111;
  5945  0F49  300F               	movlw	15
  5946  0F4A  049E               	iorwf	30,f	;volatile
  5947                           
  5948                           ;user.c: 134: CCP6CONbits.CCP6M = 0b1111;
  5949  0F4B  300F               	movlw	15
  5950  0F4C  002C               	movlb	12	; select bank12
  5951  0F4D  0493               	iorwf	19,f	;volatile
  5952                           
  5953                           ;user.c: 135: CCP7CONbits.CCP7M = 0b1111;
  5954  0F4E  300F               	movlw	15
  5955  0F4F  0496               	iorwf	22,f	;volatile
  5956                           
  5957                           ;user.c: 136: CCP8CONbits.CCP8M = 0b1111;
  5958  0F50  300F               	movlw	15
  5959  0F51  0499               	iorwf	25,f	;volatile
  5960                           
  5961                           ;user.c: 137: CCP9CONbits.CCP9M = 0b1111;
  5962  0F52  300F               	movlw	15
  5963  0F53  049C               	iorwf	28,f	;volatile
  5964                           
  5965                           ;user.c: 138: CCP10CONbits.CCP10M = 0b1111;
  5966  0F54  300F               	movlw	15
  5967  0F55  049F               	iorwf	31,f	;volatile
  5968                           
  5969                           ;user.c: 139: CCPTMRS0 = 0b00000000;
  5970  0F56  0025               	movlb	5	; select bank5
  5971  0F57  019D               	clrf	29	;volatile
  5972                           
  5973                           ;user.c: 140: CCPTMRS1 = 0b00000000;
  5974  0F58  019E               	clrf	30	;volatile
  5975                           
  5976                           ;user.c: 141: CCPTMRS2 = 0b00000000;
  5977  0F59  019F               	clrf	31	;volatile
  5978                           
  5979                           ;user.c: 142: CCPR1 = 50;
  5980  0F5A  3000               	movlw	0
  5981  0F5B  0092               	movwf	18	;volatile
  5982  0F5C  3032               	movlw	50
  5983  0F5D  0091               	movwf	17	;volatile
  5984                           
  5985                           ;user.c: 143: CCPR2 = 100;
  5986  0F5E  3000               	movlw	0
  5987  0F5F  0099               	movwf	25	;volatile
  5988  0F60  3064               	movlw	100
  5989  0F61  0098               	movwf	24	;volatile
  5990                           
  5991                           ;user.c: 144: CCPR3 = 150;
  5992  0F62  3000               	movlw	0
  5993  0F63  0026               	movlb	6	; select bank6
  5994  0F64  0092               	movwf	18	;volatile
  5995  0F65  3096               	movlw	150
  5996  0F66  0091               	movwf	17	;volatile
  5997                           
  5998                           ;user.c: 145: CCPR4 = 200;
  5999  0F67  3000               	movlw	0
  6000  0F68  0099               	movwf	25	;volatile
  6001  0F69  30C8               	movlw	200
  6002  0F6A  0098               	movwf	24	;volatile
  6003                           
  6004                           ;user.c: 146: init_timer2();
  6005  0F6B  318C  2439  318F   	fcall	_init_timer2
  6006                           
  6007                           ;user.c: 147: init_timer0();
  6008  0F6E  318C  242A         	fcall	_init_timer0
  6009  0F70  0008               	return
  6010  0F71                     __end_of_init_pwm:	
  6011                           
  6012                           	psect	text14
  6013  0C39                     __ptext14:	
  6014 ;; *************** function _init_timer2 *****************
  6015 ;; Defined at:
  6016 ;;		line 150 in file "user.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;		None
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;		None
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg, status,2, status,0
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6034 ;;Total ram usage:        0 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    2
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_init_pwm
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           
  6045                           ;psect for function _init_timer2
  6046  0C39                     _init_timer2:	
  6047                           
  6048                           ;user.c: 151: T2CONbits.T2OUTPS = 0b0000;
  6049                           
  6050                           ;incstack = 0
  6051                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  6052  0C39  3087               	movlw	-121
  6053  0C3A  0020               	movlb	0	; select bank0
  6054  0C3B  059C               	andwf	28,f	;volatile
  6055                           
  6056                           ;user.c: 152: T2CONbits.T2CKPS = 0b00;
  6057  0C3C  30FC               	movlw	-4
  6058  0C3D  059C               	andwf	28,f	;volatile
  6059                           
  6060                           ;user.c: 153: PR2 = 0xFF;
  6061  0C3E  30FF               	movlw	255
  6062  0C3F  009B               	movwf	27	;volatile
  6063                           
  6064                           ;user.c: 154: T2CONbits.TMR2ON = 1;
  6065  0C40  151C               	bsf	28,2	;volatile
  6066  0C41  0008               	return
  6067  0C42                     __end_of_init_timer2:	
  6068                           
  6069                           	psect	text15
  6070  0C2A                     __ptext15:	
  6071 ;; *************** function _init_timer0 *****************
  6072 ;; Defined at:
  6073 ;;		line 157 in file "user.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;		None
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;		None
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		None
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6091 ;;Total ram usage:        0 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    2
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_init_pwm
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           
  6102                           ;psect for function _init_timer0
  6103  0C2A                     _init_timer0:	
  6104                           
  6105                           ;user.c: 158: OPTION_REGbits.TMR0CS = 0b0;
  6106                           
  6107                           ;incstack = 0
  6108                           ; Regs used in _init_timer0: []
  6109  0C2A  0021               	movlb	1	; select bank1
  6110  0C2B  1295               	bcf	21,5	;volatile
  6111                           
  6112                           ;user.c: 159: OPTION_REGbits.PSA = 0b0;
  6113  0C2C  1195               	bcf	21,3	;volatile
  6114                           
  6115                           ;user.c: 160: OPTION_REGbits.PS0 = 0b0;
  6116  0C2D  1015               	bcf	21,0	;volatile
  6117                           
  6118                           ;user.c: 161: OPTION_REGbits.PS1 = 0b1;
  6119  0C2E  1495               	bsf	21,1	;volatile
  6120                           
  6121                           ;user.c: 162: OPTION_REGbits.PS2 = 0b0;
  6122  0C2F  1115               	bcf	21,2	;volatile
  6123  0C30  0008               	return
  6124  0C31                     __end_of_init_timer0:	
  6125                           
  6126                           	psect	text16
  6127  07F6                     __ptext16:	
  6128 ;; *************** function _init_adc *****************
  6129 ;; Defined at:
  6130 ;;		line 103 in file "user.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6148 ;;Total ram usage:        0 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    2
  6151 ;; This function calls:
  6152 ;;		Nothing
  6153 ;; This function is called by:
  6154 ;;		_InitApp
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           
  6159                           ;psect for function _init_adc
  6160  07F6                     _init_adc:	
  6161                           
  6162                           ;user.c: 104: ADCON1bits.ADFM = 0b1;
  6163                           
  6164                           ;incstack = 0
  6165                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  6166  07F6  0021               	movlb	1	; select bank1
  6167  07F7  179E               	bsf	30,7	;volatile
  6168                           
  6169                           ;user.c: 105: ADCON1bits.ADCS = 0b110;
  6170  07F8  081E               	movf	30,w	;volatile
  6171  07F9  398F               	andlw	-113
  6172  07FA  3860               	iorlw	96
  6173  07FB  009E               	movwf	30	;volatile
  6174                           
  6175                           ;user.c: 106: ADCON1bits.ADPREF = 0b00;
  6176  07FC  30FC               	movlw	-4
  6177  07FD  059E               	andwf	30,f	;volatile
  6178                           
  6179                           ;user.c: 107: ADCON0bits.ADON = 0b1;
  6180  07FE  141D               	bsf	29,0	;volatile
  6181  07FF  0008               	return
  6182  0800                     __end_of_init_adc:	
  6183                           
  6184                           	psect	text17
  6185  0F71                     __ptext17:	
  6186 ;; *************** function _FLASH_WriteWord *****************
  6187 ;; Defined at:
  6188 ;;		line 74 in file "memory.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;  flashAddr       2   13[BANK0 ] unsigned int 
  6191 ;;  ramBuf          1   15[BANK0 ] PTR unsigned int 
  6192 ;;		 -> myBuf(64), 
  6193 ;;  word            2   16[BANK0 ] unsigned int 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  blockStartAd    2   20[BANK0 ] unsigned int 
  6196 ;;  i               1   22[BANK0 ] unsigned char 
  6197 ;;  offset          1   19[BANK0 ] unsigned char 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6207 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6208 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6209 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6210 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6211 ;;Total ram usage:       10 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:    4
  6214 ;; This function calls:
  6215 ;;		_FLASH_ReadWord
  6216 ;;		_FLASH_WriteBlock
  6217 ;; This function is called by:
  6218 ;;		_main
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           
  6223                           ;psect for function _FLASH_WriteWord
  6224  0F71                     _FLASH_WriteWord:	
  6225                           
  6226                           ;memory.c: 75: uint16_t blockStartAddr = (uint16_t) (flashAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  6227                           
  6228                           ;incstack = 0
  6229                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6230  0F71  30E0               	movlw	224
  6231  0F72  0020               	movlb	0	; select bank0
  6232  0F73  054F               	andwf	FLASH_WriteWord@flashAddr,w
  6233  0F74  00D6               	movwf	FLASH_WriteWord@blockStartAddr
  6234  0F75  303F               	movlw	63
  6235  0F76  0550               	andwf	FLASH_WriteWord@flashAddr+1,w
  6236  0F77  00D7               	movwf	FLASH_WriteWord@blockStartAddr+1
  6237                           
  6238                           ;memory.c: 76: uint8_t offset = (uint8_t) (flashAddr & (32 - 1));
  6239  0F78  084F               	movf	FLASH_WriteWord@flashAddr,w
  6240  0F79  391F               	andlw	31
  6241  0F7A  00D4               	movwf	??_FLASH_WriteWord
  6242  0F7B  0854               	movf	??_FLASH_WriteWord,w
  6243  0F7C  00D5               	movwf	FLASH_WriteWord@offset
  6244                           
  6245                           ;memory.c: 77: uint8_t i;
  6246                           ;memory.c: 80: for (i = 0; i < 32; i++) {
  6247  0F7D  01D8               	clrf	FLASH_WriteWord@i
  6248  0F7E  3020               	movlw	32
  6249  0F7F  0258               	subwf	FLASH_WriteWord@i,w
  6250  0F80  1803               	btfsc	3,0
  6251  0F81  2FA0               	goto	l1778
  6252  0F82                     l1772:	
  6253                           
  6254                           ;memory.c: 81: ramBuf[i] = FLASH_ReadWord((blockStartAddr + i));
  6255  0F82  0858               	movf	FLASH_WriteWord@i,w
  6256  0F83  0756               	addwf	FLASH_WriteWord@blockStartAddr,w
  6257  0F84  00C2               	movwf	FLASH_ReadWord@flashAddr
  6258  0F85  0857               	movf	FLASH_WriteWord@blockStartAddr+1,w
  6259  0F86  1803               	skipnc
  6260  0F87  0A57               	incf	FLASH_WriteWord@blockStartAddr+1,w
  6261  0F88  00C3               	movwf	FLASH_ReadWord@flashAddr+1
  6262  0F89  318C  24A5  318F   	fcall	_FLASH_ReadWord
  6263  0F8C  0020               	movlb	0	; select bank0
  6264  0F8D  3558               	lslf	FLASH_WriteWord@i,w
  6265  0F8E  0751               	addwf	FLASH_WriteWord@ramBuf,w
  6266  0F8F  00D4               	movwf	??_FLASH_WriteWord
  6267  0F90  0854               	movf	??_FLASH_WriteWord,w
  6268  0F91  0086               	movwf	6
  6269  0F92  3001               	movlw	1	; select bank2/3
  6270  0F93  0087               	movwf	7
  6271  0F94  0842               	movf	?_FLASH_ReadWord,w
  6272  0F95  3FC0               	movwi [0]fsr1
  6273  0F96  0843               	movf	?_FLASH_ReadWord+1,w
  6274  0F97  3FC1               	movwi [1]fsr1
  6275  0F98  3001               	movlw	1
  6276  0F99  00D4               	movwf	??_FLASH_WriteWord
  6277  0F9A  0854               	movf	??_FLASH_WriteWord,w
  6278  0F9B  07D8               	addwf	FLASH_WriteWord@i,f
  6279  0F9C  3020               	movlw	32
  6280  0F9D  0258               	subwf	FLASH_WriteWord@i,w
  6281  0F9E  1C03               	skipc
  6282  0F9F  2F82               	goto	l1772
  6283  0FA0                     l1778:	
  6284                           
  6285                           ;memory.c: 82: }
  6286                           ;memory.c: 85: ramBuf[offset] = word;
  6287  0FA0  3555               	lslf	FLASH_WriteWord@offset,w
  6288  0FA1  0751               	addwf	FLASH_WriteWord@ramBuf,w
  6289  0FA2  00D4               	movwf	??_FLASH_WriteWord
  6290  0FA3  0854               	movf	??_FLASH_WriteWord,w
  6291  0FA4  0086               	movwf	6
  6292  0FA5  3001               	movlw	1	; select bank2/3
  6293  0FA6  0087               	movwf	7
  6294  0FA7  0852               	movf	FLASH_WriteWord@word,w
  6295  0FA8  3FC0               	movwi [0]fsr1
  6296  0FA9  0853               	movf	FLASH_WriteWord@word+1,w
  6297  0FAA  3FC1               	movwi [1]fsr1
  6298                           
  6299                           ;memory.c: 88: FLASH_WriteBlock(blockStartAddr, ramBuf);
  6300  0FAB  0857               	movf	FLASH_WriteWord@blockStartAddr+1,w
  6301  0FAC  00C6               	movwf	FLASH_WriteBlock@writeAddr+1
  6302  0FAD  0856               	movf	FLASH_WriteWord@blockStartAddr,w
  6303  0FAE  00C5               	movwf	FLASH_WriteBlock@writeAddr
  6304  0FAF  0851               	movf	FLASH_WriteWord@ramBuf,w
  6305  0FB0  00D4               	movwf	??_FLASH_WriteWord
  6306  0FB1  0854               	movf	??_FLASH_WriteWord,w
  6307  0FB2  00C7               	movwf	FLASH_WriteBlock@flashWordArray
  6308  0FB3  3186  26EB         	fcall	_FLASH_WriteBlock
  6309  0FB5  0008               	return
  6310  0FB6                     __end_of_FLASH_WriteWord:	
  6311                           
  6312                           	psect	text18
  6313  06EB                     __ptext18:	
  6314 ;; *************** function _FLASH_WriteBlock *****************
  6315 ;; Defined at:
  6316 ;;		line 91 in file "memory.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  writeAddr       2    3[BANK0 ] unsigned int 
  6319 ;;  flashWordArr    1    5[BANK0 ] PTR unsigned int 
  6320 ;;		 -> myBuf(64), 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  blockStartAd    2    9[BANK0 ] unsigned int 
  6323 ;;  i               1   12[BANK0 ] unsigned char 
  6324 ;;  GIEBitValue     1   11[BANK0 ] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      char 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6334 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6335 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6336 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6337 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6338 ;;Total ram usage:       10 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    3
  6341 ;; This function calls:
  6342 ;;		_FLASH_EraseBlock
  6343 ;; This function is called by:
  6344 ;;		_FLASH_WriteWord
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           
  6349                           ;psect for function _FLASH_WriteBlock
  6350  06EB                     _FLASH_WriteBlock:	
  6351                           
  6352                           ;memory.c: 92: uint16_t blockStartAddr = (uint16_t) (writeAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  6353                           
  6354                           ;incstack = 0
  6355                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6356  06EB  30E0               	movlw	224
  6357  06EC  0020               	movlb	0	; select bank0
  6358  06ED  0545               	andwf	FLASH_WriteBlock@writeAddr,w
  6359  06EE  00CB               	movwf	FLASH_WriteBlock@blockStartAddr
  6360  06EF  303F               	movlw	63
  6361  06F0  0546               	andwf	FLASH_WriteBlock@writeAddr+1,w
  6362  06F1  00CC               	movwf	FLASH_WriteBlock@blockStartAddr+1
  6363                           
  6364                           ;memory.c: 93: uint8_t GIEBitValue = INTCONbits.GIE;
  6365  06F2  3000               	movlw	0
  6366  06F3  1B8B               	btfsc	11,7	;volatile
  6367  06F4  3001               	movlw	1
  6368  06F5  00CD               	movwf	FLASH_WriteBlock@GIEBitValue
  6369                           
  6370                           ;memory.c: 94: uint8_t i;
  6371                           ;memory.c: 97: if (writeAddr != blockStartAddr) {
  6372  06F6  084C               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  6373  06F7  0646               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  6374  06F8  1D03               	skipz
  6375  06F9  2EFC               	goto	u705
  6376  06FA  084B               	movf	FLASH_WriteBlock@blockStartAddr,w
  6377  06FB  0645               	xorwf	FLASH_WriteBlock@writeAddr,w
  6378  06FC                     u705:	
  6379  06FC  1D03               	btfss	3,2
  6380  06FD  0008               	return
  6381                           
  6382                           ;memory.c: 99: }
  6383                           ;memory.c: 101: INTCONbits.GIE = 0;
  6384                           
  6385                           ;memory.c: 98: return -1;
  6386                           ;	Return value of _FLASH_WriteBlock is never used
  6387  06FE  138B               	bcf	11,7	;volatile
  6388                           
  6389                           ;memory.c: 104: FLASH_EraseBlock(writeAddr);
  6390  06FF  0846               	movf	FLASH_WriteBlock@writeAddr+1,w
  6391  0700  00C3               	movwf	FLASH_EraseBlock@startAddr+1
  6392  0701  0845               	movf	FLASH_WriteBlock@writeAddr,w
  6393  0702  00C2               	movwf	FLASH_EraseBlock@startAddr
  6394  0703  318C  24C5  3186   	fcall	_FLASH_EraseBlock
  6395                           
  6396                           ;memory.c: 107: PMCON1bits.CFGS = 0;
  6397  0706  0023               	movlb	3	; select bank3
  6398  0707  1315               	bcf	21,6	;volatile
  6399                           
  6400                           ;memory.c: 108: PMCON1bits.WREN = 1;
  6401  0708  1515               	bsf	21,2	;volatile
  6402                           
  6403                           ;memory.c: 109: PMCON1bits.LWLO = 1;
  6404  0709  1695               	bsf	21,5	;volatile
  6405                           
  6406                           ;memory.c: 111: for (i = 0; i < 32; i++) {
  6407  070A  0020               	movlb	0	; select bank0
  6408  070B  01CE               	clrf	FLASH_WriteBlock@i
  6409  070C  3020               	movlw	32
  6410  070D  024E               	subwf	FLASH_WriteBlock@i,w
  6411  070E  1803               	btfsc	3,0
  6412  070F  2F4D               	goto	l382
  6413  0710                     l1604:	
  6414                           
  6415                           ;memory.c: 113: PMADRL = (writeAddr & 0xFF);
  6416  0710  0845               	movf	FLASH_WriteBlock@writeAddr,w
  6417  0711  0023               	movlb	3	; select bank3
  6418  0712  0091               	movwf	17	;volatile
  6419                           
  6420                           ;memory.c: 115: PMADRH = ((writeAddr & 0xFF00) >> 8);
  6421  0713  0020               	movlb	0	; select bank0
  6422  0714  0846               	movf	FLASH_WriteBlock@writeAddr+1,w
  6423  0715  0023               	movlb	3	; select bank3
  6424  0716  0092               	movwf	18	;volatile
  6425                           
  6426                           ;memory.c: 118: PMDATL = flashWordArray[i];
  6427  0717  0020               	movlb	0	; select bank0
  6428  0718  354E               	lslf	FLASH_WriteBlock@i,w
  6429  0719  0747               	addwf	FLASH_WriteBlock@flashWordArray,w
  6430  071A  00C8               	movwf	??_FLASH_WriteBlock
  6431  071B  0848               	movf	??_FLASH_WriteBlock,w
  6432  071C  0086               	movwf	6
  6433  071D  3001               	movlw	1	; select bank2/3
  6434  071E  0087               	movwf	7
  6435  071F  0801               	movf	1,w
  6436  0720  0023               	movlb	3	; select bank3
  6437  0721  0093               	movwf	19	;volatile
  6438                           
  6439                           ;memory.c: 119: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  6440  0722  0020               	movlb	0	; select bank0
  6441  0723  354E               	lslf	FLASH_WriteBlock@i,w
  6442  0724  0747               	addwf	FLASH_WriteBlock@flashWordArray,w
  6443  0725  00C8               	movwf	??_FLASH_WriteBlock
  6444  0726  0848               	movf	??_FLASH_WriteBlock,w
  6445  0727  0086               	movwf	6
  6446  0728  3001               	movlw	1	; select bank2/3
  6447  0729  0087               	movwf	7
  6448  072A  3F40               	moviw [0]fsr1
  6449  072B  00C9               	movwf	??_FLASH_WriteBlock+1
  6450  072C  3F41               	moviw [1]fsr1
  6451  072D  00CA               	movwf	??_FLASH_WriteBlock+2
  6452  072E  084A               	movf	??_FLASH_WriteBlock+2,w
  6453  072F  0023               	movlb	3	; select bank3
  6454  0730  0094               	movwf	20	;volatile
  6455                           
  6456                           ;memory.c: 121: if (i == (32 - 1)) {
  6457  0731  301F               	movlw	31
  6458  0732  0020               	movlb	0	; select bank0
  6459  0733  064E               	xorwf	FLASH_WriteBlock@i,w
  6460  0734  1D03               	btfss	3,2
  6461  0735  2F38               	goto	l1616
  6462                           
  6463                           ;memory.c: 123: PMCON1bits.LWLO = 0;
  6464  0736  0023               	movlb	3	; select bank3
  6465  0737  1295               	bcf	21,5	;volatile
  6466  0738                     l1616:	
  6467                           
  6468                           ;memory.c: 124: }
  6469                           ;memory.c: 126: PMCON2 = 0x55;
  6470  0738  3055               	movlw	85
  6471  0739  0023               	movlb	3	; select bank3
  6472  073A  0096               	movwf	22	;volsfr
  6473                           
  6474                           ;memory.c: 127: PMCON2 = 0xAA;
  6475  073B  30AA               	movlw	170
  6476  073C  0096               	movwf	22	;volsfr
  6477                           
  6478                           ;memory.c: 128: PMCON1bits.WR = 1;
  6479  073D  1495               	bsf	21,1	;volatile
  6480                           
  6481                           ;memory.c: 129: __nop();
  6482  073E  0000               	nop
  6483                           
  6484                           ;memory.c: 130: __nop();
  6485  073F  0000               	nop
  6486                           
  6487                           ;memory.c: 132: writeAddr++;
  6488  0740  3001               	movlw	1
  6489  0741  0020               	movlb	0	; select bank0
  6490  0742  07C5               	addwf	FLASH_WriteBlock@writeAddr,f
  6491  0743  3000               	movlw	0
  6492  0744  3DC6               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  6493  0745  3001               	movlw	1
  6494  0746  00C8               	movwf	??_FLASH_WriteBlock
  6495  0747  0848               	movf	??_FLASH_WriteBlock,w
  6496  0748  07CE               	addwf	FLASH_WriteBlock@i,f
  6497  0749  3020               	movlw	32
  6498  074A  024E               	subwf	FLASH_WriteBlock@i,w
  6499  074B  1C03               	skipc
  6500  074C  2F10               	goto	l1604
  6501  074D                     l382:	
  6502                           
  6503                           ;memory.c: 133: }
  6504                           ;memory.c: 135: PMCON1bits.WREN = 0;
  6505  074D  0023               	movlb	3	; select bank3
  6506  074E  1115               	bcf	21,2	;volatile
  6507                           
  6508                           ;memory.c: 136: INTCONbits.GIE = GIEBitValue;
  6509  074F  0020               	movlb	0	; select bank0
  6510  0750  0C4D               	rrf	FLASH_WriteBlock@GIEBitValue,w
  6511  0751  1C03               	skipc
  6512  0752  138B               	bcf	11,7	;volatile
  6513  0753  1803               	skipnc
  6514  0754  178B               	bsf	11,7	;volatile
  6515  0755  0008               	return
  6516  0756                     __end_of_FLASH_WriteBlock:	
  6517                           ;memory.c: 138: return 0;
  6518                           ;	Return value of _FLASH_WriteBlock is never used
  6519                           
  6520                           
  6521                           	psect	text19
  6522  0CC5                     __ptext19:	
  6523 ;; *************** function _FLASH_EraseBlock *****************
  6524 ;; Defined at:
  6525 ;;		line 141 in file "memory.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  startAddr       2    0[BANK0 ] unsigned int 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  1    wreg      void 
  6532 ;; Registers used:
  6533 ;;		wreg, status,2, status,0
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6539 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6542 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6543 ;;Total ram usage:        3 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    2
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_FLASH_WriteBlock
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           
  6554                           ;psect for function _FLASH_EraseBlock
  6555  0CC5                     _FLASH_EraseBlock:	
  6556                           
  6557                           ;memory.c: 142: uint8_t GIEBitValue = INTCONbits.GIE;
  6558                           
  6559                           ;incstack = 0
  6560                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  6561  0CC5  3000               	movlw	0
  6562  0CC6  1B8B               	btfsc	11,7	;volatile
  6563  0CC7  3001               	movlw	1
  6564  0CC8  0020               	movlb	0	; select bank0
  6565  0CC9  00C4               	movwf	FLASH_EraseBlock@GIEBitValue
  6566                           
  6567                           ;memory.c: 145: INTCONbits.GIE = 0;
  6568  0CCA  138B               	bcf	11,7	;volatile
  6569                           
  6570                           ;memory.c: 147: PMADRL = (startAddr & 0xFF);
  6571  0CCB  0842               	movf	FLASH_EraseBlock@startAddr,w
  6572  0CCC  0023               	movlb	3	; select bank3
  6573  0CCD  0091               	movwf	17	;volatile
  6574                           
  6575                           ;memory.c: 149: PMADRH = ((startAddr & 0xFF00) >> 8);
  6576  0CCE  0020               	movlb	0	; select bank0
  6577  0CCF  0843               	movf	FLASH_EraseBlock@startAddr+1,w
  6578  0CD0  0023               	movlb	3	; select bank3
  6579  0CD1  0092               	movwf	18	;volatile
  6580                           
  6581                           ;memory.c: 152: PMCON1bits.CFGS = 0;
  6582  0CD2  1315               	bcf	21,6	;volatile
  6583                           
  6584                           ;memory.c: 153: PMCON1bits.FREE = 1;
  6585  0CD3  1615               	bsf	21,4	;volatile
  6586                           
  6587                           ;memory.c: 154: PMCON1bits.WREN = 1;
  6588  0CD4  1515               	bsf	21,2	;volatile
  6589                           
  6590                           ;memory.c: 157: PMCON2 = 0x55;
  6591  0CD5  3055               	movlw	85
  6592  0CD6  0096               	movwf	22	;volsfr
  6593                           
  6594                           ;memory.c: 158: PMCON2 = 0xAA;
  6595  0CD7  30AA               	movlw	170
  6596  0CD8  0096               	movwf	22	;volsfr
  6597                           
  6598                           ;memory.c: 159: PMCON1bits.WR = 1;
  6599  0CD9  1495               	bsf	21,1	;volatile
  6600                           
  6601                           ;memory.c: 160: __nop();
  6602  0CDA  0000               	nop
  6603                           
  6604                           ;memory.c: 161: __nop();
  6605  0CDB  0000               	nop
  6606                           
  6607                           ;memory.c: 163: PMCON1bits.WREN = 0;
  6608  0CDC  0023               	movlb	3	; select bank3
  6609  0CDD  1115               	bcf	21,2	;volatile
  6610                           
  6611                           ;memory.c: 164: INTCONbits.GIE = GIEBitValue;
  6612  0CDE  0020               	movlb	0	; select bank0
  6613  0CDF  0C44               	rrf	FLASH_EraseBlock@GIEBitValue,w
  6614  0CE0  1C03               	skipc
  6615  0CE1  138B               	bcf	11,7	;volatile
  6616  0CE2  1803               	skipnc
  6617  0CE3  178B               	bsf	11,7	;volatile
  6618  0CE4  0008               	return
  6619  0CE5                     __end_of_FLASH_EraseBlock:	
  6620                           
  6621                           	psect	text20
  6622  0CA5                     __ptext20:	
  6623 ;; *************** function _FLASH_ReadWord *****************
  6624 ;; Defined at:
  6625 ;;		line 58 in file "memory.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  flashAddr       2    0[BANK0 ] unsigned int 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  2    0[BANK0 ] unsigned int 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6639 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6642 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6643 ;;Total ram usage:        3 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    2
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_main
  6650 ;;		_FLASH_WriteWord
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           
  6655                           ;psect for function _FLASH_ReadWord
  6656  0CA5                     _FLASH_ReadWord:	
  6657                           
  6658                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
  6659                           
  6660                           ;incstack = 0
  6661                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  6662  0CA5  3000               	movlw	0
  6663  0CA6  1B8B               	btfsc	11,7	;volatile
  6664  0CA7  3001               	movlw	1
  6665  0CA8  0020               	movlb	0	; select bank0
  6666  0CA9  00C4               	movwf	FLASH_ReadWord@GIEBitValue
  6667                           
  6668                           ;memory.c: 61: INTCONbits.GIE = 0;
  6669  0CAA  138B               	bcf	11,7	;volatile
  6670                           
  6671                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
  6672  0CAB  0842               	movf	FLASH_ReadWord@flashAddr,w
  6673  0CAC  0023               	movlb	3	; select bank3
  6674  0CAD  0091               	movwf	17	;volatile
  6675                           
  6676                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
  6677  0CAE  0020               	movlb	0	; select bank0
  6678  0CAF  0843               	movf	FLASH_ReadWord@flashAddr+1,w
  6679  0CB0  0023               	movlb	3	; select bank3
  6680  0CB1  0092               	movwf	18	;volatile
  6681                           
  6682                           ;memory.c: 65: PMCON1bits.CFGS = 0;
  6683  0CB2  1315               	bcf	21,6	;volatile
  6684                           
  6685                           ;memory.c: 66: PMCON1bits.RD = 1;
  6686  0CB3  1415               	bsf	21,0	;volatile
  6687                           
  6688                           ;memory.c: 67: __nop();
  6689  0CB4  0000               	nop
  6690                           
  6691                           ;memory.c: 68: __nop();
  6692  0CB5  0000               	nop
  6693                           
  6694                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
  6695  0CB6  0020               	movlb	0	; select bank0
  6696  0CB7  0C44               	rrf	FLASH_ReadWord@GIEBitValue,w
  6697  0CB8  1C03               	skipc
  6698  0CB9  138B               	bcf	11,7	;volatile
  6699  0CBA  1803               	skipnc
  6700  0CBB  178B               	bsf	11,7	;volatile
  6701                           
  6702                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
  6703  0CBC  0023               	movlb	3	; select bank3
  6704  0CBD  0814               	movf	20,w	;volatile
  6705  0CBE  0020               	movlb	0	; select bank0
  6706  0CBF  00C3               	movwf	?_FLASH_ReadWord+1
  6707  0CC0  0023               	movlb	3	; select bank3
  6708  0CC1  0813               	movf	19,w	;volatile
  6709  0CC2  0020               	movlb	0	; select bank0
  6710  0CC3  00C2               	movwf	?_FLASH_ReadWord
  6711  0CC4  0008               	return
  6712  0CC5                     __end_of_FLASH_ReadWord:	
  6713                           
  6714                           	psect	text21
  6715  0C22                     __ptext21:	
  6716 ;; *************** function _ConfigureOscillator *****************
  6717 ;; Defined at:
  6718 ;;		line 18 in file "system.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;		None
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;		None
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      void 
  6725 ;; Registers used:
  6726 ;;		wreg, status,2, status,0
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6736 ;;Total ram usage:        0 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:    2
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_main
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function _ConfigureOscillator
  6748  0C22                     _ConfigureOscillator:	
  6749                           
  6750                           ;system.c: 20: OSCCONbits.SCS = 0b00;
  6751                           
  6752                           ;incstack = 0
  6753                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  6754  0C22  30FC               	movlw	-4
  6755  0C23  0021               	movlb	1	; select bank1
  6756  0C24  0599               	andwf	25,f	;volatile
  6757  0C25  0008               	return
  6758  0C26                     __end_of_ConfigureOscillator:	
  6759                           
  6760                           	psect	intentry
  6761  0004                     __pintentry:	
  6762 ;; *************** function _isr *****************
  6763 ;; Defined at:
  6764 ;;		line 22 in file "interrupts.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;		None
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;		None
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      void 
  6771 ;; Registers used:
  6772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6780 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6781 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6782 ;;Total ram usage:        5 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    1
  6785 ;; This function calls:
  6786 ;;		i1_set_leds_top
  6787 ;; This function is called by:
  6788 ;;		Interrupt level 1
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792  0004                     _isr:	
  6793                           
  6794                           ;incstack = 0
  6795                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6796  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6797  0005  3180               	pagesel	$
  6798  0006  0020               	movlb	0	; select bank0
  6799  0007  087F               	movf	127,w
  6800  0008  00F8               	movwf	??_isr+4
  6801                           
  6802                           ;interrupts.c: 23: extern volatile long timer;
  6803                           ;interrupts.c: 24: extern volatile long sub_timer;
  6804                           ;interrupts.c: 25: extern volatile long tap_timer;
  6805                           ;interrupts.c: 26: extern volatile long mod_timer;
  6806                           ;interrupts.c: 27: extern volatile long baseline_delay_time;
  6807                           ;interrupts.c: 28: extern volatile long delay_time;
  6808                           ;interrupts.c: 29: extern volatile int top_push_state;
  6809                           ;interrupts.c: 31: if (INTCONbits.TMR0IF == 1) {
  6810  0009  1D0B               	btfss	11,2	;volatile
  6811  000A  286C               	goto	i1l23
  6812                           
  6813                           ;interrupts.c: 32: timer = timer + 1;
  6814  000B  3001               	movlw	1
  6815  000C  00F4               	movwf	??_isr
  6816  000D  3000               	movlw	0
  6817  000E  00F5               	movwf	??_isr+1
  6818  000F  3000               	movlw	0
  6819  0010  00F6               	movwf	??_isr+2
  6820  0011  3000               	movlw	0
  6821  0012  00F7               	movwf	??_isr+3
  6822  0013  082C               	movf	_timer,w	;volatile
  6823  0014  07F4               	addwf	??_isr,f
  6824  0015  082D               	movf	_timer+1,w	;volatile
  6825  0016  3DF5               	addwfc	??_isr+1,f
  6826  0017  082E               	movf	_timer+2,w	;volatile
  6827  0018  3DF6               	addwfc	??_isr+2,f
  6828  0019  082F               	movf	_timer+3,w	;volatile
  6829  001A  3DF7               	addwfc	??_isr+3,f
  6830  001B  0877               	movf	??_isr+3,w
  6831  001C  00AF               	movwf	_timer+3	;volatile
  6832  001D  0876               	movf	??_isr+2,w
  6833  001E  00AE               	movwf	_timer+2	;volatile
  6834  001F  0875               	movf	??_isr+1,w
  6835  0020  00AD               	movwf	_timer+1	;volatile
  6836  0021  0874               	movf	??_isr,w
  6837  0022  00AC               	movwf	_timer	;volatile
  6838                           
  6839                           ;interrupts.c: 33: sub_timer = sub_timer + 1;
  6840  0023  3001               	movlw	1
  6841  0024  00F4               	movwf	??_isr
  6842  0025  3000               	movlw	0
  6843  0026  00F5               	movwf	??_isr+1
  6844  0027  3000               	movlw	0
  6845  0028  00F6               	movwf	??_isr+2
  6846  0029  3000               	movlw	0
  6847  002A  00F7               	movwf	??_isr+3
  6848  002B  0824               	movf	_sub_timer,w	;volatile
  6849  002C  07F4               	addwf	??_isr,f
  6850  002D  0825               	movf	_sub_timer+1,w	;volatile
  6851  002E  3DF5               	addwfc	??_isr+1,f
  6852  002F  0826               	movf	_sub_timer+2,w	;volatile
  6853  0030  3DF6               	addwfc	??_isr+2,f
  6854  0031  0827               	movf	_sub_timer+3,w	;volatile
  6855  0032  3DF7               	addwfc	??_isr+3,f
  6856  0033  0877               	movf	??_isr+3,w
  6857  0034  00A7               	movwf	_sub_timer+3	;volatile
  6858  0035  0876               	movf	??_isr+2,w
  6859  0036  00A6               	movwf	_sub_timer+2	;volatile
  6860  0037  0875               	movf	??_isr+1,w
  6861  0038  00A5               	movwf	_sub_timer+1	;volatile
  6862  0039  0874               	movf	??_isr,w
  6863  003A  00A4               	movwf	_sub_timer	;volatile
  6864                           
  6865                           ;interrupts.c: 34: tap_timer = tap_timer + 1;
  6866  003B  3001               	movlw	1
  6867  003C  00F4               	movwf	??_isr
  6868  003D  3000               	movlw	0
  6869  003E  00F5               	movwf	??_isr+1
  6870  003F  3000               	movlw	0
  6871  0040  00F6               	movwf	??_isr+2
  6872  0041  3000               	movlw	0
  6873  0042  00F7               	movwf	??_isr+3
  6874  0043  0828               	movf	_tap_timer,w	;volatile
  6875  0044  07F4               	addwf	??_isr,f
  6876  0045  0829               	movf	_tap_timer+1,w	;volatile
  6877  0046  3DF5               	addwfc	??_isr+1,f
  6878  0047  082A               	movf	_tap_timer+2,w	;volatile
  6879  0048  3DF6               	addwfc	??_isr+2,f
  6880  0049  082B               	movf	_tap_timer+3,w	;volatile
  6881  004A  3DF7               	addwfc	??_isr+3,f
  6882  004B  0877               	movf	??_isr+3,w
  6883  004C  00AB               	movwf	_tap_timer+3	;volatile
  6884  004D  0876               	movf	??_isr+2,w
  6885  004E  00AA               	movwf	_tap_timer+2	;volatile
  6886  004F  0875               	movf	??_isr+1,w
  6887  0050  00A9               	movwf	_tap_timer+1	;volatile
  6888  0051  0874               	movf	??_isr,w
  6889  0052  00A8               	movwf	_tap_timer	;volatile
  6890                           
  6891                           ;interrupts.c: 35: mod_timer = mod_timer + 1;
  6892  0053  3001               	movlw	1
  6893  0054  00F4               	movwf	??_isr
  6894  0055  3000               	movlw	0
  6895  0056  00F5               	movwf	??_isr+1
  6896  0057  3000               	movlw	0
  6897  0058  00F6               	movwf	??_isr+2
  6898  0059  3000               	movlw	0
  6899  005A  00F7               	movwf	??_isr+3
  6900  005B  0820               	movf	_mod_timer,w	;volatile
  6901  005C  07F4               	addwf	??_isr,f
  6902  005D  0821               	movf	_mod_timer+1,w	;volatile
  6903  005E  3DF5               	addwfc	??_isr+1,f
  6904  005F  0822               	movf	_mod_timer+2,w	;volatile
  6905  0060  3DF6               	addwfc	??_isr+2,f
  6906  0061  0823               	movf	_mod_timer+3,w	;volatile
  6907  0062  3DF7               	addwfc	??_isr+3,f
  6908  0063  0877               	movf	??_isr+3,w
  6909  0064  00A3               	movwf	_mod_timer+3	;volatile
  6910  0065  0876               	movf	??_isr+2,w
  6911  0066  00A2               	movwf	_mod_timer+2	;volatile
  6912  0067  0875               	movf	??_isr+1,w
  6913  0068  00A1               	movwf	_mod_timer+1	;volatile
  6914  0069  0874               	movf	??_isr,w
  6915  006A  00A0               	movwf	_mod_timer	;volatile
  6916                           
  6917                           ;interrupts.c: 36: INTCONbits.TMR0IF = 0;
  6918  006B  110B               	bcf	11,2	;volatile
  6919  006C                     i1l23:	
  6920                           
  6921                           ;interrupts.c: 37: }
  6922                           ;interrupts.c: 39: if (timer >= baseline_delay_time) {
  6923  006C  082F               	movf	_timer+3,w	;volatile
  6924  006D  3A80               	xorlw	128
  6925  006E  00F4               	movwf	??_isr
  6926  006F  0864               	movf	_baseline_delay_time+3,w	;volatile
  6927  0070  3A80               	xorlw	128
  6928  0071  0274               	subwf	??_isr,w
  6929  0072  1D03               	skipz
  6930  0073  287E               	goto	u120_23
  6931  0074  0863               	movf	_baseline_delay_time+2,w	;volatile
  6932  0075  022E               	subwf	_timer+2,w	;volatile
  6933  0076  1D03               	skipz
  6934  0077  287E               	goto	u120_23
  6935  0078  0862               	movf	_baseline_delay_time+1,w	;volatile
  6936  0079  022D               	subwf	_timer+1,w	;volatile
  6937  007A  1D03               	skipz
  6938  007B  287E               	goto	u120_23
  6939  007C  0861               	movf	_baseline_delay_time,w	;volatile
  6940  007D  022C               	subwf	_timer,w	;volatile
  6941  007E                     u120_23:	
  6942  007E  1C03               	skipc
  6943  007F  288B               	goto	i1l1910
  6944                           
  6945                           ;interrupts.c: 40: LATBbits.LATB4 = 0;
  6946  0080  0022               	movlb	2	; select bank2
  6947  0081  120D               	bcf	13,4	;volatile
  6948                           
  6949                           ;interrupts.c: 41: timer = 0;
  6950  0082  3000               	movlw	0
  6951  0083  0020               	movlb	0	; select bank0
  6952  0084  00AF               	movwf	_timer+3	;volatile
  6953  0085  3000               	movlw	0
  6954  0086  00AE               	movwf	_timer+2	;volatile
  6955  0087  3000               	movlw	0
  6956  0088  00AD               	movwf	_timer+1	;volatile
  6957  0089  3000               	movlw	0
  6958  008A  00AC               	movwf	_timer	;volatile
  6959  008B                     i1l1910:	
  6960                           
  6961                           ;interrupts.c: 42: }
  6962                           ;interrupts.c: 44: if (timer >= 20) {
  6963  008B  1BAF               	btfsc	_timer+3,7	;volatile
  6964  008C  289C               	goto	i1l1914
  6965  008D  082F               	movf	_timer+3,w	;volatile
  6966  008E  1D03               	btfss	3,2
  6967  008F  289A               	goto	i1l1912
  6968  0090  082E               	movf	_timer+2,w	;volatile
  6969  0091  1D03               	btfss	3,2
  6970  0092  289A               	goto	i1l1912
  6971  0093  082D               	movf	_timer+1,w	;volatile
  6972  0094  1D03               	btfss	3,2
  6973  0095  289A               	goto	i1l1912
  6974  0096  3014               	movlw	20
  6975  0097  022C               	subwf	_timer,w	;volatile
  6976  0098  1C03               	btfss	3,0
  6977  0099  289C               	goto	i1l1914
  6978  009A                     i1l1912:	
  6979                           
  6980                           ;interrupts.c: 45: LATBbits.LATB4 = 0;
  6981  009A  0022               	movlb	2	; select bank2
  6982  009B  120D               	bcf	13,4	;volatile
  6983  009C                     i1l1914:	
  6984                           
  6985                           ;interrupts.c: 46: }
  6986                           ;interrupts.c: 48: if (sub_timer >= delay_time) {
  6987  009C  0020               	movlb	0	; select bank0
  6988  009D  0827               	movf	_sub_timer+3,w	;volatile
  6989  009E  3A80               	xorlw	128
  6990  009F  00F4               	movwf	??_isr
  6991  00A0  0868               	movf	_delay_time+3,w	;volatile
  6992  00A1  3A80               	xorlw	128
  6993  00A2  0274               	subwf	??_isr,w
  6994  00A3  1D03               	skipz
  6995  00A4  28AF               	goto	u122_23
  6996  00A5  0867               	movf	_delay_time+2,w	;volatile
  6997  00A6  0226               	subwf	_sub_timer+2,w	;volatile
  6998  00A7  1D03               	skipz
  6999  00A8  28AF               	goto	u122_23
  7000  00A9  0866               	movf	_delay_time+1,w	;volatile
  7001  00AA  0225               	subwf	_sub_timer+1,w	;volatile
  7002  00AB  1D03               	skipz
  7003  00AC  28AF               	goto	u122_23
  7004  00AD  0865               	movf	_delay_time,w	;volatile
  7005  00AE  0224               	subwf	_sub_timer,w	;volatile
  7006  00AF                     u122_23:	
  7007  00AF  1C03               	skipc
  7008  00B0  28C5               	goto	i1l1920
  7009                           
  7010                           ;interrupts.c: 49: set_leds_top(top_push_state, 1);
  7011  00B1  087C               	movf	_top_push_state+1,w	;volatile
  7012  00B2  00F1               	movwf	i1set_leds_top@x+1
  7013  00B3  087B               	movf	_top_push_state,w	;volatile
  7014  00B4  00F0               	movwf	i1set_leds_top@x
  7015  00B5  3001               	movlw	1
  7016  00B6  00F2               	movwf	i1set_leds_top@ledState
  7017  00B7  3000               	movlw	0
  7018  00B8  00F3               	movwf	i1set_leds_top@ledState+1
  7019  00B9  318E  26F1  3180   	fcall	i1_set_leds_top
  7020                           
  7021                           ;interrupts.c: 50: sub_timer = 0;
  7022  00BC  3000               	movlw	0
  7023  00BD  0020               	movlb	0	; select bank0
  7024  00BE  00A7               	movwf	_sub_timer+3	;volatile
  7025  00BF  3000               	movlw	0
  7026  00C0  00A6               	movwf	_sub_timer+2	;volatile
  7027  00C1  3000               	movlw	0
  7028  00C2  00A5               	movwf	_sub_timer+1	;volatile
  7029  00C3  3000               	movlw	0
  7030  00C4  00A4               	movwf	_sub_timer	;volatile
  7031  00C5                     i1l1920:	
  7032                           
  7033                           ;interrupts.c: 51: }
  7034                           ;interrupts.c: 53: if (sub_timer >= 20) {
  7035  00C5  1BA7               	btfsc	_sub_timer+3,7	;volatile
  7036  00C6  28DD               	goto	i1l28
  7037  00C7  0827               	movf	_sub_timer+3,w	;volatile
  7038  00C8  1D03               	btfss	3,2
  7039  00C9  28D4               	goto	i1l1922
  7040  00CA  0826               	movf	_sub_timer+2,w	;volatile
  7041  00CB  1D03               	btfss	3,2
  7042  00CC  28D4               	goto	i1l1922
  7043  00CD  0825               	movf	_sub_timer+1,w	;volatile
  7044  00CE  1D03               	btfss	3,2
  7045  00CF  28D4               	goto	i1l1922
  7046  00D0  3014               	movlw	20
  7047  00D1  0224               	subwf	_sub_timer,w	;volatile
  7048  00D2  1C03               	btfss	3,0
  7049  00D3  28DD               	goto	i1l28
  7050  00D4                     i1l1922:	
  7051                           
  7052                           ;interrupts.c: 54: set_leds_top(top_push_state, 0);
  7053  00D4  087C               	movf	_top_push_state+1,w	;volatile
  7054  00D5  00F1               	movwf	i1set_leds_top@x+1
  7055  00D6  087B               	movf	_top_push_state,w	;volatile
  7056  00D7  00F0               	movwf	i1set_leds_top@x
  7057  00D8  3000               	movlw	0
  7058  00D9  00F2               	movwf	i1set_leds_top@ledState
  7059  00DA  00F3               	movwf	i1set_leds_top@ledState+1
  7060  00DB  318E  26F1         	fcall	i1_set_leds_top
  7061  00DD                     i1l28:	
  7062  00DD  0878               	movf	??_isr+4,w
  7063  00DE  0020               	movlb	0	; select bank0
  7064  00DF  00FF               	movwf	127
  7065  00E0  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7066  00E1  0009               	retfie
  7067  00E2                     __end_of_isr:	
  7068                           
  7069                           	psect	text23
  7070  0EF1                     __ptext23:	
  7071 ;; *************** function i1_set_leds_top *****************
  7072 ;; Defined at:
  7073 ;;		line 13 in file "LEDs.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  x               2    0[COMMON] int 
  7076 ;;  ledState        2    2[COMMON] int 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;		None
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  1    wreg      void 
  7081 ;; Registers used:
  7082 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7091 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7092 ;;Total ram usage:        4 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_isr
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           
  7102                           ;psect for function i1_set_leds_top
  7103  0EF1                     i1_set_leds_top:	
  7104                           
  7105                           ;LEDs.c: 14: LATFbits.LATF0 = 0;
  7106                           
  7107                           ;incstack = 0
  7108                           ; Regs used in i1_set_leds_top: [wreg-fsr0h+status,2+status,0]
  7109  0EF1  0027               	movlb	7	; select bank7
  7110  0EF2  100C               	bcf	12,0	;volatile
  7111                           
  7112                           ;LEDs.c: 15: LATFbits.LATF1 = 0;
  7113  0EF3  108C               	bcf	12,1	;volatile
  7114                           
  7115                           ;LEDs.c: 16: LATFbits.LATF2 = 0;
  7116  0EF4  110C               	bcf	12,2	;volatile
  7117                           
  7118                           ;LEDs.c: 17: LATFbits.LATF3 = 0;
  7119  0EF5  118C               	bcf	12,3	;volatile
  7120                           
  7121                           ;LEDs.c: 18: LATFbits.LATF4 = 0;
  7122  0EF6  120C               	bcf	12,4	;volatile
  7123                           
  7124                           ;LEDs.c: 19: switch (x) {
  7125  0EF7  2F16               	goto	i1l1894
  7126  0EF8                     i1l1882:	
  7127                           ;LEDs.c: 20: case 1:
  7128                           
  7129                           
  7130                           ;LEDs.c: 21: LATFbits.LATF0 = ledState;
  7131  0EF8  0C72               	rrf	i1set_leds_top@ledState,w
  7132  0EF9  1C03               	skipc
  7133  0EFA  100C               	bcf	12,0	;volatile
  7134  0EFB  1803               	skipnc
  7135  0EFC  140C               	bsf	12,0	;volatile
  7136                           
  7137                           ;LEDs.c: 22: break;
  7138  0EFD  0008               	return
  7139  0EFE                     i1l1884:	
  7140                           ;LEDs.c: 23: case 2:
  7141                           
  7142                           
  7143                           ;LEDs.c: 24: LATFbits.LATF1 = ledState;
  7144  0EFE  0C72               	rrf	i1set_leds_top@ledState,w
  7145  0EFF  1C03               	skipc
  7146  0F00  108C               	bcf	12,1	;volatile
  7147  0F01  1803               	skipnc
  7148  0F02  148C               	bsf	12,1	;volatile
  7149                           
  7150                           ;LEDs.c: 25: break;
  7151  0F03  0008               	return
  7152  0F04                     i1l1886:	
  7153                           ;LEDs.c: 26: case 3:
  7154                           
  7155                           
  7156                           ;LEDs.c: 27: LATFbits.LATF2 = ledState;
  7157  0F04  0C72               	rrf	i1set_leds_top@ledState,w
  7158  0F05  1C03               	skipc
  7159  0F06  110C               	bcf	12,2	;volatile
  7160  0F07  1803               	skipnc
  7161  0F08  150C               	bsf	12,2	;volatile
  7162                           
  7163                           ;LEDs.c: 28: break;
  7164  0F09  0008               	return
  7165  0F0A                     i1l1888:	
  7166                           ;LEDs.c: 29: case 4:
  7167                           
  7168                           
  7169                           ;LEDs.c: 30: LATFbits.LATF3 = ledState;
  7170  0F0A  0C72               	rrf	i1set_leds_top@ledState,w
  7171  0F0B  1C03               	skipc
  7172  0F0C  118C               	bcf	12,3	;volatile
  7173  0F0D  1803               	skipnc
  7174  0F0E  158C               	bsf	12,3	;volatile
  7175                           
  7176                           ;LEDs.c: 31: break;
  7177  0F0F  0008               	return
  7178  0F10                     i1l1890:	
  7179                           ;LEDs.c: 32: case 5:
  7180                           
  7181                           
  7182                           ;LEDs.c: 33: LATFbits.LATF4 = ledState;
  7183  0F10  0C72               	rrf	i1set_leds_top@ledState,w
  7184  0F11  1C03               	skipc
  7185  0F12  120C               	bcf	12,4	;volatile
  7186  0F13  1803               	skipnc
  7187  0F14  160C               	bsf	12,4	;volatile
  7188                           
  7189                           ;LEDs.c: 37: }
  7190                           
  7191                           ;LEDs.c: 36: break;
  7192                           
  7193                           ;LEDs.c: 35: case 6:
  7194                           
  7195                           ;LEDs.c: 34: break;
  7196  0F15  0008               	return
  7197  0F16                     i1l1894:	
  7198                           
  7199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7200                           ; Switch size 1, requested type "space"
  7201                           ; Number of cases is 1, Range of values is 0 to 0
  7202                           ; switch strategies available:
  7203                           ; Name         Instructions Cycles
  7204                           ; simple_byte            4     3 (average)
  7205                           ; direct_byte            8     6 (fixed)
  7206                           ; jumptable            260     6 (fixed)
  7207                           ;	Chosen strategy is simple_byte
  7208  0F16  0871               	movf	i1set_leds_top@x+1,w
  7209  0F17  3A00               	xorlw	0	; case 0
  7210  0F18  1903               	skipnz
  7211  0F19  2F1B               	goto	i1l2112
  7212  0F1A  2F2F               	goto	i1l401
  7213  0F1B                     i1l2112:	
  7214                           
  7215                           ; Switch size 1, requested type "space"
  7216                           ; Number of cases is 6, Range of values is 1 to 6
  7217                           ; switch strategies available:
  7218                           ; Name         Instructions Cycles
  7219                           ; simple_byte           19    10 (average)
  7220                           ; direct_byte           21     9 (fixed)
  7221                           ; jumptable            263     9 (fixed)
  7222                           ;	Chosen strategy is simple_byte
  7223  0F1B  0870               	movf	i1set_leds_top@x,w
  7224  0F1C  3A01               	xorlw	1	; case 1
  7225  0F1D  1903               	skipnz
  7226  0F1E  2EF8               	goto	i1l1882
  7227  0F1F  3A03               	xorlw	3	; case 2
  7228  0F20  1903               	skipnz
  7229  0F21  2EFE               	goto	i1l1884
  7230  0F22  3A01               	xorlw	1	; case 3
  7231  0F23  1903               	skipnz
  7232  0F24  2F04               	goto	i1l1886
  7233  0F25  3A07               	xorlw	7	; case 4
  7234  0F26  1903               	skipnz
  7235  0F27  2F0A               	goto	i1l1888
  7236  0F28  3A01               	xorlw	1	; case 5
  7237  0F29  1903               	skipnz
  7238  0F2A  2F10               	goto	i1l1890
  7239  0F2B  3A03               	xorlw	3	; case 6
  7240  0F2C  1903               	skipnz
  7241  0F2D  2F2F               	goto	i1l401
  7242  0F2E  2F2F               	goto	i1l401
  7243  0F2F                     i1l401:	
  7244  0F2F  0008               	return
  7245  0F30                     __end_ofi1_set_leds_top:	
  7246  007E                     btemp	set	126	;btemp
  7247  007E                     int$flags	set	126
  7248  007E                     wtemp	set	126
  7249  007E                     wtemp0	set	126
  7250  0080                     wtemp1	set	128
  7251  0082                     wtemp2	set	130
  7252  0084                     wtemp3	set	132
  7253  0086                     wtemp4	set	134
  7254  0088                     wtemp5	set	136
  7255  007F                     wtemp6	set	127
  7256  007E                     ttemp	set	126
  7257  007E                     ttemp0	set	126
  7258  0081                     ttemp1	set	129
  7259  0084                     ttemp2	set	132
  7260  0087                     ttemp3	set	135
  7261  007F                     ttemp4	set	127
  7262  007E                     ltemp	set	126
  7263  007E                     ltemp0	set	126
  7264  0082                     ltemp1	set	130
  7265  0086                     ltemp2	set	134
  7266  0080                     ltemp3	set	128


Data Sizes:
    Strings     32
    Constant    10
    Data        1058
    BSS         232
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     31      79
    BANK1            80      0      78
    BANK2            80      0      72
    BANK3            80      0      64
    BANK4            80      0      58
    BANK5            80      0      58
    BANK6            80      0      58
    BANK7            80      0      58
    BANK8            80      0      80
    BANK9            80      0      80
    BANK10           80      0       0
    BANK11            8      0       0
    BANK12            0      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[32]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> myBuf(BANK3[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> myBuf(BANK3[64]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_set_leds_top

Critical Paths under _main in BANK0

    _main->_printf
    _wait_ms->___lmul
    _printf->___lwmod
    ___lwmod->___lwdiv
    _FLASH_WriteWord->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4651
                                             30 BANK0      1     1      0
                _ConfigureOscillator
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                            _InitApp
                          _init_uart
                             _printf
                    _set_leds_bottom
                       _set_leds_top
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _wait_ms                                              2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     220
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _set_leds_top                                         4     0      4     540
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_leds_bottom                                      2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              24    20      4    1827
                                             14 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     348
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
                           _init_pwm
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
                        _init_timer0
                        _init_timer2
 ---------------------------------------------------------------------------------
 (3) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_WriteWord                                     10     5      5    1505
                                             13 BANK0     10     5      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    10     7      3     572
                                              3 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     3     1      2     131
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     259
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0     236
                                              4 COMMON     5     5      0
                     i1_set_leds_top
 ---------------------------------------------------------------------------------
 (5) i1_set_leds_top                                       4     0      4     236
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _FLASH_ReadWord
   _FLASH_WriteWord
     _FLASH_ReadWord
     _FLASH_WriteBlock
       _FLASH_EraseBlock
   _InitApp
     _init_adc
     _init_pwm
       _init_timer0
       _init_timer2
   _init_uart
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
   _set_leds_bottom
   _set_leds_top
   _wait_ms
     ___lmul

 _isr (ROOT)
   i1_set_leds_top

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      48       9       90.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      3A      13       72.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3A      15       72.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0     2BA      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      3A      18       72.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      3A      20       72.5%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      50      24      100.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     2BA      28        0.0%
BANK11               8      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12               0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Oct 09 18:26:16 2016

                   __CFG_CP$OFF 0000             ___wmul@multiplicand 0044                             l212 0DC5  
                           l401 0FFF                             l410 0D85                             l412 0DA2  
                           l180 04EA                             l405 0D79                             l342 0C33  
                           l430 05B6                             l407 0D7C                             l408 0D7F  
                           l192 056D                             l409 0D82                             l185 052D  
                           l194 0570                             l195 0574                             l196 0589  
                           l382 074D                             l448 065F                             l465 06EA  
                           l469 0C92                             _PR2 001B                             u705 06FC  
                           u815 0D56                             u825 0D5D                             u925 0CEF  
                           u855 0DE0                             u775 0C93                             u945 0CFE  
                           u785 0C98                             u875 0DEA                             u955 0D05  
                           u885 0DF4                             u895 0DFC                             _isr 0004  
                           _tap 0120                    __CFG_BORV$LO 0000                             wreg 0009  
                  __CFG_IESO$ON 0000                ?_FLASH_WriteWord 004F                    __CFG_FOSC$HS 0000  
       __end_of_set_leds_bottom 0DA3  FLASH_WriteBlock@flashWordArray 0047                    __CFG_LVP$OFF 0000  
                          _B25k 0420                            l2010 0560                            l2002 0537  
                          l2110 0D8E                            l2014 0578                            l2016 058D  
                          l2106 057E                            l2108 0FEB                            l1604 0710  
                          l1616 0738                            l1712 0D04                            l1640 0C75  
                          l1800 05C4                            l1706 0CEC                            l1730 0FDD  
                          l1722 0FBD                            l1708 0CF8                            l1716 0D0D  
                          l1804 05D1                            l1724 0FC5                            l1660 0D4B  
                          l1646 0C8C                            l1814 05FF                            l1726 0FCD  
                          l1734 0FE5                            l1832 0634                            l1816 0617  
                          l1728 0FD5                            l1664 0D55                            l1690 0DFB  
                          l1682 0DDD                            l1826 062E                            l1772 0F82  
                          l1684 0DE9                            l1860 0697                            l1694 0E04  
                          l1862 069B                            l1870 06B0                            l1854 0688  
                          l1846 067B                            l1838 0653                            l1758 0D88  
                          l1848 067E                            l1792 05B1                            l1778 0FA0  
                          l1866 06A8                            l1954 0497                            l1876 06B5  
                          l1980 04D2                            l1972 04B9                            l1798 05BB  
                          l1878 0595                            l1994 050C                            l1986 04F4  
                          ?_isr 0070                            STR_1 100A                            u1055 0649  
                          u1240 0495                            u1305 0506                            u1095 066E  
                          u1335 0547                            u1345 055B                            u1275 04CB  
                          i1l23 006C                            i1l28 00DD                    __CFG_WRT$OFF 0000  
                 __CFG_FCMEN$ON 0000                            _iCnt 00D6                            _mod1 0220  
                          _mod2 02A0                            _mod3 0320                            _mod4 03A0  
                          _mod5 2378                            _main 0413                            _tap1 00A0  
                          _tap2 00A4                            _tap3 00A8                            _tap4 00AC  
                          _tap5 00B0                            _tap6 00B4                            _tap7 00B8  
                          _tap8 00BC                            _tap9 00C0                            fsr0h 0005  
                          fsr1h 0007                            fsr0l 0004                            indf0 0000  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
             ?_FLASH_WriteBlock 0045                   __CFG_BOREN$ON 0000                            ltemp 007E  
                          start 00E2                            ttemp 007E                            wtemp 007E  
            ??_FLASH_WriteBlock 0048                 ?i1_set_leds_top 0070                   __CFG_MCLRE$ON 0000  
               __end_of_InitApp 0D42                           ??_isr 0074                           ?_main 0070  
                         _CCPR1 0291                           _CCPR2 0298                           _CCPR3 0311  
                         _CCPR4 0318                   __CFG_WDTE$OFF 0000                 __end_of___lwdiv 0E09  
                         i1l401 0F2F                 __end_of___lwmod 0D12                           _TXREG 019A  
                         _iB25k 04A0             _ConfigureOscillator 0C22                    ?_init_timer0 0070  
                  ?_init_timer2 0070             ___lmul@multiplicand 0046                           _delay 23F2  
                         _tap10 0160                 __end_of_dpowers 100A                           _myBuf 01A0  
               __end_of_isdigit 0C77                           _timer 002C                           _putch 0C31  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                 __end_of_wait_ms 0DD4                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
          ?_ConfigureOscillator 0070                 __initialization 00E4                    __end_of_main 0590  
                __CFG_LPBOR$OFF 0000                          ??_main 0060         __size_of_FLASH_ReadWord 0020  
              ?_set_leds_bottom 0042       FLASH_WriteBlock@writeAddr 0045                          _ADRESH 009C  
                        _ADRESL 009B             _baseline_delay_time 0061                          ?_putch 0070  
                        i1l2112 0F1B                          u120_23 007E                          i1l1910 008B  
                        i1l1920 00C5                          i1l1912 009A                          i1l1922 00D4  
                        i1l1914 009C                          u122_23 00AF                          i1l1890 0F10  
                        i1l1882 0EF8                          i1l1884 0EFE                          i1l1886 0F04  
                        i1l1894 0F16                          i1l1888 0F0A                          _PMADRH 0192  
                        _PMADRL 0191                          _PMDATH 0194                          _PMDATL 0193  
                        _PMCON2 0196       __size_of_FLASH_EraseBlock 0020                  _debounce_count 00CC  
                _debounce_mode1 00CE                  _debounce_mode2 00D0                       ??_InitApp 0042  
         ??_ConfigureOscillator 0042                  __CFG_PWRTE$OFF 0000                          ___lmul 0D42  
                        ___wmul 0C89   FLASH_WriteWord@blockStartAddr 0056                  __CFG_STVREN$ON 0000  
                     ??___lwdiv 0046                       ??___lwmod 004E             FLASH_WriteWord@word 0052  
              __end_of_init_adc 0800                __end_of_init_pwm 0F71                          _preset 00DA  
                        _printf 0590                   _incoming_data 00DE                    __pdataBIGRAM 2378  
       FLASH_ReadWord@flashAddr 0042                    __pdataCOMMON 007B                       ??_isdigit 0042  
                     ??_wait_ms 0050         __end_of__initialization 0197                  _top_push_state 007B  
                __pcstackCOMMON 0070                    __pidataBANK0 0C5A                    __pidataBANK1 0C77  
                  __pidataBANK4 0EB7                    __pidataBANK5 0E7D                    __pidataBANK6 0E43  
                  __pidataBANK7 0E09                    __pidataBANK8 0756                    __pidataBANK9 07A6  
              FLASH_WriteWord@i 0058                   __end_of_putch 0C39                  _OPTION_REGbits 0095  
   FLASH_WriteBlock@GIEBitValue 004D            __size_of_init_timer0 0007            __size_of_init_timer2 0009  
                       ??_putch 0042                      __pbssBANK0 0020                      __pbssBANK1 00A0  
                    __pbssBANK2 0120                      __pbssBANK3 01A0                ??i1_set_leds_top 0074  
               __CFG_VCAPEN$OFF 0000              __size_of_init_uart 0004                      _delay_time 0065  
                    _delayfound 00D4                      __pmaintext 0413                         ?___lmul 0042  
                       ?___wmul 0042                      __pintentry 0004                  ___lmul@product 004A  
                       ?_printf 0050       __size_of_FLASH_WriteBlock 006B                  _FLASH_ReadWord 0CA5  
               _debounce_bypass 00CA                _FLASH_EraseBlock 0CC5        __size_of_FLASH_WriteWord 0045  
                     ?_init_adc 0070                       ?_init_pwm 0070                         _InitApp 0D12  
                 ?_set_leds_top 0042                      _knob1_prev 00E0                      _knob2_prev 00E2  
                    _knob3_prev 00E4                      _knob4_prev 00E6                      _knob5_prev 00E8  
               __size_of___lmul 0030                      _knob_1_pos 0079                      _knob_2_pos 0034  
               __size_of___wmul 001C                      _knob_3_pos 0036                      _knob_4_pos 0038  
                    _knob_5_pos 003A                         ___lwdiv 0DD4                         ___lwmod 0CE5  
        __end_of_FLASH_ReadWord 0CC5                         __ptext1 0DA3                         __ptext2 0D42  
                       __ptext3 0FB6                         __ptext4 0D72                         __ptext5 0590  
                       __ptext6 0C31                         __ptext7 0C68                         __ptext8 0C89  
                       __ptext9 0CE5                 __size_of_printf 015B                         _dpowers 1000  
                     _T2CONbits 001C                         _isdigit 0C68                    __size_of_isr 00DE  
             __end_of_init_uart 0C2A                         _wait_ms 0DA3                         clrloop0 0C4F  
          end_of_initialization 0197                         init_ram 0C42                      ??_init_adc 0042  
                       initloop 0C43                      ??_init_pwm 0042                  ??_set_leds_top 0046  
        i1set_leds_top@ledState 0072                       _RCSTAbits 019D                         printf@c 005F  
                       printf@f 0050                     wait_ms@time 004E                    __pstringtext 1000  
     FLASH_ReadWord@GIEBitValue 0044                 ?_FLASH_ReadWord 0042                       _PORTDbits 000F  
                     _PORTEbits 0010                       _TRISBbits 008D                       _TRISCbits 008E  
                     _TRISDbits 008F                       _TRISEbits 0090                       _TRISFbits 030C  
                     _TRISGbits 030D                       _SPI_Value 00C8     __end_of_ConfigureOscillator 0C26  
                   _CCP1CONbits 0293        __size_of_set_leds_bottom 0031                     printf@width 005D  
                   _CCP2CONbits 029A                       _TXSTAbits 019E                     _CCP3CONbits 0313  
                   _CCP4CONbits 031A                     _CCP5CONbits 031E               FLASH_WriteBlock@i 004E  
                   _CCP6CONbits 0613                     _CCP7CONbits 0616                     _CCP8CONbits 0619  
             ??_FLASH_WriteWord 0054                     _CCP9CONbits 061C            set_leds_top@ledState 0044  
                __end_of___lmul 0D72                   __pidataBIGRAM 019B                  __end_of___wmul 0CA5  
                 __pidataCOMMON 0002                _FLASH_WriteBlock 06EB                  __end_of_printf 06EB  
           start_initialization 00E4                     __end_of_isr 00E2                        ??___lmul 004A  
                      ??___wmul 0046                     __pdataBANK0 0061                     __pdataBANK1 00DC  
                   __pdataBANK4 0220                     __pdataBANK5 02A0                     __pdataBANK6 0320  
                   __pdataBANK7 03A0                     __pdataBANK8 0420                     __pdataBANK9 04A0  
   FLASH_EraseBlock@GIEBitValue 0044                   _tap_iteration 006D        __end_of_FLASH_EraseBlock 0CE5  
                      ??_printf 0054                   ??_init_timer0 0042                   ??_init_timer2 0042  
                   __pbssCOMMON 0079            __end_of_set_leds_top 1000                       ___latbits 0003  
                  _bypass_state 0030                   __pcstackBANK0 0042                    _isdigit$1435 0042  
                 _delay_counter 00D2                        ?_InitApp 0070               __size_of_init_adc 000A  
             __size_of_init_pwm 0041                ___lwdiv@dividend 0044               ??_set_leds_bottom 0044  
                      ?___lwdiv 0042                        ?___lwmod 004A                     _blink_state 0069  
                      ?_isdigit 0070                        _CCPTMRS0 029D                        _CCPTMRS1 029E  
                      _CCPTMRS2 029F                        ?_wait_ms 004E                ___lwdiv@quotient 0047  
                     _init_uart 0C26                  __size_of_putch 0008        FLASH_WriteWord@flashAddr 004F  
FLASH_WriteBlock@blockStartAddr 004B             __end_of_init_timer0 0C31             __end_of_init_timer2 0C42  
                     _mod_value 00D8                       _mod_timer 0020                  ___wmul@product 0046  
                      _LATBbits 010D                        _LATDbits 010F                        _LATFbits 038C  
                      _LATGbits 038D                  _mod_delay_time 00EA                       clear_ram0 0C4E  
                     _tap_timer 0028                       _tap_total 0164                   set_leds_top@x 0042  
                      _PIR1bits 0011       FLASH_EraseBlock@startAddr 0042                ??_FLASH_ReadWord 0044  
       __size_ofi1_set_leds_top 003F                   _farkelSnuffle 0032                       _sub_timer 0024  
                    _ADCON0bits 009D                      _ADCON1bits 009E               ___wmul@multiplier 0042  
                    printf@flag 005C                      printf@prec 0059                      ?_init_uart 0070  
             ___lmul@multiplier 0042                 _FLASH_WriteWord 0F71        __end_of_FLASH_WriteBlock 0756  
              __size_of_InitApp 0030                     _mode1_state 003E                     _mode2_state 0040  
                    _APFCONbits 011D                __size_of___lwdiv 0035                __size_of___lwmod 002D  
         __size_of_set_leds_top 004A                      _ANSELEbits 0190                      _ANSELFbits 040C  
              set_leds_bottom@x 0042                     _init_timer0 0C2A                     _init_timer2 0C39  
              __size_of_isdigit 000F              _delay_time_changed 00DC                 ___lwdiv@divisor 0042  
               ___lwdiv@counter 0049                        __ptext10 0DD4                        __ptext11 0C26  
                      __ptext20 0CA5                        __ptext12 0D12                        __ptext21 0C22  
                      __ptext13 0F30                        __ptext14 0C39                        __ptext23 0EF1  
                      __ptext15 0C2A                        __ptext16 07F6                        __ptext17 0F71  
                      __ptext18 06EB                        __ptext19 0CC5                __size_of_wait_ms 0031  
         FLASH_WriteWord@ramBuf 0051           FLASH_WriteWord@offset 0055                     _mod_counter 003C  
                      _init_adc 07F6                   __size_of_main 017D                        _init_pwm 0F30  
  __size_of_ConfigureOscillator 0004                    _set_leds_top 0FB6                        _num_taps 00EC  
                      int$flags 007E                 i1set_leds_top@x 0070                       printf@val 005A  
             ?_FLASH_EraseBlock 0042                       putch@data 0042              ??_FLASH_EraseBlock 0044  
                    _INTCONbits 000B         __end_of_FLASH_WriteWord 0FB6                     _tap_history 014C  
                      isdigit@c 0043                     ??_init_uart 0042                        intlevel1 0000  
               _set_leds_bottom 0D72                      _PMCON1bits 0195                ___lwmod@dividend 004C  
             __CFG_CLKOUTEN$OFF 0000                      _OSCCONbits 0099                  i1_set_leds_top 0EF1  
                      printf@ap 0058                    wait_ms@timel 00C4                 ___lwmod@divisor 004A  
               ___lwmod@counter 004F                    _CCP10CONbits 061F               _bottom_push_state 006B  
        __end_ofi1_set_leds_top 0F30  
